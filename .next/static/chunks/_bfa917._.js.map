{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,8OAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8VAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/dashboard/agents/_components/AgentCard.tsx"],"sourcesContent":["import { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useRouter } from \"next/navigation\";\n\ninterface AgentCardProps {\n  name: string;\n  status: \"running\" | \"stopped\";\n  description: string;\n  expertise: string[];\n  schedule: {\n    POST_INTERVAL_MINUTES: number;\n    content_focus: string[];\n  };\n  onStatusToggle: () => Promise<void>;\n}\n\nexport function AgentCard({\n  name,\n  status,\n  description,\n  expertise,\n  schedule,\n  onStatusToggle,\n}: AgentCardProps) {\n  const router = useRouter();\n\n  return (\n    <Card className=\"p-6 bg-[#130627] border border-purple-500/20\">\n      <div className=\"flex justify-between items-start mb-4\">\n        <div>\n          <h3 className=\"text-xl font-bold mb-2\">{name}</h3>\n          <p className=\"text-gray-400 mb-2\">{description}</p>\n          <div className=\"flex gap-2 flex-wrap\">\n            {expertise.map((exp) => (\n              <Badge key={exp} variant=\"secondary\">\n                {exp}\n              </Badge>\n            ))}\n          </div>\n        </div>\n        <Badge variant={status === \"running\" ? \"destructive\" : \"secondary\"}>\n          {status}\n        </Badge>\n      </div>\n\n      <div className=\"grid md:grid-cols-2 gap-4 mb-4\">\n        <div className=\"bg-black/20 p-4 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">Posting Schedule</h4>\n          <p className=\"text-sm text-gray-400\">\n            Every {schedule.POST_INTERVAL_MINUTES} minutes\n          </p>\n        </div>\n        <div className=\"bg-black/20 p-4 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">Content Focus</h4>\n          <div className=\"flex gap-2 flex-wrap\">\n            {schedule.content_focus.map((focus) => (\n              <Badge key={focus} variant=\"outline\">\n                {focus}\n              </Badge>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex gap-2\">\n        <Button\n          onClick={() => router.push(`/dashboard/agents/${name}`)}\n          className=\"flex-1 bg-purple-500/20 hover:bg-purple-500/30 text-white\"\n        >\n          <Icons.settings className=\"w-4 h-4 mr-2\" />\n          Manage\n        </Button>\n        <Button\n          onClick={onStatusToggle}\n          className=\"flex-1 bg-purple-600 hover:bg-purple-700 text-white\"\n        >\n          {status === \"running\" ? (\n            <Icons.pause className=\"w-4 h-4 mr-2\" />\n          ) : (\n            <Icons.play className=\"w-4 h-4 mr-2\" />\n          )}\n          {status === \"running\" ? \"Pause\" : \"Start\"}\n        </Button>\n      </div>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AAcO,SAAS,UAAU,EACxB,IAAI,EACJ,MAAM,EACN,WAAW,EACX,SAAS,EACT,QAAQ,EACR,cAAc,EACC;;IACf,MAAM,SAAS,CAAA,GAAA,sSAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,8VAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8VAAC;gBAAI,WAAU;;kCACb,8VAAC;;0CACC,8VAAC;gCAAG,WAAU;0CAA0B;;;;;;0CACxC,8VAAC;gCAAE,WAAU;0CAAsB;;;;;;0CACnC,8VAAC;gCAAI,WAAU;0CACZ,UAAU,GAAG,CAAC,CAAC,oBACd,8VAAC,oIAAA,CAAA,QAAK;wCAAW,SAAQ;kDACtB;uCADS;;;;;;;;;;;;;;;;kCAMlB,8VAAC,oIAAA,CAAA,QAAK;wBAAC,SAAS,WAAW,YAAY,gBAAgB;kCACpD;;;;;;;;;;;;0BAIL,8VAAC;gBAAI,WAAU;;kCACb,8VAAC;wBAAI,WAAU;;0CACb,8VAAC;gCAAG,WAAU;0CAAmB;;;;;;0CACjC,8VAAC;gCAAE,WAAU;;oCAAwB;oCAC5B,SAAS,qBAAqB;oCAAC;;;;;;;;;;;;;kCAG1C,8VAAC;wBAAI,WAAU;;0CACb,8VAAC;gCAAG,WAAU;0CAAmB;;;;;;0CACjC,8VAAC;gCAAI,WAAU;0CACZ,SAAS,aAAa,CAAC,GAAG,CAAC,CAAC,sBAC3B,8VAAC,oIAAA,CAAA,QAAK;wCAAa,SAAQ;kDACxB;uCADS;;;;;;;;;;;;;;;;;;;;;;0BAQpB,8VAAC;gBAAI,WAAU;;kCACb,8VAAC,qIAAA,CAAA,SAAM;wBACL,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,kBAAkB,EAAE,MAAM;wBACtD,WAAU;;0CAEV,8VAAC,oIAAA,CAAA,QAAK,CAAC,QAAQ;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAG7C,8VAAC,qIAAA,CAAA,SAAM;wBACL,SAAS;wBACT,WAAU;;4BAET,WAAW,0BACV,8VAAC,oIAAA,CAAA,QAAK,CAAC,KAAK;gCAAC,WAAU;;;;;qDAEvB,8VAAC,oIAAA,CAAA,QAAK,CAAC,IAAI;gCAAC,WAAU;;;;;;4BAEvB,WAAW,YAAY,UAAU;;;;;;;;;;;;;;;;;;;AAK5C;GAtEgB;;QAQC,sSAAA,CAAA,YAAS;;;KARV"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/dashboard/agents/_components/AgentsHeader.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { useRouter } from \"next/navigation\";\n\nexport function AgentsHeader() {\n  const router = useRouter();\n\n  return (\n    <div className=\"flex justify-between items-center mb-8\">\n      <div>\n        <h1 className=\"text-3xl font-bold\">Social Media Agents</h1>\n        <p className=\"text-gray-400 mt-1\">\n          Manage your automated social presence\n        </p>\n      </div>\n      <Button\n        onClick={() => router.push(\"/create/social\")}\n        className=\"bg-purple-500 hover:bg-purple-600\"\n      >\n        <Icons.plus className=\"w-4 h-4 mr-2\" />\n        New Agent\n      </Button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAEO,SAAS;;IACd,MAAM,SAAS,CAAA,GAAA,sSAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,8VAAC;QAAI,WAAU;;0BACb,8VAAC;;kCACC,8VAAC;wBAAG,WAAU;kCAAqB;;;;;;kCACnC,8VAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAIpC,8VAAC,qIAAA,CAAA,SAAM;gBACL,SAAS,IAAM,OAAO,IAAI,CAAC;gBAC3B,WAAU;;kCAEV,8VAAC,oIAAA,CAAA,QAAK,CAAC,IAAI;wBAAC,WAAU;;;;;;oBAAiB;;;;;;;;;;;;;AAK/C;GApBgB;;QACC,sSAAA,CAAA,YAAS;;;KADV"}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/dashboard/agents/_components/AgentsEmptyState.tsx"],"sourcesContent":["import { Icons } from \"@/components/ui/icons\";\nimport { Button } from \"@/components/ui/button\";\nimport { useRouter } from \"next/navigation\";\n\nexport function AgentsEmptyState() {\n  const router = useRouter();\n\n  return (\n    <div className=\"text-center py-12\">\n      <Icons.bot className=\"w-12 h-12 mx-auto text-gray-400 mb-4\" />\n      <h3 className=\"text-xl font-bold mb-2\">No Agents Found</h3>\n      <p className=\"text-gray-400 mb-6\">\n        Create your first social media agent to get started\n      </p>\n      <Button\n        onClick={() => router.push(\"/create/social\")}\n        className=\"bg-purple-500 hover:bg-purple-600\"\n      >\n        <Icons.plus className=\"w-4 h-4 mr-2\" />\n        Create Agent\n      </Button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAEO,SAAS;;IACd,MAAM,SAAS,CAAA,GAAA,sSAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,8VAAC;QAAI,WAAU;;0BACb,8VAAC,oIAAA,CAAA,QAAK,CAAC,GAAG;gBAAC,WAAU;;;;;;0BACrB,8VAAC;gBAAG,WAAU;0BAAyB;;;;;;0BACvC,8VAAC;gBAAE,WAAU;0BAAqB;;;;;;0BAGlC,8VAAC,qIAAA,CAAA,SAAM;gBACL,SAAS,IAAM,OAAO,IAAI,CAAC;gBAC3B,WAAU;;kCAEV,8VAAC,oIAAA,CAAA,QAAK,CAAC,IAAI;wBAAC,WAAU;;;;;;oBAAiB;;;;;;;;;;;;;AAK/C;GAnBgB;;QACC,sSAAA,CAAA,YAAS;;;KADV"}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/service/CharacterManagementService.ts"],"sourcesContent":["interface CharacterSchedule {\n  POST_TWEETS: boolean;\n  POST_INTERVAL_MINUTES: number;\n  content_focus: string[];\n  trend_focus: string[];\n  engagement_criteria: string[];\n  reply_style: string[];\n}\n\ninterface CharacterProfile {\n  name: string;\n  description: string;\n  personality: string[];\n  expertise: string[];\n  communication_rules?: {\n    rules?: string[];\n    words_to_avoid?: string[];\n  };\n}\n\nexport interface CharacterStatus {\n  name: string;\n  isRunning: boolean;\n  uptime?: number;\n  stats?: {\n    tweets: number;\n    replies: number;\n    errors: number;\n  };\n}\n\nclass CharacterManagementService {\n  private apiUrl =\n    process.env.AUTONOMYS_AGENTS_API_URL || \"http://localhost:3001/api\";\n\n  async updateCharacterSchedule(\n    characterName: string,\n    schedule: Partial<CharacterSchedule>\n  ) {\n    try {\n      const response = await fetch(\n        `${this.apiUrl}/characters/${characterName}/schedule`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            twitter: schedule,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`API error: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Failed to update character schedule:\", error);\n      throw new Error(\"Schedule update failed\");\n    }\n  }\n\n  async getCharacterSchedule(characterName: string) {\n    try {\n      console.log(this.apiUrl);\n      const response = await fetch(\n        `${this.apiUrl}/characters/${characterName}/schedule`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`API error: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Failed to get character schedule:\", error);\n      throw new Error(\"Failed to retrieve schedule\");\n    }\n  }\n\n  async updateCharacterProfile(\n    characterName: string,\n    profile: Partial<CharacterProfile>\n  ) {\n    try {\n      const response = await fetch(\n        `${this.apiUrl}/characters/${characterName}/profile`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(profile),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`API error: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Failed to update character profile:\", error);\n      throw new Error(\"Profile update failed\");\n    }\n  }\n\n  async getCharacterProfile(characterName: string) {\n    try {\n      console.log(this.apiUrl);\n      const response = await fetch(\n        `${this.apiUrl}/characters/${characterName}/profile`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`API error: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Failed to get character profile:\", error);\n      throw new Error(\"Failed to retrieve profile\");\n    }\n  }\n\n  async startCharacter(characterName: string) {\n    try {\n      const response = await fetch(\n        `${this.apiUrl}/characters/${characterName}/start`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`API error: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Failed to start character:\", error);\n      throw new Error(\"Character start failed\");\n    }\n  }\n\n  async stopCharacter(characterName: string) {\n    try {\n      const response = await fetch(\n        `${this.apiUrl}/characters/${characterName}/stop`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`API error: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Failed to stop character:\", error);\n      throw new Error(\"Character stop failed\");\n    }\n  }\n\n  async getAllCharactersStatus(): Promise<CharacterStatus[]> {\n    try {\n      const response = await fetch(`${this.apiUrl}/characters/status`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`API error: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Failed to get all character statuses:\", error);\n      throw new Error(\"Failed to retrieve character statuses\");\n    }\n  }\n\n  async getCharacterStatus(characterName: string): Promise<CharacterStatus> {\n    try {\n      const response = await fetch(\n        `${this.apiUrl}/characters/${characterName}/status`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`API error: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Failed to get character status:\", error);\n      throw new Error(\"Failed to retrieve character status\");\n    }\n  }\n}\n\nexport default CharacterManagementService;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 598, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/constant.ts"],"sourcesContent":["import { Address } from \"viem\";\nimport { abi as Erc20TokenFactoryABI } from \"./compiledContracts/Erc20TokenFactory.json\";\nimport { abi as AgentRegistryABI } from \"./compiledContracts/AgentRegistry.json\";\n\nexport const evmContractAddress = process.env\n  .NEXT_PUBLIC_EVM_CONTRACT_ADDRESS as Address;\n\nif (!evmContractAddress) {\n  throw new Error(\"EVM contract address is not set\");\n}\n\nexport const wagmiContractConfig = {\n  address: evmContractAddress,\n  abi: Erc20TokenFactoryABI,\n} as const;\n\nexport const agentRegistryAddress = process.env\n  .NEXT_PUBLIC_AGENT_REGISTRY_ADDRESS as Address;\n\nif (!agentRegistryAddress) {\n  throw new Error(\"Agent registry address is not set\");\n}\n\nexport const wagmiAgentRegistryConfig = {\n  address: agentRegistryAddress,\n  abi: AgentRegistryABI,\n} as const;\n\nexport const LOCAL_RPC_URL = \"http://127.0.0.1:8545\";\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEkC;;;AAA3B,MAAM;AAGb,uCAAyB;;AAEzB;AAEO,MAAM,sBAAsB;IACjC,SAAS;IACT,KAAK,4HAAA,CAAA,MAAoB;AAC3B;AAEO,MAAM;AAGb,uCAA2B;;AAE3B;AAEO,MAAM,2BAA2B;IACtC,SAAS;IACT,KAAK,wHAAA,CAAA,MAAgB;AACvB;AAEO,MAAM,gBAAgB"}},
    {"offset": {"line": 646, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 652, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/hooks/OnChain/useReadContracts.ts"],"sourcesContent":["import { useReadContract } from \"wagmi\";\nimport { wagmiContractConfig, wagmiAgentRegistryConfig } from \"@/lib/constant\";\n\ninterface TokenShowcase {\n  owner: string;\n  chain: number; // Chain enum: 0=SECRETNETWORK, 1=EVM, 2=SOLANA, 3=TON\n  tokenAddress: string;\n  showcaseCid: string;\n  tokenMetadataCid: string;\n  createdAt: bigint;\n}\n\ninterface UserTokenInfo {\n  chain: number;\n  tokenAddress: string;\n  showcaseCid: string;\n  tokenMetadataCid: string;\n  hasShowcase: boolean;\n}\n\ninterface Agent {\n  originalName: string;\n  encodedName: string;\n  count: bigint;\n  exists: boolean;\n}\n\n// Create separate hooks for dynamic queries\nexport function useTokenShowcaseByAddress(tokenAddress: string) {\n  const { data, isError, isLoading } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getTokenShowcaseByAddress\",\n    args: [tokenAddress],\n  });\n\n  return {\n    data: data as TokenShowcase,\n    isError,\n    isLoading,\n  };\n}\n\nexport function useTokenShowcasesByPage(page: number, pageSize: number) {\n  const { data, isError, isLoading } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getTokenShowcasesByPage\",\n    args: [page, pageSize],\n  });\n\n  return {\n    data: data as TokenShowcase[],\n    isError,\n    isLoading,\n  };\n}\n\nexport function useShowcaseCid(ownerBytes: string, index: number) {\n  const { data, isError, isLoading } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getShowcaseCid\",\n    args: [ownerBytes, index],\n  });\n\n  return {\n    data: data as string,\n    isError,\n    isLoading,\n  };\n}\n\nexport function useAgentsByWallet(owner: string) {\n  const { data, isError, isLoading } = useReadContract({\n    ...wagmiAgentRegistryConfig,\n    functionName: \"getAgentsByWallet\",\n    args: [owner],\n  });\n\n  return {\n    data: data as Agent[],\n    isError,\n    isLoading,\n  };\n}\n\nexport function useReadContracts(ownerAddress: string) {\n  // For all chains, we'll use the address directly as a string\n  const ownerString = ownerAddress;\n\n  // Read token count for owner\n  const {\n    data: tokenCount,\n    isError: tokenCountError,\n    isLoading: tokenCountLoading,\n  } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getTokenCount\",\n    args: [ownerString],\n  });\n\n  // Read token details for owner\n  const {\n    data: tokenDetails,\n    isError: tokenDetailsError,\n    isLoading: tokenDetailsLoading,\n  } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getTokenContract\",\n    args: [ownerString],\n  });\n\n  console.log(tokenDetails, \"tokenDe\");\n\n  // Read all token showcases\n  const {\n    data: allShowcases,\n    isError: allShowcasesError,\n    isLoading: allShowcasesLoading,\n  } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getAllTokenShowcases\",\n    args: [],\n  });\n\n  // Read showcase count\n  const {\n    data: showcaseCount,\n    isError: showcaseCountError,\n    isLoading: showcaseCountLoading,\n  } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getShowcaseCount\",\n    args: [],\n  });\n\n  return {\n    tokenCount: tokenCount as number,\n    tokenDetails: tokenDetails as UserTokenInfo[],\n    allShowcases: allShowcases as TokenShowcase[],\n    showcaseCount: showcaseCount as number,\n    isError:\n      tokenCountError ||\n      tokenDetailsError ||\n      allShowcasesError ||\n      showcaseCountError,\n    isLoading:\n      tokenCountLoading ||\n      tokenDetailsLoading ||\n      allShowcasesLoading ||\n      showcaseCountLoading,\n  };\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 805, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/dashboard/agents/page.tsx"],"sourcesContent":["\"use client\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { AgentCard } from \"@/app/dashboard/agents/_components/AgentCard\";\nimport { AgentsHeader } from \"@/app/dashboard/agents/_components/AgentsHeader\";\nimport { AgentsEmptyState } from \"@/app/dashboard/agents/_components/AgentsEmptyState\";\nimport CharacterManagementService from \"../../../../service/CharacterManagementService\";\nimport { toast } from \"sonner\";\nimport { useAccount } from \"wagmi\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\n\nimport { useAgentsByWallet } from \"@/hooks/OnChain/useReadContracts\";\nimport useSWR from \"swr\";\nimport { useTonWallet } from \"../../../../tonconnect\";\nimport { useSecretNetwork } from \"@/providers/secretNetworkContext\";\n\nexport default function AgentsPage() {\n  const { isConnected: isEvmConnected, address: evmAddress } = useAccount();\n  const { connected: isSolanaConnected, publicKey: solanaAddress } =\n    useWallet();\n  const { isConnected: isSecretConnected, address: secretAddress } =\n    useSecretNetwork();\n  const tonWallet = useTonWallet();\n  const isTonConnected = !!tonWallet;\n\n  const getWalletAddress = () => {\n    if (isEvmConnected) return evmAddress;\n    if (isSolanaConnected) return solanaAddress?.toString();\n    if (isSecretConnected) return secretAddress;\n    if (isTonConnected) return tonWallet?.account.address;\n    return undefined;\n  };\n\n  const walletAddress = getWalletAddress();\n  const isConnected =\n    isEvmConnected || isSolanaConnected || isSecretConnected || isTonConnected;\n  const { data: agents = [] } = useAgentsByWallet(walletAddress || \"\");\n  const service = new CharacterManagementService();\n\n  // Fetch agent details using SWR\n  const fetcher = async (encodedNames: string[]) => {\n    const details = await Promise.all(\n      encodedNames.map(async (name) => {\n        const [schedule, profile, status] = await Promise.all([\n          service.getCharacterSchedule(name),\n          service.getCharacterProfile(name),\n          service.getCharacterStatus(name),\n        ]);\n        return { name, schedule, profile, status };\n      })\n    );\n    return details;\n  };\n\n  // Use SWR to fetch agent details\n  const {\n    data: agentDetails,\n    isLoading,\n    mutate,\n  } = useSWR(\n    agents.length ? [agents.map((agent) => agent.encodedName)] : null,\n    fetcher\n  );\n\n  const handleStatusToggle = async (\n    agentName: string,\n    currentStatus: \"running\" | \"stopped\"\n  ) => {\n    try {\n      if (currentStatus === \"running\") {\n        await service.stopCharacter(agentName);\n      } else {\n        await service.startCharacter(agentName);\n      }\n      // Revalidate the data\n      await mutate();\n      toast.success(\n        `Agent ${\n          currentStatus === \"running\" ? \"stopped\" : \"started\"\n        } successfully`\n      );\n    } catch (error) {\n      console.error(\"Failed to toggle agent status:\", error);\n      toast.error(\"Failed to update agent status\");\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <div className=\"container max-w-6xl mx-auto px-4 py-16 text-center\">\n        <h2 className=\"text-2xl font-bold mb-4\">Connect Your Wallet</h2>\n        <p className=\"text-gray-500\">\n          Please connect your wallet to view and manage your agents\n        </p>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"container max-w-6xl mx-auto px-4 py-16 text-center\">\n        <Icons.spinner className=\"w-8 h-8 animate-spin mx-auto\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container max-w-6xl mx-auto px-4 py-16\">\n      <AgentsHeader />\n\n      {!agentDetails?.length ? (\n        <AgentsEmptyState />\n      ) : (\n        <div className=\"grid gap-6\">\n          {agentDetails.map((agent) => (\n            <AgentCard\n              key={agent.name}\n              name={agent.name}\n              status={agent.status.isRunning ? \"running\" : \"stopped\"}\n              description={agent.profile.description}\n              expertise={agent.profile.expertise}\n              schedule={agent.schedule.twitter}\n              onStatusToggle={() =>\n                handleStatusToggle(\n                  agent.name,\n                  agent.status.isRunning ? \"running\" : \"stopped\"\n                )\n              }\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 990, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}