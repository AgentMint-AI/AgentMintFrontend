{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/constant.ts"],"sourcesContent":["import { Address } from \"viem\";\nimport { abi as Erc20TokenFactoryABI } from \"./compiledContracts/Erc20TokenFactory.json\";\n\n// if (!process.env.NEXT_PUBLIC_EVM_CONTRACT_ADDRESS) {\n//   throw new Error(\"NEXT_PUBLIC_EVM_CONTRACT_ADDRESS is not set\");\n// }\n\nexport const evmContractAddress = process.env\n  .NEXT_PUBLIC_EVM_CONTRACT_ADDRESS as Address;\n\nexport const wagmiContractConfig = {\n  address: evmContractAddress,\n  abi: Erc20TokenFactoryABI,\n} as const;\n\nexport const LOCAL_RPC_URL = \"http://127.0.0.1:8545\";\n"],"names":[],"mappings":";;;;;AACA;AAMkC;;AAA3B,MAAM;AAGN,MAAM,sBAAsB;IACjC,SAAS;IACT,KAAK,4HAAA,CAAA,MAAoB;AAC3B;AAEO,MAAM,gBAAgB"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/hooks/OnChain/useReadContracts.ts"],"sourcesContent":["import { useReadContract } from \"wagmi\";\nimport { wagmiContractConfig } from \"@/lib/constant\";\n\ninterface TokenShowcase {\n  owner: string;\n  chain: number; // Chain enum: 0=SECRETNETWORK, 1=EVM, 2=SOLANA, 3=TON\n  tokenAddress: string;\n  showcaseCid: string;\n  tokenMetadataCid: string;\n  createdAt: bigint;\n}\n\ninterface UserTokenInfo {\n  chain: number;\n  tokenAddress: string;\n  showcaseCid: string;\n  tokenMetadataCid: string;\n  hasShowcase: boolean;\n}\n\n// Create separate hooks for dynamic queries\nexport function useTokenShowcaseByAddress(tokenAddress: string) {\n  const { data, isError, isLoading } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getTokenShowcaseByAddress\",\n    args: [tokenAddress],\n  });\n\n  return {\n    data: data as TokenShowcase,\n    isError,\n    isLoading,\n  };\n}\n\nexport function useTokenShowcasesByPage(page: number, pageSize: number) {\n  const { data, isError, isLoading } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getTokenShowcasesByPage\",\n    args: [page, pageSize],\n  });\n\n  return {\n    data: data as TokenShowcase[],\n    isError,\n    isLoading,\n  };\n}\n\nexport function useShowcaseCid(ownerBytes: string, index: number) {\n  const { data, isError, isLoading } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getShowcaseCid\",\n    args: [ownerBytes, index],\n  });\n\n  return {\n    data: data as string,\n    isError,\n    isLoading,\n  };\n}\n\nexport function useReadContracts(ownerAddress: string) {\n  // For all chains, we'll use the address directly as a string\n  const ownerString = ownerAddress;\n\n  // Read token count for owner\n  const {\n    data: tokenCount,\n    isError: tokenCountError,\n    isLoading: tokenCountLoading,\n  } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getTokenCount\",\n    args: [ownerString],\n  });\n\n  // Read token details for owner\n  const {\n    data: tokenDetails,\n    isError: tokenDetailsError,\n    isLoading: tokenDetailsLoading,\n  } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getTokenContract\",\n    args: [ownerString],\n  });\n\n  // Read all token showcases\n  const {\n    data: allShowcases,\n    isError: allShowcasesError,\n    isLoading: allShowcasesLoading,\n  } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getAllTokenShowcases\",\n    args: [],\n  });\n\n  // Read showcase count\n  const {\n    data: showcaseCount,\n    isError: showcaseCountError,\n    isLoading: showcaseCountLoading,\n  } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getShowcaseCount\",\n    args: [],\n  });\n\n  return {\n    tokenCount: tokenCount as number,\n    tokenDetails: tokenDetails as UserTokenInfo[],\n    allShowcases: allShowcases as TokenShowcase[],\n    showcaseCount: showcaseCount as number,\n    isError:\n      tokenCountError ||\n      tokenDetailsError ||\n      allShowcasesError ||\n      showcaseCountError,\n    isLoading:\n      tokenCountLoading ||\n      tokenDetailsLoading ||\n      allShowcasesLoading ||\n      showcaseCountLoading,\n  };\n}\n"],"names":[],"mappings":";;;;;;AACA;AADA;;;;AAqBO,SAAS,0BAA0B,YAAoB;;IAC5D,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,+WAAA,CAAA,kBAAe,AAAD,EAAE;QACnD,GAAG,yHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM;YAAC;SAAa;IACtB;IAEA,OAAO;QACL,MAAM;QACN;QACA;IACF;AACF;GAZgB;;QACuB,+WAAA,CAAA,kBAAe;;;AAa/C,SAAS,wBAAwB,IAAY,EAAE,QAAgB;;IACpE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,+WAAA,CAAA,kBAAe,AAAD,EAAE;QACnD,GAAG,yHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM;YAAC;YAAM;SAAS;IACxB;IAEA,OAAO;QACL,MAAM;QACN;QACA;IACF;AACF;IAZgB;;QACuB,+WAAA,CAAA,kBAAe;;;AAa/C,SAAS,eAAe,UAAkB,EAAE,KAAa;;IAC9D,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,+WAAA,CAAA,kBAAe,AAAD,EAAE;QACnD,GAAG,yHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM;YAAC;YAAY;SAAM;IAC3B;IAEA,OAAO;QACL,MAAM;QACN;QACA;IACF;AACF;IAZgB;;QACuB,+WAAA,CAAA,kBAAe;;;AAa/C,SAAS,iBAAiB,YAAoB;;IACnD,6DAA6D;IAC7D,MAAM,cAAc;IAEpB,6BAA6B;IAC7B,MAAM,EACJ,MAAM,UAAU,EAChB,SAAS,eAAe,EACxB,WAAW,iBAAiB,EAC7B,GAAG,CAAA,GAAA,+WAAA,CAAA,kBAAe,AAAD,EAAE;QAClB,GAAG,yHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM;YAAC;SAAY;IACrB;IAEA,+BAA+B;IAC/B,MAAM,EACJ,MAAM,YAAY,EAClB,SAAS,iBAAiB,EAC1B,WAAW,mBAAmB,EAC/B,GAAG,CAAA,GAAA,+WAAA,CAAA,kBAAe,AAAD,EAAE;QAClB,GAAG,yHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM;YAAC;SAAY;IACrB;IAEA,2BAA2B;IAC3B,MAAM,EACJ,MAAM,YAAY,EAClB,SAAS,iBAAiB,EAC1B,WAAW,mBAAmB,EAC/B,GAAG,CAAA,GAAA,+WAAA,CAAA,kBAAe,AAAD,EAAE;QAClB,GAAG,yHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM,EAAE;IACV;IAEA,sBAAsB;IACtB,MAAM,EACJ,MAAM,aAAa,EACnB,SAAS,kBAAkB,EAC3B,WAAW,oBAAoB,EAChC,GAAG,CAAA,GAAA,+WAAA,CAAA,kBAAe,AAAD,EAAE;QAClB,GAAG,yHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM,EAAE;IACV;IAEA,OAAO;QACL,YAAY;QACZ,cAAc;QACd,cAAc;QACd,eAAe;QACf,SACE,mBACA,qBACA,qBACA;QACF,WACE,qBACA,uBACA,uBACA;IACJ;AACF;IAhEgB;;QASV,+WAAA,CAAA,kBAAe;QAWf,+WAAA,CAAA,kBAAe;QAWf,+WAAA,CAAA,kBAAe;QAWf,+WAAA,CAAA,kBAAe"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,8OAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8VAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/dashboard/tokens/_components/TokenGrid.tsx"],"sourcesContent":["import { Card } from \"@/components/ui/card\";\nimport { formatAddress } from \"@/lib/utils\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Link from \"next/link\";\n\ninterface TokenGridProps {\n  tokens: Array<{\n    chain: number;\n    tokenAddress: string;\n    showcaseCid: string;\n    hasShowcase: boolean;\n  }>;\n}\n\nexport function TokenGrid({ tokens }: TokenGridProps) {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8\">\n      {tokens.map((token) => (\n        <Link\n          href={`/dashboard/tokens/${token.tokenAddress}`}\n          key={token.tokenAddress}\n        >\n          <Card className=\"p-6 hover:border-purple-500/50 transition-colors\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <span className=\"font-medium\">\n                {formatAddress(token.tokenAddress)}\n              </span>\n              <Badge variant={token.hasShowcase ? \"default\" : \"secondary\"}>\n                {token.hasShowcase ? \"Showcased\" : \"Draft\"}\n              </Badge>\n            </div>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm text-gray-500\">\n                <span>Chain</span>\n                <span>{getChainName(token.chain)}</span>\n              </div>\n              {/* Add more token details here */}\n            </div>\n          </Card>\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nfunction getChainName(chainId: number): string {\n  const chains = {\n    0: \"Secret Network\",\n    1: \"EVM\",\n    2: \"Solana\",\n    3: \"TON\",\n  };\n  return chains[chainId as keyof typeof chains] || \"Unknown\";\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAWO,SAAS,UAAU,EAAE,MAAM,EAAkB;IAClD,qBACE,8VAAC;QAAI,WAAU;kBACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8VAAC,gUAAA,CAAA,UAAI;gBACH,MAAM,CAAC,kBAAkB,EAAE,MAAM,YAAY,EAAE;0BAG/C,cAAA,8VAAC,mIAAA,CAAA,OAAI;oBAAC,WAAU;;sCACd,8VAAC;4BAAI,WAAU;;8CACb,8VAAC;oCAAK,WAAU;8CACb,CAAA,GAAA,sHAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,YAAY;;;;;;8CAEnC,8VAAC,oIAAA,CAAA,QAAK;oCAAC,SAAS,MAAM,WAAW,GAAG,YAAY;8CAC7C,MAAM,WAAW,GAAG,cAAc;;;;;;;;;;;;sCAGvC,8VAAC;4BAAI,WAAU;sCACb,cAAA,8VAAC;gCAAI,WAAU;;kDACb,8VAAC;kDAAK;;;;;;kDACN,8VAAC;kDAAM,aAAa,MAAM,KAAK;;;;;;;;;;;;;;;;;;;;;;;eAdhC,MAAM,YAAY;;;;;;;;;;AAuBjC;KA7BgB;AA+BhB,SAAS,aAAa,OAAe;IACnC,MAAM,SAAS;QACb,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;IACL;IACA,OAAO,MAAM,CAAC,QAA+B,IAAI;AACnD"}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/dashboard/tokens/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useRouter } from \"next/navigation\";\nimport { useReadContracts } from \"@/hooks/OnChain/useReadContracts\";\nimport { TokenGrid } from \"./_components/TokenGrid\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { useAccount } from \"wagmi\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { useSecretNetwork } from \"@/providers/secretNetworkContext\";\nimport { useTonWallet } from \"../../../../tonconnect/hooks/useTonWallet\";\n\nexport default function TokensPage() {\n  const router = useRouter();\n  const { isConnected: isEvmConnected, address: evmAddress } = useAccount();\n  const { connected: isSolanaConnected, publicKey: solanaAddress } =\n    useWallet();\n  const { isConnected: isSecretConnected, address: secretAddress } =\n    useSecretNetwork();\n  const tonWallet = useTonWallet();\n  const isTonConnected = !!tonWallet;\n\n  const getWalletAddress = () => {\n    if (isEvmConnected) return evmAddress;\n    if (isSolanaConnected) return solanaAddress?.toString();\n    if (isSecretConnected) return secretAddress;\n    if (isTonConnected) return tonWallet?.account.address;\n    return undefined;\n  };\n\n  const walletAddress = getWalletAddress();\n  const { tokenDetails, isLoading, isError } = useReadContracts(\n    walletAddress || \"\"\n  );\n\n  if (isLoading) {\n    return (\n      <div className=\"container max-w-6xl mx-auto px-4 py-16 text-center\">\n        <Icons.spinner className=\"w-8 h-8 animate-spin mx-auto\" />\n      </div>\n    );\n  }\n\n  if (isError) {\n    return (\n      <div className=\"container max-w-6xl mx-auto px-4 py-16\">\n        <Card className=\"p-8 text-center\">\n          <Icons.alertCircle className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-bold text-red-500 mb-2\">\n            Failed to load tokens\n          </h2>\n          <p className=\"text-gray-500 mb-4\">\n            There was an error loading your tokens. Please try again.\n          </p>\n          <Button onClick={() => window.location.reload()}>\n            <Icons.refresh className=\"w-4 h-4 mr-2\" />\n            Retry\n          </Button>\n        </Card>\n      </div>\n    );\n  }\n\n  if (!walletAddress) {\n    return (\n      <div className=\"container max-w-6xl mx-auto px-4 py-16\">\n        <Card className=\"p-8 text-center\">\n          <Icons.wallet className=\"w-12 h-12 text-yellow-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-bold mb-2\">Wallet Not Connected</h2>\n          <p className=\"text-gray-500 mb-4\">\n            Please connect a wallet to view your tokens.\n          </p>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container max-w-6xl mx-auto px-4 py-16\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <div>\n          <h1 className=\"text-3xl font-bold mb-2\">Your Tokens</h1>\n          <p className=\"text-gray-500\">\n            Manage and monitor your token portfolio\n          </p>\n        </div>\n        <Button\n          onClick={() => router.push(\"/create/token\")}\n          className=\"bg-purple-500 hover:bg-purple-600\"\n        >\n          <Icons.plus className=\"w-4 h-4 mr-2\" />\n          Create New Token\n        </Button>\n      </div>\n\n      <TokenGrid tokens={tokenDetails || []} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAHA;AACA;;;AATA;;;;;;;;;;;AAae,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,sSAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,aAAa,cAAc,EAAE,SAAS,UAAU,EAAE,GAAG,CAAA,GAAA,0WAAA,CAAA,aAAU,AAAD;IACtE,MAAM,EAAE,WAAW,iBAAiB,EAAE,WAAW,aAAa,EAAE,GAC9D,CAAA,GAAA,oYAAA,CAAA,YAAS,AAAD;IACV,MAAM,EAAE,aAAa,iBAAiB,EAAE,SAAS,aAAa,EAAE,GAC9D,CAAA,GAAA,4IAAA,CAAA,mBAAgB,AAAD;IACjB,MAAM,YAAY,CAAA,GAAA,sIAAA,CAAA,eAAY,AAAD;IAC7B,MAAM,iBAAiB,CAAC,CAAC;IAEzB,MAAM,mBAAmB;QACvB,IAAI,gBAAgB,OAAO;QAC3B,IAAI,mBAAmB,OAAO,eAAe;QAC7C,IAAI,mBAAmB,OAAO;QAC9B,IAAI,gBAAgB,OAAO,WAAW,QAAQ;QAC9C,OAAO;IACT;IAEA,MAAM,gBAAgB;IACtB,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8IAAA,CAAA,mBAAgB,AAAD,EAC1D,iBAAiB;IAGnB,IAAI,WAAW;QACb,qBACE,8VAAC;YAAI,WAAU;sBACb,cAAA,8VAAC,oIAAA,CAAA,QAAK,CAAC,OAAO;gBAAC,WAAU;;;;;;;;;;;IAG/B;IAEA,IAAI,SAAS;QACX,qBACE,8VAAC;YAAI,WAAU;sBACb,cAAA,8VAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8VAAC,oIAAA,CAAA,QAAK,CAAC,WAAW;wBAAC,WAAU;;;;;;kCAC7B,8VAAC;wBAAG,WAAU;kCAAsC;;;;;;kCAGpD,8VAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAGlC,8VAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;;0CAC3C,8VAAC,oIAAA,CAAA,QAAK,CAAC,OAAO;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;IAMpD;IAEA,IAAI,CAAC,eAAe;QAClB,qBACE,8VAAC;YAAI,WAAU;sBACb,cAAA,8VAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8VAAC,oIAAA,CAAA,QAAK,CAAC,MAAM;wBAAC,WAAU;;;;;;kCACxB,8VAAC;wBAAG,WAAU;kCAAyB;;;;;;kCACvC,8VAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;;;;;;IAM1C;IAEA,qBACE,8VAAC;QAAI,WAAU;;0BACb,8VAAC;gBAAI,WAAU;;kCACb,8VAAC;;0CACC,8VAAC;gCAAG,WAAU;0CAA0B;;;;;;0CACxC,8VAAC;gCAAE,WAAU;0CAAgB;;;;;;;;;;;;kCAI/B,8VAAC,qIAAA,CAAA,SAAM;wBACL,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;;0CAEV,8VAAC,oIAAA,CAAA,QAAK,CAAC,IAAI;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;0BAK3C,8VAAC,iKAAA,CAAA,YAAS;gBAAC,QAAQ,gBAAgB,EAAE;;;;;;;;;;;;AAG3C;GAtFwB;;QACP,sSAAA,CAAA,YAAS;QACqC,0WAAA,CAAA,aAAU;QAErE,oYAAA,CAAA,YAAS;QAET,4IAAA,CAAA,mBAAgB;QACA,sIAAA,CAAA,eAAY;QAYe,8IAAA,CAAA,mBAAgB;;;KAnBvC"}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}