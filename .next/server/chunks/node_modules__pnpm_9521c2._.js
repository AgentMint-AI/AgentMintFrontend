module.exports = {

"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/download.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.downloadObject = void 0;
const downloadObject = (api, query)=>__awaiter(void 0, void 0, void 0, function*() {
        const response = yield api.sendRequest(`/objects/${query.cid}/download`, {
            method: 'GET'
        });
        if (!response.ok) {
            throw new Error(`Failed to download file: ${response.statusText}`);
        }
        if (!response.body) {
            throw new Error('No body returned from download request');
        }
        return response.body;
    });
exports.downloadObject = downloadObject;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/read.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getMe = exports.getObjectMetadata = exports.getObjectOwners = exports.getObjectUploadStatus = exports.getObject = exports.getDeleted = exports.getSharedWithMe = exports.getRoots = void 0;
/**
 * Retrieves the root objects based on the specified scope.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithPagination<{ scope: Scope }>} query - The query parameters including scope, limit, and offset.
 * @returns {Promise<ObjectSummary[]>} - A promise that resolves to an array of ObjectSummary representing the root objects.
 * @throws {Error} - Throws an error if the request fails.
 */ const getRoots = (api, query)=>__awaiter(void 0, void 0, void 0, function*() {
        const response = yield api.sendRequest(`/objects/roots?scope=${query.scope}&limit=${query.limit}&offset=${query.offset}`, {
            method: 'GET'
        });
        if (!response.ok) {
            throw new Error(`Failed to get roots: ${response.statusText}`);
        }
        return response.json();
    });
exports.getRoots = getRoots;
/**
 * Retrieves the objects that have been shared with the authenticated user.
 *
 * This method sends a request to the server to fetch a list of objects
 * that are shared with the user, based on the specified pagination parameters.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithPagination} query - The query parameters including limit and offset for pagination.
 * @returns {Promise<ObjectSummary[]>} - A promise that resolves to an array of ObjectSummary representing the shared objects.
 * @throws {Error} - Throws an error if the request fails.
 */ const getSharedWithMe = (api, query)=>__awaiter(void 0, void 0, void 0, function*() {
        const response = yield api.sendRequest(`/objects/roots/shared?limit=${query.limit}&offset=${query.offset}`, {
            method: 'GET'
        });
        if (!response.ok) {
            throw new Error(`Failed to get shared with me: ${response.statusText}`);
        }
        return response.json();
    });
exports.getSharedWithMe = getSharedWithMe;
/**
 * Retrieves the objects that have been marked as deleted.
 *
 * This method sends a request to the server to fetch a list of objects
 * that have been deleted, based on the specified pagination parameters.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithPagination} query - The query parameters including limit and offset for pagination.
 * @returns {Promise<ObjectSummary[]>} - A promise that resolves to an array of ObjectSummary representing the deleted objects.
 * @throws {Error} - Throws an error if the request fails.
 */ const getDeleted = (api, query)=>__awaiter(void 0, void 0, void 0, function*() {
        const response = yield api.sendRequest(`/objects/roots/deleted?limit=${query.limit}&offset=${query.offset}`, {
            method: 'GET'
        });
        if (!response.ok) {
            throw new Error(`Failed to get deleted: ${response.statusText}`);
        }
        return response.json();
    });
exports.getDeleted = getDeleted;
/**
 * Retrieves the aggregated information of a specific object identified by its CID.
 *
 * This method sends a request to the server to fetch details about the
 * object, including its metadata and other relevant information.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithoutPagination<{ cid: string }>} query - The query parameters containing the CID of the object to retrieve.
 * @returns {Promise<ObjectInformation>} - A promise that resolves to the information of the requested object.
 * @throws {Error} - Throws an error if the request fails.
 */ const getObject = (api, query)=>__awaiter(void 0, void 0, void 0, function*() {
        const response = yield api.sendRequest(`/objects/${query.cid}`, {
            method: 'GET'
        });
        if (!response.ok) {
            throw new Error(`Failed to get object: ${response.statusText}`);
        }
        return response.json();
    });
exports.getObject = getObject;
/**
 * Retrieves the upload status of a specific object identified by its CID.
 *
 * This method sends a request to the server to fetch the current upload status
 * of the object, which can indicate whether the upload is pending, completed,
 * or failed.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithoutPagination<{ cid: string }>} query - The query parameters containing the CID of the object whose upload status is to be retrieved.
 * @returns {Promise<ObjectInformation['uploadStatus']>} - A promise that resolves to the upload status of the requested object.
 * @throws {Error} - Throws an error if the request fails.
 */ const getObjectUploadStatus = (api, query)=>__awaiter(void 0, void 0, void 0, function*() {
        const response = yield api.sendRequest(`/objects/${query.cid}/status`, {
            method: 'GET'
        });
        if (!response.ok) {
            throw new Error(`Failed to get object: ${response.statusText}`);
        }
        return response.json();
    });
exports.getObjectUploadStatus = getObjectUploadStatus;
/**
 * Retrieves the owners of a specific object identified by its CID.
 *
 * This method sends a request to the server to fetch the list of owners
 * associated with the object. The owners can provide insights into who
 * has access to or control over the object.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithoutPagination<{ cid: string }>} query - The query parameters containing the CID of the object whose owners are to be retrieved.
 * @returns {Promise<ObjectInformation['owners']>} - A promise that resolves to the list of owners of the requested object.
 * @throws {Error} - Throws an error if the request fails.
 */ const getObjectOwners = (api, query)=>__awaiter(void 0, void 0, void 0, function*() {
        const response = yield api.sendRequest(`/objects/${query.cid}/owners`, {
            method: 'GET'
        });
        if (!response.ok) {
            throw new Error(`Failed to get object: ${response.statusText}`);
        }
        return response.json();
    });
exports.getObjectOwners = getObjectOwners;
/**
 * Retrieves the metadata of a specific object identified by its CID.
 *
 * This method sends a request to the server to fetch the metadata associated
 * with the object. The metadata can include various details about the object,
 * such as its name, type, size, and other relevant information.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithoutPagination<{ cid: string }>} query - The query parameters containing the CID of the object whose metadata is to be retrieved.
 * @returns {Promise<ObjectInformation['metadata']>} - A promise that resolves to the metadata of the requested object.
 * @throws {Error} - Throws an error if the request fails.
 */ const getObjectMetadata = (api, query)=>__awaiter(void 0, void 0, void 0, function*() {
        const response = yield api.sendRequest(`/objects/${query.cid}/metadata`, {
            method: 'GET'
        });
        if (!response.ok) {
            throw new Error(`Failed to get object: ${response.statusText}`);
        }
        return response.json();
    });
exports.getObjectMetadata = getObjectMetadata;
/**
 * Get upload and download limits of the user
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @returns {Promise<UserInfo>} - A promise that resolves to the user info.
 * @throws {Error} - Throws an error if the request fails.
 */ const getMe = (api)=>__awaiter(void 0, void 0, void 0, function*() {
        const response = yield api.sendRequest('@me', {
            method: 'GET'
        });
        if (!response.ok) {
            throw new Error(`Failed to get limits: ${response.statusText}`);
        }
        return response.json();
    });
exports.getMe = getMe;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/upload.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.completeUpload = exports.uploadFileChunk = exports.createFileUploadWithinFolderUpload = exports.createFolderUpload = exports.createFileUpload = void 0;
/**
 * Initiates a file upload to the server.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithoutPagination<{ mimeType?: string; filename: string; uploadOptions: FileUploadOptions | null }>} args - The arguments for the file upload.
 * @param {string} args.mimeType - The MIME type of the file (optional).
 * @param {string} args.filename - The name of the file to be uploaded.
 * @param {FileUploadOptions | null} args.uploadOptions - Additional options for the file upload (optional).
 * @returns {Promise<FileUpload>} - A promise that resolves to the file upload information.
 * @throws {Error} - Throws an error if the upload fails.
 */ const createFileUpload = (api_1, _a)=>__awaiter(void 0, [
        api_1,
        _a
    ], void 0, function*(api, { mimeType, filename, uploadOptions = {} }) {
        const response = yield api.sendRequest(`/uploads/file`, {
            method: 'POST',
            headers: new Headers({
                'Content-Type': 'application/json'
            })
        }, JSON.stringify({
            mimeType,
            filename,
            uploadOptions
        }));
        if (!response.ok) {
            throw new Error(`Failed to create file upload: ${response.statusText}`);
        }
        return response.json();
    });
exports.createFileUpload = createFileUpload;
/**
 * Initiates a folder upload to the server.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithoutPagination<{ fileTree: FolderTree; uploadOptions: FileUploadOptions }>} args - The arguments for the folder upload.
 * @param {FolderTree} args.fileTree - The structure of the folder and its contents to be uploaded.
 * @param {FileUploadOptions} args.uploadOptions - Additional options for the folder upload.
 * @returns {Promise<FolderUpload>} - A promise that resolves to the folder upload information.
 * @throws {Error} - Throws an error if the upload fails.
 */ const createFolderUpload = (api_1, _a)=>__awaiter(void 0, [
        api_1,
        _a
    ], void 0, function*(api, { fileTree, uploadOptions = {} }) {
        const response = yield api.sendRequest(`/uploads/folder`, {
            method: 'POST',
            headers: new Headers({
                'Content-Type': 'application/json'
            })
        }, JSON.stringify({
            fileTree,
            uploadOptions
        }));
        if (!response.ok) {
            throw new Error(`Failed to create folder upload: ${response.statusText}`);
        }
        return response.json();
    });
exports.createFolderUpload = createFolderUpload;
/**
 * Creates a file upload within an existing folder upload.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithoutPagination<{ uploadId: string; name: string; mimeType: string; relativeId: string; uploadOptions: FileUploadOptions }>} args - The arguments for the file upload.
 * @param {string} args.uploadId - The ID of the folder upload to which the file will be added.
 * @param {string} args.name - The name of the file to be uploaded.
 * @param {string} args.mimeType - The MIME type of the file being uploaded.
 * @param {string} args.relativeId - The relative ID of the file within the folder structure.
 * @param {FileUploadOptions} [args.uploadOptions={}] - Additional options for the file upload.
 * @returns {Promise<FileUpload>} - A promise that resolves to the file upload information.
 * @throws {Error} - Throws an error if the upload fails.
 */ const createFileUploadWithinFolderUpload = (api_1, _a)=>__awaiter(void 0, [
        api_1,
        _a
    ], void 0, function*(api, { uploadId, name, mimeType, relativeId, uploadOptions = {} }) {
        const response = yield api.sendRequest(`/uploads/folder/${uploadId}/file`, {
            method: 'POST',
            headers: new Headers({
                'Content-Type': 'application/json'
            })
        }, JSON.stringify({
            name,
            mimeType,
            relativeId,
            uploadOptions
        }));
        if (!response.ok) {
            throw new Error(`Failed to create file upload within folder upload: ${response.statusText}`);
        }
        return response.json();
    });
exports.createFileUploadWithinFolderUpload = createFileUploadWithinFolderUpload;
/**
 * Uploads a chunk of a file to the server.
 *
 * This function allows for the uploading of a specific chunk of a file
 * during a multi-part upload process. It sends the chunk along with its
 * index to the server, which can be used to reconstruct the file on the
 * server side.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithoutPagination<{ uploadId: string; chunk: Buffer; index: number }>} args - The arguments for the file chunk upload.
 * @param {string} args.uploadId - The ID of the upload session.
 * @param {Buffer} args.chunk - The chunk of the file to be uploaded.
 * @param {number} args.index - The index of the chunk in the overall file.
 * @returns {Promise<void>} - A promise that resolves when the chunk is uploaded successfully.
 * @throws {Error} - Throws an error if the upload fails.
 */ const uploadFileChunk = (api_1, _a)=>__awaiter(void 0, [
        api_1,
        _a
    ], void 0, function*(api, { uploadId, chunk, index }) {
        const formData = new FormData();
        formData.append('file', new Blob([
            chunk
        ]));
        formData.append('index', index.toString());
        const response = yield api.sendRequest(`/uploads/file/${uploadId}/chunk`, {
            method: 'POST'
        }, formData);
        if (!response.ok) {
            throw new Error(`Failed to upload file chunk: ${response.statusText}`);
        }
    });
exports.uploadFileChunk = uploadFileChunk;
/**
 * Completes a file or folder upload session on the server.
 *
 * This function sends a request to the server to finalize the upload
 * process for a given upload session identified by the upload ID. It is
 * typically called after all file chunks have been uploaded. This method
 * can be used to complete both file and folder uploads.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithoutPagination<{ uploadId: string }>} args - The arguments for completing the upload.
 * @param {string} args.uploadId - The ID of the upload session to complete.
 * @returns {Promise<any>} - A promise that resolves to the response from the server.
 * @throws {Error} - Throws an error if the completion of the upload fails.
 */ const completeUpload = (api_1, _a)=>__awaiter(void 0, [
        api_1,
        _a
    ], void 0, function*(api, { uploadId }) {
        const response = yield api.sendRequest(`/uploads/${uploadId}/complete`, {
            method: 'POST'
        });
        if (!response.ok) {
            throw new Error(`Failed to complete upload: ${response.statusText}`);
        }
        return response.json();
    });
exports.completeUpload = completeUpload;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/write.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.restoreObject = exports.markObjectAsDeleted = exports.shareObject = void 0;
/**
 * Shares an object with a specified public ID.
 *
 * This function sends a request to the server to share an object identified
 * by its CID. The object will be shared with the provided public ID, allowing
 * access to the object for users with that ID.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithoutPagination<{ cid: string; publicId: string }>} query - The query parameters containing the CID of the object to share and the public ID to share it with.
 * @returns {Promise<any>} - A promise that resolves to the response from the server.
 * @throws {Error} - Throws an error if the sharing process fails.
 */ const shareObject = (api, query)=>__awaiter(void 0, void 0, void 0, function*() {
        const response = yield api.sendRequest(`/objects/${query.cid}/share`, {
            method: 'POST',
            headers: new Headers({
                'Content-Type': 'application/json'
            })
        }, JSON.stringify({
            publicId: query.publicId
        }));
        if (!response.ok) {
            throw new Error(`Failed to share object: ${response.statusText}`);
        }
        return response.json();
    });
exports.shareObject = shareObject;
/**
 * Marks an object as deleted by sending a request to the server.
 *
 * This function sends a request to the server to mark an object identified
 * by its CID as deleted. This action is typically irreversible and should
 * be used with caution.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithoutPagination<{ cid: string }>} query - The query parameters containing the CID of the object to mark as deleted.
 * @returns {Promise<void>} - A promise that resolves when the object has been marked as deleted.
 * @throws {Error} - Throws an error if the marking process fails.
 */ const markObjectAsDeleted = (api, query)=>__awaiter(void 0, void 0, void 0, function*() {
        const response = yield api.sendRequest(`/objects/${query.cid}/delete`, {
            method: 'POST'
        });
        if (!response.ok) {
            throw new Error(`Failed to mark object as deleted: ${response.statusText}`);
        }
    });
exports.markObjectAsDeleted = markObjectAsDeleted;
/**
 * Restores an object that has been marked as deleted by sending a request to the server.
 *
 * This function sends a request to the server to restore an object identified
 * by its CID. The restoration process may depend on the server's implementation
 * and the object's current state.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {ArgsWithoutPagination<{ cid: string }>} query - The query parameters containing the CID of the object to restore.
 * @returns {Promise<void>} - A promise that resolves when the object has been successfully restored.
 * @throws {Error} - Throws an error if the restoration process fails.
 */ const restoreObject = (api, query)=>__awaiter(void 0, void 0, void 0, function*() {
        const response = yield api.sendRequest(`/objects/${query.cid}/restore`, {
            method: 'POST'
        });
        if (!response.ok) {
            throw new Error(`Failed to restore object: ${response.statusText}`);
        }
        return response.json();
    });
exports.restoreObject = restoreObject;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.apiCalls = void 0;
const downloadCalls = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/download.js [app-route] (ecmascript)"));
const readCalls = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/read.js [app-route] (ecmascript)"));
const uploadCalls = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/upload.js [app-route] (ecmascript)"));
const writeCalls = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/write.js [app-route] (ecmascript)"));
exports.apiCalls = Object.assign(Object.assign(Object.assign(Object.assign({}, downloadCalls), readCalls), uploadCalls), writeCalls);
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/networks.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getNetworkUrl = exports.networks = void 0;
const auto_utils_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/index.js [app-route] (ecmascript)");
exports.networks = {
    [auto_utils_1.NetworkId.TAURUS]: 'https://demo.auto-drive.autonomys.xyz/api',
    [auto_utils_1.NetworkId.MAINNET]: 'https://mainnet.auto-drive.autonomys.xyz/api'
};
const getNetworkUrl = (networkId)=>{
    if (!exports.networks[networkId]) {
        throw new Error(`Network ${networkId} not found`);
    }
    return exports.networks[networkId];
};
exports.getNetworkUrl = getNetworkUrl;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/connection.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createAutoDriveApi = exports.OAuthProvider = void 0;
const networks_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/networks.js [app-route] (ecmascript)");
var OAuthProvider;
(function(OAuthProvider) {
    OAuthProvider["GOOGLE"] = "google";
    OAuthProvider["DISCORD"] = "discord";
})(OAuthProvider || (exports.OAuthProvider = OAuthProvider = {}));
const createAutoDriveApi = ({ provider = 'apikey', apiKey, url = null, network })=>{
    const baseUrl = !network ? url : (0, networks_1.getNetworkUrl)(network);
    return {
        sendRequest: (relativeUrl, request, body)=>__awaiter(void 0, void 0, void 0, function*() {
                var _a;
                const headers = new Headers(Object.assign(Object.assign({}, Object.fromEntries(((_a = request.headers) === null || _a === void 0 ? void 0 : _a.entries()) || [])), {
                    'x-auth-provider': provider,
                    Authorization: `Bearer ${apiKey}`
                }));
                const fullRequest = Object.assign(Object.assign({}, request), {
                    headers: new Headers(headers),
                    body
                });
                return fetch(`${baseUrl}${relativeUrl}`, fullRequest);
            })
    };
};
exports.createAutoDriveApi = createAutoDriveApi;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/objects.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.OwnerRole = exports.Scope = void 0;
var Scope;
(function(Scope) {
    Scope["Global"] = "global";
    Scope["User"] = "user";
})(Scope || (exports.Scope = Scope = {}));
var OwnerRole;
(function(OwnerRole) {
    OwnerRole["ADMIN"] = "admin";
    OwnerRole["VIEWER"] = "viewer";
})(OwnerRole || (exports.OwnerRole = OwnerRole = {}));
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/folderTree.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.constructZipBlobFromTreeAndPaths = exports.constructFromInput = exports.constructFromFileSystemEntries = exports.FolderTreeSchema = exports.FolderTreeFileSchema = exports.FolderTreeFolderSchema = void 0;
const jszip_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/jszip@3.10.1/node_modules/jszip/lib/index.js [app-route] (ecmascript)"));
const zod_1 = __turbopack_require__("[project]/node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.js [app-route] (ecmascript)");
exports.FolderTreeFolderSchema = zod_1.z.object({
    name: zod_1.z.string(),
    type: zod_1.z.literal('folder'),
    children: zod_1.z.array(zod_1.z.lazy(()=>exports.FolderTreeSchema)),
    id: zod_1.z.string()
});
exports.FolderTreeFileSchema = zod_1.z.object({
    name: zod_1.z.string(),
    type: zod_1.z.literal('file'),
    id: zod_1.z.string()
});
exports.FolderTreeSchema = zod_1.z.discriminatedUnion('type', [
    exports.FolderTreeFolderSchema,
    exports.FolderTreeFileSchema
]);
const constructFromFileSystemEntries = (entries)=>{
    const root = {
        name: 'root',
        type: 'folder',
        children: [],
        id: 'root'
    };
    for (const entry of entries){
        const pathParts = entry.split('/').filter(Boolean);
        let currentFolder = root;
        for (const [index, part] of Array.from(pathParts.entries())){
            // Check if the part already exists in the current folder's children
            let existingFolder = currentFolder.children.find((child)=>child.name === part);
            if (!existingFolder) {
                // If it's the last part, create a file node
                if (index === pathParts.length - 1) {
                    const fileNode = {
                        name: part,
                        type: 'file',
                        id: entry
                    };
                    currentFolder.children.push(fileNode);
                } else {
                    // Create a new folder node
                    const folderNode = {
                        name: part,
                        type: 'folder',
                        children: [],
                        id: `${currentFolder.id.split('/').slice(1).join('/')}/${part}`
                    };
                    currentFolder.children.push(folderNode);
                    existingFolder = folderNode;
                }
            }
            currentFolder = existingFolder; // Move to the next folder
        }
    }
    return root.children.length === 1 ? root.children[0] : root;
};
exports.constructFromFileSystemEntries = constructFromFileSystemEntries;
const constructFromInput = (input)=>{
    return (0, exports.constructFromFileSystemEntries)(Array.from(input).map((file)=>{
        if (!file.webkitRelativePath) {
            throw new Error('webkitRelativePath is not supported');
        }
        return file.webkitRelativePath;
    }));
};
exports.constructFromInput = constructFromInput;
const addFilesToZip = (folder, folderNode, files)=>{
    folderNode.children.forEach((child)=>{
        if (child.type === 'file') {
            folder.file(child.name, files[child.id]);
        } else if (child.type === 'folder') {
            const subFolder = folder.folder(child.name);
            if (!subFolder) {
                throw new Error('Failed to create folder in zip');
            }
            addFilesToZip(subFolder, child, files);
        }
    });
};
const constructZipBlobFromTreeAndPaths = (tree, files)=>__awaiter(void 0, void 0, void 0, function*() {
        if (tree.type === 'file') {
            throw new Error('Cannot construct zip from file');
        }
        const zip = new jszip_1.default();
        addFilesToZip(zip, tree, files);
        return zip.generateAsync({
            type: 'blob'
        });
    });
exports.constructZipBlobFromTreeAndPaths = constructZipBlobFromTreeAndPaths;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/uploads.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.folderUploadSchema = exports.EncryptionAlgorithm = exports.CompressionAlgorithm = exports.fileUploadSchema = exports.UploadStatus = exports.UploadType = void 0;
const zod_1 = __turbopack_require__("[project]/node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.js [app-route] (ecmascript)");
const folderTree_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/folderTree.js [app-route] (ecmascript)");
var UploadType;
(function(UploadType) {
    UploadType["FILE"] = "file";
    UploadType["FOLDER"] = "folder";
})(UploadType || (exports.UploadType = UploadType = {}));
var UploadStatus;
(function(UploadStatus) {
    UploadStatus["PENDING"] = "pending";
    UploadStatus["COMPLETED"] = "completed";
    UploadStatus["MIGRATING"] = "migrating";
    UploadStatus["CANCELLED"] = "cancelled";
    UploadStatus["FAILED"] = "failed";
})(UploadStatus || (exports.UploadStatus = UploadStatus = {}));
exports.fileUploadSchema = zod_1.z.object({
    id: zod_1.z.string(),
    rootId: zod_1.z.string(),
    relativeId: zod_1.z.string().nullable(),
    type: zod_1.z.nativeEnum(UploadType),
    status: zod_1.z.nativeEnum(UploadStatus),
    fileTree: zod_1.z.null(),
    name: zod_1.z.string(),
    mimeType: zod_1.z.string().nullable(),
    oauthProvider: zod_1.z.string(),
    oauthUserId: zod_1.z.string()
});
var CompressionAlgorithm;
(function(CompressionAlgorithm) {
    CompressionAlgorithm["ZLIB"] = "ZLIB";
})(CompressionAlgorithm || (exports.CompressionAlgorithm = CompressionAlgorithm = {}));
var EncryptionAlgorithm;
(function(EncryptionAlgorithm) {
    EncryptionAlgorithm["AES_256_GCM"] = "AES_256_GCM";
})(EncryptionAlgorithm || (exports.EncryptionAlgorithm = EncryptionAlgorithm = {}));
exports.folderUploadSchema = zod_1.z.object({
    id: zod_1.z.string(),
    rootId: zod_1.z.string(),
    relativeId: zod_1.z.string().nullable(),
    type: zod_1.z.nativeEnum(UploadType),
    status: zod_1.z.nativeEnum(UploadStatus),
    fileTree: folderTree_1.FolderTreeFolderSchema,
    name: zod_1.z.string(),
    mimeType: zod_1.z.null(),
    oauthProvider: zod_1.z.string(),
    oauthUserId: zod_1.z.string(),
    uploadOptions: zod_1.z.null()
});
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/objects.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/uploads.js [app-route] (ecmascript)"), exports);
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/async.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __asyncValues = this && this.__asyncValues || function(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
};
var __await = this && this.__await || function(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
};
var __asyncGenerator = this && this.__asyncGenerator || function(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function awaitReturn(f) {
        return function(v) {
            return Promise.resolve(v).then(f, reject);
        };
    }
    function verb(n, f) {
        if (g[n]) {
            i[n] = function(v) {
                return new Promise(function(a, b) {
                    q.push([
                        n,
                        v,
                        a,
                        b
                    ]) > 1 || resume(n, v);
                });
            };
            if (f) i[n] = f(i[n]);
        }
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.bufferToIterable = exports.fileToIterable = exports.asyncFromStream = exports.asyncByChunk = void 0;
const buffer_1 = __turbopack_require__("[externals]/buffer [external] (buffer, cjs)");
const asyncByChunk = function(asyncIterable, chunkSize) {
    return __asyncGenerator(this, arguments, function*() {
        var _a, e_1, _b, _c;
        let buffer = buffer_1.Buffer.alloc(0);
        try {
            for(var _d = true, asyncIterable_1 = __asyncValues(asyncIterable), asyncIterable_1_1; asyncIterable_1_1 = yield __await(asyncIterable_1.next()), _a = asyncIterable_1_1.done, !_a; _d = true){
                _c = asyncIterable_1_1.value;
                _d = false;
                const chunk = _c;
                buffer = buffer_1.Buffer.concat([
                    buffer,
                    chunk
                ]);
                while(buffer.length >= chunkSize){
                    yield yield __await(buffer.subarray(0, chunkSize));
                    buffer = buffer.subarray(chunkSize);
                }
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (!_d && !_a && (_b = asyncIterable_1.return)) yield __await(_b.call(asyncIterable_1));
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        if (buffer.length > 0) {
            yield yield __await(buffer);
        }
    });
};
exports.asyncByChunk = asyncByChunk;
const asyncFromStream = function(stream) {
    return __asyncGenerator(this, arguments, function*() {
        const reader = stream.getReader();
        let result = yield __await(reader.read());
        while(!result.done){
            yield yield __await(buffer_1.Buffer.from(result.value));
            result = yield __await(reader.read());
        }
    });
};
exports.asyncFromStream = asyncFromStream;
const fileToIterable = function(file) {
    return __asyncGenerator(this, arguments, function*() {
        const chunkSize = 1024 * 1024;
        for(let i = 0; i < file.size; i += chunkSize){
            yield yield __await(buffer_1.Buffer.from((yield __await(file.slice(i, i + chunkSize).arrayBuffer()))));
        }
    });
};
exports.fileToIterable = fileToIterable;
const bufferToIterable = function(buffer) {
    return __asyncGenerator(this, arguments, function*() {
        yield yield __await(buffer);
    });
};
exports.bufferToIterable = bufferToIterable;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/misc.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.progressToPercentage = void 0;
const progressToPercentage = (current, target)=>current / target * 100;
exports.progressToPercentage = progressToPercentage;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/wrappers.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __asyncValues = this && this.__asyncValues || function(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getSubscriptionInfo = exports.getPendingCredits = exports.downloadFile = exports.uploadFileWithinFolderUpload = exports.uploadFolderFromInput = exports.uploadObjectAsJSON = exports.uploadFile = exports.uploadFileFromInput = void 0;
const mime_types_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/mime-types@2.1.35/node_modules/mime-types/index.js [app-route] (ecmascript)"));
const async_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/async.js [app-route] (ecmascript)");
const misc_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/misc.js [app-route] (ecmascript)");
const index_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/index.js [app-route] (ecmascript)");
const folderTree_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/folderTree.js [app-route] (ecmascript)");
const UPLOAD_FILE_CHUNK_SIZE = 1024 * 1024;
const uploadFileChunks = (api, fileUploadId, asyncIterable, uploadChunkSize = UPLOAD_FILE_CHUNK_SIZE, onProgress)=>{
    return new Promise((resolve, reject)=>__awaiter(void 0, void 0, void 0, function*() {
            var _a, e_1, _b, _c;
            try {
                let index = 0;
                let uploadBytes = 0;
                try {
                    for(var _d = true, _e = __asyncValues((0, async_1.asyncByChunk)(asyncIterable, uploadChunkSize)), _f; _f = yield _e.next(), _a = _f.done, !_a; _d = true){
                        _c = _f.value;
                        _d = false;
                        const chunk = _c;
                        yield index_1.apiCalls.uploadFileChunk(api, {
                            uploadId: fileUploadId,
                            chunk,
                            index
                        });
                        uploadBytes += chunk.length;
                        onProgress === null || onProgress === void 0 ? void 0 : onProgress(uploadBytes);
                        index++;
                    }
                } catch (e_1_1) {
                    e_1 = {
                        error: e_1_1
                    };
                } finally{
                    try {
                        if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
                    } finally{
                        if (e_1) throw e_1.error;
                    }
                }
                resolve();
            } catch (e) {
                reject(e);
            }
        }));
};
/**
 * Uploads a file to the server with optional encryption and compression.
 *
 * This function reads a file from the provided input, optionally encrypts it
 * using the specified password, and compresses it using the specified algorithm if requested.
 * It uploads the file in chunks to the server, creating an upload session and
 * completing it once all chunks have been successfully uploaded.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {File} file - The file to be uploaded.
 * @param {UploadFileOptions} options - Options for the upload process.
 * @param {string} [options.password] - The password for encryption (optional).
 * @param {boolean} [options.compression=true] - Whether to compress the file (optional).
 * @param {number} [uploadChunkSize] - The size of each chunk to upload (optional).
 * @returns {PromisedObservable<UploadFileStatus>} - An observable that emits the upload status.
 * @throws {Error} - Throws an error if the upload fails at any stage.
 */ const uploadFileFromInput = (api, file, options = {}, uploadChunkSize)=>{
    const { password = undefined, compression = true } = options;
    return new Promise((resolve, reject)=>__awaiter(void 0, void 0, void 0, function*() {
            const { compressFile, CompressionAlgorithm, encryptFile, EncryptionAlgorithm } = yield __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js [app-route] (ecmascript, async loader)")(__turbopack_import__);
            let asyncIterable = (0, async_1.fileToIterable)(file);
            if (compression) {
                asyncIterable = compressFile(asyncIterable, {
                    level: 9,
                    algorithm: CompressionAlgorithm.ZLIB
                });
            }
            if (password) {
                asyncIterable = encryptFile(asyncIterable, password, {
                    algorithm: EncryptionAlgorithm.AES_256_GCM
                });
            }
            const uploadOptions = {
                compression: compression ? {
                    level: 9,
                    algorithm: CompressionAlgorithm.ZLIB
                } : undefined,
                encryption: password ? {
                    algorithm: EncryptionAlgorithm.AES_256_GCM
                } : undefined
            };
            const fileUpload = yield index_1.apiCalls.createFileUpload(api, {
                mimeType: mime_types_1.default.lookup(file.name) || undefined,
                filename: file.name,
                uploadOptions
            });
            yield uploadFileChunks(api, fileUpload.id, asyncIterable, uploadChunkSize, (bytes)=>{
                var _a;
                (_a = options.onProgress) === null || _a === void 0 ? void 0 : _a.call(options, (0, misc_1.progressToPercentage)(bytes, file.size));
            });
            const result = yield index_1.apiCalls.completeUpload(api, {
                uploadId: fileUpload.id
            });
            resolve(result.cid);
        }));
};
exports.uploadFileFromInput = uploadFileFromInput;
/**
 * Uploads a file to the server with optional encryption and compression.
 *
 * This function reads a file from the provided input, optionally encrypts it
 * using the specified password, and compresses it using the specified algorithm if requested.
 * It uploads the file in chunks to the server, creating an upload session and
 * completing it once all chunks have been successfully uploaded.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {File | GenericFile} file - The file to be uploaded, which can be a File or a GenericFile.
 * @param {UploadFileOptions} options - Options for the upload process.
 * @param {string} [options.password] - The password for encryption (optional).
 * @param {boolean} [options.compression=true] - Whether to compress the file (optional).
 * @param {number} [uploadChunkSize] - The size of each chunk to upload (optional).
 * @returns {Promise<string>} - The CID of the uploaded file.
 * @throws {Error} - Throws an error if the upload fails at any stage.
 */ const uploadFile = (api_1, file_1, ...args_1)=>__awaiter(void 0, [
        api_1,
        file_1,
        ...args_1
    ], void 0, function*(api, file, options = {}, uploadChunkSize) {
        const { password = undefined, compression = true } = options;
        const { compressFile, CompressionAlgorithm, encryptFile, EncryptionAlgorithm } = yield __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js [app-route] (ecmascript, async loader)")(__turbopack_import__);
        let asyncIterable = file.read();
        if (compression) {
            asyncIterable = compressFile(asyncIterable, {
                level: 9,
                algorithm: CompressionAlgorithm.ZLIB
            });
        }
        if (password) {
            asyncIterable = encryptFile(asyncIterable, password, {
                algorithm: EncryptionAlgorithm.AES_256_GCM
            });
        }
        const uploadOptions = {
            compression: compression ? {
                level: 9,
                algorithm: CompressionAlgorithm.ZLIB
            } : undefined,
            encryption: password ? {
                algorithm: EncryptionAlgorithm.AES_256_GCM
            } : undefined
        };
        const fileUpload = yield index_1.apiCalls.createFileUpload(api, {
            mimeType: mime_types_1.default.lookup(file.name) || undefined,
            filename: file.name,
            uploadOptions
        });
        yield uploadFileChunks(api, fileUpload.id, asyncIterable, uploadChunkSize, (bytes)=>{
            var _a;
            (_a = options.onProgress) === null || _a === void 0 ? void 0 : _a.call(options, (0, misc_1.progressToPercentage)(bytes, file.size));
        });
        const result = yield index_1.apiCalls.completeUpload(api, {
            uploadId: fileUpload.id
        });
        return result.cid;
    });
exports.uploadFile = uploadFile;
/**
 * Uploads an object as a JSON file to the server.
 *
 * This function serializes the provided object to a JSON string,
 * and then uploads the JSON string as a file to the server.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {File | GenericFile} file - The file to be uploaded, which can be a File or a GenericFile.
 * @param {UploadFileOptions} options - Options for the upload process.
 * @param {string} [options.password] - The password for encryption (optional).
 * @param {boolean} [options.compression=true] - Whether to compress the file (optional).
 * @param {number} [uploadChunkSize] - The size of each chunk to upload (optional).
 * @returns {Promise<string>} - The CID of the uploaded file.
 * @throws {Error} - Throws an error if the upload fails at any stage.
 */ const uploadObjectAsJSON = (api_1, object_1, name_1, ...args_1)=>__awaiter(void 0, [
        api_1,
        object_1,
        name_1,
        ...args_1
    ], void 0, function*(api, object, name, options = {}, uploadChunkSize) {
        try {
            const json = Buffer.from(JSON.stringify(object));
            return (0, exports.uploadFile)(api, {
                read: ()=>(0, async_1.bufferToIterable)(json),
                name: name || 'object.json',
                mimeType: 'application/json',
                size: json.length
            }, options, uploadChunkSize);
        } catch (e) {
            throw new Error('Failed to serialize object to JSON');
        }
    });
exports.uploadObjectAsJSON = uploadObjectAsJSON;
/**
 * Uploads an entire folder to the server.
 *
 * This function retrieves all files within the specified folder,
 * constructs a file tree representation, and initiates the upload
 * process. It also handles optional compression of the files during
 * the upload. If a password is provided, the files will be zipped
 * before uploading.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {FileList | File[]} fileList - The list of files to be uploaded.
 * @param {Object} options - Options for the upload process.
 * @param {number} [options.uploadChunkSize] - The size of each chunk to upload (optional).
 * @param {string} [options.password] - The password for encryption (optional).
 * @returns {PromisedObservable<UploadFileStatus | UploadFolderStatus>} - An observable that emits the upload status.
 * @throws {Error} - Throws an error if the upload fails at any stage.
 */ const uploadFolderFromInput = (api_1, fileList_1, ...args_1)=>__awaiter(void 0, [
        api_1,
        fileList_1,
        ...args_1
    ], void 0, function*(api, fileList, { uploadChunkSize, password, onProgress } = {}) {
        const files = fileList instanceof FileList ? Array.from(fileList) : fileList;
        const fileTree = (0, folderTree_1.constructFromInput)(files);
        // If password is provided, we zip the files and upload the zip file
        if (password) {
            const filesMap = Object.fromEntries(files.map((file)=>[
                    file.webkitRelativePath,
                    file
                ]));
            const zipBlob = yield (0, folderTree_1.constructZipBlobFromTreeAndPaths)(fileTree, filesMap);
            const name = fileList[0].webkitRelativePath.split('/').filter(Boolean)[0];
            return (0, exports.uploadFile)(api, {
                read: ()=>(0, async_1.fileToIterable)(zipBlob),
                name: `${name}.zip`,
                mimeType: 'application/zip',
                size: zipBlob.size
            }, {
                password,
                compression: true,
                onProgress
            });
        }
        // Otherwise, we upload the files as a folder w/o compression or encryption
        const folderUpload = yield index_1.apiCalls.createFolderUpload(api, {
            fileTree
        });
        let currentBytesUploaded = 0;
        const totalSize = files.reduce((acc, file)=>acc + file.size, 0);
        for (const file of files){
            yield (0, exports.uploadFileWithinFolderUpload)(api, folderUpload.id, {
                read: ()=>(0, async_1.fileToIterable)(file),
                name: file.name,
                mimeType: mime_types_1.default.lookup(file.name) || undefined,
                size: file.size,
                path: file.webkitRelativePath
            }, uploadChunkSize, {
                onProgress: (progress)=>{
                    onProgress === null || onProgress === void 0 ? void 0 : onProgress((0, misc_1.progressToPercentage)(currentBytesUploaded + progress, totalSize));
                }
            });
            currentBytesUploaded += file.size;
        }
        const result = yield index_1.apiCalls.completeUpload(api, {
            uploadId: folderUpload.id
        });
        return result.cid;
    });
exports.uploadFolderFromInput = uploadFolderFromInput;
/**
 * Uploads a file within an existing folder upload session.
 *
 * @param {AutoDriveApi} api - The API instance to interact with the AutoDrive service.
 * @param {string} uploadId - The ID of the folder upload session to which the file will be added.
 * @param {string} filepath - The path of the file to be uploaded.
 *
 * @returns {Promise<void>} A promise that resolves when the file upload is complete.
 */ const uploadFileWithinFolderUpload = (api_1, uploadId_1, file_1, uploadChunkSize_1, ...args_1)=>__awaiter(void 0, [
        api_1,
        uploadId_1,
        file_1,
        uploadChunkSize_1,
        ...args_1
    ], void 0, function*(api, uploadId, file, uploadChunkSize, options = {}) {
        const fileUpload = yield index_1.apiCalls.createFileUploadWithinFolderUpload(api, {
            uploadId,
            name: file.name,
            mimeType: file.mimeType,
            relativeId: file.path,
            uploadOptions: {}
        });
        yield uploadFileChunks(api, fileUpload.id, file.read(), uploadChunkSize, options.onProgress);
        const result = yield index_1.apiCalls.completeUpload(api, {
            uploadId: fileUpload.id
        });
        return result.cid;
    });
exports.uploadFileWithinFolderUpload = uploadFileWithinFolderUpload;
/**
 * Downloads a file from the AutoDrive service.
 *
 * @param {AutoDriveApi} api - The API instance to interact with the AutoDrive service.
 * @param {string} cid - The CID of the file to be downloaded.
 * @returns {Promise<ReadableStream<Uint8Array>>} A promise that resolves to a ReadableStream of the downloaded file.
 */ const downloadFile = (api, cid, password)=>__awaiter(void 0, void 0, void 0, function*() {
        var _a, _b;
        const { decompressFile, CompressionAlgorithm, EncryptionAlgorithm, decryptFile } = yield __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js [app-route] (ecmascript, async loader)")(__turbopack_import__);
        const metadata = yield index_1.apiCalls.getObjectMetadata(api, {
            cid
        });
        let iterable = (0, async_1.asyncFromStream)((yield index_1.apiCalls.downloadObject(api, {
            cid
        })));
        if ((_a = metadata.uploadOptions) === null || _a === void 0 ? void 0 : _a.encryption) {
            if (!password) {
                throw new Error('Password is required to decrypt the file');
            }
            iterable = decryptFile(iterable, password, {
                algorithm: EncryptionAlgorithm.AES_256_GCM
            });
        }
        if ((_b = metadata.uploadOptions) === null || _b === void 0 ? void 0 : _b.compression) {
            iterable = decompressFile(iterable, {
                algorithm: CompressionAlgorithm.ZLIB
            });
        }
        return iterable;
    });
exports.downloadFile = downloadFile;
const getPendingCredits = (api)=>__awaiter(void 0, void 0, void 0, function*() {
        const me = yield index_1.apiCalls.getMe(api);
        return {
            upload: me.subscription.pendingUploadCredits,
            download: me.subscription.pendingDownloadCredits
        };
    });
exports.getPendingCredits = getPendingCredits;
const getSubscriptionInfo = (api)=>__awaiter(void 0, void 0, void 0, function*() {
        const me = yield index_1.apiCalls.getMe(api);
        return me.subscription;
    });
exports.getSubscriptionInfo = getSubscriptionInfo;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/index.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/connection.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/index.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/wrappers.js [app-route] (ecmascript)"), exports);
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/types.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/async.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/misc.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/types.js [app-route] (ecmascript)"), exports);
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/browser.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/index.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/index.js [app-route] (ecmascript)"), exports);
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/utils.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.constructZipFromTreeAndFileSystemPaths = exports.createWriteStreamAdapter = exports.getFiles = void 0;
const fs_1 = __turbopack_require__("[externals]/fs [external] (fs, cjs)");
const promises_1 = __importDefault(__turbopack_require__("[externals]/fs/promises [external] (fs/promises, cjs)"));
const jszip_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/jszip@3.10.1/node_modules/jszip/lib/index.js [app-route] (ecmascript)"));
const path_1 = __importDefault(__turbopack_require__("[externals]/path [external] (path, cjs)"));
const getFiles = (folderPath)=>__awaiter(void 0, void 0, void 0, function*() {
        const stat = yield promises_1.default.stat(folderPath);
        if (stat.isDirectory()) {
            const files = yield promises_1.default.readdir(folderPath);
            const promises = files.map((file)=>(0, exports.getFiles)(path_1.default.join(folderPath, file)));
            const allFiles = yield Promise.all(promises);
            return allFiles.flat();
        } else {
            return [
                folderPath
            ];
        }
    });
exports.getFiles = getFiles;
const createWriteStreamAdapter = (nodeWriteStream)=>{
    return new WritableStream({
        write (chunk) {
            return new Promise((resolve, reject)=>{
                nodeWriteStream.write(chunk, (err)=>{
                    if (err) {
                        reject(err);
                    } else {
                        resolve();
                    }
                });
            });
        },
        close () {
            nodeWriteStream.end();
        },
        abort (err) {
            nodeWriteStream.destroy(err);
        }
    });
};
exports.createWriteStreamAdapter = createWriteStreamAdapter;
const addFilesFromFilepathsToZip = (folder, folderNode, files)=>{
    folderNode.children.forEach((child)=>{
        if (child.type === 'file') {
            const file = files[child.id];
            if (typeof file === 'string') {
                folder.file(child.name, (0, fs_1.createReadStream)(file));
            } else {
                folder.file(child.name, file);
            }
        } else if (child.type === 'folder') {
            const subFolder = folder.folder(child.name);
            if (!subFolder) {
                throw new Error('Failed to create folder in zip');
            }
            addFilesFromFilepathsToZip(subFolder, child, files);
        }
    });
};
const constructZipFromTreeAndFileSystemPaths = (tree, files)=>__awaiter(void 0, void 0, void 0, function*() {
        if (tree.type === 'file') {
            throw new Error('Cannot construct zip from file');
        }
        const zip = new jszip_1.default();
        addFilesFromFilepathsToZip(zip, tree, files);
        return zip.generateAsync({
            type: 'blob'
        });
    });
exports.constructZipFromTreeAndFileSystemPaths = constructZipFromTreeAndFileSystemPaths;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/wrappers.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.uploadFolderFromFolderPath = exports.uploadFileFromFilepath = void 0;
const fs_1 = __importDefault(__turbopack_require__("[externals]/fs [external] (fs, cjs)"));
const mime_types_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/mime-types@2.1.35/node_modules/mime-types/index.js [app-route] (ecmascript)"));
const index_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/index.js [app-route] (ecmascript)");
const folderTree_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/folderTree.js [app-route] (ecmascript)");
const uploads_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/uploads.js [app-route] (ecmascript)");
const wrappers_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/wrappers.js [app-route] (ecmascript)");
const index_js_2 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/index.js [app-route] (ecmascript)");
const misc_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/misc.js [app-route] (ecmascript)");
const utils_js_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/utils.js [app-route] (ecmascript)");
/**
 * Uploads a file to the server with optional encryption and compression.
 *
 * This function reads a file from the specified file path, optionally encrypts it
 * using the provided password, and compresses it using the specified algorithm if requested.
 * It then uploads the file in chunks to the server, creating an upload session and
 * completing it once all chunks have been successfully uploaded.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {string} filePath - The path to the file to be uploaded.
 * @param {UploadFileOptions} options - Options for the upload process.
 * @param {string} [options.password] - The password for encryption (optional).
 * @param {boolean} [options.compression=true] - Whether to compress the file (optional).
 * @param {number} [uploadChunkSize] - The size of each chunk to upload (optional).
 * @returns {PromisedObservable<UploadFileStatus>} - An observable that emits the upload status.
 * @throws {Error} - Throws an error if the upload fails at any stage.
 */ const uploadFileFromFilepath = (api, filePath, options = {}, uploadChunkSize)=>{
    const { password = undefined, compression = true, onProgress } = options;
    const name = filePath.split('/').pop();
    return (0, wrappers_js_1.uploadFile)(api, {
        read: ()=>fs_1.default.createReadStream(filePath),
        name,
        mimeType: mime_types_1.default.lookup(name) || undefined,
        size: fs_1.default.statSync(filePath).size
    }, {
        password,
        compression,
        onProgress
    }, uploadChunkSize);
};
exports.uploadFileFromFilepath = uploadFileFromFilepath;
/**
 * Uploads an entire folder to the server.
 *
 * This function retrieves all files within the specified folder,
 * constructs a file tree representation, and initiates the upload
 * process. It also handles optional compression and encryption of the files during
 * the upload.
 *
 * If a password is provided, the files will be zipped before uploading.
 *
 * @param {AutoDriveApi} api - The API instance used to send requests.
 * @param {string} folderPath - The path of the folder to be uploaded.
 * @param {Object} options - Optional parameters for the upload.
 * @param {number} [options.uploadChunkSize] - The size of each chunk to be uploaded.
 * @param {string} [options.password] - An optional password for encrypting the files.
 * @returns {Promise<PromisedObservable<UploadFileStatus | UploadFolderStatus>>} - A promise that resolves to an observable that tracks the upload progress.
 * @throws {Error} - Throws an error if the upload fails at any stage.
 */ const uploadFolderFromFolderPath = (api_1, folderPath_1, ...args_1)=>__awaiter(void 0, [
        api_1,
        folderPath_1,
        ...args_1
    ], void 0, function*(api, folderPath, { uploadChunkSize, password, onProgress } = {}) {
        const files = yield (0, utils_js_1.getFiles)(folderPath);
        const fileTree = (0, folderTree_js_1.constructFromFileSystemEntries)(files);
        if (password) {
            const filesMap = Object.fromEntries(files.map((file)=>[
                    file,
                    file
                ]));
            const zipBlob = yield (0, utils_js_1.constructZipFromTreeAndFileSystemPaths)(fileTree, filesMap);
            const name = folderPath.split('/').pop();
            return (0, wrappers_js_1.uploadFile)(api, {
                read: ()=>(0, index_js_2.fileToIterable)(zipBlob),
                name: `${name}.zip`,
                mimeType: 'application/zip',
                size: zipBlob.size
            }, {
                password,
                compression: true,
                onProgress: (progressInPercentage)=>{
                    onProgress === null || onProgress === void 0 ? void 0 : onProgress((0, misc_js_1.progressToPercentage)(progressInPercentage, zipBlob.size));
                }
            });
        }
        const folderUpload = yield index_js_1.apiCalls.createFolderUpload(api, {
            fileTree,
            uploadOptions: {
                compression: {
                    algorithm: uploads_js_1.CompressionAlgorithm.ZLIB,
                    level: 9
                }
            }
        });
        const genericFiles = files.map((file)=>({
                read: ()=>fs_1.default.createReadStream(file),
                name: file.split('/').pop(),
                mimeType: mime_types_1.default.lookup(file.split('/').pop()) || undefined,
                size: fs_1.default.statSync(file).size,
                path: file
            }));
        const totalSize = genericFiles.reduce((acc, file)=>acc + file.size, 0);
        let progress = 0;
        for (const file of genericFiles){
            yield (0, wrappers_js_1.uploadFileWithinFolderUpload)(api, folderUpload.id, file, uploadChunkSize, {
                onProgress: (uploadedBytes)=>{
                    onProgress === null || onProgress === void 0 ? void 0 : onProgress((0, misc_js_1.progressToPercentage)(progress + uploadedBytes, totalSize));
                }
            });
            progress += file.size;
        }
        const result = yield index_js_1.apiCalls.completeUpload(api, {
            uploadId: folderUpload.id
        });
        return result.cid;
    });
exports.uploadFolderFromFolderPath = uploadFolderFromFolderPath;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/utils.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/wrappers.js [app-route] (ecmascript)"), exports);
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/node.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/browser.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/index.js [app-route] (ecmascript)"), exports);
}}),
"[project]/node_modules/.pnpm/@polkadot+x-global@13.4.3/node_modules/@polkadot/x-global/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "exposeGlobal": (()=>exposeGlobal),
    "extractGlobal": (()=>extractGlobal),
    "xglobal": (()=>xglobal)
});
;
/** @internal Last-resort "this", if it gets here it probably would fail anyway */ function evaluateThis(fn) {
    return fn('return this');
}
const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : evaluateThis(Function);
function extractGlobal(name, fallback) {
    // Not quite sure why this is here - snuck in with TS 4.7.2 with no real idea
    // (as of now) as to why this looks like an "any" when we do cast it to a T
    //
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return typeof xglobal[name] === 'undefined' ? fallback : xglobal[name];
}
function exposeGlobal(name, fallback) {
    if (typeof xglobal[name] === 'undefined') {
        xglobal[name] = fallback;
    }
}
}}),
"[project]/node_modules/.pnpm/@scure+base@1.2.4/node_modules/@scure/base/lib/esm/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */ __turbopack_esm__({
    "assertNumber": (()=>assertNumber),
    "base16": (()=>base16),
    "base32": (()=>base32),
    "base32crockford": (()=>base32crockford),
    "base32hex": (()=>base32hex),
    "base32hexnopad": (()=>base32hexnopad),
    "base32nopad": (()=>base32nopad),
    "base58": (()=>base58),
    "base58check": (()=>base58check),
    "base58flickr": (()=>base58flickr),
    "base58xmr": (()=>base58xmr),
    "base58xrp": (()=>base58xrp),
    "base64": (()=>base64),
    "base64nopad": (()=>base64nopad),
    "base64url": (()=>base64url),
    "base64urlnopad": (()=>base64urlnopad),
    "bech32": (()=>bech32),
    "bech32m": (()=>bech32m),
    "bytes": (()=>bytes),
    "bytesToString": (()=>bytesToString),
    "createBase58check": (()=>createBase58check),
    "hex": (()=>hex),
    "str": (()=>str),
    "stringToBytes": (()=>stringToBytes),
    "utf8": (()=>utf8),
    "utils": (()=>utils)
});
function isBytes(a) {
    return a instanceof Uint8Array || ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array';
}
function isArrayOf(isString, arr) {
    if (!Array.isArray(arr)) return false;
    if (arr.length === 0) return true;
    if (isString) {
        return arr.every((item)=>typeof item === 'string');
    } else {
        return arr.every((item)=>Number.isSafeInteger(item));
    }
}
// no abytes: seems to have 10% slowdown. Why?!
function afn(input) {
    if (typeof input !== 'function') throw new Error('function expected');
    return true;
}
function astr(label, input) {
    if (typeof input !== 'string') throw new Error(`${label}: string expected`);
    return true;
}
function anumber(n) {
    if (!Number.isSafeInteger(n)) throw new Error(`invalid integer: ${n}`);
}
const assertNumber = anumber;
function aArr(input) {
    if (!Array.isArray(input)) throw new Error('array expected');
}
function astrArr(label, input) {
    if (!isArrayOf(true, input)) throw new Error(`${label}: array of strings expected`);
}
function anumArr(label, input) {
    if (!isArrayOf(false, input)) throw new Error(`${label}: array of numbers expected`);
}
/**
 * @__NO_SIDE_EFFECTS__
 */ function chain(...args) {
    const id = (a)=>a;
    // Wrap call in closure so JIT can inline calls
    const wrap = (a, b)=>(c)=>a(b(c));
    // Construct chain of args[-1].encode(args[-2].encode([...]))
    const encode = args.map((x)=>x.encode).reduceRight(wrap, id);
    // Construct chain of args[0].decode(args[1].decode(...))
    const decode = args.map((x)=>x.decode).reduce(wrap, id);
    return {
        encode,
        decode
    };
}
/**
 * Encodes integer radix representation to array of strings using alphabet and back.
 * Could also be array of strings.
 * @__NO_SIDE_EFFECTS__
 */ function alphabet(letters) {
    // mapping 1 to "b"
    const lettersA = typeof letters === 'string' ? letters.split('') : letters;
    const len = lettersA.length;
    astrArr('alphabet', lettersA);
    // mapping "b" to 1
    const indexes = new Map(lettersA.map((l, i)=>[
            l,
            i
        ]));
    return {
        encode: (digits)=>{
            aArr(digits);
            return digits.map((i)=>{
                if (!Number.isSafeInteger(i) || i < 0 || i >= len) throw new Error(`alphabet.encode: digit index outside alphabet "${i}". Allowed: ${letters}`);
                return lettersA[i];
            });
        },
        decode: (input)=>{
            aArr(input);
            return input.map((letter)=>{
                astr('alphabet.decode', letter);
                const i = indexes.get(letter);
                if (i === undefined) throw new Error(`Unknown letter: "${letter}". Allowed: ${letters}`);
                return i;
            });
        }
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */ function join(separator = '') {
    astr('join', separator);
    return {
        encode: (from)=>{
            astrArr('join.decode', from);
            return from.join(separator);
        },
        decode: (to)=>{
            astr('join.decode', to);
            return to.split(separator);
        }
    };
}
/**
 * Pad strings array so it has integer number of bits
 * @__NO_SIDE_EFFECTS__
 */ function padding(bits, chr = '=') {
    anumber(bits);
    astr('padding', chr);
    return {
        encode (data) {
            astrArr('padding.encode', data);
            while(data.length * bits % 8)data.push(chr);
            return data;
        },
        decode (input) {
            astrArr('padding.decode', input);
            let end = input.length;
            if (end * bits % 8) throw new Error('padding: invalid, string should have whole number of bytes');
            for(; end > 0 && input[end - 1] === chr; end--){
                const last = end - 1;
                const byte = last * bits;
                if (byte % 8 === 0) throw new Error('padding: invalid, string has too much padding');
            }
            return input.slice(0, end);
        }
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */ function normalize(fn) {
    afn(fn);
    return {
        encode: (from)=>from,
        decode: (to)=>fn(to)
    };
}
/**
 * Slow: O(n^2) time complexity
 */ function convertRadix(data, from, to) {
    // base 1 is impossible
    if (from < 2) throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);
    if (to < 2) throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);
    aArr(data);
    if (!data.length) return [];
    let pos = 0;
    const res = [];
    const digits = Array.from(data, (d)=>{
        anumber(d);
        if (d < 0 || d >= from) throw new Error(`invalid integer: ${d}`);
        return d;
    });
    const dlen = digits.length;
    while(true){
        let carry = 0;
        let done = true;
        for(let i = pos; i < dlen; i++){
            const digit = digits[i];
            const fromCarry = from * carry;
            const digitBase = fromCarry + digit;
            if (!Number.isSafeInteger(digitBase) || fromCarry / from !== carry || digitBase - digit !== fromCarry) {
                throw new Error('convertRadix: carry overflow');
            }
            const div = digitBase / to;
            carry = digitBase % to;
            const rounded = Math.floor(div);
            digits[i] = rounded;
            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase) throw new Error('convertRadix: carry overflow');
            if (!done) continue;
            else if (!rounded) pos = i;
            else done = false;
        }
        res.push(carry);
        if (done) break;
    }
    for(let i = 0; i < data.length - 1 && data[i] === 0; i++)res.push(0);
    return res.reverse();
}
const gcd = (a, b)=>b === 0 ? a : gcd(b, a % b);
const radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from, to)=>from + (to - gcd(from, to));
const powers = /* @__PURE__ */ (()=>{
    let res = [];
    for(let i = 0; i < 40; i++)res.push(2 ** i);
    return res;
})();
/**
 * Implemented with numbers, because BigInt is 5x slower
 */ function convertRadix2(data, from, to, padding) {
    aArr(data);
    if (from <= 0 || from > 32) throw new Error(`convertRadix2: wrong from=${from}`);
    if (to <= 0 || to > 32) throw new Error(`convertRadix2: wrong to=${to}`);
    if (radix2carry(from, to) > 32) {
        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);
    }
    let carry = 0;
    let pos = 0; // bitwise position in current element
    const max = powers[from];
    const mask = powers[to] - 1;
    const res = [];
    for (const n of data){
        anumber(n);
        if (n >= max) throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);
        carry = carry << from | n;
        if (pos + from > 32) throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);
        pos += from;
        for(; pos >= to; pos -= to)res.push((carry >> pos - to & mask) >>> 0);
        const pow = powers[pos];
        if (pow === undefined) throw new Error('invalid carry');
        carry &= pow - 1; // clean carry, otherwise it will cause overflow
    }
    carry = carry << to - pos & mask;
    if (!padding && pos >= from) throw new Error('Excess padding');
    if (!padding && carry > 0) throw new Error(`Non-zero padding: ${carry}`);
    if (padding && pos > 0) res.push(carry >>> 0);
    return res;
}
/**
 * @__NO_SIDE_EFFECTS__
 */ function radix(num) {
    anumber(num);
    const _256 = 2 ** 8;
    return {
        encode: (bytes)=>{
            if (!isBytes(bytes)) throw new Error('radix.encode input should be Uint8Array');
            return convertRadix(Array.from(bytes), _256, num);
        },
        decode: (digits)=>{
            anumArr('radix.decode', digits);
            return Uint8Array.from(convertRadix(digits, num, _256));
        }
    };
}
/**
 * If both bases are power of same number (like `2**8 <-> 2**64`),
 * there is a linear algorithm. For now we have implementation for power-of-two bases only.
 * @__NO_SIDE_EFFECTS__
 */ function radix2(bits, revPadding = false) {
    anumber(bits);
    if (bits <= 0 || bits > 32) throw new Error('radix2: bits should be in (0..32]');
    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32) throw new Error('radix2: carry overflow');
    return {
        encode: (bytes)=>{
            if (!isBytes(bytes)) throw new Error('radix2.encode input should be Uint8Array');
            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);
        },
        decode: (digits)=>{
            anumArr('radix2.decode', digits);
            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));
        }
    };
}
function unsafeWrapper(fn) {
    afn(fn);
    return function(...args) {
        try {
            return fn.apply(null, args);
        } catch (e) {}
    };
}
function checksum(len, fn) {
    anumber(len);
    afn(fn);
    return {
        encode (data) {
            if (!isBytes(data)) throw new Error('checksum.encode: input should be Uint8Array');
            const sum = fn(data).slice(0, len);
            const res = new Uint8Array(data.length + len);
            res.set(data);
            res.set(sum, data.length);
            return res;
        },
        decode (data) {
            if (!isBytes(data)) throw new Error('checksum.decode: input should be Uint8Array');
            const payload = data.slice(0, -len);
            const oldChecksum = data.slice(-len);
            const newChecksum = fn(payload).slice(0, len);
            for(let i = 0; i < len; i++)if (newChecksum[i] !== oldChecksum[i]) throw new Error('Invalid checksum');
            return payload;
        }
    };
}
const utils = {
    alphabet,
    chain,
    checksum,
    convertRadix,
    convertRadix2,
    radix,
    radix2,
    join,
    padding
};
const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));
const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));
const base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));
const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));
const base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));
const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s)=>s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));
const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));
const base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));
const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));
const base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));
// base58 code
// -----------
const genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc)=>chain(radix(58), alphabet(abc), join(''));
const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');
const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');
const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');
// Data len (index) -> encoded block len
const XMR_BLOCK_LEN = [
    0,
    2,
    3,
    5,
    6,
    7,
    9,
    10,
    11
];
const base58xmr = {
    encode (data) {
        let res = '';
        for(let i = 0; i < data.length; i += 8){
            const block = data.subarray(i, i + 8);
            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');
        }
        return res;
    },
    decode (str) {
        let res = [];
        for(let i = 0; i < str.length; i += 11){
            const slice = str.slice(i, i + 11);
            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);
            const block = base58.decode(slice);
            for(let j = 0; j < block.length - blockLen; j++){
                if (block[j] !== 0) throw new Error('base58xmr: wrong padding');
            }
            res = res.concat(Array.from(block.slice(block.length - blockLen)));
        }
        return Uint8Array.from(res);
    }
};
const createBase58check = (sha256)=>chain(checksum(4, (data)=>sha256(sha256(data))), base58);
const base58check = createBase58check;
const BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));
const POLYMOD_GENERATORS = [
    0x3b6a57b2,
    0x26508e6d,
    0x1ea119fa,
    0x3d4233dd,
    0x2a1462b3
];
function bech32Polymod(pre) {
    const b = pre >> 25;
    let chk = (pre & 0x1ffffff) << 5;
    for(let i = 0; i < POLYMOD_GENERATORS.length; i++){
        if ((b >> i & 1) === 1) chk ^= POLYMOD_GENERATORS[i];
    }
    return chk;
}
function bechChecksum(prefix, words, encodingConst = 1) {
    const len = prefix.length;
    let chk = 1;
    for(let i = 0; i < len; i++){
        const c = prefix.charCodeAt(i);
        if (c < 33 || c > 126) throw new Error(`Invalid prefix (${prefix})`);
        chk = bech32Polymod(chk) ^ c >> 5;
    }
    chk = bech32Polymod(chk);
    for(let i = 0; i < len; i++)chk = bech32Polymod(chk) ^ prefix.charCodeAt(i) & 0x1f;
    for (let v of words)chk = bech32Polymod(chk) ^ v;
    for(let i = 0; i < 6; i++)chk = bech32Polymod(chk);
    chk ^= encodingConst;
    return BECH_ALPHABET.encode(convertRadix2([
        chk % powers[30]
    ], 30, 5, false));
}
/**
 * @__NO_SIDE_EFFECTS__
 */ function genBech32(encoding) {
    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;
    const _words = radix2(5);
    const fromWords = _words.decode;
    const toWords = _words.encode;
    const fromWordsUnsafe = unsafeWrapper(fromWords);
    function encode(prefix, words, limit = 90) {
        astr('bech32.encode prefix', prefix);
        if (isBytes(words)) words = Array.from(words);
        anumArr('bech32.encode', words);
        const plen = prefix.length;
        if (plen === 0) throw new TypeError(`Invalid prefix length ${plen}`);
        const actualLength = plen + 7 + words.length;
        if (limit !== false && actualLength > limit) throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);
        const lowered = prefix.toLowerCase();
        const sum = bechChecksum(lowered, words, ENCODING_CONST);
        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;
    }
    function decode(str, limit = 90) {
        astr('bech32.decode input', str);
        const slen = str.length;
        if (slen < 8 || limit !== false && slen > limit) throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);
        // don't allow mixed case
        const lowered = str.toLowerCase();
        if (str !== lowered && str !== str.toUpperCase()) throw new Error(`String must be lowercase or uppercase`);
        const sepIndex = lowered.lastIndexOf('1');
        if (sepIndex === 0 || sepIndex === -1) throw new Error(`Letter "1" must be present between prefix and data only`);
        const prefix = lowered.slice(0, sepIndex);
        const data = lowered.slice(sepIndex + 1);
        if (data.length < 6) throw new Error('Data must be at least 6 characters long');
        const words = BECH_ALPHABET.decode(data).slice(0, -6);
        const sum = bechChecksum(prefix, words, ENCODING_CONST);
        if (!data.endsWith(sum)) throw new Error(`Invalid checksum in ${str}: expected "${sum}"`);
        return {
            prefix,
            words
        };
    }
    const decodeUnsafe = unsafeWrapper(decode);
    function decodeToBytes(str) {
        const { prefix, words } = decode(str, false);
        return {
            prefix,
            words,
            bytes: fromWords(words)
        };
    }
    function encodeFromBytes(prefix, bytes) {
        return encode(prefix, toWords(bytes));
    }
    return {
        encode,
        decode,
        encodeFromBytes,
        decodeToBytes,
        decodeUnsafe,
        fromWords,
        fromWordsUnsafe,
        toWords
    };
}
const bech32 = genBech32('bech32');
const bech32m = genBech32('bech32m');
const utf8 = {
    encode: (data)=>new TextDecoder().decode(data),
    decode: (str)=>new TextEncoder().encode(str)
};
const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s)=>{
    if (typeof s !== 'string' || s.length % 2 !== 0) throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);
    return s.toLowerCase();
}));
// prettier-ignore
const CODERS = {
    utf8,
    hex,
    base16,
    base32,
    base64,
    base64url,
    base58,
    base58xmr
};
const coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';
const bytesToString = (type, bytes)=>{
    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);
    if (!isBytes(bytes)) throw new TypeError('bytesToString() expects Uint8Array');
    return CODERS[type].encode(bytes);
};
const str = bytesToString; // as in python, but for bytes only
const stringToBytes = (type, str)=>{
    if (!CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);
    if (typeof str !== 'string') throw new TypeError('stringToBytes() expects string');
    return CODERS[type].decode(str);
};
const bytes = stringToBytes; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@polkadot+x-textencoder@13.4.3/node_modules/@polkadot/x-textencoder/node.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "TextEncoder": (()=>TextEncoder)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$util__$5b$external$5d$__$28$node$3a$util$2c$__cjs$29$__ = __turbopack_import__("[externals]/node:util [external] (node:util, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+x-global@13.4.3/node_modules/@polkadot/x-global/index.js [app-route] (ecmascript) <locals>");
;
;
;
class Fallback {
    __internal__encoder;
    constructor(){
        this.__internal__encoder = new __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$util__$5b$external$5d$__$28$node$3a$util$2c$__cjs$29$__["default"].TextEncoder();
    }
    // For a Jest 26.0.1 environment, Buffer !== Uint8Array
    encode(value) {
        return Uint8Array.from(this.__internal__encoder.encode(value));
    }
}
const TextEncoder = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["extractGlobal"])('TextEncoder', Fallback);
}}),
"[project]/node_modules/.pnpm/@polkadot+x-textencoder@13.4.3/node_modules/@polkadot/x-textencoder/packageInfo.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "packageInfo": (()=>packageInfo)
});
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_resolve_absolute_path__("node_modules/.pnpm/@polkadot+x-textencoder@13.4.3/node_modules/@polkadot/x-textencoder/packageInfo.js")}`;
    }
};
const packageInfo = {
    name: '@polkadot/x-textencoder',
    path: __TURBOPACK__import$2e$meta__ && __TURBOPACK__import$2e$meta__.url ? new URL(__TURBOPACK__import$2e$meta__.url).pathname.substring(0, new URL(__TURBOPACK__import$2e$meta__.url).pathname.lastIndexOf('/') + 1) : 'auto',
    type: 'esm',
    version: '13.4.3'
};
}}),
"[project]/node_modules/.pnpm/@polkadot+x-bigint@13.4.3/node_modules/@polkadot/x-bigint/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BigInt": (()=>BigInt)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+x-global@13.4.3/node_modules/@polkadot/x-global/index.js [app-route] (ecmascript) <locals>");
;
;
/**
 * @internal
 *
 * There are _still_ some older environments (specifically RN < 0.70), that does
 * not have proper BigInt support - a non-working fallback is provided for those.
 *
 * We detect availability of BigInt upon usage, so this is purely to allow functional
 * compilation & bundling. Since we have operators such as *+-/ top-level, a number-ish
 * result is used here.
 */ function invalidFallback() {
    return Number.NaN;
}
const BigInt = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["extractGlobal"])('BigInt', invalidFallback);
}}),
"[project]/node_modules/.pnpm/@polkadot+x-bigint@13.4.3/node_modules/@polkadot/x-bigint/shim.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+x-global@13.4.3/node_modules/@polkadot/x-global/index.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$bigint$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+x-bigint@13.4.3/node_modules/@polkadot/x-bigint/index.js [app-route] (ecmascript) <locals>");
;
;
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["exposeGlobal"])('BigInt', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$bigint$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"]);
}}),
"[project]/node_modules/.pnpm/@substrate+ss58-registry@1.51.0/node_modules/@substrate/ss58-registry/esm/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// Copyright (C) 2021-2024 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
const __TURBOPACK__default__export__ = [
    {
        "prefix": 0,
        "network": "polkadot",
        "displayName": "Polkadot Relay Chain",
        "symbols": [
            "DOT"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://polkadot.network"
    },
    {
        "prefix": 1,
        "network": "BareSr25519",
        "displayName": "Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",
        "symbols": [],
        "decimals": [],
        "standardAccount": "Sr25519",
        "website": null
    },
    {
        "prefix": 2,
        "network": "kusama",
        "displayName": "Kusama Relay Chain",
        "symbols": [
            "KSM"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://kusama.network"
    },
    {
        "prefix": 3,
        "network": "BareEd25519",
        "displayName": "Bare 32-bit Ed25519 public key.",
        "symbols": [],
        "decimals": [],
        "standardAccount": "Ed25519",
        "website": null
    },
    {
        "prefix": 4,
        "network": "katalchain",
        "displayName": "Katal Chain",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": null
    },
    {
        "prefix": 5,
        "network": "astar",
        "displayName": "Astar Network",
        "symbols": [
            "ASTR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://astar.network"
    },
    {
        "prefix": 6,
        "network": "bifrost",
        "displayName": "Bifrost",
        "symbols": [
            "BNC"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://bifrost.finance/"
    },
    {
        "prefix": 7,
        "network": "edgeware",
        "displayName": "Edgeware",
        "symbols": [
            "EDG"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://edgewa.re"
    },
    {
        "prefix": 8,
        "network": "karura",
        "displayName": "Karura",
        "symbols": [
            "KAR"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://karura.network/"
    },
    {
        "prefix": 9,
        "network": "reynolds",
        "displayName": "Laminar Reynolds Canary",
        "symbols": [
            "REY"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "http://laminar.network/"
    },
    {
        "prefix": 10,
        "network": "acala",
        "displayName": "Acala",
        "symbols": [
            "ACA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://acala.network/"
    },
    {
        "prefix": 11,
        "network": "laminar",
        "displayName": "Laminar",
        "symbols": [
            "LAMI"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "http://laminar.network/"
    },
    {
        "prefix": 12,
        "network": "polymesh",
        "displayName": "Polymesh",
        "symbols": [
            "POLYX"
        ],
        "decimals": [
            6
        ],
        "standardAccount": "*25519",
        "website": "https://polymath.network/"
    },
    {
        "prefix": 13,
        "network": "integritee",
        "displayName": "Integritee",
        "symbols": [
            "TEER"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://integritee.network"
    },
    {
        "prefix": 14,
        "network": "totem",
        "displayName": "Totem",
        "symbols": [
            "TOTEM"
        ],
        "decimals": [
            0
        ],
        "standardAccount": "*25519",
        "website": "https://totemaccounting.com"
    },
    {
        "prefix": 15,
        "network": "synesthesia",
        "displayName": "Synesthesia",
        "symbols": [
            "SYN"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://synesthesia.network/"
    },
    {
        "prefix": 16,
        "network": "kulupu",
        "displayName": "Kulupu",
        "symbols": [
            "KLP"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://kulupu.network/"
    },
    {
        "prefix": 17,
        "network": "dark",
        "displayName": "Dark Mainnet",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": null
    },
    {
        "prefix": 18,
        "network": "darwinia",
        "displayName": "Darwinia Network",
        "symbols": [
            "RING"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "secp256k1",
        "website": "https://darwinia.network"
    },
    {
        "prefix": 19,
        "network": "watr",
        "displayName": "Watr Protocol",
        "symbols": [
            "WATR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://www.watr.org"
    },
    {
        "prefix": 20,
        "network": "stafi",
        "displayName": "Stafi",
        "symbols": [
            "FIS"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://stafi.io"
    },
    {
        "prefix": 21,
        "network": "karmachain",
        "displayName": "Karmacoin",
        "symbols": [
            "KCOIN"
        ],
        "decimals": [
            6
        ],
        "standardAccount": "*25519",
        "website": "https://karmaco.in"
    },
    {
        "prefix": 22,
        "network": "dock-pos-mainnet",
        "displayName": "Dock Mainnet",
        "symbols": [
            "DCK"
        ],
        "decimals": [
            6
        ],
        "standardAccount": "*25519",
        "website": "https://dock.io"
    },
    {
        "prefix": 23,
        "network": "shift",
        "displayName": "ShiftNrg",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": null
    },
    {
        "prefix": 24,
        "network": "zero",
        "displayName": "ZERO",
        "symbols": [
            "ZERO"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://zero.io"
    },
    {
        "prefix": 25,
        "network": "zero-alphaville",
        "displayName": "ZERO Alphaville",
        "symbols": [
            "ZERO"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://zero.io"
    },
    {
        "prefix": 26,
        "network": "jupiter",
        "displayName": "Jupiter",
        "symbols": [
            "jDOT"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://jupiter.patract.io"
    },
    {
        "prefix": 27,
        "network": "kabocha",
        "displayName": "Kabocha",
        "symbols": [
            "KAB"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://kabocha.network"
    },
    {
        "prefix": 28,
        "network": "subsocial",
        "displayName": "Subsocial",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": null
    },
    {
        "prefix": 29,
        "network": "cord",
        "displayName": "CORD Network",
        "symbols": [
            "DHI",
            "WAY"
        ],
        "decimals": [
            12,
            12
        ],
        "standardAccount": "*25519",
        "website": "https://cord.network/"
    },
    {
        "prefix": 30,
        "network": "phala",
        "displayName": "Phala Network",
        "symbols": [
            "PHA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://phala.network"
    },
    {
        "prefix": 31,
        "network": "litentry",
        "displayName": "Litentry Network",
        "symbols": [
            "LIT"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://litentry.com/"
    },
    {
        "prefix": 32,
        "network": "robonomics",
        "displayName": "Robonomics",
        "symbols": [
            "XRT"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://robonomics.network"
    },
    {
        "prefix": 33,
        "network": "datahighway",
        "displayName": "DataHighway",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": null
    },
    {
        "prefix": 34,
        "network": "ares",
        "displayName": "Ares Protocol",
        "symbols": [
            "ARES"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://www.aresprotocol.com/"
    },
    {
        "prefix": 35,
        "network": "vln",
        "displayName": "Valiu Liquidity Network",
        "symbols": [
            "USDv"
        ],
        "decimals": [
            15
        ],
        "standardAccount": "*25519",
        "website": "https://valiu.com/"
    },
    {
        "prefix": 36,
        "network": "centrifuge",
        "displayName": "Centrifuge Chain",
        "symbols": [
            "CFG"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://centrifuge.io/"
    },
    {
        "prefix": 37,
        "network": "nodle",
        "displayName": "Nodle Chain",
        "symbols": [
            "NODL"
        ],
        "decimals": [
            11
        ],
        "standardAccount": "*25519",
        "website": "https://nodle.io/"
    },
    {
        "prefix": 38,
        "network": "kilt",
        "displayName": "KILT Spiritnet",
        "symbols": [
            "KILT"
        ],
        "decimals": [
            15
        ],
        "standardAccount": "*25519",
        "website": "https://kilt.io/"
    },
    {
        "prefix": 39,
        "network": "mathchain",
        "displayName": "MathChain mainnet",
        "symbols": [
            "MATH"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://mathwallet.org"
    },
    {
        "prefix": 40,
        "network": "mathchain-testnet",
        "displayName": "MathChain testnet",
        "symbols": [
            "MATH"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://mathwallet.org"
    },
    {
        "prefix": 41,
        "network": "polimec",
        "displayName": "Polimec Protocol",
        "symbols": [
            "PLMC"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://www.polimec.org/"
    },
    {
        "prefix": 42,
        "network": "substrate",
        "displayName": "Substrate",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": "https://substrate.io/"
    },
    {
        "prefix": 43,
        "network": "BareSecp256k1",
        "displayName": "Bare 32-bit ECDSA SECP-256k1 public key.",
        "symbols": [],
        "decimals": [],
        "standardAccount": "secp256k1",
        "website": null
    },
    {
        "prefix": 44,
        "network": "chainx",
        "displayName": "ChainX",
        "symbols": [
            "PCX"
        ],
        "decimals": [
            8
        ],
        "standardAccount": "*25519",
        "website": "https://chainx.org/"
    },
    {
        "prefix": 45,
        "network": "uniarts",
        "displayName": "UniArts Network",
        "symbols": [
            "UART",
            "UINK"
        ],
        "decimals": [
            12,
            12
        ],
        "standardAccount": "*25519",
        "website": "https://uniarts.me"
    },
    {
        "prefix": 46,
        "network": "reserved46",
        "displayName": "This prefix is reserved.",
        "symbols": [],
        "decimals": [],
        "standardAccount": null,
        "website": null
    },
    {
        "prefix": 47,
        "network": "reserved47",
        "displayName": "This prefix is reserved.",
        "symbols": [],
        "decimals": [],
        "standardAccount": null,
        "website": null
    },
    {
        "prefix": 48,
        "network": "neatcoin",
        "displayName": "Neatcoin Mainnet",
        "symbols": [
            "NEAT"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://neatcoin.org"
    },
    {
        "prefix": 49,
        "network": "picasso",
        "displayName": "Picasso",
        "symbols": [
            "PICA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://picasso.composable.finance"
    },
    {
        "prefix": 50,
        "network": "composable",
        "displayName": "Composable Finance",
        "symbols": [
            "LAYR"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://composable.finance"
    },
    {
        "prefix": 51,
        "network": "oak",
        "displayName": "OAK Network",
        "symbols": [
            "OAK",
            "TUR"
        ],
        "decimals": [
            10,
            10
        ],
        "standardAccount": "*25519",
        "website": "https://oak.tech"
    },
    {
        "prefix": 52,
        "network": "KICO",
        "displayName": "KICO",
        "symbols": [
            "KICO"
        ],
        "decimals": [
            14
        ],
        "standardAccount": "*25519",
        "website": "https://dico.io"
    },
    {
        "prefix": 53,
        "network": "DICO",
        "displayName": "DICO",
        "symbols": [
            "DICO"
        ],
        "decimals": [
            14
        ],
        "standardAccount": "*25519",
        "website": "https://dico.io"
    },
    {
        "prefix": 54,
        "network": "cere",
        "displayName": "Cere Network",
        "symbols": [
            "CERE"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://cere.network"
    },
    {
        "prefix": 55,
        "network": "xxnetwork",
        "displayName": "xx network",
        "symbols": [
            "XX"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://xx.network"
    },
    {
        "prefix": 56,
        "network": "pendulum",
        "displayName": "Pendulum chain",
        "symbols": [
            "PEN"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://pendulumchain.org/"
    },
    {
        "prefix": 57,
        "network": "amplitude",
        "displayName": "Amplitude chain",
        "symbols": [
            "AMPE"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://pendulumchain.org/"
    },
    {
        "prefix": 58,
        "network": "eternal-civilization",
        "displayName": "Eternal Civilization",
        "symbols": [
            "ECC"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "http://www.ysknfr.cn/"
    },
    {
        "prefix": 63,
        "network": "hydradx",
        "displayName": "Hydration",
        "symbols": [
            "HDX"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://hydration.net"
    },
    {
        "prefix": 65,
        "network": "aventus",
        "displayName": "Aventus Mainnet",
        "symbols": [
            "AVT"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://aventus.io"
    },
    {
        "prefix": 66,
        "network": "crust",
        "displayName": "Crust Network",
        "symbols": [
            "CRU"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://crust.network"
    },
    {
        "prefix": 67,
        "network": "genshiro",
        "displayName": "Genshiro Network",
        "symbols": [
            "GENS",
            "EQD",
            "LPT0"
        ],
        "decimals": [
            9,
            9,
            9
        ],
        "standardAccount": "*25519",
        "website": "https://genshiro.equilibrium.io"
    },
    {
        "prefix": 68,
        "network": "equilibrium",
        "displayName": "Equilibrium Network",
        "symbols": [
            "EQ"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://equilibrium.io"
    },
    {
        "prefix": 69,
        "network": "sora",
        "displayName": "SORA Network",
        "symbols": [
            "XOR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://sora.org"
    },
    {
        "prefix": 71,
        "network": "p3d",
        "displayName": "3DP network",
        "symbols": [
            "P3D"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://3dpass.org"
    },
    {
        "prefix": 72,
        "network": "p3dt",
        "displayName": "3DP test network",
        "symbols": [
            "P3Dt"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://3dpass.org"
    },
    {
        "prefix": 73,
        "network": "zeitgeist",
        "displayName": "Zeitgeist",
        "symbols": [
            "ZTG"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://zeitgeist.pm"
    },
    {
        "prefix": 77,
        "network": "manta",
        "displayName": "Manta network",
        "symbols": [
            "MANTA"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://manta.network"
    },
    {
        "prefix": 78,
        "network": "calamari",
        "displayName": "Calamari: Manta Canary Network",
        "symbols": [
            "KMA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://manta.network"
    },
    {
        "prefix": 81,
        "network": "sora_dot_para",
        "displayName": "SORA Polkadot Parachain",
        "symbols": [
            "XOR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://sora.org"
    },
    {
        "prefix": 88,
        "network": "polkadex",
        "displayName": "Polkadex Mainnet",
        "symbols": [
            "PDEX"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://polkadex.trade"
    },
    {
        "prefix": 89,
        "network": "polkadexparachain",
        "displayName": "Polkadex Parachain",
        "symbols": [
            "PDEX"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://polkadex.trade"
    },
    {
        "prefix": 90,
        "network": "frequency",
        "displayName": "Frequency",
        "symbols": [
            "FRQCY"
        ],
        "decimals": [
            8
        ],
        "standardAccount": "*25519",
        "website": "https://www.frequency.xyz"
    },
    {
        "prefix": 92,
        "network": "anmol",
        "displayName": "Anmol Network",
        "symbols": [
            "ANML"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://anmol.network/"
    },
    {
        "prefix": 93,
        "network": "fragnova",
        "displayName": "Fragnova Network",
        "symbols": [
            "NOVA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://fragnova.com"
    },
    {
        "prefix": 98,
        "network": "polkasmith",
        "displayName": "PolkaSmith Canary Network",
        "symbols": [
            "PKS"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://polkafoundry.com"
    },
    {
        "prefix": 99,
        "network": "polkafoundry",
        "displayName": "PolkaFoundry Network",
        "symbols": [
            "PKF"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://polkafoundry.com"
    },
    {
        "prefix": 100,
        "network": "ibtida",
        "displayName": "Anmol Network Ibtida Canary network",
        "symbols": [
            "IANML"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://anmol.network/"
    },
    {
        "prefix": 101,
        "network": "origintrail-parachain",
        "displayName": "OriginTrail Parachain",
        "symbols": [
            "OTP"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://parachain.origintrail.io/"
    },
    {
        "prefix": 105,
        "network": "pontem-network",
        "displayName": "Pontem Network",
        "symbols": [
            "PONT"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://pontem.network"
    },
    {
        "prefix": 110,
        "network": "heiko",
        "displayName": "Heiko",
        "symbols": [
            "HKO"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://parallel.fi/"
    },
    {
        "prefix": 113,
        "network": "integritee-incognito",
        "displayName": "Integritee Incognito",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": "https://integritee.network"
    },
    {
        "prefix": 117,
        "network": "tinker",
        "displayName": "Tinker",
        "symbols": [
            "TNKR"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://invarch.network"
    },
    {
        "prefix": 126,
        "network": "joystream",
        "displayName": "Joystream",
        "symbols": [
            "JOY"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://www.joystream.org"
    },
    {
        "prefix": 128,
        "network": "clover",
        "displayName": "Clover Finance",
        "symbols": [
            "CLV"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://clover.finance"
    },
    {
        "prefix": 129,
        "network": "dorafactory-polkadot",
        "displayName": "Dorafactory Polkadot Network",
        "symbols": [
            "DORA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://dorafactory.org"
    },
    {
        "prefix": 131,
        "network": "litmus",
        "displayName": "Litmus Network",
        "symbols": [
            "LIT"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://litentry.com/"
    },
    {
        "prefix": 136,
        "network": "altair",
        "displayName": "Altair",
        "symbols": [
            "AIR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://centrifuge.io/"
    },
    {
        "prefix": 137,
        "network": "vara",
        "displayName": "Vara Network",
        "symbols": [
            "VARA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://vara.network/"
    },
    {
        "prefix": 172,
        "network": "parallel",
        "displayName": "Parallel",
        "symbols": [
            "PARA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://parallel.fi/"
    },
    {
        "prefix": 252,
        "network": "social-network",
        "displayName": "Social Network",
        "symbols": [
            "NET"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://social.network"
    },
    {
        "prefix": 255,
        "network": "quartz_mainnet",
        "displayName": "QUARTZ by UNIQUE",
        "symbols": [
            "QTZ"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://unique.network"
    },
    {
        "prefix": 268,
        "network": "pioneer_network",
        "displayName": "Pioneer Network by Bit.Country",
        "symbols": [
            "NEER"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://bit.country"
    },
    {
        "prefix": 420,
        "network": "sora_kusama_para",
        "displayName": "SORA Kusama Parachain",
        "symbols": [
            "XOR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://sora.org"
    },
    {
        "prefix": 440,
        "network": "allfeat_network",
        "displayName": "Allfeat Network",
        "symbols": [
            "AFT"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://allfeat.network"
    },
    {
        "prefix": 666,
        "network": "metaquity_network",
        "displayName": "Metaquity Network",
        "symbols": [
            "MQTY"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://metaquity.xyz/"
    },
    {
        "prefix": 777,
        "network": "curio",
        "displayName": "Curio",
        "symbols": [
            "CGT"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://parachain.capitaldex.exchange/"
    },
    {
        "prefix": 789,
        "network": "geek",
        "displayName": "GEEK Network",
        "symbols": [
            "GEEK"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://geek.gl"
    },
    {
        "prefix": 995,
        "network": "ternoa",
        "displayName": "Ternoa",
        "symbols": [
            "CAPS"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://www.ternoa.network"
    },
    {
        "prefix": 1110,
        "network": "efinity",
        "displayName": "Efinity",
        "symbols": [
            "EFI"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://efinity.io/"
    },
    {
        "prefix": 1221,
        "network": "peaq",
        "displayName": "Peaq Network",
        "symbols": [
            "PEAQ"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "Sr25519",
        "website": "https://www.peaq.network/"
    },
    {
        "prefix": 1222,
        "network": "krest",
        "displayName": "Krest Network",
        "symbols": [
            "KREST"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "Sr25519",
        "website": "https://www.peaq.network/"
    },
    {
        "prefix": 1284,
        "network": "moonbeam",
        "displayName": "Moonbeam",
        "symbols": [
            "GLMR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "secp256k1",
        "website": "https://moonbeam.network"
    },
    {
        "prefix": 1285,
        "network": "moonriver",
        "displayName": "Moonriver",
        "symbols": [
            "MOVR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "secp256k1",
        "website": "https://moonbeam.network"
    },
    {
        "prefix": 1328,
        "network": "ajuna",
        "displayName": "Ajuna Network",
        "symbols": [
            "AJUN"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://ajuna.io"
    },
    {
        "prefix": 1337,
        "network": "bajun",
        "displayName": "Bajun Network",
        "symbols": [
            "BAJU"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://ajuna.io"
    },
    {
        "prefix": 1516,
        "network": "societal",
        "displayName": "Societal",
        "symbols": [
            "SCTL"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://www.sctl.xyz"
    },
    {
        "prefix": 1985,
        "network": "seals",
        "displayName": "Seals Network",
        "symbols": [
            "SEAL"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://seals.app"
    },
    {
        "prefix": 2007,
        "network": "kapex",
        "displayName": "Kapex",
        "symbols": [
            "KAPEX"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://totemaccounting.com"
    },
    {
        "prefix": 2009,
        "network": "cloudwalk_mainnet",
        "displayName": "CloudWalk Network Mainnet",
        "symbols": [
            "CWN"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://explorer.mainnet.cloudwalk.io"
    },
    {
        "prefix": 2021,
        "network": "logion",
        "displayName": "logion network",
        "symbols": [
            "LGNT"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://logion.network"
    },
    {
        "prefix": 2024,
        "network": "vow-chain",
        "displayName": "Enigmatic Smile",
        "symbols": [
            "VOW"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://www.vow.foundation/"
    },
    {
        "prefix": 2032,
        "network": "interlay",
        "displayName": "Interlay",
        "symbols": [
            "INTR"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://interlay.io/"
    },
    {
        "prefix": 2092,
        "network": "kintsugi",
        "displayName": "Kintsugi",
        "symbols": [
            "KINT"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://interlay.io/"
    },
    {
        "prefix": 2106,
        "network": "bitgreen",
        "displayName": "Bitgreen",
        "symbols": [
            "BBB"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://bitgreen.org/"
    },
    {
        "prefix": 2112,
        "network": "chainflip",
        "displayName": "Chainflip",
        "symbols": [
            "FLIP"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://chainflip.io/"
    },
    {
        "prefix": 2199,
        "network": "moonsama",
        "displayName": "Moonsama",
        "symbols": [
            "SAMA"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "secp256k1",
        "website": "https://moonsama.com"
    },
    {
        "prefix": 2206,
        "network": "ICE",
        "displayName": "ICE Network",
        "symbols": [
            "ICY"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://icenetwork.io"
    },
    {
        "prefix": 2207,
        "network": "SNOW",
        "displayName": "SNOW: ICE Canary Network",
        "symbols": [
            "ICZ"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://icenetwork.io"
    },
    {
        "prefix": 2254,
        "network": "subspace_testnet",
        "displayName": "Subspace testnet",
        "symbols": [
            "tSSC"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://subspace.network"
    },
    {
        "prefix": 3333,
        "network": "peerplays",
        "displayName": "Peerplays",
        "symbols": [
            "PPY"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "secp256k1",
        "website": "https://www.peerplays.com/"
    },
    {
        "prefix": 4450,
        "network": "g1",
        "displayName": "Ğ1",
        "symbols": [
            "G1"
        ],
        "decimals": [
            2
        ],
        "standardAccount": "*25519",
        "website": "https://duniter.org"
    },
    {
        "prefix": 5234,
        "network": "humanode",
        "displayName": "Humanode Network",
        "symbols": [
            "HMND"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://humanode.io"
    },
    {
        "prefix": 5845,
        "network": "tangle",
        "displayName": "Tangle Network",
        "symbols": [
            "TNT"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://www.tangle.tools/"
    },
    {
        "prefix": 6094,
        "network": "autonomys",
        "displayName": "Autonomys",
        "symbols": [
            "AI3"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://autonomys.xyz"
    },
    {
        "prefix": 7007,
        "network": "tidefi",
        "displayName": "Tidefi",
        "symbols": [
            "TDFY"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://tidefi.com"
    },
    {
        "prefix": 7013,
        "network": "gm",
        "displayName": "GM",
        "symbols": [
            "FREN",
            "GM",
            "GN"
        ],
        "decimals": [
            12,
            0,
            0
        ],
        "standardAccount": "*25519",
        "website": "https://gmordie.com"
    },
    {
        "prefix": 7306,
        "network": "krigan",
        "displayName": "Krigan Network",
        "symbols": [
            "KRGN"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://krigan.network"
    },
    {
        "prefix": 7391,
        "network": "unique_mainnet",
        "displayName": "Unique Network",
        "symbols": [
            "UNQ"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://unique.network"
    },
    {
        "prefix": 8866,
        "network": "golden_gate",
        "displayName": "Golden Gate",
        "symbols": [
            "GGX"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://ggxchain.io/"
    },
    {
        "prefix": 8883,
        "network": "sapphire_mainnet",
        "displayName": "Sapphire by Unique",
        "symbols": [
            "QTZ"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://unique.network"
    },
    {
        "prefix": 8886,
        "network": "golden_gate_sydney",
        "displayName": "Golden Gate Sydney",
        "symbols": [
            "GGXT"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://ggxchain.io/"
    },
    {
        "prefix": 9072,
        "network": "hashed",
        "displayName": "Hashed Network",
        "symbols": [
            "HASH"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://hashed.network"
    },
    {
        "prefix": 9807,
        "network": "dentnet",
        "displayName": "DENTNet",
        "symbols": [
            "DENTX"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://www.dentnet.io"
    },
    {
        "prefix": 9935,
        "network": "t3rn",
        "displayName": "t3rn",
        "symbols": [
            "TRN"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://t3rn.io/"
    },
    {
        "prefix": 10041,
        "network": "basilisk",
        "displayName": "Basilisk",
        "symbols": [
            "BSX"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://bsx.fi"
    },
    {
        "prefix": 11330,
        "network": "cess-testnet",
        "displayName": "CESS Testnet",
        "symbols": [
            "TCESS"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://cess.cloud"
    },
    {
        "prefix": 11331,
        "network": "cess",
        "displayName": "CESS",
        "symbols": [
            "CESS"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://cess.cloud"
    },
    {
        "prefix": 11486,
        "network": "luhn",
        "displayName": "Luhn Network",
        "symbols": [
            "LUHN"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://luhn.network"
    },
    {
        "prefix": 11820,
        "network": "contextfree",
        "displayName": "Automata ContextFree",
        "symbols": [
            "CTX"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://ata.network"
    },
    {
        "prefix": 12155,
        "network": "impact",
        "displayName": "Impact Protocol Network",
        "symbols": [
            "BSTY"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://impactprotocol.network/"
    },
    {
        "prefix": 12191,
        "network": "nftmart",
        "displayName": "NFTMart",
        "symbols": [
            "NMT"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://nftmart.io"
    },
    {
        "prefix": 12850,
        "network": "analog-timechain",
        "displayName": "Analog Timechain",
        "symbols": [
            "ANLOG"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://analog.one"
    },
    {
        "prefix": 13116,
        "network": "bittensor",
        "displayName": "Bittensor",
        "symbols": [
            "TAO"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://bittensor.com"
    },
    {
        "prefix": 14697,
        "network": "goro",
        "displayName": "GORO Network",
        "symbols": [
            "GORO"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://goro.network"
    },
    {
        "prefix": 14998,
        "network": "mosaic-chain",
        "displayName": "Mosaic Chain",
        "symbols": [
            "MOS"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://mosaicchain.io"
    },
    {
        "prefix": 29972,
        "network": "mythos",
        "displayName": "Mythos",
        "symbols": [
            "MYTH"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "secp256k1",
        "website": "https://mythos.foundation"
    },
    {
        "prefix": 8888,
        "network": "xcavate",
        "displayName": "Xcavate Protocol",
        "symbols": [
            "XCAV"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://xcavate.io/"
    }
];
}}),
"[project]/node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/defaults/ledger.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "knownLedger": (()=>knownLedger)
});
const knownLedger = {
    acala: 0x00000313,
    ajuna: 0x00000162,
    'aleph-node': 0x00000283,
    astar: 0x0000032a,
    bifrost: 0x00000314,
    'bifrost-kusama': 0x00000314,
    bittensor: 0x00000162,
    centrifuge: 0x000002eb,
    composable: 0x00000162,
    darwinia: 0x00000162,
    'dock-mainnet': 0x00000252,
    edgeware: 0x0000020b,
    encointer: 0x000001b2,
    enjin: 0x00000483,
    equilibrium: 0x05f5e0fd,
    frequency: 0x0000082b,
    genshiro: 0x05f5e0fc,
    hydradx: 0x00000162,
    integritee: 0x000007df,
    'interlay-parachain': 0x00000162,
    karura: 0x000002ae,
    khala: 0x000001b2,
    kusama: 0x000001b2,
    matrixchain: 0x00000483,
    nodle: 0x000003eb,
    origintrail: 0x00000162,
    parallel: 0x00000162,
    peaq: 0x00000d0a,
    pendulum: 0x00000162,
    phala: 0x00000162,
    picasso: 0x000001b2,
    polimec: 0x00000d10,
    polkadex: 0x0000031f,
    polkadot: 0x00000162,
    polymesh: 0x00000253,
    quartz: 0x00000277,
    sora: 0x00000269,
    stafi: 0x0000038b,
    statemine: 0x000001b2,
    statemint: 0x00000162,
    ternoa: 0x00003e3,
    unique: 0x00000295,
    vara: 0x00001370,
    vtb: 0x000002b6,
    xxnetwork: 0x000007a3,
    zeitgeist: 0x00000162
};
}}),
"[project]/node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/defaults/genesis.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "knownGenesis": (()=>knownGenesis)
});
const knownGenesis = {
    acala: [
        '0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'
    ],
    ajuna: [
        '0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee'
    ],
    'aleph-node': [
        '0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e'
    ],
    astar: [
        '0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'
    ],
    basilisk: [
        '0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'
    ],
    bifrost: [
        '0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b'
    ],
    'bifrost-kusama': [
        '0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed'
    ],
    bittensor: [
        '0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03'
    ],
    centrifuge: [
        '0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82',
        '0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'
    ],
    cere: [
        '0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c'
    ],
    composable: [
        '0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d'
    ],
    darwinia: [
        '0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6'
    ],
    'dock-mainnet': [
        '0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae',
        '0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'
    ],
    edgeware: [
        '0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'
    ],
    encointer: [
        '0x7dd99936c1e9e6d1ce7d90eb6f33bea8393b4bf87677d675aa63c9cb3e8c5b5b'
    ],
    enjin: [
        '0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9'
    ],
    equilibrium: [
        '0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'
    ],
    frequency: [
        '0x4a587bf17a404e3572747add7aab7bbe56e805a5479c6c436f07f36fcc8d3ae1'
    ],
    genshiro: [
        '0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'
    ],
    hydradx: [
        '0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d',
        '0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc',
        '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9',
        '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047',
        '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1
    ],
    integritee: [
        '0xcdedc8eadbfa209d3f207bba541e57c3c58a667b05a2e1d1e86353c9000758da',
        '0xe13e7af377c64e83f95e0d70d5e5c3c01d697a84538776c5b9bbe0e7d7b6034c' // on Polkadot
    ],
    'interlay-parachain': [
        '0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72'
    ],
    karura: [
        '0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'
    ],
    khala: [
        '0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d'
    ],
    kulupu: [
        '0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'
    ],
    kusama: [
        '0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe',
        '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636',
        '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1
    ],
    matrixchain: [
        '0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615'
    ],
    nodle: [
        '0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21'
    ],
    origintrail: [
        '0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174'
    ],
    p3d: [
        '0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66'
    ],
    parallel: [
        '0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97'
    ],
    peaq: [
        '0xd2a5d385932d1f650dae03ef8e2748983779ee342c614f80854d32b8cd8fa48c'
    ],
    pendulum: [
        '0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86'
    ],
    phala: [
        '0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736'
    ],
    picasso: [
        '0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc',
        '0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c'
    ],
    polimec: [
        '0x7eb9354488318e7549c722669dcbdcdc526f1fef1420e7944667212f3601fdbd'
    ],
    polkadex: [
        '0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c'
    ],
    polkadot: [
        '0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'
    ],
    polymesh: [
        '0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'
    ],
    quartz: [
        '0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554'
    ],
    rococo: [
        '0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e',
        '0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897',
        '0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770',
        '0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff',
        '0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a',
        '0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9',
        '0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779',
        '0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215',
        '0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9',
        '0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147',
        '0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd',
        '0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299'
    ],
    sora: [
        '0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5'
    ],
    stafi: [
        '0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'
    ],
    statemine: [
        '0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'
    ],
    statemint: [
        '0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f'
    ],
    subsocial: [
        '0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8'
    ],
    ternoa: [
        '0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e'
    ],
    unique: [
        '0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31'
    ],
    vara: [
        '0xfe1b4c55fd4d668101126434206571a7838a8b6b93a6d1b95d607e78e6c53763'
    ],
    vtb: [
        '0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f',
        '0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa'
    ],
    westend: [
        '0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'
    ],
    xxnetwork: [
        '0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa'
    ],
    zeitgeist: [
        '0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060'
    ]
};
}}),
"[project]/node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/defaults/icons.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "knownIcon": (()=>knownIcon)
});
const knownIcon = {
    centrifuge: 'polkadot',
    kusama: 'polkadot',
    polkadot: 'polkadot',
    sora: 'polkadot',
    statemine: 'polkadot',
    statemint: 'polkadot',
    westmint: 'polkadot'
};
}}),
"[project]/node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/defaults/testnets.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "knownTestnet": (()=>knownTestnet)
});
const knownTestnet = {
    '': true,
    'cess-testnet': true,
    'dock-testnet': true,
    jupiter: true,
    'mathchain-testnet': true,
    p3dt: true,
    subspace_testnet: true,
    'zero-alphaville': true
};
}}),
"[project]/node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/interfaces.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "allNetworks": (()=>allNetworks),
    "availableNetworks": (()=>availableNetworks),
    "selectableNetworks": (()=>selectableNetworks)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$substrate$2b$ss58$2d$registry$40$1$2e$51$2e$0$2f$node_modules$2f40$substrate$2f$ss58$2d$registry$2f$esm$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@substrate+ss58-registry@1.51.0/node_modules/@substrate/ss58-registry/esm/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$networks$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$ledger$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/defaults/ledger.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$networks$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$genesis$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/defaults/genesis.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$networks$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$icons$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/defaults/icons.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$networks$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$testnets$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/defaults/testnets.js [app-route] (ecmascript)");
;
;
const UNSORTED = [
    0,
    2,
    42
];
const TESTNETS = [
    'testnet'
];
function toExpanded(o) {
    const network = o.network || '';
    const nameParts = network.replace(/_/g, '-').split('-');
    const n = o;
    // ledger additions
    n.slip44 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$networks$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$ledger$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["knownLedger"][network];
    n.hasLedgerSupport = !!n.slip44;
    // general items
    n.genesisHash = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$networks$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$genesis$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["knownGenesis"][network] || [];
    n.icon = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$networks$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$icons$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["knownIcon"][network] || 'substrate';
    // filtering
    n.isTestnet = !!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$networks$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$testnets$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["knownTestnet"][network] || TESTNETS.includes(nameParts[nameParts.length - 1]);
    n.isIgnored = n.isTestnet || !(o.standardAccount && o.decimals?.length && o.symbols?.length) && o.prefix !== 42;
    return n;
}
function filterSelectable({ genesisHash, prefix }) {
    return !!genesisHash.length || prefix === 42;
}
function filterAvailable(n) {
    return !n.isIgnored && !!n.network;
}
function sortNetworks(a, b) {
    const isUnSortedA = UNSORTED.includes(a.prefix);
    const isUnSortedB = UNSORTED.includes(b.prefix);
    return isUnSortedA === isUnSortedB ? isUnSortedA ? 0 : a.displayName.localeCompare(b.displayName) : isUnSortedA ? -1 : 1;
}
const allNetworks = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$substrate$2b$ss58$2d$registry$40$1$2e$51$2e$0$2f$node_modules$2f40$substrate$2f$ss58$2d$registry$2f$esm$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].map(toExpanded);
const availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks);
const selectableNetworks = availableNetworks.filter(filterSelectable);
}}),
"[project]/node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/packageInfo.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "packageInfo": (()=>packageInfo)
});
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_resolve_absolute_path__("node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/packageInfo.js")}`;
    }
};
const packageInfo = {
    name: '@polkadot/networks',
    path: __TURBOPACK__import$2e$meta__ && __TURBOPACK__import$2e$meta__.url ? new URL(__TURBOPACK__import$2e$meta__.url).pathname.substring(0, new URL(__TURBOPACK__import$2e$meta__.url).pathname.lastIndexOf('/') + 1) : 'auto',
    type: 'esm',
    version: '13.4.3'
};
}}),
"[project]/node_modules/.pnpm/@polkadot+x-randomvalues@13.4.3_@polkadot+util@13.4.3_@polkadot+wasm-util@7.4.1_@polkadot+util@13.4.3_/node_modules/@polkadot/x-randomvalues/node.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "crypto": (()=>crypto),
    "getRandomValues": (()=>getRandomValues)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+x-global@13.4.3/node_modules/@polkadot/x-global/index.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$crypto__$5b$external$5d$__$28$node$3a$crypto$2c$__cjs$29$__ = __turbopack_import__("[externals]/node:crypto [external] (node:crypto, cjs)");
;
;
;
const crypto = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["extractGlobal"])('crypto', __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$crypto__$5b$external$5d$__$28$node$3a$crypto$2c$__cjs$29$__["default"].webcrypto);
function getRandomValues(output) {
    return crypto.getRandomValues(output);
}
}}),
"[project]/node_modules/.pnpm/@polkadot+x-randomvalues@13.4.3_@polkadot+util@13.4.3_@polkadot+wasm-util@7.4.1_@polkadot+util@13.4.3_/node_modules/@polkadot/x-randomvalues/packageInfo.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "packageInfo": (()=>packageInfo)
});
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_resolve_absolute_path__("node_modules/.pnpm/@polkadot+x-randomvalues@13.4.3_@polkadot+util@13.4.3_@polkadot+wasm-util@7.4.1_@polkadot+util@13.4.3_/node_modules/@polkadot/x-randomvalues/packageInfo.js")}`;
    }
};
const packageInfo = {
    name: '@polkadot/x-randomvalues',
    path: __TURBOPACK__import$2e$meta__ && __TURBOPACK__import$2e$meta__.url ? new URL(__TURBOPACK__import$2e$meta__.url).pathname.substring(0, new URL(__TURBOPACK__import$2e$meta__.url).pathname.lastIndexOf('/') + 1) : 'auto',
    type: 'esm',
    version: '13.4.3'
};
}}),
"[project]/node_modules/.pnpm/@polkadot+wasm-bridge@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_gvlwcquwhwduchieihclbuz4qa/node_modules/@polkadot/wasm-bridge/wbg.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Wbg": (()=>Wbg)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$wasm$2d$util$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$2f$node_modules$2f40$polkadot$2f$x$2d$randomvalues$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+x-randomvalues@13.4.3_@polkadot+util@13.4.3_@polkadot+wasm-util@7.4.1_@polkadot+util@13.4.3_/node_modules/@polkadot/x-randomvalues/node.js [app-route] (ecmascript) <locals>");
;
const DEFAULT_CRYPTO = {
    getRandomValues: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$wasm$2d$util$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$2f$node_modules$2f40$polkadot$2f$x$2d$randomvalues$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["getRandomValues"]
};
const DEFAULT_SELF = {
    crypto: DEFAULT_CRYPTO
};
class Wbg {
    __internal__bridge;
    constructor(bridge){
        this.__internal__bridge = bridge;
    }
    /** @internal */ abort = ()=>{
        throw new Error('abort');
    };
    /** @internal */ __wbindgen_is_undefined = (idx)=>{
        return this.__internal__bridge.getObject(idx) === undefined;
    };
    /** @internal */ __wbindgen_throw = (ptr, len)=>{
        throw new Error(this.__internal__bridge.getString(ptr, len));
    };
    /** @internal */ __wbg_self_1b7a39e3a92c949c = ()=>{
        return this.__internal__bridge.addObject(DEFAULT_SELF);
    };
    /** @internal */ __wbg_require_604837428532a733 = (ptr, len)=>{
        throw new Error(`Unable to require ${this.__internal__bridge.getString(ptr, len)}`);
    };
    /** @internal */ __wbg_crypto_968f1772287e2df0 = (_idx)=>{
        return this.__internal__bridge.addObject(DEFAULT_CRYPTO);
    };
    /** @internal */ __wbg_getRandomValues_a3d34b4fee3c2869 = (_idx)=>{
        return this.__internal__bridge.addObject(DEFAULT_CRYPTO.getRandomValues);
    };
    /** @internal */ __wbg_getRandomValues_f5e14ab7ac8e995d = (_arg0, ptr, len)=>{
        DEFAULT_CRYPTO.getRandomValues(this.__internal__bridge.getU8a(ptr, len));
    };
    /** @internal */ __wbg_randomFillSync_d5bd2d655fdf256a = (_idx, _ptr, _len)=>{
        throw new Error('randomFillsync is not available');
    // getObject(idx).randomFillSync(getU8a(ptr, len));
    };
    /** @internal */ __wbindgen_object_drop_ref = (idx)=>{
        this.__internal__bridge.takeObject(idx);
    };
}
}}),
"[project]/node_modules/.pnpm/@polkadot+wasm-bridge@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_gvlwcquwhwduchieihclbuz4qa/node_modules/@polkadot/wasm-bridge/bridge.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Bridge": (()=>Bridge)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$bridge$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_gvlwcquwhwduchieihclbuz4qa$2f$node_modules$2f40$polkadot$2f$wasm$2d$bridge$2f$wbg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+wasm-bridge@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_gvlwcquwhwduchieihclbuz4qa/node_modules/@polkadot/wasm-bridge/wbg.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/u8a/toString.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/string/toU8a.js [app-route] (ecmascript)");
;
;
class Bridge {
    __internal__createWasm;
    __internal__heap;
    __internal__wbg;
    __internal__cachegetInt32;
    __internal__cachegetUint8;
    __internal__heapNext;
    __internal__wasm;
    __internal__wasmError;
    __internal__wasmPromise;
    __internal__type;
    constructor(createWasm){
        this.__internal__createWasm = createWasm;
        this.__internal__cachegetInt32 = null;
        this.__internal__cachegetUint8 = null;
        this.__internal__heap = new Array(32).fill(undefined).concat(undefined, null, true, false);
        this.__internal__heapNext = this.__internal__heap.length;
        this.__internal__type = 'none';
        this.__internal__wasm = null;
        this.__internal__wasmError = null;
        this.__internal__wasmPromise = null;
        this.__internal__wbg = {
            ...new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$bridge$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_gvlwcquwhwduchieihclbuz4qa$2f$node_modules$2f40$polkadot$2f$wasm$2d$bridge$2f$wbg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Wbg"](this)
        };
    }
    /** @description Returns the init error */ get error() {
        return this.__internal__wasmError;
    }
    /** @description Returns the init type */ get type() {
        return this.__internal__type;
    }
    /** @description Returns the created wasm interface */ get wasm() {
        return this.__internal__wasm;
    }
    /** @description Performs the wasm initialization */ async init(createWasm) {
        if (!this.__internal__wasmPromise || createWasm) {
            this.__internal__wasmPromise = (createWasm || this.__internal__createWasm)(this.__internal__wbg);
        }
        const { error, type, wasm } = await this.__internal__wasmPromise;
        this.__internal__type = type;
        this.__internal__wasm = wasm;
        this.__internal__wasmError = error;
        return this.__internal__wasm;
    }
    /**
     * @internal
     * @description Gets an object from the heap
     */ getObject(idx) {
        return this.__internal__heap[idx];
    }
    /**
     * @internal
     * @description Removes an object from the heap
     */ dropObject(idx) {
        if (idx < 36) {
            return;
        }
        this.__internal__heap[idx] = this.__internal__heapNext;
        this.__internal__heapNext = idx;
    }
    /**
     * @internal
     * @description Retrieves and removes an object to the heap
     */ takeObject(idx) {
        const ret = this.getObject(idx);
        this.dropObject(idx);
        return ret;
    }
    /**
     * @internal
     * @description Adds an object to the heap
     */ addObject(obj) {
        if (this.__internal__heapNext === this.__internal__heap.length) {
            this.__internal__heap.push(this.__internal__heap.length + 1);
        }
        const idx = this.__internal__heapNext;
        this.__internal__heapNext = this.__internal__heap[idx];
        this.__internal__heap[idx] = obj;
        return idx;
    }
    /**
     * @internal
     * @description Retrieve an Int32 in the WASM interface
     */ getInt32() {
        if (this.__internal__cachegetInt32 === null || this.__internal__cachegetInt32.buffer !== this.__internal__wasm.memory.buffer) {
            this.__internal__cachegetInt32 = new Int32Array(this.__internal__wasm.memory.buffer);
        }
        return this.__internal__cachegetInt32;
    }
    /**
     * @internal
     * @description Retrieve an Uint8Array in the WASM interface
     */ getUint8() {
        if (this.__internal__cachegetUint8 === null || this.__internal__cachegetUint8.buffer !== this.__internal__wasm.memory.buffer) {
            this.__internal__cachegetUint8 = new Uint8Array(this.__internal__wasm.memory.buffer);
        }
        return this.__internal__cachegetUint8;
    }
    /**
     * @internal
     * @description Retrieves an Uint8Array in the WASM interface
     */ getU8a(ptr, len) {
        return this.getUint8().subarray(ptr / 1, ptr / 1 + len);
    }
    /**
     * @internal
     * @description Retrieves a string in the WASM interface
     */ getString(ptr, len) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["u8aToString"])(this.getU8a(ptr, len));
    }
    /**
     * @internal
     * @description Allocates an Uint8Array in the WASM interface
     */ allocU8a(arg) {
        const ptr = this.__internal__wasm.__wbindgen_malloc(arg.length * 1);
        this.getUint8().set(arg, ptr / 1);
        return [
            ptr,
            arg.length
        ];
    }
    /**
     * @internal
     * @description Allocates a string in the WASM interface
     */ allocString(arg) {
        return this.allocU8a((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringToU8a"])(arg));
    }
    /**
     * @internal
     * @description Retrieves an Uint8Array from the WASM interface
     */ resultU8a() {
        const r0 = this.getInt32()[8 / 4 + 0];
        const r1 = this.getInt32()[8 / 4 + 1];
        const ret = this.getU8a(r0, r1).slice();
        this.__internal__wasm.__wbindgen_free(r0, r1 * 1);
        return ret;
    }
    /**
     * @internal
     * @description Retrieve a string from the WASM interface
     */ resultString() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["u8aToString"])(this.resultU8a());
    }
}
}}),
"[project]/node_modules/.pnpm/@polkadot+wasm-bridge@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_gvlwcquwhwduchieihclbuz4qa/node_modules/@polkadot/wasm-bridge/init.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * @name createWasmFn
 * @description
 * Create a WASM (or ASM.js) creator interface based on the supplied information.
 *
 * It will attempt to create a WASM interface first and if this fails or is not available in
 * the environment, will fallback to attempting to create an ASM.js interface.
 */ __turbopack_esm__({
    "createWasmFn": (()=>createWasmFn)
});
function createWasmFn(root, wasmBytes, asmFn) {
    return async (wbg)=>{
        const result = {
            error: null,
            type: 'none',
            wasm: null
        };
        try {
            if (!wasmBytes?.length) {
                throw new Error('No WebAssembly provided for initialization');
            } else if (typeof WebAssembly !== 'object' || typeof WebAssembly.instantiate !== 'function') {
                throw new Error('WebAssembly is not available in your environment');
            }
            const source = await WebAssembly.instantiate(wasmBytes, {
                wbg
            });
            result.wasm = source.instance.exports;
            result.type = 'wasm';
        } catch (error) {
            // if we have a valid supplied asm.js, return that
            if (typeof asmFn === 'function') {
                result.wasm = asmFn(wbg);
                result.type = 'asm';
            } else {
                result.error = `FATAL: Unable to initialize @polkadot/wasm-${root}:: ${error.message}`;
                console.error(result.error);
            }
        }
        return result;
    };
}
}}),
"[project]/node_modules/.pnpm/@polkadot+x-textdecoder@13.4.3/node_modules/@polkadot/x-textdecoder/node.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "TextDecoder": (()=>TextDecoder)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+x-global@13.4.3/node_modules/@polkadot/x-global/index.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$util__$5b$external$5d$__$28$node$3a$util$2c$__cjs$29$__ = __turbopack_import__("[externals]/node:util [external] (node:util, cjs)");
;
;
;
const TextDecoder = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["extractGlobal"])('TextDecoder', __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$util__$5b$external$5d$__$28$node$3a$util$2c$__cjs$29$__["default"].TextDecoder);
}}),
"[project]/node_modules/.pnpm/@polkadot+x-textdecoder@13.4.3/node_modules/@polkadot/x-textdecoder/packageInfo.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "packageInfo": (()=>packageInfo)
});
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_resolve_absolute_path__("node_modules/.pnpm/@polkadot+x-textdecoder@13.4.3/node_modules/@polkadot/x-textdecoder/packageInfo.js")}`;
    }
};
const packageInfo = {
    name: '@polkadot/x-textdecoder',
    path: __TURBOPACK__import$2e$meta__ && __TURBOPACK__import$2e$meta__.url ? new URL(__TURBOPACK__import$2e$meta__.url).pathname.substring(0, new URL(__TURBOPACK__import$2e$meta__.url).pathname.lastIndexOf('/') + 1) : 'auto',
    type: 'esm',
    version: '13.4.3'
};
}}),
"[project]/node_modules/.pnpm/@polkadot+wasm-util@7.4.1_@polkadot+util@13.4.3/node_modules/@polkadot/wasm-util/fflate.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "unzlibSync": (()=>unzlibSync)
});
const u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;
const clim = new u8([
    16,
    17,
    18,
    0,
    8,
    7,
    9,
    6,
    10,
    5,
    11,
    4,
    12,
    3,
    13,
    2,
    14,
    1,
    15
]);
const fleb = new u8([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    4,
    4,
    4,
    4,
    5,
    5,
    5,
    5,
    0,
    /* unused */ 0,
    0,
    /* impossible */ 0
]);
const fdeb = new u8([
    0,
    0,
    0,
    0,
    1,
    1,
    2,
    2,
    3,
    3,
    4,
    4,
    5,
    5,
    6,
    6,
    7,
    7,
    8,
    8,
    9,
    9,
    10,
    10,
    11,
    11,
    12,
    12,
    13,
    13,
    /* unused */ 0,
    0
]);
const freb = (eb, start)=>{
    const b = new u16(31);
    for(let i = 0; i < 31; ++i){
        b[i] = start += 1 << eb[i - 1];
    }
    // numbers here are at max 18 bits
    const r = new u32(b[30]);
    for(let i = 1; i < 30; ++i){
        for(let j = b[i]; j < b[i + 1]; ++j){
            r[j] = j - b[i] << 5 | i;
        }
    }
    return [
        b,
        r
    ];
};
const [fl, revfl] = freb(fleb, 2);
fl[28] = 258, revfl[258] = 28;
const [fd] = freb(fdeb, 0);
const rev = new u16(32768);
for(let i = 0; i < 32768; ++i){
    // reverse table algorithm from SO
    let x = (i & 0xAAAA) >>> 1 | (i & 0x5555) << 1;
    x = (x & 0xCCCC) >>> 2 | (x & 0x3333) << 2;
    x = (x & 0xF0F0) >>> 4 | (x & 0x0F0F) << 4;
    rev[i] = ((x & 0xFF00) >>> 8 | (x & 0x00FF) << 8) >>> 1;
}
const hMap = (cd, mb, r)=>{
    const s = cd.length;
    // index
    let i = 0;
    // u16 "map": index -> # of codes with bit length = index
    const l = new u16(mb);
    // length of cd must be 288 (total # of codes)
    for(; i < s; ++i){
        if (cd[i]) ++l[cd[i] - 1];
    }
    // u16 "map": index -> minimum code for bit length = index
    const le = new u16(mb);
    for(i = 1; i < mb; ++i){
        le[i] = le[i - 1] + l[i - 1] << 1;
    }
    let co;
    if (r) {
        // u16 "map": index -> number of actual bits, symbol for code
        co = new u16(1 << mb);
        // bits to remove for reverser
        const rvb = 15 - mb;
        for(i = 0; i < s; ++i){
            // ignore 0 lengths
            if (cd[i]) {
                // num encoding both symbol and bits read
                const sv = i << 4 | cd[i];
                // free bits
                const r = mb - cd[i];
                // start value
                let v = le[cd[i] - 1]++ << r;
                // m is end value
                for(const m = v | (1 << r) - 1; v <= m; ++v){
                    // every 16 bit value starting with the code yields the same result
                    co[rev[v] >> rvb] = sv;
                }
            }
        }
    } else {
        co = new u16(s);
        for(i = 0; i < s; ++i){
            if (cd[i]) {
                co[i] = rev[le[cd[i] - 1]++] >> 15 - cd[i];
            }
        }
    }
    return co;
};
const flt = new u8(288);
for(let i = 0; i < 144; ++i)flt[i] = 8;
for(let i = 144; i < 256; ++i)flt[i] = 9;
for(let i = 256; i < 280; ++i)flt[i] = 7;
for(let i = 280; i < 288; ++i)flt[i] = 8;
const fdt = new u8(32);
for(let i = 0; i < 32; ++i)fdt[i] = 5;
const flrm = hMap(flt, 9, 1);
const fdrm = hMap(fdt, 5, 1);
const bits = (d, p, m)=>{
    const o = p >>> 3;
    return (d[o] | d[o + 1] << 8) >>> (p & 7) & m;
};
const bits16 = (d, p)=>{
    const o = p >>> 3;
    return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >>> (p & 7);
};
const shft = (p)=>(p >>> 3) + (p & 7 && 1);
const slc = (v, s, e)=>{
    if (s == null || s < 0) s = 0;
    if (e == null || e > v.length) e = v.length;
    // can't use .constructor in case user-supplied
    const n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);
    n.set(v.subarray(s, e));
    return n;
};
const max = (a)=>{
    let m = a[0];
    for(let i = 1, count = a.length; i < count; ++i){
        if (a[i] > m) m = a[i];
    }
    return m;
};
const inflt = (dat, buf, st)=>{
    const noSt = !st || st.i;
    if (!st) st = {};
    // source length
    const sl = dat.length;
    // have to estimate size
    const noBuf = !buf || !noSt;
    // Assumes roughly 33% compression ratio average
    if (!buf) buf = new u8(sl * 3);
    // ensure buffer can fit at least l elements
    const cbuf = (l)=>{
        let bl = buf.length;
        // need to increase size to fit
        if (l > bl) {
            // Double or set to necessary, whichever is greater
            const nbuf = new u8(Math.max(bl << 1, l));
            nbuf.set(buf);
            buf = nbuf;
        }
    };
    //  last chunk         bitpos           bytes
    let final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;
    if (final && !lm) return buf;
    // total bits
    const tbts = sl << 3;
    do {
        if (!lm) {
            // BFINAL - this is only 1 when last chunk is next
            st.f = final = bits(dat, pos, 1);
            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman
            const type = bits(dat, pos + 1, 3);
            pos += 3;
            if (!type) {
                // go to end of byte boundary
                const s = shft(pos) + 4, l = dat[s - 4] | dat[s - 3] << 8, t = s + l;
                if (t > sl) {
                    if (noSt) throw 'unexpected EOF';
                    break;
                }
                // ensure size
                if (noBuf) cbuf(bt + l);
                // Copy over uncompressed data
                buf.set(dat.subarray(s, t), bt);
                // Get new bitpos, update byte count
                st.b = bt += l, st.p = pos = t << 3;
                continue;
            } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;
            else if (type == 2) {
                //  literal                            lengths
                const hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;
                const tl = hLit + bits(dat, pos + 5, 31) + 1;
                pos += 14;
                // length+distance tree
                const ldt = new u8(tl);
                // code length tree
                const clt = new u8(19);
                for(let i = 0; i < hcLen; ++i){
                    // use index map to get real code
                    clt[clim[i]] = bits(dat, pos + i * 3, 7);
                }
                pos += hcLen * 3;
                // code lengths bits
                const clb = max(clt), clbmsk = (1 << clb) - 1;
                if (!noSt && pos + tl * (clb + 7) > tbts) break;
                // code lengths map
                const clm = hMap(clt, clb, 1);
                for(let i = 0; i < tl;){
                    const r = clm[bits(dat, pos, clbmsk)];
                    // bits read
                    pos += r & 15;
                    // symbol
                    const s = r >>> 4;
                    // code length to copy
                    if (s < 16) {
                        ldt[i++] = s;
                    } else {
                        //  copy   count
                        let c = 0, n = 0;
                        if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];
                        else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;
                        else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;
                        while(n--)ldt[i++] = c;
                    }
                }
                //    length tree                 distance tree
                const lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);
                // max length bits
                lbt = max(lt);
                // max dist bits
                dbt = max(dt);
                lm = hMap(lt, lbt, 1);
                dm = hMap(dt, dbt, 1);
            } else throw 'invalid block type';
            if (pos > tbts) throw 'unexpected EOF';
        }
        // Make sure the buffer can hold this + the largest possible addition
        // maximum chunk size (practically, theoretically infinite) is 2^17;
        if (noBuf) cbuf(bt + 131072);
        const lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;
        const mxa = lbt + dbt + 18;
        while(noSt || pos + mxa < tbts){
            // bits read, code
            const c = lm[bits16(dat, pos) & lms], sym = c >>> 4;
            pos += c & 15;
            if (pos > tbts) throw 'unexpected EOF';
            if (!c) throw 'invalid length/literal';
            if (sym < 256) buf[bt++] = sym;
            else if (sym == 256) {
                lm = undefined;
                break;
            } else {
                let add = sym - 254;
                // no extra bits needed if less
                if (sym > 264) {
                    // index
                    const i = sym - 257, b = fleb[i];
                    add = bits(dat, pos, (1 << b) - 1) + fl[i];
                    pos += b;
                }
                // dist
                const d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;
                if (!d) throw 'invalid distance';
                pos += d & 15;
                let dt = fd[dsym];
                if (dsym > 3) {
                    const b = fdeb[dsym];
                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;
                }
                if (pos > tbts) throw 'unexpected EOF';
                if (noBuf) cbuf(bt + 131072);
                const end = bt + add;
                for(; bt < end; bt += 4){
                    buf[bt] = buf[bt - dt];
                    buf[bt + 1] = buf[bt + 1 - dt];
                    buf[bt + 2] = buf[bt + 2 - dt];
                    buf[bt + 3] = buf[bt + 3 - dt];
                }
                bt = end;
            }
        }
        st.l = lm, st.p = pos, st.b = bt;
        if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;
    }while (!final)
    return bt == buf.length ? buf : slc(buf, 0, bt);
};
const zlv = (d)=>{
    if ((d[0] & 15) != 8 || d[0] >>> 4 > 7 || (d[0] << 8 | d[1]) % 31) throw 'invalid zlib data';
    if (d[1] & 32) throw 'invalid zlib data: preset dictionaries not supported';
};
function unzlibSync(data, out) {
    return inflt((zlv(data), data.subarray(2, -4)), out);
}
}}),
"[project]/node_modules/.pnpm/@polkadot+wasm-util@7.4.1_@polkadot+util@13.4.3/node_modules/@polkadot/wasm-util/base64.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "base64Decode": (()=>base64Decode)
});
const CHR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
const map = new Array(256);
for(let i = 0, count = CHR.length; i < count; i++){
    map[CHR.charCodeAt(i)] = i;
}
function base64Decode(data, out) {
    let byte = 0;
    let bits = 0;
    let pos = -1;
    for(let i = 0, last = out.length - 1; pos !== last; i++){
        // each character represents 6 bits
        byte = byte << 6 | map[data.charCodeAt(i)];
        // each byte needs to contain 8 bits
        if ((bits += 6) >= 8) {
            out[++pos] = byte >>> (bits -= 8) & 0xff;
        }
    }
    return out;
}
}}),
"[project]/node_modules/.pnpm/@polkadot+wasm-crypto-init@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polka_plbk3rgq6ut3sweulmfkixmf54/node_modules/@polkadot/wasm-crypto-init/wasm.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createWasm": (()=>createWasm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$bridge$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_gvlwcquwhwduchieihclbuz4qa$2f$node_modules$2f40$polkadot$2f$wasm$2d$bridge$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+wasm-bridge@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_gvlwcquwhwduchieihclbuz4qa/node_modules/@polkadot/wasm-bridge/init.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$2d$wasm$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2d$wasm$2f$bundle$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+wasm-crypto-wasm@7.4.1_@polkadot+util@13.4.3/node_modules/@polkadot/wasm-crypto-wasm/bundle.js [app-route] (ecmascript) <locals>");
;
;
;
const createWasm = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$bridge$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_gvlwcquwhwduchieihclbuz4qa$2f$node_modules$2f40$polkadot$2f$wasm$2d$bridge$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createWasmFn"])('crypto', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$2d$wasm$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2d$wasm$2f$bundle$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["wasmBytes"], null);
}}),
"[project]/node_modules/.pnpm/@polkadot+wasm-crypto@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_3a6p6dwoyg77iyxprahdteacfa/node_modules/@polkadot/wasm-crypto/init.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "bridge": (()=>bridge),
    "initBridge": (()=>initBridge)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$bridge$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_gvlwcquwhwduchieihclbuz4qa$2f$node_modules$2f40$polkadot$2f$wasm$2d$bridge$2f$bridge$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+wasm-bridge@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_gvlwcquwhwduchieihclbuz4qa/node_modules/@polkadot/wasm-bridge/bridge.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$2d$init$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polka_plbk3rgq6ut3sweulmfkixmf54$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2d$init$2f$wasm$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+wasm-crypto-init@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polka_plbk3rgq6ut3sweulmfkixmf54/node_modules/@polkadot/wasm-crypto-init/wasm.js [app-route] (ecmascript) <locals>");
;
;
const bridge = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$bridge$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_gvlwcquwhwduchieihclbuz4qa$2f$node_modules$2f40$polkadot$2f$wasm$2d$bridge$2f$bridge$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Bridge"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$2d$init$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polka_plbk3rgq6ut3sweulmfkixmf54$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2d$init$2f$wasm$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["createWasm"]);
async function initBridge(createWasm) {
    return bridge.init(createWasm);
}
}}),
"[project]/node_modules/.pnpm/@polkadot+wasm-crypto@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_3a6p6dwoyg77iyxprahdteacfa/node_modules/@polkadot/wasm-crypto/bundle.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "bip39Generate": (()=>bip39Generate),
    "bip39ToEntropy": (()=>bip39ToEntropy),
    "bip39ToMiniSecret": (()=>bip39ToMiniSecret),
    "bip39ToSeed": (()=>bip39ToSeed),
    "bip39Validate": (()=>bip39Validate),
    "blake2b": (()=>blake2b),
    "ed25519KeypairFromSeed": (()=>ed25519KeypairFromSeed),
    "ed25519Sign": (()=>ed25519Sign),
    "ed25519Verify": (()=>ed25519Verify),
    "hmacSha256": (()=>hmacSha256),
    "hmacSha512": (()=>hmacSha512),
    "isReady": (()=>isReady),
    "keccak256": (()=>keccak256),
    "keccak512": (()=>keccak512),
    "pbkdf2": (()=>pbkdf2),
    "scrypt": (()=>scrypt),
    "secp256k1Compress": (()=>secp256k1Compress),
    "secp256k1Expand": (()=>secp256k1Expand),
    "secp256k1FromSeed": (()=>secp256k1FromSeed),
    "secp256k1Recover": (()=>secp256k1Recover),
    "secp256k1Sign": (()=>secp256k1Sign),
    "sha256": (()=>sha256),
    "sha512": (()=>sha512),
    "sr25519Agree": (()=>sr25519Agree),
    "sr25519DeriveKeypairHard": (()=>sr25519DeriveKeypairHard),
    "sr25519DeriveKeypairSoft": (()=>sr25519DeriveKeypairSoft),
    "sr25519DerivePublicSoft": (()=>sr25519DerivePublicSoft),
    "sr25519KeypairFromSeed": (()=>sr25519KeypairFromSeed),
    "sr25519Sign": (()=>sr25519Sign),
    "sr25519Verify": (()=>sr25519Verify),
    "twox": (()=>twox),
    "vrfSign": (()=>vrfSign),
    "vrfVerify": (()=>vrfVerify),
    "waitReady": (()=>waitReady)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+wasm-crypto@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_3a6p6dwoyg77iyxprahdteacfa/node_modules/@polkadot/wasm-crypto/init.js [app-route] (ecmascript)");
;
;
;
/**
 * @internal
 * @description
 * This create an extenal interface function from the signature, all the while checking
 * the actual bridge wasm interface to ensure it has been initialized.
 *
 * This means that we can call it
 *
 *   withWasm(wasm: WasmCryptoInstance, a: number, b: string) => Uint8Array
 *
 * and in this case it will create an interface function with the signarure
 *
 *   (a: number, b: string) => Uint8Array
 */ function withWasm(fn) {
    return (...params)=>{
        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].wasm) {
            throw new Error('The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');
        }
        return fn(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].wasm, ...params);
    };
}
const bip39Generate = /*#__PURE__*/ withWasm((wasm, words)=>{
    wasm.ext_bip39_generate(8, words);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultString();
});
const bip39ToEntropy = /*#__PURE__*/ withWasm((wasm, phrase)=>{
    wasm.ext_bip39_to_entropy(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocString(phrase));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const bip39ToMiniSecret = /*#__PURE__*/ withWasm((wasm, phrase, password)=>{
    wasm.ext_bip39_to_mini_secret(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocString(phrase), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocString(password));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const bip39ToSeed = /*#__PURE__*/ withWasm((wasm, phrase, password)=>{
    wasm.ext_bip39_to_seed(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocString(phrase), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocString(password));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const bip39Validate = /*#__PURE__*/ withWasm((wasm, phrase)=>{
    const ret = wasm.ext_bip39_validate(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocString(phrase));
    return ret !== 0;
});
const ed25519KeypairFromSeed = /*#__PURE__*/ withWasm((wasm, seed)=>{
    wasm.ext_ed_from_seed(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(seed));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const ed25519Sign = /*#__PURE__*/ withWasm((wasm, pubkey, seckey, message)=>{
    wasm.ext_ed_sign(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(seckey), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(message));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const ed25519Verify = /*#__PURE__*/ withWasm((wasm, signature, message, pubkey)=>{
    const ret = wasm.ext_ed_verify(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(signature), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(message), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey));
    return ret !== 0;
});
const secp256k1FromSeed = /*#__PURE__*/ withWasm((wasm, seckey)=>{
    wasm.ext_secp_from_seed(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(seckey));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const secp256k1Compress = /*#__PURE__*/ withWasm((wasm, pubkey)=>{
    wasm.ext_secp_pub_compress(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const secp256k1Expand = /*#__PURE__*/ withWasm((wasm, pubkey)=>{
    wasm.ext_secp_pub_expand(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const secp256k1Recover = /*#__PURE__*/ withWasm((wasm, msgHash, sig, recovery)=>{
    wasm.ext_secp_recover(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(msgHash), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(sig), recovery);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const secp256k1Sign = /*#__PURE__*/ withWasm((wasm, msgHash, seckey)=>{
    wasm.ext_secp_sign(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(msgHash), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(seckey));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sr25519DeriveKeypairHard = /*#__PURE__*/ withWasm((wasm, pair, cc)=>{
    wasm.ext_sr_derive_keypair_hard(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pair), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(cc));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sr25519DeriveKeypairSoft = /*#__PURE__*/ withWasm((wasm, pair, cc)=>{
    wasm.ext_sr_derive_keypair_soft(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pair), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(cc));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sr25519DerivePublicSoft = /*#__PURE__*/ withWasm((wasm, pubkey, cc)=>{
    wasm.ext_sr_derive_public_soft(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(cc));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sr25519KeypairFromSeed = /*#__PURE__*/ withWasm((wasm, seed)=>{
    wasm.ext_sr_from_seed(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(seed));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sr25519Sign = /*#__PURE__*/ withWasm((wasm, pubkey, secret, message)=>{
    wasm.ext_sr_sign(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(secret), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(message));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sr25519Verify = /*#__PURE__*/ withWasm((wasm, signature, message, pubkey)=>{
    const ret = wasm.ext_sr_verify(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(signature), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(message), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey));
    return ret !== 0;
});
const sr25519Agree = /*#__PURE__*/ withWasm((wasm, pubkey, secret)=>{
    wasm.ext_sr_agree(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(secret));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const vrfSign = /*#__PURE__*/ withWasm((wasm, secret, context, message, extra)=>{
    wasm.ext_vrf_sign(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(secret), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(context), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(message), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(extra));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const vrfVerify = /*#__PURE__*/ withWasm((wasm, pubkey, context, message, extra, outAndProof)=>{
    const ret = wasm.ext_vrf_verify(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(context), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(message), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(extra), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(outAndProof));
    return ret !== 0;
});
const blake2b = /*#__PURE__*/ withWasm((wasm, data, key, size)=>{
    wasm.ext_blake2b(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(key), size);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const hmacSha256 = /*#__PURE__*/ withWasm((wasm, key, data)=>{
    wasm.ext_hmac_sha256(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(key), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const hmacSha512 = /*#__PURE__*/ withWasm((wasm, key, data)=>{
    wasm.ext_hmac_sha512(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(key), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const keccak256 = /*#__PURE__*/ withWasm((wasm, data)=>{
    wasm.ext_keccak256(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const keccak512 = /*#__PURE__*/ withWasm((wasm, data)=>{
    wasm.ext_keccak512(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const pbkdf2 = /*#__PURE__*/ withWasm((wasm, data, salt, rounds)=>{
    wasm.ext_pbkdf2(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(salt), rounds);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const scrypt = /*#__PURE__*/ withWasm((wasm, password, salt, log2n, r, p)=>{
    wasm.ext_scrypt(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(password), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(salt), log2n, r, p);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sha256 = /*#__PURE__*/ withWasm((wasm, data)=>{
    wasm.ext_sha256(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sha512 = /*#__PURE__*/ withWasm((wasm, data)=>{
    wasm.ext_sha512(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const twox = /*#__PURE__*/ withWasm((wasm, data, rounds)=>{
    wasm.ext_twox(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data), rounds);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
function isReady() {
    return !!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bridge"].wasm;
}
async function waitReady() {
    try {
        const wasm = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$wasm$2d$crypto$40$7$2e$4$2e$1_$40$polkadot$2b$util$40$13$2e$4$2e$3_$40$polkadot$2b$x$2d$randomvalues$40$13$2e$4$2e$3_$40$polkadot$2b$u_3a6p6dwoyg77iyxprahdteacfa$2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["initBridge"])();
        return !!wasm;
    } catch  {
        return false;
    }
}
}}),
"[project]/node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
(function(module1, exports) {
    'use strict';
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {};
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) {
            return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === 'le' || base === 'be') {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
        }
    }
    if ("TURBOPACK compile-time truthy", 1) {
        module1.exports = BN;
    } else {
        "TURBOPACK unreachable";
    }
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        } else {
            Buffer = __turbopack_require__("[externals]/buffer [external] (buffer, cjs)").Buffer;
        }
    } catch (e) {}
    BN.isBN = function isBN(num) {
        if (num instanceof BN) {
            return true;
        }
        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === 'number') {
            return this._initNumber(number, base, endian);
        }
        if (typeof number === 'object') {
            return this._initArray(number, base, endian);
        }
        if (base === 'hex') {
            base = 16;
        }
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') {
            start++;
            this.negative = 1;
        }
        if (start < number.length) {
            if (base === 16) {
                this._parseHex(number, start, endian);
            } else {
                this._parseBase(number, base, start);
                if (endian === 'le') {
                    this._initArray(this.toArray(), base, endian);
                }
            }
        }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 0x4000000) {
            this.words = [
                number & 0x3ffffff
            ];
            this.length = 1;
        } else if (number < 0x10000000000000) {
            this.words = [
                number & 0x3ffffff,
                number / 0x4000000 & 0x3ffffff
            ];
            this.length = 2;
        } else {
            assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
            this.words = [
                number & 0x3ffffff,
                number / 0x4000000 & 0x3ffffff,
                1
            ];
            this.length = 3;
        }
        if (endian !== 'le') return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++){
            this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === 'be') {
            for(i = number.length - 1, j = 0; i >= 0; i -= 3){
                w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
                this.words[j] |= w << off & 0x3ffffff;
                this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
                off += 24;
                if (off >= 26) {
                    off -= 26;
                    j++;
                }
            }
        } else if (endian === 'le') {
            for(i = 0, j = 0; i < number.length; i += 3){
                w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
                this.words[j] |= w << off & 0x3ffffff;
                this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
                off += 24;
                if (off >= 26) {
                    off -= 26;
                    j++;
                }
            }
        }
        return this._strip();
    };
    function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        // '0' - '9'
        if (c >= 48 && c <= 57) {
            return c - 48;
        // 'A' - 'F'
        } else if (c >= 65 && c <= 70) {
            return c - 55;
        // 'a' - 'f'
        } else if (c >= 97 && c <= 102) {
            return c - 87;
        } else {
            assert(false, 'Invalid character in ' + string);
        }
    }
    function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
            r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++){
            this.words[i] = 0;
        }
        // 24-bits chunks
        var off = 0;
        var j = 0;
        var w;
        if (endian === 'be') {
            for(i = number.length - 1; i >= start; i -= 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 0x3ffffff;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else {
                    off += 8;
                }
            }
        } else {
            var parseLength = number.length - start;
            for(i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 0x3ffffff;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else {
                    off += 8;
                }
            }
        }
        this._strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var b = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) {
                b = c - 49 + 0xa;
            // 'A'
            } else if (c >= 17) {
                b = c - 17 + 0xa;
            // '0' - '9'
            } else {
                b = c;
            }
            assert(c >= 0 && b < mul, 'Invalid character');
            r += b;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base){
            limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 0x4000000) {
                this.words[0] += word;
            } else {
                this._iaddn(word);
            }
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++){
                pow *= base;
            }
            this.imuln(pow);
            if (this.words[0] + word < 0x4000000) {
                this.words[0] += word;
            } else {
                this._iaddn(word);
            }
        }
        this._strip();
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++){
            dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    function move(dest, src) {
        dest.words = src.words;
        dest.length = src.length;
        dest.negative = src.negative;
        dest.red = src.red;
    }
    BN.prototype._move = function _move(dest) {
        move(dest, this);
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size){
            this.words[this.length++] = 0;
        }
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype._strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0){
            this.length--;
        }
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) {
            this.negative = 0;
        }
        return this;
    };
    // Check Symbol.for because not everywhere where Symbol defined
    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
    if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
        try {
            BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
        } catch (e) {
            BN.prototype.inspect = inspect;
        }
    } else {
        BN.prototype.inspect = inspect;
    }
    function inspect() {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    }
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 0xffffff).toString(16);
                carry = w >>> 24 - off & 0xffffff;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
                if (carry !== 0 || i !== this.length - 1) {
                    out = zeros[6 - word.length] + word + out;
                } else {
                    out = word + out;
                }
            }
            if (carry !== 0) {
                out = carry.toString(16) + out;
            }
            while(out.length % padding !== 0){
                out = '0' + out;
            }
            if (this.negative !== 0) {
                out = '-' + out;
            }
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modrn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) {
                    out = zeros[groupSize - r.length] + r + out;
                } else {
                    out = r + out;
                }
            }
            if (this.isZero()) {
                out = '0' + out;
            }
            while(out.length % padding !== 0){
                out = '0' + out;
            }
            if (this.negative !== 0) {
                out = '-' + out;
            }
            return out;
        }
        assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
            ret += this.words[1] * 0x4000000;
        } else if (this.length === 3 && this.words[2] === 0x01) {
            // NOTE: at this stage it is known that the top bit is set
            ret += 0x10000000000000 + this.words[1] * 0x4000000;
        } else if (this.length > 2) {
            assert(false, 'Number can only safely store up to 53 bits');
        }
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16, 2);
    };
    if (Buffer) {
        BN.prototype.toBuffer = function toBuffer(endian, length) {
            return this.toArrayLike(Buffer, endian, length);
        };
    }
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    var allocate = function allocate(ArrayType, size) {
        if (ArrayType.allocUnsafe) {
            return ArrayType.allocUnsafe(size);
        }
        return new ArrayType(size);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        this._strip();
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');
        var res = allocate(ArrayType, reqLength);
        var postfix = endian === 'le' ? 'LE' : 'BE';
        this['_toArrayLike' + postfix](res, byteLength);
        return res;
    };
    BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
        var position = 0;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position++] = word & 0xff;
            if (position < res.length) {
                res[position++] = word >> 8 & 0xff;
            }
            if (position < res.length) {
                res[position++] = word >> 16 & 0xff;
            }
            if (shift === 6) {
                if (position < res.length) {
                    res[position++] = word >> 24 & 0xff;
                }
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position < res.length) {
            res[position++] = carry;
            while(position < res.length){
                res[position++] = 0;
            }
        }
    };
    BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
        var position = res.length - 1;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position--] = word & 0xff;
            if (position >= 0) {
                res[position--] = word >> 8 & 0xff;
            }
            if (position >= 0) {
                res[position--] = word >> 16 & 0xff;
            }
            if (shift === 6) {
                if (position >= 0) {
                    res[position--] = word >> 24 & 0xff;
                }
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position >= 0) {
            res[position--] = carry;
            while(position >= 0){
                res[position--] = 0;
            }
        }
    };
    if (Math.clz32) {
        BN.prototype._countBits = function _countBits(w) {
            return 32 - Math.clz32(w);
        };
    } else {
        BN.prototype._countBits = function _countBits(w) {
            var t = w;
            var r = 0;
            if (t >= 0x1000) {
                r += 13;
                t >>>= 13;
            }
            if (t >= 0x40) {
                r += 7;
                t >>>= 7;
            }
            if (t >= 0x8) {
                r += 4;
                t >>>= 4;
            }
            if (t >= 0x02) {
                r += 2;
                t >>>= 2;
            }
            return r + t;
        };
    }
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 0x1fff) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 0x7f) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 0xf) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 0x3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 0x1) === 0) {
            r++;
        }
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = num.words[off] >>> wbit & 0x01;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
            return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
            return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) {
            this.negative ^= 1;
        }
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length){
            this.words[this.length++] = 0;
        }
        for(var i = 0; i < num.length; i++){
            this.words[i] = this.words[i] | num.words[i];
        }
        return this._strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) {
            b = num;
        } else {
            b = this;
        }
        for(var i = 0; i < b.length; i++){
            this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this._strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++){
            this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
            for(; i < a.length; i++){
                this.words[i] = a.words[i];
            }
        }
        this.length = a.length;
        return this._strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === 'number' && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
            bytesNeeded--;
        }
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++){
            this.words[i] = ~this.words[i] & 0x3ffffff;
        }
        // Handle the residue
        if (bitsLeft > 0) {
            this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;
        }
        // And remove leading zeroes
        return this._strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === 'number' && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
            this.words[off] = this.words[off] | 1 << wbit;
        } else {
            this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this._strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 0x3ffffff;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 0x3ffffff;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) {
            for(; i < a.length; i++){
                this.words[i] = a.words[i];
            }
        }
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 0x3ffffff;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 0x3ffffff;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) {
            for(; i < a.length; i++){
                this.words[i] = a.words[i];
            }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
            this.negative = 1;
        }
        return this._strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 0x3ffffff;
        var carry = r / 0x4000000 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 0x3ffffff;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 0x4000000 | 0;
                rword = r & 0x3ffffff;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) {
            out.words[k] = carry | 0;
        } else {
            out.length--;
        }
        return out._strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 0x1fff;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 0x1fff;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 0x1fff;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 0x1fff;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 0x1fff;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 0x1fff;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 0x1fff;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 0x1fff;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 0x1fff;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 0x1fff;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 0x1fff;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 0x1fff;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 0x1fff;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 0x1fff;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 0x1fff;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 0x1fff;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 0x1fff;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 0x1fff;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 0x1fff;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 0x1fff;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 0x3ffffff;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 0x3ffffff;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 0x3ffffff;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 0x3ffffff;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 0x3ffffff;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 0x3ffffff;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 0x3ffffff;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 0x3ffffff;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 0x3ffffff;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 0x3ffffff;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 0x3ffffff;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 0x3ffffff;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 0x3ffffff;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 0x3ffffff;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 0x3ffffff;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 0x3ffffff;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 0x3ffffff;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 0x3ffffff;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 0x3ffffff;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) {
        comb10MulTo = smallMulTo;
    }
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 0x3ffffff;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 0x3ffffff;
                ncarry = ncarry + (r / 0x4000000 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 0x3ffffff;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 0x3ffffff;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) {
            out.words[k] = carry;
        } else {
            out.length--;
        }
        return out._strip();
    }
    function jumboMulTo(self, num, out) {
        // Temporary disable, see https://github.com/indutny/bn.js/issues/211
        // var fftm = new FFTM();
        // return fftm.mulp(self, num, out);
        return bigMulTo(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
            res = comb10MulTo(this, num, out);
        } else if (len < 63) {
            res = smallMulTo(this, num, out);
        } else if (len < 1024) {
            res = bigMulTo(this, num, out);
        } else {
            res = jumboMulTo(this, num, out);
        }
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++){
            t[i] = this.revBin(i, l, N);
        }
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1){
            i++;
        }
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 0x3ffffff;
            if (w < 0x4000000) {
                carry = 0;
            } else {
                carry = w / 0x4000000 | 0;
            }
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 0x1fff;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 0x1fff;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i){
            rws[i] = 0;
        }
        assert(carry === 0);
        assert((carry & ~0x1fff) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++){
            ph[i] = 0;
        }
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out._strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(typeof num === 'number');
        assert(num < 0x4000000);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
            carry >>= 26;
            carry += w / 0x4000000 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 0x3ffffff;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if (++i < w.length) {
            for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
                if (w[i] === 0) continue;
                res = res.mul(q);
            }
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 0x3ffffff >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--){
                this.words[i + s] = this.words[i];
            }
            for(i = 0; i < s; i++){
                this.words[i] = 0;
            }
            this.length += s;
        }
        return this._strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) {
            h = (hint - hint % 26) / 26;
        } else {
            h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++){
                maskedWords.words[i] = this.words[i];
            }
            maskedWords.length = s;
        }
        if (s === 0) {
        // No-op, we should not move anything at all
        } else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++){
                this.words[i] = this.words[i + s];
            }
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) {
            maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this._strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, 'imaskn works only with positive numbers');
        if (this.length <= s) {
            return this;
        }
        if (r !== 0) {
            s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this._strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === 'number');
        assert(num < 0x4000000);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) <= num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 0x4000000; i++){
            this.words[i] -= 0x4000000;
            if (i === this.length - 1) {
                this.words[i + 1] = 1;
            } else {
                this.words[i + 1]++;
            }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === 'number');
        assert(num < 0x4000000);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else {
            // Carry
            for(var i = 0; i < this.length && this.words[i] < 0; i++){
                this.words[i] += 0x4000000;
                this.words[i + 1] -= 1;
            }
        }
        return this._strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul;
            w -= right & 0x3ffffff;
            carry = (w >> 26) - (right / 0x4000000 | 0);
            this.words[i + shift] = w & 0x3ffffff;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 0x3ffffff;
        }
        if (carry === 0) return this._strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 0x3ffffff;
        }
        this.negative = 1;
        return this._strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++){
                q.words[i] = 0;
            }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) {
                q.words[m] = 1;
            }
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 0x3ffffff);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) {
                    a.negative ^= 1;
                }
            }
            if (q) {
                q.words[j] = qj;
            }
        }
        if (q) {
            q._strip();
        }
        a._strip();
        // Denormalize
        if (mode !== 'div' && shift !== 0) {
            a.iushrn(shift);
        }
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) {
            return {
                div: new BN(0),
                mod: new BN(0)
            };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') {
                div = res.div.neg();
            }
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) {
                    mod.iadd(num);
                }
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') {
                div = res.div.neg();
            }
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) {
                    mod.isub(num);
                }
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) {
            return {
                div: new BN(0),
                mod: this
            };
        }
        // Very short reduction
        if (num.length === 1) {
            if (mode === 'div') {
                return {
                    div: this.divn(num.words[0]),
                    mod: null
                };
            }
            if (mode === 'mod') {
                return {
                    div: null,
                    mod: new BN(this.modrn(num.words[0]))
                };
            }
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modrn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, 'div', false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, 'mod', true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modrn = function modrn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 0x3ffffff);
        var p = (1 << 26) % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--){
            acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return isNegNum ? -acc : acc;
    };
    // WARNING: DEPRECATED
    BN.prototype.modn = function modn(num) {
        return this.modrn(num);
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 0x3ffffff);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 0x4000000;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        this._strip();
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
            x = x.umod(p);
        } else {
            x = x.clone();
        }
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while(i-- > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while(j-- > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
            a = a.umod(p);
        } else {
            a = a.clone();
        }
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while(i-- > 0){
                    if (x1.isOdd()) {
                        x1.iadd(delta);
                    }
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while(j-- > 0){
                    if (x2.isOdd()) {
                        x2.iadd(delta);
                    }
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) {
            res = x1;
        } else {
            res = x2;
        }
        if (res.cmpn(0) < 0) {
            res.iadd(p);
        }
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven()){
                a.iushrn(1);
            }
            while(b.isEven()){
                b.iushrn(1);
            }
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) {
                break;
            }
            a.isub(b);
        }while (true)
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 0x3ffffff;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this._strip();
        var res;
        if (this.length > 1) {
            res = 1;
        } else {
            if (negative) {
                num = -num;
            }
            assert(num <= 0x3ffffff, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) {
                res = -1;
            } else if (a > b) {
                res = 1;
            }
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n)
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp > 0) {
            r.isub(this.p);
        } else {
            if (r.strip !== undefined) {
                // r is a BN v4 instance
                r.strip();
            } else {
                // r is a BN v5 instance
                r._strip();
            }
        }
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 0x3fffff;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++){
            output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
            input.length -= 10;
        } else {
            input.length -= 9;
        }
    };
    K256.prototype.imulK = function imulK(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 0x3d1;
            num.words[i] = lo & 0x3ffffff;
            lo = w * 0x40 + (lo / 0x4000000 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) {
                num.length--;
            }
        }
        return num;
    };
    function P224() {
        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 0x13 + carry;
            var lo = hi & 0x3ffffff;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) {
            num.words[num.length++] = carry;
        }
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === 'k256') {
            prime = new K256();
        } else if (name === 'p224') {
            prime = new P224();
        } else if (name === 'p192') {
            prime = new P192();
        } else if (name === 'p25519') {
            prime = new P25519();
        } else {
            throw new Error('Unknown prime ' + name);
        }
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === 'string') {
            var prime = BN._prime(m);
            this.m = prime.p;
            this.prime = prime;
        } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        move(a, a.umod(this.m)._forceRed(this));
        return a;
    };
    Red.prototype.neg = function neg(a) {
        if (a.isZero()) {
            return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
            res.isub(this.m);
        }
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
            res.isub(this.m);
        }
        return res;
    };
    Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
            res.iadd(this.m);
        }
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
            res.iadd(this.m);
        }
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0){
            z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++){
                tmp = tmp.redSqr();
            }
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else {
            return this.imod(inv);
        }
    };
    Red.prototype.pow = function pow(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++){
            wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
            start = 26;
        }
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) {
                    res = this.sqr(res);
                }
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
            this.shift += 26 - this.shift % 26;
        }
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
            res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
            res = u.iadd(this.m);
        }
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
            res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
            res = u.iadd(this.m);
        }
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})(("TURBOPACK compile-time value", "object") === 'undefined' || module, this);
}}),
"[project]/node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js [app-route] (ecmascript) <export default as BN>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BN": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$bn$2e$js$40$5$2e$2$2e$1$2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js [app-route] (ecmascript)");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/wallet.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/constants/wallet.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DEFAULT_SS58_FORMAT = exports.mockURIs = void 0;
exports.mockURIs = [
    '//Alice',
    '//Bob',
    '//Charlie',
    '//Dave',
    '//Eve',
    '//Frank',
    '//Grace',
    '//Harry',
    '//Ivy',
    '//Jacob'
];
exports.DEFAULT_SS58_FORMAT = 2254;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/address.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/address.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.decode = exports.address = void 0;
const keyring_1 = __turbopack_require__("[project]/node_modules/.pnpm/@polkadot+keyring@13.4.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+util@13.4.3/node_modules/@polkadot/keyring/index.js [app-route] (ecmascript)");
const wallet_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/wallet.js [app-route] (ecmascript)");
const address = (address)=>(0, keyring_1.encodeAddress)(address, wallet_1.DEFAULT_SS58_FORMAT);
exports.address = address;
const decode = (address)=>(0, keyring_1.decodeAddress)(address);
exports.decode = decode;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/domain.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/constants/domain.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.domains = exports.DomainRuntime = void 0;
var DomainRuntime;
(function(DomainRuntime) {
    DomainRuntime["AUTO_ID"] = "auto-id";
    DomainRuntime["AUTO_EVM"] = "auto-evm";
})(DomainRuntime || (exports.DomainRuntime = DomainRuntime = {}));
exports.domains = {
    [DomainRuntime.AUTO_EVM]: {
        runtime: DomainRuntime.AUTO_EVM,
        name: 'Auto-EVM'
    },
    [DomainRuntime.AUTO_ID]: {
        runtime: DomainRuntime.AUTO_ID,
        name: 'Auto-ID'
    }
};
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/token.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TESTNET_TOKEN = exports.DEFAULT_TOKEN = exports.DEFAULT_TOKEN_NAME = exports.DEFAULT_TOKEN_SYMBOL = exports.DEFAULT_TOKEN_DECIMALS = void 0;
exports.DEFAULT_TOKEN_DECIMALS = 18;
exports.DEFAULT_TOKEN_SYMBOL = 'AI3';
exports.DEFAULT_TOKEN_NAME = 'Auto Token';
exports.DEFAULT_TOKEN = {
    decimals: exports.DEFAULT_TOKEN_DECIMALS,
    symbol: exports.DEFAULT_TOKEN_SYMBOL,
    name: exports.DEFAULT_TOKEN_NAME
};
exports.TESTNET_TOKEN = Object.assign(Object.assign({}, exports.DEFAULT_TOKEN), {
    symbol: 't' + exports.DEFAULT_TOKEN_SYMBOL,
    name: 'Testnet ' + exports.DEFAULT_TOKEN_NAME
});
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/network.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/constants/network.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.defaultNetwork = exports.networks = exports.SUBSCAN_EXPLORER = exports.ASTRAL_EXPLORER = exports.NetworkExplorerName = exports.NetworkName = exports.NetworkId = void 0;
const domain_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/domain.js [app-route] (ecmascript)");
const token_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/token.js [app-route] (ecmascript)");
var NetworkId;
(function(NetworkId) {
    NetworkId["MAINNET"] = "mainnet";
    NetworkId["TAURUS"] = "taurus";
    NetworkId["GEMINI_3H"] = "gemini-3h";
    NetworkId["DEVNET"] = "devnet";
    NetworkId["LOCALHOST"] = "localhost";
})(NetworkId || (exports.NetworkId = NetworkId = {}));
var NetworkName;
(function(NetworkName) {
    NetworkName["MAINNET"] = "Mainnet";
    NetworkName["TAURUS"] = "Testnet - Taurus";
    NetworkName["GEMINI_3H"] = "Testnet - Gemini 3H";
    NetworkName["DEVNET"] = "Devnet";
    NetworkName["LOCALHOST"] = "Localhost";
})(NetworkName || (exports.NetworkName = NetworkName = {}));
var NetworkExplorerName;
(function(NetworkExplorerName) {
    NetworkExplorerName["ASTRAL"] = "Astral";
    NetworkExplorerName["SUBSCAN"] = "Subscan";
})(NetworkExplorerName || (exports.NetworkExplorerName = NetworkExplorerName = {}));
exports.ASTRAL_EXPLORER = 'https://explorer.autonomys.xyz/';
exports.SUBSCAN_EXPLORER = 'https://autonomys.subscan.io/';
exports.networks = [
    {
        id: NetworkId.MAINNET,
        name: NetworkName.MAINNET,
        rpcUrls: [
            'wss://rpc-0.mainnet.subspace.network/ws',
            'wss://rpc-1.mainnet.subspace.network/ws',
            'wss://rpc-0.mainnet.autonomys.xyz/ws',
            'wss://rpc-1.mainnet.autonomys.xyz/ws',
            'wss://rpc.mainnet.subspace.foundation/ws'
        ],
        explorer: [
            {
                name: NetworkExplorerName.ASTRAL,
                url: exports.ASTRAL_EXPLORER
            },
            {
                name: NetworkExplorerName.SUBSCAN,
                url: exports.SUBSCAN_EXPLORER
            }
        ],
        domains: [],
        token: token_1.DEFAULT_TOKEN
    },
    {
        id: NetworkId.TAURUS,
        name: NetworkName.TAURUS,
        rpcUrls: [
            'wss://rpc-0.taurus.autonomys.xyz/ws',
            'wss://rpc-1.taurus.autonomys.xyz/ws',
            'wss://rpc-0.taurus.subspace.network/ws',
            'wss://rpc-1.taurus.subspace.network/ws'
        ],
        explorer: [
            {
                name: NetworkExplorerName.ASTRAL,
                url: exports.ASTRAL_EXPLORER + 'taurus/consensus/'
            }
        ],
        domains: [
            Object.assign(Object.assign({
                domainId: '0'
            }, domain_1.domains[domain_1.DomainRuntime.AUTO_EVM]), {
                rpcUrls: [
                    'wss://auto-evm.taurus.autonomys.xyz/ws',
                    'wss://auto-evm-0.taurus.autonomys.xyz/ws',
                    'wss://auto-evm-1.taurus.autonomys.xyz/ws',
                    'wss://auto-evm.taurus.subspace.network/ws',
                    'wss://auto-evm-0.taurus.subspace.network/ws',
                    'wss://auto-evm-1.taurus.subspace.network/ws'
                ]
            })
        ],
        token: token_1.TESTNET_TOKEN,
        isTestnet: true
    },
    {
        id: NetworkId.GEMINI_3H,
        name: NetworkName.GEMINI_3H,
        rpcUrls: [
            'wss://rpc-0.gemini-3h.subspace.network/ws'
        ],
        explorer: [
            {
                name: NetworkExplorerName.ASTRAL,
                url: exports.ASTRAL_EXPLORER + 'gemini-3h/consensus/'
            }
        ],
        domains: [
            Object.assign(Object.assign({
                domainId: '0'
            }, domain_1.domains[domain_1.DomainRuntime.AUTO_EVM]), {
                rpcUrls: [
                    'wss://nova-0.gemini-3h.subspace.network/ws'
                ]
            }),
            Object.assign(Object.assign({
                domainId: '1'
            }, domain_1.domains[domain_1.DomainRuntime.AUTO_ID]), {
                rpcUrls: [
                    'wss://autoid-0.gemini-3h.subspace.network/ws'
                ]
            })
        ],
        token: token_1.TESTNET_TOKEN,
        isTestnet: true
    },
    {
        id: NetworkId.DEVNET,
        name: NetworkName.DEVNET,
        rpcUrls: [
            'ws://rpc.devnet.subspace.network/ws'
        ],
        explorer: [
            {
                name: NetworkExplorerName.ASTRAL,
                url: exports.ASTRAL_EXPLORER + '/devnet/consensus/'
            }
        ],
        domains: [
            Object.assign(Object.assign({
                domainId: '0'
            }, domain_1.domains[domain_1.DomainRuntime.AUTO_EVM]), {
                rpcUrls: [
                    'wss:///nova.devnet.subspace.network/ws'
                ]
            }),
            Object.assign(Object.assign({
                domainId: '1'
            }, domain_1.domains[domain_1.DomainRuntime.AUTO_ID]), {
                rpcUrls: [
                    'wss://autoid.devnet.subspace.network/ws'
                ]
            })
        ],
        token: token_1.TESTNET_TOKEN,
        isTestnet: true,
        isLocalhost: false
    },
    {
        id: NetworkId.LOCALHOST,
        name: NetworkName.LOCALHOST,
        rpcUrls: [
            'ws://127.0.0.1:9944/ws'
        ],
        explorer: [
            {
                name: NetworkExplorerName.ASTRAL,
                url: exports.ASTRAL_EXPLORER + 'localhost/consensus/'
            }
        ],
        domains: [
            Object.assign(Object.assign({
                domainId: '0'
            }, domain_1.domains[domain_1.DomainRuntime.AUTO_EVM]), {
                rpcUrls: [
                    'ws://127.0.0.1:9945/ws'
                ]
            }),
            Object.assign(Object.assign({
                domainId: '1'
            }, domain_1.domains[domain_1.DomainRuntime.AUTO_ID]), {
                rpcUrls: [
                    'ws://127.0.0.1:9946/ws'
                ]
            })
        ],
        token: token_1.TESTNET_TOKEN,
        isTestnet: true,
        isLocalhost: true
    }
];
exports.defaultNetwork = exports.networks[0];
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/network.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/network.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getNetworkDomainRpcUrls = exports.getNetworkDomainDetails = exports.getNetworkRpcUrls = exports.getNetworkDetails = void 0;
const network_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/network.js [app-route] (ecmascript)");
const getNetworkDetails = (input)=>{
    // If no id is provided, return the default network
    if (!input || !input.networkId) return network_1.defaultNetwork;
    const { networkId } = input;
    // Find the network with the provided id
    const network = network_1.networks.find((network)=>network.id === networkId);
    if (!network) throw new Error(`Network with id ${networkId} not found`);
    return network;
};
exports.getNetworkDetails = getNetworkDetails;
const getNetworkRpcUrls = (input)=>{
    // Get the network details
    const network = (0, exports.getNetworkDetails)(input);
    if (!network.rpcUrls || network.rpcUrls.length === 0) throw new Error(`Network has no rpcUrls`);
    return network.rpcUrls;
};
exports.getNetworkRpcUrls = getNetworkRpcUrls;
const getNetworkDomainDetails = (params)=>{
    const { networkId, domainId } = params;
    // Find the network with the provided id
    const network = (0, exports.getNetworkDetails)({
        networkId
    });
    if (!network) throw new Error(`Network with id ${networkId} not found`);
    // Find the domain with the provided id
    const domain = network.domains.find((domain)=>domain.domainId === domainId);
    if (!domain) throw new Error(`Domain with id ${domainId} not found`);
    return domain;
};
exports.getNetworkDomainDetails = getNetworkDomainDetails;
const getNetworkDomainRpcUrls = (params)=>{
    // Get the network details
    const domain = (0, exports.getNetworkDomainDetails)(params);
    if (!domain.rpcUrls || domain.rpcUrls.length === 0) throw new Error(`Domain has no rpcUrls`);
    return domain.rpcUrls;
};
exports.getNetworkDomainRpcUrls = getNetworkDomainRpcUrls;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/network.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CHAIN_TYPES = void 0;
exports.CHAIN_TYPES = {
    Solution: {
        public_key: 'AccountId32',
        reward_address: 'AccountId32'
    },
    SubPreDigest: {
        slot: 'u64',
        solution: 'Solution'
    }
};
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/api.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.disconnect = exports.activateDomain = exports.activate = exports.createConnection = void 0;
const api_1 = __turbopack_require__("[project]/node_modules/.pnpm/@polkadot+api@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/api/index.js [app-route] (ecmascript)");
const network_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/network.js [app-route] (ecmascript)");
const network_2 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/network.js [app-route] (ecmascript)");
const createConnection = (endpoint, options)=>__awaiter(void 0, void 0, void 0, function*() {
        var _a;
        // Create the provider
        const provider = new api_1.WsProvider(endpoint);
        // Create the API instance
        const api = yield api_1.ApiPromise.create(Object.assign(Object.assign({}, options), {
            types: Object.assign(Object.assign({}, network_2.CHAIN_TYPES), options === null || options === void 0 ? void 0 : options.types),
            noInitWarn: (_a = options === null || options === void 0 ? void 0 : options.noInitWarn) !== null && _a !== void 0 ? _a : true,
            provider
        }));
        yield api.isReady;
        return api;
    });
exports.createConnection = createConnection;
const activate = (params)=>__awaiter(void 0, void 0, void 0, function*() {
        // Get the first rpc urls for the network
        const endpoint = (0, network_1.getNetworkRpcUrls)(params);
        // Remove the networkId from the input
        if (params) delete params.networkId;
        return yield (0, exports.createConnection)(endpoint, params);
    });
exports.activate = activate;
const activateDomain = (params)=>__awaiter(void 0, void 0, void 0, function*() {
        // Get the first rpc urls for the network
        const endpoint = (0, network_1.getNetworkDomainRpcUrls)(params);
        // Remove the domainId from the input
        const { domainId } = params, rest = __rest(params, [
            "domainId"
        ]);
        return yield (0, exports.createConnection)(endpoint, rest);
    });
exports.activateDomain = activateDomain;
const disconnect = (api)=>__awaiter(void 0, void 0, void 0, function*() {
        // Disconnect the API instance and the provider
        yield api.disconnect();
    });
exports.disconnect = disconnect;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/crypto.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/crypto.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.blake2b_256 = blake2b_256;
exports.stringToUint8Array = stringToUint8Array;
exports.concatenateUint8Arrays = concatenateUint8Arrays;
const util_crypto_1 = __turbopack_require__("[project]/node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/index.js [app-route] (ecmascript)");
/**
 * Hashes the given data using BLAKE2b-256.
 *
 * @param data Uint8Array - The data to be hashed.
 * @returns string - The BLAKE2b-256 hash of the data as a hex string.
 */ function blake2b_256(data) {
    return (0, util_crypto_1.blake2AsHex)(data, 256);
}
/**
 * Converts a string to a Uint8Array using UTF-8 encoding.
 *
 * This function uses the TextEncoder API to convert a plain string into its equivalent byte array
 * representation in UTF-8 format. It is useful for scenarios where string data needs to be processed
 * in a binary format, such as hashing or cryptographic operations.
 *
 * @param text The string to be converted into a byte array.
 * @returns Uint8Array - The UTF-8 encoded byte array representation of the input string.
 *
 * @example
 * const text = "Hello, world!";
 * const byteArray = stringToUint8Array(text);
 * console.log(byteArray); // Outputs the byte array of the string
 */ function stringToUint8Array(text) {
    const encoder = new TextEncoder(); // Create a new TextEncoder instance
    return encoder.encode(text); // Encode the string to a Uint8Array using UTF-8 encoding
}
/**
 * Concatenates two Uint8Array instances into a single Uint8Array.
 */ function concatenateUint8Arrays(array1, array2) {
    const combined = new Uint8Array(array1.length + array2.length);
    combined.set(array1);
    combined.set(array2, array1.length);
    return combined;
}
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/keyring.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Keyring = void 0;
const keyring_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/@polkadot+keyring@13.4.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+util@13.4.3/node_modules/@polkadot/keyring/index.js [app-route] (ecmascript)"));
exports.Keyring = keyring_1.default;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/number.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BIGINT_ZERO = void 0;
exports.BIGINT_ZERO = BigInt(0);
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/number.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.formatSpacePledged = exports.formatTokenAmount = exports.parseTokenAmount = void 0;
const number_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/number.js [app-route] (ecmascript)");
const token_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/token.js [app-route] (ecmascript)");
const parseTokenAmount = (amount, decimals = token_1.DEFAULT_TOKEN_DECIMALS)=>{
    if (typeof amount === 'bigint') return amount / BigInt(Math.pow(10, decimals));
    return parseFloat(amount) / Math.pow(10, decimals);
};
exports.parseTokenAmount = parseTokenAmount;
const formatTokenAmount = (amount, decimals = token_1.DEFAULT_TOKEN_DECIMALS)=>{
    if (typeof amount === 'bigint') return amount * BigInt(Math.pow(10, decimals));
    return amount * Math.pow(10, decimals);
};
exports.formatTokenAmount = formatTokenAmount;
const formatSpacePledged = (value, decimals = 2)=>{
    if (typeof value !== 'bigint' || value === number_1.BIGINT_ZERO) return '0 Bytes';
    const k = 1024;
    const dm = decimals < 0 ? 0 : decimals;
    const sizes = [
        'Bytes',
        'KiB',
        'MiB',
        'GiB',
        'TiB',
        'PiB',
        'EiB',
        'ZiB',
        'YiB'
    ];
    const i = Math.floor(Math.log(Number(value)) / Math.log(k));
    return (Number(value) / Math.pow(k, i)).toFixed(dm) + ' ' + sizes[i];
};
exports.formatSpacePledged = formatSpacePledged;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/read.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/read.ts
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.readFromFileSystem = exports.readFromLocalStorage = exports.read = void 0;
const read = (key)=>__awaiter(void 0, void 0, void 0, function*() {
        // detect if we are in the browser or in node
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        } else return (0, exports.readFromFileSystem)(key);
    });
exports.read = read;
const readFromLocalStorage = (key)=>__awaiter(void 0, void 0, void 0, function*() {
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        } else throw new Error('This function can only be used in the browser');
    });
exports.readFromLocalStorage = readFromLocalStorage;
const readFromFileSystem = (key)=>__awaiter(void 0, void 0, void 0, function*() {
        if ("TURBOPACK compile-time truthy", 1) {
            // read from file system
            const fs = yield Promise.resolve().then(()=>__importStar(__turbopack_require__("[externals]/fs/promises [external] (fs/promises, cjs)")));
            try {
                const data = yield fs.readFile(key, {
                    encoding: 'utf-8'
                });
                return JSON.parse(data);
            } catch (error) {
                throw new Error('Failed to read or parse file: ' + error);
            }
        } else {
            "TURBOPACK unreachable";
        }
    });
exports.readFromFileSystem = readFromFileSystem;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/save.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/save.ts
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.saveOnFileSystem = exports.saveOnLocalStorage = exports.save = void 0;
const save = (key, value)=>__awaiter(void 0, void 0, void 0, function*() {
        // detect if we are in the browser or in node
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        } else yield (0, exports.saveOnFileSystem)(key, value);
    });
exports.save = save;
const saveOnLocalStorage = (key, value)=>__awaiter(void 0, void 0, void 0, function*() {
        if ("TURBOPACK compile-time falsy", 0) // save on local storage
        {
            "TURBOPACK unreachable";
        } else throw new Error('This function can only be used in the browser');
    });
exports.saveOnLocalStorage = saveOnLocalStorage;
const saveOnFileSystem = (key, value)=>__awaiter(void 0, void 0, void 0, function*() {
        if ("TURBOPACK compile-time truthy", 1) {
            // save on file system
            const fs = yield Promise.resolve().then(()=>__importStar(__turbopack_require__("[externals]/fs/promises [external] (fs/promises, cjs)")));
            // Check if value is already a string to avoid unnecessary JSON string conversion
            const data = typeof value === 'string' ? value : JSON.stringify(value);
            yield fs.writeFile(key, JSON.stringify(data));
        } else {
            "TURBOPACK unreachable";
        }
    });
exports.saveOnFileSystem = saveOnFileSystem;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/string.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/string.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.fixLengthEntryId = exports.capitalizeFirstLetter = exports.shortString = exports.stringify = void 0;
const stringify = (value)=>JSON.stringify(value, (_, value)=>typeof value === 'bigint' ? value.toString() : value);
exports.stringify = stringify;
const shortString = (value, initialLength = 6, endLength = -4)=>`${value.slice(0, initialLength)}...${value.slice(endLength)}`;
exports.shortString = shortString;
const capitalizeFirstLetter = (string)=>string ? string.charAt(0).toUpperCase() + string.slice(1) : '';
exports.capitalizeFirstLetter = capitalizeFirstLetter;
const fixLengthEntryId = (blockHeight, indexInBlock)=>{
    const totalLength = 32;
    const str1 = blockHeight.toString().padStart(totalLength, '0');
    if (indexInBlock === undefined) return str1;
    const str2 = indexInBlock.toString().padStart(totalLength, '0');
    return `${str1}-${str2}`;
};
exports.fixLengthEntryId = fixLengthEntryId;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/wallet.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/wallet.ts
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getMockWallet = exports.mockWallets = exports.activateWallet = exports.generateWallet = exports.setupWallet = void 0;
const api_1 = __turbopack_require__("[project]/node_modules/.pnpm/@polkadot+api@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/api/index.js [app-route] (ecmascript)");
const util_crypto_1 = __turbopack_require__("[project]/node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/index.js [app-route] (ecmascript)");
const address_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/address.js [app-route] (ecmascript)");
const api_2 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/api.js [app-route] (ecmascript)");
const network_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/network.js [app-route] (ecmascript)");
const wallet_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/wallet.js [app-route] (ecmascript)");
const setupWallet = (params)=>{
    const keyring = new api_1.Keyring({
        type: 'sr25519'
    });
    let keyringPair;
    if (params.uri) {
        // Treat as uri
        keyringPair = keyring.addFromUri(params.uri);
    } else if (params.mnemonic) {
        // Treat as mnemonic
        keyringPair = keyring.addFromUri(params.mnemonic);
    } else throw new Error('Invalid mnemonic or private key');
    return {
        keyringPair,
        address: (0, address_1.address)(keyringPair.address),
        commonAddress: keyringPair.address
    };
};
exports.setupWallet = setupWallet;
const generateWallet = ()=>{
    const mnemonic = (0, util_crypto_1.mnemonicGenerate)();
    const { keyringPair, address, commonAddress } = (0, exports.setupWallet)({
        mnemonic
    });
    return {
        mnemonic,
        keyringPair,
        address,
        commonAddress
    };
};
exports.generateWallet = generateWallet;
const activateWallet = (params)=>__awaiter(void 0, void 0, void 0, function*() {
        if (!params.api) {
            // Create the API instance if not provided
            params.api = params.domainId === undefined ? yield (0, api_2.activate)(params) : yield (0, api_2.activateDomain)(params);
        }
        const accounts = [];
        if (params.mnemonic || params.uri) {
            // Attach the wallet in a node environment
            const { keyringPair } = (0, exports.setupWallet)(params);
            if (keyringPair) accounts.push(keyringPair);
        } else if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        } else throw new Error('No wallet provided');
        return {
            api: params.api,
            accounts,
            address: (0, address_1.address)(accounts[0].address)
        };
    });
exports.activateWallet = activateWallet;
const mockWallets = (...args_1)=>__awaiter(void 0, [
        ...args_1
    ], void 0, function*(network = {
        networkId: network_1.defaultNetwork.id
    }, api) {
        const wallets = [];
        for (const uri of wallet_1.mockURIs){
            const wallet = yield (0, exports.activateWallet)(Object.assign(Object.assign({}, network), {
                uri,
                api
            }));
            wallets.push(wallet);
        }
        return wallets;
    });
exports.mockWallets = mockWallets;
const getMockWallet = (name, wallets)=>wallets[Object.values(wallet_1.mockURIs).indexOf(`//${name}`)];
exports.getMockWallet = getMockWallet;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/constants/index.ts
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/domain.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/network.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/number.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/token.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/wallet.js [app-route] (ecmascript)"), exports);
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/event.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/extrinsic.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/types/extrinsic.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/query.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/token.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/transaction.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/types/transaction.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/wallet.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/types/wallet.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/event.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/extrinsic.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/network.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/query.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/token.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/transaction.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/wallet.js [app-route] (ecmascript)"), exports);
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/createType.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createAccountIdType = void 0;
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/@polkadot+types@14.3.1/node_modules/@polkadot/types/index.js [app-route] (ecmascript)");
const createAccountIdType = (api, address)=>(0, types_1.createType)(api.registry, 'AccountId', address).toU8a();
exports.createAccountIdType = createAccountIdType;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/events.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/utils/events.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.expectSuccessfulTxEvent = exports.eventsGroup = exports.eventName = void 0;
// Utility Function for Event Names
const eventName = (type, event)=>`${type}.${event}`;
exports.eventName = eventName;
// System Events
const system = {
    failure: (0, exports.eventName)("system" /* Type.system */ , 'ExtrinsicFailed'),
    newAccount: (0, exports.eventName)("system" /* Type.system */ , 'NewAccount'),
    success: (0, exports.eventName)("system" /* Type.system */ , 'ExtrinsicSuccess')
};
// Group of Events
exports.eventsGroup = {
    system
};
// Export a default success event
exports.expectSuccessfulTxEvent = [
    system.success
];
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/format.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.u8aToHex = exports.stringToU8a = void 0;
const util_1 = __turbopack_require__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/index.js [app-route] (ecmascript)");
Object.defineProperty(exports, "stringToU8a", {
    enumerable: true,
    get: function() {
        return util_1.stringToU8a;
    }
});
Object.defineProperty(exports, "u8aToHex", {
    enumerable: true,
    get: function() {
        return util_1.u8aToHex;
    }
});
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/ready.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.cryptoWaitReady = void 0;
const util_crypto_1 = __turbopack_require__("[project]/node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/index.js [app-route] (ecmascript)");
Object.defineProperty(exports, "cryptoWaitReady", {
    enumerable: true,
    get: function() {
        return util_crypto_1.cryptoWaitReady;
    }
});
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/sign.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.signatureVerify = exports.signingKey = exports.signMessage = void 0;
const util_crypto_1 = __turbopack_require__("[project]/node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/index.js [app-route] (ecmascript)");
Object.defineProperty(exports, "signatureVerify", {
    enumerable: true,
    get: function() {
        return util_crypto_1.signatureVerify;
    }
});
const format_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/format.js [app-route] (ecmascript)");
const signMessage = (signer, address, data)=>__awaiter(void 0, void 0, void 0, function*() {
        if (!signer.signRaw) throw new Error('signRaw not available on the signer');
        return yield signer.signRaw({
            address,
            type: 'bytes',
            data
        });
    });
exports.signMessage = signMessage;
const signingKey = (publicKey)=>(0, format_1.u8aToHex)(publicKey);
exports.signingKey = signingKey;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/detectTxSuccess.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/utils/detectTxSuccess.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.detectTxSuccess = void 0;
const events_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/events.js [app-route] (ecmascript)");
const detectTxSuccess = (events)=>{
    events.forEach(({ event: { method, section } })=>{
        if (events_1.expectSuccessfulTxEvent.indexOf(`${section}.${method}`) > -1) return true;
    });
    return false;
};
exports.detectTxSuccess = detectTxSuccess;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/validateEvents.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/utils/validateEvents.ts
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.validateEvents = void 0;
const events_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/events.js [app-route] (ecmascript)");
const validateEvents = (events, eventsExpected = events_1.expectSuccessfulTxEvent, tx, block, log = false)=>{
    const _eventsExpected = typeof eventsExpected === 'string' ? [
        eventsExpected
    ] : eventsExpected.map((e)=>typeof e === 'string' ? [
            e
        ] : e).flat();
    const found = [];
    events.forEach(({ event: { data, method, section } })=>{
        const index = _eventsExpected.indexOf(`${section}.${method}`);
        if (index > -1) {
            _eventsExpected.splice(index, 1);
            found.push(`${section}.${method}`);
        } else if (log) console.log('Event not expected', `${section}.${method}`, 'tx', tx, 'block', block);
    });
    if (_eventsExpected.length > 0) console.log('Events not found', _eventsExpected, 'tx', tx, 'block', block);
    return {
        expected: _eventsExpected,
        found
    };
};
exports.validateEvents = validateEvents;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/signAndSendTx.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/utils/signAndSendTx.ts
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.signAndSendTx = void 0;
const detectTxSuccess_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/detectTxSuccess.js [app-route] (ecmascript)");
const events_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/events.js [app-route] (ecmascript)");
const validateEvents_1 = __turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/validateEvents.js [app-route] (ecmascript)");
const signAndSendTx = (sender_1, tx_1, ...args_1)=>__awaiter(void 0, [
        sender_1,
        tx_1,
        ...args_1
    ], void 0, function*(sender, tx, options = {}, eventsExpected = events_1.expectSuccessfulTxEvent, log = false, mapErrorCodeToEnum) {
        let success = false;
        let txHashHex = undefined;
        let blockHash = undefined;
        let eventsValidated = {
            expected: [],
            found: []
        };
        let identifier = null;
        const receipt = yield new Promise((resolve, reject)=>{
            tx.signAndSend(sender, options, (result)=>__awaiter(void 0, void 0, void 0, function*() {
                    const { events = [], status, dispatchError } = result;
                    if (status.isInBlock || status.isFinalized) {
                        txHashHex = result.txHash.toHex();
                        blockHash = status.isInBlock ? status.asInBlock.toHex() : status.asFinalized.toHex();
                        if (log) console.log('Successful tx', txHashHex, 'in block', blockHash);
                        success = (0, detectTxSuccess_1.detectTxSuccess)(events);
                        if (eventsExpected.length > 0) {
                            const _events = (0, validateEvents_1.validateEvents)(events, eventsExpected, txHashHex, blockHash, log);
                            if (_events.expected.length === 0) resolve(result);
                            else reject(new Error('Events not found'));
                        } else {
                            try {
                                events.forEach(({ event: { section, method, data } })=>{
                                    if (section === 'system' && method === 'ExtrinsicFailed') {
                                        const dispatchErrorJson = JSON.parse(dispatchError.toString());
                                        const errorEnum = mapErrorCodeToEnum === null || mapErrorCodeToEnum === void 0 ? void 0 : mapErrorCodeToEnum(dispatchErrorJson.module.error);
                                        reject(new Error(`Extrinsic failed: ${errorEnum} in block #${blockHash} with error: ${dispatchErrorJson}`));
                                    }
                                    if (section === 'autoId' && method === 'NewAutoIdRegistered') {
                                        identifier = data[0].toString();
                                    }
                                });
                                resolve(result);
                            } catch (err) {
                                reject(new Error(`Failed to retrieve block information: ${err.message}`));
                            }
                        }
                    } else if (status.isRetracted || status.isFinalityTimeout || status.isDropped || status.isInvalid) {
                        if (log) console.error('Transaction failed');
                        reject(new Error('Transaction failed'));
                    }
                }));
        });
        return {
            success,
            txHash: txHashHex,
            blockHash,
            events: eventsValidated,
            receipt,
            identifier
        };
    });
exports.signAndSendTx = signAndSendTx;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/verify.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isHex = exports.isAddress = void 0;
const util_1 = __turbopack_require__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/index.js [app-route] (ecmascript)");
Object.defineProperty(exports, "isHex", {
    enumerable: true,
    get: function() {
        return util_1.isHex;
    }
});
const util_crypto_1 = __turbopack_require__("[project]/node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/index.js [app-route] (ecmascript)");
Object.defineProperty(exports, "isAddress", {
    enumerable: true,
    get: function() {
        return util_crypto_1.isAddress;
    }
});
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/createType.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/events.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/format.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/ready.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/sign.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/signAndSendTx.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/validateEvents.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/verify.js [app-route] (ecmascript)"), exports);
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// file: src/index.ts
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/address.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/api.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/crypto.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/keyring.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/network.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/number.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/read.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/save.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/string.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/wallet.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/constants/index.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/types/index.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/utils/index.js [app-route] (ecmascript)"), exports);
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-core@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-core/packageInfo.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "packageInfo": (()=>packageInfo)
});
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_resolve_absolute_path__("node_modules/.pnpm/@polkadot+rpc-core@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-core/packageInfo.js")}`;
    }
};
const packageInfo = {
    name: '@polkadot/rpc-core',
    path: __TURBOPACK__import$2e$meta__ && __TURBOPACK__import$2e$meta__.url ? new URL(__TURBOPACK__import$2e$meta__.url).pathname.substring(0, new URL(__TURBOPACK__import$2e$meta__.url).pathname.lastIndexOf('/') + 1) : 'auto',
    type: 'esm',
    version: '14.3.1'
};
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-core@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-core/util/refCountDelay.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "refCountDelay": (()=>refCountDelay)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/index.js [app-route] (ecmascript)");
;
function refCountDelay(delay = 1750) {
    return (source)=>{
        // state: 0 = disconnected, 1 = disconnecting, 2 = connecting, 3 = connected
        let [state, refCount, connection, scheduler] = [
            0,
            0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Subscription"].EMPTY,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Subscription"].EMPTY
        ];
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Observable"]((ob)=>{
            source.subscribe(ob);
            if (refCount++ === 0) {
                if (state === 1) {
                    scheduler.unsubscribe();
                } else {
                    // eslint-disable-next-line deprecation/deprecation
                    connection = source.connect();
                }
                state = 3;
            }
            return ()=>{
                if (--refCount === 0) {
                    if (state === 2) {
                        state = 0;
                        scheduler.unsubscribe();
                    } else {
                        // state === 3
                        state = 1;
                        scheduler = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["asapScheduler"].schedule(()=>{
                            state = 0;
                            connection.unsubscribe();
                        }, delay);
                    }
                }
            };
        });
    };
}
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-core@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-core/util/drr.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "drr": (()=>drr)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/stringify.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$core$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$refCountDelay$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-core@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-core/util/refCountDelay.js [app-route] (ecmascript)");
;
;
;
function CMP(a, b) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])({
        t: a
    }) === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])({
        t: b
    });
}
function ERR(error) {
    throw error;
}
function NOOP() {
// empty
}
function drr({ delay, skipChange = false, skipTimeout = false } = {}) {
    return (source$)=>source$.pipe((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["catchError"])(ERR), skipChange ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["tap"])(NOOP) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["distinctUntilChanged"])(CMP), // eslint-disable-next-line deprecation/deprecation
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["publishReplay"])(1), skipTimeout ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["refCount"])() : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$core$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$refCountDelay$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["refCountDelay"])(delay));
}
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-core@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-core/bundle.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "RpcCore": (()=>RpcCore)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/function.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$jsonrpc$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__default__as__rpcDefinitions$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types@14.3.1/node_modules/@polkadot/types/interfaces/jsonrpc.js [app-route] (ecmascript) <export default as rpcDefinitions>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/lru.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/memoize.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/object/spread.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/lazy.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/u8a/toU8a.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$core$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$refCountDelay$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-core@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-core/util/refCountDelay.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/null.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$core$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$drr$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-core@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-core/util/drr.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/undefined.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/hex/toU8a.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/u8a/concat.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/logger.js [app-route] (ecmascript)");
;
;
;
;
;
;
;
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["logger"])('rpc-core');
const EMPTY_META = {
    fallback: undefined,
    modifier: {
        isOptional: true
    },
    type: {
        asMap: {
            linked: {
                isTrue: false
            }
        },
        isMap: false
    }
};
const RPC_CORE_DEFAULT_CAPACITY = 1024 * 10 * 10;
/** @internal */ function logErrorMessage(method, { noErrorLog, params, type }, error) {
    if (noErrorLog) {
        return;
    }
    l.error(`${method}(${params.map(({ isOptional, name, type })=>`${name}${isOptional ? '?' : ''}: ${type}`).join(', ')}): ${type}:: ${error.message}`);
}
function isTreatAsHex(key) {
    // :code is problematic - it does not have the length attached, which is
    // unlike all other storage entries where it is indeed properly encoded
    return [
        '0x3a636f6465'
    ].includes(key.toHex());
}
class RpcCore {
    __internal__instanceId;
    __internal__isPedantic;
    __internal__registryDefault;
    __internal__storageCache;
    __internal__storageCacheHits = 0;
    __internal__getBlockRegistry;
    __internal__getBlockHash;
    mapping = new Map();
    provider;
    sections = [];
    /**
     * @constructor
     * Default constructor for the core RPC handler
     * @param  {ProviderInterface} provider An API provider using any of the supported providers (HTTP, SC or WebSocket)
     */ constructor(instanceId, registry, { isPedantic = true, provider, rpcCacheCapacity, userRpc = {} }){
        if (!provider || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isFunction"])(provider.send)) {
            throw new Error('Expected Provider to API create');
        }
        this.__internal__instanceId = instanceId;
        this.__internal__isPedantic = isPedantic;
        this.__internal__registryDefault = registry;
        this.provider = provider;
        const sectionNames = Object.keys(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$jsonrpc$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__default__as__rpcDefinitions$3e$__["rpcDefinitions"]);
        // these are the base keys (i.e. part of jsonrpc)
        this.sections.push(...sectionNames);
        this.__internal__storageCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LRUCache"](rpcCacheCapacity || RPC_CORE_DEFAULT_CAPACITY);
        // decorate all interfaces, defined and user on this instance
        this.addUserInterfaces(userRpc);
    }
    /**
     * @description Returns the connected status of a provider
     */ get isConnected() {
        return this.provider.isConnected;
    }
    /**
     * @description Manually connect from the attached provider
     */ connect() {
        return this.provider.connect();
    }
    /**
     * @description Manually disconnect from the attached provider
     */ async disconnect() {
        return this.provider.disconnect();
    }
    /**
     * @description Returns the underlying core stats, including those from teh provider
     */ get stats() {
        const stats = this.provider.stats;
        return stats ? {
            ...stats,
            core: {
                cacheHits: this.__internal__storageCacheHits,
                cacheSize: this.__internal__storageCache.length
            }
        } : undefined;
    }
    /**
     * @description Sets a registry swap (typically from Api)
     */ setRegistrySwap(registrySwap) {
        this.__internal__getBlockRegistry = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["memoize"])(registrySwap, {
            getInstanceId: ()=>this.__internal__instanceId
        });
    }
    /**
     * @description Sets a function to resolve block hash from block number
     */ setResolveBlockHash(resolveBlockHash) {
        this.__internal__getBlockHash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["memoize"])(resolveBlockHash, {
            getInstanceId: ()=>this.__internal__instanceId
        });
    }
    addUserInterfaces(userRpc) {
        // add any extra user-defined sections
        this.sections.push(...Object.keys(userRpc).filter((k)=>!this.sections.includes(k)));
        for(let s = 0, scount = this.sections.length; s < scount; s++){
            const section = this.sections[s];
            const defs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["objectSpread"])({}, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$jsonrpc$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__default__as__rpcDefinitions$3e$__["rpcDefinitions"][section], userRpc[section]);
            const methods = Object.keys(defs);
            for(let m = 0, mcount = methods.length; m < mcount; m++){
                const method = methods[m];
                const def = defs[method];
                const jsonrpc = def.endpoint || `${section}_${method}`;
                if (!this.mapping.has(jsonrpc)) {
                    const isSubscription = !!def.pubsub;
                    if (!this[section]) {
                        this[section] = {};
                    }
                    this.mapping.set(jsonrpc, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["objectSpread"])({}, def, {
                        isSubscription,
                        jsonrpc,
                        method,
                        section
                    }));
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["lazyMethod"])(this[section], method, ()=>isSubscription ? this._createMethodSubscribe(section, method, def) : this._createMethodSend(section, method, def));
                }
            }
        }
    }
    _memomize(creator, def) {
        const memoOpts = {
            getInstanceId: ()=>this.__internal__instanceId
        };
        const memoized = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["memoize"])(creator(true), memoOpts);
        memoized.raw = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["memoize"])(creator(false), memoOpts);
        memoized.meta = def;
        return memoized;
    }
    _formatResult(isScale, registry, blockHash, method, def, params, result) {
        return isScale ? this._formatOutput(registry, blockHash, method, def, params, result) : result;
    }
    _createMethodSend(section, method, def) {
        const rpcName = def.endpoint || `${section}_${method}`;
        const hashIndex = def.params.findIndex(({ isHistoric })=>isHistoric);
        let memoized = null;
        // execute the RPC call, doing a registry swap for historic as applicable
        const callWithRegistry = async (isScale, values)=>{
            const blockId = hashIndex === -1 ? null : values[hashIndex];
            const blockHash = blockId && def.params[hashIndex].type === 'BlockNumber' ? await this.__internal__getBlockHash?.(blockId) : blockId;
            const { registry } = isScale && blockHash && this.__internal__getBlockRegistry ? await this.__internal__getBlockRegistry((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["u8aToU8a"])(blockHash)) : {
                registry: this.__internal__registryDefault
            };
            const params = this._formatParams(registry, null, def, values);
            // only cache .at(<blockHash>) queries, e.g. where valid blockHash was supplied
            const result = await this.provider.send(rpcName, params.map((p)=>p.toJSON()), !!blockHash);
            return this._formatResult(isScale, registry, blockHash, method, def, params, result);
        };
        const creator = (isScale)=>(...values)=>{
                const isDelayed = isScale && hashIndex !== -1 && !!values[hashIndex];
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Observable"]((observer)=>{
                    callWithRegistry(isScale, values).then((value)=>{
                        observer.next(value);
                        observer.complete();
                    }).catch((error)=>{
                        logErrorMessage(method, def, error);
                        observer.error(error);
                        observer.complete();
                    });
                    return ()=>{
                        // delete old results from cache
                        if (isScale) {
                            memoized?.unmemoize(...values);
                        } else {
                            memoized?.raw.unmemoize(...values);
                        }
                    };
                }).pipe(// eslint-disable-next-line deprecation/deprecation
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["publishReplay"])(1), isDelayed ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$core$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$refCountDelay$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["refCountDelay"])() // Unsubscribe after delay
                 : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["refCount"])());
            };
        memoized = this._memomize(creator, def);
        return memoized;
    }
    // create a subscriptor, it subscribes once and resolves with the id as subscribe
    _createSubscriber({ paramsJson, subName, subType, update }, errorHandler) {
        return new Promise((resolve, reject)=>{
            this.provider.subscribe(subType, subName, paramsJson, update).then(resolve).catch((error)=>{
                errorHandler(error);
                reject(error);
            });
        });
    }
    _createMethodSubscribe(section, method, def) {
        const [updateType, subMethod, unsubMethod] = def.pubsub;
        const subName = `${section}_${subMethod}`;
        const unsubName = `${section}_${unsubMethod}`;
        const subType = `${section}_${updateType}`;
        let memoized = null;
        const creator = (isScale)=>(...values)=>{
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Observable"]((observer)=>{
                    // Have at least an empty promise, as used in the unsubscribe
                    let subscriptionPromise = Promise.resolve(null);
                    const registry = this.__internal__registryDefault;
                    const errorHandler = (error)=>{
                        logErrorMessage(method, def, error);
                        observer.error(error);
                    };
                    try {
                        const params = this._formatParams(registry, null, def, values);
                        const update = (error, result)=>{
                            if (error) {
                                logErrorMessage(method, def, error);
                                return;
                            }
                            try {
                                observer.next(this._formatResult(isScale, registry, null, method, def, params, result));
                            } catch (error) {
                                observer.error(error);
                            }
                        };
                        subscriptionPromise = this._createSubscriber({
                            paramsJson: params.map((p)=>p.toJSON()),
                            subName,
                            subType,
                            update
                        }, errorHandler);
                    } catch (error) {
                        errorHandler(error);
                    }
                    // Teardown logic
                    return ()=>{
                        // Delete from cache, so old results don't hang around
                        if (isScale) {
                            memoized?.unmemoize(...values);
                        } else {
                            memoized?.raw.unmemoize(...values);
                        }
                        // Unsubscribe from provider
                        subscriptionPromise.then((subscriptionId)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isNull"])(subscriptionId) ? Promise.resolve(false) : this.provider.unsubscribe(subType, unsubName, subscriptionId)).catch((error)=>logErrorMessage(method, def, error));
                    };
                }).pipe((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$core$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$drr$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["drr"])());
            };
        memoized = this._memomize(creator, def);
        return memoized;
    }
    _formatParams(registry, blockHash, def, inputs) {
        const count = inputs.length;
        const reqCount = def.params.filter(({ isOptional })=>!isOptional).length;
        if (count < reqCount || count > def.params.length) {
            throw new Error(`Expected ${def.params.length} parameters${reqCount === def.params.length ? '' : ` (${def.params.length - reqCount} optional)`}, ${count} found instead`);
        }
        const params = new Array(count);
        for(let i = 0; i < count; i++){
            params[i] = registry.createTypeUnsafe(def.params[i].type, [
                inputs[i]
            ], {
                blockHash
            });
        }
        return params;
    }
    _formatOutput(registry, blockHash, method, rpc, params, result) {
        if (rpc.type === 'StorageData') {
            const key = params[0];
            return this._formatStorageData(registry, blockHash, key, result);
        } else if (rpc.type === 'StorageChangeSet') {
            const keys = params[0];
            return keys ? this._formatStorageSet(registry, result.block, keys, result.changes) : registry.createType('StorageChangeSet', result);
        } else if (rpc.type === 'Vec<StorageChangeSet>') {
            const jsonSet = result;
            const count = jsonSet.length;
            const mapped = new Array(count);
            for(let i = 0; i < count; i++){
                const { block, changes } = jsonSet[i];
                mapped[i] = [
                    registry.createType('BlockHash', block),
                    this._formatStorageSet(registry, block, params[0], changes)
                ];
            }
            // we only query at a specific block, not a range - flatten
            return method === 'queryStorageAt' ? mapped[0][1] : mapped;
        }
        return registry.createTypeUnsafe(rpc.type, [
            result
        ], {
            blockHash
        });
    }
    _formatStorageData(registry, blockHash, key, value) {
        const isEmpty = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isNull"])(value);
        // we convert to Uint8Array since it maps to the raw encoding, all
        // data will be correctly encoded (incl. numbers, excl. :code)
        const input = isEmpty ? null : isTreatAsHex(key) ? value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["u8aToU8a"])(value);
        return this._newType(registry, blockHash, key, input, isEmpty);
    }
    _formatStorageSet(registry, blockHash, keys, changes) {
        // For StorageChangeSet, the changes has the [key, value] mappings
        const count = keys.length;
        const withCache = count !== 1;
        const values = new Array(count);
        // multiple return values (via state.storage subscription), decode the
        // values one at a time, all based on the supplied query types
        for(let i = 0; i < count; i++){
            values[i] = this._formatStorageSetEntry(registry, blockHash, keys[i], changes, withCache, i);
        }
        return values;
    }
    _formatStorageSetEntry(registry, blockHash, key, changes, withCache, entryIndex) {
        const hexKey = key.toHex();
        const found = changes.find(([key])=>key === hexKey);
        const isNotFound = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isUndefined"])(found);
        // if we don't find the value, this is our fallback
        //   - in the case of an array of values, fill the hole from the cache
        //   - if a single result value, don't fill - it is not an update hole
        //   - fallback to an empty option in all cases
        if (isNotFound && withCache) {
            const cached = this.__internal__storageCache.get(hexKey);
            if (cached) {
                this.__internal__storageCacheHits++;
                return cached;
            }
        }
        const value = isNotFound ? null : found[1];
        const isEmpty = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isNull"])(value);
        const input = isEmpty || isTreatAsHex(key) ? value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["u8aToU8a"])(value);
        const codec = this._newType(registry, blockHash, key, input, isEmpty, entryIndex);
        this._setToCache(hexKey, codec);
        return codec;
    }
    _setToCache(key, value) {
        this.__internal__storageCache.set(key, value);
    }
    _newType(registry, blockHash, key, input, isEmpty, entryIndex = -1) {
        // single return value (via state.getStorage), decode the value based on the
        // outputType that we have specified. Fallback to Raw on nothing
        const type = key.outputType || 'Raw';
        const meta = key.meta || EMPTY_META;
        const entryNum = entryIndex === -1 ? '' : ` entry ${entryIndex}:`;
        try {
            return registry.createTypeUnsafe(type, [
                isEmpty ? meta.fallback ? type.includes('Linkage<') ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["u8aConcat"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["hexToU8a"])(meta.fallback.toHex()), new Uint8Array(2)) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["hexToU8a"])(meta.fallback.toHex()) : undefined : meta.modifier.isOptional ? registry.createTypeUnsafe(type, [
                    input
                ], {
                    blockHash,
                    isPedantic: this.__internal__isPedantic
                }) : input
            ], {
                blockHash,
                isFallback: isEmpty && !!meta.fallback,
                isOptional: meta.modifier.isOptional,
                isPedantic: this.__internal__isPedantic && !meta.modifier.isOptional
            });
        } catch (error) {
            throw new Error(`Unable to decode storage ${key.section || 'unknown'}.${key.method || 'unknown'}:${entryNum}: ${error.message}`);
        }
    }
}
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-core@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-core/util/memo.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "memo": (()=>memo)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/memoize.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/cjs/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$core$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$drr$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-core@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-core/util/drr.js [app-route] (ecmascript)");
;
;
;
function memo(instanceId, inner) {
    const options = {
        getInstanceId: ()=>instanceId
    };
    const cached = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["memoize"])((...params)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$rxjs$40$7$2e$8$2e$2$2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Observable"]((observer)=>{
            const subscription = inner(...params).subscribe(observer);
            return ()=>{
                cached.unmemoize(...params);
                subscription.unsubscribe();
            };
        }).pipe((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$core$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$drr$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["drr"])()), options);
    return cached;
}
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/packageInfo.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "packageInfo": (()=>packageInfo)
});
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_resolve_absolute_path__("node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/packageInfo.js")}`;
    }
};
const packageInfo = {
    name: '@polkadot/rpc-provider',
    path: __TURBOPACK__import$2e$meta__ && __TURBOPACK__import$2e$meta__.url ? new URL(__TURBOPACK__import$2e$meta__.url).pathname.substring(0, new URL(__TURBOPACK__import$2e$meta__.url).pathname.lastIndexOf('/') + 1) : 'auto',
    type: 'esm',
    version: '14.3.1'
};
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/defaults.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
const HTTP_URL = 'http://127.0.0.1:9933';
const WS_URL = 'ws://127.0.0.1:9944';
const __TURBOPACK__default__export__ = {
    HTTP_URL,
    WS_URL
};
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/coder/error.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>RpcError)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/function.js [app-route] (ecmascript)");
;
const UNKNOWN = -99999;
function extend(that, name, value) {
    Object.defineProperty(that, name, {
        configurable: true,
        enumerable: false,
        value
    });
}
class RpcError extends Error {
    code;
    data;
    message;
    name;
    stack;
    constructor(message = '', code = UNKNOWN, data){
        super();
        extend(this, 'message', String(message));
        extend(this, 'name', this.constructor.name);
        extend(this, 'data', data);
        extend(this, 'code', code);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isFunction"])(Error.captureStackTrace)) {
            Error.captureStackTrace(this, this.constructor);
        } else {
            const { stack } = new Error(message);
            stack && extend(this, 'stack', stack);
        }
    }
    static CODES = {
        ASSERT: -90009,
        INVALID_JSONRPC: -99998,
        METHOD_NOT_FOUND: -32601,
        UNKNOWN
    };
}
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/coder/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "RpcCoder": (()=>RpcCoder)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/undefined.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/number.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/string.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/stringify.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$error$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/coder/error.js [app-route] (ecmascript)");
;
;
function formatErrorData(data) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isUndefined"])(data)) {
        return '';
    }
    const formatted = `: ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isString"])(data) ? data.replace(/Error\("/g, '').replace(/\("/g, '(').replace(/"\)/g, ')').replace(/\(/g, ', ').replace(/\)/g, '') : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(data)}`;
    // We need some sort of cut-off here since these can be very large and
    // very nested, pick a number and trim the result display to it
    return formatted.length <= 256 ? formatted : `${formatted.substring(0, 255)}…`;
}
function checkError(error) {
    if (error) {
        const { code, data, message } = error;
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$error$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"](`${code}: ${message}${formatErrorData(data)}`, code, data);
    }
}
class RpcCoder {
    __internal__id = 0;
    decodeResponse(response) {
        if (!response || response.jsonrpc !== '2.0') {
            throw new Error('Invalid jsonrpc field in decoded object');
        }
        const isSubscription = !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isUndefined"])(response.params) && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isUndefined"])(response.method);
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isNumber"])(response.id) && (!isSubscription || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isNumber"])(response.params.subscription) && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isString"])(response.params.subscription))) {
            throw new Error('Invalid id field in decoded object');
        }
        checkError(response.error);
        if (response.result === undefined && !isSubscription) {
            throw new Error('No result found in jsonrpc response');
        }
        if (isSubscription) {
            checkError(response.params.error);
            return response.params.result;
        }
        return response.result;
    }
    encodeJson(method, params) {
        const [id, data] = this.encodeObject(method, params);
        return [
            id,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(data)
        ];
    }
    encodeObject(method, params) {
        const id = ++this.__internal__id;
        return [
            id,
            {
                id,
                jsonrpc: '2.0',
                method,
                params
            }
        ];
    }
}
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/lru.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "DEFAULT_CAPACITY": (()=>DEFAULT_CAPACITY),
    "LRUCache": (()=>LRUCache)
});
const DEFAULT_CAPACITY = 1024;
class LRUNode {
    key;
    __internal__expires;
    __internal__ttl;
    createdAt;
    next;
    prev;
    constructor(key, ttl){
        this.key = key;
        this.__internal__ttl = ttl;
        this.__internal__expires = Date.now() + ttl;
        this.createdAt = Date.now();
        this.next = this.prev = this;
    }
    refresh() {
        this.__internal__expires = Date.now() + this.__internal__ttl;
    }
    get expiry() {
        return this.__internal__expires;
    }
}
class LRUCache {
    capacity;
    __internal__data = new Map();
    __internal__refs = new Map();
    __internal__length = 0;
    __internal__head;
    __internal__tail;
    __internal__ttl;
    constructor(capacity = DEFAULT_CAPACITY, ttl = 30000){
        this.capacity = capacity;
        this.__internal__ttl = ttl;
        this.__internal__head = this.__internal__tail = new LRUNode('<empty>', ttl);
    }
    get ttl() {
        return this.__internal__ttl;
    }
    get length() {
        return this.__internal__length;
    }
    get lengthData() {
        return this.__internal__data.size;
    }
    get lengthRefs() {
        return this.__internal__refs.size;
    }
    entries() {
        const keys = this.keys();
        const count = keys.length;
        const entries = new Array(count);
        for(let i = 0; i < count; i++){
            const key = keys[i];
            entries[i] = [
                key,
                this.__internal__data.get(key)
            ];
        }
        return entries;
    }
    keys() {
        const keys = [];
        if (this.__internal__length) {
            let curr = this.__internal__head;
            while(curr !== this.__internal__tail){
                keys.push(curr.key);
                curr = curr.next;
            }
            keys.push(curr.key);
        }
        return keys;
    }
    get(key) {
        const data = this.__internal__data.get(key);
        if (data) {
            this.__internal__toHead(key);
            // Evict TTL once data is refreshed
            this.__internal__evictTTL();
            return data;
        }
        this.__internal__evictTTL();
        return null;
    }
    set(key, value) {
        if (this.__internal__data.has(key)) {
            this.__internal__toHead(key);
        } else {
            const node = new LRUNode(key, this.__internal__ttl);
            this.__internal__refs.set(node.key, node);
            if (this.length === 0) {
                this.__internal__head = this.__internal__tail = node;
            } else {
                this.__internal__head.prev = node;
                node.next = this.__internal__head;
                this.__internal__head = node;
            }
            if (this.__internal__length === this.capacity) {
                this.__internal__data.delete(this.__internal__tail.key);
                this.__internal__refs.delete(this.__internal__tail.key);
                this.__internal__tail = this.__internal__tail.prev;
                this.__internal__tail.next = this.__internal__head;
            } else {
                this.__internal__length += 1;
            }
        }
        // Evict TTL once data is refreshed or added
        this.__internal__evictTTL();
        this.__internal__data.set(key, value);
    }
    __internal__evictTTL() {
        // Find last node to keep
        // traverse map to find the expired nodes
        while(this.__internal__tail.expiry && this.__internal__tail.expiry < Date.now() && this.__internal__length > 0){
            this.__internal__refs.delete(this.__internal__tail.key);
            this.__internal__data.delete(this.__internal__tail.key);
            this.__internal__length -= 1;
            this.__internal__tail = this.__internal__tail.prev;
            this.__internal__tail.next = this.__internal__head;
        }
        if (this.__internal__length === 0) {
            this.__internal__head = this.__internal__tail = new LRUNode('<empty>', this.__internal__ttl);
        }
    }
    __internal__toHead(key) {
        const ref = this.__internal__refs.get(key);
        if (ref && ref !== this.__internal__head) {
            ref.refresh();
            ref.prev.next = ref.next;
            ref.next.prev = ref.prev;
            ref.next = this.__internal__head;
            this.__internal__head.prev = ref;
            this.__internal__head = ref;
        }
    }
}
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/http/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "HttpProvider": (()=>HttpProvider)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/logger.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$defaults$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/defaults.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/coder/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/lru.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/noop.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/stringify.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$fetch$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$fetch$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+x-fetch@13.4.3/node_modules/@polkadot/x-fetch/node.js [app-route] (ecmascript) <locals>");
;
;
;
;
;
const ERROR_SUBSCRIBE = 'HTTP Provider does not have subscriptions, use WebSockets instead';
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["logger"])('api-http');
class HttpProvider {
    __internal__callCache;
    __internal__cacheCapacity;
    __internal__coder;
    __internal__endpoint;
    __internal__headers;
    __internal__stats;
    /**
     * @param {string} endpoint The endpoint url starting with http://
     */ constructor(endpoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$defaults$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].HTTP_URL, headers = {}, cacheCapacity){
        if (!/^(https|http):\/\//.test(endpoint)) {
            throw new Error(`Endpoint should start with 'http://' or 'https://', received '${endpoint}'`);
        }
        this.__internal__coder = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["RpcCoder"]();
        this.__internal__endpoint = endpoint;
        this.__internal__headers = headers;
        this.__internal__callCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LRUCache"](cacheCapacity === 0 ? 0 : cacheCapacity || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_CAPACITY"]);
        this.__internal__cacheCapacity = cacheCapacity === 0 ? 0 : cacheCapacity || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_CAPACITY"];
        this.__internal__stats = {
            active: {
                requests: 0,
                subscriptions: 0
            },
            total: {
                bytesRecv: 0,
                bytesSent: 0,
                cached: 0,
                errors: 0,
                requests: 0,
                subscriptions: 0,
                timeout: 0
            }
        };
    }
    /**
     * @summary `true` when this provider supports subscriptions
     */ get hasSubscriptions() {
        return !!false;
    }
    /**
     * @description Returns a clone of the object
     */ clone() {
        return new HttpProvider(this.__internal__endpoint, this.__internal__headers);
    }
    /**
     * @description Manually connect from the connection
     */ async connect() {
    // noop
    }
    /**
     * @description Manually disconnect from the connection
     */ async disconnect() {
    // noop
    }
    /**
     * @description Returns the connection stats
     */ get stats() {
        return this.__internal__stats;
    }
    /**
     * @summary `true` when this provider supports clone()
     */ get isClonable() {
        return !!true;
    }
    /**
     * @summary Whether the node is connected or not.
     * @return {boolean} true if connected
     */ get isConnected() {
        return !!true;
    }
    /**
     * @summary Events are not supported with the HttpProvider, see [[WsProvider]].
     * @description HTTP Provider does not have 'on' emitters. WebSockets should be used instead.
     */ on(_type, _sub) {
        l.error('HTTP Provider does not have \'on\' emitters, use WebSockets instead');
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["noop"];
    }
    /**
     * @summary Send HTTP POST Request with Body to configured HTTP Endpoint.
     */ async send(method, params, isCacheable) {
        this.__internal__stats.total.requests++;
        const [, body] = this.__internal__coder.encodeJson(method, params);
        if (this.__internal__cacheCapacity === 0) {
            return this.__internal__send(body);
        }
        const cacheKey = isCacheable ? `${method}::${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(params)}` : '';
        let resultPromise = isCacheable ? this.__internal__callCache.get(cacheKey) : null;
        if (!resultPromise) {
            resultPromise = this.__internal__send(body);
            if (isCacheable) {
                this.__internal__callCache.set(cacheKey, resultPromise);
            }
        } else {
            this.__internal__stats.total.cached++;
        }
        return resultPromise;
    }
    async __internal__send(body) {
        this.__internal__stats.active.requests++;
        this.__internal__stats.total.bytesSent += body.length;
        try {
            const response = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$fetch$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$fetch$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["fetch"])(this.__internal__endpoint, {
                body,
                headers: {
                    Accept: 'application/json',
                    'Content-Length': `${body.length}`,
                    'Content-Type': 'application/json',
                    ...this.__internal__headers
                },
                method: 'POST'
            });
            if (!response.ok) {
                throw new Error(`[${response.status}]: ${response.statusText}`);
            }
            const result = await response.text();
            this.__internal__stats.total.bytesRecv += result.length;
            const decoded = this.__internal__coder.decodeResponse(JSON.parse(result));
            this.__internal__stats.active.requests--;
            return decoded;
        } catch (e) {
            this.__internal__stats.active.requests--;
            this.__internal__stats.total.errors++;
            throw e;
        }
    }
    /**
     * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].
     */ // eslint-disable-next-line @typescript-eslint/require-await
    async subscribe(_types, _method, _params, _cb) {
        l.error(ERROR_SUBSCRIBE);
        throw new Error(ERROR_SUBSCRIBE);
    }
    /**
     * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].
     */ // eslint-disable-next-line @typescript-eslint/require-await
    async unsubscribe(_type, _method, _id) {
        l.error(ERROR_SUBSCRIBE);
        throw new Error(ERROR_SUBSCRIBE);
    }
}
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/substrate-connect/Health.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "HealthCheckError": (()=>HealthCheckError),
    "healthChecker": (()=>healthChecker)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/stringify.js [app-route] (ecmascript)");
;
function healthChecker() {
    // `null` if health checker is not started.
    let checker = null;
    let sendJsonRpc = null;
    return {
        responsePassThrough: (jsonRpcResponse)=>{
            if (checker === null) {
                return jsonRpcResponse;
            }
            return checker.responsePassThrough(jsonRpcResponse);
        },
        sendJsonRpc: (request)=>{
            if (!sendJsonRpc) {
                throw new Error('setSendJsonRpc must be called before sending requests');
            }
            if (checker === null) {
                sendJsonRpc(request);
            } else {
                checker.sendJsonRpc(request);
            }
        },
        setSendJsonRpc: (cb)=>{
            sendJsonRpc = cb;
        },
        start: (healthCallback)=>{
            if (checker !== null) {
                throw new Error("Can't start the health checker multiple times in parallel");
            } else if (!sendJsonRpc) {
                throw new Error('setSendJsonRpc must be called before starting the health checks');
            }
            checker = new InnerChecker(healthCallback, sendJsonRpc);
            checker.update(true);
        },
        stop: ()=>{
            if (checker === null) {
                return;
            } // Already stopped.
            checker.destroy();
            checker = null;
        }
    };
}
class InnerChecker {
    __internal__healthCallback;
    __internal__currentHealthCheckId = null;
    __internal__currentHealthTimeout = null;
    __internal__currentSubunsubRequestId = null;
    __internal__currentSubscriptionId = null;
    __internal__requestToSmoldot;
    __internal__isSyncing = false;
    __internal__nextRequestId = 0;
    constructor(healthCallback, requestToSmoldot){
        this.__internal__healthCallback = healthCallback;
        this.__internal__requestToSmoldot = (request)=>requestToSmoldot((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(request));
    }
    sendJsonRpc = (request)=>{
        // Replace the `id` in the request to prefix the request ID with `extern:`.
        let parsedRequest;
        try {
            parsedRequest = JSON.parse(request);
        } catch  {
            return;
        }
        if (parsedRequest.id) {
            const newId = 'extern:' + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(parsedRequest.id);
            parsedRequest.id = newId;
        }
        this.__internal__requestToSmoldot(parsedRequest);
    };
    responsePassThrough = (jsonRpcResponse)=>{
        let parsedResponse;
        try {
            parsedResponse = JSON.parse(jsonRpcResponse);
        } catch  {
            return jsonRpcResponse;
        }
        // Check whether response is a response to `system_health`.
        if (parsedResponse.id && this.__internal__currentHealthCheckId === parsedResponse.id) {
            this.__internal__currentHealthCheckId = null;
            // Check whether query was successful. It is possible for queries to fail for
            // various reasons, such as the client being overloaded.
            if (!parsedResponse.result) {
                this.update(false);
                return null;
            }
            this.__internal__healthCallback(parsedResponse.result);
            this.__internal__isSyncing = parsedResponse.result.isSyncing;
            this.update(false);
            return null;
        }
        // Check whether response is a response to the subscription or unsubscription.
        if (parsedResponse.id && this.__internal__currentSubunsubRequestId === parsedResponse.id) {
            this.__internal__currentSubunsubRequestId = null;
            // Check whether query was successful. It is possible for queries to fail for
            // various reasons, such as the client being overloaded.
            if (!parsedResponse.result) {
                this.update(false);
                return null;
            }
            if (this.__internal__currentSubscriptionId) {
                this.__internal__currentSubscriptionId = null;
            } else {
                this.__internal__currentSubscriptionId = parsedResponse.result;
            }
            this.update(false);
            return null;
        }
        // Check whether response is a notification to a subscription.
        if (parsedResponse.params && this.__internal__currentSubscriptionId && parsedResponse.params.subscription === this.__internal__currentSubscriptionId) {
            // Note that after a successful subscription, a notification containing
            // the current best block is always returned. Considering that a
            // subscription is performed in response to a health check, calling
            // `startHealthCheck()` here will lead to a second health check.
            // It might seem redundant to perform two health checks in a quick
            // succession, but doing so doesn't lead to any problem, and it is
            // actually possible for the health to have changed in between as the
            // current best block might have been updated during the subscription
            // request.
            this.update(true);
            return null;
        }
        // Response doesn't concern us.
        if (parsedResponse.id) {
            const id = parsedResponse.id;
            // Need to remove the `extern:` prefix.
            if (!id.startsWith('extern:')) {
                throw new Error('State inconsistency in health checker');
            }
            const newId = JSON.parse(id.slice('extern:'.length));
            parsedResponse.id = newId;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(parsedResponse);
    };
    update = (startNow)=>{
        // If `startNow`, clear `#currentHealthTimeout` so that it is set below.
        if (startNow && this.__internal__currentHealthTimeout) {
            clearTimeout(this.__internal__currentHealthTimeout);
            this.__internal__currentHealthTimeout = null;
        }
        if (!this.__internal__currentHealthTimeout) {
            const startHealthRequest = ()=>{
                this.__internal__currentHealthTimeout = null;
                // No matter what, don't start a health request if there is already one in progress.
                // This is sane to do because receiving a response to a health request calls `update()`.
                if (this.__internal__currentHealthCheckId) {
                    return;
                }
                // Actual request starting.
                this.__internal__currentHealthCheckId = `health-checker:${this.__internal__nextRequestId}`;
                this.__internal__nextRequestId += 1;
                this.__internal__requestToSmoldot({
                    id: this.__internal__currentHealthCheckId,
                    jsonrpc: '2.0',
                    method: 'system_health',
                    params: []
                });
            };
            if (startNow) {
                startHealthRequest();
            } else {
                this.__internal__currentHealthTimeout = setTimeout(startHealthRequest, 1000);
            }
        }
        if (this.__internal__isSyncing && !this.__internal__currentSubscriptionId && !this.__internal__currentSubunsubRequestId) {
            this.startSubscription();
        }
        if (!this.__internal__isSyncing && this.__internal__currentSubscriptionId && !this.__internal__currentSubunsubRequestId) {
            this.endSubscription();
        }
    };
    startSubscription = ()=>{
        if (this.__internal__currentSubunsubRequestId || this.__internal__currentSubscriptionId) {
            throw new Error('Internal error in health checker');
        }
        this.__internal__currentSubunsubRequestId = `health-checker:${this.__internal__nextRequestId}`;
        this.__internal__nextRequestId += 1;
        this.__internal__requestToSmoldot({
            id: this.__internal__currentSubunsubRequestId,
            jsonrpc: '2.0',
            method: 'chain_subscribeNewHeads',
            params: []
        });
    };
    endSubscription = ()=>{
        if (this.__internal__currentSubunsubRequestId || !this.__internal__currentSubscriptionId) {
            throw new Error('Internal error in health checker');
        }
        this.__internal__currentSubunsubRequestId = `health-checker:${this.__internal__nextRequestId}`;
        this.__internal__nextRequestId += 1;
        this.__internal__requestToSmoldot({
            id: this.__internal__currentSubunsubRequestId,
            jsonrpc: '2.0',
            method: 'chain_unsubscribeNewHeads',
            params: [
                this.__internal__currentSubscriptionId
            ]
        });
    };
    destroy = ()=>{
        if (this.__internal__currentHealthTimeout) {
            clearTimeout(this.__internal__currentHealthTimeout);
            this.__internal__currentHealthTimeout = null;
        }
    };
}
class HealthCheckError extends Error {
    __internal__cause;
    getCause() {
        return this.__internal__cause;
    }
    constructor(response, message = 'Got error response asking for system health'){
        super(message);
        this.__internal__cause = response;
    }
}
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/substrate-connect/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ScProvider": (()=>ScProvider)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventemitter3$40$5$2e$0$2e$1$2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/logger.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/coder/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventemitter3$40$5$2e$0$2e$1$2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__default__as__EventEmitter$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js [app-route] (ecmascript) <export default as EventEmitter>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/object.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/function.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$substrate$2d$connect$2f$Health$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/substrate-connect/Health.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/noop.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/object/spread.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$error$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/error.js [app-route] (ecmascript)");
;
;
;
;
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["logger"])('api-substrate-connect');
const subscriptionUnsubscriptionMethods = new Map([
    [
        'author_submitAndWatchExtrinsic',
        'author_unwatchExtrinsic'
    ],
    [
        'chain_subscribeAllHeads',
        'chain_unsubscribeAllHeads'
    ],
    [
        'chain_subscribeFinalizedHeads',
        'chain_unsubscribeFinalizedHeads'
    ],
    [
        'chain_subscribeFinalisedHeads',
        'chain_subscribeFinalisedHeads'
    ],
    [
        'chain_subscribeNewHeads',
        'chain_unsubscribeNewHeads'
    ],
    [
        'chain_subscribeNewHead',
        'chain_unsubscribeNewHead'
    ],
    [
        'chain_subscribeRuntimeVersion',
        'chain_unsubscribeRuntimeVersion'
    ],
    [
        'subscribe_newHead',
        'unsubscribe_newHead'
    ],
    [
        'state_subscribeRuntimeVersion',
        'state_unsubscribeRuntimeVersion'
    ],
    [
        'state_subscribeStorage',
        'state_unsubscribeStorage'
    ]
]);
const scClients = new WeakMap();
class ScProvider {
    __internal__Sc;
    __internal__coder = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["RpcCoder"]();
    __internal__spec;
    __internal__sharedSandbox;
    __internal__subscriptions = new Map();
    __internal__resubscribeMethods = new Map();
    __internal__requests = new Map();
    __internal__wellKnownChains;
    __internal__eventemitter = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventemitter3$40$5$2e$0$2e$1$2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__default__as__EventEmitter$3e$__["EventEmitter"]();
    __internal__chain = null;
    __internal__isChainReady = false;
    constructor(Sc, spec, sharedSandbox){
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isObject"])(Sc) || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isObject"])(Sc.WellKnownChain) || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isFunction"])(Sc.createScClient)) {
            throw new Error('Expected an @substrate/connect interface as first parameter to ScProvider');
        }
        this.__internal__Sc = Sc;
        this.__internal__spec = spec;
        this.__internal__sharedSandbox = sharedSandbox;
        this.__internal__wellKnownChains = new Set(Object.values(Sc.WellKnownChain));
    }
    get hasSubscriptions() {
        // Indicates that subscriptions are supported
        return !!true;
    }
    get isClonable() {
        return !!false;
    }
    get isConnected() {
        return !!this.__internal__chain && this.__internal__isChainReady;
    }
    clone() {
        throw new Error('clone() is not supported.');
    }
    // Config details can be found in @substrate/connect repo following the link:
    // https://github.com/paritytech/substrate-connect/blob/main/packages/connect/src/connector/index.ts
    async connect(config, checkerFactory = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$substrate$2d$connect$2f$Health$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["healthChecker"]) {
        if (this.isConnected) {
            throw new Error('Already connected!');
        }
        // it could happen that after emitting `disconnected` due to the fact that
        // smoldot is syncing, the consumer tries to reconnect after a certain amount
        // of time... In which case we want to make sure that we don't create a new
        // chain.
        if (this.__internal__chain) {
            await this.__internal__chain;
            return;
        }
        if (this.__internal__sharedSandbox && !this.__internal__sharedSandbox.isConnected) {
            await this.__internal__sharedSandbox.connect();
        }
        const client = this.__internal__sharedSandbox ? scClients.get(this.__internal__sharedSandbox) : this.__internal__Sc.createScClient(config);
        if (!client) {
            throw new Error('Unknown ScProvider!');
        }
        scClients.set(this, client);
        const hc = checkerFactory();
        const onResponse = (res)=>{
            const hcRes = hc.responsePassThrough(res);
            if (!hcRes) {
                return;
            }
            const response = JSON.parse(hcRes);
            let decodedResponse;
            try {
                decodedResponse = this.__internal__coder.decodeResponse(response);
            } catch (e) {
                decodedResponse = e;
            }
            // It's not a subscription message, but rather a standar RPC response
            if (response.params?.subscription === undefined || !response.method) {
                return this.__internal__requests.get(response.id)?.(decodedResponse);
            }
            // We are dealing with a subscription message
            const subscriptionId = `${response.method}::${response.params.subscription}`;
            const callback = this.__internal__subscriptions.get(subscriptionId)?.[0];
            callback?.(decodedResponse);
        };
        const addChain = this.__internal__sharedSandbox ? async (...args)=>{
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            const source = this.__internal__sharedSandbox;
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            return (await source.__internal__chain).addChain(...args);
        } : this.__internal__wellKnownChains.has(this.__internal__spec) ? client.addWellKnownChain : client.addChain;
        this.__internal__chain = addChain(this.__internal__spec, onResponse).then((chain)=>{
            hc.setSendJsonRpc(chain.sendJsonRpc);
            this.__internal__isChainReady = false;
            const cleanup = ()=>{
                // If there are any callbacks left, we have to reject/error them.
                // Otherwise, that would cause a memory leak.
                const disconnectionError = new Error('Disconnected');
                this.__internal__requests.forEach((cb)=>cb(disconnectionError));
                this.__internal__subscriptions.forEach(([cb])=>cb(disconnectionError));
                this.__internal__subscriptions.clear();
            };
            const staleSubscriptions = [];
            const killStaleSubscriptions = ()=>{
                if (staleSubscriptions.length === 0) {
                    return;
                }
                const stale = staleSubscriptions.pop();
                if (!stale) {
                    throw new Error('Unable to get stale subscription');
                }
                const { id, unsubscribeMethod } = stale;
                Promise.race([
                    this.send(unsubscribeMethod, [
                        id
                    ]).catch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["noop"]),
                    new Promise((resolve)=>setTimeout(resolve, 500))
                ]).then(killStaleSubscriptions).catch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["noop"]);
            };
            hc.start((health)=>{
                const isReady = !health.isSyncing && (health.peers > 0 || !health.shouldHavePeers);
                // if it's the same as before, then nothing has changed and we are done
                if (this.__internal__isChainReady === isReady) {
                    return;
                }
                this.__internal__isChainReady = isReady;
                if (!isReady) {
                    // If we've reached this point, that means that the chain used to be "ready"
                    // and now we are about to emit `disconnected`.
                    //
                    // This will cause the PolkadotJs API think that the connection is
                    // actually dead. In reality the smoldot chain is not dead, of course.
                    // However, we have to cleanup all the existing callbacks because when
                    // the smoldot chain stops syncing, then we will emit `connected` and
                    // the PolkadotJs API will try to re-create the previous
                    // subscriptions and requests. Although, now is not a good moment
                    // to be sending unsubscription messages to the smoldot chain, we
                    // should wait until is no longer syncing to send the unsubscription
                    // messages from the stale subscriptions of the previous connection.
                    //
                    // That's why -before we perform the cleanup of `this.__internal__subscriptions`-
                    // we keep the necessary information that we will need later on to
                    // kill the stale subscriptions.
                    [
                        ...this.__internal__subscriptions.values()
                    ].forEach((s)=>{
                        staleSubscriptions.push(s[1]);
                    });
                    cleanup();
                    this.__internal__eventemitter.emit('disconnected');
                } else {
                    killStaleSubscriptions();
                    this.__internal__eventemitter.emit('connected');
                    if (this.__internal__resubscribeMethods.size) {
                        this.__internal__resubscribe();
                    }
                }
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["objectSpread"])({}, chain, {
                remove: ()=>{
                    hc.stop();
                    chain.remove();
                    cleanup();
                },
                sendJsonRpc: hc.sendJsonRpc.bind(hc)
            });
        });
        try {
            await this.__internal__chain;
        } catch (e) {
            this.__internal__chain = null;
            this.__internal__eventemitter.emit('error', e);
            throw e;
        }
    }
    __internal__resubscribe = ()=>{
        const promises = [];
        this.__internal__resubscribeMethods.forEach((subDetails)=>{
            // only re-create subscriptions which are not in author (only area where
            // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'
            // are not included (and will not be re-broadcast)
            if (subDetails.type.startsWith('author_')) {
                return;
            }
            try {
                const promise = new Promise((resolve)=>{
                    this.subscribe(subDetails.type, subDetails.method, subDetails.params, subDetails.callback).catch((error)=>console.log(error));
                    resolve();
                });
                promises.push(promise);
            } catch (error) {
                l.error(error);
            }
        });
        Promise.all(promises).catch((err)=>l.log(err));
    };
    async disconnect() {
        if (!this.__internal__chain) {
            return;
        }
        const chain = await this.__internal__chain;
        this.__internal__chain = null;
        this.__internal__isChainReady = false;
        try {
            chain.remove();
        } catch (_) {}
        this.__internal__eventemitter.emit('disconnected');
    }
    on(type, sub) {
        // It's possible. Although, quite unlikely, that by the time that polkadot
        // subscribes to the `connected` event, the Provider is already connected.
        // In that case, we must emit to let the consumer know that we are connected.
        if (type === 'connected' && this.isConnected) {
            sub();
        }
        this.__internal__eventemitter.on(type, sub);
        return ()=>{
            this.__internal__eventemitter.removeListener(type, sub);
        };
    }
    async send(method, params) {
        if (!this.isConnected || !this.__internal__chain) {
            throw new Error('Provider is not connected');
        }
        const chain = await this.__internal__chain;
        const [id, json] = this.__internal__coder.encodeJson(method, params);
        const result = new Promise((resolve, reject)=>{
            this.__internal__requests.set(id, (response)=>{
                ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$error$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isError"])(response) ? reject : resolve)(response);
            });
            try {
                chain.sendJsonRpc(json);
            } catch (e) {
                this.__internal__chain = null;
                try {
                    chain.remove();
                } catch (_) {}
                this.__internal__eventemitter.emit('error', e);
            }
        });
        try {
            return await result;
        } finally{
            // let's ensure that once the Promise is resolved/rejected, then we remove
            // remove its entry from the internal #requests
            this.__internal__requests.delete(id);
        }
    }
    async subscribe(type, method, params, callback) {
        if (!subscriptionUnsubscriptionMethods.has(method)) {
            throw new Error(`Unsupported subscribe method: ${method}`);
        }
        const id = await this.send(method, params);
        const subscriptionId = `${type}::${id}`;
        const cb = (response)=>{
            if (response instanceof Error) {
                callback(response, undefined);
            } else {
                callback(null, response);
            }
        };
        const unsubscribeMethod = subscriptionUnsubscriptionMethods.get(method);
        if (!unsubscribeMethod) {
            throw new Error('Invalid unsubscribe method found');
        }
        this.__internal__resubscribeMethods.set(subscriptionId, {
            callback,
            method,
            params,
            type
        });
        this.__internal__subscriptions.set(subscriptionId, [
            cb,
            {
                id,
                unsubscribeMethod
            }
        ]);
        return id;
    }
    unsubscribe(type, method, id) {
        if (!this.isConnected) {
            throw new Error('Provider is not connected');
        }
        const subscriptionId = `${type}::${id}`;
        if (!this.__internal__subscriptions.has(subscriptionId)) {
            return Promise.reject(new Error(`Unable to find active subscription=${subscriptionId}`));
        }
        this.__internal__resubscribeMethods.delete(subscriptionId);
        this.__internal__subscriptions.delete(subscriptionId);
        return this.send(method, [
            id
        ]);
    }
}
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/ws/errors.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getWSErrorString": (()=>getWSErrorString)
});
const known = {
    1000: 'Normal Closure',
    1001: 'Going Away',
    1002: 'Protocol Error',
    1003: 'Unsupported Data',
    1004: '(For future)',
    1005: 'No Status Received',
    1006: 'Abnormal Closure',
    1007: 'Invalid frame payload data',
    1008: 'Policy Violation',
    1009: 'Message too big',
    1010: 'Missing Extension',
    1011: 'Internal Error',
    1012: 'Service Restart',
    1013: 'Try Again Later',
    1014: 'Bad Gateway',
    1015: 'TLS Handshake'
};
function getWSErrorString(code) {
    if (code >= 0 && code <= 999) {
        return '(Unused)';
    } else if (code >= 1016) {
        if (code <= 1999) {
            return '(For WebSocket standard)';
        } else if (code <= 2999) {
            return '(For WebSocket extensions)';
        } else if (code <= 3999) {
            return '(For libraries and frameworks)';
        } else if (code <= 4999) {
            return '(For applications)';
        }
    }
    return known[code] || '(Unknown)';
}
}}),
"[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/ws/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "WsProvider": (()=>WsProvider)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventemitter3$40$5$2e$0$2e$1$2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$defaults$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/defaults.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/lru.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventemitter3$40$5$2e$0$2e$1$2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__default__as__EventEmitter$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js [app-route] (ecmascript) <export default as EventEmitter>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/coder/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/noop.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+x-global@13.4.3/node_modules/@polkadot/x-global/index.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$childClass$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/childClass.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$ws$40$13$2e$4$2e$3_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$x$2d$ws$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+x-ws@13.4.3_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/x-ws/node.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/stringify.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/undefined.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/null.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$ws$2f$errors$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+rpc-provider@14.3.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/rpc-provider/ws/errors.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/object/spread.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/logger.js [app-route] (ecmascript)");
;
;
;
;
;
;
;
;
const ALIASES = {
    chain_finalisedHead: 'chain_finalizedHead',
    chain_subscribeFinalisedHeads: 'chain_subscribeFinalizedHeads',
    chain_unsubscribeFinalisedHeads: 'chain_unsubscribeFinalizedHeads'
};
const RETRY_DELAY = 2_500;
const DEFAULT_TIMEOUT_MS = 60 * 1000;
const TIMEOUT_INTERVAL = 5_000;
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["logger"])('api-ws');
/** @internal Clears a Record<*> of all keys, optionally with all callback on clear */ function eraseRecord(record, cb) {
    Object.keys(record).forEach((key)=>{
        if (cb) {
            cb(record[key]);
        }
        delete record[key];
    });
}
/** @internal Creates a default/empty stats object */ function defaultEndpointStats() {
    return {
        bytesRecv: 0,
        bytesSent: 0,
        cached: 0,
        errors: 0,
        requests: 0,
        subscriptions: 0,
        timeout: 0
    };
}
class WsProvider {
    __internal__callCache;
    __internal__coder;
    __internal__endpoints;
    __internal__headers;
    __internal__eventemitter;
    __internal__handlers = {};
    __internal__isReadyPromise;
    __internal__stats;
    __internal__waitingForId = {};
    __internal__cacheCapacity;
    __internal__autoConnectMs;
    __internal__endpointIndex;
    __internal__endpointStats;
    __internal__isConnected = false;
    __internal__subscriptions = {};
    __internal__timeoutId = null;
    __internal__websocket;
    __internal__timeout;
    /**
     * @param {string | string[]}  endpoint    The endpoint url. Usually `ws://ip:9944` or `wss://ip:9944`, may provide an array of endpoint strings.
     * @param {number | false} autoConnectMs Whether to connect automatically or not (default). Provided value is used as a delay between retries.
     * @param {Record<string, string>} headers The headers provided to the underlying WebSocket
     * @param {number} [timeout] Custom timeout value used per request . Defaults to `DEFAULT_TIMEOUT_MS`
     */ constructor(endpoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$defaults$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].WS_URL, autoConnectMs = RETRY_DELAY, headers = {}, timeout, cacheCapacity){
        const endpoints = Array.isArray(endpoint) ? endpoint : [
            endpoint
        ];
        if (endpoints.length === 0) {
            throw new Error('WsProvider requires at least one Endpoint');
        }
        endpoints.forEach((endpoint)=>{
            if (!/^(wss|ws):\/\//.test(endpoint)) {
                throw new Error(`Endpoint should start with 'ws://', received '${endpoint}'`);
            }
        });
        this.__internal__callCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LRUCache"](cacheCapacity || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_CAPACITY"]);
        this.__internal__cacheCapacity = cacheCapacity || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_CAPACITY"];
        this.__internal__eventemitter = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventemitter3$40$5$2e$0$2e$1$2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__default__as__EventEmitter$3e$__["EventEmitter"]();
        this.__internal__autoConnectMs = autoConnectMs || 0;
        this.__internal__coder = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["RpcCoder"]();
        this.__internal__endpointIndex = -1;
        this.__internal__endpoints = endpoints;
        this.__internal__headers = headers;
        this.__internal__websocket = null;
        this.__internal__stats = {
            active: {
                requests: 0,
                subscriptions: 0
            },
            total: defaultEndpointStats()
        };
        this.__internal__endpointStats = defaultEndpointStats();
        this.__internal__timeout = timeout || DEFAULT_TIMEOUT_MS;
        if (autoConnectMs && autoConnectMs > 0) {
            this.connectWithRetry().catch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["noop"]);
        }
        this.__internal__isReadyPromise = new Promise((resolve)=>{
            this.__internal__eventemitter.once('connected', ()=>{
                resolve(this);
            });
        });
    }
    /**
     * @summary `true` when this provider supports subscriptions
     */ get hasSubscriptions() {
        return !!true;
    }
    /**
     * @summary `true` when this provider supports clone()
     */ get isClonable() {
        return !!true;
    }
    /**
     * @summary Whether the node is connected or not.
     * @return {boolean} true if connected
     */ get isConnected() {
        return this.__internal__isConnected;
    }
    /**
     * @description Promise that resolves the first time we are connected and loaded
     */ get isReady() {
        return this.__internal__isReadyPromise;
    }
    get endpoint() {
        return this.__internal__endpoints[this.__internal__endpointIndex];
    }
    /**
     * @description Returns a clone of the object
     */ clone() {
        return new WsProvider(this.__internal__endpoints);
    }
    selectEndpointIndex(endpoints) {
        return (this.__internal__endpointIndex + 1) % endpoints.length;
    }
    /**
     * @summary Manually connect
     * @description The [[WsProvider]] connects automatically by default, however if you decided otherwise, you may
     * connect manually using this method.
     */ // eslint-disable-next-line @typescript-eslint/require-await
    async connect() {
        if (this.__internal__websocket) {
            throw new Error('WebSocket is already connected');
        }
        try {
            this.__internal__endpointIndex = this.selectEndpointIndex(this.__internal__endpoints);
            // the as here is Deno-specific - not available on the globalThis
            this.__internal__websocket = typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["xglobal"].WebSocket !== 'undefined' && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$childClass$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isChildClass"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["xglobal"].WebSocket, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$ws$40$13$2e$4$2e$3_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$x$2d$ws$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["WebSocket"]) ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$ws$40$13$2e$4$2e$3_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$x$2d$ws$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["WebSocket"](this.endpoint) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$ws$40$13$2e$4$2e$3_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$x$2d$ws$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["WebSocket"](this.endpoint, undefined, {
                headers: this.__internal__headers
            });
            if (this.__internal__websocket) {
                this.__internal__websocket.onclose = this.__internal__onSocketClose;
                this.__internal__websocket.onerror = this.__internal__onSocketError;
                this.__internal__websocket.onmessage = this.__internal__onSocketMessage;
                this.__internal__websocket.onopen = this.__internal__onSocketOpen;
            }
            // timeout any handlers that have not had a response
            this.__internal__timeoutId = setInterval(()=>this.__internal__timeoutHandlers(), TIMEOUT_INTERVAL);
        } catch (error) {
            l.error(error);
            this.__internal__emit('error', error);
            throw error;
        }
    }
    /**
     * @description Connect, never throwing an error, but rather forcing a retry
     */ async connectWithRetry() {
        if (this.__internal__autoConnectMs > 0) {
            try {
                await this.connect();
            } catch  {
                setTimeout(()=>{
                    this.connectWithRetry().catch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["noop"]);
                }, this.__internal__autoConnectMs);
            }
        }
    }
    /**
     * @description Manually disconnect from the connection, clearing auto-connect logic
     */ // eslint-disable-next-line @typescript-eslint/require-await
    async disconnect() {
        // switch off autoConnect, we are in manual mode now
        this.__internal__autoConnectMs = 0;
        try {
            if (this.__internal__websocket) {
                // 1000 - Normal closure; the connection successfully completed
                this.__internal__websocket.close(1000);
            }
        } catch (error) {
            l.error(error);
            this.__internal__emit('error', error);
            throw error;
        }
    }
    /**
     * @description Returns the connection stats
     */ get stats() {
        return {
            active: {
                requests: Object.keys(this.__internal__handlers).length,
                subscriptions: Object.keys(this.__internal__subscriptions).length
            },
            total: this.__internal__stats.total
        };
    }
    get endpointStats() {
        return this.__internal__endpointStats;
    }
    /**
     * @summary Listens on events after having subscribed using the [[subscribe]] function.
     * @param  {ProviderInterfaceEmitted} type Event
     * @param  {ProviderInterfaceEmitCb}  sub  Callback
     * @return unsubscribe function
     */ on(type, sub) {
        this.__internal__eventemitter.on(type, sub);
        return ()=>{
            this.__internal__eventemitter.removeListener(type, sub);
        };
    }
    /**
     * @summary Send JSON data using WebSockets to configured HTTP Endpoint or queue.
     * @param method The RPC methods to execute
     * @param params Encoded parameters as applicable for the method
     * @param subscription Subscription details (internally used)
     */ send(method, params, isCacheable, subscription) {
        this.__internal__endpointStats.requests++;
        this.__internal__stats.total.requests++;
        const [id, body] = this.__internal__coder.encodeJson(method, params);
        if (this.__internal__cacheCapacity === 0) {
            return this.__internal__send(id, body, method, params, subscription);
        }
        const cacheKey = isCacheable ? `${method}::${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(params)}` : '';
        let resultPromise = isCacheable ? this.__internal__callCache.get(cacheKey) : null;
        if (!resultPromise) {
            resultPromise = this.__internal__send(id, body, method, params, subscription);
            if (isCacheable) {
                this.__internal__callCache.set(cacheKey, resultPromise);
            }
        } else {
            this.__internal__endpointStats.cached++;
            this.__internal__stats.total.cached++;
        }
        return resultPromise;
    }
    async __internal__send(id, body, method, params, subscription) {
        return new Promise((resolve, reject)=>{
            try {
                if (!this.isConnected || this.__internal__websocket === null) {
                    throw new Error('WebSocket is not connected');
                }
                const callback = (error, result)=>{
                    error ? reject(error) : resolve(result);
                };
                l.debug(()=>[
                        'calling',
                        method,
                        body
                    ]);
                this.__internal__handlers[id] = {
                    callback,
                    method,
                    params,
                    start: Date.now(),
                    subscription
                };
                const bytesSent = body.length;
                this.__internal__endpointStats.bytesSent += bytesSent;
                this.__internal__stats.total.bytesSent += bytesSent;
                this.__internal__websocket.send(body);
            } catch (error) {
                this.__internal__endpointStats.errors++;
                this.__internal__stats.total.errors++;
                reject(error);
            }
        });
    }
    /**
     * @name subscribe
     * @summary Allows subscribing to a specific event.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * const provider = new WsProvider('ws://127.0.0.1:9944');
     * const rpc = new Rpc(provider);
     *
     * rpc.state.subscribeStorage([[storage.system.account, <Address>]], (_, values) => {
     *   console.log(values)
     * }).then((subscriptionId) => {
     *   console.log('balance changes subscription id: ', subscriptionId)
     * })
     * ```
     */ subscribe(type, method, params, callback) {
        this.__internal__endpointStats.subscriptions++;
        this.__internal__stats.total.subscriptions++;
        // subscriptions are not cached, LRU applies to .at(<blockHash>) only
        return this.send(method, params, false, {
            callback,
            type
        });
    }
    /**
     * @summary Allows unsubscribing to subscriptions made with [[subscribe]].
     */ async unsubscribe(type, method, id) {
        const subscription = `${type}::${id}`;
        // FIXME This now could happen with re-subscriptions. The issue is that with a re-sub
        // the assigned id now does not match what the API user originally received. It has
        // a slight complication in solving - since we cannot rely on the send id, but rather
        // need to find the actual subscription id to map it
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isUndefined"])(this.__internal__subscriptions[subscription])) {
            l.debug(()=>`Unable to find active subscription=${subscription}`);
            return false;
        }
        delete this.__internal__subscriptions[subscription];
        try {
            return this.isConnected && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isNull"])(this.__internal__websocket) ? this.send(method, [
                id
            ]) : true;
        } catch  {
            return false;
        }
    }
    __internal__emit = (type, ...args)=>{
        this.__internal__eventemitter.emit(type, ...args);
    };
    __internal__onSocketClose = (event)=>{
        const error = new Error(`disconnected from ${this.endpoint}: ${event.code}:: ${event.reason || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$rpc$2d$provider$40$14$2e$3$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$ws$2f$errors$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getWSErrorString"])(event.code)}`);
        if (this.__internal__autoConnectMs > 0) {
            l.error(error.message);
        }
        this.__internal__isConnected = false;
        if (this.__internal__websocket) {
            this.__internal__websocket.onclose = null;
            this.__internal__websocket.onerror = null;
            this.__internal__websocket.onmessage = null;
            this.__internal__websocket.onopen = null;
            this.__internal__websocket = null;
        }
        if (this.__internal__timeoutId) {
            clearInterval(this.__internal__timeoutId);
            this.__internal__timeoutId = null;
        }
        // reject all hanging requests
        eraseRecord(this.__internal__handlers, (h)=>{
            try {
                h.callback(error, undefined);
            } catch (err) {
                // does not throw
                l.error(err);
            }
        });
        eraseRecord(this.__internal__waitingForId);
        // Reset stats for active endpoint
        this.__internal__endpointStats = defaultEndpointStats();
        this.__internal__emit('disconnected');
        if (this.__internal__autoConnectMs > 0) {
            setTimeout(()=>{
                this.connectWithRetry().catch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["noop"]);
            }, this.__internal__autoConnectMs);
        }
    };
    __internal__onSocketError = (error)=>{
        l.debug(()=>[
                'socket error',
                error
            ]);
        this.__internal__emit('error', error);
    };
    __internal__onSocketMessage = (message)=>{
        l.debug(()=>[
                'received',
                message.data
            ]);
        const bytesRecv = message.data.length;
        this.__internal__endpointStats.bytesRecv += bytesRecv;
        this.__internal__stats.total.bytesRecv += bytesRecv;
        const response = JSON.parse(message.data);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isUndefined"])(response.method) ? this.__internal__onSocketMessageResult(response) : this.__internal__onSocketMessageSubscribe(response);
    };
    __internal__onSocketMessageResult = (response)=>{
        const handler = this.__internal__handlers[response.id];
        if (!handler) {
            l.debug(()=>`Unable to find handler for id=${response.id}`);
            return;
        }
        try {
            const { method, params, subscription } = handler;
            const result = this.__internal__coder.decodeResponse(response);
            // first send the result - in case of subs, we may have an update
            // immediately if we have some queued results already
            handler.callback(null, result);
            if (subscription) {
                const subId = `${subscription.type}::${result}`;
                this.__internal__subscriptions[subId] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["objectSpread"])({}, subscription, {
                    method,
                    params
                });
                // if we have a result waiting for this subscription already
                if (this.__internal__waitingForId[subId]) {
                    this.__internal__onSocketMessageSubscribe(this.__internal__waitingForId[subId]);
                }
            }
        } catch (error) {
            this.__internal__endpointStats.errors++;
            this.__internal__stats.total.errors++;
            handler.callback(error, undefined);
        }
        delete this.__internal__handlers[response.id];
    };
    __internal__onSocketMessageSubscribe = (response)=>{
        if (!response.method) {
            throw new Error('No method found in JSONRPC response');
        }
        const method = ALIASES[response.method] || response.method;
        const subId = `${method}::${response.params.subscription}`;
        const handler = this.__internal__subscriptions[subId];
        if (!handler) {
            // store the JSON, we could have out-of-order subid coming in
            this.__internal__waitingForId[subId] = response;
            l.debug(()=>`Unable to find handler for subscription=${subId}`);
            return;
        }
        // housekeeping
        delete this.__internal__waitingForId[subId];
        try {
            const result = this.__internal__coder.decodeResponse(response);
            handler.callback(null, result);
        } catch (error) {
            this.__internal__endpointStats.errors++;
            this.__internal__stats.total.errors++;
            handler.callback(error, undefined);
        }
    };
    __internal__onSocketOpen = ()=>{
        if (this.__internal__websocket === null) {
            throw new Error('WebSocket cannot be null in onOpen');
        }
        l.debug(()=>[
                'connected to',
                this.endpoint
            ]);
        this.__internal__isConnected = true;
        this.__internal__resubscribe();
        this.__internal__emit('connected');
        return true;
    };
    __internal__resubscribe = ()=>{
        const subscriptions = this.__internal__subscriptions;
        this.__internal__subscriptions = {};
        Promise.all(Object.keys(subscriptions).map(async (id)=>{
            const { callback, method, params, type } = subscriptions[id];
            // only re-create subscriptions which are not in author (only area where
            // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'
            // are not included (and will not be re-broadcast)
            if (type.startsWith('author_')) {
                return;
            }
            try {
                await this.subscribe(type, method, params, callback);
            } catch (error) {
                l.error(error);
            }
        })).catch(l.error);
    };
    __internal__timeoutHandlers = ()=>{
        const now = Date.now();
        const ids = Object.keys(this.__internal__handlers);
        for(let i = 0, count = ids.length; i < count; i++){
            const handler = this.__internal__handlers[ids[i]];
            if (now - handler.start > this.__internal__timeout) {
                try {
                    handler.callback(new Error(`No response received from RPC endpoint in ${this.__internal__timeout / 1000}s`), undefined);
                } catch  {
                // ignore
                }
                this.__internal__endpointStats.timeout++;
                this.__internal__stats.total.timeout++;
                delete this.__internal__handlers[ids[i]];
            }
        }
    };
}
}}),
"[project]/node_modules/.pnpm/@polkadot+x-fetch@13.4.3/node_modules/@polkadot/x-fetch/node.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "fetch": (()=>fetch)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+x-global@13.4.3/node_modules/@polkadot/x-global/index.js [app-route] (ecmascript) <locals>");
;
;
const importFetch = __turbopack_require__("[project]/node_modules/.pnpm/node-fetch@3.3.2/node_modules/node-fetch/src/index.js [app-route] (ecmascript, async loader)")(__turbopack_import__).catch(()=>null);
let modFn = null;
async function nodeFetch(...args) {
    if (!modFn) {
        const mod = await importFetch;
        if (!mod?.default) {
            throw new Error('Unable to import node-fetch in this environment');
        }
        modFn = mod.default;
    }
    return modFn(...args);
}
const fetch = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["extractGlobal"])('fetch', nodeFetch);
}}),
"[project]/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var has = Object.prototype.hasOwnProperty, prefix = '~';
/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */ function Events() {}
//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
    Events.prototype = Object.create(null);
    //
    // This hack is needed because the `__proto__` property is still inherited in
    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
    //
    if (!new Events().__proto__) prefix = false;
}
/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */ function EE(fn, context, once) {
    this.fn = fn;
    this.context = context;
    this.once = once || false;
}
/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */ function addListener(emitter, event, fn, context, once) {
    if (typeof fn !== 'function') {
        throw new TypeError('The listener must be a function');
    }
    var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;
    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
    else emitter._events[evt] = [
        emitter._events[evt],
        listener
    ];
    return emitter;
}
/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */ function clearEvent(emitter, evt) {
    if (--emitter._eventsCount === 0) emitter._events = new Events();
    else delete emitter._events[evt];
}
/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */ function EventEmitter() {
    this._events = new Events();
    this._eventsCount = 0;
}
/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */ EventEmitter.prototype.eventNames = function eventNames() {
    var names = [], events, name;
    if (this._eventsCount === 0) return names;
    for(name in events = this._events){
        if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
    }
    if (Object.getOwnPropertySymbols) {
        return names.concat(Object.getOwnPropertySymbols(events));
    }
    return names;
};
/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */ EventEmitter.prototype.listeners = function listeners(event) {
    var evt = prefix ? prefix + event : event, handlers = this._events[evt];
    if (!handlers) return [];
    if (handlers.fn) return [
        handlers.fn
    ];
    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++){
        ee[i] = handlers[i].fn;
    }
    return ee;
};
/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */ EventEmitter.prototype.listenerCount = function listenerCount(event) {
    var evt = prefix ? prefix + event : event, listeners = this._events[evt];
    if (!listeners) return 0;
    if (listeners.fn) return 1;
    return listeners.length;
};
/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */ EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt]) return false;
    var listeners = this._events[evt], len = arguments.length, args, i;
    if (listeners.fn) {
        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);
        switch(len){
            case 1:
                return listeners.fn.call(listeners.context), true;
            case 2:
                return listeners.fn.call(listeners.context, a1), true;
            case 3:
                return listeners.fn.call(listeners.context, a1, a2), true;
            case 4:
                return listeners.fn.call(listeners.context, a1, a2, a3), true;
            case 5:
                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
            case 6:
                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
        }
        for(i = 1, args = new Array(len - 1); i < len; i++){
            args[i - 1] = arguments[i];
        }
        listeners.fn.apply(listeners.context, args);
    } else {
        var length = listeners.length, j;
        for(i = 0; i < length; i++){
            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);
            switch(len){
                case 1:
                    listeners[i].fn.call(listeners[i].context);
                    break;
                case 2:
                    listeners[i].fn.call(listeners[i].context, a1);
                    break;
                case 3:
                    listeners[i].fn.call(listeners[i].context, a1, a2);
                    break;
                case 4:
                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                    break;
                default:
                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++){
                        args[j - 1] = arguments[j];
                    }
                    listeners[i].fn.apply(listeners[i].context, args);
            }
        }
    }
    return true;
};
/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.on = function on(event, fn, context) {
    return addListener(this, event, fn, context, false);
};
/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.once = function once(event, fn, context) {
    return addListener(this, event, fn, context, true);
};
/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt]) return this;
    if (!fn) {
        clearEvent(this, evt);
        return this;
    }
    var listeners = this._events[evt];
    if (listeners.fn) {
        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
            clearEvent(this, evt);
        }
    } else {
        for(var i = 0, events = [], length = listeners.length; i < length; i++){
            if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
                events.push(listeners[i]);
            }
        }
        //
        // Reset the array, or remove it completely if we have no more listeners.
        //
        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
        else clearEvent(this, evt);
    }
    return this;
};
/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
    var evt;
    if (event) {
        evt = prefix ? prefix + event : event;
        if (this._events[evt]) clearEvent(this, evt);
    } else {
        this._events = new Events();
        this._eventsCount = 0;
    }
    return this;
};
//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;
//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;
//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;
//
// Expose the module.
//
if ("TURBOPACK compile-time truthy", 1) {
    module.exports = EventEmitter;
}
}}),
"[project]/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventemitter3$40$5$2e$0$2e$1$2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js [app-route] (ecmascript)");
;
;
const __TURBOPACK__default__export__ = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventemitter3$40$5$2e$0$2e$1$2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"];
}}),
"[project]/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventemitter3$40$5$2e$0$2e$1$2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventemitter3$40$5$2e$0$2e$1$2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js [app-route] (ecmascript) <export default as EventEmitter>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "EventEmitter": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventemitter3$40$5$2e$0$2e$1$2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$eventemitter3$40$5$2e$0$2e$1$2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js [app-route] (ecmascript)");
}}),
"[project]/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/node-gyp-build.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var fs = __turbopack_require__("[externals]/fs [external] (fs, cjs)");
var path = __turbopack_require__("[externals]/path [external] (path, cjs)");
var os = __turbopack_require__("[externals]/os [external] (os, cjs)");
// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'
var runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : ("TURBOPACK ident replacement", __turbopack_require_real__) // eslint-disable-line
;
var vars = process.config && process.config.variables || {};
var prebuildsOnly = !!process.env.PREBUILDS_ONLY;
var abi = process.versions.modules // TODO: support old node where this is undef
;
var runtime = isElectron() ? 'electron' : isNwjs() ? 'node-webkit' : 'node';
var arch = process.env.npm_config_arch || os.arch();
var platform = process.env.npm_config_platform || os.platform();
var libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc');
var armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || '';
var uv = (process.versions.uv || '').split('.')[0];
module.exports = load;
function load(dir) {
    return runtimeRequire(load.resolve(dir));
}
load.resolve = load.path = function(dir) {
    dir = path.resolve(dir || '.');
    try {
        var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_');
        if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD'];
    } catch (err) {}
    if (!prebuildsOnly) {
        var release = getFirst(path.join(dir, 'build/Release'), matchBuild);
        if (release) return release;
        var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild);
        if (debug) return debug;
    }
    var prebuild = resolve(dir);
    if (prebuild) return prebuild;
    var nearby = resolve(path.dirname(process.execPath));
    if (nearby) return nearby;
    var target = [
        'platform=' + platform,
        'arch=' + arch,
        'runtime=' + runtime,
        'abi=' + abi,
        'uv=' + uv,
        armv ? 'armv=' + armv : '',
        'libc=' + libc,
        'node=' + process.versions.node,
        process.versions.electron ? 'electron=' + process.versions.electron : '',
        typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line
    ].filter(Boolean).join(' ');
    throw new Error('No native build was found for ' + target + '\n    loaded from: ' + dir + '\n');
    function resolve(dir) {
        // Find matching "prebuilds/<platform>-<arch>" directory
        var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple);
        var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0];
        if (!tuple) return;
        // Find most specific flavor first
        var prebuilds = path.join(dir, 'prebuilds', tuple.name);
        var parsed = readdirSync(prebuilds).map(parseTags);
        var candidates = parsed.filter(matchTags(runtime, abi));
        var winner = candidates.sort(compareTags(runtime))[0];
        if (winner) return path.join(prebuilds, winner.file);
    }
};
function readdirSync(dir) {
    try {
        return fs.readdirSync(dir);
    } catch (err) {
        return [];
    }
}
function getFirst(dir, filter) {
    var files = readdirSync(dir).filter(filter);
    return files[0] && path.join(dir, files[0]);
}
function matchBuild(name) {
    return /\.node$/.test(name);
}
function parseTuple(name) {
    // Example: darwin-x64+arm64
    var arr = name.split('-');
    if (arr.length !== 2) return;
    var platform = arr[0];
    var architectures = arr[1].split('+');
    if (!platform) return;
    if (!architectures.length) return;
    if (!architectures.every(Boolean)) return;
    return {
        name,
        platform,
        architectures
    };
}
function matchTuple(platform, arch) {
    return function(tuple) {
        if (tuple == null) return false;
        if (tuple.platform !== platform) return false;
        return tuple.architectures.includes(arch);
    };
}
function compareTuples(a, b) {
    // Prefer single-arch prebuilds over multi-arch
    return a.architectures.length - b.architectures.length;
}
function parseTags(file) {
    var arr = file.split('.');
    var extension = arr.pop();
    var tags = {
        file: file,
        specificity: 0
    };
    if (extension !== 'node') return;
    for(var i = 0; i < arr.length; i++){
        var tag = arr[i];
        if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {
            tags.runtime = tag;
        } else if (tag === 'napi') {
            tags.napi = true;
        } else if (tag.slice(0, 3) === 'abi') {
            tags.abi = tag.slice(3);
        } else if (tag.slice(0, 2) === 'uv') {
            tags.uv = tag.slice(2);
        } else if (tag.slice(0, 4) === 'armv') {
            tags.armv = tag.slice(4);
        } else if (tag === 'glibc' || tag === 'musl') {
            tags.libc = tag;
        } else {
            continue;
        }
        tags.specificity++;
    }
    return tags;
}
function matchTags(runtime, abi) {
    return function(tags) {
        if (tags == null) return false;
        if (tags.runtime && tags.runtime !== runtime && !runtimeAgnostic(tags)) return false;
        if (tags.abi && tags.abi !== abi && !tags.napi) return false;
        if (tags.uv && tags.uv !== uv) return false;
        if (tags.armv && tags.armv !== armv) return false;
        if (tags.libc && tags.libc !== libc) return false;
        return true;
    };
}
function runtimeAgnostic(tags) {
    return tags.runtime === 'node' && tags.napi;
}
function compareTags(runtime) {
    // Precedence: non-agnostic runtime, abi over napi, then by specificity.
    return function(a, b) {
        if (a.runtime !== b.runtime) {
            return a.runtime === runtime ? -1 : 1;
        } else if (a.abi !== b.abi) {
            return a.abi ? -1 : 1;
        } else if (a.specificity !== b.specificity) {
            return a.specificity > b.specificity ? -1 : 1;
        } else {
            return 0;
        }
    };
}
function isNwjs() {
    return !!(process.versions && process.versions.nw);
}
function isElectron() {
    if (process.versions && process.versions.electron) return true;
    if (process.env.ELECTRON_RUN_AS_NODE) return true;
    return "undefined" !== 'undefined' && window.process && window.process.type === 'renderer';
}
function isAlpine(platform) {
    return platform === 'linux' && fs.existsSync('/etc/alpine-release');
}
// Exposed for unit tests
// TODO: move to lib
load.parseTags = parseTags;
load.matchTags = matchTags;
load.compareTags = compareTags;
load.parseTuple = parseTuple;
load.matchTuple = matchTuple;
load.compareTuples = compareTuples;
}}),
"[project]/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
const runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : ("TURBOPACK ident replacement", __turbopack_require_real__) // eslint-disable-line
;
if (typeof runtimeRequire.addon === 'function') {
    module.exports = runtimeRequire.addon.bind(runtimeRequire);
} else {
    module.exports = __turbopack_require__("[project]/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/node-gyp-build.js [app-route] (ecmascript)");
}
}}),
"[project]/node_modules/.pnpm/bufferutil@4.0.9/node_modules/bufferutil/fallback.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/**
 * Masks a buffer using the given mask.
 *
 * @param {Buffer} source The buffer to mask
 * @param {Buffer} mask The mask to use
 * @param {Buffer} output The buffer where to store the result
 * @param {Number} offset The offset at which to start writing
 * @param {Number} length The number of bytes to mask.
 * @public
 */ const mask = (source, mask, output, offset, length)=>{
    for(var i = 0; i < length; i++){
        output[offset + i] = source[i] ^ mask[i & 3];
    }
};
/**
 * Unmasks a buffer using the given mask.
 *
 * @param {Buffer} buffer The buffer to unmask
 * @param {Buffer} mask The mask to use
 * @public
 */ const unmask = (buffer, mask)=>{
    // Required until https://github.com/nodejs/node/issues/9006 is resolved.
    const length = buffer.length;
    for(var i = 0; i < length; i++){
        buffer[i] ^= mask[i & 3];
    }
};
module.exports = {
    mask,
    unmask
};
}}),
"[project]/node_modules/.pnpm/bufferutil@4.0.9/node_modules/bufferutil/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
try {
    module.exports = __turbopack_require__("[project]/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/index.js [app-route] (ecmascript)")(__dirname);
} catch (e) {
    module.exports = __turbopack_require__("[project]/node_modules/.pnpm/bufferutil@4.0.9/node_modules/bufferutil/fallback.js [app-route] (ecmascript)");
}
}}),
"[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/constants.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
const BINARY_TYPES = [
    'nodebuffer',
    'arraybuffer',
    'fragments'
];
const hasBlob = typeof Blob !== 'undefined';
if (hasBlob) BINARY_TYPES.push('blob');
module.exports = {
    BINARY_TYPES,
    EMPTY_BUFFER: Buffer.alloc(0),
    GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',
    hasBlob,
    kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),
    kListener: Symbol('kListener'),
    kStatusCode: Symbol('status-code'),
    kWebSocket: Symbol('websocket'),
    NOOP: ()=>{}
};
}}),
"[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/buffer-util.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
const { EMPTY_BUFFER } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/constants.js [app-route] (ecmascript)");
const FastBuffer = Buffer[Symbol.species];
/**
 * Merges an array of buffers into a new buffer.
 *
 * @param {Buffer[]} list The array of buffers to concat
 * @param {Number} totalLength The total length of buffers in the list
 * @return {Buffer} The resulting buffer
 * @public
 */ function concat(list, totalLength) {
    if (list.length === 0) return EMPTY_BUFFER;
    if (list.length === 1) return list[0];
    const target = Buffer.allocUnsafe(totalLength);
    let offset = 0;
    for(let i = 0; i < list.length; i++){
        const buf = list[i];
        target.set(buf, offset);
        offset += buf.length;
    }
    if (offset < totalLength) {
        return new FastBuffer(target.buffer, target.byteOffset, offset);
    }
    return target;
}
/**
 * Masks a buffer using the given mask.
 *
 * @param {Buffer} source The buffer to mask
 * @param {Buffer} mask The mask to use
 * @param {Buffer} output The buffer where to store the result
 * @param {Number} offset The offset at which to start writing
 * @param {Number} length The number of bytes to mask.
 * @public
 */ function _mask(source, mask, output, offset, length) {
    for(let i = 0; i < length; i++){
        output[offset + i] = source[i] ^ mask[i & 3];
    }
}
/**
 * Unmasks a buffer using the given mask.
 *
 * @param {Buffer} buffer The buffer to unmask
 * @param {Buffer} mask The mask to use
 * @public
 */ function _unmask(buffer, mask) {
    for(let i = 0; i < buffer.length; i++){
        buffer[i] ^= mask[i & 3];
    }
}
/**
 * Converts a buffer to an `ArrayBuffer`.
 *
 * @param {Buffer} buf The buffer to convert
 * @return {ArrayBuffer} Converted buffer
 * @public
 */ function toArrayBuffer(buf) {
    if (buf.length === buf.buffer.byteLength) {
        return buf.buffer;
    }
    return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);
}
/**
 * Converts `data` to a `Buffer`.
 *
 * @param {*} data The data to convert
 * @return {Buffer} The buffer
 * @throws {TypeError}
 * @public
 */ function toBuffer(data) {
    toBuffer.readOnly = true;
    if (Buffer.isBuffer(data)) return data;
    let buf;
    if (data instanceof ArrayBuffer) {
        buf = new FastBuffer(data);
    } else if (ArrayBuffer.isView(data)) {
        buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);
    } else {
        buf = Buffer.from(data);
        toBuffer.readOnly = false;
    }
    return buf;
}
module.exports = {
    concat,
    mask: _mask,
    toArrayBuffer,
    toBuffer,
    unmask: _unmask
};
/* istanbul ignore else  */ if (!process.env.WS_NO_BUFFER_UTIL) {
    try {
        const bufferUtil = __turbopack_require__("[project]/node_modules/.pnpm/bufferutil@4.0.9/node_modules/bufferutil/index.js [app-route] (ecmascript)");
        module.exports.mask = function(source, mask, output, offset, length) {
            if (length < 48) _mask(source, mask, output, offset, length);
            else bufferUtil.mask(source, mask, output, offset, length);
        };
        module.exports.unmask = function(buffer, mask) {
            if (buffer.length < 32) _unmask(buffer, mask);
            else bufferUtil.unmask(buffer, mask);
        };
    } catch (e) {
    // Continue regardless of the error.
    }
}
}}),
"[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/limiter.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
const kDone = Symbol('kDone');
const kRun = Symbol('kRun');
/**
 * A very simple job queue with adjustable concurrency. Adapted from
 * https://github.com/STRML/async-limiter
 */ class Limiter {
    /**
   * Creates a new `Limiter`.
   *
   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed
   *     to run concurrently
   */ constructor(concurrency){
        this[kDone] = ()=>{
            this.pending--;
            this[kRun]();
        };
        this.concurrency = concurrency || Infinity;
        this.jobs = [];
        this.pending = 0;
    }
    /**
   * Adds a job to the queue.
   *
   * @param {Function} job The job to run
   * @public
   */ add(job) {
        this.jobs.push(job);
        this[kRun]();
    }
    /**
   * Removes a job from the queue and runs it if possible.
   *
   * @private
   */ [kRun]() {
        if (this.pending === this.concurrency) return;
        if (this.jobs.length) {
            const job = this.jobs.shift();
            this.pending++;
            job(this[kDone]);
        }
    }
}
module.exports = Limiter;
}}),
"[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/permessage-deflate.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
const zlib = __turbopack_require__("[externals]/zlib [external] (zlib, cjs)");
const bufferUtil = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/buffer-util.js [app-route] (ecmascript)");
const Limiter = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/limiter.js [app-route] (ecmascript)");
const { kStatusCode } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/constants.js [app-route] (ecmascript)");
const FastBuffer = Buffer[Symbol.species];
const TRAILER = Buffer.from([
    0x00,
    0x00,
    0xff,
    0xff
]);
const kPerMessageDeflate = Symbol('permessage-deflate');
const kTotalLength = Symbol('total-length');
const kCallback = Symbol('callback');
const kBuffers = Symbol('buffers');
const kError = Symbol('error');
//
// We limit zlib concurrency, which prevents severe memory fragmentation
// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913
// and https://github.com/websockets/ws/issues/1202
//
// Intentionally global; it's the global thread pool that's an issue.
//
let zlibLimiter;
/**
 * permessage-deflate implementation.
 */ class PerMessageDeflate {
    /**
   * Creates a PerMessageDeflate instance.
   *
   * @param {Object} [options] Configuration options
   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support
   *     for, or request, a custom client window size
   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/
   *     acknowledge disabling of client context takeover
   * @param {Number} [options.concurrencyLimit=10] The number of concurrent
   *     calls to zlib
   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the
   *     use of a custom server window size
   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept
   *     disabling of server context takeover
   * @param {Number} [options.threshold=1024] Size (in bytes) below which
   *     messages should not be compressed if context takeover is disabled
   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on
   *     deflate
   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on
   *     inflate
   * @param {Boolean} [isServer=false] Create the instance in either server or
   *     client mode
   * @param {Number} [maxPayload=0] The maximum allowed message length
   */ constructor(options, isServer, maxPayload){
        this._maxPayload = maxPayload | 0;
        this._options = options || {};
        this._threshold = this._options.threshold !== undefined ? this._options.threshold : 1024;
        this._isServer = !!isServer;
        this._deflate = null;
        this._inflate = null;
        this.params = null;
        if (!zlibLimiter) {
            const concurrency = this._options.concurrencyLimit !== undefined ? this._options.concurrencyLimit : 10;
            zlibLimiter = new Limiter(concurrency);
        }
    }
    /**
   * @type {String}
   */ static get extensionName() {
        return 'permessage-deflate';
    }
    /**
   * Create an extension negotiation offer.
   *
   * @return {Object} Extension parameters
   * @public
   */ offer() {
        const params = {};
        if (this._options.serverNoContextTakeover) {
            params.server_no_context_takeover = true;
        }
        if (this._options.clientNoContextTakeover) {
            params.client_no_context_takeover = true;
        }
        if (this._options.serverMaxWindowBits) {
            params.server_max_window_bits = this._options.serverMaxWindowBits;
        }
        if (this._options.clientMaxWindowBits) {
            params.client_max_window_bits = this._options.clientMaxWindowBits;
        } else if (this._options.clientMaxWindowBits == null) {
            params.client_max_window_bits = true;
        }
        return params;
    }
    /**
   * Accept an extension negotiation offer/response.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Object} Accepted configuration
   * @public
   */ accept(configurations) {
        configurations = this.normalizeParams(configurations);
        this.params = this._isServer ? this.acceptAsServer(configurations) : this.acceptAsClient(configurations);
        return this.params;
    }
    /**
   * Releases all resources used by the extension.
   *
   * @public
   */ cleanup() {
        if (this._inflate) {
            this._inflate.close();
            this._inflate = null;
        }
        if (this._deflate) {
            const callback = this._deflate[kCallback];
            this._deflate.close();
            this._deflate = null;
            if (callback) {
                callback(new Error('The deflate stream was closed while data was being processed'));
            }
        }
    }
    /**
   *  Accept an extension negotiation offer.
   *
   * @param {Array} offers The extension negotiation offers
   * @return {Object} Accepted configuration
   * @private
   */ acceptAsServer(offers) {
        const opts = this._options;
        const accepted = offers.find((params)=>{
            if (opts.serverNoContextTakeover === false && params.server_no_context_takeover || params.server_max_window_bits && (opts.serverMaxWindowBits === false || typeof opts.serverMaxWindowBits === 'number' && opts.serverMaxWindowBits > params.server_max_window_bits) || typeof opts.clientMaxWindowBits === 'number' && !params.client_max_window_bits) {
                return false;
            }
            return true;
        });
        if (!accepted) {
            throw new Error('None of the extension offers can be accepted');
        }
        if (opts.serverNoContextTakeover) {
            accepted.server_no_context_takeover = true;
        }
        if (opts.clientNoContextTakeover) {
            accepted.client_no_context_takeover = true;
        }
        if (typeof opts.serverMaxWindowBits === 'number') {
            accepted.server_max_window_bits = opts.serverMaxWindowBits;
        }
        if (typeof opts.clientMaxWindowBits === 'number') {
            accepted.client_max_window_bits = opts.clientMaxWindowBits;
        } else if (accepted.client_max_window_bits === true || opts.clientMaxWindowBits === false) {
            delete accepted.client_max_window_bits;
        }
        return accepted;
    }
    /**
   * Accept the extension negotiation response.
   *
   * @param {Array} response The extension negotiation response
   * @return {Object} Accepted configuration
   * @private
   */ acceptAsClient(response) {
        const params = response[0];
        if (this._options.clientNoContextTakeover === false && params.client_no_context_takeover) {
            throw new Error('Unexpected parameter "client_no_context_takeover"');
        }
        if (!params.client_max_window_bits) {
            if (typeof this._options.clientMaxWindowBits === 'number') {
                params.client_max_window_bits = this._options.clientMaxWindowBits;
            }
        } else if (this._options.clientMaxWindowBits === false || typeof this._options.clientMaxWindowBits === 'number' && params.client_max_window_bits > this._options.clientMaxWindowBits) {
            throw new Error('Unexpected or invalid parameter "client_max_window_bits"');
        }
        return params;
    }
    /**
   * Normalize parameters.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Array} The offers/response with normalized parameters
   * @private
   */ normalizeParams(configurations) {
        configurations.forEach((params)=>{
            Object.keys(params).forEach((key)=>{
                let value = params[key];
                if (value.length > 1) {
                    throw new Error(`Parameter "${key}" must have only a single value`);
                }
                value = value[0];
                if (key === 'client_max_window_bits') {
                    if (value !== true) {
                        const num = +value;
                        if (!Number.isInteger(num) || num < 8 || num > 15) {
                            throw new TypeError(`Invalid value for parameter "${key}": ${value}`);
                        }
                        value = num;
                    } else if (!this._isServer) {
                        throw new TypeError(`Invalid value for parameter "${key}": ${value}`);
                    }
                } else if (key === 'server_max_window_bits') {
                    const num = +value;
                    if (!Number.isInteger(num) || num < 8 || num > 15) {
                        throw new TypeError(`Invalid value for parameter "${key}": ${value}`);
                    }
                    value = num;
                } else if (key === 'client_no_context_takeover' || key === 'server_no_context_takeover') {
                    if (value !== true) {
                        throw new TypeError(`Invalid value for parameter "${key}": ${value}`);
                    }
                } else {
                    throw new Error(`Unknown parameter "${key}"`);
                }
                params[key] = value;
            });
        });
        return configurations;
    }
    /**
   * Decompress data. Concurrency limited.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */ decompress(data, fin, callback) {
        zlibLimiter.add((done)=>{
            this._decompress(data, fin, (err, result)=>{
                done();
                callback(err, result);
            });
        });
    }
    /**
   * Compress data. Concurrency limited.
   *
   * @param {(Buffer|String)} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */ compress(data, fin, callback) {
        zlibLimiter.add((done)=>{
            this._compress(data, fin, (err, result)=>{
                done();
                callback(err, result);
            });
        });
    }
    /**
   * Decompress data.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */ _decompress(data, fin, callback) {
        const endpoint = this._isServer ? 'client' : 'server';
        if (!this._inflate) {
            const key = `${endpoint}_max_window_bits`;
            const windowBits = typeof this.params[key] !== 'number' ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];
            this._inflate = zlib.createInflateRaw({
                ...this._options.zlibInflateOptions,
                windowBits
            });
            this._inflate[kPerMessageDeflate] = this;
            this._inflate[kTotalLength] = 0;
            this._inflate[kBuffers] = [];
            this._inflate.on('error', inflateOnError);
            this._inflate.on('data', inflateOnData);
        }
        this._inflate[kCallback] = callback;
        this._inflate.write(data);
        if (fin) this._inflate.write(TRAILER);
        this._inflate.flush(()=>{
            const err = this._inflate[kError];
            if (err) {
                this._inflate.close();
                this._inflate = null;
                callback(err);
                return;
            }
            const data = bufferUtil.concat(this._inflate[kBuffers], this._inflate[kTotalLength]);
            if (this._inflate._readableState.endEmitted) {
                this._inflate.close();
                this._inflate = null;
            } else {
                this._inflate[kTotalLength] = 0;
                this._inflate[kBuffers] = [];
                if (fin && this.params[`${endpoint}_no_context_takeover`]) {
                    this._inflate.reset();
                }
            }
            callback(null, data);
        });
    }
    /**
   * Compress data.
   *
   * @param {(Buffer|String)} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */ _compress(data, fin, callback) {
        const endpoint = this._isServer ? 'server' : 'client';
        if (!this._deflate) {
            const key = `${endpoint}_max_window_bits`;
            const windowBits = typeof this.params[key] !== 'number' ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];
            this._deflate = zlib.createDeflateRaw({
                ...this._options.zlibDeflateOptions,
                windowBits
            });
            this._deflate[kTotalLength] = 0;
            this._deflate[kBuffers] = [];
            this._deflate.on('data', deflateOnData);
        }
        this._deflate[kCallback] = callback;
        this._deflate.write(data);
        this._deflate.flush(zlib.Z_SYNC_FLUSH, ()=>{
            if (!this._deflate) {
                //
                // The deflate stream was closed while data was being processed.
                //
                return;
            }
            let data = bufferUtil.concat(this._deflate[kBuffers], this._deflate[kTotalLength]);
            if (fin) {
                data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);
            }
            //
            // Ensure that the callback will not be called again in
            // `PerMessageDeflate#cleanup()`.
            //
            this._deflate[kCallback] = null;
            this._deflate[kTotalLength] = 0;
            this._deflate[kBuffers] = [];
            if (fin && this.params[`${endpoint}_no_context_takeover`]) {
                this._deflate.reset();
            }
            callback(null, data);
        });
    }
}
module.exports = PerMessageDeflate;
/**
 * The listener of the `zlib.DeflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */ function deflateOnData(chunk) {
    this[kBuffers].push(chunk);
    this[kTotalLength] += chunk.length;
}
/**
 * The listener of the `zlib.InflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */ function inflateOnData(chunk) {
    this[kTotalLength] += chunk.length;
    if (this[kPerMessageDeflate]._maxPayload < 1 || this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload) {
        this[kBuffers].push(chunk);
        return;
    }
    this[kError] = new RangeError('Max payload size exceeded');
    this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';
    this[kError][kStatusCode] = 1009;
    this.removeListener('data', inflateOnData);
    this.reset();
}
/**
 * The listener of the `zlib.InflateRaw` stream `'error'` event.
 *
 * @param {Error} err The emitted error
 * @private
 */ function inflateOnError(err) {
    //
    // There is no need to call `Zlib#close()` as the handle is automatically
    // closed when an error is emitted.
    //
    this[kPerMessageDeflate]._inflate = null;
    err[kStatusCode] = 1007;
    this[kCallback](err);
}
}}),
"[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/validation.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
const { isUtf8 } = __turbopack_require__("[externals]/buffer [external] (buffer, cjs)");
const { hasBlob } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/constants.js [app-route] (ecmascript)");
//
// Allowed token characters:
//
// '!', '#', '$', '%', '&', ''', '*', '+', '-',
// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'
//
// tokenChars[32] === 0 // ' '
// tokenChars[33] === 1 // '!'
// tokenChars[34] === 0 // '"'
// ...
//
// prettier-ignore
const tokenChars = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    1,
    1,
    0,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    1,
    0,
    1,
    0 // 112 - 127
];
/**
 * Checks if a status code is allowed in a close frame.
 *
 * @param {Number} code The status code
 * @return {Boolean} `true` if the status code is valid, else `false`
 * @public
 */ function isValidStatusCode(code) {
    return code >= 1000 && code <= 1014 && code !== 1004 && code !== 1005 && code !== 1006 || code >= 3000 && code <= 4999;
}
/**
 * Checks if a given buffer contains only correct UTF-8.
 * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by
 * Markus Kuhn.
 *
 * @param {Buffer} buf The buffer to check
 * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`
 * @public
 */ function _isValidUTF8(buf) {
    const len = buf.length;
    let i = 0;
    while(i < len){
        if ((buf[i] & 0x80) === 0) {
            // 0xxxxxxx
            i++;
        } else if ((buf[i] & 0xe0) === 0xc0) {
            // 110xxxxx 10xxxxxx
            if (i + 1 === len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i] & 0xfe) === 0xc0 // Overlong
            ) {
                return false;
            }
            i += 2;
        } else if ((buf[i] & 0xf0) === 0xe0) {
            // 1110xxxx 10xxxxxx 10xxxxxx
            if (i + 2 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 || buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0 // Surrogate (U+D800 - U+DFFF)
            ) {
                return false;
            }
            i += 3;
        } else if ((buf[i] & 0xf8) === 0xf0) {
            // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
            if (i + 3 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || (buf[i + 3] & 0xc0) !== 0x80 || buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 || buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4 // > U+10FFFF
            ) {
                return false;
            }
            i += 4;
        } else {
            return false;
        }
    }
    return true;
}
/**
 * Determines whether a value is a `Blob`.
 *
 * @param {*} value The value to be tested
 * @return {Boolean} `true` if `value` is a `Blob`, else `false`
 * @private
 */ function isBlob(value) {
    return hasBlob && typeof value === 'object' && typeof value.arrayBuffer === 'function' && typeof value.type === 'string' && typeof value.stream === 'function' && (value[Symbol.toStringTag] === 'Blob' || value[Symbol.toStringTag] === 'File');
}
module.exports = {
    isBlob,
    isValidStatusCode,
    isValidUTF8: _isValidUTF8,
    tokenChars
};
if (isUtf8) {
    module.exports.isValidUTF8 = function(buf) {
        return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);
    };
} else if (!process.env.WS_NO_UTF_8_VALIDATE) {
    try {
        const isValidUTF8 = __turbopack_require__("[project]/node_modules/.pnpm/utf-8-validate@5.0.10/node_modules/utf-8-validate/index.js [app-route] (ecmascript)");
        module.exports.isValidUTF8 = function(buf) {
            return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);
        };
    } catch (e) {
    // Continue regardless of the error.
    }
}
}}),
"[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/receiver.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
const { Writable } = __turbopack_require__("[externals]/stream [external] (stream, cjs)");
const PerMessageDeflate = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/permessage-deflate.js [app-route] (ecmascript)");
const { BINARY_TYPES, EMPTY_BUFFER, kStatusCode, kWebSocket } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/constants.js [app-route] (ecmascript)");
const { concat, toArrayBuffer, unmask } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/buffer-util.js [app-route] (ecmascript)");
const { isValidStatusCode, isValidUTF8 } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/validation.js [app-route] (ecmascript)");
const FastBuffer = Buffer[Symbol.species];
const GET_INFO = 0;
const GET_PAYLOAD_LENGTH_16 = 1;
const GET_PAYLOAD_LENGTH_64 = 2;
const GET_MASK = 3;
const GET_DATA = 4;
const INFLATING = 5;
const DEFER_EVENT = 6;
/**
 * HyBi Receiver implementation.
 *
 * @extends Writable
 */ class Receiver extends Writable {
    /**
   * Creates a Receiver instance.
   *
   * @param {Object} [options] Options object
   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether
   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted
   *     multiple times in the same tick
   * @param {String} [options.binaryType=nodebuffer] The type for binary data
   * @param {Object} [options.extensions] An object containing the negotiated
   *     extensions
   * @param {Boolean} [options.isServer=false] Specifies whether to operate in
   *     client or server mode
   * @param {Number} [options.maxPayload=0] The maximum allowed message length
   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or
   *     not to skip UTF-8 validation for text and close messages
   */ constructor(options = {}){
        super();
        this._allowSynchronousEvents = options.allowSynchronousEvents !== undefined ? options.allowSynchronousEvents : true;
        this._binaryType = options.binaryType || BINARY_TYPES[0];
        this._extensions = options.extensions || {};
        this._isServer = !!options.isServer;
        this._maxPayload = options.maxPayload | 0;
        this._skipUTF8Validation = !!options.skipUTF8Validation;
        this[kWebSocket] = undefined;
        this._bufferedBytes = 0;
        this._buffers = [];
        this._compressed = false;
        this._payloadLength = 0;
        this._mask = undefined;
        this._fragmented = 0;
        this._masked = false;
        this._fin = false;
        this._opcode = 0;
        this._totalPayloadLength = 0;
        this._messageLength = 0;
        this._fragments = [];
        this._errored = false;
        this._loop = false;
        this._state = GET_INFO;
    }
    /**
   * Implements `Writable.prototype._write()`.
   *
   * @param {Buffer} chunk The chunk of data to write
   * @param {String} encoding The character encoding of `chunk`
   * @param {Function} cb Callback
   * @private
   */ _write(chunk, encoding, cb) {
        if (this._opcode === 0x08 && this._state == GET_INFO) return cb();
        this._bufferedBytes += chunk.length;
        this._buffers.push(chunk);
        this.startLoop(cb);
    }
    /**
   * Consumes `n` bytes from the buffered data.
   *
   * @param {Number} n The number of bytes to consume
   * @return {Buffer} The consumed bytes
   * @private
   */ consume(n) {
        this._bufferedBytes -= n;
        if (n === this._buffers[0].length) return this._buffers.shift();
        if (n < this._buffers[0].length) {
            const buf = this._buffers[0];
            this._buffers[0] = new FastBuffer(buf.buffer, buf.byteOffset + n, buf.length - n);
            return new FastBuffer(buf.buffer, buf.byteOffset, n);
        }
        const dst = Buffer.allocUnsafe(n);
        do {
            const buf = this._buffers[0];
            const offset = dst.length - n;
            if (n >= buf.length) {
                dst.set(this._buffers.shift(), offset);
            } else {
                dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);
                this._buffers[0] = new FastBuffer(buf.buffer, buf.byteOffset + n, buf.length - n);
            }
            n -= buf.length;
        }while (n > 0)
        return dst;
    }
    /**
   * Starts the parsing loop.
   *
   * @param {Function} cb Callback
   * @private
   */ startLoop(cb) {
        this._loop = true;
        do {
            switch(this._state){
                case GET_INFO:
                    this.getInfo(cb);
                    break;
                case GET_PAYLOAD_LENGTH_16:
                    this.getPayloadLength16(cb);
                    break;
                case GET_PAYLOAD_LENGTH_64:
                    this.getPayloadLength64(cb);
                    break;
                case GET_MASK:
                    this.getMask();
                    break;
                case GET_DATA:
                    this.getData(cb);
                    break;
                case INFLATING:
                case DEFER_EVENT:
                    this._loop = false;
                    return;
            }
        }while (this._loop)
        if (!this._errored) cb();
    }
    /**
   * Reads the first two bytes of a frame.
   *
   * @param {Function} cb Callback
   * @private
   */ getInfo(cb) {
        if (this._bufferedBytes < 2) {
            this._loop = false;
            return;
        }
        const buf = this.consume(2);
        if ((buf[0] & 0x30) !== 0x00) {
            const error = this.createError(RangeError, 'RSV2 and RSV3 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_2_3');
            cb(error);
            return;
        }
        const compressed = (buf[0] & 0x40) === 0x40;
        if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {
            const error = this.createError(RangeError, 'RSV1 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_1');
            cb(error);
            return;
        }
        this._fin = (buf[0] & 0x80) === 0x80;
        this._opcode = buf[0] & 0x0f;
        this._payloadLength = buf[1] & 0x7f;
        if (this._opcode === 0x00) {
            if (compressed) {
                const error = this.createError(RangeError, 'RSV1 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_1');
                cb(error);
                return;
            }
            if (!this._fragmented) {
                const error = this.createError(RangeError, 'invalid opcode 0', true, 1002, 'WS_ERR_INVALID_OPCODE');
                cb(error);
                return;
            }
            this._opcode = this._fragmented;
        } else if (this._opcode === 0x01 || this._opcode === 0x02) {
            if (this._fragmented) {
                const error = this.createError(RangeError, `invalid opcode ${this._opcode}`, true, 1002, 'WS_ERR_INVALID_OPCODE');
                cb(error);
                return;
            }
            this._compressed = compressed;
        } else if (this._opcode > 0x07 && this._opcode < 0x0b) {
            if (!this._fin) {
                const error = this.createError(RangeError, 'FIN must be set', true, 1002, 'WS_ERR_EXPECTED_FIN');
                cb(error);
                return;
            }
            if (compressed) {
                const error = this.createError(RangeError, 'RSV1 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_1');
                cb(error);
                return;
            }
            if (this._payloadLength > 0x7d || this._opcode === 0x08 && this._payloadLength === 1) {
                const error = this.createError(RangeError, `invalid payload length ${this._payloadLength}`, true, 1002, 'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH');
                cb(error);
                return;
            }
        } else {
            const error = this.createError(RangeError, `invalid opcode ${this._opcode}`, true, 1002, 'WS_ERR_INVALID_OPCODE');
            cb(error);
            return;
        }
        if (!this._fin && !this._fragmented) this._fragmented = this._opcode;
        this._masked = (buf[1] & 0x80) === 0x80;
        if (this._isServer) {
            if (!this._masked) {
                const error = this.createError(RangeError, 'MASK must be set', true, 1002, 'WS_ERR_EXPECTED_MASK');
                cb(error);
                return;
            }
        } else if (this._masked) {
            const error = this.createError(RangeError, 'MASK must be clear', true, 1002, 'WS_ERR_UNEXPECTED_MASK');
            cb(error);
            return;
        }
        if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;
        else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;
        else this.haveLength(cb);
    }
    /**
   * Gets extended payload length (7+16).
   *
   * @param {Function} cb Callback
   * @private
   */ getPayloadLength16(cb) {
        if (this._bufferedBytes < 2) {
            this._loop = false;
            return;
        }
        this._payloadLength = this.consume(2).readUInt16BE(0);
        this.haveLength(cb);
    }
    /**
   * Gets extended payload length (7+64).
   *
   * @param {Function} cb Callback
   * @private
   */ getPayloadLength64(cb) {
        if (this._bufferedBytes < 8) {
            this._loop = false;
            return;
        }
        const buf = this.consume(8);
        const num = buf.readUInt32BE(0);
        //
        // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned
        // if payload length is greater than this number.
        //
        if (num > Math.pow(2, 53 - 32) - 1) {
            const error = this.createError(RangeError, 'Unsupported WebSocket frame: payload length > 2^53 - 1', false, 1009, 'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH');
            cb(error);
            return;
        }
        this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);
        this.haveLength(cb);
    }
    /**
   * Payload length has been read.
   *
   * @param {Function} cb Callback
   * @private
   */ haveLength(cb) {
        if (this._payloadLength && this._opcode < 0x08) {
            this._totalPayloadLength += this._payloadLength;
            if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {
                const error = this.createError(RangeError, 'Max payload size exceeded', false, 1009, 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH');
                cb(error);
                return;
            }
        }
        if (this._masked) this._state = GET_MASK;
        else this._state = GET_DATA;
    }
    /**
   * Reads mask bytes.
   *
   * @private
   */ getMask() {
        if (this._bufferedBytes < 4) {
            this._loop = false;
            return;
        }
        this._mask = this.consume(4);
        this._state = GET_DATA;
    }
    /**
   * Reads data bytes.
   *
   * @param {Function} cb Callback
   * @private
   */ getData(cb) {
        let data = EMPTY_BUFFER;
        if (this._payloadLength) {
            if (this._bufferedBytes < this._payloadLength) {
                this._loop = false;
                return;
            }
            data = this.consume(this._payloadLength);
            if (this._masked && (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0) {
                unmask(data, this._mask);
            }
        }
        if (this._opcode > 0x07) {
            this.controlMessage(data, cb);
            return;
        }
        if (this._compressed) {
            this._state = INFLATING;
            this.decompress(data, cb);
            return;
        }
        if (data.length) {
            //
            // This message is not compressed so its length is the sum of the payload
            // length of all fragments.
            //
            this._messageLength = this._totalPayloadLength;
            this._fragments.push(data);
        }
        this.dataMessage(cb);
    }
    /**
   * Decompresses data.
   *
   * @param {Buffer} data Compressed data
   * @param {Function} cb Callback
   * @private
   */ decompress(data, cb) {
        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];
        perMessageDeflate.decompress(data, this._fin, (err, buf)=>{
            if (err) return cb(err);
            if (buf.length) {
                this._messageLength += buf.length;
                if (this._messageLength > this._maxPayload && this._maxPayload > 0) {
                    const error = this.createError(RangeError, 'Max payload size exceeded', false, 1009, 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH');
                    cb(error);
                    return;
                }
                this._fragments.push(buf);
            }
            this.dataMessage(cb);
            if (this._state === GET_INFO) this.startLoop(cb);
        });
    }
    /**
   * Handles a data message.
   *
   * @param {Function} cb Callback
   * @private
   */ dataMessage(cb) {
        if (!this._fin) {
            this._state = GET_INFO;
            return;
        }
        const messageLength = this._messageLength;
        const fragments = this._fragments;
        this._totalPayloadLength = 0;
        this._messageLength = 0;
        this._fragmented = 0;
        this._fragments = [];
        if (this._opcode === 2) {
            let data;
            if (this._binaryType === 'nodebuffer') {
                data = concat(fragments, messageLength);
            } else if (this._binaryType === 'arraybuffer') {
                data = toArrayBuffer(concat(fragments, messageLength));
            } else if (this._binaryType === 'blob') {
                data = new Blob(fragments);
            } else {
                data = fragments;
            }
            if (this._allowSynchronousEvents) {
                this.emit('message', data, true);
                this._state = GET_INFO;
            } else {
                this._state = DEFER_EVENT;
                setImmediate(()=>{
                    this.emit('message', data, true);
                    this._state = GET_INFO;
                    this.startLoop(cb);
                });
            }
        } else {
            const buf = concat(fragments, messageLength);
            if (!this._skipUTF8Validation && !isValidUTF8(buf)) {
                const error = this.createError(Error, 'invalid UTF-8 sequence', true, 1007, 'WS_ERR_INVALID_UTF8');
                cb(error);
                return;
            }
            if (this._state === INFLATING || this._allowSynchronousEvents) {
                this.emit('message', buf, false);
                this._state = GET_INFO;
            } else {
                this._state = DEFER_EVENT;
                setImmediate(()=>{
                    this.emit('message', buf, false);
                    this._state = GET_INFO;
                    this.startLoop(cb);
                });
            }
        }
    }
    /**
   * Handles a control message.
   *
   * @param {Buffer} data Data to handle
   * @return {(Error|RangeError|undefined)} A possible error
   * @private
   */ controlMessage(data, cb) {
        if (this._opcode === 0x08) {
            if (data.length === 0) {
                this._loop = false;
                this.emit('conclude', 1005, EMPTY_BUFFER);
                this.end();
            } else {
                const code = data.readUInt16BE(0);
                if (!isValidStatusCode(code)) {
                    const error = this.createError(RangeError, `invalid status code ${code}`, true, 1002, 'WS_ERR_INVALID_CLOSE_CODE');
                    cb(error);
                    return;
                }
                const buf = new FastBuffer(data.buffer, data.byteOffset + 2, data.length - 2);
                if (!this._skipUTF8Validation && !isValidUTF8(buf)) {
                    const error = this.createError(Error, 'invalid UTF-8 sequence', true, 1007, 'WS_ERR_INVALID_UTF8');
                    cb(error);
                    return;
                }
                this._loop = false;
                this.emit('conclude', code, buf);
                this.end();
            }
            this._state = GET_INFO;
            return;
        }
        if (this._allowSynchronousEvents) {
            this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);
            this._state = GET_INFO;
        } else {
            this._state = DEFER_EVENT;
            setImmediate(()=>{
                this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);
                this._state = GET_INFO;
                this.startLoop(cb);
            });
        }
    }
    /**
   * Builds an error object.
   *
   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor
   * @param {String} message The error message
   * @param {Boolean} prefix Specifies whether or not to add a default prefix to
   *     `message`
   * @param {Number} statusCode The status code
   * @param {String} errorCode The exposed error code
   * @return {(Error|RangeError)} The error
   * @private
   */ createError(ErrorCtor, message, prefix, statusCode, errorCode) {
        this._loop = false;
        this._errored = true;
        const err = new ErrorCtor(prefix ? `Invalid WebSocket frame: ${message}` : message);
        Error.captureStackTrace(err, this.createError);
        err.code = errorCode;
        err[kStatusCode] = statusCode;
        return err;
    }
}
module.exports = Receiver;
}}),
"[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/sender.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/* eslint no-unused-vars: ["error", { "varsIgnorePattern": "^Duplex" }] */ 'use strict';
const { Duplex } = __turbopack_require__("[externals]/stream [external] (stream, cjs)");
const { randomFillSync } = __turbopack_require__("[externals]/crypto [external] (crypto, cjs)");
const PerMessageDeflate = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/permessage-deflate.js [app-route] (ecmascript)");
const { EMPTY_BUFFER, kWebSocket, NOOP } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/constants.js [app-route] (ecmascript)");
const { isBlob, isValidStatusCode } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/validation.js [app-route] (ecmascript)");
const { mask: applyMask, toBuffer } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/buffer-util.js [app-route] (ecmascript)");
const kByteLength = Symbol('kByteLength');
const maskBuffer = Buffer.alloc(4);
const RANDOM_POOL_SIZE = 8 * 1024;
let randomPool;
let randomPoolPointer = RANDOM_POOL_SIZE;
const DEFAULT = 0;
const DEFLATING = 1;
const GET_BLOB_DATA = 2;
/**
 * HyBi Sender implementation.
 */ class Sender {
    /**
   * Creates a Sender instance.
   *
   * @param {Duplex} socket The connection socket
   * @param {Object} [extensions] An object containing the negotiated extensions
   * @param {Function} [generateMask] The function used to generate the masking
   *     key
   */ constructor(socket, extensions, generateMask){
        this._extensions = extensions || {};
        if (generateMask) {
            this._generateMask = generateMask;
            this._maskBuffer = Buffer.alloc(4);
        }
        this._socket = socket;
        this._firstFragment = true;
        this._compress = false;
        this._bufferedBytes = 0;
        this._queue = [];
        this._state = DEFAULT;
        this.onerror = NOOP;
        this[kWebSocket] = undefined;
    }
    /**
   * Frames a piece of data according to the HyBi WebSocket protocol.
   *
   * @param {(Buffer|String)} data The data to frame
   * @param {Object} options Options object
   * @param {Boolean} [options.fin=false] Specifies whether or not to set the
   *     FIN bit
   * @param {Function} [options.generateMask] The function used to generate the
   *     masking key
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking
   *     key
   * @param {Number} options.opcode The opcode
   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be
   *     modified
   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the
   *     RSV1 bit
   * @return {(Buffer|String)[]} The framed data
   * @public
   */ static frame(data, options) {
        let mask;
        let merge = false;
        let offset = 2;
        let skipMasking = false;
        if (options.mask) {
            mask = options.maskBuffer || maskBuffer;
            if (options.generateMask) {
                options.generateMask(mask);
            } else {
                if (randomPoolPointer === RANDOM_POOL_SIZE) {
                    /* istanbul ignore else  */ if (randomPool === undefined) {
                        //
                        // This is lazily initialized because server-sent frames must not
                        // be masked so it may never be used.
                        //
                        randomPool = Buffer.alloc(RANDOM_POOL_SIZE);
                    }
                    randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);
                    randomPoolPointer = 0;
                }
                mask[0] = randomPool[randomPoolPointer++];
                mask[1] = randomPool[randomPoolPointer++];
                mask[2] = randomPool[randomPoolPointer++];
                mask[3] = randomPool[randomPoolPointer++];
            }
            skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;
            offset = 6;
        }
        let dataLength;
        if (typeof data === 'string') {
            if ((!options.mask || skipMasking) && options[kByteLength] !== undefined) {
                dataLength = options[kByteLength];
            } else {
                data = Buffer.from(data);
                dataLength = data.length;
            }
        } else {
            dataLength = data.length;
            merge = options.mask && options.readOnly && !skipMasking;
        }
        let payloadLength = dataLength;
        if (dataLength >= 65536) {
            offset += 8;
            payloadLength = 127;
        } else if (dataLength > 125) {
            offset += 2;
            payloadLength = 126;
        }
        const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);
        target[0] = options.fin ? options.opcode | 0x80 : options.opcode;
        if (options.rsv1) target[0] |= 0x40;
        target[1] = payloadLength;
        if (payloadLength === 126) {
            target.writeUInt16BE(dataLength, 2);
        } else if (payloadLength === 127) {
            target[2] = target[3] = 0;
            target.writeUIntBE(dataLength, 4, 6);
        }
        if (!options.mask) return [
            target,
            data
        ];
        target[1] |= 0x80;
        target[offset - 4] = mask[0];
        target[offset - 3] = mask[1];
        target[offset - 2] = mask[2];
        target[offset - 1] = mask[3];
        if (skipMasking) return [
            target,
            data
        ];
        if (merge) {
            applyMask(data, mask, target, offset, dataLength);
            return [
                target
            ];
        }
        applyMask(data, mask, data, 0, dataLength);
        return [
            target,
            data
        ];
    }
    /**
   * Sends a close message to the other peer.
   *
   * @param {Number} [code] The status code component of the body
   * @param {(String|Buffer)} [data] The message component of the body
   * @param {Boolean} [mask=false] Specifies whether or not to mask the message
   * @param {Function} [cb] Callback
   * @public
   */ close(code, data, mask, cb) {
        let buf;
        if (code === undefined) {
            buf = EMPTY_BUFFER;
        } else if (typeof code !== 'number' || !isValidStatusCode(code)) {
            throw new TypeError('First argument must be a valid error code number');
        } else if (data === undefined || !data.length) {
            buf = Buffer.allocUnsafe(2);
            buf.writeUInt16BE(code, 0);
        } else {
            const length = Buffer.byteLength(data);
            if (length > 123) {
                throw new RangeError('The message must not be greater than 123 bytes');
            }
            buf = Buffer.allocUnsafe(2 + length);
            buf.writeUInt16BE(code, 0);
            if (typeof data === 'string') {
                buf.write(data, 2);
            } else {
                buf.set(data, 2);
            }
        }
        const options = {
            [kByteLength]: buf.length,
            fin: true,
            generateMask: this._generateMask,
            mask,
            maskBuffer: this._maskBuffer,
            opcode: 0x08,
            readOnly: false,
            rsv1: false
        };
        if (this._state !== DEFAULT) {
            this.enqueue([
                this.dispatch,
                buf,
                false,
                options,
                cb
            ]);
        } else {
            this.sendFrame(Sender.frame(buf, options), cb);
        }
    }
    /**
   * Sends a ping message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback
   * @public
   */ ping(data, mask, cb) {
        let byteLength;
        let readOnly;
        if (typeof data === 'string') {
            byteLength = Buffer.byteLength(data);
            readOnly = false;
        } else if (isBlob(data)) {
            byteLength = data.size;
            readOnly = false;
        } else {
            data = toBuffer(data);
            byteLength = data.length;
            readOnly = toBuffer.readOnly;
        }
        if (byteLength > 125) {
            throw new RangeError('The data size must not be greater than 125 bytes');
        }
        const options = {
            [kByteLength]: byteLength,
            fin: true,
            generateMask: this._generateMask,
            mask,
            maskBuffer: this._maskBuffer,
            opcode: 0x09,
            readOnly,
            rsv1: false
        };
        if (isBlob(data)) {
            if (this._state !== DEFAULT) {
                this.enqueue([
                    this.getBlobData,
                    data,
                    false,
                    options,
                    cb
                ]);
            } else {
                this.getBlobData(data, false, options, cb);
            }
        } else if (this._state !== DEFAULT) {
            this.enqueue([
                this.dispatch,
                data,
                false,
                options,
                cb
            ]);
        } else {
            this.sendFrame(Sender.frame(data, options), cb);
        }
    }
    /**
   * Sends a pong message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback
   * @public
   */ pong(data, mask, cb) {
        let byteLength;
        let readOnly;
        if (typeof data === 'string') {
            byteLength = Buffer.byteLength(data);
            readOnly = false;
        } else if (isBlob(data)) {
            byteLength = data.size;
            readOnly = false;
        } else {
            data = toBuffer(data);
            byteLength = data.length;
            readOnly = toBuffer.readOnly;
        }
        if (byteLength > 125) {
            throw new RangeError('The data size must not be greater than 125 bytes');
        }
        const options = {
            [kByteLength]: byteLength,
            fin: true,
            generateMask: this._generateMask,
            mask,
            maskBuffer: this._maskBuffer,
            opcode: 0x0a,
            readOnly,
            rsv1: false
        };
        if (isBlob(data)) {
            if (this._state !== DEFAULT) {
                this.enqueue([
                    this.getBlobData,
                    data,
                    false,
                    options,
                    cb
                ]);
            } else {
                this.getBlobData(data, false, options, cb);
            }
        } else if (this._state !== DEFAULT) {
            this.enqueue([
                this.dispatch,
                data,
                false,
                options,
                cb
            ]);
        } else {
            this.sendFrame(Sender.frame(data, options), cb);
        }
    }
    /**
   * Sends a data message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Object} options Options object
   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary
   *     or text
   * @param {Boolean} [options.compress=false] Specifies whether or not to
   *     compress `data`
   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the
   *     last one
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Function} [cb] Callback
   * @public
   */ send(data, options, cb) {
        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];
        let opcode = options.binary ? 2 : 1;
        let rsv1 = options.compress;
        let byteLength;
        let readOnly;
        if (typeof data === 'string') {
            byteLength = Buffer.byteLength(data);
            readOnly = false;
        } else if (isBlob(data)) {
            byteLength = data.size;
            readOnly = false;
        } else {
            data = toBuffer(data);
            byteLength = data.length;
            readOnly = toBuffer.readOnly;
        }
        if (this._firstFragment) {
            this._firstFragment = false;
            if (rsv1 && perMessageDeflate && perMessageDeflate.params[perMessageDeflate._isServer ? 'server_no_context_takeover' : 'client_no_context_takeover']) {
                rsv1 = byteLength >= perMessageDeflate._threshold;
            }
            this._compress = rsv1;
        } else {
            rsv1 = false;
            opcode = 0;
        }
        if (options.fin) this._firstFragment = true;
        const opts = {
            [kByteLength]: byteLength,
            fin: options.fin,
            generateMask: this._generateMask,
            mask: options.mask,
            maskBuffer: this._maskBuffer,
            opcode,
            readOnly,
            rsv1
        };
        if (isBlob(data)) {
            if (this._state !== DEFAULT) {
                this.enqueue([
                    this.getBlobData,
                    data,
                    this._compress,
                    opts,
                    cb
                ]);
            } else {
                this.getBlobData(data, this._compress, opts, cb);
            }
        } else if (this._state !== DEFAULT) {
            this.enqueue([
                this.dispatch,
                data,
                this._compress,
                opts,
                cb
            ]);
        } else {
            this.dispatch(data, this._compress, opts, cb);
        }
    }
    /**
   * Gets the contents of a blob as binary data.
   *
   * @param {Blob} blob The blob
   * @param {Boolean} [compress=false] Specifies whether or not to compress
   *     the data
   * @param {Object} options Options object
   * @param {Boolean} [options.fin=false] Specifies whether or not to set the
   *     FIN bit
   * @param {Function} [options.generateMask] The function used to generate the
   *     masking key
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking
   *     key
   * @param {Number} options.opcode The opcode
   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be
   *     modified
   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the
   *     RSV1 bit
   * @param {Function} [cb] Callback
   * @private
   */ getBlobData(blob, compress, options, cb) {
        this._bufferedBytes += options[kByteLength];
        this._state = GET_BLOB_DATA;
        blob.arrayBuffer().then((arrayBuffer)=>{
            if (this._socket.destroyed) {
                const err = new Error('The socket was closed while the blob was being read');
                //
                // `callCallbacks` is called in the next tick to ensure that errors
                // that might be thrown in the callbacks behave like errors thrown
                // outside the promise chain.
                //
                process.nextTick(callCallbacks, this, err, cb);
                return;
            }
            this._bufferedBytes -= options[kByteLength];
            const data = toBuffer(arrayBuffer);
            if (!compress) {
                this._state = DEFAULT;
                this.sendFrame(Sender.frame(data, options), cb);
                this.dequeue();
            } else {
                this.dispatch(data, compress, options, cb);
            }
        }).catch((err)=>{
            //
            // `onError` is called in the next tick for the same reason that
            // `callCallbacks` above is.
            //
            process.nextTick(onError, this, err, cb);
        });
    }
    /**
   * Dispatches a message.
   *
   * @param {(Buffer|String)} data The message to send
   * @param {Boolean} [compress=false] Specifies whether or not to compress
   *     `data`
   * @param {Object} options Options object
   * @param {Boolean} [options.fin=false] Specifies whether or not to set the
   *     FIN bit
   * @param {Function} [options.generateMask] The function used to generate the
   *     masking key
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking
   *     key
   * @param {Number} options.opcode The opcode
   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be
   *     modified
   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the
   *     RSV1 bit
   * @param {Function} [cb] Callback
   * @private
   */ dispatch(data, compress, options, cb) {
        if (!compress) {
            this.sendFrame(Sender.frame(data, options), cb);
            return;
        }
        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];
        this._bufferedBytes += options[kByteLength];
        this._state = DEFLATING;
        perMessageDeflate.compress(data, options.fin, (_, buf)=>{
            if (this._socket.destroyed) {
                const err = new Error('The socket was closed while data was being compressed');
                callCallbacks(this, err, cb);
                return;
            }
            this._bufferedBytes -= options[kByteLength];
            this._state = DEFAULT;
            options.readOnly = false;
            this.sendFrame(Sender.frame(buf, options), cb);
            this.dequeue();
        });
    }
    /**
   * Executes queued send operations.
   *
   * @private
   */ dequeue() {
        while(this._state === DEFAULT && this._queue.length){
            const params = this._queue.shift();
            this._bufferedBytes -= params[3][kByteLength];
            Reflect.apply(params[0], this, params.slice(1));
        }
    }
    /**
   * Enqueues a send operation.
   *
   * @param {Array} params Send operation parameters.
   * @private
   */ enqueue(params) {
        this._bufferedBytes += params[3][kByteLength];
        this._queue.push(params);
    }
    /**
   * Sends a frame.
   *
   * @param {(Buffer | String)[]} list The frame to send
   * @param {Function} [cb] Callback
   * @private
   */ sendFrame(list, cb) {
        if (list.length === 2) {
            this._socket.cork();
            this._socket.write(list[0]);
            this._socket.write(list[1], cb);
            this._socket.uncork();
        } else {
            this._socket.write(list[0], cb);
        }
    }
}
module.exports = Sender;
/**
 * Calls queued callbacks with an error.
 *
 * @param {Sender} sender The `Sender` instance
 * @param {Error} err The error to call the callbacks with
 * @param {Function} [cb] The first callback
 * @private
 */ function callCallbacks(sender, err, cb) {
    if (typeof cb === 'function') cb(err);
    for(let i = 0; i < sender._queue.length; i++){
        const params = sender._queue[i];
        const callback = params[params.length - 1];
        if (typeof callback === 'function') callback(err);
    }
}
/**
 * Handles a `Sender` error.
 *
 * @param {Sender} sender The `Sender` instance
 * @param {Error} err The error
 * @param {Function} [cb] The first pending callback
 * @private
 */ function onError(sender, err, cb) {
    callCallbacks(sender, err, cb);
    sender.onerror(err);
}
}}),
"[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/event-target.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
const { kForOnEventAttribute, kListener } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/constants.js [app-route] (ecmascript)");
const kCode = Symbol('kCode');
const kData = Symbol('kData');
const kError = Symbol('kError');
const kMessage = Symbol('kMessage');
const kReason = Symbol('kReason');
const kTarget = Symbol('kTarget');
const kType = Symbol('kType');
const kWasClean = Symbol('kWasClean');
/**
 * Class representing an event.
 */ class Event {
    /**
   * Create a new `Event`.
   *
   * @param {String} type The name of the event
   * @throws {TypeError} If the `type` argument is not specified
   */ constructor(type){
        this[kTarget] = null;
        this[kType] = type;
    }
    /**
   * @type {*}
   */ get target() {
        return this[kTarget];
    }
    /**
   * @type {String}
   */ get type() {
        return this[kType];
    }
}
Object.defineProperty(Event.prototype, 'target', {
    enumerable: true
});
Object.defineProperty(Event.prototype, 'type', {
    enumerable: true
});
/**
 * Class representing a close event.
 *
 * @extends Event
 */ class CloseEvent extends Event {
    /**
   * Create a new `CloseEvent`.
   *
   * @param {String} type The name of the event
   * @param {Object} [options] A dictionary object that allows for setting
   *     attributes via object members of the same name
   * @param {Number} [options.code=0] The status code explaining why the
   *     connection was closed
   * @param {String} [options.reason=''] A human-readable string explaining why
   *     the connection was closed
   * @param {Boolean} [options.wasClean=false] Indicates whether or not the
   *     connection was cleanly closed
   */ constructor(type, options = {}){
        super(type);
        this[kCode] = options.code === undefined ? 0 : options.code;
        this[kReason] = options.reason === undefined ? '' : options.reason;
        this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;
    }
    /**
   * @type {Number}
   */ get code() {
        return this[kCode];
    }
    /**
   * @type {String}
   */ get reason() {
        return this[kReason];
    }
    /**
   * @type {Boolean}
   */ get wasClean() {
        return this[kWasClean];
    }
}
Object.defineProperty(CloseEvent.prototype, 'code', {
    enumerable: true
});
Object.defineProperty(CloseEvent.prototype, 'reason', {
    enumerable: true
});
Object.defineProperty(CloseEvent.prototype, 'wasClean', {
    enumerable: true
});
/**
 * Class representing an error event.
 *
 * @extends Event
 */ class ErrorEvent extends Event {
    /**
   * Create a new `ErrorEvent`.
   *
   * @param {String} type The name of the event
   * @param {Object} [options] A dictionary object that allows for setting
   *     attributes via object members of the same name
   * @param {*} [options.error=null] The error that generated this event
   * @param {String} [options.message=''] The error message
   */ constructor(type, options = {}){
        super(type);
        this[kError] = options.error === undefined ? null : options.error;
        this[kMessage] = options.message === undefined ? '' : options.message;
    }
    /**
   * @type {*}
   */ get error() {
        return this[kError];
    }
    /**
   * @type {String}
   */ get message() {
        return this[kMessage];
    }
}
Object.defineProperty(ErrorEvent.prototype, 'error', {
    enumerable: true
});
Object.defineProperty(ErrorEvent.prototype, 'message', {
    enumerable: true
});
/**
 * Class representing a message event.
 *
 * @extends Event
 */ class MessageEvent extends Event {
    /**
   * Create a new `MessageEvent`.
   *
   * @param {String} type The name of the event
   * @param {Object} [options] A dictionary object that allows for setting
   *     attributes via object members of the same name
   * @param {*} [options.data=null] The message content
   */ constructor(type, options = {}){
        super(type);
        this[kData] = options.data === undefined ? null : options.data;
    }
    /**
   * @type {*}
   */ get data() {
        return this[kData];
    }
}
Object.defineProperty(MessageEvent.prototype, 'data', {
    enumerable: true
});
/**
 * This provides methods for emulating the `EventTarget` interface. It's not
 * meant to be used directly.
 *
 * @mixin
 */ const EventTarget = {
    /**
   * Register an event listener.
   *
   * @param {String} type A string representing the event type to listen for
   * @param {(Function|Object)} handler The listener to add
   * @param {Object} [options] An options object specifies characteristics about
   *     the event listener
   * @param {Boolean} [options.once=false] A `Boolean` indicating that the
   *     listener should be invoked at most once after being added. If `true`,
   *     the listener would be automatically removed when invoked.
   * @public
   */ addEventListener (type, handler, options = {}) {
        for (const listener of this.listeners(type)){
            if (!options[kForOnEventAttribute] && listener[kListener] === handler && !listener[kForOnEventAttribute]) {
                return;
            }
        }
        let wrapper;
        if (type === 'message') {
            wrapper = function onMessage(data, isBinary) {
                const event = new MessageEvent('message', {
                    data: isBinary ? data : data.toString()
                });
                event[kTarget] = this;
                callListener(handler, this, event);
            };
        } else if (type === 'close') {
            wrapper = function onClose(code, message) {
                const event = new CloseEvent('close', {
                    code,
                    reason: message.toString(),
                    wasClean: this._closeFrameReceived && this._closeFrameSent
                });
                event[kTarget] = this;
                callListener(handler, this, event);
            };
        } else if (type === 'error') {
            wrapper = function onError(error) {
                const event = new ErrorEvent('error', {
                    error,
                    message: error.message
                });
                event[kTarget] = this;
                callListener(handler, this, event);
            };
        } else if (type === 'open') {
            wrapper = function onOpen() {
                const event = new Event('open');
                event[kTarget] = this;
                callListener(handler, this, event);
            };
        } else {
            return;
        }
        wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];
        wrapper[kListener] = handler;
        if (options.once) {
            this.once(type, wrapper);
        } else {
            this.on(type, wrapper);
        }
    },
    /**
   * Remove an event listener.
   *
   * @param {String} type A string representing the event type to remove
   * @param {(Function|Object)} handler The listener to remove
   * @public
   */ removeEventListener (type, handler) {
        for (const listener of this.listeners(type)){
            if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {
                this.removeListener(type, listener);
                break;
            }
        }
    }
};
module.exports = {
    CloseEvent,
    ErrorEvent,
    Event,
    EventTarget,
    MessageEvent
};
/**
 * Call an event listener
 *
 * @param {(Function|Object)} listener The listener to call
 * @param {*} thisArg The value to use as `this`` when calling the listener
 * @param {Event} event The event to pass to the listener
 * @private
 */ function callListener(listener, thisArg, event) {
    if (typeof listener === 'object' && listener.handleEvent) {
        listener.handleEvent.call(listener, event);
    } else {
        listener.call(thisArg, event);
    }
}
}}),
"[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/extension.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
const { tokenChars } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/validation.js [app-route] (ecmascript)");
/**
 * Adds an offer to the map of extension offers or a parameter to the map of
 * parameters.
 *
 * @param {Object} dest The map of extension offers or parameters
 * @param {String} name The extension or parameter name
 * @param {(Object|Boolean|String)} elem The extension parameters or the
 *     parameter value
 * @private
 */ function push(dest, name, elem) {
    if (dest[name] === undefined) dest[name] = [
        elem
    ];
    else dest[name].push(elem);
}
/**
 * Parses the `Sec-WebSocket-Extensions` header into an object.
 *
 * @param {String} header The field value of the header
 * @return {Object} The parsed object
 * @public
 */ function parse(header) {
    const offers = Object.create(null);
    let params = Object.create(null);
    let mustUnescape = false;
    let isEscaping = false;
    let inQuotes = false;
    let extensionName;
    let paramName;
    let start = -1;
    let code = -1;
    let end = -1;
    let i = 0;
    for(; i < header.length; i++){
        code = header.charCodeAt(i);
        if (extensionName === undefined) {
            if (end === -1 && tokenChars[code] === 1) {
                if (start === -1) start = i;
            } else if (i !== 0 && (code === 0x20 /* ' ' */  || code === 0x09)) {
                if (end === -1 && start !== -1) end = i;
            } else if (code === 0x3b /* ';' */  || code === 0x2c /* ',' */ ) {
                if (start === -1) {
                    throw new SyntaxError(`Unexpected character at index ${i}`);
                }
                if (end === -1) end = i;
                const name = header.slice(start, end);
                if (code === 0x2c) {
                    push(offers, name, params);
                    params = Object.create(null);
                } else {
                    extensionName = name;
                }
                start = end = -1;
            } else {
                throw new SyntaxError(`Unexpected character at index ${i}`);
            }
        } else if (paramName === undefined) {
            if (end === -1 && tokenChars[code] === 1) {
                if (start === -1) start = i;
            } else if (code === 0x20 || code === 0x09) {
                if (end === -1 && start !== -1) end = i;
            } else if (code === 0x3b || code === 0x2c) {
                if (start === -1) {
                    throw new SyntaxError(`Unexpected character at index ${i}`);
                }
                if (end === -1) end = i;
                push(params, header.slice(start, end), true);
                if (code === 0x2c) {
                    push(offers, extensionName, params);
                    params = Object.create(null);
                    extensionName = undefined;
                }
                start = end = -1;
            } else if (code === 0x3d /* '=' */  && start !== -1 && end === -1) {
                paramName = header.slice(start, i);
                start = end = -1;
            } else {
                throw new SyntaxError(`Unexpected character at index ${i}`);
            }
        } else {
            //
            // The value of a quoted-string after unescaping must conform to the
            // token ABNF, so only token characters are valid.
            // Ref: https://tools.ietf.org/html/rfc6455#section-9.1
            //
            if (isEscaping) {
                if (tokenChars[code] !== 1) {
                    throw new SyntaxError(`Unexpected character at index ${i}`);
                }
                if (start === -1) start = i;
                else if (!mustUnescape) mustUnescape = true;
                isEscaping = false;
            } else if (inQuotes) {
                if (tokenChars[code] === 1) {
                    if (start === -1) start = i;
                } else if (code === 0x22 /* '"' */  && start !== -1) {
                    inQuotes = false;
                    end = i;
                } else if (code === 0x5c /* '\' */ ) {
                    isEscaping = true;
                } else {
                    throw new SyntaxError(`Unexpected character at index ${i}`);
                }
            } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {
                inQuotes = true;
            } else if (end === -1 && tokenChars[code] === 1) {
                if (start === -1) start = i;
            } else if (start !== -1 && (code === 0x20 || code === 0x09)) {
                if (end === -1) end = i;
            } else if (code === 0x3b || code === 0x2c) {
                if (start === -1) {
                    throw new SyntaxError(`Unexpected character at index ${i}`);
                }
                if (end === -1) end = i;
                let value = header.slice(start, end);
                if (mustUnescape) {
                    value = value.replace(/\\/g, '');
                    mustUnescape = false;
                }
                push(params, paramName, value);
                if (code === 0x2c) {
                    push(offers, extensionName, params);
                    params = Object.create(null);
                    extensionName = undefined;
                }
                paramName = undefined;
                start = end = -1;
            } else {
                throw new SyntaxError(`Unexpected character at index ${i}`);
            }
        }
    }
    if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {
        throw new SyntaxError('Unexpected end of input');
    }
    if (end === -1) end = i;
    const token = header.slice(start, end);
    if (extensionName === undefined) {
        push(offers, token, params);
    } else {
        if (paramName === undefined) {
            push(params, token, true);
        } else if (mustUnescape) {
            push(params, paramName, token.replace(/\\/g, ''));
        } else {
            push(params, paramName, token);
        }
        push(offers, extensionName, params);
    }
    return offers;
}
/**
 * Builds the `Sec-WebSocket-Extensions` header field value.
 *
 * @param {Object} extensions The map of extensions and parameters to format
 * @return {String} A string representing the given object
 * @public
 */ function format(extensions) {
    return Object.keys(extensions).map((extension)=>{
        let configurations = extensions[extension];
        if (!Array.isArray(configurations)) configurations = [
            configurations
        ];
        return configurations.map((params)=>{
            return [
                extension
            ].concat(Object.keys(params).map((k)=>{
                let values = params[k];
                if (!Array.isArray(values)) values = [
                    values
                ];
                return values.map((v)=>v === true ? k : `${k}=${v}`).join('; ');
            })).join('; ');
        }).join(', ');
    }).join(', ');
}
module.exports = {
    format,
    parse
};
}}),
"[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/websocket.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/* eslint no-unused-vars: ["error", { "varsIgnorePattern": "^Duplex|Readable$", "caughtErrors": "none" }] */ 'use strict';
const EventEmitter = __turbopack_require__("[externals]/events [external] (events, cjs)");
const https = __turbopack_require__("[externals]/https [external] (https, cjs)");
const http = __turbopack_require__("[externals]/http [external] (http, cjs)");
const net = __turbopack_require__("[externals]/net [external] (net, cjs)");
const tls = __turbopack_require__("[externals]/tls [external] (tls, cjs)");
const { randomBytes, createHash } = __turbopack_require__("[externals]/crypto [external] (crypto, cjs)");
const { Duplex, Readable } = __turbopack_require__("[externals]/stream [external] (stream, cjs)");
const { URL } = __turbopack_require__("[externals]/url [external] (url, cjs)");
const PerMessageDeflate = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/permessage-deflate.js [app-route] (ecmascript)");
const Receiver = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/receiver.js [app-route] (ecmascript)");
const Sender = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/sender.js [app-route] (ecmascript)");
const { isBlob } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/validation.js [app-route] (ecmascript)");
const { BINARY_TYPES, EMPTY_BUFFER, GUID, kForOnEventAttribute, kListener, kStatusCode, kWebSocket, NOOP } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/constants.js [app-route] (ecmascript)");
const { EventTarget: { addEventListener, removeEventListener } } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/event-target.js [app-route] (ecmascript)");
const { format, parse } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/extension.js [app-route] (ecmascript)");
const { toBuffer } = __turbopack_require__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/buffer-util.js [app-route] (ecmascript)");
const closeTimeout = 30 * 1000;
const kAborted = Symbol('kAborted');
const protocolVersions = [
    8,
    13
];
const readyStates = [
    'CONNECTING',
    'OPEN',
    'CLOSING',
    'CLOSED'
];
const subprotocolRegex = /^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/;
/**
 * Class representing a WebSocket.
 *
 * @extends EventEmitter
 */ class WebSocket extends EventEmitter {
    /**
   * Create a new `WebSocket`.
   *
   * @param {(String|URL)} address The URL to which to connect
   * @param {(String|String[])} [protocols] The subprotocols
   * @param {Object} [options] Connection options
   */ constructor(address, protocols, options){
        super();
        this._binaryType = BINARY_TYPES[0];
        this._closeCode = 1006;
        this._closeFrameReceived = false;
        this._closeFrameSent = false;
        this._closeMessage = EMPTY_BUFFER;
        this._closeTimer = null;
        this._errorEmitted = false;
        this._extensions = {};
        this._paused = false;
        this._protocol = '';
        this._readyState = WebSocket.CONNECTING;
        this._receiver = null;
        this._sender = null;
        this._socket = null;
        if (address !== null) {
            this._bufferedAmount = 0;
            this._isServer = false;
            this._redirects = 0;
            if (protocols === undefined) {
                protocols = [];
            } else if (!Array.isArray(protocols)) {
                if (typeof protocols === 'object' && protocols !== null) {
                    options = protocols;
                    protocols = [];
                } else {
                    protocols = [
                        protocols
                    ];
                }
            }
            initAsClient(this, address, protocols, options);
        } else {
            this._autoPong = options.autoPong;
            this._isServer = true;
        }
    }
    /**
   * For historical reasons, the custom "nodebuffer" type is used by the default
   * instead of "blob".
   *
   * @type {String}
   */ get binaryType() {
        return this._binaryType;
    }
    set binaryType(type) {
        if (!BINARY_TYPES.includes(type)) return;
        this._binaryType = type;
        //
        // Allow to change `binaryType` on the fly.
        //
        if (this._receiver) this._receiver._binaryType = type;
    }
    /**
   * @type {Number}
   */ get bufferedAmount() {
        if (!this._socket) return this._bufferedAmount;
        return this._socket._writableState.length + this._sender._bufferedBytes;
    }
    /**
   * @type {String}
   */ get extensions() {
        return Object.keys(this._extensions).join();
    }
    /**
   * @type {Boolean}
   */ get isPaused() {
        return this._paused;
    }
    /**
   * @type {Function}
   */ /* istanbul ignore next */ get onclose() {
        return null;
    }
    /**
   * @type {Function}
   */ /* istanbul ignore next */ get onerror() {
        return null;
    }
    /**
   * @type {Function}
   */ /* istanbul ignore next */ get onopen() {
        return null;
    }
    /**
   * @type {Function}
   */ /* istanbul ignore next */ get onmessage() {
        return null;
    }
    /**
   * @type {String}
   */ get protocol() {
        return this._protocol;
    }
    /**
   * @type {Number}
   */ get readyState() {
        return this._readyState;
    }
    /**
   * @type {String}
   */ get url() {
        return this._url;
    }
    /**
   * Set up the socket and the internal resources.
   *
   * @param {Duplex} socket The network socket between the server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Object} options Options object
   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether
   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted
   *     multiple times in the same tick
   * @param {Function} [options.generateMask] The function used to generate the
   *     masking key
   * @param {Number} [options.maxPayload=0] The maximum allowed message size
   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or
   *     not to skip UTF-8 validation for text and close messages
   * @private
   */ setSocket(socket, head, options) {
        const receiver = new Receiver({
            allowSynchronousEvents: options.allowSynchronousEvents,
            binaryType: this.binaryType,
            extensions: this._extensions,
            isServer: this._isServer,
            maxPayload: options.maxPayload,
            skipUTF8Validation: options.skipUTF8Validation
        });
        const sender = new Sender(socket, this._extensions, options.generateMask);
        this._receiver = receiver;
        this._sender = sender;
        this._socket = socket;
        receiver[kWebSocket] = this;
        sender[kWebSocket] = this;
        socket[kWebSocket] = this;
        receiver.on('conclude', receiverOnConclude);
        receiver.on('drain', receiverOnDrain);
        receiver.on('error', receiverOnError);
        receiver.on('message', receiverOnMessage);
        receiver.on('ping', receiverOnPing);
        receiver.on('pong', receiverOnPong);
        sender.onerror = senderOnError;
        //
        // These methods may not be available if `socket` is just a `Duplex`.
        //
        if (socket.setTimeout) socket.setTimeout(0);
        if (socket.setNoDelay) socket.setNoDelay();
        if (head.length > 0) socket.unshift(head);
        socket.on('close', socketOnClose);
        socket.on('data', socketOnData);
        socket.on('end', socketOnEnd);
        socket.on('error', socketOnError);
        this._readyState = WebSocket.OPEN;
        this.emit('open');
    }
    /**
   * Emit the `'close'` event.
   *
   * @private
   */ emitClose() {
        if (!this._socket) {
            this._readyState = WebSocket.CLOSED;
            this.emit('close', this._closeCode, this._closeMessage);
            return;
        }
        if (this._extensions[PerMessageDeflate.extensionName]) {
            this._extensions[PerMessageDeflate.extensionName].cleanup();
        }
        this._receiver.removeAllListeners();
        this._readyState = WebSocket.CLOSED;
        this.emit('close', this._closeCode, this._closeMessage);
    }
    /**
   * Start a closing handshake.
   *
   *          +----------+   +-----------+   +----------+
   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -
   *    |     +----------+   +-----------+   +----------+     |
   *          +----------+   +-----------+         |
   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING
   *          +----------+   +-----------+   |
   *    |           |                        |   +---+        |
   *                +------------------------+-->|fin| - - - -
   *    |         +---+                      |   +---+
   *     - - - - -|fin|<---------------------+
   *              +---+
   *
   * @param {Number} [code] Status code explaining why the connection is closing
   * @param {(String|Buffer)} [data] The reason why the connection is
   *     closing
   * @public
   */ close(code, data) {
        if (this.readyState === WebSocket.CLOSED) return;
        if (this.readyState === WebSocket.CONNECTING) {
            const msg = 'WebSocket was closed before the connection was established';
            abortHandshake(this, this._req, msg);
            return;
        }
        if (this.readyState === WebSocket.CLOSING) {
            if (this._closeFrameSent && (this._closeFrameReceived || this._receiver._writableState.errorEmitted)) {
                this._socket.end();
            }
            return;
        }
        this._readyState = WebSocket.CLOSING;
        this._sender.close(code, data, !this._isServer, (err)=>{
            //
            // This error is handled by the `'error'` listener on the socket. We only
            // want to know if the close frame has been sent here.
            //
            if (err) return;
            this._closeFrameSent = true;
            if (this._closeFrameReceived || this._receiver._writableState.errorEmitted) {
                this._socket.end();
            }
        });
        setCloseTimer(this);
    }
    /**
   * Pause the socket.
   *
   * @public
   */ pause() {
        if (this.readyState === WebSocket.CONNECTING || this.readyState === WebSocket.CLOSED) {
            return;
        }
        this._paused = true;
        this._socket.pause();
    }
    /**
   * Send a ping.
   *
   * @param {*} [data] The data to send
   * @param {Boolean} [mask] Indicates whether or not to mask `data`
   * @param {Function} [cb] Callback which is executed when the ping is sent
   * @public
   */ ping(data, mask, cb) {
        if (this.readyState === WebSocket.CONNECTING) {
            throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');
        }
        if (typeof data === 'function') {
            cb = data;
            data = mask = undefined;
        } else if (typeof mask === 'function') {
            cb = mask;
            mask = undefined;
        }
        if (typeof data === 'number') data = data.toString();
        if (this.readyState !== WebSocket.OPEN) {
            sendAfterClose(this, data, cb);
            return;
        }
        if (mask === undefined) mask = !this._isServer;
        this._sender.ping(data || EMPTY_BUFFER, mask, cb);
    }
    /**
   * Send a pong.
   *
   * @param {*} [data] The data to send
   * @param {Boolean} [mask] Indicates whether or not to mask `data`
   * @param {Function} [cb] Callback which is executed when the pong is sent
   * @public
   */ pong(data, mask, cb) {
        if (this.readyState === WebSocket.CONNECTING) {
            throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');
        }
        if (typeof data === 'function') {
            cb = data;
            data = mask = undefined;
        } else if (typeof mask === 'function') {
            cb = mask;
            mask = undefined;
        }
        if (typeof data === 'number') data = data.toString();
        if (this.readyState !== WebSocket.OPEN) {
            sendAfterClose(this, data, cb);
            return;
        }
        if (mask === undefined) mask = !this._isServer;
        this._sender.pong(data || EMPTY_BUFFER, mask, cb);
    }
    /**
   * Resume the socket.
   *
   * @public
   */ resume() {
        if (this.readyState === WebSocket.CONNECTING || this.readyState === WebSocket.CLOSED) {
            return;
        }
        this._paused = false;
        if (!this._receiver._writableState.needDrain) this._socket.resume();
    }
    /**
   * Send a data message.
   *
   * @param {*} data The message to send
   * @param {Object} [options] Options object
   * @param {Boolean} [options.binary] Specifies whether `data` is binary or
   *     text
   * @param {Boolean} [options.compress] Specifies whether or not to compress
   *     `data`
   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the
   *     last one
   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback which is executed when data is written out
   * @public
   */ send(data, options, cb) {
        if (this.readyState === WebSocket.CONNECTING) {
            throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');
        }
        if (typeof options === 'function') {
            cb = options;
            options = {};
        }
        if (typeof data === 'number') data = data.toString();
        if (this.readyState !== WebSocket.OPEN) {
            sendAfterClose(this, data, cb);
            return;
        }
        const opts = {
            binary: typeof data !== 'string',
            mask: !this._isServer,
            compress: true,
            fin: true,
            ...options
        };
        if (!this._extensions[PerMessageDeflate.extensionName]) {
            opts.compress = false;
        }
        this._sender.send(data || EMPTY_BUFFER, opts, cb);
    }
    /**
   * Forcibly close the connection.
   *
   * @public
   */ terminate() {
        if (this.readyState === WebSocket.CLOSED) return;
        if (this.readyState === WebSocket.CONNECTING) {
            const msg = 'WebSocket was closed before the connection was established';
            abortHandshake(this, this._req, msg);
            return;
        }
        if (this._socket) {
            this._readyState = WebSocket.CLOSING;
            this._socket.destroy();
        }
    }
}
/**
 * @constant {Number} CONNECTING
 * @memberof WebSocket
 */ Object.defineProperty(WebSocket, 'CONNECTING', {
    enumerable: true,
    value: readyStates.indexOf('CONNECTING')
});
/**
 * @constant {Number} CONNECTING
 * @memberof WebSocket.prototype
 */ Object.defineProperty(WebSocket.prototype, 'CONNECTING', {
    enumerable: true,
    value: readyStates.indexOf('CONNECTING')
});
/**
 * @constant {Number} OPEN
 * @memberof WebSocket
 */ Object.defineProperty(WebSocket, 'OPEN', {
    enumerable: true,
    value: readyStates.indexOf('OPEN')
});
/**
 * @constant {Number} OPEN
 * @memberof WebSocket.prototype
 */ Object.defineProperty(WebSocket.prototype, 'OPEN', {
    enumerable: true,
    value: readyStates.indexOf('OPEN')
});
/**
 * @constant {Number} CLOSING
 * @memberof WebSocket
 */ Object.defineProperty(WebSocket, 'CLOSING', {
    enumerable: true,
    value: readyStates.indexOf('CLOSING')
});
/**
 * @constant {Number} CLOSING
 * @memberof WebSocket.prototype
 */ Object.defineProperty(WebSocket.prototype, 'CLOSING', {
    enumerable: true,
    value: readyStates.indexOf('CLOSING')
});
/**
 * @constant {Number} CLOSED
 * @memberof WebSocket
 */ Object.defineProperty(WebSocket, 'CLOSED', {
    enumerable: true,
    value: readyStates.indexOf('CLOSED')
});
/**
 * @constant {Number} CLOSED
 * @memberof WebSocket.prototype
 */ Object.defineProperty(WebSocket.prototype, 'CLOSED', {
    enumerable: true,
    value: readyStates.indexOf('CLOSED')
});
[
    'binaryType',
    'bufferedAmount',
    'extensions',
    'isPaused',
    'protocol',
    'readyState',
    'url'
].forEach((property)=>{
    Object.defineProperty(WebSocket.prototype, property, {
        enumerable: true
    });
});
//
// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.
// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface
//
[
    'open',
    'error',
    'close',
    'message'
].forEach((method)=>{
    Object.defineProperty(WebSocket.prototype, `on${method}`, {
        enumerable: true,
        get () {
            for (const listener of this.listeners(method)){
                if (listener[kForOnEventAttribute]) return listener[kListener];
            }
            return null;
        },
        set (handler) {
            for (const listener of this.listeners(method)){
                if (listener[kForOnEventAttribute]) {
                    this.removeListener(method, listener);
                    break;
                }
            }
            if (typeof handler !== 'function') return;
            this.addEventListener(method, handler, {
                [kForOnEventAttribute]: true
            });
        }
    });
});
WebSocket.prototype.addEventListener = addEventListener;
WebSocket.prototype.removeEventListener = removeEventListener;
module.exports = WebSocket;
/**
 * Initialize a WebSocket client.
 *
 * @param {WebSocket} websocket The client to initialize
 * @param {(String|URL)} address The URL to which to connect
 * @param {Array} protocols The subprotocols
 * @param {Object} [options] Connection options
 * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any
 *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple
 *     times in the same tick
 * @param {Boolean} [options.autoPong=true] Specifies whether or not to
 *     automatically send a pong in response to a ping
 * @param {Function} [options.finishRequest] A function which can be used to
 *     customize the headers of each http request before it is sent
 * @param {Boolean} [options.followRedirects=false] Whether or not to follow
 *     redirects
 * @param {Function} [options.generateMask] The function used to generate the
 *     masking key
 * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the
 *     handshake request
 * @param {Number} [options.maxPayload=104857600] The maximum allowed message
 *     size
 * @param {Number} [options.maxRedirects=10] The maximum number of redirects
 *     allowed
 * @param {String} [options.origin] Value of the `Origin` or
 *     `Sec-WebSocket-Origin` header
 * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable
 *     permessage-deflate
 * @param {Number} [options.protocolVersion=13] Value of the
 *     `Sec-WebSocket-Version` header
 * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or
 *     not to skip UTF-8 validation for text and close messages
 * @private
 */ function initAsClient(websocket, address, protocols, options) {
    const opts = {
        allowSynchronousEvents: true,
        autoPong: true,
        protocolVersion: protocolVersions[1],
        maxPayload: 100 * 1024 * 1024,
        skipUTF8Validation: false,
        perMessageDeflate: true,
        followRedirects: false,
        maxRedirects: 10,
        ...options,
        socketPath: undefined,
        hostname: undefined,
        protocol: undefined,
        timeout: undefined,
        method: 'GET',
        host: undefined,
        path: undefined,
        port: undefined
    };
    websocket._autoPong = opts.autoPong;
    if (!protocolVersions.includes(opts.protocolVersion)) {
        throw new RangeError(`Unsupported protocol version: ${opts.protocolVersion} ` + `(supported versions: ${protocolVersions.join(', ')})`);
    }
    let parsedUrl;
    if (address instanceof URL) {
        parsedUrl = address;
    } else {
        try {
            parsedUrl = new URL(address);
        } catch (e) {
            throw new SyntaxError(`Invalid URL: ${address}`);
        }
    }
    if (parsedUrl.protocol === 'http:') {
        parsedUrl.protocol = 'ws:';
    } else if (parsedUrl.protocol === 'https:') {
        parsedUrl.protocol = 'wss:';
    }
    websocket._url = parsedUrl.href;
    const isSecure = parsedUrl.protocol === 'wss:';
    const isIpcUrl = parsedUrl.protocol === 'ws+unix:';
    let invalidUrlMessage;
    if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {
        invalidUrlMessage = 'The URL\'s protocol must be one of "ws:", "wss:", ' + '"http:", "https", or "ws+unix:"';
    } else if (isIpcUrl && !parsedUrl.pathname) {
        invalidUrlMessage = "The URL's pathname is empty";
    } else if (parsedUrl.hash) {
        invalidUrlMessage = 'The URL contains a fragment identifier';
    }
    if (invalidUrlMessage) {
        const err = new SyntaxError(invalidUrlMessage);
        if (websocket._redirects === 0) {
            throw err;
        } else {
            emitErrorAndClose(websocket, err);
            return;
        }
    }
    const defaultPort = isSecure ? 443 : 80;
    const key = randomBytes(16).toString('base64');
    const request = isSecure ? https.request : http.request;
    const protocolSet = new Set();
    let perMessageDeflate;
    opts.createConnection = opts.createConnection || (isSecure ? tlsConnect : netConnect);
    opts.defaultPort = opts.defaultPort || defaultPort;
    opts.port = parsedUrl.port || defaultPort;
    opts.host = parsedUrl.hostname.startsWith('[') ? parsedUrl.hostname.slice(1, -1) : parsedUrl.hostname;
    opts.headers = {
        ...opts.headers,
        'Sec-WebSocket-Version': opts.protocolVersion,
        'Sec-WebSocket-Key': key,
        Connection: 'Upgrade',
        Upgrade: 'websocket'
    };
    opts.path = parsedUrl.pathname + parsedUrl.search;
    opts.timeout = opts.handshakeTimeout;
    if (opts.perMessageDeflate) {
        perMessageDeflate = new PerMessageDeflate(opts.perMessageDeflate !== true ? opts.perMessageDeflate : {}, false, opts.maxPayload);
        opts.headers['Sec-WebSocket-Extensions'] = format({
            [PerMessageDeflate.extensionName]: perMessageDeflate.offer()
        });
    }
    if (protocols.length) {
        for (const protocol of protocols){
            if (typeof protocol !== 'string' || !subprotocolRegex.test(protocol) || protocolSet.has(protocol)) {
                throw new SyntaxError('An invalid or duplicated subprotocol was specified');
            }
            protocolSet.add(protocol);
        }
        opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');
    }
    if (opts.origin) {
        if (opts.protocolVersion < 13) {
            opts.headers['Sec-WebSocket-Origin'] = opts.origin;
        } else {
            opts.headers.Origin = opts.origin;
        }
    }
    if (parsedUrl.username || parsedUrl.password) {
        opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;
    }
    if (isIpcUrl) {
        const parts = opts.path.split(':');
        opts.socketPath = parts[0];
        opts.path = parts[1];
    }
    let req;
    if (opts.followRedirects) {
        if (websocket._redirects === 0) {
            websocket._originalIpc = isIpcUrl;
            websocket._originalSecure = isSecure;
            websocket._originalHostOrSocketPath = isIpcUrl ? opts.socketPath : parsedUrl.host;
            const headers = options && options.headers;
            //
            // Shallow copy the user provided options so that headers can be changed
            // without mutating the original object.
            //
            options = {
                ...options,
                headers: {}
            };
            if (headers) {
                for (const [key, value] of Object.entries(headers)){
                    options.headers[key.toLowerCase()] = value;
                }
            }
        } else if (websocket.listenerCount('redirect') === 0) {
            const isSameHost = isIpcUrl ? websocket._originalIpc ? opts.socketPath === websocket._originalHostOrSocketPath : false : websocket._originalIpc ? false : parsedUrl.host === websocket._originalHostOrSocketPath;
            if (!isSameHost || websocket._originalSecure && !isSecure) {
                //
                // Match curl 7.77.0 behavior and drop the following headers. These
                // headers are also dropped when following a redirect to a subdomain.
                //
                delete opts.headers.authorization;
                delete opts.headers.cookie;
                if (!isSameHost) delete opts.headers.host;
                opts.auth = undefined;
            }
        }
        //
        // Match curl 7.77.0 behavior and make the first `Authorization` header win.
        // If the `Authorization` header is set, then there is nothing to do as it
        // will take precedence.
        //
        if (opts.auth && !options.headers.authorization) {
            options.headers.authorization = 'Basic ' + Buffer.from(opts.auth).toString('base64');
        }
        req = websocket._req = request(opts);
        if (websocket._redirects) {
            //
            // Unlike what is done for the `'upgrade'` event, no early exit is
            // triggered here if the user calls `websocket.close()` or
            // `websocket.terminate()` from a listener of the `'redirect'` event. This
            // is because the user can also call `request.destroy()` with an error
            // before calling `websocket.close()` or `websocket.terminate()` and this
            // would result in an error being emitted on the `request` object with no
            // `'error'` event listeners attached.
            //
            websocket.emit('redirect', websocket.url, req);
        }
    } else {
        req = websocket._req = request(opts);
    }
    if (opts.timeout) {
        req.on('timeout', ()=>{
            abortHandshake(websocket, req, 'Opening handshake has timed out');
        });
    }
    req.on('error', (err)=>{
        if (req === null || req[kAborted]) return;
        req = websocket._req = null;
        emitErrorAndClose(websocket, err);
    });
    req.on('response', (res)=>{
        const location = res.headers.location;
        const statusCode = res.statusCode;
        if (location && opts.followRedirects && statusCode >= 300 && statusCode < 400) {
            if (++websocket._redirects > opts.maxRedirects) {
                abortHandshake(websocket, req, 'Maximum redirects exceeded');
                return;
            }
            req.abort();
            let addr;
            try {
                addr = new URL(location, address);
            } catch (e) {
                const err = new SyntaxError(`Invalid URL: ${location}`);
                emitErrorAndClose(websocket, err);
                return;
            }
            initAsClient(websocket, addr, protocols, options);
        } else if (!websocket.emit('unexpected-response', req, res)) {
            abortHandshake(websocket, req, `Unexpected server response: ${res.statusCode}`);
        }
    });
    req.on('upgrade', (res, socket, head)=>{
        websocket.emit('upgrade', res);
        //
        // The user may have closed the connection from a listener of the
        // `'upgrade'` event.
        //
        if (websocket.readyState !== WebSocket.CONNECTING) return;
        req = websocket._req = null;
        const upgrade = res.headers.upgrade;
        if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {
            abortHandshake(websocket, socket, 'Invalid Upgrade header');
            return;
        }
        const digest = createHash('sha1').update(key + GUID).digest('base64');
        if (res.headers['sec-websocket-accept'] !== digest) {
            abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');
            return;
        }
        const serverProt = res.headers['sec-websocket-protocol'];
        let protError;
        if (serverProt !== undefined) {
            if (!protocolSet.size) {
                protError = 'Server sent a subprotocol but none was requested';
            } else if (!protocolSet.has(serverProt)) {
                protError = 'Server sent an invalid subprotocol';
            }
        } else if (protocolSet.size) {
            protError = 'Server sent no subprotocol';
        }
        if (protError) {
            abortHandshake(websocket, socket, protError);
            return;
        }
        if (serverProt) websocket._protocol = serverProt;
        const secWebSocketExtensions = res.headers['sec-websocket-extensions'];
        if (secWebSocketExtensions !== undefined) {
            if (!perMessageDeflate) {
                const message = 'Server sent a Sec-WebSocket-Extensions header but no extension ' + 'was requested';
                abortHandshake(websocket, socket, message);
                return;
            }
            let extensions;
            try {
                extensions = parse(secWebSocketExtensions);
            } catch (err) {
                const message = 'Invalid Sec-WebSocket-Extensions header';
                abortHandshake(websocket, socket, message);
                return;
            }
            const extensionNames = Object.keys(extensions);
            if (extensionNames.length !== 1 || extensionNames[0] !== PerMessageDeflate.extensionName) {
                const message = 'Server indicated an extension that was not requested';
                abortHandshake(websocket, socket, message);
                return;
            }
            try {
                perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);
            } catch (err) {
                const message = 'Invalid Sec-WebSocket-Extensions header';
                abortHandshake(websocket, socket, message);
                return;
            }
            websocket._extensions[PerMessageDeflate.extensionName] = perMessageDeflate;
        }
        websocket.setSocket(socket, head, {
            allowSynchronousEvents: opts.allowSynchronousEvents,
            generateMask: opts.generateMask,
            maxPayload: opts.maxPayload,
            skipUTF8Validation: opts.skipUTF8Validation
        });
    });
    if (opts.finishRequest) {
        opts.finishRequest(req, websocket);
    } else {
        req.end();
    }
}
/**
 * Emit the `'error'` and `'close'` events.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {Error} The error to emit
 * @private
 */ function emitErrorAndClose(websocket, err) {
    websocket._readyState = WebSocket.CLOSING;
    //
    // The following assignment is practically useless and is done only for
    // consistency.
    //
    websocket._errorEmitted = true;
    websocket.emit('error', err);
    websocket.emitClose();
}
/**
 * Create a `net.Socket` and initiate a connection.
 *
 * @param {Object} options Connection options
 * @return {net.Socket} The newly created socket used to start the connection
 * @private
 */ function netConnect(options) {
    options.path = options.socketPath;
    return net.connect(options);
}
/**
 * Create a `tls.TLSSocket` and initiate a connection.
 *
 * @param {Object} options Connection options
 * @return {tls.TLSSocket} The newly created socket used to start the connection
 * @private
 */ function tlsConnect(options) {
    options.path = undefined;
    if (!options.servername && options.servername !== '') {
        options.servername = net.isIP(options.host) ? '' : options.host;
    }
    return tls.connect(options);
}
/**
 * Abort the handshake and emit an error.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to
 *     abort or the socket to destroy
 * @param {String} message The error message
 * @private
 */ function abortHandshake(websocket, stream, message) {
    websocket._readyState = WebSocket.CLOSING;
    const err = new Error(message);
    Error.captureStackTrace(err, abortHandshake);
    if (stream.setHeader) {
        stream[kAborted] = true;
        stream.abort();
        if (stream.socket && !stream.socket.destroyed) {
            //
            // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if
            // called after the request completed. See
            // https://github.com/websockets/ws/issues/1869.
            //
            stream.socket.destroy();
        }
        process.nextTick(emitErrorAndClose, websocket, err);
    } else {
        stream.destroy(err);
        stream.once('error', websocket.emit.bind(websocket, 'error'));
        stream.once('close', websocket.emitClose.bind(websocket));
    }
}
/**
 * Handle cases where the `ping()`, `pong()`, or `send()` methods are called
 * when the `readyState` attribute is `CLOSING` or `CLOSED`.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {*} [data] The data to send
 * @param {Function} [cb] Callback
 * @private
 */ function sendAfterClose(websocket, data, cb) {
    if (data) {
        const length = isBlob(data) ? data.size : toBuffer(data).length;
        //
        // The `_bufferedAmount` property is used only when the peer is a client and
        // the opening handshake fails. Under these circumstances, in fact, the
        // `setSocket()` method is not called, so the `_socket` and `_sender`
        // properties are set to `null`.
        //
        if (websocket._socket) websocket._sender._bufferedBytes += length;
        else websocket._bufferedAmount += length;
    }
    if (cb) {
        const err = new Error(`WebSocket is not open: readyState ${websocket.readyState} ` + `(${readyStates[websocket.readyState]})`);
        process.nextTick(cb, err);
    }
}
/**
 * The listener of the `Receiver` `'conclude'` event.
 *
 * @param {Number} code The status code
 * @param {Buffer} reason The reason for closing
 * @private
 */ function receiverOnConclude(code, reason) {
    const websocket = this[kWebSocket];
    websocket._closeFrameReceived = true;
    websocket._closeMessage = reason;
    websocket._closeCode = code;
    if (websocket._socket[kWebSocket] === undefined) return;
    websocket._socket.removeListener('data', socketOnData);
    process.nextTick(resume, websocket._socket);
    if (code === 1005) websocket.close();
    else websocket.close(code, reason);
}
/**
 * The listener of the `Receiver` `'drain'` event.
 *
 * @private
 */ function receiverOnDrain() {
    const websocket = this[kWebSocket];
    if (!websocket.isPaused) websocket._socket.resume();
}
/**
 * The listener of the `Receiver` `'error'` event.
 *
 * @param {(RangeError|Error)} err The emitted error
 * @private
 */ function receiverOnError(err) {
    const websocket = this[kWebSocket];
    if (websocket._socket[kWebSocket] !== undefined) {
        websocket._socket.removeListener('data', socketOnData);
        //
        // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See
        // https://github.com/websockets/ws/issues/1940.
        //
        process.nextTick(resume, websocket._socket);
        websocket.close(err[kStatusCode]);
    }
    if (!websocket._errorEmitted) {
        websocket._errorEmitted = true;
        websocket.emit('error', err);
    }
}
/**
 * The listener of the `Receiver` `'finish'` event.
 *
 * @private
 */ function receiverOnFinish() {
    this[kWebSocket].emitClose();
}
/**
 * The listener of the `Receiver` `'message'` event.
 *
 * @param {Buffer|ArrayBuffer|Buffer[])} data The message
 * @param {Boolean} isBinary Specifies whether the message is binary or not
 * @private
 */ function receiverOnMessage(data, isBinary) {
    this[kWebSocket].emit('message', data, isBinary);
}
/**
 * The listener of the `Receiver` `'ping'` event.
 *
 * @param {Buffer} data The data included in the ping frame
 * @private
 */ function receiverOnPing(data) {
    const websocket = this[kWebSocket];
    if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);
    websocket.emit('ping', data);
}
/**
 * The listener of the `Receiver` `'pong'` event.
 *
 * @param {Buffer} data The data included in the pong frame
 * @private
 */ function receiverOnPong(data) {
    this[kWebSocket].emit('pong', data);
}
/**
 * Resume a readable stream
 *
 * @param {Readable} stream The readable stream
 * @private
 */ function resume(stream) {
    stream.resume();
}
/**
 * The `Sender` error event handler.
 *
 * @param {Error} The error
 * @private
 */ function senderOnError(err) {
    const websocket = this[kWebSocket];
    if (websocket.readyState === WebSocket.CLOSED) return;
    if (websocket.readyState === WebSocket.OPEN) {
        websocket._readyState = WebSocket.CLOSING;
        setCloseTimer(websocket);
    }
    //
    // `socket.end()` is used instead of `socket.destroy()` to allow the other
    // peer to finish sending queued data. There is no need to set a timer here
    // because `CLOSING` means that it is already set or not needed.
    //
    this._socket.end();
    if (!websocket._errorEmitted) {
        websocket._errorEmitted = true;
        websocket.emit('error', err);
    }
}
/**
 * Set a timer to destroy the underlying raw socket of a WebSocket.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @private
 */ function setCloseTimer(websocket) {
    websocket._closeTimer = setTimeout(websocket._socket.destroy.bind(websocket._socket), closeTimeout);
}
/**
 * The listener of the socket `'close'` event.
 *
 * @private
 */ function socketOnClose() {
    const websocket = this[kWebSocket];
    this.removeListener('close', socketOnClose);
    this.removeListener('data', socketOnData);
    this.removeListener('end', socketOnEnd);
    websocket._readyState = WebSocket.CLOSING;
    let chunk;
    //
    // The close frame might not have been received or the `'end'` event emitted,
    // for example, if the socket was destroyed due to an error. Ensure that the
    // `receiver` stream is closed after writing any remaining buffered data to
    // it. If the readable side of the socket is in flowing mode then there is no
    // buffered data as everything has been already written and `readable.read()`
    // will return `null`. If instead, the socket is paused, any possible buffered
    // data will be read as a single chunk.
    //
    if (!this._readableState.endEmitted && !websocket._closeFrameReceived && !websocket._receiver._writableState.errorEmitted && (chunk = websocket._socket.read()) !== null) {
        websocket._receiver.write(chunk);
    }
    websocket._receiver.end();
    this[kWebSocket] = undefined;
    clearTimeout(websocket._closeTimer);
    if (websocket._receiver._writableState.finished || websocket._receiver._writableState.errorEmitted) {
        websocket.emitClose();
    } else {
        websocket._receiver.on('error', receiverOnFinish);
        websocket._receiver.on('finish', receiverOnFinish);
    }
}
/**
 * The listener of the socket `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */ function socketOnData(chunk) {
    if (!this[kWebSocket]._receiver.write(chunk)) {
        this.pause();
    }
}
/**
 * The listener of the socket `'end'` event.
 *
 * @private
 */ function socketOnEnd() {
    const websocket = this[kWebSocket];
    websocket._readyState = WebSocket.CLOSING;
    websocket._receiver.end();
    this.end();
}
/**
 * The listener of the socket `'error'` event.
 *
 * @private
 */ function socketOnError() {
    const websocket = this[kWebSocket];
    this.removeListener('error', socketOnError);
    this.on('error', NOOP);
    if (websocket) {
        websocket._readyState = WebSocket.CLOSING;
        this.destroy();
    }
}
}}),
"[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/wrapper.mjs [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$ws$40$8$2e$18$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f$ws$2f$lib$2f$websocket$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/websocket.js [app-route] (ecmascript)");
;
;
;
;
;
;
const __TURBOPACK__default__export__ = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$ws$40$8$2e$18$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f$ws$2f$lib$2f$websocket$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"];
}}),
"[project]/node_modules/.pnpm/utf-8-validate@5.0.10/node_modules/utf-8-validate/fallback.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/**
 * Checks if a given buffer contains only correct UTF-8.
 * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by
 * Markus Kuhn.
 *
 * @param {Buffer} buf The buffer to check
 * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`
 * @public
 */ function isValidUTF8(buf) {
    const len = buf.length;
    let i = 0;
    while(i < len){
        if ((buf[i] & 0x80) === 0x00) {
            i++;
        } else if ((buf[i] & 0xe0) === 0xc0) {
            if (i + 1 === len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i] & 0xfe) === 0xc0 // overlong
            ) {
                return false;
            }
            i += 2;
        } else if ((buf[i] & 0xf0) === 0xe0) {
            if (i + 2 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 || // overlong
            buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0 // surrogate (U+D800 - U+DFFF)
            ) {
                return false;
            }
            i += 3;
        } else if ((buf[i] & 0xf8) === 0xf0) {
            if (i + 3 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || (buf[i + 3] & 0xc0) !== 0x80 || buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 || // overlong
            buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4 // > U+10FFFF
            ) {
                return false;
            }
            i += 4;
        } else {
            return false;
        }
    }
    return true;
}
module.exports = isValidUTF8;
}}),
"[project]/node_modules/.pnpm/utf-8-validate@5.0.10/node_modules/utf-8-validate/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
try {
    module.exports = __turbopack_require__("[project]/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/index.js [app-route] (ecmascript)")(__dirname);
} catch (e) {
    module.exports = __turbopack_require__("[project]/node_modules/.pnpm/utf-8-validate@5.0.10/node_modules/utf-8-validate/fallback.js [app-route] (ecmascript)");
}
}}),
"[project]/node_modules/.pnpm/@polkadot+x-ws@13.4.3_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@polkadot/x-ws/node.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "WebSocket": (()=>WebSocket)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+x-global@13.4.3/node_modules/@polkadot/x-global/index.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$ws$40$8$2e$18$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f$ws$2f$wrapper$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/ws@8.18.1_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/wrapper.mjs [app-route] (ecmascript) <locals>");
;
;
;
const WebSocket = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$x$2d$global$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["extractGlobal"])('WebSocket', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$ws$40$8$2e$18$2e$1_bufferutil$40$4$2e$0$2e$9_utf$2d$8$2d$validate$40$5$2e$0$2e$10$2f$node_modules$2f$ws$2f$wrapper$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["default"]);
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/xcm.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "XCM_MAPPINGS": (()=>XCM_MAPPINGS),
    "mapXcmTypes": (()=>mapXcmTypes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/object/spread.js [app-route] (ecmascript)");
;
const XCM_MAPPINGS = [
    'AssetInstance',
    'Fungibility',
    'Junction',
    'Junctions',
    'MultiAsset',
    'MultiAssetFilter',
    'MultiLocation',
    'Response',
    'WildFungibility',
    'WildMultiAsset',
    'Xcm',
    'XcmError'
];
function mapXcmTypes(version) {
    return XCM_MAPPINGS.reduce((all, key)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["objectSpread"])(all, {
            [key]: `${key}${version}`
        }), {});
}
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/types/types.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "TypeDefInfo": (()=>TypeDefInfo)
});
var TypeDefInfo;
(function(TypeDefInfo) {
    TypeDefInfo[TypeDefInfo["BTreeMap"] = 0] = "BTreeMap";
    TypeDefInfo[TypeDefInfo["BTreeSet"] = 1] = "BTreeSet";
    TypeDefInfo[TypeDefInfo["Compact"] = 2] = "Compact";
    TypeDefInfo[TypeDefInfo["DoNotConstruct"] = 3] = "DoNotConstruct";
    TypeDefInfo[TypeDefInfo["Enum"] = 4] = "Enum";
    TypeDefInfo[TypeDefInfo["HashMap"] = 5] = "HashMap";
    TypeDefInfo[TypeDefInfo["Int"] = 6] = "Int";
    TypeDefInfo[TypeDefInfo["Linkage"] = 7] = "Linkage";
    TypeDefInfo[TypeDefInfo["Null"] = 8] = "Null";
    TypeDefInfo[TypeDefInfo["Option"] = 9] = "Option";
    TypeDefInfo[TypeDefInfo["Plain"] = 10] = "Plain";
    TypeDefInfo[TypeDefInfo["Range"] = 11] = "Range";
    TypeDefInfo[TypeDefInfo["RangeInclusive"] = 12] = "RangeInclusive";
    TypeDefInfo[TypeDefInfo["Result"] = 13] = "Result";
    TypeDefInfo[TypeDefInfo["Set"] = 14] = "Set";
    TypeDefInfo[TypeDefInfo["Si"] = 15] = "Si";
    TypeDefInfo[TypeDefInfo["Struct"] = 16] = "Struct";
    TypeDefInfo[TypeDefInfo["Tuple"] = 17] = "Tuple";
    TypeDefInfo[TypeDefInfo["UInt"] = 18] = "UInt";
    TypeDefInfo[TypeDefInfo["Vec"] = 19] = "Vec";
    TypeDefInfo[TypeDefInfo["VecFixed"] = 20] = "VecFixed";
    TypeDefInfo[TypeDefInfo["WrapperKeepOpaque"] = 21] = "WrapperKeepOpaque";
    TypeDefInfo[TypeDefInfo["WrapperOpaque"] = 22] = "WrapperOpaque";
})(TypeDefInfo || (TypeDefInfo = {}));
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/typeSplit.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "typeSplit": (()=>typeSplit)
});
function typeSplit(type) {
    const result = [];
    // these are the depths of the various tokens: <, [, {, (
    let c = 0;
    let f = 0;
    let s = 0;
    let t = 0;
    // current start position
    let start = 0;
    for(let i = 0, count = type.length; i < count; i++){
        switch(type[i]){
            // if we are not nested, add the type
            case ',':
                {
                    if (!(c || f || s || t)) {
                        result.push(type.substring(start, i).trim());
                        start = i + 1;
                    }
                    break;
                }
            // adjust compact/vec (and friends) depth
            case '<':
                c++;
                break;
            case '>':
                c--;
                break;
            // adjust fixed vec depths
            case '[':
                f++;
                break;
            case ']':
                f--;
                break;
            // adjust struct depth
            case '{':
                s++;
                break;
            case '}':
                s--;
                break;
            // adjust tuple depth
            case '(':
                t++;
                break;
            case ')':
                t--;
                break;
        }
    }
    // ensure we have all the terminators taken care of
    if (c || f || s || t) {
        throw new Error(`Invalid definition (missing terminators) found in ${type}`);
    }
    // the final leg of the journey
    result.push(type.substring(start, type.length).trim());
    return result;
}
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/getTypeDef.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getTypeDef": (()=>getTypeDef)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/string.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/stringify.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/number.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/types/types.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/object/spread.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$typeSplit$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/typeSplit.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sanitize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/utils/sanitize.js [app-route] (ecmascript)");
;
;
;
;
const KNOWN_INTERNALS = [
    '_alias',
    '_fallback'
];
function getTypeString(typeOrObj) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isString"])(typeOrObj) ? typeOrObj.toString() : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(typeOrObj);
}
function isRustEnum(details) {
    const values = Object.values(details);
    if (values.some((v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isNumber"])(v))) {
        if (!values.every((v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isNumber"])(v) && v >= 0 && v <= 255)) {
            throw new Error('Invalid number-indexed enum definition');
        }
        return false;
    }
    return true;
}
function _decodeEnum(value, details, count, fallbackType) {
    value.info = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Enum;
    value.fallbackType = fallbackType;
    // not as pretty, but remain compatible with oo7 for both struct and Array types
    if (Array.isArray(details)) {
        value.sub = details.map((name, index)=>({
                index,
                info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
                name,
                type: 'Null'
            }));
    } else if (isRustEnum(details)) {
        value.sub = Object.entries(details).map(([name, typeOrObj], index)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["objectSpread"])({}, getTypeDef(getTypeString(typeOrObj || 'Null'), {
                name
            }, count), {
                index
            }));
    } else {
        value.sub = Object.entries(details).map(([name, index])=>({
                index,
                info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
                name,
                type: 'Null'
            }));
    }
    return value;
}
function _decodeSet(value, details, fallbackType) {
    value.info = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Set;
    value.fallbackType = fallbackType;
    value.length = details._bitLength;
    value.sub = Object.entries(details).filter(([name])=>!name.startsWith('_')).map(([name, index])=>({
            index,
            info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
            name,
            type: 'Null'
        }));
    return value;
}
function _decodeStruct(value, type, _, count) {
    const parsed = JSON.parse(type);
    const keys = Object.keys(parsed);
    if (parsed._enum) {
        return _decodeEnum(value, parsed._enum, count, parsed._fallback);
    } else if (parsed._set) {
        return _decodeSet(value, parsed._set, parsed._fallback);
    }
    value.alias = parsed._alias ? new Map(Object.entries(parsed._alias)) : undefined;
    value.fallbackType = parsed._fallback;
    value.sub = keys.filter((name)=>!KNOWN_INTERNALS.includes(name)).map((name)=>getTypeDef(getTypeString(parsed[name]), {
            name
        }, count));
    return value;
}
function _decodeFixedVec(value, type, _, count) {
    const max = type.length - 1;
    let index = -1;
    let inner = 0;
    for(let i = 1; i < max && index === -1; i++){
        switch(type[i]){
            case ';':
                {
                    if (inner === 0) {
                        index = i;
                    }
                    break;
                }
            case '[':
            case '(':
            case '<':
                inner++;
                break;
            case ']':
            case ')':
            case '>':
                inner--;
                break;
        }
    }
    if (index === -1) {
        throw new Error(`${type}: Unable to extract location of ';'`);
    }
    const vecType = type.substring(1, index);
    const [strLength, displayName] = type.substring(index + 1, max).split(';');
    const length = parseInt(strLength.trim(), 10);
    if (length > 2048) {
        throw new Error(`${type}: Only support for [Type; <length>], where length <= 2048`);
    }
    value.displayName = displayName;
    value.length = length;
    value.sub = getTypeDef(vecType, {}, count);
    return value;
}
function _decodeTuple(value, _, subType, count) {
    value.sub = subType.length === 0 ? [] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$typeSplit$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["typeSplit"])(subType).map((inner)=>getTypeDef(inner, {}, count));
    return value;
}
function _decodeAnyInt(value, type, _, clazz) {
    const [strLength, displayName] = type.substring(clazz.length + 1, type.length - 1).split(',');
    const length = parseInt(strLength.trim(), 10);
    if (length > 8192 || length % 8) {
        throw new Error(`${type}: Only support for ${clazz}<bitLength>, where length <= 8192 and a power of 8, found ${length}`);
    }
    value.displayName = displayName;
    value.length = length;
    return value;
}
function _decodeInt(value, type, subType) {
    return _decodeAnyInt(value, type, subType, 'Int');
}
function _decodeUInt(value, type, subType) {
    return _decodeAnyInt(value, type, subType, 'UInt');
}
function _decodeDoNotConstruct(value, type, _) {
    const NAME_LENGTH = 'DoNotConstruct'.length;
    value.displayName = type.substring(NAME_LENGTH + 1, type.length - 1);
    return value;
}
function hasWrapper(type, [start, end]) {
    return type.startsWith(start) && type.slice(-1 * end.length) === end;
}
const nestedExtraction = [
    [
        '[',
        ']',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].VecFixed,
        _decodeFixedVec
    ],
    [
        '{',
        '}',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Struct,
        _decodeStruct
    ],
    [
        '(',
        ')',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Tuple,
        _decodeTuple
    ],
    // the inner for these are the same as tuple, multiple values
    [
        'BTreeMap<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeMap,
        _decodeTuple
    ],
    [
        'HashMap<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].HashMap,
        _decodeTuple
    ],
    [
        'Int<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Int,
        _decodeInt
    ],
    [
        'Result<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Result,
        _decodeTuple
    ],
    [
        'UInt<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].UInt,
        _decodeUInt
    ],
    [
        'DoNotConstruct<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].DoNotConstruct,
        _decodeDoNotConstruct
    ]
];
const wrappedExtraction = [
    [
        'BTreeSet<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeSet
    ],
    [
        'Compact<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Compact
    ],
    [
        'Linkage<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Linkage
    ],
    [
        'Opaque<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperOpaque
    ],
    [
        'Option<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Option
    ],
    [
        'Range<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Range
    ],
    [
        'RangeInclusive<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].RangeInclusive
    ],
    [
        'Vec<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Vec
    ],
    [
        'WrapperKeepOpaque<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperKeepOpaque
    ],
    [
        'WrapperOpaque<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperOpaque
    ]
];
function extractSubType(type, [start, end]) {
    return type.substring(start.length, type.length - end.length);
}
function getTypeDef(_type, { displayName, name } = {}, count = 0) {
    // create the type via Type, allowing types to be sanitized
    const type = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sanitize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["sanitize"])(_type);
    const value = {
        displayName,
        info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
        name,
        type
    };
    if (++count > 64) {
        throw new Error('getTypeDef: Maximum nested limit reached');
    }
    const nested = nestedExtraction.find((nested)=>hasWrapper(type, nested));
    if (nested) {
        value.info = nested[2];
        return nested[3](value, type, extractSubType(type, nested), count);
    }
    const wrapped = wrappedExtraction.find((wrapped)=>hasWrapper(type, wrapped));
    if (wrapped) {
        value.info = wrapped[2];
        value.sub = getTypeDef(extractSubType(type, wrapped), {}, count);
    }
    return value;
}
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/encodeTypes.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "encodeTypeDef": (()=>encodeTypeDef),
    "paramsNotation": (()=>paramsNotation),
    "withTypeString": (()=>withTypeString)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/types/types.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/stringify.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/object/spread.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/undefined.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/number.js [app-route] (ecmascript)");
;
;
const stringIdentity = (value)=>value.toString();
const INFO_WRAP = [
    'BTreeMap',
    'BTreeSet',
    'Compact',
    'HashMap',
    'Option',
    'Result',
    'Vec'
];
function paramsNotation(outer, inner, transform = stringIdentity) {
    return `${outer}${inner ? `<${(Array.isArray(inner) ? inner : [
        inner
    ]).map(transform).join(', ')}>` : ''}`;
}
function encodeWithParams(registry, typeDef, outer) {
    const { info, sub } = typeDef;
    switch(info){
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeMap:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeSet:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Compact:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].HashMap:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Linkage:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Option:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Range:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].RangeInclusive:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Result:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Vec:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperKeepOpaque:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperOpaque:
            return paramsNotation(outer, sub, (p)=>encodeTypeDef(registry, p));
    }
    throw new Error(`Unable to encode ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(typeDef)} with params`);
}
function encodeSubTypes(registry, sub, asEnum, extra) {
    const names = sub.map(({ name })=>name);
    if (!names.every((n)=>!!n)) {
        throw new Error(`Subtypes does not have consistent names, ${names.join(', ')}`);
    }
    const inner = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["objectSpread"])({}, extra);
    for(let i = 0, count = sub.length; i < count; i++){
        const def = sub[i];
        if (!def.name) {
            throw new Error(`No name found in ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(def)}`);
        }
        inner[def.name] = encodeTypeDef(registry, def);
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(asEnum ? {
        _enum: inner
    } : inner);
}
const encoders = {
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeMap]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'BTreeMap'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeSet]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'BTreeSet'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Compact]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'Compact'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].DoNotConstruct]: (registry, { displayName, lookupIndex, lookupName })=>`DoNotConstruct<${lookupName || displayName || ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isUndefined"])(lookupIndex) ? 'Unknown' : registry.createLookupType(lookupIndex))}>`,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Enum]: (registry, { sub })=>{
        if (!Array.isArray(sub)) {
            throw new Error('Unable to encode Enum type');
        }
        // c-like enums have all Null entries
        // TODO We need to take the disciminant into account and auto-add empty entries
        return sub.every(({ type })=>type === 'Null') ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])({
            _enum: sub.map(({ name }, index)=>`${name || `Empty${index}`}`)
        }) : encodeSubTypes(registry, sub, true);
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].HashMap]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'HashMap'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Int]: (_registry, { length = 32 })=>`Int<${length}>`,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Linkage]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'Linkage'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Null]: (_registry, _typeDef)=>'Null',
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Option]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'Option'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain]: (_registry, { displayName, type })=>displayName || type,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Range]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'Range'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].RangeInclusive]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'RangeInclusive'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Result]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'Result'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Set]: (_registry, { length = 8, sub })=>{
        if (!Array.isArray(sub)) {
            throw new Error('Unable to encode Set type');
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])({
            _set: sub.reduce((all, { index, name }, count)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["objectSpread"])(all, {
                    [`${name || `Unknown${index || count}`}`]: index || count
                }), {
                _bitLength: length || 8
            })
        });
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Si]: (_registry, { lookupName, type })=>lookupName || type,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Struct]: (registry, { alias, sub })=>{
        if (!Array.isArray(sub)) {
            throw new Error('Unable to encode Struct type');
        }
        return encodeSubTypes(registry, sub, false, alias ? {
            _alias: [
                ...alias.entries()
            ].reduce((all, [k, v])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["objectSpread"])(all, {
                    [k]: v
                }), {})
        } : {});
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Tuple]: (registry, { sub })=>{
        if (!Array.isArray(sub)) {
            throw new Error('Unable to encode Tuple type');
        }
        return `(${sub.map((type)=>encodeTypeDef(registry, type)).join(',')})`;
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].UInt]: (_registry, { length = 32 })=>`UInt<${length}>`,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Vec]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'Vec'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].VecFixed]: (_registry, { length, sub })=>{
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isNumber"])(length) || !sub || Array.isArray(sub)) {
            throw new Error('Unable to encode VecFixed type');
        }
        return `[${sub.type};${length}]`;
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperKeepOpaque]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'WrapperKeepOpaque'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperOpaque]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'WrapperOpaque')
};
function encodeType(registry, typeDef, withLookup = true) {
    return withLookup && typeDef.lookupName ? typeDef.lookupName : encoders[typeDef.info](registry, typeDef);
}
function encodeTypeDef(registry, typeDef) {
    // In the case of contracts we do have the unfortunate situation where the displayName would
    // refer to "Option" when it is an option. For these, string it out, only using when actually
    // not a top-level element to be used
    return typeDef.displayName && !INFO_WRAP.some((i)=>typeDef.displayName === i) ? typeDef.displayName : encodeType(registry, typeDef);
}
function withTypeString(registry, typeDef) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["objectSpread"])({}, typeDef, {
        type: encodeType(registry, typeDef, false)
    });
}
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/class.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "constructTypeClass": (()=>constructTypeClass),
    "createClassUnsafe": (()=>createClassUnsafe),
    "getTypeClass": (()=>getTypeClass)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/stringify.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/number.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/types/types.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$BTreeMap$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/extended/BTreeMap.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$BTreeSet$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/extended/BTreeSet.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Compact$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/base/Compact.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$DoNotConstruct$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/base/DoNotConstruct.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/base/Enum.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$HashMap$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/extended/HashMap.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/base/Int.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/native/Struct.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/base/Null.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Option$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/base/Option.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Range$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/extended/Range.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$RangeInclusive$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/extended/RangeInclusive.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Result$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/base/Result.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Set$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/native/Set.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Tuple$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/base/Tuple.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/base/UInt.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Vec$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/base/Vec.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/extended/Bytes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$VecFixed$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/base/VecFixed.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/extended/U8aFixed.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$WrapperKeepOpaque$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/extended/WrapperKeepOpaque.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$WrapperOpaque$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/extended/WrapperOpaque.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$getTypeDef$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/getTypeDef.js [app-route] (ecmascript)");
;
;
;
;
function getTypeDefType({ lookupName, type }) {
    return lookupName || type;
}
function getSubDefArray(value) {
    if (!Array.isArray(value.sub)) {
        throw new Error(`Expected subtype as TypeDef[] in ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(value)}`);
    }
    return value.sub;
}
function getSubDef(value) {
    if (!value.sub || Array.isArray(value.sub)) {
        throw new Error(`Expected subtype as TypeDef in ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(value)}`);
    }
    return value.sub;
}
function getSubType(value) {
    return getTypeDefType(getSubDef(value));
}
function getTypeClassMap(value) {
    const subs = getSubDefArray(value);
    const map = {};
    for(let i = 0, count = subs.length; i < count; i++){
        const sub = subs[i];
        if (!sub.name) {
            throw new Error(`No name found in definition ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(sub)}`);
        }
        map[sub.name] = getTypeDefType(sub);
    }
    return map;
}
function getTypeClassArray(value) {
    return getSubDefArray(value).map(getTypeDefType);
}
function createInt(Clazz, { displayName, length }) {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isNumber"])(length)) {
        throw new Error(`Expected bitLength information for ${displayName || Clazz.constructor.name}<bitLength>`);
    }
    return Clazz.with(length, displayName);
}
function createHashMap(Clazz, value) {
    const [keyType, valueType] = getTypeClassArray(value);
    return Clazz.with(keyType, valueType);
}
function createWithSub(Clazz, value) {
    return Clazz.with(getSubType(value));
}
const infoMapping = {
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeMap]: (_registry, value)=>createHashMap(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$BTreeMap$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BTreeMap"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeSet]: (_registry, value)=>createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$BTreeSet$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BTreeSet"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Compact]: (_registry, value)=>createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Compact$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Compact"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].DoNotConstruct]: (_registry, value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$DoNotConstruct$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DoNotConstruct"].with(value.displayName || value.type),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Enum]: (_registry, value)=>{
        const subs = getSubDefArray(value);
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Enum"].with(subs.every(({ type })=>type === 'Null') ? subs.reduce((out, { index, name }, count)=>{
            if (!name) {
                throw new Error('No name found in sub definition');
            }
            out[name] = index || count;
            return out;
        }, {}) : getTypeClassMap(value));
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].HashMap]: (_registry, value)=>createHashMap(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$HashMap$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["HashMap"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Int]: (_registry, value)=>createInt(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Int"], value),
    // We have circular deps between Linkage & Struct
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Linkage]: (_registry, value)=>{
        const type = `Option<${getSubType(value)}>`;
        // eslint-disable-next-line sort-keys
        const Clazz = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Struct"].with({
            previous: type,
            next: type
        });
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
        Clazz.prototype.toRawType = function() {
            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call
            return `Linkage<${this.next.toRawType(true)}>`;
        };
        return Clazz;
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Null]: (_registry, _value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Null"],
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Option]: (_registry, value)=>{
        if (!value.sub || Array.isArray(value.sub)) {
            throw new Error('Expected type information for Option');
        }
        // NOTE This is opt-in (unhandled), not by default
        // if (value.sub.type === 'bool') {
        //   return OptionBool;
        // }
        return createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Option$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Option"], value);
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain]: (registry, value)=>registry.getOrUnknown(value.type),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Range]: (_registry, value)=>createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Range$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Range"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].RangeInclusive]: (_registry, value)=>createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$RangeInclusive$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["RangeInclusive"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Result]: (_registry, value)=>{
        const [Ok, Err] = getTypeClassArray(value);
        // eslint-disable-next-line @typescript-eslint/no-use-before-define
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Result$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Result"].with({
            Err,
            Ok
        });
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Set]: (_registry, value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Set$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CodecSet"].with(getSubDefArray(value).reduce((result, { index, name })=>{
            if (!name || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isNumber"])(index)) {
                throw new Error('No name found in sub definition');
            }
            result[name] = index;
            return result;
        }, {}), value.length),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Si]: (registry, value)=>getTypeClass(registry, registry.lookup.getTypeDef(value.type)),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Struct]: (_registry, value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Struct"].with(getTypeClassMap(value), value.alias),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Tuple]: (_registry, value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Tuple$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Tuple"].with(getTypeClassArray(value)),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].UInt]: (_registry, value)=>createInt(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["UInt"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].Vec]: (_registry, { sub })=>{
        if (!sub || Array.isArray(sub)) {
            throw new Error('Expected type information for vector');
        }
        return sub.type === 'u8' ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Bytes"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Vec$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Vec"].with(getTypeDefType(sub));
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].VecFixed]: (_registry, { displayName, length, sub })=>{
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isNumber"])(length) || !sub || Array.isArray(sub)) {
            throw new Error('Expected length & type information for fixed vector');
        }
        return sub.type === 'u8' ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["U8aFixed"].with(length * 8, displayName) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$VecFixed$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["VecFixed"].with(getTypeDefType(sub), length);
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperKeepOpaque]: (_registry, value)=>createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$WrapperKeepOpaque$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["WrapperKeepOpaque"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperOpaque]: (_registry, value)=>createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$WrapperOpaque$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["WrapperOpaque"], value)
};
function constructTypeClass(registry, typeDef) {
    try {
        const Type = infoMapping[typeDef.info](registry, typeDef);
        if (!Type) {
            throw new Error('No class created');
        }
        // don't clobber any existing
        if (!Type.__fallbackType && typeDef.fallbackType) {
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore ...this is the only place we we actually assign this...
            Type.__fallbackType = typeDef.fallbackType;
        }
        return Type;
    } catch (error) {
        throw new Error(`Unable to construct class from ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringify"])(typeDef)}: ${error.message}`);
    }
}
function getTypeClass(registry, typeDef) {
    return registry.getUnsafe(typeDef.type, false, typeDef);
}
function createClassUnsafe(registry, type) {
    return(// just retrieve via name, no creation via typeDef
    registry.getUnsafe(type) || // we don't have an existing type, create the class via typeDef
    getTypeClass(registry, registry.isLookupType(type) ? registry.lookup.getTypeDef(type) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$getTypeDef$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getTypeDef"])(type)));
}
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/type.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createTypeUnsafe": (()=>createTypeUnsafe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/u8a/eq.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/u8a/toHex.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/u8a.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/hex.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/u8a/toU8a.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Option$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-codec@14.3.1/node_modules/@polkadot/types-codec/base/Option.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/class.js [app-route] (ecmascript)");
;
;
;
function checkInstance(created, matcher) {
    const u8a = created.toU8a();
    const rawType = created.toRawType();
    const isOk = // full match, all ok
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["u8aEq"])(u8a, matcher) || // on a length-prefixed type, just check the actual length
    [
        'Bytes',
        'Text',
        'Type'
    ].includes(rawType) && matcher.length === created.length || // when the created is empty and matcher is also empty, let it slide...
    created.isEmpty && matcher.every((v)=>!v);
    if (!isOk) {
        throw new Error(`${rawType}:: Decoded input doesn't match input, received ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["u8aToHex"])(matcher, 512)} (${matcher.length} bytes), created ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["u8aToHex"])(u8a, 512)} (${u8a.length} bytes)`);
    }
}
function checkPedantic(created, [value]) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isU8a"])(value)) {
        checkInstance(created, value);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        checkInstance(created, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$util$40$13$2e$4$2e$3$2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["u8aToU8a"])(value));
    }
}
function initType(registry, Type, params = [], { blockHash, isFallback, isOptional, isPedantic } = {}) {
    const created = new (isOptional ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$codec$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Option$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Option"].with(Type) : Type)(registry, ...params);
    isPedantic && checkPedantic(created, params);
    if (blockHash) {
        created.createdAtHash = createTypeUnsafe(registry, 'BlockHash', [
            blockHash
        ]);
    }
    if (isFallback) {
        created.isStorageFallback = true;
    }
    return created;
}
function createTypeUnsafe(registry, type, params = [], options = {}) {
    let Clazz = null;
    let firstError = null;
    try {
        Clazz = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createClassUnsafe"])(registry, type);
        return initType(registry, Clazz, params, options);
    } catch (error) {
        firstError = new Error(`createType(${type}):: ${error.message}`);
    }
    if (Clazz?.__fallbackType) {
        try {
            Clazz = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createClassUnsafe"])(registry, Clazz.__fallbackType);
            return initType(registry, Clazz, params, options);
        } catch  {
        // swallow, we will throw the first error again
        }
    }
    throw firstError;
}
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/packageInfo.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "packageInfo": (()=>packageInfo)
});
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_resolve_absolute_path__("node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/packageInfo.js")}`;
    }
};
const packageInfo = {
    name: '@polkadot/types-create',
    path: __TURBOPACK__import$2e$meta__ && __TURBOPACK__import$2e$meta__.url ? new URL(__TURBOPACK__import$2e$meta__.url).pathname.substring(0, new URL(__TURBOPACK__import$2e$meta__.url).pathname.lastIndexOf('/') + 1) : 'auto',
    type: 'esm',
    version: '14.3.1'
};
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/exports.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/exports.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/exports.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/index.js [app-route] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "constructTypeClass": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["constructTypeClass"]),
    "createClassUnsafe": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createClassUnsafe"]),
    "createTypeUnsafe": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$type$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createTypeUnsafe"]),
    "getTypeClass": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getTypeClass"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/class.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$type$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/type.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "constructTypeClass": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["constructTypeClass"]),
    "createClassUnsafe": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createClassUnsafe"]),
    "createTypeUnsafe": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createTypeUnsafe"]),
    "getTypeClass": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["getTypeClass"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/index.js [app-route] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
;
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/index.js [app-route] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "XCM_MAPPINGS": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$xcm$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["XCM_MAPPINGS"]),
    "encodeTypeDef": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeTypeDef"]),
    "getTypeDef": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$getTypeDef$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getTypeDef"]),
    "mapXcmTypes": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$xcm$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["mapXcmTypes"]),
    "paramsNotation": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["paramsNotation"]),
    "typeSplit": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$typeSplit$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["typeSplit"]),
    "withTypeString": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["withTypeString"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/encodeTypes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$getTypeDef$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/getTypeDef.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$typeSplit$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/typeSplit.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$xcm$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/xcm.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "XCM_MAPPINGS": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["XCM_MAPPINGS"]),
    "encodeTypeDef": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["encodeTypeDef"]),
    "getTypeDef": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["getTypeDef"]),
    "mapXcmTypes": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["mapXcmTypes"]),
    "paramsNotation": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["paramsNotation"]),
    "typeSplit": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["typeSplit"]),
    "withTypeString": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["withTypeString"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/index.js [app-route] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/exports.js [app-route] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "XCM_MAPPINGS": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["XCM_MAPPINGS"]),
    "constructTypeClass": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["constructTypeClass"]),
    "createClassUnsafe": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createClassUnsafe"]),
    "createTypeUnsafe": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createTypeUnsafe"]),
    "encodeTypeDef": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeTypeDef"]),
    "getTypeClass": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getTypeClass"]),
    "getTypeDef": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getTypeDef"]),
    "mapXcmTypes": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["mapXcmTypes"]),
    "paramsNotation": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["paramsNotation"]),
    "typeSplit": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["typeSplit"]),
    "withTypeString": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["withTypeString"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/create/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/util/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/exports.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/exports.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "XCM_MAPPINGS": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["XCM_MAPPINGS"]),
    "constructTypeClass": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["constructTypeClass"]),
    "createClassUnsafe": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createClassUnsafe"]),
    "createTypeUnsafe": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createTypeUnsafe"]),
    "encodeTypeDef": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["encodeTypeDef"]),
    "getTypeClass": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["getTypeClass"]),
    "getTypeDef": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["getTypeDef"]),
    "mapXcmTypes": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["mapXcmTypes"]),
    "paramsNotation": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["paramsNotation"]),
    "typeSplit": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["typeSplit"]),
    "withTypeString": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["withTypeString"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/exports.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$polkadot$2b$types$2d$create$40$14$2e$3$2e$1$2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$exports$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@polkadot+types-create@14.3.1/node_modules/@polkadot/types-create/exports.js [app-route] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/process-nextick-args@2.0.1/node_modules/process-nextick-args/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
if (typeof process === 'undefined' || !process.version || process.version.indexOf('v0.') === 0 || process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
    module.exports = {
        nextTick: nextTick
    };
} else {
    module.exports = process;
}
function nextTick(fn, arg1, arg2, arg3) {
    if (typeof fn !== 'function') {
        throw new TypeError('"callback" argument must be a function');
    }
    var len = arguments.length;
    var args, i;
    switch(len){
        case 0:
        case 1:
            return process.nextTick(fn);
        case 2:
            return process.nextTick(function afterTickOne() {
                fn.call(null, arg1);
            });
        case 3:
            return process.nextTick(function afterTickTwo() {
                fn.call(null, arg1, arg2);
            });
        case 4:
            return process.nextTick(function afterTickThree() {
                fn.call(null, arg1, arg2, arg3);
            });
        default:
            args = new Array(len - 1);
            i = 0;
            while(i < args.length){
                args[i++] = arguments[i];
            }
            return process.nextTick(function afterTick() {
                fn.apply(null, args);
            });
    }
}
}}),
"[project]/node_modules/.pnpm/isarray@1.0.0/node_modules/isarray/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var toString = {}.toString;
module.exports = Array.isArray || function(arr) {
    return toString.call(arr) == '[object Array]';
};
}}),
"[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/internal/streams/stream.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
module.exports = __turbopack_require__("[externals]/stream [external] (stream, cjs)");
}}),
"[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/internal/streams/BufferList.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
var Buffer = __turbopack_require__("[project]/node_modules/.pnpm/safe-buffer@5.1.2/node_modules/safe-buffer/index.js [app-route] (ecmascript)").Buffer;
var util = __turbopack_require__("[externals]/util [external] (util, cjs)");
function copyBuffer(src, target, offset) {
    src.copy(target, offset);
}
module.exports = function() {
    function BufferList() {
        _classCallCheck(this, BufferList);
        this.head = null;
        this.tail = null;
        this.length = 0;
    }
    BufferList.prototype.push = function push(v) {
        var entry = {
            data: v,
            next: null
        };
        if (this.length > 0) this.tail.next = entry;
        else this.head = entry;
        this.tail = entry;
        ++this.length;
    };
    BufferList.prototype.unshift = function unshift(v) {
        var entry = {
            data: v,
            next: this.head
        };
        if (this.length === 0) this.tail = entry;
        this.head = entry;
        ++this.length;
    };
    BufferList.prototype.shift = function shift() {
        if (this.length === 0) return;
        var ret = this.head.data;
        if (this.length === 1) this.head = this.tail = null;
        else this.head = this.head.next;
        --this.length;
        return ret;
    };
    BufferList.prototype.clear = function clear() {
        this.head = this.tail = null;
        this.length = 0;
    };
    BufferList.prototype.join = function join(s) {
        if (this.length === 0) return '';
        var p = this.head;
        var ret = '' + p.data;
        while(p = p.next){
            ret += s + p.data;
        }
        return ret;
    };
    BufferList.prototype.concat = function concat(n) {
        if (this.length === 0) return Buffer.alloc(0);
        var ret = Buffer.allocUnsafe(n >>> 0);
        var p = this.head;
        var i = 0;
        while(p){
            copyBuffer(p.data, ret, i);
            i += p.data.length;
            p = p.next;
        }
        return ret;
    };
    return BufferList;
}();
if (util && util.inspect && util.inspect.custom) {
    module.exports.prototype[util.inspect.custom] = function() {
        var obj = util.inspect({
            length: this.length
        });
        return this.constructor.name + ' ' + obj;
    };
}
}}),
"[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/internal/streams/destroy.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
/*<replacement>*/ var pna = __turbopack_require__("[project]/node_modules/.pnpm/process-nextick-args@2.0.1/node_modules/process-nextick-args/index.js [app-route] (ecmascript)");
/*</replacement>*/ // undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
    var _this = this;
    var readableDestroyed = this._readableState && this._readableState.destroyed;
    var writableDestroyed = this._writableState && this._writableState.destroyed;
    if (readableDestroyed || writableDestroyed) {
        if (cb) {
            cb(err);
        } else if (err) {
            if (!this._writableState) {
                pna.nextTick(emitErrorNT, this, err);
            } else if (!this._writableState.errorEmitted) {
                this._writableState.errorEmitted = true;
                pna.nextTick(emitErrorNT, this, err);
            }
        }
        return this;
    }
    // we set destroyed to true before firing error callbacks in order
    // to make it re-entrance safe in case destroy() is called within callbacks
    if (this._readableState) {
        this._readableState.destroyed = true;
    }
    // if this is a duplex stream mark the writable part as destroyed as well
    if (this._writableState) {
        this._writableState.destroyed = true;
    }
    this._destroy(err || null, function(err) {
        if (!cb && err) {
            if (!_this._writableState) {
                pna.nextTick(emitErrorNT, _this, err);
            } else if (!_this._writableState.errorEmitted) {
                _this._writableState.errorEmitted = true;
                pna.nextTick(emitErrorNT, _this, err);
            }
        } else if (cb) {
            cb(err);
        }
    });
    return this;
}
function undestroy() {
    if (this._readableState) {
        this._readableState.destroyed = false;
        this._readableState.reading = false;
        this._readableState.ended = false;
        this._readableState.endEmitted = false;
    }
    if (this._writableState) {
        this._writableState.destroyed = false;
        this._writableState.ended = false;
        this._writableState.ending = false;
        this._writableState.finalCalled = false;
        this._writableState.prefinished = false;
        this._writableState.finished = false;
        this._writableState.errorEmitted = false;
    }
}
function emitErrorNT(self, err) {
    self.emit('error', err);
}
module.exports = {
    destroy: destroy,
    undestroy: undestroy
};
}}),
"[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_writable.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';
/*<replacement>*/ var pna = __turbopack_require__("[project]/node_modules/.pnpm/process-nextick-args@2.0.1/node_modules/process-nextick-args/index.js [app-route] (ecmascript)");
/*</replacement>*/ module.exports = Writable;
/* <replacement> */ function WriteReq(chunk, encoding, cb) {
    this.chunk = chunk;
    this.encoding = encoding;
    this.callback = cb;
    this.next = null;
}
// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
    var _this = this;
    this.next = null;
    this.entry = null;
    this.finish = function() {
        onCorkedFinish(_this, state);
    };
}
/* </replacement> */ /*<replacement>*/ var asyncWrite = !("TURBOPACK compile-time value", false) && [
    'v0.10',
    'v0.9.'
].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
/*</replacement>*/ /*<replacement>*/ var Duplex;
/*</replacement>*/ Writable.WritableState = WritableState;
/*<replacement>*/ var util = Object.create(__turbopack_require__("[project]/node_modules/.pnpm/core-util-is@1.0.3/node_modules/core-util-is/lib/util.js [app-route] (ecmascript)"));
util.inherits = __turbopack_require__("[project]/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js [app-route] (ecmascript)");
/*</replacement>*/ /*<replacement>*/ var internalUtil = {
    deprecate: __turbopack_require__("[project]/node_modules/.pnpm/util-deprecate@1.0.2/node_modules/util-deprecate/node.js [app-route] (ecmascript)")
};
/*</replacement>*/ /*<replacement>*/ var Stream = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/internal/streams/stream.js [app-route] (ecmascript)");
/*</replacement>*/ /*<replacement>*/ var Buffer = __turbopack_require__("[project]/node_modules/.pnpm/safe-buffer@5.1.2/node_modules/safe-buffer/index.js [app-route] (ecmascript)").Buffer;
var OurUint8Array = (typeof global !== 'undefined' ? global : ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : typeof self !== 'undefined' ? self : {}).Uint8Array || function() {};
function _uint8ArrayToBuffer(chunk) {
    return Buffer.from(chunk);
}
function _isUint8Array(obj) {
    return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/ var destroyImpl = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/internal/streams/destroy.js [app-route] (ecmascript)");
util.inherits(Writable, Stream);
function nop() {}
function WritableState(options, stream) {
    Duplex = Duplex || __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_duplex.js [app-route] (ecmascript)");
    options = options || {};
    // Duplex streams are both readable and writable, but share
    // the same options object.
    // However, some cases require setting options to different
    // values for the readable and the writable sides of the duplex stream.
    // These options can be provided separately as readableXXX and writableXXX.
    var isDuplex = stream instanceof Duplex;
    // object stream flag to indicate whether or not this stream
    // contains buffers or objects.
    this.objectMode = !!options.objectMode;
    if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;
    // the point at which write() starts returning false
    // Note: 0 is a valid value, means that we always return false if
    // the entire buffer is not flushed immediately on write()
    var hwm = options.highWaterMark;
    var writableHwm = options.writableHighWaterMark;
    var defaultHwm = this.objectMode ? 16 : 16 * 1024;
    if (hwm || hwm === 0) this.highWaterMark = hwm;
    else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;
    else this.highWaterMark = defaultHwm;
    // cast to ints.
    this.highWaterMark = Math.floor(this.highWaterMark);
    // if _final has been called
    this.finalCalled = false;
    // drain event flag.
    this.needDrain = false;
    // at the start of calling end()
    this.ending = false;
    // when end() has been called, and returned
    this.ended = false;
    // when 'finish' is emitted
    this.finished = false;
    // has it been destroyed
    this.destroyed = false;
    // should we decode strings into buffers before passing to _write?
    // this is here so that some node-core streams can optimize string
    // handling at a lower level.
    var noDecode = options.decodeStrings === false;
    this.decodeStrings = !noDecode;
    // Crypto is kind of old and crusty.  Historically, its default string
    // encoding is 'binary' so we have to make this configurable.
    // Everything else in the universe uses 'utf8', though.
    this.defaultEncoding = options.defaultEncoding || 'utf8';
    // not an actual buffer we keep track of, but a measurement
    // of how much we're waiting to get pushed to some underlying
    // socket or file.
    this.length = 0;
    // a flag to see when we're in the middle of a write.
    this.writing = false;
    // when true all writes will be buffered until .uncork() call
    this.corked = 0;
    // a flag to be able to tell if the onwrite cb is called immediately,
    // or on a later tick.  We set this to true at first, because any
    // actions that shouldn't happen until "later" should generally also
    // not happen before the first write call.
    this.sync = true;
    // a flag to know if we're processing previously buffered items, which
    // may call the _write() callback in the same tick, so that we don't
    // end up in an overlapped onwrite situation.
    this.bufferProcessing = false;
    // the callback that's passed to _write(chunk,cb)
    this.onwrite = function(er) {
        onwrite(stream, er);
    };
    // the callback that the user supplies to write(chunk,encoding,cb)
    this.writecb = null;
    // the amount that is being written when _write is called.
    this.writelen = 0;
    this.bufferedRequest = null;
    this.lastBufferedRequest = null;
    // number of pending user-supplied write callbacks
    // this must be 0 before 'finish' can be emitted
    this.pendingcb = 0;
    // emit prefinish if the only thing we're waiting for is _write cbs
    // This is relevant for synchronous Transform streams
    this.prefinished = false;
    // True if the error was already emitted and should not be thrown again
    this.errorEmitted = false;
    // count buffered requests
    this.bufferedRequestCount = 0;
    // allocate the first CorkedRequest, there is always
    // one allocated and free to use, and we maintain at most two
    this.corkedRequestsFree = new CorkedRequest(this);
}
WritableState.prototype.getBuffer = function getBuffer() {
    var current = this.bufferedRequest;
    var out = [];
    while(current){
        out.push(current);
        current = current.next;
    }
    return out;
};
(function() {
    try {
        Object.defineProperty(WritableState.prototype, 'buffer', {
            get: internalUtil.deprecate(function() {
                return this.getBuffer();
            }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
        });
    } catch (_) {}
})();
// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
    realHasInstance = Function.prototype[Symbol.hasInstance];
    Object.defineProperty(Writable, Symbol.hasInstance, {
        value: function(object) {
            if (realHasInstance.call(this, object)) return true;
            if (this !== Writable) return false;
            return object && object._writableState instanceof WritableState;
        }
    });
} else {
    realHasInstance = function(object) {
        return object instanceof this;
    };
}
function Writable(options) {
    Duplex = Duplex || __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_duplex.js [app-route] (ecmascript)");
    // Writable ctor is applied to Duplexes, too.
    // `realHasInstance` is necessary because using plain `instanceof`
    // would return false, as no `_writableState` property is attached.
    // Trying to use the custom `instanceof` for Writable here will also break the
    // Node.js LazyTransform implementation, which has a non-trivial getter for
    // `_writableState` that would lead to infinite recursion.
    if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
        return new Writable(options);
    }
    this._writableState = new WritableState(options, this);
    // legacy.
    this.writable = true;
    if (options) {
        if (typeof options.write === 'function') this._write = options.write;
        if (typeof options.writev === 'function') this._writev = options.writev;
        if (typeof options.destroy === 'function') this._destroy = options.destroy;
        if (typeof options.final === 'function') this._final = options.final;
    }
    Stream.call(this);
}
// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
    this.emit('error', new Error('Cannot pipe, not readable'));
};
function writeAfterEnd(stream, cb) {
    var er = new Error('write after end');
    // TODO: defer error events consistently everywhere, not just the cb
    stream.emit('error', er);
    pna.nextTick(cb, er);
}
// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
    var valid = true;
    var er = false;
    if (chunk === null) {
        er = new TypeError('May not write null values to stream');
    } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
        er = new TypeError('Invalid non-string/buffer chunk');
    }
    if (er) {
        stream.emit('error', er);
        pna.nextTick(cb, er);
        valid = false;
    }
    return valid;
}
Writable.prototype.write = function(chunk, encoding, cb) {
    var state = this._writableState;
    var ret = false;
    var isBuf = !state.objectMode && _isUint8Array(chunk);
    if (isBuf && !Buffer.isBuffer(chunk)) {
        chunk = _uint8ArrayToBuffer(chunk);
    }
    if (typeof encoding === 'function') {
        cb = encoding;
        encoding = null;
    }
    if (isBuf) encoding = 'buffer';
    else if (!encoding) encoding = state.defaultEncoding;
    if (typeof cb !== 'function') cb = nop;
    if (state.ended) writeAfterEnd(this, cb);
    else if (isBuf || validChunk(this, state, chunk, cb)) {
        state.pendingcb++;
        ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
    }
    return ret;
};
Writable.prototype.cork = function() {
    var state = this._writableState;
    state.corked++;
};
Writable.prototype.uncork = function() {
    var state = this._writableState;
    if (state.corked) {
        state.corked--;
        if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
    }
};
Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
    // node::ParseEncoding() requires lower case.
    if (typeof encoding === 'string') encoding = encoding.toLowerCase();
    if (!([
        'hex',
        'utf8',
        'utf-8',
        'ascii',
        'binary',
        'base64',
        'ucs2',
        'ucs-2',
        'utf16le',
        'utf-16le',
        'raw'
    ].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
    this._writableState.defaultEncoding = encoding;
    return this;
};
function decodeChunk(state, chunk, encoding) {
    if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
        chunk = Buffer.from(chunk, encoding);
    }
    return chunk;
}
Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function() {
        return this._writableState.highWaterMark;
    }
});
// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
    if (!isBuf) {
        var newChunk = decodeChunk(state, chunk, encoding);
        if (chunk !== newChunk) {
            isBuf = true;
            encoding = 'buffer';
            chunk = newChunk;
        }
    }
    var len = state.objectMode ? 1 : chunk.length;
    state.length += len;
    var ret = state.length < state.highWaterMark;
    // we must ensure that previous needDrain will not be reset to false.
    if (!ret) state.needDrain = true;
    if (state.writing || state.corked) {
        var last = state.lastBufferedRequest;
        state.lastBufferedRequest = {
            chunk: chunk,
            encoding: encoding,
            isBuf: isBuf,
            callback: cb,
            next: null
        };
        if (last) {
            last.next = state.lastBufferedRequest;
        } else {
            state.bufferedRequest = state.lastBufferedRequest;
        }
        state.bufferedRequestCount += 1;
    } else {
        doWrite(stream, state, false, len, chunk, encoding, cb);
    }
    return ret;
}
function doWrite(stream, state, writev, len, chunk, encoding, cb) {
    state.writelen = len;
    state.writecb = cb;
    state.writing = true;
    state.sync = true;
    if (writev) stream._writev(chunk, state.onwrite);
    else stream._write(chunk, encoding, state.onwrite);
    state.sync = false;
}
function onwriteError(stream, state, sync, er, cb) {
    --state.pendingcb;
    if (sync) {
        // defer the callback if we are being called synchronously
        // to avoid piling up things on the stack
        pna.nextTick(cb, er);
        // this can emit finish, and it will always happen
        // after error
        pna.nextTick(finishMaybe, stream, state);
        stream._writableState.errorEmitted = true;
        stream.emit('error', er);
    } else {
        // the caller expect this to happen before if
        // it is async
        cb(er);
        stream._writableState.errorEmitted = true;
        stream.emit('error', er);
        // this can emit finish, but finish must
        // always follow error
        finishMaybe(stream, state);
    }
}
function onwriteStateUpdate(state) {
    state.writing = false;
    state.writecb = null;
    state.length -= state.writelen;
    state.writelen = 0;
}
function onwrite(stream, er) {
    var state = stream._writableState;
    var sync = state.sync;
    var cb = state.writecb;
    onwriteStateUpdate(state);
    if (er) onwriteError(stream, state, sync, er, cb);
    else {
        // Check if we're actually ready to finish, but don't emit yet
        var finished = needFinish(state);
        if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
            clearBuffer(stream, state);
        }
        if (sync) {
            /*<replacement>*/ asyncWrite(afterWrite, stream, state, finished, cb);
        /*</replacement>*/ } else {
            afterWrite(stream, state, finished, cb);
        }
    }
}
function afterWrite(stream, state, finished, cb) {
    if (!finished) onwriteDrain(stream, state);
    state.pendingcb--;
    cb();
    finishMaybe(stream, state);
}
// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
    if (state.length === 0 && state.needDrain) {
        state.needDrain = false;
        stream.emit('drain');
    }
}
// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
    state.bufferProcessing = true;
    var entry = state.bufferedRequest;
    if (stream._writev && entry && entry.next) {
        // Fast case, write everything using _writev()
        var l = state.bufferedRequestCount;
        var buffer = new Array(l);
        var holder = state.corkedRequestsFree;
        holder.entry = entry;
        var count = 0;
        var allBuffers = true;
        while(entry){
            buffer[count] = entry;
            if (!entry.isBuf) allBuffers = false;
            entry = entry.next;
            count += 1;
        }
        buffer.allBuffers = allBuffers;
        doWrite(stream, state, true, state.length, buffer, '', holder.finish);
        // doWrite is almost always async, defer these to save a bit of time
        // as the hot path ends with doWrite
        state.pendingcb++;
        state.lastBufferedRequest = null;
        if (holder.next) {
            state.corkedRequestsFree = holder.next;
            holder.next = null;
        } else {
            state.corkedRequestsFree = new CorkedRequest(state);
        }
        state.bufferedRequestCount = 0;
    } else {
        // Slow case, write chunks one-by-one
        while(entry){
            var chunk = entry.chunk;
            var encoding = entry.encoding;
            var cb = entry.callback;
            var len = state.objectMode ? 1 : chunk.length;
            doWrite(stream, state, false, len, chunk, encoding, cb);
            entry = entry.next;
            state.bufferedRequestCount--;
            // if we didn't call the onwrite immediately, then
            // it means that we need to wait until it does.
            // also, that means that the chunk and cb are currently
            // being processed, so move the buffer counter past them.
            if (state.writing) {
                break;
            }
        }
        if (entry === null) state.lastBufferedRequest = null;
    }
    state.bufferedRequest = entry;
    state.bufferProcessing = false;
}
Writable.prototype._write = function(chunk, encoding, cb) {
    cb(new Error('_write() is not implemented'));
};
Writable.prototype._writev = null;
Writable.prototype.end = function(chunk, encoding, cb) {
    var state = this._writableState;
    if (typeof chunk === 'function') {
        cb = chunk;
        chunk = null;
        encoding = null;
    } else if (typeof encoding === 'function') {
        cb = encoding;
        encoding = null;
    }
    if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);
    // .end() fully uncorks
    if (state.corked) {
        state.corked = 1;
        this.uncork();
    }
    // ignore unnecessary end() calls.
    if (!state.ending) endWritable(this, state, cb);
};
function needFinish(state) {
    return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
    stream._final(function(err) {
        state.pendingcb--;
        if (err) {
            stream.emit('error', err);
        }
        state.prefinished = true;
        stream.emit('prefinish');
        finishMaybe(stream, state);
    });
}
function prefinish(stream, state) {
    if (!state.prefinished && !state.finalCalled) {
        if (typeof stream._final === 'function') {
            state.pendingcb++;
            state.finalCalled = true;
            pna.nextTick(callFinal, stream, state);
        } else {
            state.prefinished = true;
            stream.emit('prefinish');
        }
    }
}
function finishMaybe(stream, state) {
    var need = needFinish(state);
    if (need) {
        prefinish(stream, state);
        if (state.pendingcb === 0) {
            state.finished = true;
            stream.emit('finish');
        }
    }
    return need;
}
function endWritable(stream, state, cb) {
    state.ending = true;
    finishMaybe(stream, state);
    if (cb) {
        if (state.finished) pna.nextTick(cb);
        else stream.once('finish', cb);
    }
    state.ended = true;
    stream.writable = false;
}
function onCorkedFinish(corkReq, state, err) {
    var entry = corkReq.entry;
    corkReq.entry = null;
    while(entry){
        var cb = entry.callback;
        state.pendingcb--;
        cb(err);
        entry = entry.next;
    }
    // reuse the free corkReq.
    state.corkedRequestsFree.next = corkReq;
}
Object.defineProperty(Writable.prototype, 'destroyed', {
    get: function() {
        if (this._writableState === undefined) {
            return false;
        }
        return this._writableState.destroyed;
    },
    set: function(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (!this._writableState) {
            return;
        }
        // backward compatibility, the user is explicitly
        // managing destroyed
        this._writableState.destroyed = value;
    }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function(err, cb) {
    this.end();
    cb(err);
};
}}),
"[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_duplex.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/ var pna = __turbopack_require__("[project]/node_modules/.pnpm/process-nextick-args@2.0.1/node_modules/process-nextick-args/index.js [app-route] (ecmascript)");
/*</replacement>*/ /*<replacement>*/ var objectKeys = Object.keys || function(obj) {
    var keys = [];
    for(var key in obj){
        keys.push(key);
    }
    return keys;
};
/*</replacement>*/ module.exports = Duplex;
/*<replacement>*/ var util = Object.create(__turbopack_require__("[project]/node_modules/.pnpm/core-util-is@1.0.3/node_modules/core-util-is/lib/util.js [app-route] (ecmascript)"));
util.inherits = __turbopack_require__("[project]/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js [app-route] (ecmascript)");
/*</replacement>*/ var Readable = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_readable.js [app-route] (ecmascript)");
var Writable = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_writable.js [app-route] (ecmascript)");
util.inherits(Duplex, Readable);
{
    // avoid scope creep, the keys array can then be collected
    var keys = objectKeys(Writable.prototype);
    for(var v = 0; v < keys.length; v++){
        var method = keys[v];
        if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
    }
}function Duplex(options) {
    if (!(this instanceof Duplex)) return new Duplex(options);
    Readable.call(this, options);
    Writable.call(this, options);
    if (options && options.readable === false) this.readable = false;
    if (options && options.writable === false) this.writable = false;
    this.allowHalfOpen = true;
    if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;
    this.once('end', onend);
}
Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function() {
        return this._writableState.highWaterMark;
    }
});
// the no-half-open enforcer
function onend() {
    // if we allow half-open state, or if the writable side ended,
    // then we're ok.
    if (this.allowHalfOpen || this._writableState.ended) return;
    // no more data can be written.
    // But allow more writes to happen in this tick.
    pna.nextTick(onEndNT, this);
}
function onEndNT(self) {
    self.end();
}
Object.defineProperty(Duplex.prototype, 'destroyed', {
    get: function() {
        if (this._readableState === undefined || this._writableState === undefined) {
            return false;
        }
        return this._readableState.destroyed && this._writableState.destroyed;
    },
    set: function(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (this._readableState === undefined || this._writableState === undefined) {
            return;
        }
        // backward compatibility, the user is explicitly
        // managing destroyed
        this._readableState.destroyed = value;
        this._writableState.destroyed = value;
    }
});
Duplex.prototype._destroy = function(err, cb) {
    this.push(null);
    this.end();
    pna.nextTick(cb, err);
};
}}),
"[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_readable.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
/*<replacement>*/ var pna = __turbopack_require__("[project]/node_modules/.pnpm/process-nextick-args@2.0.1/node_modules/process-nextick-args/index.js [app-route] (ecmascript)");
/*</replacement>*/ module.exports = Readable;
/*<replacement>*/ var isArray = __turbopack_require__("[project]/node_modules/.pnpm/isarray@1.0.0/node_modules/isarray/index.js [app-route] (ecmascript)");
/*</replacement>*/ /*<replacement>*/ var Duplex;
/*</replacement>*/ Readable.ReadableState = ReadableState;
/*<replacement>*/ var EE = __turbopack_require__("[externals]/events [external] (events, cjs)").EventEmitter;
var EElistenerCount = function(emitter, type) {
    return emitter.listeners(type).length;
};
/*</replacement>*/ /*<replacement>*/ var Stream = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/internal/streams/stream.js [app-route] (ecmascript)");
/*</replacement>*/ /*<replacement>*/ var Buffer = __turbopack_require__("[project]/node_modules/.pnpm/safe-buffer@5.1.2/node_modules/safe-buffer/index.js [app-route] (ecmascript)").Buffer;
var OurUint8Array = (typeof global !== 'undefined' ? global : ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : typeof self !== 'undefined' ? self : {}).Uint8Array || function() {};
function _uint8ArrayToBuffer(chunk) {
    return Buffer.from(chunk);
}
function _isUint8Array(obj) {
    return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/ /*<replacement>*/ var util = Object.create(__turbopack_require__("[project]/node_modules/.pnpm/core-util-is@1.0.3/node_modules/core-util-is/lib/util.js [app-route] (ecmascript)"));
util.inherits = __turbopack_require__("[project]/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js [app-route] (ecmascript)");
/*</replacement>*/ /*<replacement>*/ var debugUtil = __turbopack_require__("[externals]/util [external] (util, cjs)");
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
    debug = debugUtil.debuglog('stream');
} else {
    debug = function() {};
}
/*</replacement>*/ var BufferList = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/internal/streams/BufferList.js [app-route] (ecmascript)");
var destroyImpl = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/internal/streams/destroy.js [app-route] (ecmascript)");
var StringDecoder;
util.inherits(Readable, Stream);
var kProxyEvents = [
    'error',
    'close',
    'destroy',
    'pause',
    'resume'
];
function prependListener(emitter, event, fn) {
    // Sadly this is not cacheable as some libraries bundle their own
    // event emitter implementation with them.
    if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);
    // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);
    else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);
    else emitter._events[event] = [
        fn,
        emitter._events[event]
    ];
}
function ReadableState(options, stream) {
    Duplex = Duplex || __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_duplex.js [app-route] (ecmascript)");
    options = options || {};
    // Duplex streams are both readable and writable, but share
    // the same options object.
    // However, some cases require setting options to different
    // values for the readable and the writable sides of the duplex stream.
    // These options can be provided separately as readableXXX and writableXXX.
    var isDuplex = stream instanceof Duplex;
    // object stream flag. Used to make read(n) ignore n and to
    // make all the buffer merging and length checks go away
    this.objectMode = !!options.objectMode;
    if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;
    // the point at which it stops calling _read() to fill the buffer
    // Note: 0 is a valid value, means "don't call _read preemptively ever"
    var hwm = options.highWaterMark;
    var readableHwm = options.readableHighWaterMark;
    var defaultHwm = this.objectMode ? 16 : 16 * 1024;
    if (hwm || hwm === 0) this.highWaterMark = hwm;
    else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;
    else this.highWaterMark = defaultHwm;
    // cast to ints.
    this.highWaterMark = Math.floor(this.highWaterMark);
    // A linked list is used to store data chunks instead of an array because the
    // linked list can remove elements from the beginning faster than
    // array.shift()
    this.buffer = new BufferList();
    this.length = 0;
    this.pipes = null;
    this.pipesCount = 0;
    this.flowing = null;
    this.ended = false;
    this.endEmitted = false;
    this.reading = false;
    // a flag to be able to tell if the event 'readable'/'data' is emitted
    // immediately, or on a later tick.  We set this to true at first, because
    // any actions that shouldn't happen until "later" should generally also
    // not happen before the first read call.
    this.sync = true;
    // whenever we return null, then we set a flag to say
    // that we're awaiting a 'readable' event emission.
    this.needReadable = false;
    this.emittedReadable = false;
    this.readableListening = false;
    this.resumeScheduled = false;
    // has it been destroyed
    this.destroyed = false;
    // Crypto is kind of old and crusty.  Historically, its default string
    // encoding is 'binary' so we have to make this configurable.
    // Everything else in the universe uses 'utf8', though.
    this.defaultEncoding = options.defaultEncoding || 'utf8';
    // the number of writers that are awaiting a drain event in .pipe()s
    this.awaitDrain = 0;
    // if true, a maybeReadMore has been scheduled
    this.readingMore = false;
    this.decoder = null;
    this.encoding = null;
    if (options.encoding) {
        if (!StringDecoder) StringDecoder = __turbopack_require__("[project]/node_modules/.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js [app-route] (ecmascript)").StringDecoder;
        this.decoder = new StringDecoder(options.encoding);
        this.encoding = options.encoding;
    }
}
function Readable(options) {
    Duplex = Duplex || __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_duplex.js [app-route] (ecmascript)");
    if (!(this instanceof Readable)) return new Readable(options);
    this._readableState = new ReadableState(options, this);
    // legacy
    this.readable = true;
    if (options) {
        if (typeof options.read === 'function') this._read = options.read;
        if (typeof options.destroy === 'function') this._destroy = options.destroy;
    }
    Stream.call(this);
}
Object.defineProperty(Readable.prototype, 'destroyed', {
    get: function() {
        if (this._readableState === undefined) {
            return false;
        }
        return this._readableState.destroyed;
    },
    set: function(value) {
        // we ignore the value if the stream
        // has not been initialized yet
        if (!this._readableState) {
            return;
        }
        // backward compatibility, the user is explicitly
        // managing destroyed
        this._readableState.destroyed = value;
    }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function(err, cb) {
    this.push(null);
    cb(err);
};
// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
    var state = this._readableState;
    var skipChunkCheck;
    if (!state.objectMode) {
        if (typeof chunk === 'string') {
            encoding = encoding || state.defaultEncoding;
            if (encoding !== state.encoding) {
                chunk = Buffer.from(chunk, encoding);
                encoding = '';
            }
            skipChunkCheck = true;
        }
    } else {
        skipChunkCheck = true;
    }
    return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};
// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
    return readableAddChunk(this, chunk, null, true, false);
};
function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
    var state = stream._readableState;
    if (chunk === null) {
        state.reading = false;
        onEofChunk(stream, state);
    } else {
        var er;
        if (!skipChunkCheck) er = chunkInvalid(state, chunk);
        if (er) {
            stream.emit('error', er);
        } else if (state.objectMode || chunk && chunk.length > 0) {
            if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
                chunk = _uint8ArrayToBuffer(chunk);
            }
            if (addToFront) {
                if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));
                else addChunk(stream, state, chunk, true);
            } else if (state.ended) {
                stream.emit('error', new Error('stream.push() after EOF'));
            } else {
                state.reading = false;
                if (state.decoder && !encoding) {
                    chunk = state.decoder.write(chunk);
                    if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);
                    else maybeReadMore(stream, state);
                } else {
                    addChunk(stream, state, chunk, false);
                }
            }
        } else if (!addToFront) {
            state.reading = false;
        }
    }
    return needMoreData(state);
}
function addChunk(stream, state, chunk, addToFront) {
    if (state.flowing && state.length === 0 && !state.sync) {
        stream.emit('data', chunk);
        stream.read(0);
    } else {
        // update the buffer info.
        state.length += state.objectMode ? 1 : chunk.length;
        if (addToFront) state.buffer.unshift(chunk);
        else state.buffer.push(chunk);
        if (state.needReadable) emitReadable(stream);
    }
    maybeReadMore(stream, state);
}
function chunkInvalid(state, chunk) {
    var er;
    if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
        er = new TypeError('Invalid non-string/buffer chunk');
    }
    return er;
}
// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
    return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}
Readable.prototype.isPaused = function() {
    return this._readableState.flowing === false;
};
// backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
    if (!StringDecoder) StringDecoder = __turbopack_require__("[project]/node_modules/.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js [app-route] (ecmascript)").StringDecoder;
    this._readableState.decoder = new StringDecoder(enc);
    this._readableState.encoding = enc;
    return this;
};
// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
    if (n >= MAX_HWM) {
        n = MAX_HWM;
    } else {
        // Get the next highest power of 2 to prevent increasing hwm excessively in
        // tiny amounts
        n--;
        n |= n >>> 1;
        n |= n >>> 2;
        n |= n >>> 4;
        n |= n >>> 8;
        n |= n >>> 16;
        n++;
    }
    return n;
}
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
    if (n <= 0 || state.length === 0 && state.ended) return 0;
    if (state.objectMode) return 1;
    if (n !== n) {
        // Only flow one buffer at a time
        if (state.flowing && state.length) return state.buffer.head.data.length;
        else return state.length;
    }
    // If we're asking for more than the current hwm, then raise the hwm.
    if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
    if (n <= state.length) return n;
    // Don't have enough
    if (!state.ended) {
        state.needReadable = true;
        return 0;
    }
    return state.length;
}
// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
    debug('read', n);
    n = parseInt(n, 10);
    var state = this._readableState;
    var nOrig = n;
    if (n !== 0) state.emittedReadable = false;
    // if we're doing read(0) to trigger a readable event, but we
    // already have a bunch of data in the buffer, then just trigger
    // the 'readable' event and move on.
    if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
        debug('read: emitReadable', state.length, state.ended);
        if (state.length === 0 && state.ended) endReadable(this);
        else emitReadable(this);
        return null;
    }
    n = howMuchToRead(n, state);
    // if we've ended, and we're now clear, then finish it up.
    if (n === 0 && state.ended) {
        if (state.length === 0) endReadable(this);
        return null;
    }
    // All the actual chunk generation logic needs to be
    // *below* the call to _read.  The reason is that in certain
    // synthetic stream cases, such as passthrough streams, _read
    // may be a completely synchronous operation which may change
    // the state of the read buffer, providing enough data when
    // before there was *not* enough.
    //
    // So, the steps are:
    // 1. Figure out what the state of things will be after we do
    // a read from the buffer.
    //
    // 2. If that resulting state will trigger a _read, then call _read.
    // Note that this may be asynchronous, or synchronous.  Yes, it is
    // deeply ugly to write APIs this way, but that still doesn't mean
    // that the Readable class should behave improperly, as streams are
    // designed to be sync/async agnostic.
    // Take note if the _read call is sync or async (ie, if the read call
    // has returned yet), so that we know whether or not it's safe to emit
    // 'readable' etc.
    //
    // 3. Actually pull the requested chunks out of the buffer and return.
    // if we need a readable event, then we need to do some reading.
    var doRead = state.needReadable;
    debug('need readable', doRead);
    // if we currently have less than the highWaterMark, then also read some
    if (state.length === 0 || state.length - n < state.highWaterMark) {
        doRead = true;
        debug('length less than watermark', doRead);
    }
    // however, if we've ended, then there's no point, and if we're already
    // reading, then it's unnecessary.
    if (state.ended || state.reading) {
        doRead = false;
        debug('reading or ended', doRead);
    } else if (doRead) {
        debug('do read');
        state.reading = true;
        state.sync = true;
        // if the length is currently zero, then we *need* a readable event.
        if (state.length === 0) state.needReadable = true;
        // call internal read method
        this._read(state.highWaterMark);
        state.sync = false;
        // If _read pushed data synchronously, then `reading` will be false,
        // and we need to re-evaluate how much data we can return to the user.
        if (!state.reading) n = howMuchToRead(nOrig, state);
    }
    var ret;
    if (n > 0) ret = fromList(n, state);
    else ret = null;
    if (ret === null) {
        state.needReadable = true;
        n = 0;
    } else {
        state.length -= n;
    }
    if (state.length === 0) {
        // If we have nothing in the buffer, then we want to know
        // as soon as we *do* get something into the buffer.
        if (!state.ended) state.needReadable = true;
        // If we tried to read() past the EOF, then emit end on the next tick.
        if (nOrig !== n && state.ended) endReadable(this);
    }
    if (ret !== null) this.emit('data', ret);
    return ret;
};
function onEofChunk(stream, state) {
    if (state.ended) return;
    if (state.decoder) {
        var chunk = state.decoder.end();
        if (chunk && chunk.length) {
            state.buffer.push(chunk);
            state.length += state.objectMode ? 1 : chunk.length;
        }
    }
    state.ended = true;
    // emit 'readable' now to make sure it gets picked up.
    emitReadable(stream);
}
// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
    var state = stream._readableState;
    state.needReadable = false;
    if (!state.emittedReadable) {
        debug('emitReadable', state.flowing);
        state.emittedReadable = true;
        if (state.sync) pna.nextTick(emitReadable_, stream);
        else emitReadable_(stream);
    }
}
function emitReadable_(stream) {
    debug('emit readable');
    stream.emit('readable');
    flow(stream);
}
// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
    if (!state.readingMore) {
        state.readingMore = true;
        pna.nextTick(maybeReadMore_, stream, state);
    }
}
function maybeReadMore_(stream, state) {
    var len = state.length;
    while(!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark){
        debug('maybeReadMore read 0');
        stream.read(0);
        if (len === state.length) break;
        else len = state.length;
    }
    state.readingMore = false;
}
// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
    this.emit('error', new Error('_read() is not implemented'));
};
Readable.prototype.pipe = function(dest, pipeOpts) {
    var src = this;
    var state = this._readableState;
    switch(state.pipesCount){
        case 0:
            state.pipes = dest;
            break;
        case 1:
            state.pipes = [
                state.pipes,
                dest
            ];
            break;
        default:
            state.pipes.push(dest);
            break;
    }
    state.pipesCount += 1;
    debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
    var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
    var endFn = doEnd ? onend : unpipe;
    if (state.endEmitted) pna.nextTick(endFn);
    else src.once('end', endFn);
    dest.on('unpipe', onunpipe);
    function onunpipe(readable, unpipeInfo) {
        debug('onunpipe');
        if (readable === src) {
            if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                unpipeInfo.hasUnpiped = true;
                cleanup();
            }
        }
    }
    function onend() {
        debug('onend');
        dest.end();
    }
    // when the dest drains, it reduces the awaitDrain counter
    // on the source.  This would be more elegant with a .once()
    // handler in flow(), but adding and removing repeatedly is
    // too slow.
    var ondrain = pipeOnDrain(src);
    dest.on('drain', ondrain);
    var cleanedUp = false;
    function cleanup() {
        debug('cleanup');
        // cleanup event handlers once the pipe is broken
        dest.removeListener('close', onclose);
        dest.removeListener('finish', onfinish);
        dest.removeListener('drain', ondrain);
        dest.removeListener('error', onerror);
        dest.removeListener('unpipe', onunpipe);
        src.removeListener('end', onend);
        src.removeListener('end', unpipe);
        src.removeListener('data', ondata);
        cleanedUp = true;
        // if the reader is waiting for a drain event from this
        // specific writer, then it would cause it to never start
        // flowing again.
        // So, if this is awaiting a drain, then we just call it now.
        // If we don't know, then assume that we are waiting for one.
        if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
    }
    // If the user pushes more data while we're writing to dest then we'll end up
    // in ondata again. However, we only want to increase awaitDrain once because
    // dest will only emit one 'drain' event for the multiple writes.
    // => Introduce a guard on increasing awaitDrain.
    var increasedAwaitDrain = false;
    src.on('data', ondata);
    function ondata(chunk) {
        debug('ondata');
        increasedAwaitDrain = false;
        var ret = dest.write(chunk);
        if (false === ret && !increasedAwaitDrain) {
            // If the user unpiped during `dest.write()`, it is possible
            // to get stuck in a permanently paused state if that write
            // also returned false.
            // => Check whether `dest` is still a piping destination.
            if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
                debug('false write response, pause', state.awaitDrain);
                state.awaitDrain++;
                increasedAwaitDrain = true;
            }
            src.pause();
        }
    }
    // if the dest has an error, then stop piping into it.
    // however, don't suppress the throwing behavior for this.
    function onerror(er) {
        debug('onerror', er);
        unpipe();
        dest.removeListener('error', onerror);
        if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
    }
    // Make sure our error handler is attached before userland ones.
    prependListener(dest, 'error', onerror);
    // Both close and finish should trigger unpipe, but only once.
    function onclose() {
        dest.removeListener('finish', onfinish);
        unpipe();
    }
    dest.once('close', onclose);
    function onfinish() {
        debug('onfinish');
        dest.removeListener('close', onclose);
        unpipe();
    }
    dest.once('finish', onfinish);
    function unpipe() {
        debug('unpipe');
        src.unpipe(dest);
    }
    // tell the dest that it's being piped to
    dest.emit('pipe', src);
    // start the flow if it hasn't been started already.
    if (!state.flowing) {
        debug('pipe resume');
        src.resume();
    }
    return dest;
};
function pipeOnDrain(src) {
    return function() {
        var state = src._readableState;
        debug('pipeOnDrain', state.awaitDrain);
        if (state.awaitDrain) state.awaitDrain--;
        if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
            state.flowing = true;
            flow(src);
        }
    };
}
Readable.prototype.unpipe = function(dest) {
    var state = this._readableState;
    var unpipeInfo = {
        hasUnpiped: false
    };
    // if we're not piping anywhere, then do nothing.
    if (state.pipesCount === 0) return this;
    // just one destination.  most common case.
    if (state.pipesCount === 1) {
        // passed in one, but it's not the right one.
        if (dest && dest !== state.pipes) return this;
        if (!dest) dest = state.pipes;
        // got a match.
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        if (dest) dest.emit('unpipe', this, unpipeInfo);
        return this;
    }
    // slow case. multiple pipe destinations.
    if (!dest) {
        // remove all.
        var dests = state.pipes;
        var len = state.pipesCount;
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        for(var i = 0; i < len; i++){
            dests[i].emit('unpipe', this, {
                hasUnpiped: false
            });
        }
        return this;
    }
    // try to find the right one.
    var index = indexOf(state.pipes, dest);
    if (index === -1) return this;
    state.pipes.splice(index, 1);
    state.pipesCount -= 1;
    if (state.pipesCount === 1) state.pipes = state.pipes[0];
    dest.emit('unpipe', this, unpipeInfo);
    return this;
};
// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
    var res = Stream.prototype.on.call(this, ev, fn);
    if (ev === 'data') {
        // Start flowing on next tick if stream isn't explicitly paused
        if (this._readableState.flowing !== false) this.resume();
    } else if (ev === 'readable') {
        var state = this._readableState;
        if (!state.endEmitted && !state.readableListening) {
            state.readableListening = state.needReadable = true;
            state.emittedReadable = false;
            if (!state.reading) {
                pna.nextTick(nReadingNextTick, this);
            } else if (state.length) {
                emitReadable(this);
            }
        }
    }
    return res;
};
Readable.prototype.addListener = Readable.prototype.on;
function nReadingNextTick(self1) {
    debug('readable nexttick read 0');
    self1.read(0);
}
// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
    var state = this._readableState;
    if (!state.flowing) {
        debug('resume');
        state.flowing = true;
        resume(this, state);
    }
    return this;
};
function resume(stream, state) {
    if (!state.resumeScheduled) {
        state.resumeScheduled = true;
        pna.nextTick(resume_, stream, state);
    }
}
function resume_(stream, state) {
    if (!state.reading) {
        debug('resume read 0');
        stream.read(0);
    }
    state.resumeScheduled = false;
    state.awaitDrain = 0;
    stream.emit('resume');
    flow(stream);
    if (state.flowing && !state.reading) stream.read(0);
}
Readable.prototype.pause = function() {
    debug('call pause flowing=%j', this._readableState.flowing);
    if (false !== this._readableState.flowing) {
        debug('pause');
        this._readableState.flowing = false;
        this.emit('pause');
    }
    return this;
};
function flow(stream) {
    var state = stream._readableState;
    debug('flow', state.flowing);
    while(state.flowing && stream.read() !== null){}
}
// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
    var _this = this;
    var state = this._readableState;
    var paused = false;
    stream.on('end', function() {
        debug('wrapped end');
        if (state.decoder && !state.ended) {
            var chunk = state.decoder.end();
            if (chunk && chunk.length) _this.push(chunk);
        }
        _this.push(null);
    });
    stream.on('data', function(chunk) {
        debug('wrapped data');
        if (state.decoder) chunk = state.decoder.write(chunk);
        // don't skip over falsy values in objectMode
        if (state.objectMode && (chunk === null || chunk === undefined)) return;
        else if (!state.objectMode && (!chunk || !chunk.length)) return;
        var ret = _this.push(chunk);
        if (!ret) {
            paused = true;
            stream.pause();
        }
    });
    // proxy all the other methods.
    // important when wrapping filters and duplexes.
    for(var i in stream){
        if (this[i] === undefined && typeof stream[i] === 'function') {
            this[i] = function(method) {
                return function() {
                    return stream[method].apply(stream, arguments);
                };
            }(i);
        }
    }
    // proxy certain important events.
    for(var n = 0; n < kProxyEvents.length; n++){
        stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
    }
    // when we try to consume some more bytes, simply unpause the
    // underlying stream.
    this._read = function(n) {
        debug('wrapped _read', n);
        if (paused) {
            paused = false;
            stream.resume();
        }
    };
    return this;
};
Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: false,
    get: function() {
        return this._readableState.highWaterMark;
    }
});
// exposed for testing purposes only.
Readable._fromList = fromList;
// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
    // nothing buffered
    if (state.length === 0) return null;
    var ret;
    if (state.objectMode) ret = state.buffer.shift();
    else if (!n || n >= state.length) {
        // read it all, truncate the list
        if (state.decoder) ret = state.buffer.join('');
        else if (state.buffer.length === 1) ret = state.buffer.head.data;
        else ret = state.buffer.concat(state.length);
        state.buffer.clear();
    } else {
        // read part of list
        ret = fromListPartial(n, state.buffer, state.decoder);
    }
    return ret;
}
// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
    var ret;
    if (n < list.head.data.length) {
        // slice is the same for buffers and strings
        ret = list.head.data.slice(0, n);
        list.head.data = list.head.data.slice(n);
    } else if (n === list.head.data.length) {
        // first chunk is a perfect match
        ret = list.shift();
    } else {
        // result spans more than one buffer
        ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
    }
    return ret;
}
// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
    var p = list.head;
    var c = 1;
    var ret = p.data;
    n -= ret.length;
    while(p = p.next){
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;
        else ret += str.slice(0, n);
        n -= nb;
        if (n === 0) {
            if (nb === str.length) {
                ++c;
                if (p.next) list.head = p.next;
                else list.head = list.tail = null;
            } else {
                list.head = p;
                p.data = str.slice(nb);
            }
            break;
        }
        ++c;
    }
    list.length -= c;
    return ret;
}
// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
    var ret = Buffer.allocUnsafe(n);
    var p = list.head;
    var c = 1;
    p.data.copy(ret);
    n -= p.data.length;
    while(p = p.next){
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;
        if (n === 0) {
            if (nb === buf.length) {
                ++c;
                if (p.next) list.head = p.next;
                else list.head = list.tail = null;
            } else {
                list.head = p;
                p.data = buf.slice(nb);
            }
            break;
        }
        ++c;
    }
    list.length -= c;
    return ret;
}
function endReadable(stream) {
    var state = stream._readableState;
    // If we get here before consuming all the bytes, then that is a
    // bug in node.  Should never happen.
    if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');
    if (!state.endEmitted) {
        state.ended = true;
        pna.nextTick(endReadableNT, state, stream);
    }
}
function endReadableNT(state, stream) {
    // Check that we didn't get one last unshift.
    if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
    }
}
function indexOf(xs, x) {
    for(var i = 0, l = xs.length; i < l; i++){
        if (xs[i] === x) return i;
    }
    return -1;
}
}}),
"[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_transform.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';
module.exports = Transform;
var Duplex = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_duplex.js [app-route] (ecmascript)");
/*<replacement>*/ var util = Object.create(__turbopack_require__("[project]/node_modules/.pnpm/core-util-is@1.0.3/node_modules/core-util-is/lib/util.js [app-route] (ecmascript)"));
util.inherits = __turbopack_require__("[project]/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js [app-route] (ecmascript)");
/*</replacement>*/ util.inherits(Transform, Duplex);
function afterTransform(er, data) {
    var ts = this._transformState;
    ts.transforming = false;
    var cb = ts.writecb;
    if (!cb) {
        return this.emit('error', new Error('write callback called multiple times'));
    }
    ts.writechunk = null;
    ts.writecb = null;
    if (data != null) this.push(data);
    cb(er);
    var rs = this._readableState;
    rs.reading = false;
    if (rs.needReadable || rs.length < rs.highWaterMark) {
        this._read(rs.highWaterMark);
    }
}
function Transform(options) {
    if (!(this instanceof Transform)) return new Transform(options);
    Duplex.call(this, options);
    this._transformState = {
        afterTransform: afterTransform.bind(this),
        needTransform: false,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null
    };
    // start out asking for a readable event once data is transformed.
    this._readableState.needReadable = true;
    // we have implemented the _read method, and done the other things
    // that Readable wants before the first _read call, so unset the
    // sync guard flag.
    this._readableState.sync = false;
    if (options) {
        if (typeof options.transform === 'function') this._transform = options.transform;
        if (typeof options.flush === 'function') this._flush = options.flush;
    }
    // When the writable side finishes, then flush out anything remaining.
    this.on('prefinish', prefinish);
}
function prefinish() {
    var _this = this;
    if (typeof this._flush === 'function') {
        this._flush(function(er, data) {
            done(_this, er, data);
        });
    } else {
        done(this, null, null);
    }
}
Transform.prototype.push = function(chunk, encoding) {
    this._transformState.needTransform = false;
    return Duplex.prototype.push.call(this, chunk, encoding);
};
// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
    throw new Error('_transform() is not implemented');
};
Transform.prototype._write = function(chunk, encoding, cb) {
    var ts = this._transformState;
    ts.writecb = cb;
    ts.writechunk = chunk;
    ts.writeencoding = encoding;
    if (!ts.transforming) {
        var rs = this._readableState;
        if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
    }
};
// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
    var ts = this._transformState;
    if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
        ts.transforming = true;
        this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
    } else {
        // mark that we need a transform, so that any data that comes in
        // will get processed, now that we've asked for it.
        ts.needTransform = true;
    }
};
Transform.prototype._destroy = function(err, cb) {
    var _this2 = this;
    Duplex.prototype._destroy.call(this, err, function(err2) {
        cb(err2);
        _this2.emit('close');
    });
};
function done(stream, er, data) {
    if (er) return stream.emit('error', er);
    if (data != null) stream.push(data);
    // if there's nothing in the write buffer, then that means
    // that nothing more will ever be provided
    if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');
    if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');
    return stream.push(null);
}
}}),
"[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_passthrough.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';
module.exports = PassThrough;
var Transform = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_transform.js [app-route] (ecmascript)");
/*<replacement>*/ var util = Object.create(__turbopack_require__("[project]/node_modules/.pnpm/core-util-is@1.0.3/node_modules/core-util-is/lib/util.js [app-route] (ecmascript)"));
util.inherits = __turbopack_require__("[project]/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js [app-route] (ecmascript)");
/*</replacement>*/ util.inherits(PassThrough, Transform);
function PassThrough(options) {
    if (!(this instanceof PassThrough)) return new PassThrough(options);
    Transform.call(this, options);
}
PassThrough.prototype._transform = function(chunk, encoding, cb) {
    cb(null, chunk);
};
}}),
"[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/readable.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var Stream = __turbopack_require__("[externals]/stream [external] (stream, cjs)");
if (process.env.READABLE_STREAM === 'disable' && Stream) {
    module.exports = Stream;
    exports = module.exports = Stream.Readable;
    exports.Readable = Stream.Readable;
    exports.Writable = Stream.Writable;
    exports.Duplex = Stream.Duplex;
    exports.Transform = Stream.Transform;
    exports.PassThrough = Stream.PassThrough;
    exports.Stream = Stream;
} else {
    exports = module.exports = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_readable.js [app-route] (ecmascript)");
    exports.Stream = Stream || exports;
    exports.Readable = exports;
    exports.Writable = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_writable.js [app-route] (ecmascript)");
    exports.Duplex = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_duplex.js [app-route] (ecmascript)");
    exports.Transform = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_transform.js [app-route] (ecmascript)");
    exports.PassThrough = __turbopack_require__("[project]/node_modules/.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_passthrough.js [app-route] (ecmascript)");
}
}}),
"[project]/node_modules/.pnpm/safe-buffer@5.1.2/node_modules/safe-buffer/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/* eslint-disable node/no-deprecated-api */ var buffer = __turbopack_require__("[externals]/buffer [external] (buffer, cjs)");
var Buffer = buffer.Buffer;
// alternative to using Object.keys for old browsers
function copyProps(src, dst) {
    for(var key in src){
        dst[key] = src[key];
    }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
    module.exports = buffer;
} else {
    // Copy properties from require('buffer')
    copyProps(buffer, exports);
    exports.Buffer = SafeBuffer;
}
function SafeBuffer(arg, encodingOrOffset, length) {
    return Buffer(arg, encodingOrOffset, length);
}
// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer);
SafeBuffer.from = function(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') {
        throw new TypeError('Argument must not be a number');
    }
    return Buffer(arg, encodingOrOffset, length);
};
SafeBuffer.alloc = function(size, fill, encoding) {
    if (typeof size !== 'number') {
        throw new TypeError('Argument must be a number');
    }
    var buf = Buffer(size);
    if (fill !== undefined) {
        if (typeof encoding === 'string') {
            buf.fill(fill, encoding);
        } else {
            buf.fill(fill);
        }
    } else {
        buf.fill(0);
    }
    return buf;
};
SafeBuffer.allocUnsafe = function(size) {
    if (typeof size !== 'number') {
        throw new TypeError('Argument must be a number');
    }
    return Buffer(size);
};
SafeBuffer.allocUnsafeSlow = function(size) {
    if (typeof size !== 'number') {
        throw new TypeError('Argument must be a number');
    }
    return buffer.SlowBuffer(size);
};
}}),
"[project]/node_modules/.pnpm/core-util-is@1.0.3/node_modules/core-util-is/lib/util.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(arg) {
    if (Array.isArray) {
        return Array.isArray(arg);
    }
    return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;
function isBoolean(arg) {
    return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;
function isNull(arg) {
    return arg === null;
}
exports.isNull = isNull;
function isNullOrUndefined(arg) {
    return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;
function isNumber(arg) {
    return typeof arg === 'number';
}
exports.isNumber = isNumber;
function isString(arg) {
    return typeof arg === 'string';
}
exports.isString = isString;
function isSymbol(arg) {
    return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;
function isUndefined(arg) {
    return arg === void 0;
}
exports.isUndefined = isUndefined;
function isRegExp(re) {
    return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;
function isObject(arg) {
    return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;
function isDate(d) {
    return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;
function isError(e) {
    return objectToString(e) === '[object Error]' || e instanceof Error;
}
exports.isError = isError;
function isFunction(arg) {
    return typeof arg === 'function';
}
exports.isFunction = isFunction;
function isPrimitive(arg) {
    return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol
    typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;
exports.isBuffer = __turbopack_require__("[externals]/buffer [external] (buffer, cjs)").Buffer.isBuffer;
function objectToString(o) {
    return Object.prototype.toString.call(o);
}
}}),
"[project]/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits_browser.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
if (typeof Object.create === 'function') {
    // implementation from standard node.js 'util' module
    module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
            ctor.super_ = superCtor;
            ctor.prototype = Object.create(superCtor.prototype, {
                constructor: {
                    value: ctor,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
        }
    };
} else {
    // old school shim for old browsers
    module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
            ctor.super_ = superCtor;
            var TempCtor = function() {};
            TempCtor.prototype = superCtor.prototype;
            ctor.prototype = new TempCtor();
            ctor.prototype.constructor = ctor;
        }
    };
}
}}),
"[project]/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
try {
    var util = __turbopack_require__("[externals]/util [external] (util, cjs)");
    /* istanbul ignore next */ if (typeof util.inherits !== 'function') throw '';
    module.exports = util.inherits;
} catch (e) {
    /* istanbul ignore next */ module.exports = __turbopack_require__("[project]/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits_browser.js [app-route] (ecmascript)");
}
}}),
"[project]/node_modules/.pnpm/util-deprecate@1.0.2/node_modules/util-deprecate/node.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/**
 * For Node.js, simply re-export the core `util.deprecate` function.
 */ module.exports = __turbopack_require__("[externals]/util [external] (util, cjs)").deprecate;
}}),
"[project]/node_modules/.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';
/*<replacement>*/ var Buffer = __turbopack_require__("[project]/node_modules/.pnpm/safe-buffer@5.1.2/node_modules/safe-buffer/index.js [app-route] (ecmascript)").Buffer;
/*</replacement>*/ var isEncoding = Buffer.isEncoding || function(encoding) {
    encoding = '' + encoding;
    switch(encoding && encoding.toLowerCase()){
        case 'hex':
        case 'utf8':
        case 'utf-8':
        case 'ascii':
        case 'binary':
        case 'base64':
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
        case 'raw':
            return true;
        default:
            return false;
    }
};
function _normalizeEncoding(enc) {
    if (!enc) return 'utf8';
    var retried;
    while(true){
        switch(enc){
            case 'utf8':
            case 'utf-8':
                return 'utf8';
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
                return 'utf16le';
            case 'latin1':
            case 'binary':
                return 'latin1';
            case 'base64':
            case 'ascii':
            case 'hex':
                return enc;
            default:
                if (retried) return; // undefined
                enc = ('' + enc).toLowerCase();
                retried = true;
        }
    }
}
;
// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
    var nenc = _normalizeEncoding(enc);
    if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
    return nenc || enc;
}
// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
    this.encoding = normalizeEncoding(encoding);
    var nb;
    switch(this.encoding){
        case 'utf16le':
            this.text = utf16Text;
            this.end = utf16End;
            nb = 4;
            break;
        case 'utf8':
            this.fillLast = utf8FillLast;
            nb = 4;
            break;
        case 'base64':
            this.text = base64Text;
            this.end = base64End;
            nb = 3;
            break;
        default:
            this.write = simpleWrite;
            this.end = simpleEnd;
            return;
    }
    this.lastNeed = 0;
    this.lastTotal = 0;
    this.lastChar = Buffer.allocUnsafe(nb);
}
StringDecoder.prototype.write = function(buf) {
    if (buf.length === 0) return '';
    var r;
    var i;
    if (this.lastNeed) {
        r = this.fillLast(buf);
        if (r === undefined) return '';
        i = this.lastNeed;
        this.lastNeed = 0;
    } else {
        i = 0;
    }
    if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
    return r || '';
};
StringDecoder.prototype.end = utf8End;
// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;
// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function(buf) {
    if (this.lastNeed <= buf.length) {
        buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
        return this.lastChar.toString(this.encoding, 0, this.lastTotal);
    }
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
    this.lastNeed -= buf.length;
};
// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
    if (byte <= 0x7F) return 0;
    else if (byte >> 5 === 0x06) return 2;
    else if (byte >> 4 === 0x0E) return 3;
    else if (byte >> 3 === 0x1E) return 4;
    return byte >> 6 === 0x02 ? -1 : -2;
}
// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
    var j = buf.length - 1;
    if (j < i) return 0;
    var nb = utf8CheckByte(buf[j]);
    if (nb >= 0) {
        if (nb > 0) self.lastNeed = nb - 1;
        return nb;
    }
    if (--j < i || nb === -2) return 0;
    nb = utf8CheckByte(buf[j]);
    if (nb >= 0) {
        if (nb > 0) self.lastNeed = nb - 2;
        return nb;
    }
    if (--j < i || nb === -2) return 0;
    nb = utf8CheckByte(buf[j]);
    if (nb >= 0) {
        if (nb > 0) {
            if (nb === 2) nb = 0;
            else self.lastNeed = nb - 3;
        }
        return nb;
    }
    return 0;
}
// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
    if ((buf[0] & 0xC0) !== 0x80) {
        self.lastNeed = 0;
        return '\ufffd';
    }
    if (self.lastNeed > 1 && buf.length > 1) {
        if ((buf[1] & 0xC0) !== 0x80) {
            self.lastNeed = 1;
            return '\ufffd';
        }
        if (self.lastNeed > 2 && buf.length > 2) {
            if ((buf[2] & 0xC0) !== 0x80) {
                self.lastNeed = 2;
                return '\ufffd';
            }
        }
    }
}
// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
    var p = this.lastTotal - this.lastNeed;
    var r = utf8CheckExtraBytes(this, buf, p);
    if (r !== undefined) return r;
    if (this.lastNeed <= buf.length) {
        buf.copy(this.lastChar, p, 0, this.lastNeed);
        return this.lastChar.toString(this.encoding, 0, this.lastTotal);
    }
    buf.copy(this.lastChar, p, 0, buf.length);
    this.lastNeed -= buf.length;
}
// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
    var total = utf8CheckIncomplete(this, buf, i);
    if (!this.lastNeed) return buf.toString('utf8', i);
    this.lastTotal = total;
    var end = buf.length - (total - this.lastNeed);
    buf.copy(this.lastChar, 0, end);
    return buf.toString('utf8', i, end);
}
// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
    var r = buf && buf.length ? this.write(buf) : '';
    if (this.lastNeed) return r + '\ufffd';
    return r;
}
// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
    if ((buf.length - i) % 2 === 0) {
        var r = buf.toString('utf16le', i);
        if (r) {
            var c = r.charCodeAt(r.length - 1);
            if (c >= 0xD800 && c <= 0xDBFF) {
                this.lastNeed = 2;
                this.lastTotal = 4;
                this.lastChar[0] = buf[buf.length - 2];
                this.lastChar[1] = buf[buf.length - 1];
                return r.slice(0, -1);
            }
        }
        return r;
    }
    this.lastNeed = 1;
    this.lastTotal = 2;
    this.lastChar[0] = buf[buf.length - 1];
    return buf.toString('utf16le', i, buf.length - 1);
}
// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
    var r = buf && buf.length ? this.write(buf) : '';
    if (this.lastNeed) {
        var end = this.lastTotal - this.lastNeed;
        return r + this.lastChar.toString('utf16le', 0, end);
    }
    return r;
}
function base64Text(buf, i) {
    var n = (buf.length - i) % 3;
    if (n === 0) return buf.toString('base64', i);
    this.lastNeed = 3 - n;
    this.lastTotal = 3;
    if (n === 1) {
        this.lastChar[0] = buf[buf.length - 1];
    } else {
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
    }
    return buf.toString('base64', i, buf.length - n);
}
function base64End(buf) {
    var r = buf && buf.length ? this.write(buf) : '';
    if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
    return r;
}
// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
    return buf.toString(this.encoding);
}
function simpleEnd(buf) {
    return buf && buf.length ? this.write(buf) : '';
}
}}),
"[project]/node_modules/.pnpm/immediate@3.0.6/node_modules/immediate/lib/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var Mutation = global.MutationObserver || global.WebKitMutationObserver;
var scheduleDrain;
if ("TURBOPACK compile-time falsy", 0) {
    "TURBOPACK unreachable";
    var called;
    var observer;
    var element;
    var channel;
} else {
    scheduleDrain = function() {
        process.nextTick(nextTick);
    };
}
var draining;
var queue = [];
//named nextTick for less confusing stack traces
function nextTick() {
    draining = true;
    var i, oldQueue;
    var len = queue.length;
    while(len){
        oldQueue = queue;
        queue = [];
        i = -1;
        while(++i < len){
            oldQueue[i]();
        }
        len = queue.length;
    }
    draining = false;
}
module.exports = immediate;
function immediate(task) {
    if (queue.push(task) === 1 && !draining) {
        scheduleDrain();
    }
}
}}),
"[project]/node_modules/.pnpm/lie@3.3.0/node_modules/lie/lib/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
var immediate = __turbopack_require__("[project]/node_modules/.pnpm/immediate@3.0.6/node_modules/immediate/lib/index.js [app-route] (ecmascript)");
/* istanbul ignore next */ function INTERNAL() {}
var handlers = {};
var REJECTED = [
    'REJECTED'
];
var FULFILLED = [
    'FULFILLED'
];
var PENDING = [
    'PENDING'
];
/* istanbul ignore else */ if (!("TURBOPACK compile-time value", false)) {
    // in which we actually take advantage of JS scoping
    var UNHANDLED = [
        'UNHANDLED'
    ];
}
module.exports = Promise;
function Promise(resolver) {
    if (typeof resolver !== 'function') {
        throw new TypeError('resolver must be a function');
    }
    this.state = PENDING;
    this.queue = [];
    this.outcome = void 0;
    /* istanbul ignore else */ if ("TURBOPACK compile-time truthy", 1) {
        this.handled = UNHANDLED;
    }
    if (resolver !== INTERNAL) {
        safelyResolveThenable(this, resolver);
    }
}
Promise.prototype.finally = function(callback) {
    if (typeof callback !== 'function') {
        return this;
    }
    var p = this.constructor;
    return this.then(resolve, reject);
    "TURBOPACK unreachable";
    function resolve(value) {
        function yes() {
            return value;
        }
        return p.resolve(callback()).then(yes);
    }
    function reject(reason) {
        function no() {
            throw reason;
        }
        return p.resolve(callback()).then(no);
    }
};
Promise.prototype.catch = function(onRejected) {
    return this.then(null, onRejected);
};
Promise.prototype.then = function(onFulfilled, onRejected) {
    if (typeof onFulfilled !== 'function' && this.state === FULFILLED || typeof onRejected !== 'function' && this.state === REJECTED) {
        return this;
    }
    var promise = new this.constructor(INTERNAL);
    /* istanbul ignore else */ if ("TURBOPACK compile-time truthy", 1) {
        if (this.handled === UNHANDLED) {
            this.handled = null;
        }
    }
    if (this.state !== PENDING) {
        var resolver = this.state === FULFILLED ? onFulfilled : onRejected;
        unwrap(promise, resolver, this.outcome);
    } else {
        this.queue.push(new QueueItem(promise, onFulfilled, onRejected));
    }
    return promise;
};
function QueueItem(promise, onFulfilled, onRejected) {
    this.promise = promise;
    if (typeof onFulfilled === 'function') {
        this.onFulfilled = onFulfilled;
        this.callFulfilled = this.otherCallFulfilled;
    }
    if (typeof onRejected === 'function') {
        this.onRejected = onRejected;
        this.callRejected = this.otherCallRejected;
    }
}
QueueItem.prototype.callFulfilled = function(value) {
    handlers.resolve(this.promise, value);
};
QueueItem.prototype.otherCallFulfilled = function(value) {
    unwrap(this.promise, this.onFulfilled, value);
};
QueueItem.prototype.callRejected = function(value) {
    handlers.reject(this.promise, value);
};
QueueItem.prototype.otherCallRejected = function(value) {
    unwrap(this.promise, this.onRejected, value);
};
function unwrap(promise, func, value) {
    immediate(function() {
        var returnValue;
        try {
            returnValue = func(value);
        } catch (e) {
            return handlers.reject(promise, e);
        }
        if (returnValue === promise) {
            handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));
        } else {
            handlers.resolve(promise, returnValue);
        }
    });
}
handlers.resolve = function(self, value) {
    var result = tryCatch(getThen, value);
    if (result.status === 'error') {
        return handlers.reject(self, result.value);
    }
    var thenable = result.value;
    if (thenable) {
        safelyResolveThenable(self, thenable);
    } else {
        self.state = FULFILLED;
        self.outcome = value;
        var i = -1;
        var len = self.queue.length;
        while(++i < len){
            self.queue[i].callFulfilled(value);
        }
    }
    return self;
};
handlers.reject = function(self, error) {
    self.state = REJECTED;
    self.outcome = error;
    /* istanbul ignore else */ if ("TURBOPACK compile-time truthy", 1) {
        if (self.handled === UNHANDLED) {
            immediate(function() {
                if (self.handled === UNHANDLED) {
                    process.emit('unhandledRejection', error, self);
                }
            });
        }
    }
    var i = -1;
    var len = self.queue.length;
    while(++i < len){
        self.queue[i].callRejected(error);
    }
    return self;
};
function getThen(obj) {
    // Make sure we only access the accessor once as required by the spec
    var then = obj && obj.then;
    if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {
        return function appyThen() {
            then.apply(obj, arguments);
        };
    }
}
function safelyResolveThenable(self, thenable) {
    // Either fulfill, reject or reject with error
    var called = false;
    function onError(value) {
        if (called) {
            return;
        }
        called = true;
        handlers.reject(self, value);
    }
    function onSuccess(value) {
        if (called) {
            return;
        }
        called = true;
        handlers.resolve(self, value);
    }
    function tryToUnwrap() {
        thenable(onSuccess, onError);
    }
    var result = tryCatch(tryToUnwrap);
    if (result.status === 'error') {
        onError(result.value);
    }
}
function tryCatch(func, value) {
    var out = {};
    try {
        out.value = func(value);
        out.status = 'success';
    } catch (e) {
        out.status = 'error';
        out.value = e;
    }
    return out;
}
Promise.resolve = resolve;
function resolve(value) {
    if (value instanceof this) {
        return value;
    }
    return handlers.resolve(new this(INTERNAL), value);
}
Promise.reject = reject;
function reject(reason) {
    var promise = new this(INTERNAL);
    return handlers.reject(promise, reason);
}
Promise.all = all;
function all(iterable) {
    var self = this;
    if (Object.prototype.toString.call(iterable) !== '[object Array]') {
        return this.reject(new TypeError('must be an array'));
    }
    var len = iterable.length;
    var called = false;
    if (!len) {
        return this.resolve([]);
    }
    var values = new Array(len);
    var resolved = 0;
    var i = -1;
    var promise = new this(INTERNAL);
    while(++i < len){
        allResolver(iterable[i], i);
    }
    return promise;
    "TURBOPACK unreachable";
    function allResolver(value, i) {
        self.resolve(value).then(resolveFromAll, function(error) {
            if (!called) {
                called = true;
                handlers.reject(promise, error);
            }
        });
        function resolveFromAll(outValue) {
            values[i] = outValue;
            if (++resolved === len && !called) {
                called = true;
                handlers.resolve(promise, values);
            }
        }
    }
}
Promise.race = race;
function race(iterable) {
    var self = this;
    if (Object.prototype.toString.call(iterable) !== '[object Array]') {
        return this.reject(new TypeError('must be an array'));
    }
    var len = iterable.length;
    var called = false;
    if (!len) {
        return this.resolve([]);
    }
    var i = -1;
    var promise = new this(INTERNAL);
    while(++i < len){
        resolver(iterable[i]);
    }
    return promise;
    "TURBOPACK unreachable";
    function resolver(value) {
        self.resolve(value).then(function(response) {
            if (!called) {
                called = true;
                handlers.resolve(promise, response);
            }
        }, function(error) {
            if (!called) {
                called = true;
                handlers.reject(promise, error);
            }
        });
    }
}
}}),
"[project]/node_modules/.pnpm/mime-types@2.1.35/node_modules/mime-types/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */ 'use strict';
/**
 * Module dependencies.
 * @private
 */ var db = __turbopack_require__("[project]/node_modules/.pnpm/mime-db@1.52.0/node_modules/mime-db/index.js [app-route] (ecmascript)");
var extname = __turbopack_require__("[externals]/path [external] (path, cjs)").extname;
/**
 * Module variables.
 * @private
 */ var EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/;
var TEXT_TYPE_REGEXP = /^text\//i;
/**
 * Module exports.
 * @public
 */ exports.charset = charset;
exports.charsets = {
    lookup: charset
};
exports.contentType = contentType;
exports.extension = extension;
exports.extensions = Object.create(null);
exports.lookup = lookup;
exports.types = Object.create(null);
// Populate the extensions/types maps
populateMaps(exports.extensions, exports.types);
/**
 * Get the default charset for a MIME type.
 *
 * @param {string} type
 * @return {boolean|string}
 */ function charset(type) {
    if (!type || typeof type !== 'string') {
        return false;
    }
    // TODO: use media-typer
    var match = EXTRACT_TYPE_REGEXP.exec(type);
    var mime = match && db[match[1].toLowerCase()];
    if (mime && mime.charset) {
        return mime.charset;
    }
    // default text/* to utf-8
    if (match && TEXT_TYPE_REGEXP.test(match[1])) {
        return 'UTF-8';
    }
    return false;
}
/**
 * Create a full Content-Type header given a MIME type or extension.
 *
 * @param {string} str
 * @return {boolean|string}
 */ function contentType(str) {
    // TODO: should this even be in this module?
    if (!str || typeof str !== 'string') {
        return false;
    }
    var mime = str.indexOf('/') === -1 ? exports.lookup(str) : str;
    if (!mime) {
        return false;
    }
    // TODO: use content-type or other module
    if (mime.indexOf('charset') === -1) {
        var charset = exports.charset(mime);
        if (charset) mime += '; charset=' + charset.toLowerCase();
    }
    return mime;
}
/**
 * Get the default extension for a MIME type.
 *
 * @param {string} type
 * @return {boolean|string}
 */ function extension(type) {
    if (!type || typeof type !== 'string') {
        return false;
    }
    // TODO: use media-typer
    var match = EXTRACT_TYPE_REGEXP.exec(type);
    // get extensions
    var exts = match && exports.extensions[match[1].toLowerCase()];
    if (!exts || !exts.length) {
        return false;
    }
    return exts[0];
}
/**
 * Lookup the MIME type for a file path/extension.
 *
 * @param {string} path
 * @return {boolean|string}
 */ function lookup(path) {
    if (!path || typeof path !== 'string') {
        return false;
    }
    // get the extension ("ext" or ".ext" or full path)
    var extension = extname('x.' + path).toLowerCase().substr(1);
    if (!extension) {
        return false;
    }
    return exports.types[extension] || false;
}
/**
 * Populate the extensions and types maps.
 * @private
 */ function populateMaps(extensions, types) {
    // source preference (least -> most)
    var preference = [
        'nginx',
        'apache',
        undefined,
        'iana'
    ];
    Object.keys(db).forEach(function forEachMimeType(type) {
        var mime = db[type];
        var exts = mime.extensions;
        if (!exts || !exts.length) {
            return;
        }
        // mime -> extensions
        extensions[type] = exts;
        // extension -> mime
        for(var i = 0; i < exts.length; i++){
            var extension = exts[i];
            if (types[extension]) {
                var from = preference.indexOf(db[types[extension]].source);
                var to = preference.indexOf(mime.source);
                if (types[extension] !== 'application/octet-stream' && (from > to || from === to && types[extension].substr(0, 12) === 'application/')) {
                    continue;
                }
            }
            // set the extension -> mime
            types[extension] = type;
        }
    });
}
}}),

};

//# sourceMappingURL=node_modules__pnpm_9521c2._.js.map