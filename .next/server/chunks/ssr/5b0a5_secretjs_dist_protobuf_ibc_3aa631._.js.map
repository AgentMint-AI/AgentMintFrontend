{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"client.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/core/client/v1/client.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/core/client/v1/client.proto\n\n/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Plan } from \"../../../../cosmos/upgrade/v1beta1/upgrade\";\nimport { Any } from \"../../../../google/protobuf/any\";\n\nexport const protobufPackage = \"ibc.core.client.v1\";\n\n/**\n * IdentifiedClientState defines a client state with an additional client\n * identifier field.\n */\nexport interface IdentifiedClientState {\n  /** client identifier */\n  client_id: string;\n  /** client state */\n  client_state?: Any | undefined;\n}\n\n/**\n * ConsensusStateWithHeight defines a consensus state with an additional height\n * field.\n */\nexport interface ConsensusStateWithHeight {\n  /** consensus state height */\n  height?:\n    | Height\n    | undefined;\n  /** consensus state */\n  consensus_state?: Any | undefined;\n}\n\n/**\n * ClientConsensusStates defines all the stored consensus states for a given\n * client.\n */\nexport interface ClientConsensusStates {\n  /** client identifier */\n  client_id: string;\n  /** consensus states and their heights associated with the client */\n  consensus_states: ConsensusStateWithHeight[];\n}\n\n/**\n * Height is a monotonically increasing data type\n * that can be compared against another Height for the purposes of updating and\n * freezing clients\n *\n * Normally the RevisionHeight is incremented at each height while keeping\n * RevisionNumber the same. However some consensus algorithms may choose to\n * reset the height in certain conditions e.g. hard forks, state-machine\n * breaking changes In these cases, the RevisionNumber is incremented so that\n * height continues to be monitonically increasing even as the RevisionHeight\n * gets reset\n */\nexport interface Height {\n  /** the revision that the client is currently on */\n  revision_number: string;\n  /** the height within the given revision */\n  revision_height: string;\n}\n\n/** Params defines the set of IBC light client parameters. */\nexport interface Params {\n  /**\n   * allowed_clients defines the list of allowed client state types which can be created\n   * and interacted with. If a client type is removed from the allowed clients list, usage\n   * of this client will be disabled until it is added again to the list.\n   */\n  allowed_clients: string[];\n}\n\n/**\n * ClientUpdateProposal is a legacy governance proposal. If it passes, the substitute\n * client's latest consensus state is copied over to the subject client. The proposal\n * handler may fail if the subject and the substitute do not match in client and\n * chain parameters (with exception to latest height, frozen height, and chain-id).\n *\n * Deprecated: Please use MsgRecoverClient in favour of this message type.\n *\n * @deprecated\n */\nexport interface ClientUpdateProposal {\n  /** the title of the update proposal */\n  title: string;\n  /** the description of the proposal */\n  description: string;\n  /** the client identifier for the client to be updated if the proposal passes */\n  subject_client_id: string;\n  /**\n   * the substitute client identifier for the client standing in for the subject\n   * client\n   */\n  substitute_client_id: string;\n}\n\n/**\n * UpgradeProposal is a gov Content type for initiating an IBC breaking\n * upgrade.\n *\n * Deprecated: Please use MsgIBCSoftwareUpgrade in favour of this message type.\n *\n * @deprecated\n */\nexport interface UpgradeProposal {\n  title: string;\n  description: string;\n  plan?:\n    | Plan\n    | undefined;\n  /**\n   * An UpgradedClientState must be provided to perform an IBC breaking upgrade.\n   * This will make the chain commit to the correct upgraded (self) client state\n   * before the upgrade occurs, so that connecting chains can verify that the\n   * new upgraded client is valid by verifying a proof on the previous version\n   * of the chain. This will allow IBC connections to persist smoothly across\n   * planned chain upgrades\n   */\n  upgraded_client_state?: Any | undefined;\n}\n\nfunction createBaseIdentifiedClientState(): IdentifiedClientState {\n  return { client_id: \"\", client_state: undefined };\n}\n\nexport const IdentifiedClientState = {\n  encode(message: IdentifiedClientState, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.client_id !== \"\") {\n      writer.uint32(10).string(message.client_id);\n    }\n    if (message.client_state !== undefined) {\n      Any.encode(message.client_state, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): IdentifiedClientState {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseIdentifiedClientState();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.client_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.client_state = Any.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): IdentifiedClientState {\n    return {\n      client_id: isSet(object.client_id) ? globalThis.String(object.client_id) : \"\",\n      client_state: isSet(object.client_state) ? Any.fromJSON(object.client_state) : undefined,\n    };\n  },\n\n  toJSON(message: IdentifiedClientState): unknown {\n    const obj: any = {};\n    if (message.client_id !== \"\") {\n      obj.client_id = message.client_id;\n    }\n    if (message.client_state !== undefined) {\n      obj.client_state = Any.toJSON(message.client_state);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<IdentifiedClientState>): IdentifiedClientState {\n    return IdentifiedClientState.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<IdentifiedClientState>): IdentifiedClientState {\n    const message = createBaseIdentifiedClientState();\n    message.client_id = object.client_id ?? \"\";\n    message.client_state = (object.client_state !== undefined && object.client_state !== null)\n      ? Any.fromPartial(object.client_state)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseConsensusStateWithHeight(): ConsensusStateWithHeight {\n  return { height: undefined, consensus_state: undefined };\n}\n\nexport const ConsensusStateWithHeight = {\n  encode(message: ConsensusStateWithHeight, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.height !== undefined) {\n      Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.consensus_state !== undefined) {\n      Any.encode(message.consensus_state, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConsensusStateWithHeight {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConsensusStateWithHeight();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.height = Height.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.consensus_state = Any.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ConsensusStateWithHeight {\n    return {\n      height: isSet(object.height) ? Height.fromJSON(object.height) : undefined,\n      consensus_state: isSet(object.consensus_state) ? Any.fromJSON(object.consensus_state) : undefined,\n    };\n  },\n\n  toJSON(message: ConsensusStateWithHeight): unknown {\n    const obj: any = {};\n    if (message.height !== undefined) {\n      obj.height = Height.toJSON(message.height);\n    }\n    if (message.consensus_state !== undefined) {\n      obj.consensus_state = Any.toJSON(message.consensus_state);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<ConsensusStateWithHeight>): ConsensusStateWithHeight {\n    return ConsensusStateWithHeight.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<ConsensusStateWithHeight>): ConsensusStateWithHeight {\n    const message = createBaseConsensusStateWithHeight();\n    message.height = (object.height !== undefined && object.height !== null)\n      ? Height.fromPartial(object.height)\n      : undefined;\n    message.consensus_state = (object.consensus_state !== undefined && object.consensus_state !== null)\n      ? Any.fromPartial(object.consensus_state)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseClientConsensusStates(): ClientConsensusStates {\n  return { client_id: \"\", consensus_states: [] };\n}\n\nexport const ClientConsensusStates = {\n  encode(message: ClientConsensusStates, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.client_id !== \"\") {\n      writer.uint32(10).string(message.client_id);\n    }\n    for (const v of message.consensus_states) {\n      ConsensusStateWithHeight.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ClientConsensusStates {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseClientConsensusStates();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.client_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.consensus_states.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ClientConsensusStates {\n    return {\n      client_id: isSet(object.client_id) ? globalThis.String(object.client_id) : \"\",\n      consensus_states: globalThis.Array.isArray(object?.consensus_states)\n        ? object.consensus_states.map((e: any) => ConsensusStateWithHeight.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: ClientConsensusStates): unknown {\n    const obj: any = {};\n    if (message.client_id !== \"\") {\n      obj.client_id = message.client_id;\n    }\n    if (message.consensus_states?.length) {\n      obj.consensus_states = message.consensus_states.map((e) => ConsensusStateWithHeight.toJSON(e));\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<ClientConsensusStates>): ClientConsensusStates {\n    return ClientConsensusStates.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<ClientConsensusStates>): ClientConsensusStates {\n    const message = createBaseClientConsensusStates();\n    message.client_id = object.client_id ?? \"\";\n    message.consensus_states = object.consensus_states?.map((e) => ConsensusStateWithHeight.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseHeight(): Height {\n  return { revision_number: \"0\", revision_height: \"0\" };\n}\n\nexport const Height = {\n  encode(message: Height, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.revision_number !== \"0\") {\n      writer.uint32(8).uint64(message.revision_number);\n    }\n    if (message.revision_height !== \"0\") {\n      writer.uint32(16).uint64(message.revision_height);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Height {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseHeight();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.revision_number = longToString(reader.uint64() as Long);\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.revision_height = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Height {\n    return {\n      revision_number: isSet(object.revision_number) ? globalThis.String(object.revision_number) : \"0\",\n      revision_height: isSet(object.revision_height) ? globalThis.String(object.revision_height) : \"0\",\n    };\n  },\n\n  toJSON(message: Height): unknown {\n    const obj: any = {};\n    if (message.revision_number !== \"0\") {\n      obj.revision_number = message.revision_number;\n    }\n    if (message.revision_height !== \"0\") {\n      obj.revision_height = message.revision_height;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Height>): Height {\n    return Height.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Height>): Height {\n    const message = createBaseHeight();\n    message.revision_number = object.revision_number ?? \"0\";\n    message.revision_height = object.revision_height ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseParams(): Params {\n  return { allowed_clients: [] };\n}\n\nexport const Params = {\n  encode(message: Params, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.allowed_clients) {\n      writer.uint32(10).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Params {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.allowed_clients.push(reader.string());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Params {\n    return {\n      allowed_clients: globalThis.Array.isArray(object?.allowed_clients)\n        ? object.allowed_clients.map((e: any) => globalThis.String(e))\n        : [],\n    };\n  },\n\n  toJSON(message: Params): unknown {\n    const obj: any = {};\n    if (message.allowed_clients?.length) {\n      obj.allowed_clients = message.allowed_clients;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Params>): Params {\n    return Params.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Params>): Params {\n    const message = createBaseParams();\n    message.allowed_clients = object.allowed_clients?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseClientUpdateProposal(): ClientUpdateProposal {\n  return { title: \"\", description: \"\", subject_client_id: \"\", substitute_client_id: \"\" };\n}\n\nexport const ClientUpdateProposal = {\n  encode(message: ClientUpdateProposal, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.subject_client_id !== \"\") {\n      writer.uint32(26).string(message.subject_client_id);\n    }\n    if (message.substitute_client_id !== \"\") {\n      writer.uint32(34).string(message.substitute_client_id);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ClientUpdateProposal {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseClientUpdateProposal();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.title = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.subject_client_id = reader.string();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.substitute_client_id = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ClientUpdateProposal {\n    return {\n      title: isSet(object.title) ? globalThis.String(object.title) : \"\",\n      description: isSet(object.description) ? globalThis.String(object.description) : \"\",\n      subject_client_id: isSet(object.subject_client_id) ? globalThis.String(object.subject_client_id) : \"\",\n      substitute_client_id: isSet(object.substitute_client_id) ? globalThis.String(object.substitute_client_id) : \"\",\n    };\n  },\n\n  toJSON(message: ClientUpdateProposal): unknown {\n    const obj: any = {};\n    if (message.title !== \"\") {\n      obj.title = message.title;\n    }\n    if (message.description !== \"\") {\n      obj.description = message.description;\n    }\n    if (message.subject_client_id !== \"\") {\n      obj.subject_client_id = message.subject_client_id;\n    }\n    if (message.substitute_client_id !== \"\") {\n      obj.substitute_client_id = message.substitute_client_id;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<ClientUpdateProposal>): ClientUpdateProposal {\n    return ClientUpdateProposal.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<ClientUpdateProposal>): ClientUpdateProposal {\n    const message = createBaseClientUpdateProposal();\n    message.title = object.title ?? \"\";\n    message.description = object.description ?? \"\";\n    message.subject_client_id = object.subject_client_id ?? \"\";\n    message.substitute_client_id = object.substitute_client_id ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseUpgradeProposal(): UpgradeProposal {\n  return { title: \"\", description: \"\", plan: undefined, upgraded_client_state: undefined };\n}\n\nexport const UpgradeProposal = {\n  encode(message: UpgradeProposal, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.plan !== undefined) {\n      Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.upgraded_client_state !== undefined) {\n      Any.encode(message.upgraded_client_state, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): UpgradeProposal {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUpgradeProposal();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.title = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.plan = Plan.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.upgraded_client_state = Any.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): UpgradeProposal {\n    return {\n      title: isSet(object.title) ? globalThis.String(object.title) : \"\",\n      description: isSet(object.description) ? globalThis.String(object.description) : \"\",\n      plan: isSet(object.plan) ? Plan.fromJSON(object.plan) : undefined,\n      upgraded_client_state: isSet(object.upgraded_client_state)\n        ? Any.fromJSON(object.upgraded_client_state)\n        : undefined,\n    };\n  },\n\n  toJSON(message: UpgradeProposal): unknown {\n    const obj: any = {};\n    if (message.title !== \"\") {\n      obj.title = message.title;\n    }\n    if (message.description !== \"\") {\n      obj.description = message.description;\n    }\n    if (message.plan !== undefined) {\n      obj.plan = Plan.toJSON(message.plan);\n    }\n    if (message.upgraded_client_state !== undefined) {\n      obj.upgraded_client_state = Any.toJSON(message.upgraded_client_state);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<UpgradeProposal>): UpgradeProposal {\n    return UpgradeProposal.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<UpgradeProposal>): UpgradeProposal {\n    const message = createBaseUpgradeProposal();\n    message.title = object.title ?? \"\";\n    message.description = object.description ?? \"\";\n    message.plan = (object.plan !== undefined && object.plan !== null) ? Plan.fromPartial(object.plan) : undefined;\n    message.upgraded_client_state =\n      (object.upgraded_client_state !== undefined && object.upgraded_client_state !== null)\n        ? Any.fromPartial(object.upgraded_client_state)\n        : undefined;\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToString(long: Long) {\n  return long.toString();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"file":"channel.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/core/channel/v1/channel.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/core/channel/v1/channel.proto\n\n/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Height } from \"../../client/v1/client\";\n\nexport const protobufPackage = \"ibc.core.channel.v1\";\n\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.\n */\nexport enum State {\n  /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n  STATE_UNINITIALIZED_UNSPECIFIED = 0,\n  /** STATE_INIT - A channel has just started the opening handshake. */\n  STATE_INIT = 1,\n  /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n  STATE_TRYOPEN = 2,\n  /**\n   * STATE_OPEN - A channel has completed the handshake. Open channels are\n   * ready to send and receive packets.\n   */\n  STATE_OPEN = 3,\n  /**\n   * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n   * packets.\n   */\n  STATE_CLOSED = 4,\n  /** STATE_FLUSHING - A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets. */\n  STATE_FLUSHING = 5,\n  /** STATE_FLUSHCOMPLETE - A channel has just completed flushing any in-flight packets. */\n  STATE_FLUSHCOMPLETE = 6,\n  UNRECOGNIZED = -1,\n}\n\nexport function stateFromJSON(object: any): State {\n  switch (object) {\n    case 0:\n    case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n      return State.STATE_UNINITIALIZED_UNSPECIFIED;\n    case 1:\n    case \"STATE_INIT\":\n      return State.STATE_INIT;\n    case 2:\n    case \"STATE_TRYOPEN\":\n      return State.STATE_TRYOPEN;\n    case 3:\n    case \"STATE_OPEN\":\n      return State.STATE_OPEN;\n    case 4:\n    case \"STATE_CLOSED\":\n      return State.STATE_CLOSED;\n    case 5:\n    case \"STATE_FLUSHING\":\n      return State.STATE_FLUSHING;\n    case 6:\n    case \"STATE_FLUSHCOMPLETE\":\n      return State.STATE_FLUSHCOMPLETE;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return State.UNRECOGNIZED;\n  }\n}\n\nexport function stateToJSON(object: State): string {\n  switch (object) {\n    case State.STATE_UNINITIALIZED_UNSPECIFIED:\n      return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    case State.STATE_INIT:\n      return \"STATE_INIT\";\n    case State.STATE_TRYOPEN:\n      return \"STATE_TRYOPEN\";\n    case State.STATE_OPEN:\n      return \"STATE_OPEN\";\n    case State.STATE_CLOSED:\n      return \"STATE_CLOSED\";\n    case State.STATE_FLUSHING:\n      return \"STATE_FLUSHING\";\n    case State.STATE_FLUSHCOMPLETE:\n      return \"STATE_FLUSHCOMPLETE\";\n    case State.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport enum Order {\n  /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n  ORDER_NONE_UNSPECIFIED = 0,\n  /**\n   * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n   * which they were sent.\n   */\n  ORDER_UNORDERED = 1,\n  /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n  ORDER_ORDERED = 2,\n  UNRECOGNIZED = -1,\n}\n\nexport function orderFromJSON(object: any): Order {\n  switch (object) {\n    case 0:\n    case \"ORDER_NONE_UNSPECIFIED\":\n      return Order.ORDER_NONE_UNSPECIFIED;\n    case 1:\n    case \"ORDER_UNORDERED\":\n      return Order.ORDER_UNORDERED;\n    case 2:\n    case \"ORDER_ORDERED\":\n      return Order.ORDER_ORDERED;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return Order.UNRECOGNIZED;\n  }\n}\n\nexport function orderToJSON(object: Order): string {\n  switch (object) {\n    case Order.ORDER_NONE_UNSPECIFIED:\n      return \"ORDER_NONE_UNSPECIFIED\";\n    case Order.ORDER_UNORDERED:\n      return \"ORDER_UNORDERED\";\n    case Order.ORDER_ORDERED:\n      return \"ORDER_ORDERED\";\n    case Order.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n\n/**\n * Channel defines pipeline for exactly-once packet delivery between specific\n * modules on separate blockchains, which has at least one end capable of\n * sending packets and one end capable of receiving packets.\n */\nexport interface Channel {\n  /** current state of the channel end */\n  state: State;\n  /** whether the channel is ordered or unordered */\n  ordering: Order;\n  /** counterparty channel end */\n  counterparty?:\n    | Counterparty\n    | undefined;\n  /**\n   * list of connection identifiers, in order, along which packets sent on\n   * this channel will travel\n   */\n  connection_hops: string[];\n  /** opaque channel version, which is agreed upon during the handshake */\n  version: string;\n  /**\n   * upgrade sequence indicates the latest upgrade attempt performed by this channel\n   * the value of 0 indicates the channel has never been upgraded\n   */\n  upgrade_sequence: string;\n}\n\n/**\n * IdentifiedChannel defines a channel with additional port and channel\n * identifier fields.\n */\nexport interface IdentifiedChannel {\n  /** current state of the channel end */\n  state: State;\n  /** whether the channel is ordered or unordered */\n  ordering: Order;\n  /** counterparty channel end */\n  counterparty?:\n    | Counterparty\n    | undefined;\n  /**\n   * list of connection identifiers, in order, along which packets sent on\n   * this channel will travel\n   */\n  connection_hops: string[];\n  /** opaque channel version, which is agreed upon during the handshake */\n  version: string;\n  /** port identifier */\n  port_id: string;\n  /** channel identifier */\n  channel_id: string;\n  /**\n   * upgrade sequence indicates the latest upgrade attempt performed by this channel\n   * the value of 0 indicates the channel has never been upgraded\n   */\n  upgrade_sequence: string;\n}\n\n/** Counterparty defines a channel end counterparty */\nexport interface Counterparty {\n  /** port on the counterparty chain which owns the other end of the channel. */\n  port_id: string;\n  /** channel end on the counterparty chain */\n  channel_id: string;\n}\n\n/** Packet defines a type that carries data across different chains through IBC */\nexport interface Packet {\n  /**\n   * number corresponds to the order of sends and receives, where a Packet\n   * with an earlier sequence number must be sent and received before a Packet\n   * with a later sequence number.\n   */\n  sequence: string;\n  /** identifies the port on the sending chain. */\n  source_port: string;\n  /** identifies the channel end on the sending chain. */\n  source_channel: string;\n  /** identifies the port on the receiving chain. */\n  destination_port: string;\n  /** identifies the channel end on the receiving chain. */\n  destination_channel: string;\n  /** actual opaque bytes transferred directly to the application module */\n  data: Uint8Array;\n  /** block height after which the packet times out */\n  timeout_height?:\n    | Height\n    | undefined;\n  /** block timestamp (in nanoseconds) after which the packet times out */\n  timeout_timestamp: string;\n}\n\n/**\n * PacketState defines the generic type necessary to retrieve and store\n * packet commitments, acknowledgements, and receipts.\n * Caller is responsible for knowing the context necessary to interpret this\n * state as a commitment, acknowledgement, or a receipt.\n */\nexport interface PacketState {\n  /** channel port identifier. */\n  port_id: string;\n  /** channel unique identifier. */\n  channel_id: string;\n  /** packet sequence. */\n  sequence: string;\n  /** embedded data that represents packet state. */\n  data: Uint8Array;\n}\n\n/**\n * PacketId is an identifer for a unique Packet\n * Source chains refer to packets by source port/channel\n * Destination chains refer to packets by destination port/channel\n */\nexport interface PacketId {\n  /** channel port identifier */\n  port_id: string;\n  /** channel unique identifier */\n  channel_id: string;\n  /** packet sequence */\n  sequence: string;\n}\n\n/**\n * Acknowledgement is the recommended acknowledgement format to be used by\n * app-specific protocols.\n * NOTE: The field numbers 21 and 22 were explicitly chosen to avoid accidental\n * conflicts with other protobuf message formats used for acknowledgements.\n * The first byte of any message with this format will be the non-ASCII values\n * `0xaa` (result) or `0xb2` (error). Implemented as defined by ICS:\n * https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#acknowledgement-envelope\n */\nexport interface Acknowledgement {\n  result?: Uint8Array | undefined;\n  error?: string | undefined;\n}\n\n/**\n * Timeout defines an execution deadline structure for 04-channel handlers.\n * This includes packet lifecycle handlers as well as the upgrade handshake handlers.\n * A valid Timeout contains either one or both of a timestamp and block height (sequence).\n */\nexport interface Timeout {\n  /** block height after which the packet or upgrade times out */\n  height?:\n    | Height\n    | undefined;\n  /** block timestamp (in nanoseconds) after which the packet or upgrade times out */\n  timestamp: string;\n}\n\n/** Params defines the set of IBC channel parameters. */\nexport interface Params {\n  /** the relative timeout after which channel upgrades will time out. */\n  upgrade_timeout?: Timeout | undefined;\n}\n\nfunction createBaseChannel(): Channel {\n  return { state: 0, ordering: 0, counterparty: undefined, connection_hops: [], version: \"\", upgrade_sequence: \"0\" };\n}\n\nexport const Channel = {\n  encode(message: Channel, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.state !== 0) {\n      writer.uint32(8).int32(message.state);\n    }\n    if (message.ordering !== 0) {\n      writer.uint32(16).int32(message.ordering);\n    }\n    if (message.counterparty !== undefined) {\n      Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n    }\n    for (const v of message.connection_hops) {\n      writer.uint32(34).string(v!);\n    }\n    if (message.version !== \"\") {\n      writer.uint32(42).string(message.version);\n    }\n    if (message.upgrade_sequence !== \"0\") {\n      writer.uint32(48).uint64(message.upgrade_sequence);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Channel {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseChannel();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.state = reader.int32() as any;\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.ordering = reader.int32() as any;\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.counterparty = Counterparty.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.connection_hops.push(reader.string());\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.version = reader.string();\n          continue;\n        case 6:\n          if (tag !== 48) {\n            break;\n          }\n\n          message.upgrade_sequence = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Channel {\n    return {\n      state: isSet(object.state) ? stateFromJSON(object.state) : 0,\n      ordering: isSet(object.ordering) ? orderFromJSON(object.ordering) : 0,\n      counterparty: isSet(object.counterparty) ? Counterparty.fromJSON(object.counterparty) : undefined,\n      connection_hops: globalThis.Array.isArray(object?.connection_hops)\n        ? object.connection_hops.map((e: any) => globalThis.String(e))\n        : [],\n      version: isSet(object.version) ? globalThis.String(object.version) : \"\",\n      upgrade_sequence: isSet(object.upgrade_sequence) ? globalThis.String(object.upgrade_sequence) : \"0\",\n    };\n  },\n\n  toJSON(message: Channel): unknown {\n    const obj: any = {};\n    if (message.state !== 0) {\n      obj.state = stateToJSON(message.state);\n    }\n    if (message.ordering !== 0) {\n      obj.ordering = orderToJSON(message.ordering);\n    }\n    if (message.counterparty !== undefined) {\n      obj.counterparty = Counterparty.toJSON(message.counterparty);\n    }\n    if (message.connection_hops?.length) {\n      obj.connection_hops = message.connection_hops;\n    }\n    if (message.version !== \"\") {\n      obj.version = message.version;\n    }\n    if (message.upgrade_sequence !== \"0\") {\n      obj.upgrade_sequence = message.upgrade_sequence;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Channel>): Channel {\n    return Channel.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Channel>): Channel {\n    const message = createBaseChannel();\n    message.state = object.state ?? 0;\n    message.ordering = object.ordering ?? 0;\n    message.counterparty = (object.counterparty !== undefined && object.counterparty !== null)\n      ? Counterparty.fromPartial(object.counterparty)\n      : undefined;\n    message.connection_hops = object.connection_hops?.map((e) => e) || [];\n    message.version = object.version ?? \"\";\n    message.upgrade_sequence = object.upgrade_sequence ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseIdentifiedChannel(): IdentifiedChannel {\n  return {\n    state: 0,\n    ordering: 0,\n    counterparty: undefined,\n    connection_hops: [],\n    version: \"\",\n    port_id: \"\",\n    channel_id: \"\",\n    upgrade_sequence: \"0\",\n  };\n}\n\nexport const IdentifiedChannel = {\n  encode(message: IdentifiedChannel, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.state !== 0) {\n      writer.uint32(8).int32(message.state);\n    }\n    if (message.ordering !== 0) {\n      writer.uint32(16).int32(message.ordering);\n    }\n    if (message.counterparty !== undefined) {\n      Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n    }\n    for (const v of message.connection_hops) {\n      writer.uint32(34).string(v!);\n    }\n    if (message.version !== \"\") {\n      writer.uint32(42).string(message.version);\n    }\n    if (message.port_id !== \"\") {\n      writer.uint32(50).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(58).string(message.channel_id);\n    }\n    if (message.upgrade_sequence !== \"0\") {\n      writer.uint32(64).uint64(message.upgrade_sequence);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): IdentifiedChannel {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseIdentifiedChannel();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.state = reader.int32() as any;\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.ordering = reader.int32() as any;\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.counterparty = Counterparty.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.connection_hops.push(reader.string());\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.version = reader.string();\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 8:\n          if (tag !== 64) {\n            break;\n          }\n\n          message.upgrade_sequence = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): IdentifiedChannel {\n    return {\n      state: isSet(object.state) ? stateFromJSON(object.state) : 0,\n      ordering: isSet(object.ordering) ? orderFromJSON(object.ordering) : 0,\n      counterparty: isSet(object.counterparty) ? Counterparty.fromJSON(object.counterparty) : undefined,\n      connection_hops: globalThis.Array.isArray(object?.connection_hops)\n        ? object.connection_hops.map((e: any) => globalThis.String(e))\n        : [],\n      version: isSet(object.version) ? globalThis.String(object.version) : \"\",\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      upgrade_sequence: isSet(object.upgrade_sequence) ? globalThis.String(object.upgrade_sequence) : \"0\",\n    };\n  },\n\n  toJSON(message: IdentifiedChannel): unknown {\n    const obj: any = {};\n    if (message.state !== 0) {\n      obj.state = stateToJSON(message.state);\n    }\n    if (message.ordering !== 0) {\n      obj.ordering = orderToJSON(message.ordering);\n    }\n    if (message.counterparty !== undefined) {\n      obj.counterparty = Counterparty.toJSON(message.counterparty);\n    }\n    if (message.connection_hops?.length) {\n      obj.connection_hops = message.connection_hops;\n    }\n    if (message.version !== \"\") {\n      obj.version = message.version;\n    }\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.upgrade_sequence !== \"0\") {\n      obj.upgrade_sequence = message.upgrade_sequence;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<IdentifiedChannel>): IdentifiedChannel {\n    return IdentifiedChannel.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<IdentifiedChannel>): IdentifiedChannel {\n    const message = createBaseIdentifiedChannel();\n    message.state = object.state ?? 0;\n    message.ordering = object.ordering ?? 0;\n    message.counterparty = (object.counterparty !== undefined && object.counterparty !== null)\n      ? Counterparty.fromPartial(object.counterparty)\n      : undefined;\n    message.connection_hops = object.connection_hops?.map((e) => e) || [];\n    message.version = object.version ?? \"\";\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.upgrade_sequence = object.upgrade_sequence ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseCounterparty(): Counterparty {\n  return { port_id: \"\", channel_id: \"\" };\n}\n\nexport const Counterparty = {\n  encode(message: Counterparty, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Counterparty {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCounterparty();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Counterparty {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n    };\n  },\n\n  toJSON(message: Counterparty): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Counterparty>): Counterparty {\n    return Counterparty.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Counterparty>): Counterparty {\n    const message = createBaseCounterparty();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    return message;\n  },\n};\n\nfunction createBasePacket(): Packet {\n  return {\n    sequence: \"0\",\n    source_port: \"\",\n    source_channel: \"\",\n    destination_port: \"\",\n    destination_channel: \"\",\n    data: new Uint8Array(0),\n    timeout_height: undefined,\n    timeout_timestamp: \"0\",\n  };\n}\n\nexport const Packet = {\n  encode(message: Packet, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sequence !== \"0\") {\n      writer.uint32(8).uint64(message.sequence);\n    }\n    if (message.source_port !== \"\") {\n      writer.uint32(18).string(message.source_port);\n    }\n    if (message.source_channel !== \"\") {\n      writer.uint32(26).string(message.source_channel);\n    }\n    if (message.destination_port !== \"\") {\n      writer.uint32(34).string(message.destination_port);\n    }\n    if (message.destination_channel !== \"\") {\n      writer.uint32(42).string(message.destination_channel);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(50).bytes(message.data);\n    }\n    if (message.timeout_height !== undefined) {\n      Height.encode(message.timeout_height, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.timeout_timestamp !== \"0\") {\n      writer.uint32(64).uint64(message.timeout_timestamp);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Packet {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePacket();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.sequence = longToString(reader.uint64() as Long);\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.source_port = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.source_channel = reader.string();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.destination_port = reader.string();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.destination_channel = reader.string();\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.data = reader.bytes();\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.timeout_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 8:\n          if (tag !== 64) {\n            break;\n          }\n\n          message.timeout_timestamp = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Packet {\n    return {\n      sequence: isSet(object.sequence) ? globalThis.String(object.sequence) : \"0\",\n      source_port: isSet(object.source_port) ? globalThis.String(object.source_port) : \"\",\n      source_channel: isSet(object.source_channel) ? globalThis.String(object.source_channel) : \"\",\n      destination_port: isSet(object.destination_port) ? globalThis.String(object.destination_port) : \"\",\n      destination_channel: isSet(object.destination_channel) ? globalThis.String(object.destination_channel) : \"\",\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(0),\n      timeout_height: isSet(object.timeout_height) ? Height.fromJSON(object.timeout_height) : undefined,\n      timeout_timestamp: isSet(object.timeout_timestamp) ? globalThis.String(object.timeout_timestamp) : \"0\",\n    };\n  },\n\n  toJSON(message: Packet): unknown {\n    const obj: any = {};\n    if (message.sequence !== \"0\") {\n      obj.sequence = message.sequence;\n    }\n    if (message.source_port !== \"\") {\n      obj.source_port = message.source_port;\n    }\n    if (message.source_channel !== \"\") {\n      obj.source_channel = message.source_channel;\n    }\n    if (message.destination_port !== \"\") {\n      obj.destination_port = message.destination_port;\n    }\n    if (message.destination_channel !== \"\") {\n      obj.destination_channel = message.destination_channel;\n    }\n    if (message.data.length !== 0) {\n      obj.data = base64FromBytes(message.data);\n    }\n    if (message.timeout_height !== undefined) {\n      obj.timeout_height = Height.toJSON(message.timeout_height);\n    }\n    if (message.timeout_timestamp !== \"0\") {\n      obj.timeout_timestamp = message.timeout_timestamp;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Packet>): Packet {\n    return Packet.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Packet>): Packet {\n    const message = createBasePacket();\n    message.sequence = object.sequence ?? \"0\";\n    message.source_port = object.source_port ?? \"\";\n    message.source_channel = object.source_channel ?? \"\";\n    message.destination_port = object.destination_port ?? \"\";\n    message.destination_channel = object.destination_channel ?? \"\";\n    message.data = object.data ?? new Uint8Array(0);\n    message.timeout_height = (object.timeout_height !== undefined && object.timeout_height !== null)\n      ? Height.fromPartial(object.timeout_height)\n      : undefined;\n    message.timeout_timestamp = object.timeout_timestamp ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBasePacketState(): PacketState {\n  return { port_id: \"\", channel_id: \"\", sequence: \"0\", data: new Uint8Array(0) };\n}\n\nexport const PacketState = {\n  encode(message: PacketState, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.sequence !== \"0\") {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(34).bytes(message.data);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PacketState {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePacketState();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 24) {\n            break;\n          }\n\n          message.sequence = longToString(reader.uint64() as Long);\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.data = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PacketState {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      sequence: isSet(object.sequence) ? globalThis.String(object.sequence) : \"0\",\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: PacketState): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.sequence !== \"0\") {\n      obj.sequence = message.sequence;\n    }\n    if (message.data.length !== 0) {\n      obj.data = base64FromBytes(message.data);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<PacketState>): PacketState {\n    return PacketState.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<PacketState>): PacketState {\n    const message = createBasePacketState();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.sequence = object.sequence ?? \"0\";\n    message.data = object.data ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBasePacketId(): PacketId {\n  return { port_id: \"\", channel_id: \"\", sequence: \"0\" };\n}\n\nexport const PacketId = {\n  encode(message: PacketId, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.sequence !== \"0\") {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PacketId {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePacketId();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 24) {\n            break;\n          }\n\n          message.sequence = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PacketId {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      sequence: isSet(object.sequence) ? globalThis.String(object.sequence) : \"0\",\n    };\n  },\n\n  toJSON(message: PacketId): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.sequence !== \"0\") {\n      obj.sequence = message.sequence;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<PacketId>): PacketId {\n    return PacketId.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<PacketId>): PacketId {\n    const message = createBasePacketId();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.sequence = object.sequence ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseAcknowledgement(): Acknowledgement {\n  return { result: undefined, error: undefined };\n}\n\nexport const Acknowledgement = {\n  encode(message: Acknowledgement, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.result !== undefined) {\n      writer.uint32(170).bytes(message.result);\n    }\n    if (message.error !== undefined) {\n      writer.uint32(178).string(message.error);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Acknowledgement {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseAcknowledgement();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 21:\n          if (tag !== 170) {\n            break;\n          }\n\n          message.result = reader.bytes();\n          continue;\n        case 22:\n          if (tag !== 178) {\n            break;\n          }\n\n          message.error = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Acknowledgement {\n    return {\n      result: isSet(object.result) ? bytesFromBase64(object.result) : undefined,\n      error: isSet(object.error) ? globalThis.String(object.error) : undefined,\n    };\n  },\n\n  toJSON(message: Acknowledgement): unknown {\n    const obj: any = {};\n    if (message.result !== undefined) {\n      obj.result = base64FromBytes(message.result);\n    }\n    if (message.error !== undefined) {\n      obj.error = message.error;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Acknowledgement>): Acknowledgement {\n    return Acknowledgement.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Acknowledgement>): Acknowledgement {\n    const message = createBaseAcknowledgement();\n    message.result = object.result ?? undefined;\n    message.error = object.error ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseTimeout(): Timeout {\n  return { height: undefined, timestamp: \"0\" };\n}\n\nexport const Timeout = {\n  encode(message: Timeout, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.height !== undefined) {\n      Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.timestamp !== \"0\") {\n      writer.uint32(16).uint64(message.timestamp);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Timeout {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseTimeout();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.height = Height.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.timestamp = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Timeout {\n    return {\n      height: isSet(object.height) ? Height.fromJSON(object.height) : undefined,\n      timestamp: isSet(object.timestamp) ? globalThis.String(object.timestamp) : \"0\",\n    };\n  },\n\n  toJSON(message: Timeout): unknown {\n    const obj: any = {};\n    if (message.height !== undefined) {\n      obj.height = Height.toJSON(message.height);\n    }\n    if (message.timestamp !== \"0\") {\n      obj.timestamp = message.timestamp;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Timeout>): Timeout {\n    return Timeout.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Timeout>): Timeout {\n    const message = createBaseTimeout();\n    message.height = (object.height !== undefined && object.height !== null)\n      ? Height.fromPartial(object.height)\n      : undefined;\n    message.timestamp = object.timestamp ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseParams(): Params {\n  return { upgrade_timeout: undefined };\n}\n\nexport const Params = {\n  encode(message: Params, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.upgrade_timeout !== undefined) {\n      Timeout.encode(message.upgrade_timeout, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Params {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.upgrade_timeout = Timeout.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Params {\n    return { upgrade_timeout: isSet(object.upgrade_timeout) ? Timeout.fromJSON(object.upgrade_timeout) : undefined };\n  },\n\n  toJSON(message: Params): unknown {\n    const obj: any = {};\n    if (message.upgrade_timeout !== undefined) {\n      obj.upgrade_timeout = Timeout.toJSON(message.upgrade_timeout);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Params>): Params {\n    return Params.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Params>): Params {\n    const message = createBaseParams();\n    message.upgrade_timeout = (object.upgrade_timeout !== undefined && object.upgrade_timeout !== null)\n      ? Timeout.fromPartial(object.upgrade_timeout)\n      : undefined;\n    return message;\n  },\n};\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n  if ((globalThis as any).Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\n\nfunction base64FromBytes(arr: Uint8Array): string {\n  if ((globalThis as any).Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin: string[] = [];\n    arr.forEach((byte) => {\n      bin.push(globalThis.String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToString(long: Long) {\n  return long.toString();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1702, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1707, "column": 0}, "map": {"version":3,"file":"packet.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/applications/interchain_accounts/v1/packet.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/applications/interchain_accounts/v1/packet.proto\n\n/* eslint-disable */\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\n\nexport const protobufPackage = \"ibc.applications.interchain_accounts.v1\";\n\n/**\n * Type defines a classification of message issued from a controller chain to its associated interchain accounts\n * host\n */\nexport enum Type {\n  /** TYPE_UNSPECIFIED - Default zero value enumeration */\n  TYPE_UNSPECIFIED = 0,\n  /** TYPE_EXECUTE_TX - Execute a transaction on an interchain accounts host chain */\n  TYPE_EXECUTE_TX = 1,\n  UNRECOGNIZED = -1,\n}\n\nexport function typeFromJSON(object: any): Type {\n  switch (object) {\n    case 0:\n    case \"TYPE_UNSPECIFIED\":\n      return Type.TYPE_UNSPECIFIED;\n    case 1:\n    case \"TYPE_EXECUTE_TX\":\n      return Type.TYPE_EXECUTE_TX;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return Type.UNRECOGNIZED;\n  }\n}\n\nexport function typeToJSON(object: Type): string {\n  switch (object) {\n    case Type.TYPE_UNSPECIFIED:\n      return \"TYPE_UNSPECIFIED\";\n    case Type.TYPE_EXECUTE_TX:\n      return \"TYPE_EXECUTE_TX\";\n    case Type.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n\n/** InterchainAccountPacketData is comprised of a raw transaction, type of transaction and optional memo field. */\nexport interface InterchainAccountPacketData {\n  type: Type;\n  data: Uint8Array;\n  memo: string;\n}\n\n/** CosmosTx contains a list of sdk.Msg's. It should be used when sending transactions to an SDK host chain. */\nexport interface CosmosTx {\n  messages: Any[];\n}\n\nfunction createBaseInterchainAccountPacketData(): InterchainAccountPacketData {\n  return { type: 0, data: new Uint8Array(0), memo: \"\" };\n}\n\nexport const InterchainAccountPacketData = {\n  encode(message: InterchainAccountPacketData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    if (message.memo !== \"\") {\n      writer.uint32(26).string(message.memo);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): InterchainAccountPacketData {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseInterchainAccountPacketData();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.type = reader.int32() as any;\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.data = reader.bytes();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.memo = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): InterchainAccountPacketData {\n    return {\n      type: isSet(object.type) ? typeFromJSON(object.type) : 0,\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(0),\n      memo: isSet(object.memo) ? globalThis.String(object.memo) : \"\",\n    };\n  },\n\n  toJSON(message: InterchainAccountPacketData): unknown {\n    const obj: any = {};\n    if (message.type !== 0) {\n      obj.type = typeToJSON(message.type);\n    }\n    if (message.data.length !== 0) {\n      obj.data = base64FromBytes(message.data);\n    }\n    if (message.memo !== \"\") {\n      obj.memo = message.memo;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<InterchainAccountPacketData>): InterchainAccountPacketData {\n    return InterchainAccountPacketData.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<InterchainAccountPacketData>): InterchainAccountPacketData {\n    const message = createBaseInterchainAccountPacketData();\n    message.type = object.type ?? 0;\n    message.data = object.data ?? new Uint8Array(0);\n    message.memo = object.memo ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseCosmosTx(): CosmosTx {\n  return { messages: [] };\n}\n\nexport const CosmosTx = {\n  encode(message: CosmosTx, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.messages) {\n      Any.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): CosmosTx {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCosmosTx();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.messages.push(Any.decode(reader, reader.uint32()));\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): CosmosTx {\n    return {\n      messages: globalThis.Array.isArray(object?.messages) ? object.messages.map((e: any) => Any.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: CosmosTx): unknown {\n    const obj: any = {};\n    if (message.messages?.length) {\n      obj.messages = message.messages.map((e) => Any.toJSON(e));\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<CosmosTx>): CosmosTx {\n    return CosmosTx.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<CosmosTx>): CosmosTx {\n    const message = createBaseCosmosTx();\n    message.messages = object.messages?.map((e) => Any.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n  if ((globalThis as any).Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\n\nfunction base64FromBytes(arr: Uint8Array): string {\n  if ((globalThis as any).Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin: string[] = [];\n    arr.forEach((byte) => {\n      bin.push(globalThis.String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":";AAAA,sDAAsD;AACtD,YAAY;AACZ,kCAAkC;AAClC,iCAAiC;AACjC,+DAA+D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE/D,kBAAA,EAAoB,CACpB,MAAA,MAAA,4CAA0C;AAC1C,MAAA,mDAAsD;AAEzC,QAAA,eAAe,GAAG,yCAAyC,CAAC;AAEzE;;;GAGG,CACH,IAAY,IAMX;AAND,CAAA,SAAY,IAAI;IACd,sDAAA,EAAwD,CACxD,IAAA,CAAA,IAAA,CAAA,mBAAA,GAAA,EAAA,GAAA,kBAAoB,CAAA;IACpB,iFAAA,EAAmF,CACnF,IAAA,CAAA,IAAA,CAAA,kBAAA,GAAA,EAAA,GAAA,iBAAmB,CAAA;IACnB,IAAA,CAAA,IAAA,CAAA,eAAA,GAAA,CAAA,EAAA,GAAA,cAAiB,CAAA;AACnB,CAAC,EANW,IAAI,GAAJ,QAAA,IAAI,IAAA,CAAJ,QAAA,IAAI,GAAA,CAAA,CAAA,GAMf;AAED,SAAgB,YAAY,CAAC,MAAW;IACtC,OAAQ,MAAM,EAAE;QACd,KAAK,CAAC,CAAC;QACP,KAAK,kBAAkB;YACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC;QAC/B,KAAK,CAAC,CAAC;QACP,KAAK,iBAAiB;YACpB,OAAO,IAAI,CAAC,eAAe,CAAC;QAC9B,KAAK,CAAC,CAAC,CAAC;QACR,KAAK,cAAc,CAAC;QACpB;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;KAC5B;AACH,CAAC;AAbD,QAAA,YAAA,GAAA,aAaC;AAED,SAAgB,UAAU,CAAC,MAAY;IACrC,OAAQ,MAAM,EAAE;QACd,KAAK,IAAI,CAAC,gBAAgB;YACxB,OAAO,kBAAkB,CAAC;QAC5B,KAAK,IAAI,CAAC,eAAe;YACvB,OAAO,iBAAiB,CAAC;QAC3B,KAAK,IAAI,CAAC,YAAY,CAAC;QACvB;YACE,OAAO,cAAc,CAAC;KACzB;AACH,CAAC;AAVD,QAAA,UAAA,GAAA,WAUC;AAcD,SAAS,qCAAqC;IAC5C,OAAO;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAAE,IAAI,EAAE,EAAE;IAAA,CAAE,CAAC;AACxD,CAAC;AAEY,QAAA,2BAA2B,GAAG;IACzC,MAAM,EAAC,OAAoC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACnF,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,EAAE;YACtB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACtC;QACD,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACvC;QACD,IAAI,OAAO,CAAC,IAAI,KAAK,EAAE,EAAE;YACvB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACxC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,qCAAqC,EAAE,CAAC;QACxD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACb,MAAM;qBACP;oBAED,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,EAAS,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC9B,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAC/B,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC3E,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;SAC/D,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAoC;QACzC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,EAAE;YACtB,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,GAAG,CAAC,IAAI,GAAG,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC1C;QACD,IAAI,OAAO,CAAC,IAAI,KAAK,EAAE,EAAE;YACvB,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;SACzB;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA+C;QACpD,OAAO,QAAA,2BAA2B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC7D,CAAC;IACD,WAAW,EAAC,MAAgD;;QAC1D,MAAM,OAAO,GAAG,qCAAqC,EAAE,CAAC;QACxD,OAAO,CAAC,IAAI,GAAG,CAAA,KAAA,MAAM,CAAC,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QAChC,OAAO,CAAC,IAAI,GAAG,CAAA,KAAA,MAAM,CAAC,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAChD,OAAO,CAAC,IAAI,GAAG,CAAA,KAAA,MAAM,CAAC,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACjC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,kBAAkB;IACzB,OAAO;QAAE,QAAQ,EAAE,EAAE;IAAA,CAAE,CAAC;AAC1B,CAAC;AAEY,QAAA,QAAQ,GAAG;IACtB,MAAM,EAAC,OAAiB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAChE,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAE;YAChC,MAAA,GAAG,CAAC,MAAM,CAAC,CAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACnD;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,kBAAkB,EAAE,CAAC;QACrC,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAA,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAC3D,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,CAAG,CAAD,KAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;SAC7G,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAiB;;QACtB,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,CAAA,KAAA,OAAO,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM,EAAE;YAC5B,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,KAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3D;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA4B;QACjC,OAAO,QAAA,QAAQ,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC1C,CAAC;IACD,WAAW,EAAC,MAA6B;;QACvC,MAAM,OAAO,GAAG,kBAAkB,EAAE,CAAC;QACrC,OAAO,CAAC,QAAQ,GAAG,CAAA,CAAA,KAAA,MAAM,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,KAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAI,EAAE,CAAC;QACzE,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,eAAe,CAAC,GAAW;IAClC,IAAK,UAAkB,CAAC,MAAM,EAAE;QAC9B,OAAO,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;KAC/D,MAAM;QACL,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE;YACnC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC5B;QACD,OAAO,GAAG,CAAC;KACZ;AACH,CAAC;AAED,SAAS,eAAe,CAAC,GAAe;IACtC,IAAK,UAAkB,CAAC,MAAM,EAAE;QAC9B,OAAO,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACvD,MAAM;QACL,MAAM,GAAG,GAAa,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACnB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;KACtC;AACH,CAAC;AAUD,SAAS,KAAK,CAAC,KAAU;IACvB,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AAC/C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1952, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1957, "column": 0}, "map": {"version":3,"file":"controller.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/applications/interchain_accounts/controller/v1/controller.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/applications/interchain_accounts/controller/v1/controller.proto\n\n/* eslint-disable */\nimport * as _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"ibc.applications.interchain_accounts.controller.v1\";\n\n/**\n * Params defines the set of on-chain interchain accounts parameters.\n * The following parameters may be used to disable the controller submodule.\n */\nexport interface Params {\n  /** controller_enabled enables or disables the controller submodule. */\n  controller_enabled: boolean;\n}\n\nfunction createBaseParams(): Params {\n  return { controller_enabled: false };\n}\n\nexport const Params = {\n  encode(message: Params, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.controller_enabled !== false) {\n      writer.uint32(8).bool(message.controller_enabled);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Params {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.controller_enabled = reader.bool();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Params {\n    return {\n      controller_enabled: isSet(object.controller_enabled) ? globalThis.Boolean(object.controller_enabled) : false,\n    };\n  },\n\n  toJSON(message: Params): unknown {\n    const obj: any = {};\n    if (message.controller_enabled !== false) {\n      obj.controller_enabled = message.controller_enabled;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Params>): Params {\n    return Params.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Params>): Params {\n    const message = createBaseParams();\n    message.controller_enabled = object.controller_enabled ?? false;\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":";AAAA,sDAAsD;AACtD,YAAY;AACZ,kCAAkC;AAClC,iCAAiC;AACjC,8EAA8E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE9E,kBAAA,EAAoB,CACpB,MAAA,MAAA,4CAA0C;AAE7B,QAAA,eAAe,GAAG,oDAAoD,CAAC;AAWpF,SAAS,gBAAgB;IACvB,OAAO;QAAE,kBAAkB,EAAE,KAAK;IAAA,CAAE,CAAC;AACvC,CAAC;AAEY,QAAA,MAAM,GAAG;IACpB,MAAM,EAAC,OAAe,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC9D,IAAI,OAAO,CAAC,kBAAkB,KAAK,KAAK,EAAE;YACxC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;SACnD;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,gBAAgB,EAAE,CAAC;QACnC,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACb,MAAM;qBACP;oBAED,OAAO,CAAC,kBAAkB,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;oBAC3C,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,kBAAkB,EAAE,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK;SAC7G,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAe;QACpB,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,kBAAkB,KAAK,KAAK,EAAE;YACxC,GAAG,CAAC,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;SACrD;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA0B;QAC/B,OAAO,QAAA,MAAM,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACxC,CAAC;IACD,WAAW,EAAC,MAA2B;;QACrC,MAAM,OAAO,GAAG,gBAAgB,EAAE,CAAC;QACnC,OAAO,CAAC,kBAAkB,GAAG,CAAA,KAAA,MAAM,CAAC,kBAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,KAAK,CAAC;QAChE,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAUF,SAAS,KAAK,CAAC,KAAU;IACvB,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AAC/C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2056, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2061, "column": 0}, "map": {"version":3,"file":"tx.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/applications/interchain_accounts/controller/v1/tx.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/applications/interchain_accounts/controller/v1/tx.proto\n\n/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Order, orderFromJSON, orderToJSON } from \"../../../../core/channel/v1/channel\";\nimport { InterchainAccountPacketData } from \"../../v1/packet\";\nimport { Params } from \"./controller\";\n\nexport const protobufPackage = \"ibc.applications.interchain_accounts.controller.v1\";\n\n/** MsgRegisterInterchainAccount defines the payload for Msg/RegisterAccount */\nexport interface MsgRegisterInterchainAccount {\n  owner: string;\n  connection_id: string;\n  version: string;\n  ordering: Order;\n}\n\n/** MsgRegisterInterchainAccountResponse defines the response for Msg/RegisterAccount */\nexport interface MsgRegisterInterchainAccountResponse {\n  channel_id: string;\n  port_id: string;\n}\n\n/** MsgSendTx defines the payload for Msg/SendTx */\nexport interface MsgSendTx {\n  owner: string;\n  connection_id: string;\n  packet_data?:\n    | InterchainAccountPacketData\n    | undefined;\n  /**\n   * Relative timeout timestamp provided will be added to the current block time during transaction execution.\n   * The timeout timestamp must be non-zero.\n   */\n  relative_timeout: string;\n}\n\n/** MsgSendTxResponse defines the response for MsgSendTx */\nexport interface MsgSendTxResponse {\n  sequence: string;\n}\n\n/** MsgUpdateParams defines the payload for Msg/UpdateParams */\nexport interface MsgUpdateParams {\n  /** signer address */\n  signer: string;\n  /**\n   * params defines the 27-interchain-accounts/controller parameters to update.\n   *\n   * NOTE: All parameters must be supplied.\n   */\n  params?: Params | undefined;\n}\n\n/** MsgUpdateParamsResponse defines the response for Msg/UpdateParams */\nexport interface MsgUpdateParamsResponse {\n}\n\nfunction createBaseMsgRegisterInterchainAccount(): MsgRegisterInterchainAccount {\n  return { owner: \"\", connection_id: \"\", version: \"\", ordering: 0 };\n}\n\nexport const MsgRegisterInterchainAccount = {\n  encode(message: MsgRegisterInterchainAccount, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.owner !== \"\") {\n      writer.uint32(10).string(message.owner);\n    }\n    if (message.connection_id !== \"\") {\n      writer.uint32(18).string(message.connection_id);\n    }\n    if (message.version !== \"\") {\n      writer.uint32(26).string(message.version);\n    }\n    if (message.ordering !== 0) {\n      writer.uint32(32).int32(message.ordering);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRegisterInterchainAccount {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgRegisterInterchainAccount();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.owner = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.connection_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.version = reader.string();\n          continue;\n        case 4:\n          if (tag !== 32) {\n            break;\n          }\n\n          message.ordering = reader.int32() as any;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgRegisterInterchainAccount {\n    return {\n      owner: isSet(object.owner) ? globalThis.String(object.owner) : \"\",\n      connection_id: isSet(object.connection_id) ? globalThis.String(object.connection_id) : \"\",\n      version: isSet(object.version) ? globalThis.String(object.version) : \"\",\n      ordering: isSet(object.ordering) ? orderFromJSON(object.ordering) : 0,\n    };\n  },\n\n  toJSON(message: MsgRegisterInterchainAccount): unknown {\n    const obj: any = {};\n    if (message.owner !== \"\") {\n      obj.owner = message.owner;\n    }\n    if (message.connection_id !== \"\") {\n      obj.connection_id = message.connection_id;\n    }\n    if (message.version !== \"\") {\n      obj.version = message.version;\n    }\n    if (message.ordering !== 0) {\n      obj.ordering = orderToJSON(message.ordering);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgRegisterInterchainAccount>): MsgRegisterInterchainAccount {\n    return MsgRegisterInterchainAccount.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgRegisterInterchainAccount>): MsgRegisterInterchainAccount {\n    const message = createBaseMsgRegisterInterchainAccount();\n    message.owner = object.owner ?? \"\";\n    message.connection_id = object.connection_id ?? \"\";\n    message.version = object.version ?? \"\";\n    message.ordering = object.ordering ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseMsgRegisterInterchainAccountResponse(): MsgRegisterInterchainAccountResponse {\n  return { channel_id: \"\", port_id: \"\" };\n}\n\nexport const MsgRegisterInterchainAccountResponse = {\n  encode(message: MsgRegisterInterchainAccountResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.channel_id !== \"\") {\n      writer.uint32(10).string(message.channel_id);\n    }\n    if (message.port_id !== \"\") {\n      writer.uint32(18).string(message.port_id);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRegisterInterchainAccountResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgRegisterInterchainAccountResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgRegisterInterchainAccountResponse {\n    return {\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n    };\n  },\n\n  toJSON(message: MsgRegisterInterchainAccountResponse): unknown {\n    const obj: any = {};\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgRegisterInterchainAccountResponse>): MsgRegisterInterchainAccountResponse {\n    return MsgRegisterInterchainAccountResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgRegisterInterchainAccountResponse>): MsgRegisterInterchainAccountResponse {\n    const message = createBaseMsgRegisterInterchainAccountResponse();\n    message.channel_id = object.channel_id ?? \"\";\n    message.port_id = object.port_id ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgSendTx(): MsgSendTx {\n  return { owner: \"\", connection_id: \"\", packet_data: undefined, relative_timeout: \"0\" };\n}\n\nexport const MsgSendTx = {\n  encode(message: MsgSendTx, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.owner !== \"\") {\n      writer.uint32(10).string(message.owner);\n    }\n    if (message.connection_id !== \"\") {\n      writer.uint32(18).string(message.connection_id);\n    }\n    if (message.packet_data !== undefined) {\n      InterchainAccountPacketData.encode(message.packet_data, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.relative_timeout !== \"0\") {\n      writer.uint32(32).uint64(message.relative_timeout);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSendTx {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSendTx();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.owner = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.connection_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.packet_data = InterchainAccountPacketData.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 32) {\n            break;\n          }\n\n          message.relative_timeout = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgSendTx {\n    return {\n      owner: isSet(object.owner) ? globalThis.String(object.owner) : \"\",\n      connection_id: isSet(object.connection_id) ? globalThis.String(object.connection_id) : \"\",\n      packet_data: isSet(object.packet_data) ? InterchainAccountPacketData.fromJSON(object.packet_data) : undefined,\n      relative_timeout: isSet(object.relative_timeout) ? globalThis.String(object.relative_timeout) : \"0\",\n    };\n  },\n\n  toJSON(message: MsgSendTx): unknown {\n    const obj: any = {};\n    if (message.owner !== \"\") {\n      obj.owner = message.owner;\n    }\n    if (message.connection_id !== \"\") {\n      obj.connection_id = message.connection_id;\n    }\n    if (message.packet_data !== undefined) {\n      obj.packet_data = InterchainAccountPacketData.toJSON(message.packet_data);\n    }\n    if (message.relative_timeout !== \"0\") {\n      obj.relative_timeout = message.relative_timeout;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgSendTx>): MsgSendTx {\n    return MsgSendTx.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgSendTx>): MsgSendTx {\n    const message = createBaseMsgSendTx();\n    message.owner = object.owner ?? \"\";\n    message.connection_id = object.connection_id ?? \"\";\n    message.packet_data = (object.packet_data !== undefined && object.packet_data !== null)\n      ? InterchainAccountPacketData.fromPartial(object.packet_data)\n      : undefined;\n    message.relative_timeout = object.relative_timeout ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseMsgSendTxResponse(): MsgSendTxResponse {\n  return { sequence: \"0\" };\n}\n\nexport const MsgSendTxResponse = {\n  encode(message: MsgSendTxResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sequence !== \"0\") {\n      writer.uint32(8).uint64(message.sequence);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSendTxResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSendTxResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.sequence = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgSendTxResponse {\n    return { sequence: isSet(object.sequence) ? globalThis.String(object.sequence) : \"0\" };\n  },\n\n  toJSON(message: MsgSendTxResponse): unknown {\n    const obj: any = {};\n    if (message.sequence !== \"0\") {\n      obj.sequence = message.sequence;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgSendTxResponse>): MsgSendTxResponse {\n    return MsgSendTxResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgSendTxResponse>): MsgSendTxResponse {\n    const message = createBaseMsgSendTxResponse();\n    message.sequence = object.sequence ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateParams(): MsgUpdateParams {\n  return { signer: \"\", params: undefined };\n}\n\nexport const MsgUpdateParams = {\n  encode(message: MsgUpdateParams, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.signer !== \"\") {\n      writer.uint32(10).string(message.signer);\n    }\n    if (message.params !== undefined) {\n      Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParams {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.params = Params.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateParams {\n    return {\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n      params: isSet(object.params) ? Params.fromJSON(object.params) : undefined,\n    };\n  },\n\n  toJSON(message: MsgUpdateParams): unknown {\n    const obj: any = {};\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    if (message.params !== undefined) {\n      obj.params = Params.toJSON(message.params);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateParams>): MsgUpdateParams {\n    return MsgUpdateParams.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgUpdateParams>): MsgUpdateParams {\n    const message = createBaseMsgUpdateParams();\n    message.signer = object.signer ?? \"\";\n    message.params = (object.params !== undefined && object.params !== null)\n      ? Params.fromPartial(object.params)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateParamsResponse(): MsgUpdateParamsResponse {\n  return {};\n}\n\nexport const MsgUpdateParamsResponse = {\n  encode(_: MsgUpdateParamsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParamsResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParamsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateParamsResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateParamsResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse {\n    return MsgUpdateParamsResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse {\n    const message = createBaseMsgUpdateParamsResponse();\n    return message;\n  },\n};\n\n/** Msg defines the 27-interchain-accounts/controller Msg service. */\nexport interface Msg {\n  /** RegisterInterchainAccount defines a rpc handler for MsgRegisterInterchainAccount. */\n  RegisterInterchainAccount(request: MsgRegisterInterchainAccount): Promise<MsgRegisterInterchainAccountResponse>;\n  /** SendTx defines a rpc handler for MsgSendTx. */\n  SendTx(request: MsgSendTx): Promise<MsgSendTxResponse>;\n  /** UpdateParams defines a rpc handler for MsgUpdateParams. */\n  UpdateParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse>;\n}\n\nexport const MsgServiceName = \"ibc.applications.interchain_accounts.controller.v1.Msg\";\nexport class MsgClientImpl implements Msg {\n  private readonly rpc: Rpc;\n  private readonly service: string;\n  constructor(rpc: Rpc, opts?: { service?: string }) {\n    this.service = opts?.service || MsgServiceName;\n    this.rpc = rpc;\n    this.RegisterInterchainAccount = this.RegisterInterchainAccount.bind(this);\n    this.SendTx = this.SendTx.bind(this);\n    this.UpdateParams = this.UpdateParams.bind(this);\n  }\n  RegisterInterchainAccount(request: MsgRegisterInterchainAccount): Promise<MsgRegisterInterchainAccountResponse> {\n    const data = MsgRegisterInterchainAccount.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"RegisterInterchainAccount\", data);\n    return promise.then((data) => MsgRegisterInterchainAccountResponse.decode(_m0.Reader.create(data)));\n  }\n\n  SendTx(request: MsgSendTx): Promise<MsgSendTxResponse> {\n    const data = MsgSendTx.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"SendTx\", data);\n    return promise.then((data) => MsgSendTxResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse> {\n    const data = MsgUpdateParams.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateParams\", data);\n    return promise.then((data) => MsgUpdateParamsResponse.decode(_m0.Reader.create(data)));\n  }\n}\n\ninterface Rpc {\n  request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToString(long: Long) {\n  return long.toString();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2579, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2584, "column": 0}, "map": {"version":3,"file":"fee.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/applications/fee/v1/fee.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/applications/fee/v1/fee.proto\n\n/* eslint-disable */\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { PacketId } from \"../../../core/channel/v1/channel\";\n\nexport const protobufPackage = \"ibc.applications.fee.v1\";\n\n/** Fee defines the ICS29 receive, acknowledgement and timeout fees */\nexport interface Fee {\n  /** the packet receive fee */\n  recv_fee: Coin[];\n  /** the packet acknowledgement fee */\n  ack_fee: Coin[];\n  /** the packet timeout fee */\n  timeout_fee: Coin[];\n}\n\n/** PacketFee contains ICS29 relayer fees, refund address and optional list of permitted relayers */\nexport interface PacketFee {\n  /** fee encapsulates the recv, ack and timeout fees associated with an IBC packet */\n  fee?:\n    | Fee\n    | undefined;\n  /** the refund address for unspent fees */\n  refund_address: string;\n  /** optional list of relayers permitted to receive fees */\n  relayers: string[];\n}\n\n/** PacketFees contains a list of type PacketFee */\nexport interface PacketFees {\n  /** list of packet fees */\n  packet_fees: PacketFee[];\n}\n\n/** IdentifiedPacketFees contains a list of type PacketFee and associated PacketId */\nexport interface IdentifiedPacketFees {\n  /** unique packet identifier comprised of the channel ID, port ID and sequence */\n  packet_id?:\n    | PacketId\n    | undefined;\n  /** list of packet fees */\n  packet_fees: PacketFee[];\n}\n\nfunction createBaseFee(): Fee {\n  return { recv_fee: [], ack_fee: [], timeout_fee: [] };\n}\n\nexport const Fee = {\n  encode(message: Fee, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.recv_fee) {\n      Coin.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.ack_fee) {\n      Coin.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    for (const v of message.timeout_fee) {\n      Coin.encode(v!, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Fee {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFee();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.recv_fee.push(Coin.decode(reader, reader.uint32()));\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.ack_fee.push(Coin.decode(reader, reader.uint32()));\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.timeout_fee.push(Coin.decode(reader, reader.uint32()));\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Fee {\n    return {\n      recv_fee: globalThis.Array.isArray(object?.recv_fee) ? object.recv_fee.map((e: any) => Coin.fromJSON(e)) : [],\n      ack_fee: globalThis.Array.isArray(object?.ack_fee) ? object.ack_fee.map((e: any) => Coin.fromJSON(e)) : [],\n      timeout_fee: globalThis.Array.isArray(object?.timeout_fee)\n        ? object.timeout_fee.map((e: any) => Coin.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: Fee): unknown {\n    const obj: any = {};\n    if (message.recv_fee?.length) {\n      obj.recv_fee = message.recv_fee.map((e) => Coin.toJSON(e));\n    }\n    if (message.ack_fee?.length) {\n      obj.ack_fee = message.ack_fee.map((e) => Coin.toJSON(e));\n    }\n    if (message.timeout_fee?.length) {\n      obj.timeout_fee = message.timeout_fee.map((e) => Coin.toJSON(e));\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Fee>): Fee {\n    return Fee.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Fee>): Fee {\n    const message = createBaseFee();\n    message.recv_fee = object.recv_fee?.map((e) => Coin.fromPartial(e)) || [];\n    message.ack_fee = object.ack_fee?.map((e) => Coin.fromPartial(e)) || [];\n    message.timeout_fee = object.timeout_fee?.map((e) => Coin.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBasePacketFee(): PacketFee {\n  return { fee: undefined, refund_address: \"\", relayers: [] };\n}\n\nexport const PacketFee = {\n  encode(message: PacketFee, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.fee !== undefined) {\n      Fee.encode(message.fee, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.refund_address !== \"\") {\n      writer.uint32(18).string(message.refund_address);\n    }\n    for (const v of message.relayers) {\n      writer.uint32(26).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PacketFee {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePacketFee();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.fee = Fee.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.refund_address = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.relayers.push(reader.string());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PacketFee {\n    return {\n      fee: isSet(object.fee) ? Fee.fromJSON(object.fee) : undefined,\n      refund_address: isSet(object.refund_address) ? globalThis.String(object.refund_address) : \"\",\n      relayers: globalThis.Array.isArray(object?.relayers) ? object.relayers.map((e: any) => globalThis.String(e)) : [],\n    };\n  },\n\n  toJSON(message: PacketFee): unknown {\n    const obj: any = {};\n    if (message.fee !== undefined) {\n      obj.fee = Fee.toJSON(message.fee);\n    }\n    if (message.refund_address !== \"\") {\n      obj.refund_address = message.refund_address;\n    }\n    if (message.relayers?.length) {\n      obj.relayers = message.relayers;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<PacketFee>): PacketFee {\n    return PacketFee.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<PacketFee>): PacketFee {\n    const message = createBasePacketFee();\n    message.fee = (object.fee !== undefined && object.fee !== null) ? Fee.fromPartial(object.fee) : undefined;\n    message.refund_address = object.refund_address ?? \"\";\n    message.relayers = object.relayers?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBasePacketFees(): PacketFees {\n  return { packet_fees: [] };\n}\n\nexport const PacketFees = {\n  encode(message: PacketFees, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.packet_fees) {\n      PacketFee.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PacketFees {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePacketFees();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.packet_fees.push(PacketFee.decode(reader, reader.uint32()));\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PacketFees {\n    return {\n      packet_fees: globalThis.Array.isArray(object?.packet_fees)\n        ? object.packet_fees.map((e: any) => PacketFee.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: PacketFees): unknown {\n    const obj: any = {};\n    if (message.packet_fees?.length) {\n      obj.packet_fees = message.packet_fees.map((e) => PacketFee.toJSON(e));\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<PacketFees>): PacketFees {\n    return PacketFees.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<PacketFees>): PacketFees {\n    const message = createBasePacketFees();\n    message.packet_fees = object.packet_fees?.map((e) => PacketFee.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseIdentifiedPacketFees(): IdentifiedPacketFees {\n  return { packet_id: undefined, packet_fees: [] };\n}\n\nexport const IdentifiedPacketFees = {\n  encode(message: IdentifiedPacketFees, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.packet_id !== undefined) {\n      PacketId.encode(message.packet_id, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.packet_fees) {\n      PacketFee.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): IdentifiedPacketFees {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseIdentifiedPacketFees();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.packet_id = PacketId.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.packet_fees.push(PacketFee.decode(reader, reader.uint32()));\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): IdentifiedPacketFees {\n    return {\n      packet_id: isSet(object.packet_id) ? PacketId.fromJSON(object.packet_id) : undefined,\n      packet_fees: globalThis.Array.isArray(object?.packet_fees)\n        ? object.packet_fees.map((e: any) => PacketFee.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: IdentifiedPacketFees): unknown {\n    const obj: any = {};\n    if (message.packet_id !== undefined) {\n      obj.packet_id = PacketId.toJSON(message.packet_id);\n    }\n    if (message.packet_fees?.length) {\n      obj.packet_fees = message.packet_fees.map((e) => PacketFee.toJSON(e));\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<IdentifiedPacketFees>): IdentifiedPacketFees {\n    return IdentifiedPacketFees.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<IdentifiedPacketFees>): IdentifiedPacketFees {\n    const message = createBaseIdentifiedPacketFees();\n    message.packet_id = (object.packet_id !== undefined && object.packet_id !== null)\n      ? PacketId.fromPartial(object.packet_id)\n      : undefined;\n    message.packet_fees = object.packet_fees?.map((e) => PacketFee.fromPartial(e)) || [];\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2929, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2934, "column": 0}, "map": {"version":3,"file":"tx.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/applications/fee/v1/tx.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/applications/fee/v1/tx.proto\n\n/* eslint-disable */\nimport * as _m0 from \"protobufjs/minimal\";\nimport { PacketId } from \"../../../core/channel/v1/channel\";\nimport { Fee, PacketFee } from \"./fee\";\n\nexport const protobufPackage = \"ibc.applications.fee.v1\";\n\n/** MsgRegisterPayee defines the request type for the RegisterPayee rpc */\nexport interface MsgRegisterPayee {\n  /** unique port identifier */\n  port_id: string;\n  /** unique channel identifier */\n  channel_id: string;\n  /** the relayer address */\n  relayer: string;\n  /** the payee address */\n  payee: string;\n}\n\n/** MsgRegisterPayeeResponse defines the response type for the RegisterPayee rpc */\nexport interface MsgRegisterPayeeResponse {\n}\n\n/** MsgRegisterCounterpartyPayee defines the request type for the RegisterCounterpartyPayee rpc */\nexport interface MsgRegisterCounterpartyPayee {\n  /** unique port identifier */\n  port_id: string;\n  /** unique channel identifier */\n  channel_id: string;\n  /** the relayer address */\n  relayer: string;\n  /** the counterparty payee address */\n  counterparty_payee: string;\n}\n\n/** MsgRegisterCounterpartyPayeeResponse defines the response type for the RegisterCounterpartyPayee rpc */\nexport interface MsgRegisterCounterpartyPayeeResponse {\n}\n\n/**\n * MsgPayPacketFee defines the request type for the PayPacketFee rpc\n * This Msg can be used to pay for a packet at the next sequence send & should be combined with the Msg that will be\n * paid for\n */\nexport interface MsgPayPacketFee {\n  /** fee encapsulates the recv, ack and timeout fees associated with an IBC packet */\n  fee?:\n    | Fee\n    | undefined;\n  /** the source port unique identifier */\n  source_port_id: string;\n  /** the source channel unique identifer */\n  source_channel_id: string;\n  /** account address to refund fee if necessary */\n  signer: string;\n  /** optional list of relayers permitted to the receive packet fees */\n  relayers: string[];\n}\n\n/** MsgPayPacketFeeResponse defines the response type for the PayPacketFee rpc */\nexport interface MsgPayPacketFeeResponse {\n}\n\n/**\n * MsgPayPacketFeeAsync defines the request type for the PayPacketFeeAsync rpc\n * This Msg can be used to pay for a packet at a specified sequence (instead of the next sequence send)\n */\nexport interface MsgPayPacketFeeAsync {\n  /** unique packet identifier comprised of the channel ID, port ID and sequence */\n  packet_id?:\n    | PacketId\n    | undefined;\n  /** the packet fee associated with a particular IBC packet */\n  packet_fee?: PacketFee | undefined;\n}\n\n/** MsgPayPacketFeeAsyncResponse defines the response type for the PayPacketFeeAsync rpc */\nexport interface MsgPayPacketFeeAsyncResponse {\n}\n\nfunction createBaseMsgRegisterPayee(): MsgRegisterPayee {\n  return { port_id: \"\", channel_id: \"\", relayer: \"\", payee: \"\" };\n}\n\nexport const MsgRegisterPayee = {\n  encode(message: MsgRegisterPayee, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.relayer !== \"\") {\n      writer.uint32(26).string(message.relayer);\n    }\n    if (message.payee !== \"\") {\n      writer.uint32(34).string(message.payee);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRegisterPayee {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgRegisterPayee();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.relayer = reader.string();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.payee = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgRegisterPayee {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      relayer: isSet(object.relayer) ? globalThis.String(object.relayer) : \"\",\n      payee: isSet(object.payee) ? globalThis.String(object.payee) : \"\",\n    };\n  },\n\n  toJSON(message: MsgRegisterPayee): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.relayer !== \"\") {\n      obj.relayer = message.relayer;\n    }\n    if (message.payee !== \"\") {\n      obj.payee = message.payee;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgRegisterPayee>): MsgRegisterPayee {\n    return MsgRegisterPayee.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgRegisterPayee>): MsgRegisterPayee {\n    const message = createBaseMsgRegisterPayee();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.relayer = object.relayer ?? \"\";\n    message.payee = object.payee ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgRegisterPayeeResponse(): MsgRegisterPayeeResponse {\n  return {};\n}\n\nexport const MsgRegisterPayeeResponse = {\n  encode(_: MsgRegisterPayeeResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRegisterPayeeResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgRegisterPayeeResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgRegisterPayeeResponse {\n    return {};\n  },\n\n  toJSON(_: MsgRegisterPayeeResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgRegisterPayeeResponse>): MsgRegisterPayeeResponse {\n    return MsgRegisterPayeeResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgRegisterPayeeResponse>): MsgRegisterPayeeResponse {\n    const message = createBaseMsgRegisterPayeeResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgRegisterCounterpartyPayee(): MsgRegisterCounterpartyPayee {\n  return { port_id: \"\", channel_id: \"\", relayer: \"\", counterparty_payee: \"\" };\n}\n\nexport const MsgRegisterCounterpartyPayee = {\n  encode(message: MsgRegisterCounterpartyPayee, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.relayer !== \"\") {\n      writer.uint32(26).string(message.relayer);\n    }\n    if (message.counterparty_payee !== \"\") {\n      writer.uint32(34).string(message.counterparty_payee);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRegisterCounterpartyPayee {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgRegisterCounterpartyPayee();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.relayer = reader.string();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.counterparty_payee = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgRegisterCounterpartyPayee {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      relayer: isSet(object.relayer) ? globalThis.String(object.relayer) : \"\",\n      counterparty_payee: isSet(object.counterparty_payee) ? globalThis.String(object.counterparty_payee) : \"\",\n    };\n  },\n\n  toJSON(message: MsgRegisterCounterpartyPayee): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.relayer !== \"\") {\n      obj.relayer = message.relayer;\n    }\n    if (message.counterparty_payee !== \"\") {\n      obj.counterparty_payee = message.counterparty_payee;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgRegisterCounterpartyPayee>): MsgRegisterCounterpartyPayee {\n    return MsgRegisterCounterpartyPayee.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgRegisterCounterpartyPayee>): MsgRegisterCounterpartyPayee {\n    const message = createBaseMsgRegisterCounterpartyPayee();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.relayer = object.relayer ?? \"\";\n    message.counterparty_payee = object.counterparty_payee ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgRegisterCounterpartyPayeeResponse(): MsgRegisterCounterpartyPayeeResponse {\n  return {};\n}\n\nexport const MsgRegisterCounterpartyPayeeResponse = {\n  encode(_: MsgRegisterCounterpartyPayeeResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRegisterCounterpartyPayeeResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgRegisterCounterpartyPayeeResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgRegisterCounterpartyPayeeResponse {\n    return {};\n  },\n\n  toJSON(_: MsgRegisterCounterpartyPayeeResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgRegisterCounterpartyPayeeResponse>): MsgRegisterCounterpartyPayeeResponse {\n    return MsgRegisterCounterpartyPayeeResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgRegisterCounterpartyPayeeResponse>): MsgRegisterCounterpartyPayeeResponse {\n    const message = createBaseMsgRegisterCounterpartyPayeeResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgPayPacketFee(): MsgPayPacketFee {\n  return { fee: undefined, source_port_id: \"\", source_channel_id: \"\", signer: \"\", relayers: [] };\n}\n\nexport const MsgPayPacketFee = {\n  encode(message: MsgPayPacketFee, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.fee !== undefined) {\n      Fee.encode(message.fee, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.source_port_id !== \"\") {\n      writer.uint32(18).string(message.source_port_id);\n    }\n    if (message.source_channel_id !== \"\") {\n      writer.uint32(26).string(message.source_channel_id);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    for (const v of message.relayers) {\n      writer.uint32(42).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgPayPacketFee {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgPayPacketFee();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.fee = Fee.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.source_port_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.source_channel_id = reader.string();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.relayers.push(reader.string());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgPayPacketFee {\n    return {\n      fee: isSet(object.fee) ? Fee.fromJSON(object.fee) : undefined,\n      source_port_id: isSet(object.source_port_id) ? globalThis.String(object.source_port_id) : \"\",\n      source_channel_id: isSet(object.source_channel_id) ? globalThis.String(object.source_channel_id) : \"\",\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n      relayers: globalThis.Array.isArray(object?.relayers) ? object.relayers.map((e: any) => globalThis.String(e)) : [],\n    };\n  },\n\n  toJSON(message: MsgPayPacketFee): unknown {\n    const obj: any = {};\n    if (message.fee !== undefined) {\n      obj.fee = Fee.toJSON(message.fee);\n    }\n    if (message.source_port_id !== \"\") {\n      obj.source_port_id = message.source_port_id;\n    }\n    if (message.source_channel_id !== \"\") {\n      obj.source_channel_id = message.source_channel_id;\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    if (message.relayers?.length) {\n      obj.relayers = message.relayers;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgPayPacketFee>): MsgPayPacketFee {\n    return MsgPayPacketFee.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgPayPacketFee>): MsgPayPacketFee {\n    const message = createBaseMsgPayPacketFee();\n    message.fee = (object.fee !== undefined && object.fee !== null) ? Fee.fromPartial(object.fee) : undefined;\n    message.source_port_id = object.source_port_id ?? \"\";\n    message.source_channel_id = object.source_channel_id ?? \"\";\n    message.signer = object.signer ?? \"\";\n    message.relayers = object.relayers?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseMsgPayPacketFeeResponse(): MsgPayPacketFeeResponse {\n  return {};\n}\n\nexport const MsgPayPacketFeeResponse = {\n  encode(_: MsgPayPacketFeeResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgPayPacketFeeResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgPayPacketFeeResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgPayPacketFeeResponse {\n    return {};\n  },\n\n  toJSON(_: MsgPayPacketFeeResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgPayPacketFeeResponse>): MsgPayPacketFeeResponse {\n    return MsgPayPacketFeeResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgPayPacketFeeResponse>): MsgPayPacketFeeResponse {\n    const message = createBaseMsgPayPacketFeeResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgPayPacketFeeAsync(): MsgPayPacketFeeAsync {\n  return { packet_id: undefined, packet_fee: undefined };\n}\n\nexport const MsgPayPacketFeeAsync = {\n  encode(message: MsgPayPacketFeeAsync, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.packet_id !== undefined) {\n      PacketId.encode(message.packet_id, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.packet_fee !== undefined) {\n      PacketFee.encode(message.packet_fee, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgPayPacketFeeAsync {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgPayPacketFeeAsync();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.packet_id = PacketId.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.packet_fee = PacketFee.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgPayPacketFeeAsync {\n    return {\n      packet_id: isSet(object.packet_id) ? PacketId.fromJSON(object.packet_id) : undefined,\n      packet_fee: isSet(object.packet_fee) ? PacketFee.fromJSON(object.packet_fee) : undefined,\n    };\n  },\n\n  toJSON(message: MsgPayPacketFeeAsync): unknown {\n    const obj: any = {};\n    if (message.packet_id !== undefined) {\n      obj.packet_id = PacketId.toJSON(message.packet_id);\n    }\n    if (message.packet_fee !== undefined) {\n      obj.packet_fee = PacketFee.toJSON(message.packet_fee);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgPayPacketFeeAsync>): MsgPayPacketFeeAsync {\n    return MsgPayPacketFeeAsync.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgPayPacketFeeAsync>): MsgPayPacketFeeAsync {\n    const message = createBaseMsgPayPacketFeeAsync();\n    message.packet_id = (object.packet_id !== undefined && object.packet_id !== null)\n      ? PacketId.fromPartial(object.packet_id)\n      : undefined;\n    message.packet_fee = (object.packet_fee !== undefined && object.packet_fee !== null)\n      ? PacketFee.fromPartial(object.packet_fee)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseMsgPayPacketFeeAsyncResponse(): MsgPayPacketFeeAsyncResponse {\n  return {};\n}\n\nexport const MsgPayPacketFeeAsyncResponse = {\n  encode(_: MsgPayPacketFeeAsyncResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgPayPacketFeeAsyncResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgPayPacketFeeAsyncResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgPayPacketFeeAsyncResponse {\n    return {};\n  },\n\n  toJSON(_: MsgPayPacketFeeAsyncResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgPayPacketFeeAsyncResponse>): MsgPayPacketFeeAsyncResponse {\n    return MsgPayPacketFeeAsyncResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgPayPacketFeeAsyncResponse>): MsgPayPacketFeeAsyncResponse {\n    const message = createBaseMsgPayPacketFeeAsyncResponse();\n    return message;\n  },\n};\n\n/** Msg defines the ICS29 Msg service. */\nexport interface Msg {\n  /**\n   * RegisterPayee defines a rpc handler method for MsgRegisterPayee\n   * RegisterPayee is called by the relayer on each channelEnd and allows them to set an optional\n   * payee to which reverse and timeout relayer packet fees will be paid out. The payee should be registered on\n   * the source chain from which packets originate as this is where fee distribution takes place. This function may be\n   * called more than once by a relayer, in which case, the latest payee is always used.\n   */\n  RegisterPayee(request: MsgRegisterPayee): Promise<MsgRegisterPayeeResponse>;\n  /**\n   * RegisterCounterpartyPayee defines a rpc handler method for MsgRegisterCounterpartyPayee\n   * RegisterCounterpartyPayee is called by the relayer on each channelEnd and allows them to specify the counterparty\n   * payee address before relaying. This ensures they will be properly compensated for forward relaying since\n   * the destination chain must include the registered counterparty payee address in the acknowledgement. This function\n   * may be called more than once by a relayer, in which case, the latest counterparty payee address is always used.\n   */\n  RegisterCounterpartyPayee(request: MsgRegisterCounterpartyPayee): Promise<MsgRegisterCounterpartyPayeeResponse>;\n  /**\n   * PayPacketFee defines a rpc handler method for MsgPayPacketFee\n   * PayPacketFee is an open callback that may be called by any module/user that wishes to escrow funds in order to\n   * incentivize the relaying of the packet at the next sequence\n   * NOTE: This method is intended to be used within a multi msg transaction, where the subsequent msg that follows\n   * initiates the lifecycle of the incentivized packet\n   */\n  PayPacketFee(request: MsgPayPacketFee): Promise<MsgPayPacketFeeResponse>;\n  /**\n   * PayPacketFeeAsync defines a rpc handler method for MsgPayPacketFeeAsync\n   * PayPacketFeeAsync is an open callback that may be called by any module/user that wishes to escrow funds in order to\n   * incentivize the relaying of a known packet (i.e. at a particular sequence)\n   */\n  PayPacketFeeAsync(request: MsgPayPacketFeeAsync): Promise<MsgPayPacketFeeAsyncResponse>;\n}\n\nexport const MsgServiceName = \"ibc.applications.fee.v1.Msg\";\nexport class MsgClientImpl implements Msg {\n  private readonly rpc: Rpc;\n  private readonly service: string;\n  constructor(rpc: Rpc, opts?: { service?: string }) {\n    this.service = opts?.service || MsgServiceName;\n    this.rpc = rpc;\n    this.RegisterPayee = this.RegisterPayee.bind(this);\n    this.RegisterCounterpartyPayee = this.RegisterCounterpartyPayee.bind(this);\n    this.PayPacketFee = this.PayPacketFee.bind(this);\n    this.PayPacketFeeAsync = this.PayPacketFeeAsync.bind(this);\n  }\n  RegisterPayee(request: MsgRegisterPayee): Promise<MsgRegisterPayeeResponse> {\n    const data = MsgRegisterPayee.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"RegisterPayee\", data);\n    return promise.then((data) => MsgRegisterPayeeResponse.decode(_m0.Reader.create(data)));\n  }\n\n  RegisterCounterpartyPayee(request: MsgRegisterCounterpartyPayee): Promise<MsgRegisterCounterpartyPayeeResponse> {\n    const data = MsgRegisterCounterpartyPayee.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"RegisterCounterpartyPayee\", data);\n    return promise.then((data) => MsgRegisterCounterpartyPayeeResponse.decode(_m0.Reader.create(data)));\n  }\n\n  PayPacketFee(request: MsgPayPacketFee): Promise<MsgPayPacketFeeResponse> {\n    const data = MsgPayPacketFee.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"PayPacketFee\", data);\n    return promise.then((data) => MsgPayPacketFeeResponse.decode(_m0.Reader.create(data)));\n  }\n\n  PayPacketFeeAsync(request: MsgPayPacketFeeAsync): Promise<MsgPayPacketFeeAsyncResponse> {\n    const data = MsgPayPacketFeeAsync.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"PayPacketFeeAsync\", data);\n    return promise.then((data) => MsgPayPacketFeeAsyncResponse.decode(_m0.Reader.create(data)));\n  }\n}\n\ninterface Rpc {\n  request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3545, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3550, "column": 0}, "map": {"version":3,"file":"transfer.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/applications/transfer/v1/transfer.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/applications/transfer/v1/transfer.proto\n\n/* eslint-disable */\nimport * as _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\n\n/**\n * DenomTrace contains the base denomination for ICS20 fungible tokens and the\n * source tracing information path.\n */\nexport interface DenomTrace {\n  /**\n   * path defines the chain of port/channel identifiers used for tracing the\n   * source of the fungible token.\n   */\n  path: string;\n  /** base denomination of the relayed fungible token. */\n  base_denom: string;\n}\n\n/**\n * Params defines the set of IBC transfer parameters.\n * NOTE: To prevent a single token from being transferred, set the\n * TransfersEnabled parameter to true and then set the bank module's SendEnabled\n * parameter for the denomination to false.\n */\nexport interface Params {\n  /**\n   * send_enabled enables or disables all cross-chain token transfers from this\n   * chain.\n   */\n  send_enabled: boolean;\n  /**\n   * receive_enabled enables or disables all cross-chain token transfers to this\n   * chain.\n   */\n  receive_enabled: boolean;\n}\n\nfunction createBaseDenomTrace(): DenomTrace {\n  return { path: \"\", base_denom: \"\" };\n}\n\nexport const DenomTrace = {\n  encode(message: DenomTrace, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.path !== \"\") {\n      writer.uint32(10).string(message.path);\n    }\n    if (message.base_denom !== \"\") {\n      writer.uint32(18).string(message.base_denom);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): DenomTrace {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDenomTrace();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.path = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.base_denom = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): DenomTrace {\n    return {\n      path: isSet(object.path) ? globalThis.String(object.path) : \"\",\n      base_denom: isSet(object.base_denom) ? globalThis.String(object.base_denom) : \"\",\n    };\n  },\n\n  toJSON(message: DenomTrace): unknown {\n    const obj: any = {};\n    if (message.path !== \"\") {\n      obj.path = message.path;\n    }\n    if (message.base_denom !== \"\") {\n      obj.base_denom = message.base_denom;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<DenomTrace>): DenomTrace {\n    return DenomTrace.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<DenomTrace>): DenomTrace {\n    const message = createBaseDenomTrace();\n    message.path = object.path ?? \"\";\n    message.base_denom = object.base_denom ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseParams(): Params {\n  return { send_enabled: false, receive_enabled: false };\n}\n\nexport const Params = {\n  encode(message: Params, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.send_enabled !== false) {\n      writer.uint32(8).bool(message.send_enabled);\n    }\n    if (message.receive_enabled !== false) {\n      writer.uint32(16).bool(message.receive_enabled);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Params {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.send_enabled = reader.bool();\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.receive_enabled = reader.bool();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Params {\n    return {\n      send_enabled: isSet(object.send_enabled) ? globalThis.Boolean(object.send_enabled) : false,\n      receive_enabled: isSet(object.receive_enabled) ? globalThis.Boolean(object.receive_enabled) : false,\n    };\n  },\n\n  toJSON(message: Params): unknown {\n    const obj: any = {};\n    if (message.send_enabled !== false) {\n      obj.send_enabled = message.send_enabled;\n    }\n    if (message.receive_enabled !== false) {\n      obj.receive_enabled = message.receive_enabled;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Params>): Params {\n    return Params.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Params>): Params {\n    const message = createBaseParams();\n    message.send_enabled = object.send_enabled ?? false;\n    message.receive_enabled = object.receive_enabled ?? false;\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3734, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3739, "column": 0}, "map": {"version":3,"file":"tx.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/applications/transfer/v1/tx.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/applications/transfer/v1/tx.proto\n\n/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../core/client/v1/client\";\nimport { Params } from \"./transfer\";\n\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\n\n/**\n * MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between\n * ICS20 enabled chains. See ICS Spec here:\n * https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures\n */\nexport interface MsgTransfer {\n  /** the port on which the packet will be sent */\n  source_port: string;\n  /** the channel by which the packet will be sent */\n  source_channel: string;\n  /** the tokens to be transferred */\n  token?:\n    | Coin\n    | undefined;\n  /** the sender address */\n  sender: string;\n  /** the recipient address on the destination chain */\n  receiver: string;\n  /**\n   * Timeout height relative to the current block height.\n   * The timeout is disabled when set to 0.\n   */\n  timeout_height?:\n    | Height\n    | undefined;\n  /**\n   * Timeout timestamp in absolute nanoseconds since unix epoch.\n   * The timeout is disabled when set to 0.\n   */\n  timeout_timestamp: string;\n  /** optional memo */\n  memo: string;\n}\n\n/** MsgTransferResponse defines the Msg/Transfer response type. */\nexport interface MsgTransferResponse {\n  /** sequence number of the transfer packet sent */\n  sequence: string;\n}\n\n/** MsgUpdateParams is the Msg/UpdateParams request type. */\nexport interface MsgUpdateParams {\n  /** signer address */\n  signer: string;\n  /**\n   * params defines the transfer parameters to update.\n   *\n   * NOTE: All parameters must be supplied.\n   */\n  params?: Params | undefined;\n}\n\n/**\n * MsgUpdateParamsResponse defines the response structure for executing a\n * MsgUpdateParams message.\n */\nexport interface MsgUpdateParamsResponse {\n}\n\nfunction createBaseMsgTransfer(): MsgTransfer {\n  return {\n    source_port: \"\",\n    source_channel: \"\",\n    token: undefined,\n    sender: \"\",\n    receiver: \"\",\n    timeout_height: undefined,\n    timeout_timestamp: \"0\",\n    memo: \"\",\n  };\n}\n\nexport const MsgTransfer = {\n  encode(message: MsgTransfer, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.source_port !== \"\") {\n      writer.uint32(10).string(message.source_port);\n    }\n    if (message.source_channel !== \"\") {\n      writer.uint32(18).string(message.source_channel);\n    }\n    if (message.token !== undefined) {\n      Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.sender !== \"\") {\n      writer.uint32(34).string(message.sender);\n    }\n    if (message.receiver !== \"\") {\n      writer.uint32(42).string(message.receiver);\n    }\n    if (message.timeout_height !== undefined) {\n      Height.encode(message.timeout_height, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.timeout_timestamp !== \"0\") {\n      writer.uint32(56).uint64(message.timeout_timestamp);\n    }\n    if (message.memo !== \"\") {\n      writer.uint32(66).string(message.memo);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgTransfer {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgTransfer();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.source_port = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.source_channel = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.token = Coin.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.sender = reader.string();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.receiver = reader.string();\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.timeout_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 7:\n          if (tag !== 56) {\n            break;\n          }\n\n          message.timeout_timestamp = longToString(reader.uint64() as Long);\n          continue;\n        case 8:\n          if (tag !== 66) {\n            break;\n          }\n\n          message.memo = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgTransfer {\n    return {\n      source_port: isSet(object.source_port) ? globalThis.String(object.source_port) : \"\",\n      source_channel: isSet(object.source_channel) ? globalThis.String(object.source_channel) : \"\",\n      token: isSet(object.token) ? Coin.fromJSON(object.token) : undefined,\n      sender: isSet(object.sender) ? globalThis.String(object.sender) : \"\",\n      receiver: isSet(object.receiver) ? globalThis.String(object.receiver) : \"\",\n      timeout_height: isSet(object.timeout_height) ? Height.fromJSON(object.timeout_height) : undefined,\n      timeout_timestamp: isSet(object.timeout_timestamp) ? globalThis.String(object.timeout_timestamp) : \"0\",\n      memo: isSet(object.memo) ? globalThis.String(object.memo) : \"\",\n    };\n  },\n\n  toJSON(message: MsgTransfer): unknown {\n    const obj: any = {};\n    if (message.source_port !== \"\") {\n      obj.source_port = message.source_port;\n    }\n    if (message.source_channel !== \"\") {\n      obj.source_channel = message.source_channel;\n    }\n    if (message.token !== undefined) {\n      obj.token = Coin.toJSON(message.token);\n    }\n    if (message.sender !== \"\") {\n      obj.sender = message.sender;\n    }\n    if (message.receiver !== \"\") {\n      obj.receiver = message.receiver;\n    }\n    if (message.timeout_height !== undefined) {\n      obj.timeout_height = Height.toJSON(message.timeout_height);\n    }\n    if (message.timeout_timestamp !== \"0\") {\n      obj.timeout_timestamp = message.timeout_timestamp;\n    }\n    if (message.memo !== \"\") {\n      obj.memo = message.memo;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgTransfer>): MsgTransfer {\n    return MsgTransfer.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgTransfer>): MsgTransfer {\n    const message = createBaseMsgTransfer();\n    message.source_port = object.source_port ?? \"\";\n    message.source_channel = object.source_channel ?? \"\";\n    message.token = (object.token !== undefined && object.token !== null) ? Coin.fromPartial(object.token) : undefined;\n    message.sender = object.sender ?? \"\";\n    message.receiver = object.receiver ?? \"\";\n    message.timeout_height = (object.timeout_height !== undefined && object.timeout_height !== null)\n      ? Height.fromPartial(object.timeout_height)\n      : undefined;\n    message.timeout_timestamp = object.timeout_timestamp ?? \"0\";\n    message.memo = object.memo ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgTransferResponse(): MsgTransferResponse {\n  return { sequence: \"0\" };\n}\n\nexport const MsgTransferResponse = {\n  encode(message: MsgTransferResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sequence !== \"0\") {\n      writer.uint32(8).uint64(message.sequence);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgTransferResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgTransferResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.sequence = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgTransferResponse {\n    return { sequence: isSet(object.sequence) ? globalThis.String(object.sequence) : \"0\" };\n  },\n\n  toJSON(message: MsgTransferResponse): unknown {\n    const obj: any = {};\n    if (message.sequence !== \"0\") {\n      obj.sequence = message.sequence;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgTransferResponse>): MsgTransferResponse {\n    return MsgTransferResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgTransferResponse>): MsgTransferResponse {\n    const message = createBaseMsgTransferResponse();\n    message.sequence = object.sequence ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateParams(): MsgUpdateParams {\n  return { signer: \"\", params: undefined };\n}\n\nexport const MsgUpdateParams = {\n  encode(message: MsgUpdateParams, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.signer !== \"\") {\n      writer.uint32(10).string(message.signer);\n    }\n    if (message.params !== undefined) {\n      Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParams {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.params = Params.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateParams {\n    return {\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n      params: isSet(object.params) ? Params.fromJSON(object.params) : undefined,\n    };\n  },\n\n  toJSON(message: MsgUpdateParams): unknown {\n    const obj: any = {};\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    if (message.params !== undefined) {\n      obj.params = Params.toJSON(message.params);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateParams>): MsgUpdateParams {\n    return MsgUpdateParams.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgUpdateParams>): MsgUpdateParams {\n    const message = createBaseMsgUpdateParams();\n    message.signer = object.signer ?? \"\";\n    message.params = (object.params !== undefined && object.params !== null)\n      ? Params.fromPartial(object.params)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateParamsResponse(): MsgUpdateParamsResponse {\n  return {};\n}\n\nexport const MsgUpdateParamsResponse = {\n  encode(_: MsgUpdateParamsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParamsResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParamsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateParamsResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateParamsResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse {\n    return MsgUpdateParamsResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse {\n    const message = createBaseMsgUpdateParamsResponse();\n    return message;\n  },\n};\n\n/** Msg defines the ibc/transfer Msg service. */\nexport interface Msg {\n  /** Transfer defines a rpc handler method for MsgTransfer. */\n  Transfer(request: MsgTransfer): Promise<MsgTransferResponse>;\n  /** UpdateParams defines a rpc handler for MsgUpdateParams. */\n  UpdateParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse>;\n}\n\nexport const MsgServiceName = \"ibc.applications.transfer.v1.Msg\";\nexport class MsgClientImpl implements Msg {\n  private readonly rpc: Rpc;\n  private readonly service: string;\n  constructor(rpc: Rpc, opts?: { service?: string }) {\n    this.service = opts?.service || MsgServiceName;\n    this.rpc = rpc;\n    this.Transfer = this.Transfer.bind(this);\n    this.UpdateParams = this.UpdateParams.bind(this);\n  }\n  Transfer(request: MsgTransfer): Promise<MsgTransferResponse> {\n    const data = MsgTransfer.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"Transfer\", data);\n    return promise.then((data) => MsgTransferResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse> {\n    const data = MsgUpdateParams.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateParams\", data);\n    return promise.then((data) => MsgUpdateParamsResponse.decode(_m0.Reader.create(data)));\n  }\n}\n\ninterface Rpc {\n  request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToString(long: Long) {\n  return long.toString();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4146, "column": 0}, "map": {"version":3,"file":"channel_upgrade.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/core/channel/v1/channel_upgrade.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/core/channel/v1/channel_upgrade.proto\n\n/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Order, orderFromJSON, orderToJSON, Timeout } from \"./channel\";\n\nexport const protobufPackage = \"ibc.core.channel.v1\";\n\n/**\n * Upgrade is a verifiable type which contains the relevant information\n * for an attempted upgrade. It provides the proposed changes to the channel\n * end, the timeout for this upgrade attempt and the next packet sequence\n * which allows the counterparty to efficiently know the highest sequence it has received.\n * The next sequence send is used for pruning and upgrading from unordered to ordered channels.\n */\nexport interface Upgrade {\n  fields?: UpgradeFields | undefined;\n  timeout?: Timeout | undefined;\n  next_sequence_send: string;\n}\n\n/**\n * UpgradeFields are the fields in a channel end which may be changed\n * during a channel upgrade.\n */\nexport interface UpgradeFields {\n  ordering: Order;\n  connection_hops: string[];\n  version: string;\n}\n\n/**\n * ErrorReceipt defines a type which encapsulates the upgrade sequence and error associated with the\n * upgrade handshake failure. When a channel upgrade handshake is aborted both chains are expected to increment to the\n * next sequence.\n */\nexport interface ErrorReceipt {\n  /** the channel upgrade sequence */\n  sequence: string;\n  /** the error message detailing the cause of failure */\n  message: string;\n}\n\nfunction createBaseUpgrade(): Upgrade {\n  return { fields: undefined, timeout: undefined, next_sequence_send: \"0\" };\n}\n\nexport const Upgrade = {\n  encode(message: Upgrade, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.fields !== undefined) {\n      UpgradeFields.encode(message.fields, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.timeout !== undefined) {\n      Timeout.encode(message.timeout, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.next_sequence_send !== \"0\") {\n      writer.uint32(24).uint64(message.next_sequence_send);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Upgrade {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUpgrade();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.fields = UpgradeFields.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.timeout = Timeout.decode(reader, reader.uint32());\n          continue;\n        case 3:\n          if (tag !== 24) {\n            break;\n          }\n\n          message.next_sequence_send = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Upgrade {\n    return {\n      fields: isSet(object.fields) ? UpgradeFields.fromJSON(object.fields) : undefined,\n      timeout: isSet(object.timeout) ? Timeout.fromJSON(object.timeout) : undefined,\n      next_sequence_send: isSet(object.next_sequence_send) ? globalThis.String(object.next_sequence_send) : \"0\",\n    };\n  },\n\n  toJSON(message: Upgrade): unknown {\n    const obj: any = {};\n    if (message.fields !== undefined) {\n      obj.fields = UpgradeFields.toJSON(message.fields);\n    }\n    if (message.timeout !== undefined) {\n      obj.timeout = Timeout.toJSON(message.timeout);\n    }\n    if (message.next_sequence_send !== \"0\") {\n      obj.next_sequence_send = message.next_sequence_send;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Upgrade>): Upgrade {\n    return Upgrade.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Upgrade>): Upgrade {\n    const message = createBaseUpgrade();\n    message.fields = (object.fields !== undefined && object.fields !== null)\n      ? UpgradeFields.fromPartial(object.fields)\n      : undefined;\n    message.timeout = (object.timeout !== undefined && object.timeout !== null)\n      ? Timeout.fromPartial(object.timeout)\n      : undefined;\n    message.next_sequence_send = object.next_sequence_send ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseUpgradeFields(): UpgradeFields {\n  return { ordering: 0, connection_hops: [], version: \"\" };\n}\n\nexport const UpgradeFields = {\n  encode(message: UpgradeFields, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.ordering !== 0) {\n      writer.uint32(8).int32(message.ordering);\n    }\n    for (const v of message.connection_hops) {\n      writer.uint32(18).string(v!);\n    }\n    if (message.version !== \"\") {\n      writer.uint32(26).string(message.version);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): UpgradeFields {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUpgradeFields();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.ordering = reader.int32() as any;\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.connection_hops.push(reader.string());\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.version = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): UpgradeFields {\n    return {\n      ordering: isSet(object.ordering) ? orderFromJSON(object.ordering) : 0,\n      connection_hops: globalThis.Array.isArray(object?.connection_hops)\n        ? object.connection_hops.map((e: any) => globalThis.String(e))\n        : [],\n      version: isSet(object.version) ? globalThis.String(object.version) : \"\",\n    };\n  },\n\n  toJSON(message: UpgradeFields): unknown {\n    const obj: any = {};\n    if (message.ordering !== 0) {\n      obj.ordering = orderToJSON(message.ordering);\n    }\n    if (message.connection_hops?.length) {\n      obj.connection_hops = message.connection_hops;\n    }\n    if (message.version !== \"\") {\n      obj.version = message.version;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<UpgradeFields>): UpgradeFields {\n    return UpgradeFields.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<UpgradeFields>): UpgradeFields {\n    const message = createBaseUpgradeFields();\n    message.ordering = object.ordering ?? 0;\n    message.connection_hops = object.connection_hops?.map((e) => e) || [];\n    message.version = object.version ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseErrorReceipt(): ErrorReceipt {\n  return { sequence: \"0\", message: \"\" };\n}\n\nexport const ErrorReceipt = {\n  encode(message: ErrorReceipt, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sequence !== \"0\") {\n      writer.uint32(8).uint64(message.sequence);\n    }\n    if (message.message !== \"\") {\n      writer.uint32(18).string(message.message);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ErrorReceipt {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseErrorReceipt();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.sequence = longToString(reader.uint64() as Long);\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.message = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ErrorReceipt {\n    return {\n      sequence: isSet(object.sequence) ? globalThis.String(object.sequence) : \"0\",\n      message: isSet(object.message) ? globalThis.String(object.message) : \"\",\n    };\n  },\n\n  toJSON(message: ErrorReceipt): unknown {\n    const obj: any = {};\n    if (message.sequence !== \"0\") {\n      obj.sequence = message.sequence;\n    }\n    if (message.message !== \"\") {\n      obj.message = message.message;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<ErrorReceipt>): ErrorReceipt {\n    return ErrorReceipt.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<ErrorReceipt>): ErrorReceipt {\n    const message = createBaseErrorReceipt();\n    message.sequence = object.sequence ?? \"0\";\n    message.message = object.message ?? \"\";\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToString(long: Long) {\n  return long.toString();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4450, "column": 0}, "map": {"version":3,"file":"tx.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/core/channel/v1/tx.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/core/channel/v1/tx.proto\n\n/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Height } from \"../../client/v1/client\";\nimport { Channel, Packet, Params, State, stateFromJSON, stateToJSON } from \"./channel\";\nimport { ErrorReceipt, Upgrade, UpgradeFields } from \"./channel_upgrade\";\n\nexport const protobufPackage = \"ibc.core.channel.v1\";\n\n/** ResponseResultType defines the possible outcomes of the execution of a message */\nexport enum ResponseResultType {\n  /** RESPONSE_RESULT_TYPE_UNSPECIFIED - Default zero value enumeration */\n  RESPONSE_RESULT_TYPE_UNSPECIFIED = 0,\n  /** RESPONSE_RESULT_TYPE_NOOP - The message did not call the IBC application callbacks (because, for example, the packet had already been relayed) */\n  RESPONSE_RESULT_TYPE_NOOP = 1,\n  /** RESPONSE_RESULT_TYPE_SUCCESS - The message was executed successfully */\n  RESPONSE_RESULT_TYPE_SUCCESS = 2,\n  /** RESPONSE_RESULT_TYPE_FAILURE - The message was executed unsuccessfully */\n  RESPONSE_RESULT_TYPE_FAILURE = 3,\n  UNRECOGNIZED = -1,\n}\n\nexport function responseResultTypeFromJSON(object: any): ResponseResultType {\n  switch (object) {\n    case 0:\n    case \"RESPONSE_RESULT_TYPE_UNSPECIFIED\":\n      return ResponseResultType.RESPONSE_RESULT_TYPE_UNSPECIFIED;\n    case 1:\n    case \"RESPONSE_RESULT_TYPE_NOOP\":\n      return ResponseResultType.RESPONSE_RESULT_TYPE_NOOP;\n    case 2:\n    case \"RESPONSE_RESULT_TYPE_SUCCESS\":\n      return ResponseResultType.RESPONSE_RESULT_TYPE_SUCCESS;\n    case 3:\n    case \"RESPONSE_RESULT_TYPE_FAILURE\":\n      return ResponseResultType.RESPONSE_RESULT_TYPE_FAILURE;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ResponseResultType.UNRECOGNIZED;\n  }\n}\n\nexport function responseResultTypeToJSON(object: ResponseResultType): string {\n  switch (object) {\n    case ResponseResultType.RESPONSE_RESULT_TYPE_UNSPECIFIED:\n      return \"RESPONSE_RESULT_TYPE_UNSPECIFIED\";\n    case ResponseResultType.RESPONSE_RESULT_TYPE_NOOP:\n      return \"RESPONSE_RESULT_TYPE_NOOP\";\n    case ResponseResultType.RESPONSE_RESULT_TYPE_SUCCESS:\n      return \"RESPONSE_RESULT_TYPE_SUCCESS\";\n    case ResponseResultType.RESPONSE_RESULT_TYPE_FAILURE:\n      return \"RESPONSE_RESULT_TYPE_FAILURE\";\n    case ResponseResultType.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n\n/**\n * MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake. It\n * is called by a relayer on Chain A.\n */\nexport interface MsgChannelOpenInit {\n  port_id: string;\n  channel?: Channel | undefined;\n  signer: string;\n}\n\n/** MsgChannelOpenInitResponse defines the Msg/ChannelOpenInit response type. */\nexport interface MsgChannelOpenInitResponse {\n  channel_id: string;\n  version: string;\n}\n\n/**\n * MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel\n * on Chain B. The version field within the Channel field has been deprecated. Its\n * value will be ignored by core IBC.\n */\nexport interface MsgChannelOpenTry {\n  port_id: string;\n  /**\n   * Deprecated: this field is unused. Crossing hello's are no longer supported in core IBC.\n   *\n   * @deprecated\n   */\n  previous_channel_id: string;\n  /** NOTE: the version field within the channel has been deprecated. Its value will be ignored by core IBC. */\n  channel?: Channel | undefined;\n  counterparty_version: string;\n  proof_init: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n}\n\n/** MsgChannelOpenTryResponse defines the Msg/ChannelOpenTry response type. */\nexport interface MsgChannelOpenTryResponse {\n  version: string;\n  channel_id: string;\n}\n\n/**\n * MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to acknowledge\n * the change of channel state to TRYOPEN on Chain B.\n * WARNING: a channel upgrade MUST NOT initialize an upgrade for this channel\n * in the same block as executing this message otherwise the counterparty will\n * be incapable of opening.\n */\nexport interface MsgChannelOpenAck {\n  port_id: string;\n  channel_id: string;\n  counterparty_channel_id: string;\n  counterparty_version: string;\n  proof_try: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n}\n\n/** MsgChannelOpenAckResponse defines the Msg/ChannelOpenAck response type. */\nexport interface MsgChannelOpenAckResponse {\n}\n\n/**\n * MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to\n * acknowledge the change of channel state to OPEN on Chain A.\n */\nexport interface MsgChannelOpenConfirm {\n  port_id: string;\n  channel_id: string;\n  proof_ack: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n}\n\n/**\n * MsgChannelOpenConfirmResponse defines the Msg/ChannelOpenConfirm response\n * type.\n */\nexport interface MsgChannelOpenConfirmResponse {\n}\n\n/**\n * MsgChannelCloseInit defines a msg sent by a Relayer to Chain A\n * to close a channel with Chain B.\n */\nexport interface MsgChannelCloseInit {\n  port_id: string;\n  channel_id: string;\n  signer: string;\n}\n\n/** MsgChannelCloseInitResponse defines the Msg/ChannelCloseInit response type. */\nexport interface MsgChannelCloseInitResponse {\n}\n\n/**\n * MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain B\n * to acknowledge the change of channel state to CLOSED on Chain A.\n */\nexport interface MsgChannelCloseConfirm {\n  port_id: string;\n  channel_id: string;\n  proof_init: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n  counterparty_upgrade_sequence: string;\n}\n\n/**\n * MsgChannelCloseConfirmResponse defines the Msg/ChannelCloseConfirm response\n * type.\n */\nexport interface MsgChannelCloseConfirmResponse {\n}\n\n/** MsgRecvPacket receives incoming IBC packet */\nexport interface MsgRecvPacket {\n  packet?: Packet | undefined;\n  proof_commitment: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n}\n\n/** MsgRecvPacketResponse defines the Msg/RecvPacket response type. */\nexport interface MsgRecvPacketResponse {\n  result: ResponseResultType;\n}\n\n/** MsgTimeout receives timed-out packet */\nexport interface MsgTimeout {\n  packet?: Packet | undefined;\n  proof_unreceived: Uint8Array;\n  proof_height?: Height | undefined;\n  next_sequence_recv: string;\n  signer: string;\n}\n\n/** MsgTimeoutResponse defines the Msg/Timeout response type. */\nexport interface MsgTimeoutResponse {\n  result: ResponseResultType;\n}\n\n/** MsgTimeoutOnClose timed-out packet upon counterparty channel closure. */\nexport interface MsgTimeoutOnClose {\n  packet?: Packet | undefined;\n  proof_unreceived: Uint8Array;\n  proof_close: Uint8Array;\n  proof_height?: Height | undefined;\n  next_sequence_recv: string;\n  signer: string;\n  counterparty_upgrade_sequence: string;\n}\n\n/** MsgTimeoutOnCloseResponse defines the Msg/TimeoutOnClose response type. */\nexport interface MsgTimeoutOnCloseResponse {\n  result: ResponseResultType;\n}\n\n/** MsgAcknowledgement receives incoming IBC acknowledgement */\nexport interface MsgAcknowledgement {\n  packet?: Packet | undefined;\n  acknowledgement: Uint8Array;\n  proof_acked: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n}\n\n/** MsgAcknowledgementResponse defines the Msg/Acknowledgement response type. */\nexport interface MsgAcknowledgementResponse {\n  result: ResponseResultType;\n}\n\n/**\n * MsgChannelUpgradeInit defines the request type for the ChannelUpgradeInit rpc\n * WARNING: Initializing a channel upgrade in the same block as opening the channel\n * may result in the counterparty being incapable of opening.\n */\nexport interface MsgChannelUpgradeInit {\n  port_id: string;\n  channel_id: string;\n  fields?: UpgradeFields | undefined;\n  signer: string;\n}\n\n/** MsgChannelUpgradeInitResponse defines the MsgChannelUpgradeInit response type */\nexport interface MsgChannelUpgradeInitResponse {\n  upgrade?: Upgrade | undefined;\n  upgrade_sequence: string;\n}\n\n/** MsgChannelUpgradeTry defines the request type for the ChannelUpgradeTry rpc */\nexport interface MsgChannelUpgradeTry {\n  port_id: string;\n  channel_id: string;\n  proposed_upgrade_connection_hops: string[];\n  counterparty_upgrade_fields?: UpgradeFields | undefined;\n  counterparty_upgrade_sequence: string;\n  proof_channel: Uint8Array;\n  proof_upgrade: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n}\n\n/** MsgChannelUpgradeTryResponse defines the MsgChannelUpgradeTry response type */\nexport interface MsgChannelUpgradeTryResponse {\n  upgrade?: Upgrade | undefined;\n  upgrade_sequence: string;\n  result: ResponseResultType;\n}\n\n/** MsgChannelUpgradeAck defines the request type for the ChannelUpgradeAck rpc */\nexport interface MsgChannelUpgradeAck {\n  port_id: string;\n  channel_id: string;\n  counterparty_upgrade?: Upgrade | undefined;\n  proof_channel: Uint8Array;\n  proof_upgrade: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n}\n\n/** MsgChannelUpgradeAckResponse defines MsgChannelUpgradeAck response type */\nexport interface MsgChannelUpgradeAckResponse {\n  result: ResponseResultType;\n}\n\n/** MsgChannelUpgradeConfirm defines the request type for the ChannelUpgradeConfirm rpc */\nexport interface MsgChannelUpgradeConfirm {\n  port_id: string;\n  channel_id: string;\n  counterparty_channel_state: State;\n  counterparty_upgrade?: Upgrade | undefined;\n  proof_channel: Uint8Array;\n  proof_upgrade: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n}\n\n/** MsgChannelUpgradeConfirmResponse defines MsgChannelUpgradeConfirm response type */\nexport interface MsgChannelUpgradeConfirmResponse {\n  result: ResponseResultType;\n}\n\n/** MsgChannelUpgradeOpen defines the request type for the ChannelUpgradeOpen rpc */\nexport interface MsgChannelUpgradeOpen {\n  port_id: string;\n  channel_id: string;\n  counterparty_channel_state: State;\n  counterparty_upgrade_sequence: string;\n  proof_channel: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n}\n\n/** MsgChannelUpgradeOpenResponse defines the MsgChannelUpgradeOpen response type */\nexport interface MsgChannelUpgradeOpenResponse {\n}\n\n/** MsgChannelUpgradeTimeout defines the request type for the ChannelUpgradeTimeout rpc */\nexport interface MsgChannelUpgradeTimeout {\n  port_id: string;\n  channel_id: string;\n  counterparty_channel?: Channel | undefined;\n  proof_channel: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n}\n\n/** MsgChannelUpgradeTimeoutRepsonse defines the MsgChannelUpgradeTimeout response type */\nexport interface MsgChannelUpgradeTimeoutResponse {\n}\n\n/** MsgChannelUpgradeCancel defines the request type for the ChannelUpgradeCancel rpc */\nexport interface MsgChannelUpgradeCancel {\n  port_id: string;\n  channel_id: string;\n  error_receipt?: ErrorReceipt | undefined;\n  proof_error_receipt: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n}\n\n/** MsgChannelUpgradeCancelResponse defines the MsgChannelUpgradeCancel response type */\nexport interface MsgChannelUpgradeCancelResponse {\n}\n\n/** MsgUpdateParams is the MsgUpdateParams request type. */\nexport interface MsgUpdateParams {\n  /** authority is the address that controls the module (defaults to x/gov unless overwritten). */\n  authority: string;\n  /**\n   * params defines the channel parameters to update.\n   *\n   * NOTE: All parameters must be supplied.\n   */\n  params?: Params | undefined;\n}\n\n/** MsgUpdateParamsResponse defines the MsgUpdateParams response type. */\nexport interface MsgUpdateParamsResponse {\n}\n\n/** MsgPruneAcknowledgements defines the request type for the PruneAcknowledgements rpc. */\nexport interface MsgPruneAcknowledgements {\n  port_id: string;\n  channel_id: string;\n  limit: string;\n  signer: string;\n}\n\n/** MsgPruneAcknowledgementsResponse defines the response type for the PruneAcknowledgements rpc. */\nexport interface MsgPruneAcknowledgementsResponse {\n  /** Number of sequences pruned (includes both packet acknowledgements and packet receipts where appropriate). */\n  total_pruned_sequences: string;\n  /** Number of sequences left after pruning. */\n  total_remaining_sequences: string;\n}\n\nfunction createBaseMsgChannelOpenInit(): MsgChannelOpenInit {\n  return { port_id: \"\", channel: undefined, signer: \"\" };\n}\n\nexport const MsgChannelOpenInit = {\n  encode(message: MsgChannelOpenInit, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel !== undefined) {\n      Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelOpenInit {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelOpenInit();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel = Channel.decode(reader, reader.uint32());\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelOpenInit {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel: isSet(object.channel) ? Channel.fromJSON(object.channel) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelOpenInit): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel !== undefined) {\n      obj.channel = Channel.toJSON(message.channel);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelOpenInit>): MsgChannelOpenInit {\n    return MsgChannelOpenInit.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelOpenInit>): MsgChannelOpenInit {\n    const message = createBaseMsgChannelOpenInit();\n    message.port_id = object.port_id ?? \"\";\n    message.channel = (object.channel !== undefined && object.channel !== null)\n      ? Channel.fromPartial(object.channel)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelOpenInitResponse(): MsgChannelOpenInitResponse {\n  return { channel_id: \"\", version: \"\" };\n}\n\nexport const MsgChannelOpenInitResponse = {\n  encode(message: MsgChannelOpenInitResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.channel_id !== \"\") {\n      writer.uint32(10).string(message.channel_id);\n    }\n    if (message.version !== \"\") {\n      writer.uint32(18).string(message.version);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelOpenInitResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelOpenInitResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.version = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelOpenInitResponse {\n    return {\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      version: isSet(object.version) ? globalThis.String(object.version) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelOpenInitResponse): unknown {\n    const obj: any = {};\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.version !== \"\") {\n      obj.version = message.version;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelOpenInitResponse>): MsgChannelOpenInitResponse {\n    return MsgChannelOpenInitResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelOpenInitResponse>): MsgChannelOpenInitResponse {\n    const message = createBaseMsgChannelOpenInitResponse();\n    message.channel_id = object.channel_id ?? \"\";\n    message.version = object.version ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelOpenTry(): MsgChannelOpenTry {\n  return {\n    port_id: \"\",\n    previous_channel_id: \"\",\n    channel: undefined,\n    counterparty_version: \"\",\n    proof_init: new Uint8Array(0),\n    proof_height: undefined,\n    signer: \"\",\n  };\n}\n\nexport const MsgChannelOpenTry = {\n  encode(message: MsgChannelOpenTry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.previous_channel_id !== \"\") {\n      writer.uint32(18).string(message.previous_channel_id);\n    }\n    if (message.channel !== undefined) {\n      Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.counterparty_version !== \"\") {\n      writer.uint32(34).string(message.counterparty_version);\n    }\n    if (message.proof_init.length !== 0) {\n      writer.uint32(42).bytes(message.proof_init);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(58).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelOpenTry {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelOpenTry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.previous_channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.channel = Channel.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.counterparty_version = reader.string();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.proof_init = reader.bytes();\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelOpenTry {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      previous_channel_id: isSet(object.previous_channel_id) ? globalThis.String(object.previous_channel_id) : \"\",\n      channel: isSet(object.channel) ? Channel.fromJSON(object.channel) : undefined,\n      counterparty_version: isSet(object.counterparty_version) ? globalThis.String(object.counterparty_version) : \"\",\n      proof_init: isSet(object.proof_init) ? bytesFromBase64(object.proof_init) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelOpenTry): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.previous_channel_id !== \"\") {\n      obj.previous_channel_id = message.previous_channel_id;\n    }\n    if (message.channel !== undefined) {\n      obj.channel = Channel.toJSON(message.channel);\n    }\n    if (message.counterparty_version !== \"\") {\n      obj.counterparty_version = message.counterparty_version;\n    }\n    if (message.proof_init.length !== 0) {\n      obj.proof_init = base64FromBytes(message.proof_init);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelOpenTry>): MsgChannelOpenTry {\n    return MsgChannelOpenTry.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelOpenTry>): MsgChannelOpenTry {\n    const message = createBaseMsgChannelOpenTry();\n    message.port_id = object.port_id ?? \"\";\n    message.previous_channel_id = object.previous_channel_id ?? \"\";\n    message.channel = (object.channel !== undefined && object.channel !== null)\n      ? Channel.fromPartial(object.channel)\n      : undefined;\n    message.counterparty_version = object.counterparty_version ?? \"\";\n    message.proof_init = object.proof_init ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelOpenTryResponse(): MsgChannelOpenTryResponse {\n  return { version: \"\", channel_id: \"\" };\n}\n\nexport const MsgChannelOpenTryResponse = {\n  encode(message: MsgChannelOpenTryResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.version !== \"\") {\n      writer.uint32(10).string(message.version);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelOpenTryResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelOpenTryResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.version = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelOpenTryResponse {\n    return {\n      version: isSet(object.version) ? globalThis.String(object.version) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelOpenTryResponse): unknown {\n    const obj: any = {};\n    if (message.version !== \"\") {\n      obj.version = message.version;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelOpenTryResponse>): MsgChannelOpenTryResponse {\n    return MsgChannelOpenTryResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelOpenTryResponse>): MsgChannelOpenTryResponse {\n    const message = createBaseMsgChannelOpenTryResponse();\n    message.version = object.version ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelOpenAck(): MsgChannelOpenAck {\n  return {\n    port_id: \"\",\n    channel_id: \"\",\n    counterparty_channel_id: \"\",\n    counterparty_version: \"\",\n    proof_try: new Uint8Array(0),\n    proof_height: undefined,\n    signer: \"\",\n  };\n}\n\nexport const MsgChannelOpenAck = {\n  encode(message: MsgChannelOpenAck, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.counterparty_channel_id !== \"\") {\n      writer.uint32(26).string(message.counterparty_channel_id);\n    }\n    if (message.counterparty_version !== \"\") {\n      writer.uint32(34).string(message.counterparty_version);\n    }\n    if (message.proof_try.length !== 0) {\n      writer.uint32(42).bytes(message.proof_try);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(58).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelOpenAck {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelOpenAck();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.counterparty_channel_id = reader.string();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.counterparty_version = reader.string();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.proof_try = reader.bytes();\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelOpenAck {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      counterparty_channel_id: isSet(object.counterparty_channel_id)\n        ? globalThis.String(object.counterparty_channel_id)\n        : \"\",\n      counterparty_version: isSet(object.counterparty_version) ? globalThis.String(object.counterparty_version) : \"\",\n      proof_try: isSet(object.proof_try) ? bytesFromBase64(object.proof_try) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelOpenAck): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.counterparty_channel_id !== \"\") {\n      obj.counterparty_channel_id = message.counterparty_channel_id;\n    }\n    if (message.counterparty_version !== \"\") {\n      obj.counterparty_version = message.counterparty_version;\n    }\n    if (message.proof_try.length !== 0) {\n      obj.proof_try = base64FromBytes(message.proof_try);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelOpenAck>): MsgChannelOpenAck {\n    return MsgChannelOpenAck.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelOpenAck>): MsgChannelOpenAck {\n    const message = createBaseMsgChannelOpenAck();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.counterparty_channel_id = object.counterparty_channel_id ?? \"\";\n    message.counterparty_version = object.counterparty_version ?? \"\";\n    message.proof_try = object.proof_try ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelOpenAckResponse(): MsgChannelOpenAckResponse {\n  return {};\n}\n\nexport const MsgChannelOpenAckResponse = {\n  encode(_: MsgChannelOpenAckResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelOpenAckResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelOpenAckResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgChannelOpenAckResponse {\n    return {};\n  },\n\n  toJSON(_: MsgChannelOpenAckResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelOpenAckResponse>): MsgChannelOpenAckResponse {\n    return MsgChannelOpenAckResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgChannelOpenAckResponse>): MsgChannelOpenAckResponse {\n    const message = createBaseMsgChannelOpenAckResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelOpenConfirm(): MsgChannelOpenConfirm {\n  return { port_id: \"\", channel_id: \"\", proof_ack: new Uint8Array(0), proof_height: undefined, signer: \"\" };\n}\n\nexport const MsgChannelOpenConfirm = {\n  encode(message: MsgChannelOpenConfirm, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.proof_ack.length !== 0) {\n      writer.uint32(26).bytes(message.proof_ack);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelOpenConfirm {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelOpenConfirm();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.proof_ack = reader.bytes();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelOpenConfirm {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      proof_ack: isSet(object.proof_ack) ? bytesFromBase64(object.proof_ack) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelOpenConfirm): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.proof_ack.length !== 0) {\n      obj.proof_ack = base64FromBytes(message.proof_ack);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelOpenConfirm>): MsgChannelOpenConfirm {\n    return MsgChannelOpenConfirm.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelOpenConfirm>): MsgChannelOpenConfirm {\n    const message = createBaseMsgChannelOpenConfirm();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.proof_ack = object.proof_ack ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelOpenConfirmResponse(): MsgChannelOpenConfirmResponse {\n  return {};\n}\n\nexport const MsgChannelOpenConfirmResponse = {\n  encode(_: MsgChannelOpenConfirmResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelOpenConfirmResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelOpenConfirmResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgChannelOpenConfirmResponse {\n    return {};\n  },\n\n  toJSON(_: MsgChannelOpenConfirmResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelOpenConfirmResponse>): MsgChannelOpenConfirmResponse {\n    return MsgChannelOpenConfirmResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgChannelOpenConfirmResponse>): MsgChannelOpenConfirmResponse {\n    const message = createBaseMsgChannelOpenConfirmResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelCloseInit(): MsgChannelCloseInit {\n  return { port_id: \"\", channel_id: \"\", signer: \"\" };\n}\n\nexport const MsgChannelCloseInit = {\n  encode(message: MsgChannelCloseInit, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelCloseInit {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelCloseInit();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelCloseInit {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelCloseInit): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelCloseInit>): MsgChannelCloseInit {\n    return MsgChannelCloseInit.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelCloseInit>): MsgChannelCloseInit {\n    const message = createBaseMsgChannelCloseInit();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelCloseInitResponse(): MsgChannelCloseInitResponse {\n  return {};\n}\n\nexport const MsgChannelCloseInitResponse = {\n  encode(_: MsgChannelCloseInitResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelCloseInitResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelCloseInitResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgChannelCloseInitResponse {\n    return {};\n  },\n\n  toJSON(_: MsgChannelCloseInitResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelCloseInitResponse>): MsgChannelCloseInitResponse {\n    return MsgChannelCloseInitResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgChannelCloseInitResponse>): MsgChannelCloseInitResponse {\n    const message = createBaseMsgChannelCloseInitResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelCloseConfirm(): MsgChannelCloseConfirm {\n  return {\n    port_id: \"\",\n    channel_id: \"\",\n    proof_init: new Uint8Array(0),\n    proof_height: undefined,\n    signer: \"\",\n    counterparty_upgrade_sequence: \"0\",\n  };\n}\n\nexport const MsgChannelCloseConfirm = {\n  encode(message: MsgChannelCloseConfirm, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.proof_init.length !== 0) {\n      writer.uint32(26).bytes(message.proof_init);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    if (message.counterparty_upgrade_sequence !== \"0\") {\n      writer.uint32(48).uint64(message.counterparty_upgrade_sequence);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelCloseConfirm {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelCloseConfirm();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.proof_init = reader.bytes();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n        case 6:\n          if (tag !== 48) {\n            break;\n          }\n\n          message.counterparty_upgrade_sequence = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelCloseConfirm {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      proof_init: isSet(object.proof_init) ? bytesFromBase64(object.proof_init) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n      counterparty_upgrade_sequence: isSet(object.counterparty_upgrade_sequence)\n        ? globalThis.String(object.counterparty_upgrade_sequence)\n        : \"0\",\n    };\n  },\n\n  toJSON(message: MsgChannelCloseConfirm): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.proof_init.length !== 0) {\n      obj.proof_init = base64FromBytes(message.proof_init);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    if (message.counterparty_upgrade_sequence !== \"0\") {\n      obj.counterparty_upgrade_sequence = message.counterparty_upgrade_sequence;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelCloseConfirm>): MsgChannelCloseConfirm {\n    return MsgChannelCloseConfirm.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelCloseConfirm>): MsgChannelCloseConfirm {\n    const message = createBaseMsgChannelCloseConfirm();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.proof_init = object.proof_init ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    message.counterparty_upgrade_sequence = object.counterparty_upgrade_sequence ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelCloseConfirmResponse(): MsgChannelCloseConfirmResponse {\n  return {};\n}\n\nexport const MsgChannelCloseConfirmResponse = {\n  encode(_: MsgChannelCloseConfirmResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelCloseConfirmResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelCloseConfirmResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgChannelCloseConfirmResponse {\n    return {};\n  },\n\n  toJSON(_: MsgChannelCloseConfirmResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelCloseConfirmResponse>): MsgChannelCloseConfirmResponse {\n    return MsgChannelCloseConfirmResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgChannelCloseConfirmResponse>): MsgChannelCloseConfirmResponse {\n    const message = createBaseMsgChannelCloseConfirmResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgRecvPacket(): MsgRecvPacket {\n  return { packet: undefined, proof_commitment: new Uint8Array(0), proof_height: undefined, signer: \"\" };\n}\n\nexport const MsgRecvPacket = {\n  encode(message: MsgRecvPacket, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.packet !== undefined) {\n      Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof_commitment.length !== 0) {\n      writer.uint32(18).bytes(message.proof_commitment);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRecvPacket {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgRecvPacket();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.packet = Packet.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.proof_commitment = reader.bytes();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgRecvPacket {\n    return {\n      packet: isSet(object.packet) ? Packet.fromJSON(object.packet) : undefined,\n      proof_commitment: isSet(object.proof_commitment) ? bytesFromBase64(object.proof_commitment) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgRecvPacket): unknown {\n    const obj: any = {};\n    if (message.packet !== undefined) {\n      obj.packet = Packet.toJSON(message.packet);\n    }\n    if (message.proof_commitment.length !== 0) {\n      obj.proof_commitment = base64FromBytes(message.proof_commitment);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgRecvPacket>): MsgRecvPacket {\n    return MsgRecvPacket.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgRecvPacket>): MsgRecvPacket {\n    const message = createBaseMsgRecvPacket();\n    message.packet = (object.packet !== undefined && object.packet !== null)\n      ? Packet.fromPartial(object.packet)\n      : undefined;\n    message.proof_commitment = object.proof_commitment ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgRecvPacketResponse(): MsgRecvPacketResponse {\n  return { result: 0 };\n}\n\nexport const MsgRecvPacketResponse = {\n  encode(message: MsgRecvPacketResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRecvPacketResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgRecvPacketResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.result = reader.int32() as any;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgRecvPacketResponse {\n    return { result: isSet(object.result) ? responseResultTypeFromJSON(object.result) : 0 };\n  },\n\n  toJSON(message: MsgRecvPacketResponse): unknown {\n    const obj: any = {};\n    if (message.result !== 0) {\n      obj.result = responseResultTypeToJSON(message.result);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgRecvPacketResponse>): MsgRecvPacketResponse {\n    return MsgRecvPacketResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgRecvPacketResponse>): MsgRecvPacketResponse {\n    const message = createBaseMsgRecvPacketResponse();\n    message.result = object.result ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseMsgTimeout(): MsgTimeout {\n  return {\n    packet: undefined,\n    proof_unreceived: new Uint8Array(0),\n    proof_height: undefined,\n    next_sequence_recv: \"0\",\n    signer: \"\",\n  };\n}\n\nexport const MsgTimeout = {\n  encode(message: MsgTimeout, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.packet !== undefined) {\n      Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof_unreceived.length !== 0) {\n      writer.uint32(18).bytes(message.proof_unreceived);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.next_sequence_recv !== \"0\") {\n      writer.uint32(32).uint64(message.next_sequence_recv);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgTimeout {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgTimeout();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.packet = Packet.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.proof_unreceived = reader.bytes();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 32) {\n            break;\n          }\n\n          message.next_sequence_recv = longToString(reader.uint64() as Long);\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgTimeout {\n    return {\n      packet: isSet(object.packet) ? Packet.fromJSON(object.packet) : undefined,\n      proof_unreceived: isSet(object.proof_unreceived) ? bytesFromBase64(object.proof_unreceived) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      next_sequence_recv: isSet(object.next_sequence_recv) ? globalThis.String(object.next_sequence_recv) : \"0\",\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgTimeout): unknown {\n    const obj: any = {};\n    if (message.packet !== undefined) {\n      obj.packet = Packet.toJSON(message.packet);\n    }\n    if (message.proof_unreceived.length !== 0) {\n      obj.proof_unreceived = base64FromBytes(message.proof_unreceived);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.next_sequence_recv !== \"0\") {\n      obj.next_sequence_recv = message.next_sequence_recv;\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgTimeout>): MsgTimeout {\n    return MsgTimeout.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgTimeout>): MsgTimeout {\n    const message = createBaseMsgTimeout();\n    message.packet = (object.packet !== undefined && object.packet !== null)\n      ? Packet.fromPartial(object.packet)\n      : undefined;\n    message.proof_unreceived = object.proof_unreceived ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.next_sequence_recv = object.next_sequence_recv ?? \"0\";\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgTimeoutResponse(): MsgTimeoutResponse {\n  return { result: 0 };\n}\n\nexport const MsgTimeoutResponse = {\n  encode(message: MsgTimeoutResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgTimeoutResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgTimeoutResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.result = reader.int32() as any;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgTimeoutResponse {\n    return { result: isSet(object.result) ? responseResultTypeFromJSON(object.result) : 0 };\n  },\n\n  toJSON(message: MsgTimeoutResponse): unknown {\n    const obj: any = {};\n    if (message.result !== 0) {\n      obj.result = responseResultTypeToJSON(message.result);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgTimeoutResponse>): MsgTimeoutResponse {\n    return MsgTimeoutResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgTimeoutResponse>): MsgTimeoutResponse {\n    const message = createBaseMsgTimeoutResponse();\n    message.result = object.result ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseMsgTimeoutOnClose(): MsgTimeoutOnClose {\n  return {\n    packet: undefined,\n    proof_unreceived: new Uint8Array(0),\n    proof_close: new Uint8Array(0),\n    proof_height: undefined,\n    next_sequence_recv: \"0\",\n    signer: \"\",\n    counterparty_upgrade_sequence: \"0\",\n  };\n}\n\nexport const MsgTimeoutOnClose = {\n  encode(message: MsgTimeoutOnClose, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.packet !== undefined) {\n      Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof_unreceived.length !== 0) {\n      writer.uint32(18).bytes(message.proof_unreceived);\n    }\n    if (message.proof_close.length !== 0) {\n      writer.uint32(26).bytes(message.proof_close);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.next_sequence_recv !== \"0\") {\n      writer.uint32(40).uint64(message.next_sequence_recv);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(50).string(message.signer);\n    }\n    if (message.counterparty_upgrade_sequence !== \"0\") {\n      writer.uint32(56).uint64(message.counterparty_upgrade_sequence);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgTimeoutOnClose {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgTimeoutOnClose();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.packet = Packet.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.proof_unreceived = reader.bytes();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.proof_close = reader.bytes();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 5:\n          if (tag !== 40) {\n            break;\n          }\n\n          message.next_sequence_recv = longToString(reader.uint64() as Long);\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n        case 7:\n          if (tag !== 56) {\n            break;\n          }\n\n          message.counterparty_upgrade_sequence = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgTimeoutOnClose {\n    return {\n      packet: isSet(object.packet) ? Packet.fromJSON(object.packet) : undefined,\n      proof_unreceived: isSet(object.proof_unreceived) ? bytesFromBase64(object.proof_unreceived) : new Uint8Array(0),\n      proof_close: isSet(object.proof_close) ? bytesFromBase64(object.proof_close) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      next_sequence_recv: isSet(object.next_sequence_recv) ? globalThis.String(object.next_sequence_recv) : \"0\",\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n      counterparty_upgrade_sequence: isSet(object.counterparty_upgrade_sequence)\n        ? globalThis.String(object.counterparty_upgrade_sequence)\n        : \"0\",\n    };\n  },\n\n  toJSON(message: MsgTimeoutOnClose): unknown {\n    const obj: any = {};\n    if (message.packet !== undefined) {\n      obj.packet = Packet.toJSON(message.packet);\n    }\n    if (message.proof_unreceived.length !== 0) {\n      obj.proof_unreceived = base64FromBytes(message.proof_unreceived);\n    }\n    if (message.proof_close.length !== 0) {\n      obj.proof_close = base64FromBytes(message.proof_close);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.next_sequence_recv !== \"0\") {\n      obj.next_sequence_recv = message.next_sequence_recv;\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    if (message.counterparty_upgrade_sequence !== \"0\") {\n      obj.counterparty_upgrade_sequence = message.counterparty_upgrade_sequence;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgTimeoutOnClose>): MsgTimeoutOnClose {\n    return MsgTimeoutOnClose.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgTimeoutOnClose>): MsgTimeoutOnClose {\n    const message = createBaseMsgTimeoutOnClose();\n    message.packet = (object.packet !== undefined && object.packet !== null)\n      ? Packet.fromPartial(object.packet)\n      : undefined;\n    message.proof_unreceived = object.proof_unreceived ?? new Uint8Array(0);\n    message.proof_close = object.proof_close ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.next_sequence_recv = object.next_sequence_recv ?? \"0\";\n    message.signer = object.signer ?? \"\";\n    message.counterparty_upgrade_sequence = object.counterparty_upgrade_sequence ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseMsgTimeoutOnCloseResponse(): MsgTimeoutOnCloseResponse {\n  return { result: 0 };\n}\n\nexport const MsgTimeoutOnCloseResponse = {\n  encode(message: MsgTimeoutOnCloseResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgTimeoutOnCloseResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgTimeoutOnCloseResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.result = reader.int32() as any;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgTimeoutOnCloseResponse {\n    return { result: isSet(object.result) ? responseResultTypeFromJSON(object.result) : 0 };\n  },\n\n  toJSON(message: MsgTimeoutOnCloseResponse): unknown {\n    const obj: any = {};\n    if (message.result !== 0) {\n      obj.result = responseResultTypeToJSON(message.result);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgTimeoutOnCloseResponse>): MsgTimeoutOnCloseResponse {\n    return MsgTimeoutOnCloseResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgTimeoutOnCloseResponse>): MsgTimeoutOnCloseResponse {\n    const message = createBaseMsgTimeoutOnCloseResponse();\n    message.result = object.result ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseMsgAcknowledgement(): MsgAcknowledgement {\n  return {\n    packet: undefined,\n    acknowledgement: new Uint8Array(0),\n    proof_acked: new Uint8Array(0),\n    proof_height: undefined,\n    signer: \"\",\n  };\n}\n\nexport const MsgAcknowledgement = {\n  encode(message: MsgAcknowledgement, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.packet !== undefined) {\n      Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.acknowledgement.length !== 0) {\n      writer.uint32(18).bytes(message.acknowledgement);\n    }\n    if (message.proof_acked.length !== 0) {\n      writer.uint32(26).bytes(message.proof_acked);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgAcknowledgement {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgAcknowledgement();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.packet = Packet.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.acknowledgement = reader.bytes();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.proof_acked = reader.bytes();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgAcknowledgement {\n    return {\n      packet: isSet(object.packet) ? Packet.fromJSON(object.packet) : undefined,\n      acknowledgement: isSet(object.acknowledgement) ? bytesFromBase64(object.acknowledgement) : new Uint8Array(0),\n      proof_acked: isSet(object.proof_acked) ? bytesFromBase64(object.proof_acked) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgAcknowledgement): unknown {\n    const obj: any = {};\n    if (message.packet !== undefined) {\n      obj.packet = Packet.toJSON(message.packet);\n    }\n    if (message.acknowledgement.length !== 0) {\n      obj.acknowledgement = base64FromBytes(message.acknowledgement);\n    }\n    if (message.proof_acked.length !== 0) {\n      obj.proof_acked = base64FromBytes(message.proof_acked);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgAcknowledgement>): MsgAcknowledgement {\n    return MsgAcknowledgement.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgAcknowledgement>): MsgAcknowledgement {\n    const message = createBaseMsgAcknowledgement();\n    message.packet = (object.packet !== undefined && object.packet !== null)\n      ? Packet.fromPartial(object.packet)\n      : undefined;\n    message.acknowledgement = object.acknowledgement ?? new Uint8Array(0);\n    message.proof_acked = object.proof_acked ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgAcknowledgementResponse(): MsgAcknowledgementResponse {\n  return { result: 0 };\n}\n\nexport const MsgAcknowledgementResponse = {\n  encode(message: MsgAcknowledgementResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgAcknowledgementResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgAcknowledgementResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.result = reader.int32() as any;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgAcknowledgementResponse {\n    return { result: isSet(object.result) ? responseResultTypeFromJSON(object.result) : 0 };\n  },\n\n  toJSON(message: MsgAcknowledgementResponse): unknown {\n    const obj: any = {};\n    if (message.result !== 0) {\n      obj.result = responseResultTypeToJSON(message.result);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgAcknowledgementResponse>): MsgAcknowledgementResponse {\n    return MsgAcknowledgementResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgAcknowledgementResponse>): MsgAcknowledgementResponse {\n    const message = createBaseMsgAcknowledgementResponse();\n    message.result = object.result ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeInit(): MsgChannelUpgradeInit {\n  return { port_id: \"\", channel_id: \"\", fields: undefined, signer: \"\" };\n}\n\nexport const MsgChannelUpgradeInit = {\n  encode(message: MsgChannelUpgradeInit, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.fields !== undefined) {\n      UpgradeFields.encode(message.fields, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeInit {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeInit();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.fields = UpgradeFields.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelUpgradeInit {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      fields: isSet(object.fields) ? UpgradeFields.fromJSON(object.fields) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelUpgradeInit): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.fields !== undefined) {\n      obj.fields = UpgradeFields.toJSON(message.fields);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeInit>): MsgChannelUpgradeInit {\n    return MsgChannelUpgradeInit.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelUpgradeInit>): MsgChannelUpgradeInit {\n    const message = createBaseMsgChannelUpgradeInit();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.fields = (object.fields !== undefined && object.fields !== null)\n      ? UpgradeFields.fromPartial(object.fields)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeInitResponse(): MsgChannelUpgradeInitResponse {\n  return { upgrade: undefined, upgrade_sequence: \"0\" };\n}\n\nexport const MsgChannelUpgradeInitResponse = {\n  encode(message: MsgChannelUpgradeInitResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.upgrade !== undefined) {\n      Upgrade.encode(message.upgrade, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.upgrade_sequence !== \"0\") {\n      writer.uint32(16).uint64(message.upgrade_sequence);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeInitResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeInitResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.upgrade = Upgrade.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.upgrade_sequence = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelUpgradeInitResponse {\n    return {\n      upgrade: isSet(object.upgrade) ? Upgrade.fromJSON(object.upgrade) : undefined,\n      upgrade_sequence: isSet(object.upgrade_sequence) ? globalThis.String(object.upgrade_sequence) : \"0\",\n    };\n  },\n\n  toJSON(message: MsgChannelUpgradeInitResponse): unknown {\n    const obj: any = {};\n    if (message.upgrade !== undefined) {\n      obj.upgrade = Upgrade.toJSON(message.upgrade);\n    }\n    if (message.upgrade_sequence !== \"0\") {\n      obj.upgrade_sequence = message.upgrade_sequence;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeInitResponse>): MsgChannelUpgradeInitResponse {\n    return MsgChannelUpgradeInitResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelUpgradeInitResponse>): MsgChannelUpgradeInitResponse {\n    const message = createBaseMsgChannelUpgradeInitResponse();\n    message.upgrade = (object.upgrade !== undefined && object.upgrade !== null)\n      ? Upgrade.fromPartial(object.upgrade)\n      : undefined;\n    message.upgrade_sequence = object.upgrade_sequence ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeTry(): MsgChannelUpgradeTry {\n  return {\n    port_id: \"\",\n    channel_id: \"\",\n    proposed_upgrade_connection_hops: [],\n    counterparty_upgrade_fields: undefined,\n    counterparty_upgrade_sequence: \"0\",\n    proof_channel: new Uint8Array(0),\n    proof_upgrade: new Uint8Array(0),\n    proof_height: undefined,\n    signer: \"\",\n  };\n}\n\nexport const MsgChannelUpgradeTry = {\n  encode(message: MsgChannelUpgradeTry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    for (const v of message.proposed_upgrade_connection_hops) {\n      writer.uint32(26).string(v!);\n    }\n    if (message.counterparty_upgrade_fields !== undefined) {\n      UpgradeFields.encode(message.counterparty_upgrade_fields, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.counterparty_upgrade_sequence !== \"0\") {\n      writer.uint32(40).uint64(message.counterparty_upgrade_sequence);\n    }\n    if (message.proof_channel.length !== 0) {\n      writer.uint32(50).bytes(message.proof_channel);\n    }\n    if (message.proof_upgrade.length !== 0) {\n      writer.uint32(58).bytes(message.proof_upgrade);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(74).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeTry {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeTry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.proposed_upgrade_connection_hops.push(reader.string());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.counterparty_upgrade_fields = UpgradeFields.decode(reader, reader.uint32());\n          continue;\n        case 5:\n          if (tag !== 40) {\n            break;\n          }\n\n          message.counterparty_upgrade_sequence = longToString(reader.uint64() as Long);\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.proof_channel = reader.bytes();\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.proof_upgrade = reader.bytes();\n          continue;\n        case 8:\n          if (tag !== 66) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 9:\n          if (tag !== 74) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelUpgradeTry {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      proposed_upgrade_connection_hops: globalThis.Array.isArray(object?.proposed_upgrade_connection_hops)\n        ? object.proposed_upgrade_connection_hops.map((e: any) => globalThis.String(e))\n        : [],\n      counterparty_upgrade_fields: isSet(object.counterparty_upgrade_fields)\n        ? UpgradeFields.fromJSON(object.counterparty_upgrade_fields)\n        : undefined,\n      counterparty_upgrade_sequence: isSet(object.counterparty_upgrade_sequence)\n        ? globalThis.String(object.counterparty_upgrade_sequence)\n        : \"0\",\n      proof_channel: isSet(object.proof_channel) ? bytesFromBase64(object.proof_channel) : new Uint8Array(0),\n      proof_upgrade: isSet(object.proof_upgrade) ? bytesFromBase64(object.proof_upgrade) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelUpgradeTry): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.proposed_upgrade_connection_hops?.length) {\n      obj.proposed_upgrade_connection_hops = message.proposed_upgrade_connection_hops;\n    }\n    if (message.counterparty_upgrade_fields !== undefined) {\n      obj.counterparty_upgrade_fields = UpgradeFields.toJSON(message.counterparty_upgrade_fields);\n    }\n    if (message.counterparty_upgrade_sequence !== \"0\") {\n      obj.counterparty_upgrade_sequence = message.counterparty_upgrade_sequence;\n    }\n    if (message.proof_channel.length !== 0) {\n      obj.proof_channel = base64FromBytes(message.proof_channel);\n    }\n    if (message.proof_upgrade.length !== 0) {\n      obj.proof_upgrade = base64FromBytes(message.proof_upgrade);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeTry>): MsgChannelUpgradeTry {\n    return MsgChannelUpgradeTry.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelUpgradeTry>): MsgChannelUpgradeTry {\n    const message = createBaseMsgChannelUpgradeTry();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.proposed_upgrade_connection_hops = object.proposed_upgrade_connection_hops?.map((e) => e) || [];\n    message.counterparty_upgrade_fields =\n      (object.counterparty_upgrade_fields !== undefined && object.counterparty_upgrade_fields !== null)\n        ? UpgradeFields.fromPartial(object.counterparty_upgrade_fields)\n        : undefined;\n    message.counterparty_upgrade_sequence = object.counterparty_upgrade_sequence ?? \"0\";\n    message.proof_channel = object.proof_channel ?? new Uint8Array(0);\n    message.proof_upgrade = object.proof_upgrade ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeTryResponse(): MsgChannelUpgradeTryResponse {\n  return { upgrade: undefined, upgrade_sequence: \"0\", result: 0 };\n}\n\nexport const MsgChannelUpgradeTryResponse = {\n  encode(message: MsgChannelUpgradeTryResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.upgrade !== undefined) {\n      Upgrade.encode(message.upgrade, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.upgrade_sequence !== \"0\") {\n      writer.uint32(16).uint64(message.upgrade_sequence);\n    }\n    if (message.result !== 0) {\n      writer.uint32(24).int32(message.result);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeTryResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeTryResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.upgrade = Upgrade.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.upgrade_sequence = longToString(reader.uint64() as Long);\n          continue;\n        case 3:\n          if (tag !== 24) {\n            break;\n          }\n\n          message.result = reader.int32() as any;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelUpgradeTryResponse {\n    return {\n      upgrade: isSet(object.upgrade) ? Upgrade.fromJSON(object.upgrade) : undefined,\n      upgrade_sequence: isSet(object.upgrade_sequence) ? globalThis.String(object.upgrade_sequence) : \"0\",\n      result: isSet(object.result) ? responseResultTypeFromJSON(object.result) : 0,\n    };\n  },\n\n  toJSON(message: MsgChannelUpgradeTryResponse): unknown {\n    const obj: any = {};\n    if (message.upgrade !== undefined) {\n      obj.upgrade = Upgrade.toJSON(message.upgrade);\n    }\n    if (message.upgrade_sequence !== \"0\") {\n      obj.upgrade_sequence = message.upgrade_sequence;\n    }\n    if (message.result !== 0) {\n      obj.result = responseResultTypeToJSON(message.result);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeTryResponse>): MsgChannelUpgradeTryResponse {\n    return MsgChannelUpgradeTryResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelUpgradeTryResponse>): MsgChannelUpgradeTryResponse {\n    const message = createBaseMsgChannelUpgradeTryResponse();\n    message.upgrade = (object.upgrade !== undefined && object.upgrade !== null)\n      ? Upgrade.fromPartial(object.upgrade)\n      : undefined;\n    message.upgrade_sequence = object.upgrade_sequence ?? \"0\";\n    message.result = object.result ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeAck(): MsgChannelUpgradeAck {\n  return {\n    port_id: \"\",\n    channel_id: \"\",\n    counterparty_upgrade: undefined,\n    proof_channel: new Uint8Array(0),\n    proof_upgrade: new Uint8Array(0),\n    proof_height: undefined,\n    signer: \"\",\n  };\n}\n\nexport const MsgChannelUpgradeAck = {\n  encode(message: MsgChannelUpgradeAck, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.counterparty_upgrade !== undefined) {\n      Upgrade.encode(message.counterparty_upgrade, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.proof_channel.length !== 0) {\n      writer.uint32(34).bytes(message.proof_channel);\n    }\n    if (message.proof_upgrade.length !== 0) {\n      writer.uint32(42).bytes(message.proof_upgrade);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(58).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeAck {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeAck();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.counterparty_upgrade = Upgrade.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.proof_channel = reader.bytes();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.proof_upgrade = reader.bytes();\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelUpgradeAck {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      counterparty_upgrade: isSet(object.counterparty_upgrade)\n        ? Upgrade.fromJSON(object.counterparty_upgrade)\n        : undefined,\n      proof_channel: isSet(object.proof_channel) ? bytesFromBase64(object.proof_channel) : new Uint8Array(0),\n      proof_upgrade: isSet(object.proof_upgrade) ? bytesFromBase64(object.proof_upgrade) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelUpgradeAck): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.counterparty_upgrade !== undefined) {\n      obj.counterparty_upgrade = Upgrade.toJSON(message.counterparty_upgrade);\n    }\n    if (message.proof_channel.length !== 0) {\n      obj.proof_channel = base64FromBytes(message.proof_channel);\n    }\n    if (message.proof_upgrade.length !== 0) {\n      obj.proof_upgrade = base64FromBytes(message.proof_upgrade);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeAck>): MsgChannelUpgradeAck {\n    return MsgChannelUpgradeAck.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelUpgradeAck>): MsgChannelUpgradeAck {\n    const message = createBaseMsgChannelUpgradeAck();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.counterparty_upgrade = (object.counterparty_upgrade !== undefined && object.counterparty_upgrade !== null)\n      ? Upgrade.fromPartial(object.counterparty_upgrade)\n      : undefined;\n    message.proof_channel = object.proof_channel ?? new Uint8Array(0);\n    message.proof_upgrade = object.proof_upgrade ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeAckResponse(): MsgChannelUpgradeAckResponse {\n  return { result: 0 };\n}\n\nexport const MsgChannelUpgradeAckResponse = {\n  encode(message: MsgChannelUpgradeAckResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeAckResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeAckResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.result = reader.int32() as any;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelUpgradeAckResponse {\n    return { result: isSet(object.result) ? responseResultTypeFromJSON(object.result) : 0 };\n  },\n\n  toJSON(message: MsgChannelUpgradeAckResponse): unknown {\n    const obj: any = {};\n    if (message.result !== 0) {\n      obj.result = responseResultTypeToJSON(message.result);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeAckResponse>): MsgChannelUpgradeAckResponse {\n    return MsgChannelUpgradeAckResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelUpgradeAckResponse>): MsgChannelUpgradeAckResponse {\n    const message = createBaseMsgChannelUpgradeAckResponse();\n    message.result = object.result ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeConfirm(): MsgChannelUpgradeConfirm {\n  return {\n    port_id: \"\",\n    channel_id: \"\",\n    counterparty_channel_state: 0,\n    counterparty_upgrade: undefined,\n    proof_channel: new Uint8Array(0),\n    proof_upgrade: new Uint8Array(0),\n    proof_height: undefined,\n    signer: \"\",\n  };\n}\n\nexport const MsgChannelUpgradeConfirm = {\n  encode(message: MsgChannelUpgradeConfirm, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.counterparty_channel_state !== 0) {\n      writer.uint32(24).int32(message.counterparty_channel_state);\n    }\n    if (message.counterparty_upgrade !== undefined) {\n      Upgrade.encode(message.counterparty_upgrade, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.proof_channel.length !== 0) {\n      writer.uint32(42).bytes(message.proof_channel);\n    }\n    if (message.proof_upgrade.length !== 0) {\n      writer.uint32(50).bytes(message.proof_upgrade);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(66).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeConfirm {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeConfirm();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 24) {\n            break;\n          }\n\n          message.counterparty_channel_state = reader.int32() as any;\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.counterparty_upgrade = Upgrade.decode(reader, reader.uint32());\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.proof_channel = reader.bytes();\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.proof_upgrade = reader.bytes();\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 8:\n          if (tag !== 66) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelUpgradeConfirm {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      counterparty_channel_state: isSet(object.counterparty_channel_state)\n        ? stateFromJSON(object.counterparty_channel_state)\n        : 0,\n      counterparty_upgrade: isSet(object.counterparty_upgrade)\n        ? Upgrade.fromJSON(object.counterparty_upgrade)\n        : undefined,\n      proof_channel: isSet(object.proof_channel) ? bytesFromBase64(object.proof_channel) : new Uint8Array(0),\n      proof_upgrade: isSet(object.proof_upgrade) ? bytesFromBase64(object.proof_upgrade) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelUpgradeConfirm): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.counterparty_channel_state !== 0) {\n      obj.counterparty_channel_state = stateToJSON(message.counterparty_channel_state);\n    }\n    if (message.counterparty_upgrade !== undefined) {\n      obj.counterparty_upgrade = Upgrade.toJSON(message.counterparty_upgrade);\n    }\n    if (message.proof_channel.length !== 0) {\n      obj.proof_channel = base64FromBytes(message.proof_channel);\n    }\n    if (message.proof_upgrade.length !== 0) {\n      obj.proof_upgrade = base64FromBytes(message.proof_upgrade);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeConfirm>): MsgChannelUpgradeConfirm {\n    return MsgChannelUpgradeConfirm.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelUpgradeConfirm>): MsgChannelUpgradeConfirm {\n    const message = createBaseMsgChannelUpgradeConfirm();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.counterparty_channel_state = object.counterparty_channel_state ?? 0;\n    message.counterparty_upgrade = (object.counterparty_upgrade !== undefined && object.counterparty_upgrade !== null)\n      ? Upgrade.fromPartial(object.counterparty_upgrade)\n      : undefined;\n    message.proof_channel = object.proof_channel ?? new Uint8Array(0);\n    message.proof_upgrade = object.proof_upgrade ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeConfirmResponse(): MsgChannelUpgradeConfirmResponse {\n  return { result: 0 };\n}\n\nexport const MsgChannelUpgradeConfirmResponse = {\n  encode(message: MsgChannelUpgradeConfirmResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeConfirmResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeConfirmResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.result = reader.int32() as any;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelUpgradeConfirmResponse {\n    return { result: isSet(object.result) ? responseResultTypeFromJSON(object.result) : 0 };\n  },\n\n  toJSON(message: MsgChannelUpgradeConfirmResponse): unknown {\n    const obj: any = {};\n    if (message.result !== 0) {\n      obj.result = responseResultTypeToJSON(message.result);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeConfirmResponse>): MsgChannelUpgradeConfirmResponse {\n    return MsgChannelUpgradeConfirmResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelUpgradeConfirmResponse>): MsgChannelUpgradeConfirmResponse {\n    const message = createBaseMsgChannelUpgradeConfirmResponse();\n    message.result = object.result ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeOpen(): MsgChannelUpgradeOpen {\n  return {\n    port_id: \"\",\n    channel_id: \"\",\n    counterparty_channel_state: 0,\n    counterparty_upgrade_sequence: \"0\",\n    proof_channel: new Uint8Array(0),\n    proof_height: undefined,\n    signer: \"\",\n  };\n}\n\nexport const MsgChannelUpgradeOpen = {\n  encode(message: MsgChannelUpgradeOpen, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.counterparty_channel_state !== 0) {\n      writer.uint32(24).int32(message.counterparty_channel_state);\n    }\n    if (message.counterparty_upgrade_sequence !== \"0\") {\n      writer.uint32(32).uint64(message.counterparty_upgrade_sequence);\n    }\n    if (message.proof_channel.length !== 0) {\n      writer.uint32(42).bytes(message.proof_channel);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(58).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeOpen {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeOpen();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 24) {\n            break;\n          }\n\n          message.counterparty_channel_state = reader.int32() as any;\n          continue;\n        case 4:\n          if (tag !== 32) {\n            break;\n          }\n\n          message.counterparty_upgrade_sequence = longToString(reader.uint64() as Long);\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.proof_channel = reader.bytes();\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelUpgradeOpen {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      counterparty_channel_state: isSet(object.counterparty_channel_state)\n        ? stateFromJSON(object.counterparty_channel_state)\n        : 0,\n      counterparty_upgrade_sequence: isSet(object.counterparty_upgrade_sequence)\n        ? globalThis.String(object.counterparty_upgrade_sequence)\n        : \"0\",\n      proof_channel: isSet(object.proof_channel) ? bytesFromBase64(object.proof_channel) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelUpgradeOpen): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.counterparty_channel_state !== 0) {\n      obj.counterparty_channel_state = stateToJSON(message.counterparty_channel_state);\n    }\n    if (message.counterparty_upgrade_sequence !== \"0\") {\n      obj.counterparty_upgrade_sequence = message.counterparty_upgrade_sequence;\n    }\n    if (message.proof_channel.length !== 0) {\n      obj.proof_channel = base64FromBytes(message.proof_channel);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeOpen>): MsgChannelUpgradeOpen {\n    return MsgChannelUpgradeOpen.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelUpgradeOpen>): MsgChannelUpgradeOpen {\n    const message = createBaseMsgChannelUpgradeOpen();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.counterparty_channel_state = object.counterparty_channel_state ?? 0;\n    message.counterparty_upgrade_sequence = object.counterparty_upgrade_sequence ?? \"0\";\n    message.proof_channel = object.proof_channel ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeOpenResponse(): MsgChannelUpgradeOpenResponse {\n  return {};\n}\n\nexport const MsgChannelUpgradeOpenResponse = {\n  encode(_: MsgChannelUpgradeOpenResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeOpenResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeOpenResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgChannelUpgradeOpenResponse {\n    return {};\n  },\n\n  toJSON(_: MsgChannelUpgradeOpenResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeOpenResponse>): MsgChannelUpgradeOpenResponse {\n    return MsgChannelUpgradeOpenResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgChannelUpgradeOpenResponse>): MsgChannelUpgradeOpenResponse {\n    const message = createBaseMsgChannelUpgradeOpenResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeTimeout(): MsgChannelUpgradeTimeout {\n  return {\n    port_id: \"\",\n    channel_id: \"\",\n    counterparty_channel: undefined,\n    proof_channel: new Uint8Array(0),\n    proof_height: undefined,\n    signer: \"\",\n  };\n}\n\nexport const MsgChannelUpgradeTimeout = {\n  encode(message: MsgChannelUpgradeTimeout, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.counterparty_channel !== undefined) {\n      Channel.encode(message.counterparty_channel, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.proof_channel.length !== 0) {\n      writer.uint32(34).bytes(message.proof_channel);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(50).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeTimeout {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeTimeout();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.counterparty_channel = Channel.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.proof_channel = reader.bytes();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelUpgradeTimeout {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      counterparty_channel: isSet(object.counterparty_channel)\n        ? Channel.fromJSON(object.counterparty_channel)\n        : undefined,\n      proof_channel: isSet(object.proof_channel) ? bytesFromBase64(object.proof_channel) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelUpgradeTimeout): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.counterparty_channel !== undefined) {\n      obj.counterparty_channel = Channel.toJSON(message.counterparty_channel);\n    }\n    if (message.proof_channel.length !== 0) {\n      obj.proof_channel = base64FromBytes(message.proof_channel);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeTimeout>): MsgChannelUpgradeTimeout {\n    return MsgChannelUpgradeTimeout.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelUpgradeTimeout>): MsgChannelUpgradeTimeout {\n    const message = createBaseMsgChannelUpgradeTimeout();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.counterparty_channel = (object.counterparty_channel !== undefined && object.counterparty_channel !== null)\n      ? Channel.fromPartial(object.counterparty_channel)\n      : undefined;\n    message.proof_channel = object.proof_channel ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeTimeoutResponse(): MsgChannelUpgradeTimeoutResponse {\n  return {};\n}\n\nexport const MsgChannelUpgradeTimeoutResponse = {\n  encode(_: MsgChannelUpgradeTimeoutResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeTimeoutResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeTimeoutResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgChannelUpgradeTimeoutResponse {\n    return {};\n  },\n\n  toJSON(_: MsgChannelUpgradeTimeoutResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeTimeoutResponse>): MsgChannelUpgradeTimeoutResponse {\n    return MsgChannelUpgradeTimeoutResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgChannelUpgradeTimeoutResponse>): MsgChannelUpgradeTimeoutResponse {\n    const message = createBaseMsgChannelUpgradeTimeoutResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeCancel(): MsgChannelUpgradeCancel {\n  return {\n    port_id: \"\",\n    channel_id: \"\",\n    error_receipt: undefined,\n    proof_error_receipt: new Uint8Array(0),\n    proof_height: undefined,\n    signer: \"\",\n  };\n}\n\nexport const MsgChannelUpgradeCancel = {\n  encode(message: MsgChannelUpgradeCancel, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.error_receipt !== undefined) {\n      ErrorReceipt.encode(message.error_receipt, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.proof_error_receipt.length !== 0) {\n      writer.uint32(34).bytes(message.proof_error_receipt);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(50).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeCancel {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeCancel();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.error_receipt = ErrorReceipt.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.proof_error_receipt = reader.bytes();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgChannelUpgradeCancel {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      error_receipt: isSet(object.error_receipt) ? ErrorReceipt.fromJSON(object.error_receipt) : undefined,\n      proof_error_receipt: isSet(object.proof_error_receipt)\n        ? bytesFromBase64(object.proof_error_receipt)\n        : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgChannelUpgradeCancel): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.error_receipt !== undefined) {\n      obj.error_receipt = ErrorReceipt.toJSON(message.error_receipt);\n    }\n    if (message.proof_error_receipt.length !== 0) {\n      obj.proof_error_receipt = base64FromBytes(message.proof_error_receipt);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeCancel>): MsgChannelUpgradeCancel {\n    return MsgChannelUpgradeCancel.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgChannelUpgradeCancel>): MsgChannelUpgradeCancel {\n    const message = createBaseMsgChannelUpgradeCancel();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.error_receipt = (object.error_receipt !== undefined && object.error_receipt !== null)\n      ? ErrorReceipt.fromPartial(object.error_receipt)\n      : undefined;\n    message.proof_error_receipt = object.proof_error_receipt ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgChannelUpgradeCancelResponse(): MsgChannelUpgradeCancelResponse {\n  return {};\n}\n\nexport const MsgChannelUpgradeCancelResponse = {\n  encode(_: MsgChannelUpgradeCancelResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgChannelUpgradeCancelResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgChannelUpgradeCancelResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgChannelUpgradeCancelResponse {\n    return {};\n  },\n\n  toJSON(_: MsgChannelUpgradeCancelResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgChannelUpgradeCancelResponse>): MsgChannelUpgradeCancelResponse {\n    return MsgChannelUpgradeCancelResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgChannelUpgradeCancelResponse>): MsgChannelUpgradeCancelResponse {\n    const message = createBaseMsgChannelUpgradeCancelResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateParams(): MsgUpdateParams {\n  return { authority: \"\", params: undefined };\n}\n\nexport const MsgUpdateParams = {\n  encode(message: MsgUpdateParams, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.authority !== \"\") {\n      writer.uint32(10).string(message.authority);\n    }\n    if (message.params !== undefined) {\n      Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParams {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.authority = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.params = Params.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateParams {\n    return {\n      authority: isSet(object.authority) ? globalThis.String(object.authority) : \"\",\n      params: isSet(object.params) ? Params.fromJSON(object.params) : undefined,\n    };\n  },\n\n  toJSON(message: MsgUpdateParams): unknown {\n    const obj: any = {};\n    if (message.authority !== \"\") {\n      obj.authority = message.authority;\n    }\n    if (message.params !== undefined) {\n      obj.params = Params.toJSON(message.params);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateParams>): MsgUpdateParams {\n    return MsgUpdateParams.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgUpdateParams>): MsgUpdateParams {\n    const message = createBaseMsgUpdateParams();\n    message.authority = object.authority ?? \"\";\n    message.params = (object.params !== undefined && object.params !== null)\n      ? Params.fromPartial(object.params)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateParamsResponse(): MsgUpdateParamsResponse {\n  return {};\n}\n\nexport const MsgUpdateParamsResponse = {\n  encode(_: MsgUpdateParamsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParamsResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParamsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateParamsResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateParamsResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse {\n    return MsgUpdateParamsResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse {\n    const message = createBaseMsgUpdateParamsResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgPruneAcknowledgements(): MsgPruneAcknowledgements {\n  return { port_id: \"\", channel_id: \"\", limit: \"0\", signer: \"\" };\n}\n\nexport const MsgPruneAcknowledgements = {\n  encode(message: MsgPruneAcknowledgements, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.port_id !== \"\") {\n      writer.uint32(10).string(message.port_id);\n    }\n    if (message.channel_id !== \"\") {\n      writer.uint32(18).string(message.channel_id);\n    }\n    if (message.limit !== \"0\") {\n      writer.uint32(24).uint64(message.limit);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgPruneAcknowledgements {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgPruneAcknowledgements();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.port_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.channel_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 24) {\n            break;\n          }\n\n          message.limit = longToString(reader.uint64() as Long);\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgPruneAcknowledgements {\n    return {\n      port_id: isSet(object.port_id) ? globalThis.String(object.port_id) : \"\",\n      channel_id: isSet(object.channel_id) ? globalThis.String(object.channel_id) : \"\",\n      limit: isSet(object.limit) ? globalThis.String(object.limit) : \"0\",\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgPruneAcknowledgements): unknown {\n    const obj: any = {};\n    if (message.port_id !== \"\") {\n      obj.port_id = message.port_id;\n    }\n    if (message.channel_id !== \"\") {\n      obj.channel_id = message.channel_id;\n    }\n    if (message.limit !== \"0\") {\n      obj.limit = message.limit;\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgPruneAcknowledgements>): MsgPruneAcknowledgements {\n    return MsgPruneAcknowledgements.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgPruneAcknowledgements>): MsgPruneAcknowledgements {\n    const message = createBaseMsgPruneAcknowledgements();\n    message.port_id = object.port_id ?? \"\";\n    message.channel_id = object.channel_id ?? \"\";\n    message.limit = object.limit ?? \"0\";\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgPruneAcknowledgementsResponse(): MsgPruneAcknowledgementsResponse {\n  return { total_pruned_sequences: \"0\", total_remaining_sequences: \"0\" };\n}\n\nexport const MsgPruneAcknowledgementsResponse = {\n  encode(message: MsgPruneAcknowledgementsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.total_pruned_sequences !== \"0\") {\n      writer.uint32(8).uint64(message.total_pruned_sequences);\n    }\n    if (message.total_remaining_sequences !== \"0\") {\n      writer.uint32(16).uint64(message.total_remaining_sequences);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgPruneAcknowledgementsResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgPruneAcknowledgementsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.total_pruned_sequences = longToString(reader.uint64() as Long);\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.total_remaining_sequences = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgPruneAcknowledgementsResponse {\n    return {\n      total_pruned_sequences: isSet(object.total_pruned_sequences)\n        ? globalThis.String(object.total_pruned_sequences)\n        : \"0\",\n      total_remaining_sequences: isSet(object.total_remaining_sequences)\n        ? globalThis.String(object.total_remaining_sequences)\n        : \"0\",\n    };\n  },\n\n  toJSON(message: MsgPruneAcknowledgementsResponse): unknown {\n    const obj: any = {};\n    if (message.total_pruned_sequences !== \"0\") {\n      obj.total_pruned_sequences = message.total_pruned_sequences;\n    }\n    if (message.total_remaining_sequences !== \"0\") {\n      obj.total_remaining_sequences = message.total_remaining_sequences;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgPruneAcknowledgementsResponse>): MsgPruneAcknowledgementsResponse {\n    return MsgPruneAcknowledgementsResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgPruneAcknowledgementsResponse>): MsgPruneAcknowledgementsResponse {\n    const message = createBaseMsgPruneAcknowledgementsResponse();\n    message.total_pruned_sequences = object.total_pruned_sequences ?? \"0\";\n    message.total_remaining_sequences = object.total_remaining_sequences ?? \"0\";\n    return message;\n  },\n};\n\n/** Msg defines the ibc/channel Msg service. */\nexport interface Msg {\n  /** ChannelOpenInit defines a rpc handler method for MsgChannelOpenInit. */\n  ChannelOpenInit(request: MsgChannelOpenInit): Promise<MsgChannelOpenInitResponse>;\n  /** ChannelOpenTry defines a rpc handler method for MsgChannelOpenTry. */\n  ChannelOpenTry(request: MsgChannelOpenTry): Promise<MsgChannelOpenTryResponse>;\n  /** ChannelOpenAck defines a rpc handler method for MsgChannelOpenAck. */\n  ChannelOpenAck(request: MsgChannelOpenAck): Promise<MsgChannelOpenAckResponse>;\n  /** ChannelOpenConfirm defines a rpc handler method for MsgChannelOpenConfirm. */\n  ChannelOpenConfirm(request: MsgChannelOpenConfirm): Promise<MsgChannelOpenConfirmResponse>;\n  /** ChannelCloseInit defines a rpc handler method for MsgChannelCloseInit. */\n  ChannelCloseInit(request: MsgChannelCloseInit): Promise<MsgChannelCloseInitResponse>;\n  /**\n   * ChannelCloseConfirm defines a rpc handler method for\n   * MsgChannelCloseConfirm.\n   */\n  ChannelCloseConfirm(request: MsgChannelCloseConfirm): Promise<MsgChannelCloseConfirmResponse>;\n  /** RecvPacket defines a rpc handler method for MsgRecvPacket. */\n  RecvPacket(request: MsgRecvPacket): Promise<MsgRecvPacketResponse>;\n  /** Timeout defines a rpc handler method for MsgTimeout. */\n  Timeout(request: MsgTimeout): Promise<MsgTimeoutResponse>;\n  /** TimeoutOnClose defines a rpc handler method for MsgTimeoutOnClose. */\n  TimeoutOnClose(request: MsgTimeoutOnClose): Promise<MsgTimeoutOnCloseResponse>;\n  /** Acknowledgement defines a rpc handler method for MsgAcknowledgement. */\n  Acknowledgement(request: MsgAcknowledgement): Promise<MsgAcknowledgementResponse>;\n  /** ChannelUpgradeInit defines a rpc handler method for MsgChannelUpgradeInit. */\n  ChannelUpgradeInit(request: MsgChannelUpgradeInit): Promise<MsgChannelUpgradeInitResponse>;\n  /** ChannelUpgradeTry defines a rpc handler method for MsgChannelUpgradeTry. */\n  ChannelUpgradeTry(request: MsgChannelUpgradeTry): Promise<MsgChannelUpgradeTryResponse>;\n  /** ChannelUpgradeAck defines a rpc handler method for MsgChannelUpgradeAck. */\n  ChannelUpgradeAck(request: MsgChannelUpgradeAck): Promise<MsgChannelUpgradeAckResponse>;\n  /** ChannelUpgradeConfirm defines a rpc handler method for MsgChannelUpgradeConfirm. */\n  ChannelUpgradeConfirm(request: MsgChannelUpgradeConfirm): Promise<MsgChannelUpgradeConfirmResponse>;\n  /** ChannelUpgradeOpen defines a rpc handler method for MsgChannelUpgradeOpen. */\n  ChannelUpgradeOpen(request: MsgChannelUpgradeOpen): Promise<MsgChannelUpgradeOpenResponse>;\n  /** ChannelUpgradeTimeout defines a rpc handler method for MsgChannelUpgradeTimeout. */\n  ChannelUpgradeTimeout(request: MsgChannelUpgradeTimeout): Promise<MsgChannelUpgradeTimeoutResponse>;\n  /** ChannelUpgradeCancel defines a rpc handler method for MsgChannelUpgradeCancel. */\n  ChannelUpgradeCancel(request: MsgChannelUpgradeCancel): Promise<MsgChannelUpgradeCancelResponse>;\n  /** UpdateChannelParams defines a rpc handler method for MsgUpdateParams. */\n  UpdateChannelParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse>;\n  /** PruneAcknowledgements defines a rpc handler method for MsgPruneAcknowledgements. */\n  PruneAcknowledgements(request: MsgPruneAcknowledgements): Promise<MsgPruneAcknowledgementsResponse>;\n}\n\nexport const MsgServiceName = \"ibc.core.channel.v1.Msg\";\nexport class MsgClientImpl implements Msg {\n  private readonly rpc: Rpc;\n  private readonly service: string;\n  constructor(rpc: Rpc, opts?: { service?: string }) {\n    this.service = opts?.service || MsgServiceName;\n    this.rpc = rpc;\n    this.ChannelOpenInit = this.ChannelOpenInit.bind(this);\n    this.ChannelOpenTry = this.ChannelOpenTry.bind(this);\n    this.ChannelOpenAck = this.ChannelOpenAck.bind(this);\n    this.ChannelOpenConfirm = this.ChannelOpenConfirm.bind(this);\n    this.ChannelCloseInit = this.ChannelCloseInit.bind(this);\n    this.ChannelCloseConfirm = this.ChannelCloseConfirm.bind(this);\n    this.RecvPacket = this.RecvPacket.bind(this);\n    this.Timeout = this.Timeout.bind(this);\n    this.TimeoutOnClose = this.TimeoutOnClose.bind(this);\n    this.Acknowledgement = this.Acknowledgement.bind(this);\n    this.ChannelUpgradeInit = this.ChannelUpgradeInit.bind(this);\n    this.ChannelUpgradeTry = this.ChannelUpgradeTry.bind(this);\n    this.ChannelUpgradeAck = this.ChannelUpgradeAck.bind(this);\n    this.ChannelUpgradeConfirm = this.ChannelUpgradeConfirm.bind(this);\n    this.ChannelUpgradeOpen = this.ChannelUpgradeOpen.bind(this);\n    this.ChannelUpgradeTimeout = this.ChannelUpgradeTimeout.bind(this);\n    this.ChannelUpgradeCancel = this.ChannelUpgradeCancel.bind(this);\n    this.UpdateChannelParams = this.UpdateChannelParams.bind(this);\n    this.PruneAcknowledgements = this.PruneAcknowledgements.bind(this);\n  }\n  ChannelOpenInit(request: MsgChannelOpenInit): Promise<MsgChannelOpenInitResponse> {\n    const data = MsgChannelOpenInit.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelOpenInit\", data);\n    return promise.then((data) => MsgChannelOpenInitResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ChannelOpenTry(request: MsgChannelOpenTry): Promise<MsgChannelOpenTryResponse> {\n    const data = MsgChannelOpenTry.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelOpenTry\", data);\n    return promise.then((data) => MsgChannelOpenTryResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ChannelOpenAck(request: MsgChannelOpenAck): Promise<MsgChannelOpenAckResponse> {\n    const data = MsgChannelOpenAck.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelOpenAck\", data);\n    return promise.then((data) => MsgChannelOpenAckResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ChannelOpenConfirm(request: MsgChannelOpenConfirm): Promise<MsgChannelOpenConfirmResponse> {\n    const data = MsgChannelOpenConfirm.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelOpenConfirm\", data);\n    return promise.then((data) => MsgChannelOpenConfirmResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ChannelCloseInit(request: MsgChannelCloseInit): Promise<MsgChannelCloseInitResponse> {\n    const data = MsgChannelCloseInit.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelCloseInit\", data);\n    return promise.then((data) => MsgChannelCloseInitResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ChannelCloseConfirm(request: MsgChannelCloseConfirm): Promise<MsgChannelCloseConfirmResponse> {\n    const data = MsgChannelCloseConfirm.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelCloseConfirm\", data);\n    return promise.then((data) => MsgChannelCloseConfirmResponse.decode(_m0.Reader.create(data)));\n  }\n\n  RecvPacket(request: MsgRecvPacket): Promise<MsgRecvPacketResponse> {\n    const data = MsgRecvPacket.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"RecvPacket\", data);\n    return promise.then((data) => MsgRecvPacketResponse.decode(_m0.Reader.create(data)));\n  }\n\n  Timeout(request: MsgTimeout): Promise<MsgTimeoutResponse> {\n    const data = MsgTimeout.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"Timeout\", data);\n    return promise.then((data) => MsgTimeoutResponse.decode(_m0.Reader.create(data)));\n  }\n\n  TimeoutOnClose(request: MsgTimeoutOnClose): Promise<MsgTimeoutOnCloseResponse> {\n    const data = MsgTimeoutOnClose.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"TimeoutOnClose\", data);\n    return promise.then((data) => MsgTimeoutOnCloseResponse.decode(_m0.Reader.create(data)));\n  }\n\n  Acknowledgement(request: MsgAcknowledgement): Promise<MsgAcknowledgementResponse> {\n    const data = MsgAcknowledgement.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"Acknowledgement\", data);\n    return promise.then((data) => MsgAcknowledgementResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ChannelUpgradeInit(request: MsgChannelUpgradeInit): Promise<MsgChannelUpgradeInitResponse> {\n    const data = MsgChannelUpgradeInit.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelUpgradeInit\", data);\n    return promise.then((data) => MsgChannelUpgradeInitResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ChannelUpgradeTry(request: MsgChannelUpgradeTry): Promise<MsgChannelUpgradeTryResponse> {\n    const data = MsgChannelUpgradeTry.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelUpgradeTry\", data);\n    return promise.then((data) => MsgChannelUpgradeTryResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ChannelUpgradeAck(request: MsgChannelUpgradeAck): Promise<MsgChannelUpgradeAckResponse> {\n    const data = MsgChannelUpgradeAck.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelUpgradeAck\", data);\n    return promise.then((data) => MsgChannelUpgradeAckResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ChannelUpgradeConfirm(request: MsgChannelUpgradeConfirm): Promise<MsgChannelUpgradeConfirmResponse> {\n    const data = MsgChannelUpgradeConfirm.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelUpgradeConfirm\", data);\n    return promise.then((data) => MsgChannelUpgradeConfirmResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ChannelUpgradeOpen(request: MsgChannelUpgradeOpen): Promise<MsgChannelUpgradeOpenResponse> {\n    const data = MsgChannelUpgradeOpen.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelUpgradeOpen\", data);\n    return promise.then((data) => MsgChannelUpgradeOpenResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ChannelUpgradeTimeout(request: MsgChannelUpgradeTimeout): Promise<MsgChannelUpgradeTimeoutResponse> {\n    const data = MsgChannelUpgradeTimeout.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelUpgradeTimeout\", data);\n    return promise.then((data) => MsgChannelUpgradeTimeoutResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ChannelUpgradeCancel(request: MsgChannelUpgradeCancel): Promise<MsgChannelUpgradeCancelResponse> {\n    const data = MsgChannelUpgradeCancel.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ChannelUpgradeCancel\", data);\n    return promise.then((data) => MsgChannelUpgradeCancelResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateChannelParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse> {\n    const data = MsgUpdateParams.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateChannelParams\", data);\n    return promise.then((data) => MsgUpdateParamsResponse.decode(_m0.Reader.create(data)));\n  }\n\n  PruneAcknowledgements(request: MsgPruneAcknowledgements): Promise<MsgPruneAcknowledgementsResponse> {\n    const data = MsgPruneAcknowledgements.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"PruneAcknowledgements\", data);\n    return promise.then((data) => MsgPruneAcknowledgementsResponse.decode(_m0.Reader.create(data)));\n  }\n}\n\ninterface Rpc {\n  request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;\n}\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n  if ((globalThis as any).Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\n\nfunction base64FromBytes(arr: Uint8Array): string {\n  if ((globalThis as any).Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin: string[] = [];\n    arr.forEach((byte) => {\n      bin.push(globalThis.String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToString(long: Long) {\n  return long.toString();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":";AAAA,sDAAsD;AACtD,YAAY;AACZ,kCAAkC;AAClC,iCAAiC;AACjC,uCAAuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEvC,kBAAA,EAAoB,CACpB,MAAA,SAAA,iCAAwB;AACxB,MAAA,MAAA,4CAA0C;AAC1C,MAAA,6CAAgD;AAChD,MAAA,iCAAuF;AACvF,MAAA,iDAAyE;AAE5D,QAAA,eAAe,GAAG,qBAAqB,CAAC;AAErD,mFAAA,EAAqF,CACrF,IAAY,kBAUX;AAVD,CAAA,SAAY,kBAAkB;IAC5B,sEAAA,EAAwE,CACxE,kBAAA,CAAA,kBAAA,CAAA,mCAAA,GAAA,EAAA,GAAA,kCAAoC,CAAA;IACpC,mJAAA,EAAqJ,CACrJ,kBAAA,CAAA,kBAAA,CAAA,4BAAA,GAAA,EAAA,GAAA,2BAA6B,CAAA;IAC7B,yEAAA,EAA2E,CAC3E,kBAAA,CAAA,kBAAA,CAAA,+BAAA,GAAA,EAAA,GAAA,8BAAgC,CAAA;IAChC,2EAAA,EAA6E,CAC7E,kBAAA,CAAA,kBAAA,CAAA,+BAAA,GAAA,EAAA,GAAA,8BAAgC,CAAA;IAChC,kBAAA,CAAA,kBAAA,CAAA,eAAA,GAAA,CAAA,EAAA,GAAA,cAAiB,CAAA;AACnB,CAAC,EAVW,kBAAkB,GAAlB,QAAA,kBAAkB,IAAA,CAAlB,QAAA,kBAAkB,GAAA,CAAA,CAAA,GAU7B;AAED,SAAgB,0BAA0B,CAAC,MAAW;IACpD,OAAQ,MAAM,EAAE;QACd,KAAK,CAAC,CAAC;QACP,KAAK,kCAAkC;YACrC,OAAO,kBAAkB,CAAC,gCAAgC,CAAC;QAC7D,KAAK,CAAC,CAAC;QACP,KAAK,2BAA2B;YAC9B,OAAO,kBAAkB,CAAC,yBAAyB,CAAC;QACtD,KAAK,CAAC,CAAC;QACP,KAAK,8BAA8B;YACjC,OAAO,kBAAkB,CAAC,4BAA4B,CAAC;QACzD,KAAK,CAAC,CAAC;QACP,KAAK,8BAA8B;YACjC,OAAO,kBAAkB,CAAC,4BAA4B,CAAC;QACzD,KAAK,CAAC,CAAC,CAAC;QACR,KAAK,cAAc,CAAC;QACpB;YACE,OAAO,kBAAkB,CAAC,YAAY,CAAC;KAC1C;AACH,CAAC;AAnBD,QAAA,0BAAA,GAAA,2BAmBC;AAED,SAAgB,wBAAwB,CAAC,MAA0B;IACjE,OAAQ,MAAM,EAAE;QACd,KAAK,kBAAkB,CAAC,gCAAgC;YACtD,OAAO,kCAAkC,CAAC;QAC5C,KAAK,kBAAkB,CAAC,yBAAyB;YAC/C,OAAO,2BAA2B,CAAC;QACrC,KAAK,kBAAkB,CAAC,4BAA4B;YAClD,OAAO,8BAA8B,CAAC;QACxC,KAAK,kBAAkB,CAAC,4BAA4B;YAClD,OAAO,8BAA8B,CAAC;QACxC,KAAK,kBAAkB,CAAC,YAAY,CAAC;QACrC;YACE,OAAO,cAAc,CAAC;KACzB;AACH,CAAC;AAdD,QAAA,wBAAA,GAAA,yBAcC;AAkUD,SAAS,4BAA4B;IACnC,OAAO;QAAE,OAAO,EAAE,EAAE;QAAE,OAAO,EAAE,SAAS;QAAE,MAAM,EAAE,EAAE;IAAA,CAAE,CAAC;AACzD,CAAC;AAEY,QAAA,kBAAkB,GAAG;IAChC,MAAM,EAAC,OAA2B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC1E,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,UAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACpE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,4BAA4B,EAAE,CAAC;QAC/C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,UAAA,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC1D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAA,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;YAC7E,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA2B;QAChC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,GAAG,CAAC,OAAO,GAAG,UAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC/C;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAsC;QAC3C,OAAO,QAAA,kBAAkB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACpD,CAAC;IACD,WAAW,EAAC,MAAuC;;QACjD,MAAM,OAAO,GAAG,4BAA4B,EAAE,CAAC;QAC/C,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,OAAO,GAAG,AAAC,MAAM,CAAC,OAAO,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,EACvE,UAAA,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,GACnC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,oCAAoC;IAC3C,OAAO;QAAE,UAAU,EAAE,EAAE;QAAE,OAAO,EAAE,EAAE;IAAA,CAAE,CAAC;AACzC,CAAC;AAEY,QAAA,0BAA0B,GAAG;IACxC,MAAM,EAAC,OAAmC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAClF,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,oCAAoC,EAAE,CAAC;QACvD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;SACxE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAmC;QACxC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA8C;QACnD,OAAO,QAAA,0BAA0B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC5D,CAAC;IACD,WAAW,EAAC,MAA+C;;QACzD,MAAM,OAAO,GAAG,oCAAoC,EAAE,CAAC;QACvD,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,2BAA2B;IAClC,OAAO;QACL,OAAO,EAAE,EAAE;QACX,mBAAmB,EAAE,EAAE;QACvB,OAAO,EAAE,SAAS;QAClB,oBAAoB,EAAE,EAAE;QACxB,UAAU,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC7B,YAAY,EAAE,SAAS;QACvB,MAAM,EAAE,EAAE;KACX,CAAC;AACJ,CAAC;AAEY,QAAA,iBAAiB,GAAG;IAC/B,MAAM,EAAC,OAA0B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACzE,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,mBAAmB,KAAK,EAAE,EAAE;YACtC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;SACvD;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,UAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACpE;QACD,IAAI,OAAO,CAAC,oBAAoB,KAAK,EAAE,EAAE;YACvC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACnC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC7C;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,2BAA2B,EAAE,CAAC;QAC9C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,mBAAmB,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAC9C,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,UAAA,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC1D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,oBAAoB,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAC/C,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACpC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,mBAAmB,EAAE,KAAK,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,EAAE;YAC3G,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAA,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;YAC7E,oBAAoB,EAAE,KAAK,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,EAAE;YAC9G,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC7F,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA0B;QAC/B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,mBAAmB,KAAK,EAAE,EAAE;YACtC,GAAG,CAAC,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,CAAC;SACvD;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,GAAG,CAAC,OAAO,GAAG,UAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC/C;QACD,IAAI,OAAO,CAAC,oBAAoB,KAAK,EAAE,EAAE;YACvC,GAAG,CAAC,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,CAAC;SACzD;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACnC,GAAG,CAAC,UAAU,GAAG,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SACtD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAqC;QAC1C,OAAO,QAAA,iBAAiB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACnD,CAAC;IACD,WAAW,EAAC,MAAsC;;QAChD,MAAM,OAAO,GAAG,2BAA2B,EAAE,CAAC;QAC9C,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,mBAAmB,GAAG,CAAA,KAAA,MAAM,CAAC,mBAAmB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC/D,OAAO,CAAC,OAAO,GAAG,AAAC,MAAM,CAAC,OAAO,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,EACvE,UAAA,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,GACnC,SAAS,CAAC;QACd,OAAO,CAAC,oBAAoB,GAAG,CAAA,KAAA,MAAM,CAAC,oBAAoB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACjE,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC5D,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,mCAAmC;IAC1C,OAAO;QAAE,OAAO,EAAE,EAAE;QAAE,UAAU,EAAE,EAAE;IAAA,CAAE,CAAC;AACzC,CAAC;AAEY,QAAA,yBAAyB,GAAG;IACvC,MAAM,EAAC,OAAkC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACjF,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,mCAAmC,EAAE,CAAC;QACtD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;SACjF,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAkC;QACvC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA6C;QAClD,OAAO,QAAA,yBAAyB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC3D,CAAC;IACD,WAAW,EAAC,MAA8C;;QACxD,MAAM,OAAO,GAAG,mCAAmC,EAAE,CAAC;QACtD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,2BAA2B;IAClC,OAAO;QACL,OAAO,EAAE,EAAE;QACX,UAAU,EAAE,EAAE;QACd,uBAAuB,EAAE,EAAE;QAC3B,oBAAoB,EAAE,EAAE;QACxB,SAAS,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC5B,YAAY,EAAE,SAAS;QACvB,MAAM,EAAE,EAAE;KACX,CAAC;AACJ,CAAC;AAEY,QAAA,iBAAiB,GAAG;IAC/B,MAAM,EAAC,OAA0B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACzE,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,uBAAuB,KAAK,EAAE,EAAE;YAC1C,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;SAC3D;QACD,IAAI,OAAO,CAAC,oBAAoB,KAAK,EAAE,EAAE;YACvC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC5C;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,2BAA2B,EAAE,CAAC;QAC9C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,uBAAuB,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClD,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,oBAAoB,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAC/C,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACnC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,uBAAuB,EAAE,KAAK,CAAC,MAAM,CAAC,uBAAuB,CAAC,GAC1D,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,GACjD,EAAE;YACN,oBAAoB,EAAE,KAAK,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,EAAE;YAC9G,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC1F,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA0B;QAC/B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,uBAAuB,KAAK,EAAE,EAAE;YAC1C,GAAG,CAAC,uBAAuB,GAAG,OAAO,CAAC,uBAAuB,CAAC;SAC/D;QACD,IAAI,OAAO,CAAC,oBAAoB,KAAK,EAAE,EAAE;YACvC,GAAG,CAAC,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,CAAC;SACzD;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,GAAG,CAAC,SAAS,GAAG,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SACpD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAqC;QAC1C,OAAO,QAAA,iBAAiB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACnD,CAAC;IACD,WAAW,EAAC,MAAsC;;QAChD,MAAM,OAAO,GAAG,2BAA2B,EAAE,CAAC;QAC9C,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,uBAAuB,GAAG,CAAA,KAAA,MAAM,CAAC,uBAAuB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvE,OAAO,CAAC,oBAAoB,GAAG,CAAA,KAAA,MAAM,CAAC,oBAAoB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACjE,OAAO,CAAC,SAAS,GAAG,CAAA,KAAA,MAAM,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC1D,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,mCAAmC;IAC1C,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,yBAAyB,GAAG;IACvC,MAAM,EAAC,CAA4B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC3E,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,mCAAmC,EAAE,CAAC;QACtD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAA4B;QACjC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA6C;QAClD,OAAO,QAAA,yBAAyB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC3D,CAAC;IACD,WAAW,EAAC,CAAyC;QACnD,MAAM,OAAO,GAAG,mCAAmC,EAAE,CAAC;QACtD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,+BAA+B;IACtC,OAAO;QAAE,OAAO,EAAE,EAAE;QAAE,UAAU,EAAE,EAAE;QAAE,SAAS,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAAE,YAAY,EAAE,SAAS;QAAE,MAAM,EAAE,EAAE;IAAA,CAAE,CAAC;AAC5G,CAAC;AAEY,QAAA,qBAAqB,GAAG;IACnC,MAAM,EAAC,OAA8B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC7E,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC5C;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACnC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC1F,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA8B;QACnC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,GAAG,CAAC,SAAS,GAAG,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SACpD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAyC;QAC9C,OAAO,QAAA,qBAAqB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACvD,CAAC;IACD,WAAW,EAAC,MAA0C;;QACpD,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,SAAS,GAAG,CAAA,KAAA,MAAM,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC1D,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,uCAAuC;IAC9C,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,6BAA6B,GAAG;IAC3C,MAAM,EAAC,CAAgC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC/E,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,uCAAuC,EAAE,CAAC;QAC1D,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAAgC;QACrC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAiD;QACtD,OAAO,QAAA,6BAA6B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC/D,CAAC;IACD,WAAW,EAAC,CAA6C;QACvD,MAAM,OAAO,GAAG,uCAAuC,EAAE,CAAC;QAC1D,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,6BAA6B;IACpC,OAAO;QAAE,OAAO,EAAE,EAAE;QAAE,UAAU,EAAE,EAAE;QAAE,MAAM,EAAE,EAAE;IAAA,CAAE,CAAC;AACrD,CAAC;AAEY,QAAA,mBAAmB,GAAG;IACjC,MAAM,EAAC,OAA4B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC3E,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,6BAA6B,EAAE,CAAC;QAChD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA4B;QACjC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAuC;QAC5C,OAAO,QAAA,mBAAmB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACrD,CAAC;IACD,WAAW,EAAC,MAAwC;;QAClD,MAAM,OAAO,GAAG,6BAA6B,EAAE,CAAC;QAChD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,qCAAqC;IAC5C,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,2BAA2B,GAAG;IACzC,MAAM,EAAC,CAA8B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC7E,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,qCAAqC,EAAE,CAAC;QACxD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAA8B;QACnC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA+C;QACpD,OAAO,QAAA,2BAA2B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC7D,CAAC;IACD,WAAW,EAAC,CAA2C;QACrD,MAAM,OAAO,GAAG,qCAAqC,EAAE,CAAC;QACxD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,gCAAgC;IACvC,OAAO;QACL,OAAO,EAAE,EAAE;QACX,UAAU,EAAE,EAAE;QACd,UAAU,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC7B,YAAY,EAAE,SAAS;QACvB,MAAM,EAAE,EAAE;QACV,6BAA6B,EAAE,GAAG;KACnC,CAAC;AACJ,CAAC;AAEY,QAAA,sBAAsB,GAAG;IACpC,MAAM,EAAC,OAA+B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC9E,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACnC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC7C;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,IAAI,OAAO,CAAC,6BAA6B,KAAK,GAAG,EAAE;YACjD,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;SACjE;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,gCAAgC,EAAE,CAAC;QACnD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACpC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,6BAA6B,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBAC9E,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC7F,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;YACpE,6BAA6B,EAAE,KAAK,CAAC,MAAM,CAAC,6BAA6B,CAAC,GACtE,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,6BAA6B,CAAC,GACvD,GAAG;SACR,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA+B;QACpC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACnC,GAAG,CAAC,UAAU,GAAG,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SACtD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,IAAI,OAAO,CAAC,6BAA6B,KAAK,GAAG,EAAE;YACjD,GAAG,CAAC,6BAA6B,GAAG,OAAO,CAAC,6BAA6B,CAAC;SAC3E;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA0C;QAC/C,OAAO,QAAA,sBAAsB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACxD,CAAC;IACD,WAAW,EAAC,MAA2C;;QACrD,MAAM,OAAO,GAAG,gCAAgC,EAAE,CAAC;QACnD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC5D,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,CAAC,6BAA6B,GAAG,CAAA,KAAA,MAAM,CAAC,6BAA6B,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QACpF,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,wCAAwC;IAC/C,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,8BAA8B,GAAG;IAC5C,MAAM,EAAC,CAAiC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAChF,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,wCAAwC,EAAE,CAAC;QAC3D,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAAiC;QACtC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAkD;QACvD,OAAO,QAAA,8BAA8B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAChE,CAAC;IACD,WAAW,EAAC,CAA8C;QACxD,MAAM,OAAO,GAAG,wCAAwC,EAAE,CAAC;QAC3D,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,uBAAuB;IAC9B,OAAO;QAAE,MAAM,EAAE,SAAS;QAAE,gBAAgB,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAAE,YAAY,EAAE,SAAS;QAAE,MAAM,EAAE,EAAE;IAAA,CAAE,CAAC;AACzG,CAAC;AAEY,QAAA,aAAa,GAAG;IAC3B,MAAM,EAAC,OAAsB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACrE,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,UAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAClE;QACD,IAAI,OAAO,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;YACzC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACnD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,uBAAuB,EAAE,CAAC;QAC1C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,UAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACxD,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,gBAAgB,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC1C,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS;YACzE,gBAAgB,EAAE,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC/G,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAsB;QAC3B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,GAAG,CAAC,MAAM,GAAG,UAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC5C;QACD,IAAI,OAAO,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;YACzC,GAAG,CAAC,gBAAgB,GAAG,eAAe,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SAClE;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAiC;QACtC,OAAO,QAAA,aAAa,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC/C,CAAC;IACD,WAAW,EAAC,MAAkC;;QAC5C,MAAM,OAAO,GAAG,uBAAuB,EAAE,CAAC;QAC1C,OAAO,CAAC,MAAM,GAAG,AAAC,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,EACpE,UAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GACjC,SAAS,CAAC;QACd,OAAO,CAAC,gBAAgB,GAAG,CAAA,KAAA,MAAM,CAAC,gBAAgB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACxE,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,+BAA+B;IACtC,OAAO;QAAE,MAAM,EAAE,CAAC;IAAA,CAAE,CAAC;AACvB,CAAC;AAEY,QAAA,qBAAqB,GAAG;IACnC,MAAM,EAAC,OAA8B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC7E,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACxC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACb,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAS,CAAC;oBACvC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YAAE,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAAA,CAAE,CAAC;IAC1F,CAAC;IAED,MAAM,EAAC,OAA8B;QACnC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,GAAG,CAAC,MAAM,GAAG,wBAAwB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACvD;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAyC;QAC9C,OAAO,QAAA,qBAAqB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACvD,CAAC;IACD,WAAW,EAAC,MAA0C;;QACpD,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,oBAAoB;IAC3B,OAAO;QACL,MAAM,EAAE,SAAS;QACjB,gBAAgB,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QACnC,YAAY,EAAE,SAAS;QACvB,kBAAkB,EAAE,GAAG;QACvB,MAAM,EAAE,EAAE;KACX,CAAC;AACJ,CAAC;AAEY,QAAA,UAAU,GAAG;IACxB,MAAM,EAAC,OAAmB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAClE,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,UAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAClE;QACD,IAAI,OAAO,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;YACzC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACnD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,kBAAkB,KAAK,GAAG,EAAE;YACtC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;SACtD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,oBAAoB,EAAE,CAAC;QACvC,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,UAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACxD,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,gBAAgB,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC1C,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,kBAAkB,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBACnE,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS;YACzE,gBAAgB,EAAE,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC/G,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,kBAAkB,EAAE,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG;YACzG,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAmB;QACxB,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,GAAG,CAAC,MAAM,GAAG,UAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC5C;QACD,IAAI,OAAO,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;YACzC,GAAG,CAAC,gBAAgB,GAAG,eAAe,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SAClE;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,kBAAkB,KAAK,GAAG,EAAE;YACtC,GAAG,CAAC,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;SACrD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA8B;QACnC,OAAO,QAAA,UAAU,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC5C,CAAC;IACD,WAAW,EAAC,MAA+B;;QACzC,MAAM,OAAO,GAAG,oBAAoB,EAAE,CAAC;QACvC,OAAO,CAAC,MAAM,GAAG,AAAC,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,EACpE,UAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GACjC,SAAS,CAAC;QACd,OAAO,CAAC,gBAAgB,GAAG,CAAA,KAAA,MAAM,CAAC,gBAAgB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACxE,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,kBAAkB,GAAG,CAAA,KAAA,MAAM,CAAC,kBAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QAC9D,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,4BAA4B;IACnC,OAAO;QAAE,MAAM,EAAE,CAAC;IAAA,CAAE,CAAC;AACvB,CAAC;AAEY,QAAA,kBAAkB,GAAG;IAChC,MAAM,EAAC,OAA2B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC1E,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACxC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,4BAA4B,EAAE,CAAC;QAC/C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACb,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAS,CAAC;oBACvC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YAAE,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAAA,CAAE,CAAC;IAC1F,CAAC;IAED,MAAM,EAAC,OAA2B;QAChC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,GAAG,CAAC,MAAM,GAAG,wBAAwB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACvD;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAsC;QAC3C,OAAO,QAAA,kBAAkB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACpD,CAAC;IACD,WAAW,EAAC,MAAuC;;QACjD,MAAM,OAAO,GAAG,4BAA4B,EAAE,CAAC;QAC/C,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,2BAA2B;IAClC,OAAO;QACL,MAAM,EAAE,SAAS;QACjB,gBAAgB,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QACnC,WAAW,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC9B,YAAY,EAAE,SAAS;QACvB,kBAAkB,EAAE,GAAG;QACvB,MAAM,EAAE,EAAE;QACV,6BAA6B,EAAE,GAAG;KACnC,CAAC;AACJ,CAAC;AAEY,QAAA,iBAAiB,GAAG;IAC/B,MAAM,EAAC,OAA0B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACzE,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,UAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAClE;QACD,IAAI,OAAO,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;YACzC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACnD;QACD,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,kBAAkB,KAAK,GAAG,EAAE;YACtC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;SACtD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,IAAI,OAAO,CAAC,6BAA6B,KAAK,GAAG,EAAE;YACjD,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;SACjE;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,2BAA2B,EAAE,CAAC;QAC9C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,UAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACxD,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,gBAAgB,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC1C,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,kBAAkB,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBACnE,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,6BAA6B,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBAC9E,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS;YACzE,gBAAgB,EAAE,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC/G,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAChG,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,kBAAkB,EAAE,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG;YACzG,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;YACpE,6BAA6B,EAAE,KAAK,CAAC,MAAM,CAAC,6BAA6B,CAAC,GACtE,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,6BAA6B,CAAC,GACvD,GAAG;SACR,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA0B;QAC/B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,GAAG,CAAC,MAAM,GAAG,UAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC5C;QACD,IAAI,OAAO,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;YACzC,GAAG,CAAC,gBAAgB,GAAG,eAAe,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SAClE;QACD,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,GAAG,CAAC,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,kBAAkB,KAAK,GAAG,EAAE;YACtC,GAAG,CAAC,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;SACrD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,IAAI,OAAO,CAAC,6BAA6B,KAAK,GAAG,EAAE;YACjD,GAAG,CAAC,6BAA6B,GAAG,OAAO,CAAC,6BAA6B,CAAC;SAC3E;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAqC;QAC1C,OAAO,QAAA,iBAAiB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACnD,CAAC;IACD,WAAW,EAAC,MAAsC;;QAChD,MAAM,OAAO,GAAG,2BAA2B,EAAE,CAAC;QAC9C,OAAO,CAAC,MAAM,GAAI,AAAD,MAAO,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,EACpE,UAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GACjC,SAAS,CAAC;QACd,OAAO,CAAC,gBAAgB,GAAG,CAAA,KAAA,MAAM,CAAC,gBAAgB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACxE,OAAO,CAAC,WAAW,GAAG,CAAA,KAAA,MAAM,CAAC,WAAW,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC9D,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,kBAAkB,GAAG,CAAA,KAAA,MAAM,CAAC,kBAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QAC9D,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,CAAC,6BAA6B,GAAG,CAAA,KAAA,MAAM,CAAC,6BAA6B,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QACpF,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,mCAAmC;IAC1C,OAAO;QAAE,MAAM,EAAE,CAAC;IAAA,CAAE,CAAC;AACvB,CAAC;AAEY,QAAA,yBAAyB,GAAG;IACvC,MAAM,EAAC,OAAkC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACjF,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACxC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,mCAAmC,EAAE,CAAC;QACtD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACb,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAS,CAAC;oBACvC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YAAE,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAAA,CAAE,CAAC;IAC1F,CAAC;IAED,MAAM,EAAC,OAAkC;QACvC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,GAAG,CAAC,MAAM,GAAG,wBAAwB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACvD;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA6C;QAClD,OAAO,QAAA,yBAAyB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC3D,CAAC;IACD,WAAW,EAAC,MAA8C;;QACxD,MAAM,OAAO,GAAG,mCAAmC,EAAE,CAAC;QACtD,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,4BAA4B;IACnC,OAAO;QACL,MAAM,EAAE,SAAS;QACjB,eAAe,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAClC,WAAW,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC9B,YAAY,EAAE,SAAS;QACvB,MAAM,EAAE,EAAE;KACX,CAAC;AACJ,CAAC;AAEY,QAAA,kBAAkB,GAAG;IAChC,MAAM,EAAC,OAA2B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC1E,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,UAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAClE;QACD,IAAI,OAAO,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SAClD;QACD,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,4BAA4B,EAAE,CAAC;QAC/C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,UAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACxD,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,eAAe,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACzC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS;YACzE,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC5G,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAChG,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA2B;QAChC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,GAAG,CAAC,MAAM,GAAG,UAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC5C;QACD,IAAI,OAAO,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,GAAG,CAAC,eAAe,GAAG,eAAe,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SAChE;QACD,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,GAAG,CAAC,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAsC;QAC3C,OAAO,QAAA,kBAAkB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACpD,CAAC;IACD,WAAW,EAAC,MAAuC;;QACjD,MAAM,OAAO,GAAG,4BAA4B,EAAE,CAAC;QAC/C,OAAO,CAAC,MAAM,GAAI,AAAD,MAAO,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,EACpE,UAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GACjC,SAAS,CAAC;QACd,OAAO,CAAC,eAAe,GAAG,CAAA,KAAA,MAAM,CAAC,eAAe,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACtE,OAAO,CAAC,WAAW,GAAG,CAAA,KAAA,MAAM,CAAC,WAAW,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC9D,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,oCAAoC;IAC3C,OAAO;QAAE,MAAM,EAAE,CAAC;IAAA,CAAE,CAAC;AACvB,CAAC;AAEY,QAAA,0BAA0B,GAAG;IACxC,MAAM,EAAC,OAAmC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAClF,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACxC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,oCAAoC,EAAE,CAAC;QACvD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACb,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAS,CAAC;oBACvC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YAAE,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAAA,CAAE,CAAC;IAC1F,CAAC;IAED,MAAM,EAAC,OAAmC;QACxC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,GAAG,CAAC,MAAM,GAAG,wBAAwB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACvD;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA8C;QACnD,OAAO,QAAA,0BAA0B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC5D,CAAC;IACD,WAAW,EAAC,MAA+C;;QACzD,MAAM,OAAO,GAAG,oCAAoC,EAAE,CAAC;QACvD,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,+BAA+B;IACtC,OAAO;QAAE,OAAO,EAAE,EAAE;QAAE,UAAU,EAAE,EAAE;QAAE,MAAM,EAAE,SAAS;QAAE,MAAM,EAAE,EAAE;IAAA,CAAE,CAAC;AACxE,CAAC;AAEY,QAAA,qBAAqB,GAAG;IACnC,MAAM,EAAC,OAA8B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC7E,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,kBAAA,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACzE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,kBAAA,aAAa,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC/D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,kBAAA,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS;YAChF,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA8B;QACnC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,GAAG,CAAC,MAAM,GAAG,kBAAA,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACnD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAyC;QAC9C,OAAO,QAAA,qBAAqB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACvD,CAAC;IACD,WAAW,EAAC,MAA0C;;QACpD,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,MAAM,GAAG,AAAC,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,EACpE,kBAAA,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GACxC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,uCAAuC;IAC9C,OAAO;QAAE,OAAO,EAAE,SAAS;QAAE,gBAAgB,EAAE,GAAG;IAAA,CAAE,CAAC;AACvD,CAAC;AAEY,QAAA,6BAA6B,GAAG;IAC3C,MAAM,EAAC,OAAsC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACrF,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,kBAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACpE;QACD,IAAI,OAAO,CAAC,gBAAgB,KAAK,GAAG,EAAE;YACpC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACpD;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,uCAAuC,EAAE,CAAC;QAC1D,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,kBAAA,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC1D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,gBAAgB,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBACjE,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAA,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;YAC7E,gBAAgB,EAAE,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG;SACpG,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAsC;QAC3C,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,GAAG,CAAC,OAAO,GAAG,kBAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC/C;QACD,IAAI,OAAO,CAAC,gBAAgB,KAAK,GAAG,EAAE;YACpC,GAAG,CAAC,gBAAgB,GAAG,OAAO,CAAC,gBAAgB,CAAC;SACjD;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAiD;QACtD,OAAO,QAAA,6BAA6B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC/D,CAAC;IACD,WAAW,EAAC,MAAkD;;QAC5D,MAAM,OAAO,GAAG,uCAAuC,EAAE,CAAC;QAC1D,OAAO,CAAC,OAAO,GAAG,AAAC,MAAM,CAAC,OAAO,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,EACvE,kBAAA,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,GACnC,SAAS,CAAC;QACd,OAAO,CAAC,gBAAgB,GAAG,CAAA,KAAA,MAAM,CAAC,gBAAgB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QAC1D,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,8BAA8B;IACrC,OAAO;QACL,OAAO,EAAE,EAAE;QACX,UAAU,EAAE,EAAE;QACd,gCAAgC,EAAE,EAAE;QACpC,2BAA2B,EAAE,SAAS;QACtC,6BAA6B,EAAE,GAAG;QAClC,aAAa,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAChC,aAAa,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAChC,YAAY,EAAE,SAAS;QACvB,MAAM,EAAE,EAAE;KACX,CAAC;AACJ,CAAC;AAEY,QAAA,oBAAoB,GAAG;IAClC,MAAM,EAAC,OAA6B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC5E,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,gCAAgC,CAAE;YACxD,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAE,CAAC,CAAC;SAC9B;QACD,IAAI,OAAO,CAAC,2BAA2B,KAAK,SAAS,EAAE;YACrD,kBAAA,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAC9F;QACD,IAAI,OAAO,CAAC,6BAA6B,KAAK,GAAG,EAAE;YACjD,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;SACjE;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAChD;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAChD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,8BAA8B,EAAE,CAAC;QACjD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,gCAAgC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC/D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,2BAA2B,GAAG,kBAAA,aAAa,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACpF,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,6BAA6B,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBAC9E,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACvC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACvC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,gCAAgC,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,gCAAgC,CAAC,GAChG,MAAM,CAAC,gCAAgC,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,CAAG,CAAD,SAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAC7E,EAAE;YACN,2BAA2B,EAAE,KAAK,CAAC,MAAM,CAAC,2BAA2B,CAAC,GAClE,kBAAA,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,2BAA2B,CAAC,GAC1D,SAAS;YACb,6BAA6B,EAAE,KAAK,CAAC,MAAM,CAAC,6BAA6B,CAAC,GACtE,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,6BAA6B,CAAC,GACvD,GAAG;YACP,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACtG,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACtG,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA6B;;QAClC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,CAAA,KAAA,OAAO,CAAC,gCAAgC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM,EAAE;YACpD,GAAG,CAAC,gCAAgC,GAAG,OAAO,CAAC,gCAAgC,CAAC;SACjF;QACD,IAAI,OAAO,CAAC,2BAA2B,KAAK,SAAS,EAAE;YACrD,GAAG,CAAC,2BAA2B,GAAG,kBAAA,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;SAC7F;QACD,IAAI,OAAO,CAAC,6BAA6B,KAAK,GAAG,EAAE;YACjD,GAAG,CAAC,6BAA6B,GAAG,OAAO,CAAC,6BAA6B,CAAC;SAC3E;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,GAAG,CAAC,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAC5D;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,GAAG,CAAC,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAC5D;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAwC;QAC7C,OAAO,QAAA,oBAAoB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACtD,CAAC;IACD,WAAW,EAAC,MAAyC;;QACnD,MAAM,OAAO,GAAG,8BAA8B,EAAE,CAAC;QACjD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,gCAAgC,GAAG,CAAA,CAAA,KAAA,MAAM,CAAC,gCAAgC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,KAAI,EAAE,CAAC;QACxG,OAAO,CAAC,2BAA2B,GAChC,AAAD,MAAO,CAAC,2BAA2B,KAAK,SAAS,IAAI,MAAM,CAAC,2BAA2B,KAAK,IAAI,CAAC,EAC7F,kBAAA,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,2BAA2B,CAAC,GAC7D,SAAS,CAAC;QAChB,OAAO,CAAC,6BAA6B,GAAG,CAAA,KAAA,MAAM,CAAC,6BAA6B,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QACpF,OAAO,CAAC,aAAa,GAAG,CAAA,KAAA,MAAM,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAClE,OAAO,CAAC,aAAa,GAAG,CAAA,KAAA,MAAM,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAClE,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,sCAAsC;IAC7C,OAAO;QAAE,OAAO,EAAE,SAAS;QAAE,gBAAgB,EAAE,GAAG;QAAE,MAAM,EAAE,CAAC;IAAA,CAAE,CAAC;AAClE,CAAC;AAEY,QAAA,4BAA4B,GAAG;IAC1C,MAAM,EAAC,OAAqC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACpF,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,kBAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACpE;QACD,IAAI,OAAO,CAAC,gBAAgB,KAAK,GAAG,EAAE;YACpC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACpD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACzC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,sCAAsC,EAAE,CAAC;QACzD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,kBAAA,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC1D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,gBAAgB,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBACjE,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAS,CAAC;oBACvC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAA,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;YAC7E,gBAAgB,EAAE,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG;YACnG,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7E,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAqC;QAC1C,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,GAAG,CAAC,OAAO,GAAG,kBAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC/C;QACD,IAAI,OAAO,CAAC,gBAAgB,KAAK,GAAG,EAAE;YACpC,GAAG,CAAC,gBAAgB,GAAG,OAAO,CAAC,gBAAgB,CAAC;SACjD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,GAAG,CAAC,MAAM,GAAG,wBAAwB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACvD;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAgD;QACrD,OAAO,QAAA,4BAA4B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC9D,CAAC;IACD,WAAW,EAAC,MAAiD;;QAC3D,MAAM,OAAO,GAAG,sCAAsC,EAAE,CAAC;QACzD,OAAO,CAAC,OAAO,GAAG,AAAC,MAAM,CAAC,OAAO,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,EACvE,kBAAA,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,GACnC,SAAS,CAAC;QACd,OAAO,CAAC,gBAAgB,GAAG,CAAA,KAAA,MAAM,CAAC,gBAAgB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QAC1D,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,8BAA8B;IACrC,OAAO;QACL,OAAO,EAAE,EAAE;QACX,UAAU,EAAE,EAAE;QACd,oBAAoB,EAAE,SAAS;QAC/B,aAAa,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAChC,aAAa,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAChC,YAAY,EAAE,SAAS;QACvB,MAAM,EAAE,EAAE;KACX,CAAC;AACJ,CAAC;AAEY,QAAA,oBAAoB,GAAG;IAClC,MAAM,EAAC,OAA6B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC5E,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,oBAAoB,KAAK,SAAS,EAAE;YAC9C,kBAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACjF;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAChD;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAChD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,8BAA8B,EAAE,CAAC;QACjD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,oBAAoB,GAAG,kBAAA,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACvE,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACvC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACvC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,oBAAoB,EAAE,KAAK,CAAC,MAAM,CAAC,oBAAoB,CAAC,GACpD,kBAAA,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAC7C,SAAS;YACb,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACtG,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACtG,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA6B;QAClC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,oBAAoB,KAAK,SAAS,EAAE;YAC9C,GAAG,CAAC,oBAAoB,GAAG,kBAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;SACzE;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,GAAG,CAAC,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAC5D;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,GAAG,CAAC,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAC5D;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAwC;QAC7C,OAAO,QAAA,oBAAoB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACtD,CAAC;IACD,WAAW,EAAC,MAAyC;;QACnD,MAAM,OAAO,GAAG,8BAA8B,EAAE,CAAC;QACjD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,oBAAoB,GAAG,AAAC,MAAM,CAAC,oBAAoB,KAAK,SAAS,IAAI,MAAM,CAAC,oBAAoB,KAAK,IAAI,CAAC,EAC9G,kBAAA,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAChD,SAAS,CAAC;QACd,OAAO,CAAC,aAAa,GAAG,CAAA,KAAA,MAAM,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAClE,OAAO,CAAC,aAAa,GAAG,CAAA,KAAA,MAAM,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAClE,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,sCAAsC;IAC7C,OAAO;QAAE,MAAM,EAAE,CAAC;IAAA,CAAE,CAAC;AACvB,CAAC;AAEY,QAAA,4BAA4B,GAAG;IAC1C,MAAM,EAAC,OAAqC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACpF,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACxC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,sCAAsC,EAAE,CAAC;QACzD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACb,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAS,CAAC;oBACvC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YAAE,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAAA,CAAE,CAAC;IAC1F,CAAC;IAED,MAAM,EAAC,OAAqC;QAC1C,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,GAAG,CAAC,MAAM,GAAG,wBAAwB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACvD;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAgD;QACrD,OAAO,QAAA,4BAA4B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC9D,CAAC;IACD,WAAW,EAAC,MAAiD;;QAC3D,MAAM,OAAO,GAAG,sCAAsC,EAAE,CAAC;QACzD,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,kCAAkC;IACzC,OAAO;QACL,OAAO,EAAE,EAAE;QACX,UAAU,EAAE,EAAE;QACd,0BAA0B,EAAE,CAAC;QAC7B,oBAAoB,EAAE,SAAS;QAC/B,aAAa,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAChC,aAAa,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAChC,YAAY,EAAE,SAAS;QACvB,MAAM,EAAE,EAAE;KACX,CAAC;AACJ,CAAC;AAEY,QAAA,wBAAwB,GAAG;IACtC,MAAM,EAAC,OAAiC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAChF,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,0BAA0B,KAAK,CAAC,EAAE;YAC5C,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;SAC7D;QACD,IAAI,OAAO,CAAC,oBAAoB,KAAK,SAAS,EAAE;YAC9C,kBAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACjF;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAChD;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAChD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,kCAAkC,EAAE,CAAC;QACrD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,0BAA0B,GAAG,MAAM,CAAC,KAAK,EAAS,CAAC;oBAC3D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,oBAAoB,GAAG,kBAAA,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACvE,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACvC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACvC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,0BAA0B,EAAE,KAAK,CAAC,MAAM,CAAC,0BAA0B,CAAC,GAChE,CAAA,GAAA,UAAA,aAAa,EAAC,MAAM,CAAC,0BAA0B,CAAC,GAChD,CAAC;YACL,oBAAoB,EAAE,KAAK,CAAC,MAAM,CAAC,oBAAoB,CAAC,GACpD,kBAAA,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAC7C,SAAS;YACb,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACtG,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACtG,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAiC;QACtC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,0BAA0B,KAAK,CAAC,EAAE;YAC5C,GAAG,CAAC,0BAA0B,GAAG,CAAA,GAAA,UAAA,WAAW,EAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;SAClF;QACD,IAAI,OAAO,CAAC,oBAAoB,KAAK,SAAS,EAAE;YAC9C,GAAG,CAAC,oBAAoB,GAAG,kBAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;SACzE;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,GAAG,CAAC,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAC5D;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,GAAG,CAAC,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAC5D;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA4C;QACjD,OAAO,QAAA,wBAAwB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC1D,CAAC;IACD,WAAW,EAAC,MAA6C;;QACvD,MAAM,OAAO,GAAG,kCAAkC,EAAE,CAAC;QACrD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,0BAA0B,GAAG,CAAA,KAAA,MAAM,CAAC,0BAA0B,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QAC5E,OAAO,CAAC,oBAAoB,GAAG,AAAC,MAAM,CAAC,oBAAoB,KAAK,SAAS,IAAI,MAAM,CAAC,oBAAoB,KAAK,IAAI,CAAC,EAC9G,kBAAA,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAChD,SAAS,CAAC;QACd,OAAO,CAAC,aAAa,GAAG,CAAA,KAAA,MAAM,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAClE,OAAO,CAAC,aAAa,GAAG,CAAA,KAAA,MAAM,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAClE,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,0CAA0C;IACjD,OAAO;QAAE,MAAM,EAAE,CAAC;IAAA,CAAE,CAAC;AACvB,CAAC;AAEY,QAAA,gCAAgC,GAAG;IAC9C,MAAM,EAAC,OAAyC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACxF,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACxC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,0CAA0C,EAAE,CAAC;QAC7D,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACb,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAS,CAAC;oBACvC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YAAE,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAAA,CAAE,CAAC;IAC1F,CAAC;IAED,MAAM,EAAC,OAAyC;QAC9C,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,GAAG,CAAC,MAAM,GAAG,wBAAwB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACvD;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAoD;QACzD,OAAO,QAAA,gCAAgC,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAClE,CAAC;IACD,WAAW,EAAC,MAAqD;;QAC/D,MAAM,OAAO,GAAG,0CAA0C,EAAE,CAAC;QAC7D,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,+BAA+B;IACtC,OAAO;QACL,OAAO,EAAE,EAAE;QACX,UAAU,EAAE,EAAE;QACd,0BAA0B,EAAE,CAAC;QAC7B,6BAA6B,EAAE,GAAG;QAClC,aAAa,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAChC,YAAY,EAAE,SAAS;QACvB,MAAM,EAAE,EAAE;KACX,CAAC;AACJ,CAAC;AAEY,QAAA,qBAAqB,GAAG;IACnC,MAAM,EAAC,OAA8B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC7E,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,0BAA0B,KAAK,CAAC,EAAE;YAC5C,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;SAC7D;QACD,IAAI,OAAO,CAAC,6BAA6B,KAAK,GAAG,EAAE;YACjD,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;SACjE;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAChD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,0BAA0B,GAAG,MAAM,CAAC,KAAK,EAAS,CAAC;oBAC3D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,6BAA6B,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBAC9E,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACvC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,0BAA0B,EAAE,KAAK,CAAC,MAAM,CAAC,0BAA0B,CAAC,GAChE,CAAA,GAAA,UAAA,aAAa,EAAC,MAAM,CAAC,0BAA0B,CAAC,GAChD,CAAC;YACL,6BAA6B,EAAE,KAAK,CAAC,MAAM,CAAC,6BAA6B,CAAC,GACtE,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,6BAA6B,CAAC,GACvD,GAAG;YACP,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACtG,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA8B;QACnC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,0BAA0B,KAAK,CAAC,EAAE;YAC5C,GAAG,CAAC,0BAA0B,GAAG,CAAA,GAAA,UAAA,WAAW,EAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;SAClF;QACD,IAAI,OAAO,CAAC,6BAA6B,KAAK,GAAG,EAAE;YACjD,GAAG,CAAC,6BAA6B,GAAG,OAAO,CAAC,6BAA6B,CAAC;SAC3E;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,GAAG,CAAC,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAC5D;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAyC;QAC9C,OAAO,QAAA,qBAAqB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACvD,CAAC;IACD,WAAW,EAAC,MAA0C;;QACpD,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,0BAA0B,GAAG,CAAA,KAAA,MAAM,CAAC,0BAA0B,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QAC5E,OAAO,CAAC,6BAA6B,GAAG,CAAA,KAAA,MAAM,CAAC,6BAA6B,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QACpF,OAAO,CAAC,aAAa,GAAG,CAAA,KAAA,MAAM,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAClE,OAAO,CAAC,YAAY,GAAI,AAAD,MAAO,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,uCAAuC;IAC9C,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,6BAA6B,GAAG;IAC3C,MAAM,EAAC,CAAgC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC/E,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,uCAAuC,EAAE,CAAC;QAC1D,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAAgC;QACrC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAiD;QACtD,OAAO,QAAA,6BAA6B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC/D,CAAC;IACD,WAAW,EAAC,CAA6C;QACvD,MAAM,OAAO,GAAG,uCAAuC,EAAE,CAAC;QAC1D,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,kCAAkC;IACzC,OAAO;QACL,OAAO,EAAE,EAAE;QACX,UAAU,EAAE,EAAE;QACd,oBAAoB,EAAE,SAAS;QAC/B,aAAa,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAChC,YAAY,EAAE,SAAS;QACvB,MAAM,EAAE,EAAE;KACX,CAAC;AACJ,CAAC;AAEY,QAAA,wBAAwB,GAAG;IACtC,MAAM,EAAC,OAAiC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAChF,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,oBAAoB,KAAK,SAAS,EAAE;YAC9C,UAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACjF;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAChD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,kCAAkC,EAAE,CAAC;QACrD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,oBAAoB,GAAG,UAAA,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACvE,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACvC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,oBAAoB,EAAE,KAAK,CAAC,MAAM,CAAC,oBAAoB,CAAC,GACpD,UAAA,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAC7C,SAAS;YACb,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACtG,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAiC;QACtC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,oBAAoB,KAAK,SAAS,EAAE;YAC9C,GAAG,CAAC,oBAAoB,GAAG,UAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;SACzE;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,GAAG,CAAC,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAC5D;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA4C;QACjD,OAAO,QAAA,wBAAwB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC1D,CAAC;IACD,WAAW,EAAC,MAA6C;;QACvD,MAAM,OAAO,GAAG,kCAAkC,EAAE,CAAC;QACrD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,oBAAoB,GAAG,AAAC,MAAM,CAAC,oBAAoB,KAAK,SAAS,IAAI,MAAM,CAAC,oBAAoB,KAAK,IAAI,CAAC,EAC9G,UAAA,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAChD,SAAS,CAAC;QACd,OAAO,CAAC,aAAa,GAAG,CAAA,KAAA,MAAM,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAClE,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,0CAA0C;IACjD,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,gCAAgC,GAAG;IAC9C,MAAM,EAAC,CAAmC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAClF,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,0CAA0C,EAAE,CAAC;QAC7D,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAAmC;QACxC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAoD;QACzD,OAAO,QAAA,gCAAgC,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAClE,CAAC;IACD,WAAW,EAAC,CAAgD;QAC1D,MAAM,OAAO,GAAG,0CAA0C,EAAE,CAAC;QAC7D,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,iCAAiC;IACxC,OAAO;QACL,OAAO,EAAE,EAAE;QACX,UAAU,EAAE,EAAE;QACd,aAAa,EAAE,SAAS;QACxB,mBAAmB,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QACtC,YAAY,EAAE,SAAS;QACvB,MAAM,EAAE,EAAE;KACX,CAAC;AACJ,CAAC;AAEY,QAAA,uBAAuB,GAAG;IACrC,MAAM,EAAC,OAAgC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC/E,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,aAAa,KAAK,SAAS,EAAE;YACvC,kBAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAC/E;QACD,IAAI,OAAO,CAAC,mBAAmB,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5C,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;SACtD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,iCAAiC,EAAE,CAAC;QACpD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,aAAa,GAAG,kBAAA,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACrE,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,mBAAmB,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC7C,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,kBAAA,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS;YACpG,mBAAmB,EAAE,KAAK,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAClD,eAAe,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAC3C,IAAI,UAAU,CAAC,CAAC,CAAC;YACrB,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAgC;QACrC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,aAAa,KAAK,SAAS,EAAE;YACvC,GAAG,CAAC,aAAa,GAAG,kBAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAChE;QACD,IAAI,OAAO,CAAC,mBAAmB,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5C,GAAG,CAAC,mBAAmB,GAAG,eAAe,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA2C;QAChD,OAAO,QAAA,uBAAuB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACzD,CAAC;IACD,WAAW,EAAC,MAA4C;;QACtD,MAAM,OAAO,GAAG,iCAAiC,EAAE,CAAC;QACpD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,aAAa,GAAG,AAAC,MAAM,CAAC,aAAa,KAAK,SAAS,IAAI,MAAM,CAAC,aAAa,KAAK,IAAI,CAAC,EACzF,kBAAA,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,GAC9C,SAAS,CAAC;QACd,OAAO,CAAC,mBAAmB,GAAG,CAAA,KAAA,MAAM,CAAC,mBAAmB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC9E,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,yCAAyC;IAChD,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,+BAA+B,GAAG;IAC7C,MAAM,EAAC,CAAkC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACjF,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,yCAAyC,EAAE,CAAC;QAC5D,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAAkC;QACvC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAmD;QACxD,OAAO,QAAA,+BAA+B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACjE,CAAC;IACD,WAAW,EAAC,CAA+C;QACzD,MAAM,OAAO,GAAG,yCAAyC,EAAE,CAAC;QAC5D,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,yBAAyB;IAChC,OAAO;QAAE,SAAS,EAAE,EAAE;QAAE,MAAM,EAAE,SAAS;IAAA,CAAE,CAAC;AAC9C,CAAC;AAEY,QAAA,eAAe,GAAG;IAC7B,MAAM,EAAC,OAAwB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACvE,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC7C;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,UAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAClE;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,yBAAyB,EAAE,CAAC;QAC5C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACpC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,UAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACxD,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;YAC7E,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS;SAC1E,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAwB;QAC7B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;SACnC;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,GAAG,CAAC,MAAM,GAAG,UAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC5C;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAmC;QACxC,OAAO,QAAA,eAAe,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACjD,CAAC;IACD,WAAW,EAAC,MAAoC;;QAC9C,MAAM,OAAO,GAAG,yBAAyB,EAAE,CAAC;QAC5C,OAAO,CAAC,SAAS,GAAG,CAAA,KAAA,MAAM,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC3C,OAAO,CAAC,MAAM,GAAG,AAAC,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,EACpE,UAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GACjC,SAAS,CAAC;QACd,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,iCAAiC;IACxC,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,uBAAuB,GAAG;IACrC,MAAM,EAAC,CAA0B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACzE,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,iCAAiC,EAAE,CAAC;QACpD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAA0B;QAC/B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA2C;QAChD,OAAO,QAAA,uBAAuB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACzD,CAAC;IACD,WAAW,EAAC,CAAuC;QACjD,MAAM,OAAO,GAAG,iCAAiC,EAAE,CAAC;QACpD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,kCAAkC;IACzC,OAAO;QAAE,OAAO,EAAE,EAAE;QAAE,UAAU,EAAE,EAAE;QAAE,KAAK,EAAE,GAAG;QAAE,MAAM,EAAE,EAAE;IAAA,CAAE,CAAC;AACjE,CAAC;AAEY,QAAA,wBAAwB,GAAG;IACtC,MAAM,EAAC,OAAiC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAChF,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,KAAK,KAAK,GAAG,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACzC;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,kCAAkC,EAAE,CAAC;QACrD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBACtD,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG;YAClE,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAiC;QACtC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,OAAO,CAAC,KAAK,KAAK,GAAG,EAAE;YACzB,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;SAC3B;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA4C;QACjD,OAAO,QAAA,wBAAwB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC1D,CAAC;IACD,WAAW,EAAC,MAA6C;;QACvD,MAAM,OAAO,GAAG,kCAAkC,EAAE,CAAC;QACrD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,KAAK,GAAG,CAAA,KAAA,MAAM,CAAC,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QACpC,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,0CAA0C;IACjD,OAAO;QAAE,sBAAsB,EAAE,GAAG;QAAE,yBAAyB,EAAE,GAAG;IAAA,CAAE,CAAC;AACzE,CAAC;AAEY,QAAA,gCAAgC,GAAG;IAC9C,MAAM,EAAC,OAAyC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACxF,IAAI,OAAO,CAAC,sBAAsB,KAAK,GAAG,EAAE;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;SACzD;QACD,IAAI,OAAO,CAAC,yBAAyB,KAAK,GAAG,EAAE;YAC7C,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;SAC7D;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,0CAA0C,EAAE,CAAC;QAC7D,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACb,MAAM;qBACP;oBAED,OAAO,CAAC,sBAAsB,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBACvE,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,yBAAyB,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBAC1E,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,sBAAsB,EAAE,KAAK,CAAC,MAAM,CAAC,sBAAsB,CAAC,GACxD,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAChD,GAAG;YACP,yBAAyB,EAAE,KAAK,CAAC,MAAM,CAAC,yBAAyB,CAAC,GAC9D,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,yBAAyB,CAAC,GACnD,GAAG;SACR,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAyC;QAC9C,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,sBAAsB,KAAK,GAAG,EAAE;YAC1C,GAAG,CAAC,sBAAsB,GAAG,OAAO,CAAC,sBAAsB,CAAC;SAC7D;QACD,IAAI,OAAO,CAAC,yBAAyB,KAAK,GAAG,EAAE;YAC7C,GAAG,CAAC,yBAAyB,GAAG,OAAO,CAAC,yBAAyB,CAAC;SACnE;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAoD;QACzD,OAAO,QAAA,gCAAgC,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAClE,CAAC;IACD,WAAW,EAAC,MAAqD;;QAC/D,MAAM,OAAO,GAAG,0CAA0C,EAAE,CAAC;QAC7D,OAAO,CAAC,sBAAsB,GAAG,CAAA,KAAA,MAAM,CAAC,sBAAsB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QACtE,OAAO,CAAC,yBAAyB,GAAG,CAAA,KAAA,MAAM,CAAC,yBAAyB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QAC5E,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AA+CW,QAAA,cAAc,GAAG,yBAAyB,CAAC;AACxD,MAAa,aAAa;IAGxB,YAAY,GAAQ,EAAE,IAA2B,CAAA;QAC/C,IAAI,CAAC,OAAO,GAAG,CAAA,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAA,KAAA,IAAJ,IAAI,CAAE,OAAO,KAAI,QAAA,cAAc,CAAC;QAC/C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrE,CAAC;IACD,eAAe,CAAC,OAA2B,EAAA;QACzC,MAAM,IAAI,GAAG,QAAA,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACzD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACxE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,0BAA0B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5F,CAAC;IAED,cAAc,CAAC,OAA0B,EAAA;QACvC,MAAM,IAAI,GAAG,QAAA,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACxD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACvE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,yBAAyB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3F,CAAC;IAED,cAAc,CAAC,OAA0B,EAAA;QACvC,MAAM,IAAI,GAAG,QAAA,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACxD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACvE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,yBAAyB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3F,CAAC;IAED,kBAAkB,CAAC,OAA8B,EAAA;QAC/C,MAAM,IAAI,GAAG,QAAA,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC5D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,oBAAoB,EAAE,IAAI,CAAC,CAAC;QAC3E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,6BAA6B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/F,CAAC;IAED,gBAAgB,CAAC,OAA4B,EAAA;QAC3C,MAAM,IAAI,GAAG,QAAA,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC1D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;QACzE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,2BAA2B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7F,CAAC;IAED,mBAAmB,CAAC,OAA+B,EAAA;QACjD,MAAM,IAAI,GAAG,QAAA,sBAAsB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC7D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,qBAAqB,EAAE,IAAI,CAAC,CAAC;QAC5E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,8BAA8B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,UAAU,CAAC,OAAsB,EAAA;QAC/B,MAAM,IAAI,GAAG,QAAA,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACpD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QACnE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,qBAAqB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,OAAO,CAAC,OAAmB,EAAA;QACzB,MAAM,IAAI,GAAG,QAAA,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACjD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAChE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC;IAED,cAAc,CAAC,OAA0B,EAAA;QACvC,MAAM,IAAI,GAAG,QAAA,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACxD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACvE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,yBAAyB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3F,CAAC;IAED,eAAe,CAAC,OAA2B,EAAA;QACzC,MAAM,IAAI,GAAG,QAAA,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACzD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACxE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,0BAA0B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5F,CAAC;IAED,kBAAkB,CAAC,OAA8B,EAAA;QAC/C,MAAM,IAAI,GAAG,QAAA,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC5D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,oBAAoB,EAAE,IAAI,CAAC,CAAC;QAC3E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,6BAA6B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/F,CAAC;IAED,iBAAiB,CAAC,OAA6B,EAAA;QAC7C,MAAM,IAAI,GAAG,QAAA,oBAAoB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC3D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAC1E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,4BAA4B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9F,CAAC;IAED,iBAAiB,CAAC,OAA6B,EAAA;QAC7C,MAAM,IAAI,GAAG,QAAA,oBAAoB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC3D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAC1E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,4BAA4B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9F,CAAC;IAED,qBAAqB,CAAC,OAAiC,EAAA;QACrD,MAAM,IAAI,GAAG,QAAA,wBAAwB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,uBAAuB,EAAE,IAAI,CAAC,CAAC;QAC9E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,gCAAgC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClG,CAAC;IAED,kBAAkB,CAAC,OAA8B,EAAA;QAC/C,MAAM,IAAI,GAAG,QAAA,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC5D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,oBAAoB,EAAE,IAAI,CAAC,CAAC;QAC3E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,6BAA6B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/F,CAAC;IAED,qBAAqB,CAAC,OAAiC,EAAA;QACrD,MAAM,IAAI,GAAG,QAAA,wBAAwB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,uBAAuB,EAAE,IAAI,CAAC,CAAC;QAC9E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,gCAAgC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClG,CAAC;IAED,oBAAoB,CAAC,OAAgC,EAAA;QACnD,MAAM,IAAI,GAAG,QAAA,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC9D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,sBAAsB,EAAE,IAAI,CAAC,CAAC;QAC7E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,+BAA+B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjG,CAAC;IAED,mBAAmB,CAAC,OAAwB,EAAA;QAC1C,MAAM,IAAI,GAAG,QAAA,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACtD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,qBAAqB,EAAE,IAAI,CAAC,CAAC;QAC5E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,uBAAuB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzF,CAAC;IAED,qBAAqB,CAAC,OAAiC,EAAA;QACrD,MAAM,IAAI,GAAG,QAAA,wBAAwB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,uBAAuB,EAAE,IAAI,CAAC,CAAC;QAC9E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,gCAAgC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClG,CAAC;CACF;AA3ID,QAAA,aAAA,GAAA,cA2IC;AAMD,SAAS,eAAe,CAAC,GAAW;IAClC,IAAK,UAAkB,CAAC,MAAM,EAAE;QAC9B,OAAO,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;KAC/D,MAAM;QACL,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE;YACnC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC5B;QACD,OAAO,GAAG,CAAC;KACZ;AACH,CAAC;AAED,SAAS,eAAe,CAAC,GAAe;IACtC,IAAK,UAAkB,CAAC,MAAM,EAAE;QAC9B,OAAO,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACvD,MAAM;QACL,MAAM,GAAG,GAAa,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACnB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;KACtC;AACH,CAAC;AAUD,SAAS,YAAY,CAAC,IAAU;IAC9B,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;AACzB,CAAC;AAED,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,OAAA,OAAI,EAAE;IAC1B,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,OAAA,OAAW,CAAC;IAC5B,GAAG,CAAC,SAAS,EAAE,CAAC;CACjB;AAED,SAAS,KAAK,CAAC,KAAU;IACvB,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AAC/C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 8027, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8032, "column": 0}, "map": {"version":3,"file":"tx.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/core/client/v1/tx.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/core/client/v1/tx.proto\n\n/* eslint-disable */\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Plan } from \"../../../../cosmos/upgrade/v1beta1/upgrade\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Params } from \"./client\";\n\nexport const protobufPackage = \"ibc.core.client.v1\";\n\n/** MsgCreateClient defines a message to create an IBC client */\nexport interface MsgCreateClient {\n  /** light client state */\n  client_state?:\n    | Any\n    | undefined;\n  /**\n   * consensus state associated with the client that corresponds to a given\n   * height.\n   */\n  consensus_state?:\n    | Any\n    | undefined;\n  /** signer address */\n  signer: string;\n}\n\n/** MsgCreateClientResponse defines the Msg/CreateClient response type. */\nexport interface MsgCreateClientResponse {\n}\n\n/**\n * MsgUpdateClient defines an sdk.Msg to update a IBC client state using\n * the given client message.\n */\nexport interface MsgUpdateClient {\n  /** client unique identifier */\n  client_id: string;\n  /** client message to update the light client */\n  client_message?:\n    | Any\n    | undefined;\n  /** signer address */\n  signer: string;\n}\n\n/** MsgUpdateClientResponse defines the Msg/UpdateClient response type. */\nexport interface MsgUpdateClientResponse {\n}\n\n/**\n * MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client\n * state\n */\nexport interface MsgUpgradeClient {\n  /** client unique identifier */\n  client_id: string;\n  /** upgraded client state */\n  client_state?:\n    | Any\n    | undefined;\n  /**\n   * upgraded consensus state, only contains enough information to serve as a\n   * basis of trust in update logic\n   */\n  consensus_state?:\n    | Any\n    | undefined;\n  /** proof that old chain committed to new client */\n  proof_upgrade_client: Uint8Array;\n  /** proof that old chain committed to new consensus state */\n  proof_upgrade_consensus_state: Uint8Array;\n  /** signer address */\n  signer: string;\n}\n\n/** MsgUpgradeClientResponse defines the Msg/UpgradeClient response type. */\nexport interface MsgUpgradeClientResponse {\n}\n\n/**\n * MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for\n * light client misbehaviour.\n * This message has been deprecated. Use MsgUpdateClient instead.\n *\n * @deprecated\n */\nexport interface MsgSubmitMisbehaviour {\n  /** client unique identifier */\n  client_id: string;\n  /** misbehaviour used for freezing the light client */\n  misbehaviour?:\n    | Any\n    | undefined;\n  /** signer address */\n  signer: string;\n}\n\n/**\n * MsgSubmitMisbehaviourResponse defines the Msg/SubmitMisbehaviour response\n * type.\n */\nexport interface MsgSubmitMisbehaviourResponse {\n}\n\n/** MsgRecoverClient defines the message used to recover a frozen or expired client. */\nexport interface MsgRecoverClient {\n  /** the client identifier for the client to be updated if the proposal passes */\n  subject_client_id: string;\n  /**\n   * the substitute client identifier for the client which will replace the subject\n   * client\n   */\n  substitute_client_id: string;\n  /** signer address */\n  signer: string;\n}\n\n/** MsgRecoverClientResponse defines the Msg/RecoverClient response type. */\nexport interface MsgRecoverClientResponse {\n}\n\n/** MsgIBCSoftwareUpgrade defines the message used to schedule an upgrade of an IBC client using a v1 governance proposal */\nexport interface MsgIBCSoftwareUpgrade {\n  plan?:\n    | Plan\n    | undefined;\n  /**\n   * An UpgradedClientState must be provided to perform an IBC breaking upgrade.\n   * This will make the chain commit to the correct upgraded (self) client state\n   * before the upgrade occurs, so that connecting chains can verify that the\n   * new upgraded client is valid by verifying a proof on the previous version\n   * of the chain. This will allow IBC connections to persist smoothly across\n   * planned chain upgrades. Correspondingly, the UpgradedClientState field has been\n   * deprecated in the Cosmos SDK to allow for this logic to exist solely in\n   * the 02-client module.\n   */\n  upgraded_client_state?:\n    | Any\n    | undefined;\n  /** signer address */\n  signer: string;\n}\n\n/** MsgIBCSoftwareUpgradeResponse defines the Msg/IBCSoftwareUpgrade response type. */\nexport interface MsgIBCSoftwareUpgradeResponse {\n}\n\n/** MsgUpdateParams defines the sdk.Msg type to update the client parameters. */\nexport interface MsgUpdateParams {\n  /** signer address */\n  signer: string;\n  /**\n   * params defines the client parameters to update.\n   *\n   * NOTE: All parameters must be supplied.\n   */\n  params?: Params | undefined;\n}\n\n/** MsgUpdateParamsResponse defines the MsgUpdateParams response type. */\nexport interface MsgUpdateParamsResponse {\n}\n\nfunction createBaseMsgCreateClient(): MsgCreateClient {\n  return { client_state: undefined, consensus_state: undefined, signer: \"\" };\n}\n\nexport const MsgCreateClient = {\n  encode(message: MsgCreateClient, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.client_state !== undefined) {\n      Any.encode(message.client_state, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.consensus_state !== undefined) {\n      Any.encode(message.consensus_state, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreateClient {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreateClient();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.client_state = Any.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.consensus_state = Any.decode(reader, reader.uint32());\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgCreateClient {\n    return {\n      client_state: isSet(object.client_state) ? Any.fromJSON(object.client_state) : undefined,\n      consensus_state: isSet(object.consensus_state) ? Any.fromJSON(object.consensus_state) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgCreateClient): unknown {\n    const obj: any = {};\n    if (message.client_state !== undefined) {\n      obj.client_state = Any.toJSON(message.client_state);\n    }\n    if (message.consensus_state !== undefined) {\n      obj.consensus_state = Any.toJSON(message.consensus_state);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgCreateClient>): MsgCreateClient {\n    return MsgCreateClient.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgCreateClient>): MsgCreateClient {\n    const message = createBaseMsgCreateClient();\n    message.client_state = (object.client_state !== undefined && object.client_state !== null)\n      ? Any.fromPartial(object.client_state)\n      : undefined;\n    message.consensus_state = (object.consensus_state !== undefined && object.consensus_state !== null)\n      ? Any.fromPartial(object.consensus_state)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgCreateClientResponse(): MsgCreateClientResponse {\n  return {};\n}\n\nexport const MsgCreateClientResponse = {\n  encode(_: MsgCreateClientResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreateClientResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreateClientResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgCreateClientResponse {\n    return {};\n  },\n\n  toJSON(_: MsgCreateClientResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgCreateClientResponse>): MsgCreateClientResponse {\n    return MsgCreateClientResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgCreateClientResponse>): MsgCreateClientResponse {\n    const message = createBaseMsgCreateClientResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateClient(): MsgUpdateClient {\n  return { client_id: \"\", client_message: undefined, signer: \"\" };\n}\n\nexport const MsgUpdateClient = {\n  encode(message: MsgUpdateClient, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.client_id !== \"\") {\n      writer.uint32(10).string(message.client_id);\n    }\n    if (message.client_message !== undefined) {\n      Any.encode(message.client_message, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateClient {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateClient();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.client_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.client_message = Any.decode(reader, reader.uint32());\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateClient {\n    return {\n      client_id: isSet(object.client_id) ? globalThis.String(object.client_id) : \"\",\n      client_message: isSet(object.client_message) ? Any.fromJSON(object.client_message) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgUpdateClient): unknown {\n    const obj: any = {};\n    if (message.client_id !== \"\") {\n      obj.client_id = message.client_id;\n    }\n    if (message.client_message !== undefined) {\n      obj.client_message = Any.toJSON(message.client_message);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateClient>): MsgUpdateClient {\n    return MsgUpdateClient.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgUpdateClient>): MsgUpdateClient {\n    const message = createBaseMsgUpdateClient();\n    message.client_id = object.client_id ?? \"\";\n    message.client_message = (object.client_message !== undefined && object.client_message !== null)\n      ? Any.fromPartial(object.client_message)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateClientResponse(): MsgUpdateClientResponse {\n  return {};\n}\n\nexport const MsgUpdateClientResponse = {\n  encode(_: MsgUpdateClientResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateClientResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateClientResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateClientResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateClientResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateClientResponse>): MsgUpdateClientResponse {\n    return MsgUpdateClientResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgUpdateClientResponse>): MsgUpdateClientResponse {\n    const message = createBaseMsgUpdateClientResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUpgradeClient(): MsgUpgradeClient {\n  return {\n    client_id: \"\",\n    client_state: undefined,\n    consensus_state: undefined,\n    proof_upgrade_client: new Uint8Array(0),\n    proof_upgrade_consensus_state: new Uint8Array(0),\n    signer: \"\",\n  };\n}\n\nexport const MsgUpgradeClient = {\n  encode(message: MsgUpgradeClient, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.client_id !== \"\") {\n      writer.uint32(10).string(message.client_id);\n    }\n    if (message.client_state !== undefined) {\n      Any.encode(message.client_state, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.consensus_state !== undefined) {\n      Any.encode(message.consensus_state, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.proof_upgrade_client.length !== 0) {\n      writer.uint32(34).bytes(message.proof_upgrade_client);\n    }\n    if (message.proof_upgrade_consensus_state.length !== 0) {\n      writer.uint32(42).bytes(message.proof_upgrade_consensus_state);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(50).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpgradeClient {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpgradeClient();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.client_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.client_state = Any.decode(reader, reader.uint32());\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.consensus_state = Any.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.proof_upgrade_client = reader.bytes();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.proof_upgrade_consensus_state = reader.bytes();\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpgradeClient {\n    return {\n      client_id: isSet(object.client_id) ? globalThis.String(object.client_id) : \"\",\n      client_state: isSet(object.client_state) ? Any.fromJSON(object.client_state) : undefined,\n      consensus_state: isSet(object.consensus_state) ? Any.fromJSON(object.consensus_state) : undefined,\n      proof_upgrade_client: isSet(object.proof_upgrade_client)\n        ? bytesFromBase64(object.proof_upgrade_client)\n        : new Uint8Array(0),\n      proof_upgrade_consensus_state: isSet(object.proof_upgrade_consensus_state)\n        ? bytesFromBase64(object.proof_upgrade_consensus_state)\n        : new Uint8Array(0),\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgUpgradeClient): unknown {\n    const obj: any = {};\n    if (message.client_id !== \"\") {\n      obj.client_id = message.client_id;\n    }\n    if (message.client_state !== undefined) {\n      obj.client_state = Any.toJSON(message.client_state);\n    }\n    if (message.consensus_state !== undefined) {\n      obj.consensus_state = Any.toJSON(message.consensus_state);\n    }\n    if (message.proof_upgrade_client.length !== 0) {\n      obj.proof_upgrade_client = base64FromBytes(message.proof_upgrade_client);\n    }\n    if (message.proof_upgrade_consensus_state.length !== 0) {\n      obj.proof_upgrade_consensus_state = base64FromBytes(message.proof_upgrade_consensus_state);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpgradeClient>): MsgUpgradeClient {\n    return MsgUpgradeClient.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgUpgradeClient>): MsgUpgradeClient {\n    const message = createBaseMsgUpgradeClient();\n    message.client_id = object.client_id ?? \"\";\n    message.client_state = (object.client_state !== undefined && object.client_state !== null)\n      ? Any.fromPartial(object.client_state)\n      : undefined;\n    message.consensus_state = (object.consensus_state !== undefined && object.consensus_state !== null)\n      ? Any.fromPartial(object.consensus_state)\n      : undefined;\n    message.proof_upgrade_client = object.proof_upgrade_client ?? new Uint8Array(0);\n    message.proof_upgrade_consensus_state = object.proof_upgrade_consensus_state ?? new Uint8Array(0);\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgUpgradeClientResponse(): MsgUpgradeClientResponse {\n  return {};\n}\n\nexport const MsgUpgradeClientResponse = {\n  encode(_: MsgUpgradeClientResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpgradeClientResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpgradeClientResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpgradeClientResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpgradeClientResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpgradeClientResponse>): MsgUpgradeClientResponse {\n    return MsgUpgradeClientResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgUpgradeClientResponse>): MsgUpgradeClientResponse {\n    const message = createBaseMsgUpgradeClientResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgSubmitMisbehaviour(): MsgSubmitMisbehaviour {\n  return { client_id: \"\", misbehaviour: undefined, signer: \"\" };\n}\n\nexport const MsgSubmitMisbehaviour = {\n  encode(message: MsgSubmitMisbehaviour, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.client_id !== \"\") {\n      writer.uint32(10).string(message.client_id);\n    }\n    if (message.misbehaviour !== undefined) {\n      Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSubmitMisbehaviour {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSubmitMisbehaviour();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.client_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.misbehaviour = Any.decode(reader, reader.uint32());\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgSubmitMisbehaviour {\n    return {\n      client_id: isSet(object.client_id) ? globalThis.String(object.client_id) : \"\",\n      misbehaviour: isSet(object.misbehaviour) ? Any.fromJSON(object.misbehaviour) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgSubmitMisbehaviour): unknown {\n    const obj: any = {};\n    if (message.client_id !== \"\") {\n      obj.client_id = message.client_id;\n    }\n    if (message.misbehaviour !== undefined) {\n      obj.misbehaviour = Any.toJSON(message.misbehaviour);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgSubmitMisbehaviour>): MsgSubmitMisbehaviour {\n    return MsgSubmitMisbehaviour.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgSubmitMisbehaviour>): MsgSubmitMisbehaviour {\n    const message = createBaseMsgSubmitMisbehaviour();\n    message.client_id = object.client_id ?? \"\";\n    message.misbehaviour = (object.misbehaviour !== undefined && object.misbehaviour !== null)\n      ? Any.fromPartial(object.misbehaviour)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgSubmitMisbehaviourResponse(): MsgSubmitMisbehaviourResponse {\n  return {};\n}\n\nexport const MsgSubmitMisbehaviourResponse = {\n  encode(_: MsgSubmitMisbehaviourResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSubmitMisbehaviourResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSubmitMisbehaviourResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgSubmitMisbehaviourResponse {\n    return {};\n  },\n\n  toJSON(_: MsgSubmitMisbehaviourResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgSubmitMisbehaviourResponse>): MsgSubmitMisbehaviourResponse {\n    return MsgSubmitMisbehaviourResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgSubmitMisbehaviourResponse>): MsgSubmitMisbehaviourResponse {\n    const message = createBaseMsgSubmitMisbehaviourResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgRecoverClient(): MsgRecoverClient {\n  return { subject_client_id: \"\", substitute_client_id: \"\", signer: \"\" };\n}\n\nexport const MsgRecoverClient = {\n  encode(message: MsgRecoverClient, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.subject_client_id !== \"\") {\n      writer.uint32(10).string(message.subject_client_id);\n    }\n    if (message.substitute_client_id !== \"\") {\n      writer.uint32(18).string(message.substitute_client_id);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRecoverClient {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgRecoverClient();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.subject_client_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.substitute_client_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgRecoverClient {\n    return {\n      subject_client_id: isSet(object.subject_client_id) ? globalThis.String(object.subject_client_id) : \"\",\n      substitute_client_id: isSet(object.substitute_client_id) ? globalThis.String(object.substitute_client_id) : \"\",\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgRecoverClient): unknown {\n    const obj: any = {};\n    if (message.subject_client_id !== \"\") {\n      obj.subject_client_id = message.subject_client_id;\n    }\n    if (message.substitute_client_id !== \"\") {\n      obj.substitute_client_id = message.substitute_client_id;\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgRecoverClient>): MsgRecoverClient {\n    return MsgRecoverClient.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgRecoverClient>): MsgRecoverClient {\n    const message = createBaseMsgRecoverClient();\n    message.subject_client_id = object.subject_client_id ?? \"\";\n    message.substitute_client_id = object.substitute_client_id ?? \"\";\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgRecoverClientResponse(): MsgRecoverClientResponse {\n  return {};\n}\n\nexport const MsgRecoverClientResponse = {\n  encode(_: MsgRecoverClientResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRecoverClientResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgRecoverClientResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgRecoverClientResponse {\n    return {};\n  },\n\n  toJSON(_: MsgRecoverClientResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgRecoverClientResponse>): MsgRecoverClientResponse {\n    return MsgRecoverClientResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgRecoverClientResponse>): MsgRecoverClientResponse {\n    const message = createBaseMsgRecoverClientResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgIBCSoftwareUpgrade(): MsgIBCSoftwareUpgrade {\n  return { plan: undefined, upgraded_client_state: undefined, signer: \"\" };\n}\n\nexport const MsgIBCSoftwareUpgrade = {\n  encode(message: MsgIBCSoftwareUpgrade, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.plan !== undefined) {\n      Plan.encode(message.plan, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.upgraded_client_state !== undefined) {\n      Any.encode(message.upgraded_client_state, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgIBCSoftwareUpgrade {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgIBCSoftwareUpgrade();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.plan = Plan.decode(reader, reader.uint32());\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.upgraded_client_state = Any.decode(reader, reader.uint32());\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgIBCSoftwareUpgrade {\n    return {\n      plan: isSet(object.plan) ? Plan.fromJSON(object.plan) : undefined,\n      upgraded_client_state: isSet(object.upgraded_client_state)\n        ? Any.fromJSON(object.upgraded_client_state)\n        : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgIBCSoftwareUpgrade): unknown {\n    const obj: any = {};\n    if (message.plan !== undefined) {\n      obj.plan = Plan.toJSON(message.plan);\n    }\n    if (message.upgraded_client_state !== undefined) {\n      obj.upgraded_client_state = Any.toJSON(message.upgraded_client_state);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgIBCSoftwareUpgrade>): MsgIBCSoftwareUpgrade {\n    return MsgIBCSoftwareUpgrade.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgIBCSoftwareUpgrade>): MsgIBCSoftwareUpgrade {\n    const message = createBaseMsgIBCSoftwareUpgrade();\n    message.plan = (object.plan !== undefined && object.plan !== null) ? Plan.fromPartial(object.plan) : undefined;\n    message.upgraded_client_state =\n      (object.upgraded_client_state !== undefined && object.upgraded_client_state !== null)\n        ? Any.fromPartial(object.upgraded_client_state)\n        : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgIBCSoftwareUpgradeResponse(): MsgIBCSoftwareUpgradeResponse {\n  return {};\n}\n\nexport const MsgIBCSoftwareUpgradeResponse = {\n  encode(_: MsgIBCSoftwareUpgradeResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgIBCSoftwareUpgradeResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgIBCSoftwareUpgradeResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgIBCSoftwareUpgradeResponse {\n    return {};\n  },\n\n  toJSON(_: MsgIBCSoftwareUpgradeResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgIBCSoftwareUpgradeResponse>): MsgIBCSoftwareUpgradeResponse {\n    return MsgIBCSoftwareUpgradeResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgIBCSoftwareUpgradeResponse>): MsgIBCSoftwareUpgradeResponse {\n    const message = createBaseMsgIBCSoftwareUpgradeResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateParams(): MsgUpdateParams {\n  return { signer: \"\", params: undefined };\n}\n\nexport const MsgUpdateParams = {\n  encode(message: MsgUpdateParams, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.signer !== \"\") {\n      writer.uint32(10).string(message.signer);\n    }\n    if (message.params !== undefined) {\n      Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParams {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.params = Params.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateParams {\n    return {\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n      params: isSet(object.params) ? Params.fromJSON(object.params) : undefined,\n    };\n  },\n\n  toJSON(message: MsgUpdateParams): unknown {\n    const obj: any = {};\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    if (message.params !== undefined) {\n      obj.params = Params.toJSON(message.params);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateParams>): MsgUpdateParams {\n    return MsgUpdateParams.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgUpdateParams>): MsgUpdateParams {\n    const message = createBaseMsgUpdateParams();\n    message.signer = object.signer ?? \"\";\n    message.params = (object.params !== undefined && object.params !== null)\n      ? Params.fromPartial(object.params)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateParamsResponse(): MsgUpdateParamsResponse {\n  return {};\n}\n\nexport const MsgUpdateParamsResponse = {\n  encode(_: MsgUpdateParamsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParamsResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParamsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateParamsResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateParamsResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse {\n    return MsgUpdateParamsResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse {\n    const message = createBaseMsgUpdateParamsResponse();\n    return message;\n  },\n};\n\n/** Msg defines the ibc/client Msg service. */\nexport interface Msg {\n  /** CreateClient defines a rpc handler method for MsgCreateClient. */\n  CreateClient(request: MsgCreateClient): Promise<MsgCreateClientResponse>;\n  /** UpdateClient defines a rpc handler method for MsgUpdateClient. */\n  UpdateClient(request: MsgUpdateClient): Promise<MsgUpdateClientResponse>;\n  /** UpgradeClient defines a rpc handler method for MsgUpgradeClient. */\n  UpgradeClient(request: MsgUpgradeClient): Promise<MsgUpgradeClientResponse>;\n  /** SubmitMisbehaviour defines a rpc handler method for MsgSubmitMisbehaviour. */\n  SubmitMisbehaviour(request: MsgSubmitMisbehaviour): Promise<MsgSubmitMisbehaviourResponse>;\n  /** RecoverClient defines a rpc handler method for MsgRecoverClient. */\n  RecoverClient(request: MsgRecoverClient): Promise<MsgRecoverClientResponse>;\n  /** IBCSoftwareUpgrade defines a rpc handler method for MsgIBCSoftwareUpgrade. */\n  IBCSoftwareUpgrade(request: MsgIBCSoftwareUpgrade): Promise<MsgIBCSoftwareUpgradeResponse>;\n  /** UpdateClientParams defines a rpc handler method for MsgUpdateParams. */\n  UpdateClientParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse>;\n}\n\nexport const MsgServiceName = \"ibc.core.client.v1.Msg\";\nexport class MsgClientImpl implements Msg {\n  private readonly rpc: Rpc;\n  private readonly service: string;\n  constructor(rpc: Rpc, opts?: { service?: string }) {\n    this.service = opts?.service || MsgServiceName;\n    this.rpc = rpc;\n    this.CreateClient = this.CreateClient.bind(this);\n    this.UpdateClient = this.UpdateClient.bind(this);\n    this.UpgradeClient = this.UpgradeClient.bind(this);\n    this.SubmitMisbehaviour = this.SubmitMisbehaviour.bind(this);\n    this.RecoverClient = this.RecoverClient.bind(this);\n    this.IBCSoftwareUpgrade = this.IBCSoftwareUpgrade.bind(this);\n    this.UpdateClientParams = this.UpdateClientParams.bind(this);\n  }\n  CreateClient(request: MsgCreateClient): Promise<MsgCreateClientResponse> {\n    const data = MsgCreateClient.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"CreateClient\", data);\n    return promise.then((data) => MsgCreateClientResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateClient(request: MsgUpdateClient): Promise<MsgUpdateClientResponse> {\n    const data = MsgUpdateClient.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateClient\", data);\n    return promise.then((data) => MsgUpdateClientResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpgradeClient(request: MsgUpgradeClient): Promise<MsgUpgradeClientResponse> {\n    const data = MsgUpgradeClient.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpgradeClient\", data);\n    return promise.then((data) => MsgUpgradeClientResponse.decode(_m0.Reader.create(data)));\n  }\n\n  SubmitMisbehaviour(request: MsgSubmitMisbehaviour): Promise<MsgSubmitMisbehaviourResponse> {\n    const data = MsgSubmitMisbehaviour.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"SubmitMisbehaviour\", data);\n    return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(_m0.Reader.create(data)));\n  }\n\n  RecoverClient(request: MsgRecoverClient): Promise<MsgRecoverClientResponse> {\n    const data = MsgRecoverClient.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"RecoverClient\", data);\n    return promise.then((data) => MsgRecoverClientResponse.decode(_m0.Reader.create(data)));\n  }\n\n  IBCSoftwareUpgrade(request: MsgIBCSoftwareUpgrade): Promise<MsgIBCSoftwareUpgradeResponse> {\n    const data = MsgIBCSoftwareUpgrade.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"IBCSoftwareUpgrade\", data);\n    return promise.then((data) => MsgIBCSoftwareUpgradeResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateClientParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse> {\n    const data = MsgUpdateParams.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateClientParams\", data);\n    return promise.then((data) => MsgUpdateParamsResponse.decode(_m0.Reader.create(data)));\n  }\n}\n\ninterface Rpc {\n  request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;\n}\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n  if ((globalThis as any).Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\n\nfunction base64FromBytes(arr: Uint8Array): string {\n  if ((globalThis as any).Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin: string[] = [];\n    arr.forEach((byte) => {\n      bin.push(globalThis.String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9036, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9041, "column": 0}, "map": {"version":3,"file":"commitment.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/core/commitment/v1/commitment.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/core/commitment/v1/commitment.proto\n\n/* eslint-disable */\nimport * as _m0 from \"protobufjs/minimal\";\nimport { CommitmentProof } from \"../../../../cosmos/ics23/v1/proofs\";\n\nexport const protobufPackage = \"ibc.core.commitment.v1\";\n\n/**\n * MerkleRoot defines a merkle root hash.\n * In the Cosmos SDK, the AppHash of a block header becomes the root.\n */\nexport interface MerkleRoot {\n  hash: Uint8Array;\n}\n\n/**\n * MerklePrefix is merkle path prefixed to the key.\n * The constructed key from the Path and the key will be append(Path.KeyPath,\n * append(Path.KeyPrefix, key...))\n */\nexport interface MerklePrefix {\n  key_prefix: Uint8Array;\n}\n\n/**\n * MerklePath is the path used to verify commitment proofs, which can be an\n * arbitrary structured object (defined by a commitment type).\n * MerklePath is represented from root-to-leaf\n */\nexport interface MerklePath {\n  key_path: string[];\n}\n\n/**\n * MerkleProof is a wrapper type over a chain of CommitmentProofs.\n * It demonstrates membership or non-membership for an element or set of\n * elements, verifiable in conjunction with a known commitment root. Proofs\n * should be succinct.\n * MerkleProofs are ordered from leaf-to-root\n */\nexport interface MerkleProof {\n  proofs: CommitmentProof[];\n}\n\nfunction createBaseMerkleRoot(): MerkleRoot {\n  return { hash: new Uint8Array(0) };\n}\n\nexport const MerkleRoot = {\n  encode(message: MerkleRoot, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.hash.length !== 0) {\n      writer.uint32(10).bytes(message.hash);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MerkleRoot {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMerkleRoot();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.hash = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MerkleRoot {\n    return { hash: isSet(object.hash) ? bytesFromBase64(object.hash) : new Uint8Array(0) };\n  },\n\n  toJSON(message: MerkleRoot): unknown {\n    const obj: any = {};\n    if (message.hash.length !== 0) {\n      obj.hash = base64FromBytes(message.hash);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MerkleRoot>): MerkleRoot {\n    return MerkleRoot.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MerkleRoot>): MerkleRoot {\n    const message = createBaseMerkleRoot();\n    message.hash = object.hash ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMerklePrefix(): MerklePrefix {\n  return { key_prefix: new Uint8Array(0) };\n}\n\nexport const MerklePrefix = {\n  encode(message: MerklePrefix, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.key_prefix.length !== 0) {\n      writer.uint32(10).bytes(message.key_prefix);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MerklePrefix {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMerklePrefix();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.key_prefix = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MerklePrefix {\n    return { key_prefix: isSet(object.key_prefix) ? bytesFromBase64(object.key_prefix) : new Uint8Array(0) };\n  },\n\n  toJSON(message: MerklePrefix): unknown {\n    const obj: any = {};\n    if (message.key_prefix.length !== 0) {\n      obj.key_prefix = base64FromBytes(message.key_prefix);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MerklePrefix>): MerklePrefix {\n    return MerklePrefix.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MerklePrefix>): MerklePrefix {\n    const message = createBaseMerklePrefix();\n    message.key_prefix = object.key_prefix ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMerklePath(): MerklePath {\n  return { key_path: [] };\n}\n\nexport const MerklePath = {\n  encode(message: MerklePath, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.key_path) {\n      writer.uint32(10).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MerklePath {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMerklePath();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.key_path.push(reader.string());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MerklePath {\n    return {\n      key_path: globalThis.Array.isArray(object?.key_path) ? object.key_path.map((e: any) => globalThis.String(e)) : [],\n    };\n  },\n\n  toJSON(message: MerklePath): unknown {\n    const obj: any = {};\n    if (message.key_path?.length) {\n      obj.key_path = message.key_path;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MerklePath>): MerklePath {\n    return MerklePath.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MerklePath>): MerklePath {\n    const message = createBaseMerklePath();\n    message.key_path = object.key_path?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseMerkleProof(): MerkleProof {\n  return { proofs: [] };\n}\n\nexport const MerkleProof = {\n  encode(message: MerkleProof, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.proofs) {\n      CommitmentProof.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MerkleProof {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMerkleProof();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MerkleProof {\n    return {\n      proofs: globalThis.Array.isArray(object?.proofs)\n        ? object.proofs.map((e: any) => CommitmentProof.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: MerkleProof): unknown {\n    const obj: any = {};\n    if (message.proofs?.length) {\n      obj.proofs = message.proofs.map((e) => CommitmentProof.toJSON(e));\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MerkleProof>): MerkleProof {\n    return MerkleProof.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MerkleProof>): MerkleProof {\n    const message = createBaseMerkleProof();\n    message.proofs = object.proofs?.map((e) => CommitmentProof.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n  if ((globalThis as any).Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\n\nfunction base64FromBytes(arr: Uint8Array): string {\n  if ((globalThis as any).Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin: string[] = [];\n    arr.forEach((byte) => {\n      bin.push(globalThis.String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9336, "column": 0}, "map": {"version":3,"file":"connection.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/core/connection/v1/connection.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/core/connection/v1/connection.proto\n\n/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../commitment/v1/commitment\";\n\nexport const protobufPackage = \"ibc.core.connection.v1\";\n\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport enum State {\n  /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n  STATE_UNINITIALIZED_UNSPECIFIED = 0,\n  /** STATE_INIT - A connection end has just started the opening handshake. */\n  STATE_INIT = 1,\n  /**\n   * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n   * chain.\n   */\n  STATE_TRYOPEN = 2,\n  /** STATE_OPEN - A connection end has completed the handshake. */\n  STATE_OPEN = 3,\n  UNRECOGNIZED = -1,\n}\n\nexport function stateFromJSON(object: any): State {\n  switch (object) {\n    case 0:\n    case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n      return State.STATE_UNINITIALIZED_UNSPECIFIED;\n    case 1:\n    case \"STATE_INIT\":\n      return State.STATE_INIT;\n    case 2:\n    case \"STATE_TRYOPEN\":\n      return State.STATE_TRYOPEN;\n    case 3:\n    case \"STATE_OPEN\":\n      return State.STATE_OPEN;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return State.UNRECOGNIZED;\n  }\n}\n\nexport function stateToJSON(object: State): string {\n  switch (object) {\n    case State.STATE_UNINITIALIZED_UNSPECIFIED:\n      return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    case State.STATE_INIT:\n      return \"STATE_INIT\";\n    case State.STATE_TRYOPEN:\n      return \"STATE_TRYOPEN\";\n    case State.STATE_OPEN:\n      return \"STATE_OPEN\";\n    case State.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n\n/**\n * ConnectionEnd defines a stateful object on a chain connected to another\n * separate one.\n * NOTE: there must only be 2 defined ConnectionEnds to establish\n * a connection between two chains.\n */\nexport interface ConnectionEnd {\n  /** client associated with this connection. */\n  client_id: string;\n  /**\n   * IBC version which can be utilised to determine encodings or protocols for\n   * channels or packets utilising this connection.\n   */\n  versions: Version[];\n  /** current state of the connection end. */\n  state: State;\n  /** counterparty chain associated with this connection. */\n  counterparty?:\n    | Counterparty\n    | undefined;\n  /**\n   * delay period that must pass before a consensus state can be used for\n   * packet-verification NOTE: delay period logic is only implemented by some\n   * clients.\n   */\n  delay_period: string;\n}\n\n/**\n * IdentifiedConnection defines a connection with additional connection\n * identifier field.\n */\nexport interface IdentifiedConnection {\n  /** connection identifier. */\n  id: string;\n  /** client associated with this connection. */\n  client_id: string;\n  /**\n   * IBC version which can be utilised to determine encodings or protocols for\n   * channels or packets utilising this connection\n   */\n  versions: Version[];\n  /** current state of the connection end. */\n  state: State;\n  /** counterparty chain associated with this connection. */\n  counterparty?:\n    | Counterparty\n    | undefined;\n  /** delay period associated with this connection. */\n  delay_period: string;\n}\n\n/** Counterparty defines the counterparty chain associated with a connection end. */\nexport interface Counterparty {\n  /**\n   * identifies the client on the counterparty chain associated with a given\n   * connection.\n   */\n  client_id: string;\n  /**\n   * identifies the connection end on the counterparty chain associated with a\n   * given connection.\n   */\n  connection_id: string;\n  /** commitment merkle prefix of the counterparty chain. */\n  prefix?: MerklePrefix | undefined;\n}\n\n/** ClientPaths define all the connection paths for a client state. */\nexport interface ClientPaths {\n  /** list of connection paths */\n  paths: string[];\n}\n\n/** ConnectionPaths define all the connection paths for a given client state. */\nexport interface ConnectionPaths {\n  /** client state unique identifier */\n  client_id: string;\n  /** list of connection paths */\n  paths: string[];\n}\n\n/**\n * Version defines the versioning scheme used to negotiate the IBC verison in\n * the connection handshake.\n */\nexport interface Version {\n  /** unique version identifier */\n  identifier: string;\n  /** list of features compatible with the specified identifier */\n  features: string[];\n}\n\n/** Params defines the set of Connection parameters. */\nexport interface Params {\n  /**\n   * maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the\n   * largest amount of time that the chain might reasonably take to produce the next block under normal operating\n   * conditions. A safe choice is 3-5x the expected time per block.\n   */\n  max_expected_time_per_block: string;\n}\n\nfunction createBaseConnectionEnd(): ConnectionEnd {\n  return { client_id: \"\", versions: [], state: 0, counterparty: undefined, delay_period: \"0\" };\n}\n\nexport const ConnectionEnd = {\n  encode(message: ConnectionEnd, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.client_id !== \"\") {\n      writer.uint32(10).string(message.client_id);\n    }\n    for (const v of message.versions) {\n      Version.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.state !== 0) {\n      writer.uint32(24).int32(message.state);\n    }\n    if (message.counterparty !== undefined) {\n      Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.delay_period !== \"0\") {\n      writer.uint32(40).uint64(message.delay_period);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConnectionEnd {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConnectionEnd();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.client_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.versions.push(Version.decode(reader, reader.uint32()));\n          continue;\n        case 3:\n          if (tag !== 24) {\n            break;\n          }\n\n          message.state = reader.int32() as any;\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.counterparty = Counterparty.decode(reader, reader.uint32());\n          continue;\n        case 5:\n          if (tag !== 40) {\n            break;\n          }\n\n          message.delay_period = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ConnectionEnd {\n    return {\n      client_id: isSet(object.client_id) ? globalThis.String(object.client_id) : \"\",\n      versions: globalThis.Array.isArray(object?.versions) ? object.versions.map((e: any) => Version.fromJSON(e)) : [],\n      state: isSet(object.state) ? stateFromJSON(object.state) : 0,\n      counterparty: isSet(object.counterparty) ? Counterparty.fromJSON(object.counterparty) : undefined,\n      delay_period: isSet(object.delay_period) ? globalThis.String(object.delay_period) : \"0\",\n    };\n  },\n\n  toJSON(message: ConnectionEnd): unknown {\n    const obj: any = {};\n    if (message.client_id !== \"\") {\n      obj.client_id = message.client_id;\n    }\n    if (message.versions?.length) {\n      obj.versions = message.versions.map((e) => Version.toJSON(e));\n    }\n    if (message.state !== 0) {\n      obj.state = stateToJSON(message.state);\n    }\n    if (message.counterparty !== undefined) {\n      obj.counterparty = Counterparty.toJSON(message.counterparty);\n    }\n    if (message.delay_period !== \"0\") {\n      obj.delay_period = message.delay_period;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<ConnectionEnd>): ConnectionEnd {\n    return ConnectionEnd.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<ConnectionEnd>): ConnectionEnd {\n    const message = createBaseConnectionEnd();\n    message.client_id = object.client_id ?? \"\";\n    message.versions = object.versions?.map((e) => Version.fromPartial(e)) || [];\n    message.state = object.state ?? 0;\n    message.counterparty = (object.counterparty !== undefined && object.counterparty !== null)\n      ? Counterparty.fromPartial(object.counterparty)\n      : undefined;\n    message.delay_period = object.delay_period ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseIdentifiedConnection(): IdentifiedConnection {\n  return { id: \"\", client_id: \"\", versions: [], state: 0, counterparty: undefined, delay_period: \"0\" };\n}\n\nexport const IdentifiedConnection = {\n  encode(message: IdentifiedConnection, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.client_id !== \"\") {\n      writer.uint32(18).string(message.client_id);\n    }\n    for (const v of message.versions) {\n      Version.encode(v!, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.state !== 0) {\n      writer.uint32(32).int32(message.state);\n    }\n    if (message.counterparty !== undefined) {\n      Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.delay_period !== \"0\") {\n      writer.uint32(48).uint64(message.delay_period);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): IdentifiedConnection {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseIdentifiedConnection();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.client_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.versions.push(Version.decode(reader, reader.uint32()));\n          continue;\n        case 4:\n          if (tag !== 32) {\n            break;\n          }\n\n          message.state = reader.int32() as any;\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.counterparty = Counterparty.decode(reader, reader.uint32());\n          continue;\n        case 6:\n          if (tag !== 48) {\n            break;\n          }\n\n          message.delay_period = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): IdentifiedConnection {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      client_id: isSet(object.client_id) ? globalThis.String(object.client_id) : \"\",\n      versions: globalThis.Array.isArray(object?.versions) ? object.versions.map((e: any) => Version.fromJSON(e)) : [],\n      state: isSet(object.state) ? stateFromJSON(object.state) : 0,\n      counterparty: isSet(object.counterparty) ? Counterparty.fromJSON(object.counterparty) : undefined,\n      delay_period: isSet(object.delay_period) ? globalThis.String(object.delay_period) : \"0\",\n    };\n  },\n\n  toJSON(message: IdentifiedConnection): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.client_id !== \"\") {\n      obj.client_id = message.client_id;\n    }\n    if (message.versions?.length) {\n      obj.versions = message.versions.map((e) => Version.toJSON(e));\n    }\n    if (message.state !== 0) {\n      obj.state = stateToJSON(message.state);\n    }\n    if (message.counterparty !== undefined) {\n      obj.counterparty = Counterparty.toJSON(message.counterparty);\n    }\n    if (message.delay_period !== \"0\") {\n      obj.delay_period = message.delay_period;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<IdentifiedConnection>): IdentifiedConnection {\n    return IdentifiedConnection.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<IdentifiedConnection>): IdentifiedConnection {\n    const message = createBaseIdentifiedConnection();\n    message.id = object.id ?? \"\";\n    message.client_id = object.client_id ?? \"\";\n    message.versions = object.versions?.map((e) => Version.fromPartial(e)) || [];\n    message.state = object.state ?? 0;\n    message.counterparty = (object.counterparty !== undefined && object.counterparty !== null)\n      ? Counterparty.fromPartial(object.counterparty)\n      : undefined;\n    message.delay_period = object.delay_period ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseCounterparty(): Counterparty {\n  return { client_id: \"\", connection_id: \"\", prefix: undefined };\n}\n\nexport const Counterparty = {\n  encode(message: Counterparty, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.client_id !== \"\") {\n      writer.uint32(10).string(message.client_id);\n    }\n    if (message.connection_id !== \"\") {\n      writer.uint32(18).string(message.connection_id);\n    }\n    if (message.prefix !== undefined) {\n      MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Counterparty {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCounterparty();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.client_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.connection_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.prefix = MerklePrefix.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Counterparty {\n    return {\n      client_id: isSet(object.client_id) ? globalThis.String(object.client_id) : \"\",\n      connection_id: isSet(object.connection_id) ? globalThis.String(object.connection_id) : \"\",\n      prefix: isSet(object.prefix) ? MerklePrefix.fromJSON(object.prefix) : undefined,\n    };\n  },\n\n  toJSON(message: Counterparty): unknown {\n    const obj: any = {};\n    if (message.client_id !== \"\") {\n      obj.client_id = message.client_id;\n    }\n    if (message.connection_id !== \"\") {\n      obj.connection_id = message.connection_id;\n    }\n    if (message.prefix !== undefined) {\n      obj.prefix = MerklePrefix.toJSON(message.prefix);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Counterparty>): Counterparty {\n    return Counterparty.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Counterparty>): Counterparty {\n    const message = createBaseCounterparty();\n    message.client_id = object.client_id ?? \"\";\n    message.connection_id = object.connection_id ?? \"\";\n    message.prefix = (object.prefix !== undefined && object.prefix !== null)\n      ? MerklePrefix.fromPartial(object.prefix)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseClientPaths(): ClientPaths {\n  return { paths: [] };\n}\n\nexport const ClientPaths = {\n  encode(message: ClientPaths, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.paths) {\n      writer.uint32(10).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ClientPaths {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseClientPaths();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.paths.push(reader.string());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ClientPaths {\n    return { paths: globalThis.Array.isArray(object?.paths) ? object.paths.map((e: any) => globalThis.String(e)) : [] };\n  },\n\n  toJSON(message: ClientPaths): unknown {\n    const obj: any = {};\n    if (message.paths?.length) {\n      obj.paths = message.paths;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<ClientPaths>): ClientPaths {\n    return ClientPaths.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<ClientPaths>): ClientPaths {\n    const message = createBaseClientPaths();\n    message.paths = object.paths?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseConnectionPaths(): ConnectionPaths {\n  return { client_id: \"\", paths: [] };\n}\n\nexport const ConnectionPaths = {\n  encode(message: ConnectionPaths, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.client_id !== \"\") {\n      writer.uint32(10).string(message.client_id);\n    }\n    for (const v of message.paths) {\n      writer.uint32(18).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConnectionPaths {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConnectionPaths();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.client_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.paths.push(reader.string());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ConnectionPaths {\n    return {\n      client_id: isSet(object.client_id) ? globalThis.String(object.client_id) : \"\",\n      paths: globalThis.Array.isArray(object?.paths) ? object.paths.map((e: any) => globalThis.String(e)) : [],\n    };\n  },\n\n  toJSON(message: ConnectionPaths): unknown {\n    const obj: any = {};\n    if (message.client_id !== \"\") {\n      obj.client_id = message.client_id;\n    }\n    if (message.paths?.length) {\n      obj.paths = message.paths;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<ConnectionPaths>): ConnectionPaths {\n    return ConnectionPaths.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<ConnectionPaths>): ConnectionPaths {\n    const message = createBaseConnectionPaths();\n    message.client_id = object.client_id ?? \"\";\n    message.paths = object.paths?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseVersion(): Version {\n  return { identifier: \"\", features: [] };\n}\n\nexport const Version = {\n  encode(message: Version, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.identifier !== \"\") {\n      writer.uint32(10).string(message.identifier);\n    }\n    for (const v of message.features) {\n      writer.uint32(18).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Version {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseVersion();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.identifier = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.features.push(reader.string());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Version {\n    return {\n      identifier: isSet(object.identifier) ? globalThis.String(object.identifier) : \"\",\n      features: globalThis.Array.isArray(object?.features) ? object.features.map((e: any) => globalThis.String(e)) : [],\n    };\n  },\n\n  toJSON(message: Version): unknown {\n    const obj: any = {};\n    if (message.identifier !== \"\") {\n      obj.identifier = message.identifier;\n    }\n    if (message.features?.length) {\n      obj.features = message.features;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Version>): Version {\n    return Version.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Version>): Version {\n    const message = createBaseVersion();\n    message.identifier = object.identifier ?? \"\";\n    message.features = object.features?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseParams(): Params {\n  return { max_expected_time_per_block: \"0\" };\n}\n\nexport const Params = {\n  encode(message: Params, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.max_expected_time_per_block !== \"0\") {\n      writer.uint32(8).uint64(message.max_expected_time_per_block);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Params {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.max_expected_time_per_block = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Params {\n    return {\n      max_expected_time_per_block: isSet(object.max_expected_time_per_block)\n        ? globalThis.String(object.max_expected_time_per_block)\n        : \"0\",\n    };\n  },\n\n  toJSON(message: Params): unknown {\n    const obj: any = {};\n    if (message.max_expected_time_per_block !== \"0\") {\n      obj.max_expected_time_per_block = message.max_expected_time_per_block;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Params>): Params {\n    return Params.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Params>): Params {\n    const message = createBaseParams();\n    message.max_expected_time_per_block = object.max_expected_time_per_block ?? \"0\";\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToString(long: Long) {\n  return long.toString();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":";AAAA,sDAAsD;AACtD,YAAY;AACZ,kCAAkC;AAClC,iCAAiC;AACjC,kDAAkD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElD,kBAAA,EAAoB,CACpB,MAAA,SAAA,iCAAwB;AACxB,MAAA,MAAA,4CAA0C;AAC1C,MAAA,yDAA8D;AAEjD,QAAA,eAAe,GAAG,wBAAwB,CAAC;AAExD;;;GAGG,CACH,IAAY,KAaX;AAbD,CAAA,SAAY,KAAK;IACf,oDAAA,EAAsD,CACtD,KAAA,CAAA,KAAA,CAAA,kCAAA,GAAA,EAAA,GAAA,iCAAmC,CAAA;IACnC,0EAAA,EAA4E,CAC5E,KAAA,CAAA,KAAA,CAAA,aAAA,GAAA,EAAA,GAAA,YAAc,CAAA;IACd;;;OAGG,CACH,KAAA,CAAA,KAAA,CAAA,gBAAA,GAAA,EAAA,GAAA,eAAiB,CAAA;IACjB,+DAAA,EAAiE,CACjE,KAAA,CAAA,KAAA,CAAA,aAAA,GAAA,EAAA,GAAA,YAAc,CAAA;IACd,KAAA,CAAA,KAAA,CAAA,eAAA,GAAA,CAAA,EAAA,GAAA,cAAiB,CAAA;AACnB,CAAC,EAbW,KAAK,GAAL,QAAA,KAAK,IAAA,CAAL,QAAA,KAAK,GAAA,CAAA,CAAA,GAahB;AAED,SAAgB,aAAa,CAAC,MAAW;IACvC,OAAQ,MAAM,EAAE;QACd,KAAK,CAAC,CAAC;QACP,KAAK,iCAAiC;YACpC,OAAO,KAAK,CAAC,+BAA+B,CAAC;QAC/C,KAAK,CAAC,CAAC;QACP,KAAK,YAAY;YACf,OAAO,KAAK,CAAC,UAAU,CAAC;QAC1B,KAAK,CAAC,CAAC;QACP,KAAK,eAAe;YAClB,OAAO,KAAK,CAAC,aAAa,CAAC;QAC7B,KAAK,CAAC,CAAC;QACP,KAAK,YAAY;YACf,OAAO,KAAK,CAAC,UAAU,CAAC;QAC1B,KAAK,CAAC,CAAC,CAAC;QACR,KAAK,cAAc,CAAC;QACpB;YACE,OAAO,KAAK,CAAC,YAAY,CAAC;KAC7B;AACH,CAAC;AAnBD,QAAA,aAAA,GAAA,cAmBC;AAED,SAAgB,WAAW,CAAC,MAAa;IACvC,OAAQ,MAAM,EAAE;QACd,KAAK,KAAK,CAAC,+BAA+B;YACxC,OAAO,iCAAiC,CAAC;QAC3C,KAAK,KAAK,CAAC,UAAU;YACnB,OAAO,YAAY,CAAC;QACtB,KAAK,KAAK,CAAC,aAAa;YACtB,OAAO,eAAe,CAAC;QACzB,KAAK,KAAK,CAAC,UAAU;YACnB,OAAO,YAAY,CAAC;QACtB,KAAK,KAAK,CAAC,YAAY,CAAC;QACxB;YACE,OAAO,cAAc,CAAC;KACzB;AACH,CAAC;AAdD,QAAA,WAAA,GAAA,YAcC;AAyGD,SAAS,uBAAuB;IAC9B,OAAO;QAAE,SAAS,EAAE,EAAE;QAAE,QAAQ,EAAE,EAAE;QAAE,KAAK,EAAE,CAAC;QAAE,YAAY,EAAE,SAAS;QAAE,YAAY,EAAE,GAAG;IAAA,CAAE,CAAC;AAC/F,CAAC;AAEY,QAAA,aAAa,GAAG;IAC3B,MAAM,EAAC,OAAsB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACrE,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC7C;QACD,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAE;YAChC,QAAA,OAAO,CAAC,MAAM,CAAC,CAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACvD;QACD,IAAI,OAAO,CAAC,KAAK,KAAK,CAAC,EAAE;YACvB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACxC;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,QAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAC9E;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,GAAG,EAAE;YAChC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAChD;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,uBAAuB,EAAE,CAAC;QAC1C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACpC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAA,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAC/D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,EAAS,CAAC;oBACtC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,QAAA,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACpE,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBAC7D,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;YAC7E,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,CAAG,CAAD,OAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YAChH,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAA,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YACjG,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG;SACxF,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAsB;;QAC3B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;SACnC;QACD,IAAI,CAAA,KAAA,OAAO,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM,EAAE;YAC5B,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,OAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/D;QACD,IAAI,OAAO,CAAC,KAAK,KAAK,CAAC,EAAE;YACvB,GAAG,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACxC;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,QAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC9D;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,GAAG,EAAE;YAChC,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;SACzC;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAiC;QACtC,OAAO,QAAA,aAAa,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC/C,CAAC;IACD,WAAW,EAAC,MAAkC;;QAC5C,MAAM,OAAO,GAAG,uBAAuB,EAAE,CAAC;QAC1C,OAAO,CAAC,SAAS,GAAG,CAAA,KAAA,MAAM,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC3C,OAAO,CAAC,QAAQ,GAAG,CAAA,CAAA,KAAA,MAAM,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,OAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAI,EAAE,CAAC;QAC7E,OAAO,CAAC,KAAK,GAAG,CAAA,KAAA,MAAM,CAAC,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QAClC,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,QAAA,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GAC7C,SAAS,CAAC;QACd,OAAO,CAAC,YAAY,GAAG,CAAA,KAAA,MAAM,CAAC,YAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QAClD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,8BAA8B;IACrC,OAAO;QAAE,EAAE,EAAE,EAAE;QAAE,SAAS,EAAE,EAAE;QAAE,QAAQ,EAAE,EAAE;QAAE,KAAK,EAAE,CAAC;QAAE,YAAY,EAAE,SAAS;QAAE,YAAY,EAAE,GAAG;IAAA,CAAE,CAAC;AACvG,CAAC;AAEY,QAAA,oBAAoB,GAAG;IAClC,MAAM,EAAC,OAA6B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC5E,IAAI,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE;YACrB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SACtC;QACD,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC7C;QACD,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAE;YAChC,QAAA,OAAO,CAAC,MAAM,CAAC,CAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACvD;QACD,IAAI,OAAO,CAAC,KAAK,KAAK,CAAC,EAAE;YACvB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACxC;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,QAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAC9E;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,GAAG,EAAE;YAChC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAChD;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,8BAA8B,EAAE,CAAC;QACjD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAC7B,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACpC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAA,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAC/D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,EAAS,CAAC;oBACtC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,QAAA,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACpE,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBAC7D,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;YACxD,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;YAC7E,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,CAAG,CAAD,OAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YAChH,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAA,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YACjG,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG;SACxF,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA6B;;QAClC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE;YACrB,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;SACrB;QACD,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;SACnC;QACD,IAAI,CAAA,KAAA,OAAO,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM,EAAE;YAC5B,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,OAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/D;QACD,IAAI,OAAO,CAAC,KAAK,KAAK,CAAC,EAAE;YACvB,GAAG,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACxC;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,QAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC9D;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,GAAG,EAAE;YAChC,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;SACzC;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAwC;QAC7C,OAAO,QAAA,oBAAoB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACtD,CAAC;IACD,WAAW,EAAC,MAAyC;;QACnD,MAAM,OAAO,GAAG,8BAA8B,EAAE,CAAC;QACjD,OAAO,CAAC,EAAE,GAAG,CAAA,KAAA,MAAM,CAAC,EAAE,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7B,OAAO,CAAC,SAAS,GAAG,CAAA,KAAA,MAAM,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC3C,OAAO,CAAC,QAAQ,GAAG,CAAA,CAAA,KAAA,MAAM,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,OAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAI,EAAE,CAAC;QAC7E,OAAO,CAAC,KAAK,GAAG,CAAA,KAAA,MAAM,CAAC,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC,CAAC;QAClC,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,QAAA,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GAC7C,SAAS,CAAC;QACd,OAAO,CAAC,YAAY,GAAG,CAAA,KAAA,MAAM,CAAC,YAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QAClD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,sBAAsB;IAC7B,OAAO;QAAE,SAAS,EAAE,EAAE;QAAE,aAAa,EAAE,EAAE;QAAE,MAAM,EAAE,SAAS;IAAA,CAAE,CAAC;AACjE,CAAC;AAEY,QAAA,YAAY,GAAG;IAC1B,MAAM,EAAC,OAAqB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACpE,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC7C;QACD,IAAI,OAAO,CAAC,aAAa,KAAK,EAAE,EAAE;YAChC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SACjD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,aAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,sBAAsB,EAAE,CAAC;QACzC,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACpC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACxC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,aAAA,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;YAC7E,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;YACzF,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAA,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS;SAChF,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAqB;QAC1B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;SACnC;QACD,IAAI,OAAO,CAAC,aAAa,KAAK,EAAE,EAAE;YAChC,GAAG,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,GAAG,CAAC,MAAM,GAAG,aAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAClD;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAgC;QACrC,OAAO,QAAA,YAAY,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC9C,CAAC;IACD,WAAW,EAAC,MAAiC;;QAC3C,MAAM,OAAO,GAAG,sBAAsB,EAAE,CAAC;QACzC,OAAO,CAAC,SAAS,GAAG,CAAA,KAAA,MAAM,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC3C,OAAO,CAAC,aAAa,GAAG,CAAA,KAAA,MAAM,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACnD,OAAO,CAAC,MAAM,GAAI,AAAD,MAAO,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,EACpE,aAAA,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,qBAAqB;IAC5B,OAAO;QAAE,KAAK,EAAE,EAAE;IAAA,CAAE,CAAC;AACvB,CAAC;AAEY,QAAA,WAAW,GAAG;IACzB,MAAM,EAAC,OAAoB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACnE,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,KAAK,CAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAE,CAAC,CAAC;SAC9B;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,qBAAqB,EAAE,CAAC;QACxC,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACpC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YAAE,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,CAAG,CAAD,SAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAAA,CAAE,CAAC;IACtH,CAAC;IAED,MAAM,EAAC,OAAoB;;QACzB,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,CAAA,KAAA,OAAO,CAAC,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM,EAAE;YACzB,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;SAC3B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA+B;QACpC,OAAO,QAAA,WAAW,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC7C,CAAC;IACD,WAAW,EAAC,MAAgC;;QAC1C,MAAM,OAAO,GAAG,qBAAqB,EAAE,CAAC;QACxC,OAAO,CAAC,KAAK,GAAG,CAAA,CAAA,KAAA,MAAM,CAAC,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,KAAI,EAAE,CAAC;QAClD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,yBAAyB;IAChC,OAAO;QAAE,SAAS,EAAE,EAAE;QAAE,KAAK,EAAE,EAAE;IAAA,CAAE,CAAC;AACtC,CAAC;AAEY,QAAA,eAAe,GAAG;IAC7B,MAAM,EAAC,OAAwB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACvE,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC7C;QACD,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,KAAK,CAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAE,CAAC,CAAC;SAC9B;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,yBAAyB,EAAE,CAAC;QAC5C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACpC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACpC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;YAC7E,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,CAAG,CAAD,SAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;SACzG,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAwB;;QAC7B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;SACnC;QACD,IAAI,CAAA,KAAA,OAAO,CAAC,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM,EAAE;YACzB,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;SAC3B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAmC;QACxC,OAAO,QAAA,eAAe,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACjD,CAAC;IACD,WAAW,EAAC,MAAoC;;QAC9C,MAAM,OAAO,GAAG,yBAAyB,EAAE,CAAC;QAC5C,OAAO,CAAC,SAAS,GAAG,CAAA,KAAA,MAAM,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC3C,OAAO,CAAC,KAAK,GAAG,CAAA,CAAA,KAAA,MAAM,CAAC,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,KAAI,EAAE,CAAC;QAClD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,iBAAiB;IACxB,OAAO;QAAE,UAAU,EAAE,EAAE;QAAE,QAAQ,EAAE,EAAE;IAAA,CAAE,CAAC;AAC1C,CAAC;AAEY,QAAA,OAAO,GAAG;IACrB,MAAM,EAAC,OAAgB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC/D,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC9C;QACD,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAE;YAChC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAE,CAAC,CAAC;SAC9B;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;QACpC,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACvC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,CAAG,CAAD,SAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;SAClH,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAgB;;QACrB,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE;YAC7B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;SACrC;QACD,IAAI,CAAA,KAAA,OAAO,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM,EAAE;YAC5B,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;SACjC;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA2B;QAChC,OAAO,QAAA,OAAO,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACzC,CAAC;IACD,WAAW,EAAC,MAA4B;;QACtC,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;QACpC,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,QAAQ,GAAG,CAAA,CAAA,KAAA,MAAM,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,KAAI,EAAE,CAAC;QACxD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,gBAAgB;IACvB,OAAO;QAAE,2BAA2B,EAAE,GAAG;IAAA,CAAE,CAAC;AAC9C,CAAC;AAEY,QAAA,MAAM,GAAG;IACpB,MAAM,EAAC,OAAe,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC9D,IAAI,OAAO,CAAC,2BAA2B,KAAK,GAAG,EAAE;YAC/C,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;SAC9D;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,gBAAgB,EAAE,CAAC;QACnC,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACb,MAAM;qBACP;oBAED,OAAO,CAAC,2BAA2B,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBAC5E,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,2BAA2B,EAAE,KAAK,CAAC,MAAM,CAAC,2BAA2B,CAAC,GAClE,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,GACrD,GAAG;SACR,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAe;QACpB,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,2BAA2B,KAAK,GAAG,EAAE;YAC/C,GAAG,CAAC,2BAA2B,GAAG,OAAO,CAAC,2BAA2B,CAAC;SACvE;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA0B;QAC/B,OAAO,QAAA,MAAM,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACxC,CAAC;IACD,WAAW,EAAC,MAA2B;;QACrC,MAAM,OAAO,GAAG,gBAAgB,EAAE,CAAC;QACnC,OAAO,CAAC,2BAA2B,GAAG,CAAA,KAAA,MAAM,CAAC,2BAA2B,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QAChF,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAUF,SAAS,YAAY,CAAC,IAAU;IAC9B,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;AACzB,CAAC;AAED,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,OAAA,OAAI,EAAE;IAC1B,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,OAAA,OAAW,CAAC;IAC5B,GAAG,CAAC,SAAS,EAAE,CAAC;CACjB;AAED,SAAS,KAAK,CAAC,KAAU;IACvB,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AAC/C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10030, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10035, "column": 0}, "map": {"version":3,"file":"tx.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/ibc/core/connection/v1/tx.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: ibc/core/connection/v1/tx.proto\n\n/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../client/v1/client\";\nimport { Counterparty, Params, Version } from \"./connection\";\n\nexport const protobufPackage = \"ibc.core.connection.v1\";\n\n/**\n * MsgConnectionOpenInit defines the msg sent by an account on Chain A to\n * initialize a connection with Chain B.\n */\nexport interface MsgConnectionOpenInit {\n  client_id: string;\n  counterparty?: Counterparty | undefined;\n  version?: Version | undefined;\n  delay_period: string;\n  signer: string;\n}\n\n/**\n * MsgConnectionOpenInitResponse defines the Msg/ConnectionOpenInit response\n * type.\n */\nexport interface MsgConnectionOpenInitResponse {\n}\n\n/**\n * MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a\n * connection on Chain B.\n */\nexport interface MsgConnectionOpenTry {\n  client_id: string;\n  /**\n   * Deprecated: this field is unused. Crossing hellos are no longer supported in core IBC.\n   *\n   * @deprecated\n   */\n  previous_connection_id: string;\n  client_state?: Any | undefined;\n  counterparty?: Counterparty | undefined;\n  delay_period: string;\n  counterparty_versions: Version[];\n  proof_height?:\n    | Height\n    | undefined;\n  /**\n   * proof of the initialization the connection on Chain A: `UNITIALIZED ->\n   * INIT`\n   */\n  proof_init: Uint8Array;\n  /** proof of client state included in message */\n  proof_client: Uint8Array;\n  /** proof of client consensus state */\n  proof_consensus: Uint8Array;\n  consensus_height?: Height | undefined;\n  signer: string;\n  /** optional proof data for host state machines that are unable to introspect their own consensus state */\n  host_consensus_state_proof: Uint8Array;\n}\n\n/** MsgConnectionOpenTryResponse defines the Msg/ConnectionOpenTry response type. */\nexport interface MsgConnectionOpenTryResponse {\n}\n\n/**\n * MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to\n * acknowledge the change of connection state to TRYOPEN on Chain B.\n */\nexport interface MsgConnectionOpenAck {\n  connection_id: string;\n  counterparty_connection_id: string;\n  version?: Version | undefined;\n  client_state?: Any | undefined;\n  proof_height?:\n    | Height\n    | undefined;\n  /**\n   * proof of the initialization the connection on Chain B: `UNITIALIZED ->\n   * TRYOPEN`\n   */\n  proof_try: Uint8Array;\n  /** proof of client state included in message */\n  proof_client: Uint8Array;\n  /** proof of client consensus state */\n  proof_consensus: Uint8Array;\n  consensus_height?: Height | undefined;\n  signer: string;\n  /** optional proof data for host state machines that are unable to introspect their own consensus state */\n  host_consensus_state_proof: Uint8Array;\n}\n\n/** MsgConnectionOpenAckResponse defines the Msg/ConnectionOpenAck response type. */\nexport interface MsgConnectionOpenAckResponse {\n}\n\n/**\n * MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to\n * acknowledge the change of connection state to OPEN on Chain A.\n */\nexport interface MsgConnectionOpenConfirm {\n  connection_id: string;\n  /** proof for the change of the connection state on Chain A: `INIT -> OPEN` */\n  proof_ack: Uint8Array;\n  proof_height?: Height | undefined;\n  signer: string;\n}\n\n/**\n * MsgConnectionOpenConfirmResponse defines the Msg/ConnectionOpenConfirm\n * response type.\n */\nexport interface MsgConnectionOpenConfirmResponse {\n}\n\n/** MsgUpdateParams defines the sdk.Msg type to update the connection parameters. */\nexport interface MsgUpdateParams {\n  /** signer address */\n  signer: string;\n  /**\n   * params defines the connection parameters to update.\n   *\n   * NOTE: All parameters must be supplied.\n   */\n  params?: Params | undefined;\n}\n\n/** MsgUpdateParamsResponse defines the MsgUpdateParams response type. */\nexport interface MsgUpdateParamsResponse {\n}\n\nfunction createBaseMsgConnectionOpenInit(): MsgConnectionOpenInit {\n  return { client_id: \"\", counterparty: undefined, version: undefined, delay_period: \"0\", signer: \"\" };\n}\n\nexport const MsgConnectionOpenInit = {\n  encode(message: MsgConnectionOpenInit, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.client_id !== \"\") {\n      writer.uint32(10).string(message.client_id);\n    }\n    if (message.counterparty !== undefined) {\n      Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.delay_period !== \"0\") {\n      writer.uint32(32).uint64(message.delay_period);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgConnectionOpenInit {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenInit();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.client_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.counterparty = Counterparty.decode(reader, reader.uint32());\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.version = Version.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 32) {\n            break;\n          }\n\n          message.delay_period = longToString(reader.uint64() as Long);\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgConnectionOpenInit {\n    return {\n      client_id: isSet(object.client_id) ? globalThis.String(object.client_id) : \"\",\n      counterparty: isSet(object.counterparty) ? Counterparty.fromJSON(object.counterparty) : undefined,\n      version: isSet(object.version) ? Version.fromJSON(object.version) : undefined,\n      delay_period: isSet(object.delay_period) ? globalThis.String(object.delay_period) : \"0\",\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgConnectionOpenInit): unknown {\n    const obj: any = {};\n    if (message.client_id !== \"\") {\n      obj.client_id = message.client_id;\n    }\n    if (message.counterparty !== undefined) {\n      obj.counterparty = Counterparty.toJSON(message.counterparty);\n    }\n    if (message.version !== undefined) {\n      obj.version = Version.toJSON(message.version);\n    }\n    if (message.delay_period !== \"0\") {\n      obj.delay_period = message.delay_period;\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgConnectionOpenInit>): MsgConnectionOpenInit {\n    return MsgConnectionOpenInit.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgConnectionOpenInit>): MsgConnectionOpenInit {\n    const message = createBaseMsgConnectionOpenInit();\n    message.client_id = object.client_id ?? \"\";\n    message.counterparty = (object.counterparty !== undefined && object.counterparty !== null)\n      ? Counterparty.fromPartial(object.counterparty)\n      : undefined;\n    message.version = (object.version !== undefined && object.version !== null)\n      ? Version.fromPartial(object.version)\n      : undefined;\n    message.delay_period = object.delay_period ?? \"0\";\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgConnectionOpenInitResponse(): MsgConnectionOpenInitResponse {\n  return {};\n}\n\nexport const MsgConnectionOpenInitResponse = {\n  encode(_: MsgConnectionOpenInitResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgConnectionOpenInitResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenInitResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgConnectionOpenInitResponse {\n    return {};\n  },\n\n  toJSON(_: MsgConnectionOpenInitResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgConnectionOpenInitResponse>): MsgConnectionOpenInitResponse {\n    return MsgConnectionOpenInitResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgConnectionOpenInitResponse>): MsgConnectionOpenInitResponse {\n    const message = createBaseMsgConnectionOpenInitResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgConnectionOpenTry(): MsgConnectionOpenTry {\n  return {\n    client_id: \"\",\n    previous_connection_id: \"\",\n    client_state: undefined,\n    counterparty: undefined,\n    delay_period: \"0\",\n    counterparty_versions: [],\n    proof_height: undefined,\n    proof_init: new Uint8Array(0),\n    proof_client: new Uint8Array(0),\n    proof_consensus: new Uint8Array(0),\n    consensus_height: undefined,\n    signer: \"\",\n    host_consensus_state_proof: new Uint8Array(0),\n  };\n}\n\nexport const MsgConnectionOpenTry = {\n  encode(message: MsgConnectionOpenTry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.client_id !== \"\") {\n      writer.uint32(10).string(message.client_id);\n    }\n    if (message.previous_connection_id !== \"\") {\n      writer.uint32(18).string(message.previous_connection_id);\n    }\n    if (message.client_state !== undefined) {\n      Any.encode(message.client_state, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.counterparty !== undefined) {\n      Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.delay_period !== \"0\") {\n      writer.uint32(40).uint64(message.delay_period);\n    }\n    for (const v of message.counterparty_versions) {\n      Version.encode(v!, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.proof_init.length !== 0) {\n      writer.uint32(66).bytes(message.proof_init);\n    }\n    if (message.proof_client.length !== 0) {\n      writer.uint32(74).bytes(message.proof_client);\n    }\n    if (message.proof_consensus.length !== 0) {\n      writer.uint32(82).bytes(message.proof_consensus);\n    }\n    if (message.consensus_height !== undefined) {\n      Height.encode(message.consensus_height, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(98).string(message.signer);\n    }\n    if (message.host_consensus_state_proof.length !== 0) {\n      writer.uint32(106).bytes(message.host_consensus_state_proof);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgConnectionOpenTry {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenTry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.client_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.previous_connection_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.client_state = Any.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.counterparty = Counterparty.decode(reader, reader.uint32());\n          continue;\n        case 5:\n          if (tag !== 40) {\n            break;\n          }\n\n          message.delay_period = longToString(reader.uint64() as Long);\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.counterparty_versions.push(Version.decode(reader, reader.uint32()));\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 8:\n          if (tag !== 66) {\n            break;\n          }\n\n          message.proof_init = reader.bytes();\n          continue;\n        case 9:\n          if (tag !== 74) {\n            break;\n          }\n\n          message.proof_client = reader.bytes();\n          continue;\n        case 10:\n          if (tag !== 82) {\n            break;\n          }\n\n          message.proof_consensus = reader.bytes();\n          continue;\n        case 11:\n          if (tag !== 90) {\n            break;\n          }\n\n          message.consensus_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 12:\n          if (tag !== 98) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n        case 13:\n          if (tag !== 106) {\n            break;\n          }\n\n          message.host_consensus_state_proof = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgConnectionOpenTry {\n    return {\n      client_id: isSet(object.client_id) ? globalThis.String(object.client_id) : \"\",\n      previous_connection_id: isSet(object.previous_connection_id)\n        ? globalThis.String(object.previous_connection_id)\n        : \"\",\n      client_state: isSet(object.client_state) ? Any.fromJSON(object.client_state) : undefined,\n      counterparty: isSet(object.counterparty) ? Counterparty.fromJSON(object.counterparty) : undefined,\n      delay_period: isSet(object.delay_period) ? globalThis.String(object.delay_period) : \"0\",\n      counterparty_versions: globalThis.Array.isArray(object?.counterparty_versions)\n        ? object.counterparty_versions.map((e: any) => Version.fromJSON(e))\n        : [],\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      proof_init: isSet(object.proof_init) ? bytesFromBase64(object.proof_init) : new Uint8Array(0),\n      proof_client: isSet(object.proof_client) ? bytesFromBase64(object.proof_client) : new Uint8Array(0),\n      proof_consensus: isSet(object.proof_consensus) ? bytesFromBase64(object.proof_consensus) : new Uint8Array(0),\n      consensus_height: isSet(object.consensus_height) ? Height.fromJSON(object.consensus_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n      host_consensus_state_proof: isSet(object.host_consensus_state_proof)\n        ? bytesFromBase64(object.host_consensus_state_proof)\n        : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgConnectionOpenTry): unknown {\n    const obj: any = {};\n    if (message.client_id !== \"\") {\n      obj.client_id = message.client_id;\n    }\n    if (message.previous_connection_id !== \"\") {\n      obj.previous_connection_id = message.previous_connection_id;\n    }\n    if (message.client_state !== undefined) {\n      obj.client_state = Any.toJSON(message.client_state);\n    }\n    if (message.counterparty !== undefined) {\n      obj.counterparty = Counterparty.toJSON(message.counterparty);\n    }\n    if (message.delay_period !== \"0\") {\n      obj.delay_period = message.delay_period;\n    }\n    if (message.counterparty_versions?.length) {\n      obj.counterparty_versions = message.counterparty_versions.map((e) => Version.toJSON(e));\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.proof_init.length !== 0) {\n      obj.proof_init = base64FromBytes(message.proof_init);\n    }\n    if (message.proof_client.length !== 0) {\n      obj.proof_client = base64FromBytes(message.proof_client);\n    }\n    if (message.proof_consensus.length !== 0) {\n      obj.proof_consensus = base64FromBytes(message.proof_consensus);\n    }\n    if (message.consensus_height !== undefined) {\n      obj.consensus_height = Height.toJSON(message.consensus_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    if (message.host_consensus_state_proof.length !== 0) {\n      obj.host_consensus_state_proof = base64FromBytes(message.host_consensus_state_proof);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgConnectionOpenTry>): MsgConnectionOpenTry {\n    return MsgConnectionOpenTry.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgConnectionOpenTry>): MsgConnectionOpenTry {\n    const message = createBaseMsgConnectionOpenTry();\n    message.client_id = object.client_id ?? \"\";\n    message.previous_connection_id = object.previous_connection_id ?? \"\";\n    message.client_state = (object.client_state !== undefined && object.client_state !== null)\n      ? Any.fromPartial(object.client_state)\n      : undefined;\n    message.counterparty = (object.counterparty !== undefined && object.counterparty !== null)\n      ? Counterparty.fromPartial(object.counterparty)\n      : undefined;\n    message.delay_period = object.delay_period ?? \"0\";\n    message.counterparty_versions = object.counterparty_versions?.map((e) => Version.fromPartial(e)) || [];\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.proof_init = object.proof_init ?? new Uint8Array(0);\n    message.proof_client = object.proof_client ?? new Uint8Array(0);\n    message.proof_consensus = object.proof_consensus ?? new Uint8Array(0);\n    message.consensus_height = (object.consensus_height !== undefined && object.consensus_height !== null)\n      ? Height.fromPartial(object.consensus_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    message.host_consensus_state_proof = object.host_consensus_state_proof ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgConnectionOpenTryResponse(): MsgConnectionOpenTryResponse {\n  return {};\n}\n\nexport const MsgConnectionOpenTryResponse = {\n  encode(_: MsgConnectionOpenTryResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgConnectionOpenTryResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenTryResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgConnectionOpenTryResponse {\n    return {};\n  },\n\n  toJSON(_: MsgConnectionOpenTryResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgConnectionOpenTryResponse>): MsgConnectionOpenTryResponse {\n    return MsgConnectionOpenTryResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgConnectionOpenTryResponse>): MsgConnectionOpenTryResponse {\n    const message = createBaseMsgConnectionOpenTryResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgConnectionOpenAck(): MsgConnectionOpenAck {\n  return {\n    connection_id: \"\",\n    counterparty_connection_id: \"\",\n    version: undefined,\n    client_state: undefined,\n    proof_height: undefined,\n    proof_try: new Uint8Array(0),\n    proof_client: new Uint8Array(0),\n    proof_consensus: new Uint8Array(0),\n    consensus_height: undefined,\n    signer: \"\",\n    host_consensus_state_proof: new Uint8Array(0),\n  };\n}\n\nexport const MsgConnectionOpenAck = {\n  encode(message: MsgConnectionOpenAck, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.connection_id !== \"\") {\n      writer.uint32(10).string(message.connection_id);\n    }\n    if (message.counterparty_connection_id !== \"\") {\n      writer.uint32(18).string(message.counterparty_connection_id);\n    }\n    if (message.version !== undefined) {\n      Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.client_state !== undefined) {\n      Any.encode(message.client_state, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.proof_try.length !== 0) {\n      writer.uint32(50).bytes(message.proof_try);\n    }\n    if (message.proof_client.length !== 0) {\n      writer.uint32(58).bytes(message.proof_client);\n    }\n    if (message.proof_consensus.length !== 0) {\n      writer.uint32(66).bytes(message.proof_consensus);\n    }\n    if (message.consensus_height !== undefined) {\n      Height.encode(message.consensus_height, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(82).string(message.signer);\n    }\n    if (message.host_consensus_state_proof.length !== 0) {\n      writer.uint32(90).bytes(message.host_consensus_state_proof);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgConnectionOpenAck {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenAck();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.connection_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.counterparty_connection_id = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.version = Version.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.client_state = Any.decode(reader, reader.uint32());\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.proof_try = reader.bytes();\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.proof_client = reader.bytes();\n          continue;\n        case 8:\n          if (tag !== 66) {\n            break;\n          }\n\n          message.proof_consensus = reader.bytes();\n          continue;\n        case 9:\n          if (tag !== 74) {\n            break;\n          }\n\n          message.consensus_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 10:\n          if (tag !== 82) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n        case 11:\n          if (tag !== 90) {\n            break;\n          }\n\n          message.host_consensus_state_proof = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgConnectionOpenAck {\n    return {\n      connection_id: isSet(object.connection_id) ? globalThis.String(object.connection_id) : \"\",\n      counterparty_connection_id: isSet(object.counterparty_connection_id)\n        ? globalThis.String(object.counterparty_connection_id)\n        : \"\",\n      version: isSet(object.version) ? Version.fromJSON(object.version) : undefined,\n      client_state: isSet(object.client_state) ? Any.fromJSON(object.client_state) : undefined,\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      proof_try: isSet(object.proof_try) ? bytesFromBase64(object.proof_try) : new Uint8Array(0),\n      proof_client: isSet(object.proof_client) ? bytesFromBase64(object.proof_client) : new Uint8Array(0),\n      proof_consensus: isSet(object.proof_consensus) ? bytesFromBase64(object.proof_consensus) : new Uint8Array(0),\n      consensus_height: isSet(object.consensus_height) ? Height.fromJSON(object.consensus_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n      host_consensus_state_proof: isSet(object.host_consensus_state_proof)\n        ? bytesFromBase64(object.host_consensus_state_proof)\n        : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgConnectionOpenAck): unknown {\n    const obj: any = {};\n    if (message.connection_id !== \"\") {\n      obj.connection_id = message.connection_id;\n    }\n    if (message.counterparty_connection_id !== \"\") {\n      obj.counterparty_connection_id = message.counterparty_connection_id;\n    }\n    if (message.version !== undefined) {\n      obj.version = Version.toJSON(message.version);\n    }\n    if (message.client_state !== undefined) {\n      obj.client_state = Any.toJSON(message.client_state);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.proof_try.length !== 0) {\n      obj.proof_try = base64FromBytes(message.proof_try);\n    }\n    if (message.proof_client.length !== 0) {\n      obj.proof_client = base64FromBytes(message.proof_client);\n    }\n    if (message.proof_consensus.length !== 0) {\n      obj.proof_consensus = base64FromBytes(message.proof_consensus);\n    }\n    if (message.consensus_height !== undefined) {\n      obj.consensus_height = Height.toJSON(message.consensus_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    if (message.host_consensus_state_proof.length !== 0) {\n      obj.host_consensus_state_proof = base64FromBytes(message.host_consensus_state_proof);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgConnectionOpenAck>): MsgConnectionOpenAck {\n    return MsgConnectionOpenAck.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgConnectionOpenAck>): MsgConnectionOpenAck {\n    const message = createBaseMsgConnectionOpenAck();\n    message.connection_id = object.connection_id ?? \"\";\n    message.counterparty_connection_id = object.counterparty_connection_id ?? \"\";\n    message.version = (object.version !== undefined && object.version !== null)\n      ? Version.fromPartial(object.version)\n      : undefined;\n    message.client_state = (object.client_state !== undefined && object.client_state !== null)\n      ? Any.fromPartial(object.client_state)\n      : undefined;\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.proof_try = object.proof_try ?? new Uint8Array(0);\n    message.proof_client = object.proof_client ?? new Uint8Array(0);\n    message.proof_consensus = object.proof_consensus ?? new Uint8Array(0);\n    message.consensus_height = (object.consensus_height !== undefined && object.consensus_height !== null)\n      ? Height.fromPartial(object.consensus_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    message.host_consensus_state_proof = object.host_consensus_state_proof ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgConnectionOpenAckResponse(): MsgConnectionOpenAckResponse {\n  return {};\n}\n\nexport const MsgConnectionOpenAckResponse = {\n  encode(_: MsgConnectionOpenAckResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgConnectionOpenAckResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenAckResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgConnectionOpenAckResponse {\n    return {};\n  },\n\n  toJSON(_: MsgConnectionOpenAckResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgConnectionOpenAckResponse>): MsgConnectionOpenAckResponse {\n    return MsgConnectionOpenAckResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgConnectionOpenAckResponse>): MsgConnectionOpenAckResponse {\n    const message = createBaseMsgConnectionOpenAckResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgConnectionOpenConfirm(): MsgConnectionOpenConfirm {\n  return { connection_id: \"\", proof_ack: new Uint8Array(0), proof_height: undefined, signer: \"\" };\n}\n\nexport const MsgConnectionOpenConfirm = {\n  encode(message: MsgConnectionOpenConfirm, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.connection_id !== \"\") {\n      writer.uint32(10).string(message.connection_id);\n    }\n    if (message.proof_ack.length !== 0) {\n      writer.uint32(18).bytes(message.proof_ack);\n    }\n    if (message.proof_height !== undefined) {\n      Height.encode(message.proof_height, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgConnectionOpenConfirm {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenConfirm();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.connection_id = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.proof_ack = reader.bytes();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.proof_height = Height.decode(reader, reader.uint32());\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgConnectionOpenConfirm {\n    return {\n      connection_id: isSet(object.connection_id) ? globalThis.String(object.connection_id) : \"\",\n      proof_ack: isSet(object.proof_ack) ? bytesFromBase64(object.proof_ack) : new Uint8Array(0),\n      proof_height: isSet(object.proof_height) ? Height.fromJSON(object.proof_height) : undefined,\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n    };\n  },\n\n  toJSON(message: MsgConnectionOpenConfirm): unknown {\n    const obj: any = {};\n    if (message.connection_id !== \"\") {\n      obj.connection_id = message.connection_id;\n    }\n    if (message.proof_ack.length !== 0) {\n      obj.proof_ack = base64FromBytes(message.proof_ack);\n    }\n    if (message.proof_height !== undefined) {\n      obj.proof_height = Height.toJSON(message.proof_height);\n    }\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgConnectionOpenConfirm>): MsgConnectionOpenConfirm {\n    return MsgConnectionOpenConfirm.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgConnectionOpenConfirm>): MsgConnectionOpenConfirm {\n    const message = createBaseMsgConnectionOpenConfirm();\n    message.connection_id = object.connection_id ?? \"\";\n    message.proof_ack = object.proof_ack ?? new Uint8Array(0);\n    message.proof_height = (object.proof_height !== undefined && object.proof_height !== null)\n      ? Height.fromPartial(object.proof_height)\n      : undefined;\n    message.signer = object.signer ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgConnectionOpenConfirmResponse(): MsgConnectionOpenConfirmResponse {\n  return {};\n}\n\nexport const MsgConnectionOpenConfirmResponse = {\n  encode(_: MsgConnectionOpenConfirmResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgConnectionOpenConfirmResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenConfirmResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgConnectionOpenConfirmResponse {\n    return {};\n  },\n\n  toJSON(_: MsgConnectionOpenConfirmResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgConnectionOpenConfirmResponse>): MsgConnectionOpenConfirmResponse {\n    return MsgConnectionOpenConfirmResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgConnectionOpenConfirmResponse>): MsgConnectionOpenConfirmResponse {\n    const message = createBaseMsgConnectionOpenConfirmResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateParams(): MsgUpdateParams {\n  return { signer: \"\", params: undefined };\n}\n\nexport const MsgUpdateParams = {\n  encode(message: MsgUpdateParams, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.signer !== \"\") {\n      writer.uint32(10).string(message.signer);\n    }\n    if (message.params !== undefined) {\n      Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParams {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.signer = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.params = Params.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateParams {\n    return {\n      signer: isSet(object.signer) ? globalThis.String(object.signer) : \"\",\n      params: isSet(object.params) ? Params.fromJSON(object.params) : undefined,\n    };\n  },\n\n  toJSON(message: MsgUpdateParams): unknown {\n    const obj: any = {};\n    if (message.signer !== \"\") {\n      obj.signer = message.signer;\n    }\n    if (message.params !== undefined) {\n      obj.params = Params.toJSON(message.params);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateParams>): MsgUpdateParams {\n    return MsgUpdateParams.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgUpdateParams>): MsgUpdateParams {\n    const message = createBaseMsgUpdateParams();\n    message.signer = object.signer ?? \"\";\n    message.params = (object.params !== undefined && object.params !== null)\n      ? Params.fromPartial(object.params)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateParamsResponse(): MsgUpdateParamsResponse {\n  return {};\n}\n\nexport const MsgUpdateParamsResponse = {\n  encode(_: MsgUpdateParamsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParamsResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParamsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateParamsResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateParamsResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse {\n    return MsgUpdateParamsResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse {\n    const message = createBaseMsgUpdateParamsResponse();\n    return message;\n  },\n};\n\n/** Msg defines the ibc/connection Msg service. */\nexport interface Msg {\n  /** ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit. */\n  ConnectionOpenInit(request: MsgConnectionOpenInit): Promise<MsgConnectionOpenInitResponse>;\n  /** ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry. */\n  ConnectionOpenTry(request: MsgConnectionOpenTry): Promise<MsgConnectionOpenTryResponse>;\n  /** ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck. */\n  ConnectionOpenAck(request: MsgConnectionOpenAck): Promise<MsgConnectionOpenAckResponse>;\n  /**\n   * ConnectionOpenConfirm defines a rpc handler method for\n   * MsgConnectionOpenConfirm.\n   */\n  ConnectionOpenConfirm(request: MsgConnectionOpenConfirm): Promise<MsgConnectionOpenConfirmResponse>;\n  /**\n   * UpdateConnectionParams defines a rpc handler method for\n   * MsgUpdateParams.\n   */\n  UpdateConnectionParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse>;\n}\n\nexport const MsgServiceName = \"ibc.core.connection.v1.Msg\";\nexport class MsgClientImpl implements Msg {\n  private readonly rpc: Rpc;\n  private readonly service: string;\n  constructor(rpc: Rpc, opts?: { service?: string }) {\n    this.service = opts?.service || MsgServiceName;\n    this.rpc = rpc;\n    this.ConnectionOpenInit = this.ConnectionOpenInit.bind(this);\n    this.ConnectionOpenTry = this.ConnectionOpenTry.bind(this);\n    this.ConnectionOpenAck = this.ConnectionOpenAck.bind(this);\n    this.ConnectionOpenConfirm = this.ConnectionOpenConfirm.bind(this);\n    this.UpdateConnectionParams = this.UpdateConnectionParams.bind(this);\n  }\n  ConnectionOpenInit(request: MsgConnectionOpenInit): Promise<MsgConnectionOpenInitResponse> {\n    const data = MsgConnectionOpenInit.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ConnectionOpenInit\", data);\n    return promise.then((data) => MsgConnectionOpenInitResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ConnectionOpenTry(request: MsgConnectionOpenTry): Promise<MsgConnectionOpenTryResponse> {\n    const data = MsgConnectionOpenTry.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ConnectionOpenTry\", data);\n    return promise.then((data) => MsgConnectionOpenTryResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ConnectionOpenAck(request: MsgConnectionOpenAck): Promise<MsgConnectionOpenAckResponse> {\n    const data = MsgConnectionOpenAck.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ConnectionOpenAck\", data);\n    return promise.then((data) => MsgConnectionOpenAckResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ConnectionOpenConfirm(request: MsgConnectionOpenConfirm): Promise<MsgConnectionOpenConfirmResponse> {\n    const data = MsgConnectionOpenConfirm.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ConnectionOpenConfirm\", data);\n    return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateConnectionParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse> {\n    const data = MsgUpdateParams.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateConnectionParams\", data);\n    return promise.then((data) => MsgUpdateParamsResponse.decode(_m0.Reader.create(data)));\n  }\n}\n\ninterface Rpc {\n  request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;\n}\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n  if ((globalThis as any).Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\n\nfunction base64FromBytes(arr: Uint8Array): string {\n  if ((globalThis as any).Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin: string[] = [];\n    arr.forEach((byte) => {\n      bin.push(globalThis.String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToString(long: Long) {\n  return long.toString();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":";AAAA,sDAAsD;AACtD,YAAY;AACZ,kCAAkC;AAClC,iCAAiC;AACjC,0CAA0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE1C,kBAAA,EAAoB,CACpB,MAAA,SAAA,iCAAwB;AACxB,MAAA,MAAA,4CAA0C;AAC1C,MAAA,mDAAsD;AACtD,MAAA,6CAAgD;AAChD,MAAA,uCAA6D;AAEhD,QAAA,eAAe,GAAG,wBAAwB,CAAC;AA6HxD,SAAS,+BAA+B;IACtC,OAAO;QAAE,SAAS,EAAE,EAAE;QAAE,YAAY,EAAE,SAAS;QAAE,OAAO,EAAE,SAAS;QAAE,YAAY,EAAE,GAAG;QAAE,MAAM,EAAE,EAAE;IAAA,CAAE,CAAC;AACvG,CAAC;AAEY,QAAA,qBAAqB,GAAG;IACnC,MAAM,EAAC,OAA8B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC7E,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC7C;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,aAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAC9E;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,aAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACpE;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,GAAG,EAAE;YAChC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAChD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACpC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,aAAA,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACpE,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,aAAA,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC1D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBAC7D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;YAC7E,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAA,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YACjG,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAA,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;YAC7E,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG;YACvF,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA8B;QACnC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;SACnC;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,aAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC9D;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,GAAG,CAAC,OAAO,GAAG,aAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC/C;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,GAAG,EAAE;YAChC,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;SACzC;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAyC;QAC9C,OAAO,QAAA,qBAAqB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACvD,CAAC;IACD,WAAW,EAAC,MAA0C;;QACpD,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,OAAO,CAAC,SAAS,GAAG,CAAA,KAAA,MAAM,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC3C,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,aAAA,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GAC7C,SAAS,CAAC;QACd,OAAO,CAAC,OAAO,GAAG,AAAC,MAAM,CAAC,OAAO,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,EACvE,aAAA,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,GACnC,SAAS,CAAC;QACd,OAAO,CAAC,YAAY,GAAG,CAAA,KAAA,MAAM,CAAC,YAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QAClD,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,uCAAuC;IAC9C,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,6BAA6B,GAAG;IAC3C,MAAM,EAAC,CAAgC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC/E,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,uCAAuC,EAAE,CAAC;QAC1D,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAAgC;QACrC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAiD;QACtD,OAAO,QAAA,6BAA6B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC/D,CAAC;IACD,WAAW,EAAC,CAA6C;QACvD,MAAM,OAAO,GAAG,uCAAuC,EAAE,CAAC;QAC1D,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,8BAA8B;IACrC,OAAO;QACL,SAAS,EAAE,EAAE;QACb,sBAAsB,EAAE,EAAE;QAC1B,YAAY,EAAE,SAAS;QACvB,YAAY,EAAE,SAAS;QACvB,YAAY,EAAE,GAAG;QACjB,qBAAqB,EAAE,EAAE;QACzB,YAAY,EAAE,SAAS;QACvB,UAAU,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC7B,YAAY,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC/B,eAAe,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAClC,gBAAgB,EAAE,SAAS;QAC3B,MAAM,EAAE,EAAE;QACV,0BAA0B,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;KAC9C,CAAC;AACJ,CAAC;AAEY,QAAA,oBAAoB,GAAG;IAClC,MAAM,EAAC,OAA6B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC5E,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC7C;QACD,IAAI,OAAO,CAAC,sBAAsB,KAAK,EAAE,EAAE;YACzC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;SAC1D;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,MAAA,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACrE;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,aAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAC9E;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,GAAG,EAAE;YAChC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAChD;QACD,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,qBAAqB,CAAE;YAC7C,aAAA,OAAO,CAAC,MAAM,CAAC,CAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACvD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACnC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC7C;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC/C;QACD,IAAI,OAAO,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SAClD;QACD,IAAI,OAAO,CAAC,gBAAgB,KAAK,SAAS,EAAE;YAC1C,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAC5E;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,IAAI,OAAO,CAAC,0BAA0B,CAAC,MAAM,KAAK,CAAC,EAAE;YACnD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;SAC9D;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,8BAA8B,EAAE,CAAC;QACjD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACpC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,sBAAsB,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjD,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,MAAA,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC3D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,aAAA,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACpE,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBAC7D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAA,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAC5E,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACpC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACtC,SAAS;gBACX,KAAK,EAAE;oBACL,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,eAAe,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACzC,SAAS;gBACX,KAAK,EAAE;oBACL,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,gBAAgB,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAClE,SAAS;gBACX,KAAK,EAAE;oBACL,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;gBACX,KAAK,EAAE;oBACL,IAAI,GAAG,KAAK,GAAG,EAAE;wBACf,MAAM;qBACP;oBAED,OAAO,CAAC,0BAA0B,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACpD,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;YAC7E,sBAAsB,EAAE,KAAK,CAAC,MAAM,CAAC,sBAAsB,CAAC,GACxD,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAChD,EAAE;YACN,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAA,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YACxF,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAA,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YACjG,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG;YACvF,qBAAqB,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,qBAAqB,CAAC,GAC1E,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,CAAG,CAAD,YAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GACjE,EAAE;YACN,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC7F,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACnG,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC5G,gBAAgB,EAAE,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS;YACvG,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;YACpE,0BAA0B,EAAE,KAAK,CAAC,MAAM,CAAC,0BAA0B,CAAC,GAChE,eAAe,CAAC,MAAM,CAAC,0BAA0B,CAAC,GAClD,IAAI,UAAU,CAAC,CAAC,CAAC;SACtB,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA6B;;QAClC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;SACnC;QACD,IAAI,OAAO,CAAC,sBAAsB,KAAK,EAAE,EAAE;YACzC,GAAG,CAAC,sBAAsB,GAAG,OAAO,CAAC,sBAAsB,CAAC;SAC7D;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,MAAA,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACrD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,aAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC9D;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,GAAG,EAAE;YAChC,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;SACzC;QACD,IAAI,CAAA,KAAA,OAAO,CAAC,qBAAqB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM,EAAE;YACzC,GAAG,CAAC,qBAAqB,GAAG,OAAO,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,YAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACzF;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACnC,GAAG,CAAC,UAAU,GAAG,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SACtD;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,GAAG,CAAC,YAAY,GAAG,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC1D;QACD,IAAI,OAAO,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,GAAG,CAAC,eAAe,GAAG,eAAe,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SAChE;QACD,IAAI,OAAO,CAAC,gBAAgB,KAAK,SAAS,EAAE;YAC1C,GAAG,CAAC,gBAAgB,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SAChE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,IAAI,OAAO,CAAC,0BAA0B,CAAC,MAAM,KAAK,CAAC,EAAE;YACnD,GAAG,CAAC,0BAA0B,GAAG,eAAe,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;SACtF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAwC;QAC7C,OAAO,QAAA,oBAAoB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACtD,CAAC;IACD,WAAW,EAAC,MAAyC;;QACnD,MAAM,OAAO,GAAG,8BAA8B,EAAE,CAAC;QACjD,OAAO,CAAC,SAAS,GAAG,CAAA,KAAA,MAAM,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC3C,OAAO,CAAC,sBAAsB,GAAG,CAAA,KAAA,MAAM,CAAC,sBAAsB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrE,OAAO,CAAC,YAAY,GAAI,AAAD,MAAO,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,MAAA,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACpC,SAAS,CAAC;QACd,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,aAAA,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GAC7C,SAAS,CAAC;QACd,OAAO,CAAC,YAAY,GAAG,CAAA,KAAA,MAAM,CAAC,YAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QAClD,OAAO,CAAC,qBAAqB,GAAG,CAAA,CAAA,KAAA,MAAM,CAAC,qBAAqB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,YAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAI,EAAE,CAAC;QACvG,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,UAAU,GAAG,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC5D,OAAO,CAAC,YAAY,GAAG,CAAA,KAAA,MAAM,CAAC,YAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAChE,OAAO,CAAC,eAAe,GAAG,CAAA,KAAA,MAAM,CAAC,eAAe,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACtE,OAAO,CAAC,gBAAgB,GAAG,AAAC,MAAM,CAAC,gBAAgB,KAAK,SAAS,IAAI,MAAM,CAAC,gBAAgB,KAAK,IAAI,CAAC,EAClG,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAC3C,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,CAAC,0BAA0B,GAAG,CAAA,KAAA,MAAM,CAAC,0BAA0B,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC5F,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,sCAAsC;IAC7C,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,4BAA4B,GAAG;IAC1C,MAAM,EAAC,CAA+B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC9E,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,sCAAsC,EAAE,CAAC;QACzD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAA+B;QACpC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAgD;QACrD,OAAO,QAAA,4BAA4B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC9D,CAAC;IACD,WAAW,EAAC,CAA4C;QACtD,MAAM,OAAO,GAAG,sCAAsC,EAAE,CAAC;QACzD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,8BAA8B;IACrC,OAAO;QACL,aAAa,EAAE,EAAE;QACjB,0BAA0B,EAAE,EAAE;QAC9B,OAAO,EAAE,SAAS;QAClB,YAAY,EAAE,SAAS;QACvB,YAAY,EAAE,SAAS;QACvB,SAAS,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC5B,YAAY,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC/B,eAAe,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAClC,gBAAgB,EAAE,SAAS;QAC3B,MAAM,EAAE,EAAE;QACV,0BAA0B,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;KAC9C,CAAC;AACJ,CAAC;AAEY,QAAA,oBAAoB,GAAG;IAClC,MAAM,EAAC,OAA6B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC5E,IAAI,OAAO,CAAC,aAAa,KAAK,EAAE,EAAE;YAChC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SACjD;QACD,IAAI,OAAO,CAAC,0BAA0B,KAAK,EAAE,EAAE;YAC7C,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;SAC9D;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,aAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACpE;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,MAAA,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACrE;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC5C;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC/C;QACD,IAAI,OAAO,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SAClD;QACD,IAAI,OAAO,CAAC,gBAAgB,KAAK,SAAS,EAAE;YAC1C,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAC5E;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,IAAI,OAAO,CAAC,0BAA0B,CAAC,MAAM,KAAK,CAAC,EAAE;YACnD,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;SAC7D;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,8BAA8B,EAAE,CAAC;QACjD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACxC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,0BAA0B,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACrD,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,aAAA,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC1D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,MAAA,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC3D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACnC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACtC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,eAAe,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACzC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,gBAAgB,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAClE,SAAS;gBACX,KAAK,EAAE;oBACL,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;gBACX,KAAK,EAAE;oBACL,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,0BAA0B,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACpD,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;YACzF,0BAA0B,EAAE,KAAK,CAAC,MAAM,CAAC,0BAA0B,CAAC,GAChE,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,0BAA0B,CAAC,GACpD,EAAE;YACN,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAA,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;YAC7E,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAA,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YACxF,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC1F,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACnG,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC5G,gBAAgB,EAAE,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS;YACvG,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;YACpE,0BAA0B,EAAE,KAAK,CAAC,MAAM,CAAC,0BAA0B,CAAC,GAChE,eAAe,CAAC,MAAM,CAAC,0BAA0B,CAAC,GAClD,IAAI,UAAU,CAAC,CAAC,CAAC;SACtB,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA6B;QAClC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,aAAa,KAAK,EAAE,EAAE;YAChC,GAAG,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,0BAA0B,KAAK,EAAE,EAAE;YAC7C,GAAG,CAAC,0BAA0B,GAAG,OAAO,CAAC,0BAA0B,CAAC;SACrE;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACjC,GAAG,CAAC,OAAO,GAAG,aAAA,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC/C;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,MAAA,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACrD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,GAAG,CAAC,SAAS,GAAG,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SACpD;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,GAAG,CAAC,YAAY,GAAG,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC1D;QACD,IAAI,OAAO,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,GAAG,CAAC,eAAe,GAAG,eAAe,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SAChE;QACD,IAAI,OAAO,CAAC,gBAAgB,KAAK,SAAS,EAAE;YAC1C,GAAG,CAAC,gBAAgB,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SAChE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,IAAI,OAAO,CAAC,0BAA0B,CAAC,MAAM,KAAK,CAAC,EAAE;YACnD,GAAG,CAAC,0BAA0B,GAAG,eAAe,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;SACtF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAwC;QAC7C,OAAO,QAAA,oBAAoB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACtD,CAAC;IACD,WAAW,EAAC,MAAyC;;QACnD,MAAM,OAAO,GAAG,8BAA8B,EAAE,CAAC;QACjD,OAAO,CAAC,aAAa,GAAG,CAAA,KAAA,MAAM,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACnD,OAAO,CAAC,0BAA0B,GAAG,CAAA,KAAA,MAAM,CAAC,0BAA0B,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7E,OAAO,CAAC,OAAO,GAAG,AAAC,MAAM,CAAC,OAAO,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,EACvE,aAAA,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,GACnC,SAAS,CAAC;QACd,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,MAAA,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACpC,SAAS,CAAC;QACd,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,SAAS,GAAG,CAAA,KAAA,MAAM,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC1D,OAAO,CAAC,YAAY,GAAG,CAAA,KAAA,MAAM,CAAC,YAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAChE,OAAO,CAAC,eAAe,GAAG,CAAA,KAAA,MAAM,CAAC,eAAe,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACtE,OAAO,CAAC,gBAAgB,GAAI,AAAD,MAAO,CAAC,gBAAgB,KAAK,SAAS,IAAI,MAAM,CAAC,gBAAgB,KAAK,IAAI,CAAC,EAClG,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAC3C,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,CAAC,0BAA0B,GAAG,CAAA,KAAA,MAAM,CAAC,0BAA0B,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC5F,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,sCAAsC;IAC7C,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,4BAA4B,GAAG;IAC1C,MAAM,EAAC,CAA+B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC9E,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,sCAAsC,EAAE,CAAC;QACzD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAA+B;QACpC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAgD;QACrD,OAAO,QAAA,4BAA4B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC9D,CAAC;IACD,WAAW,EAAC,CAA4C;QACtD,MAAM,OAAO,GAAG,sCAAsC,EAAE,CAAC;QACzD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,kCAAkC;IACzC,OAAO;QAAE,aAAa,EAAE,EAAE;QAAE,SAAS,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAAE,YAAY,EAAE,SAAS;QAAE,MAAM,EAAE,EAAE;IAAA,CAAE,CAAC;AAClG,CAAC;AAEY,QAAA,wBAAwB,GAAG;IACtC,MAAM,EAAC,OAAiC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAChF,IAAI,OAAO,CAAC,aAAa,KAAK,EAAE,EAAE;YAChC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SACjD;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC5C;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,kCAAkC,EAAE,CAAC;QACrD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACxC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACnC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;YACzF,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC1F,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3F,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACrE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAiC;QACtC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,aAAa,KAAK,EAAE,EAAE;YAChC,GAAG,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,GAAG,CAAC,SAAS,GAAG,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SACpD;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACtC,GAAG,CAAC,YAAY,GAAG,SAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA4C;QACjD,OAAO,QAAA,wBAAwB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC1D,CAAC;IACD,WAAW,EAAC,MAA6C;;QACvD,MAAM,OAAO,GAAG,kCAAkC,EAAE,CAAC;QACrD,OAAO,CAAC,aAAa,GAAG,CAAA,KAAA,MAAM,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACnD,OAAO,CAAC,SAAS,GAAG,CAAA,KAAA,MAAM,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC1D,OAAO,CAAC,YAAY,GAAG,AAAC,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,EACtF,SAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,GACvC,SAAS,CAAC;QACd,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,0CAA0C;IACjD,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,gCAAgC,GAAG;IAC9C,MAAM,EAAC,CAAmC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAClF,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,0CAA0C,EAAE,CAAC;QAC7D,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAAmC;QACxC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAoD;QACzD,OAAO,QAAA,gCAAgC,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAClE,CAAC;IACD,WAAW,EAAC,CAAgD;QAC1D,MAAM,OAAO,GAAG,0CAA0C,EAAE,CAAC;QAC7D,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,yBAAyB;IAChC,OAAO;QAAE,MAAM,EAAE,EAAE;QAAE,MAAM,EAAE,SAAS;IAAA,CAAE,CAAC;AAC3C,CAAC;AAEY,QAAA,eAAe,GAAG;IAC7B,MAAM,EAAC,OAAwB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACvE,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,aAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SAClE;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,yBAAyB,EAAE,CAAC;QAC5C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,aAAA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACxD,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;YACpE,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS;SAC1E,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAwB;QAC7B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YAChC,GAAG,CAAC,MAAM,GAAG,aAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC5C;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAmC;QACxC,OAAO,QAAA,eAAe,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACjD,CAAC;IACD,WAAW,EAAC,MAAoC;;QAC9C,MAAM,OAAO,GAAG,yBAAyB,EAAE,CAAC;QAC5C,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,CAAC,MAAM,GAAI,AAAD,MAAO,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,EACpE,aAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GACjC,SAAS,CAAC;QACd,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,iCAAiC;IACxC,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,uBAAuB,GAAG;IACrC,MAAM,EAAC,CAA0B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACzE,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,iCAAiC,EAAE,CAAC;QACpD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAA0B;QAC/B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA2C;QAChD,OAAO,QAAA,uBAAuB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACzD,CAAC;IACD,WAAW,EAAC,CAAuC;QACjD,MAAM,OAAO,GAAG,iCAAiC,EAAE,CAAC;QACpD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAsBW,QAAA,cAAc,GAAG,4BAA4B,CAAC;AAC3D,MAAa,aAAa;IAGxB,YAAY,GAAQ,EAAE,IAA2B,CAAA;QAC/C,IAAI,CAAC,OAAO,GAAG,CAAA,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAA,KAAA,IAAJ,IAAI,CAAE,OAAO,KAAI,QAAA,cAAc,CAAC;QAC/C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvE,CAAC;IACD,kBAAkB,CAAC,OAA8B,EAAA;QAC/C,MAAM,IAAI,GAAG,QAAA,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC5D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,oBAAoB,EAAE,IAAI,CAAC,CAAC;QAC3E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,6BAA6B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/F,CAAC;IAED,iBAAiB,CAAC,OAA6B,EAAA;QAC7C,MAAM,IAAI,GAAG,QAAA,oBAAoB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC3D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAC1E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,4BAA4B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9F,CAAC;IAED,iBAAiB,CAAC,OAA6B,EAAA;QAC7C,MAAM,IAAI,GAAG,QAAA,oBAAoB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC3D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAC1E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,4BAA4B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9F,CAAC;IAED,qBAAqB,CAAC,OAAiC,EAAA;QACrD,MAAM,IAAI,GAAG,QAAA,wBAAwB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,uBAAuB,EAAE,IAAI,CAAC,CAAC;QAC9E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,gCAAgC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClG,CAAC;IAED,sBAAsB,CAAC,OAAwB,EAAA;QAC7C,MAAM,IAAI,GAAG,QAAA,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACtD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,wBAAwB,EAAE,IAAI,CAAC,CAAC;QAC/E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,uBAAuB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzF,CAAC;CACF;AAzCD,QAAA,aAAA,GAAA,cAyCC;AAMD,SAAS,eAAe,CAAC,GAAW;IAClC,IAAK,UAAkB,CAAC,MAAM,EAAE;QAC9B,OAAO,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;KAC/D,MAAM;QACL,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE;YACnC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC5B;QACD,OAAO,GAAG,CAAC;KACZ;AACH,CAAC;AAED,SAAS,eAAe,CAAC,GAAe;IACtC,IAAK,UAAkB,CAAC,MAAM,EAAE;QAC9B,OAAO,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACvD,MAAM;QACL,MAAM,GAAG,GAAa,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACnB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;KACtC;AACH,CAAC;AAUD,SAAS,YAAY,CAAC,IAAU;IAC9B,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;AACzB,CAAC;AAED,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,OAAA,OAAI,EAAE;IAC1B,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,OAAA,OAAW,CAAC;IAC5B,GAAG,CAAC,SAAS,EAAE,CAAC;CACjB;AAED,SAAS,KAAK,CAAC,KAAU;IACvB,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AAC/C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11067, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}