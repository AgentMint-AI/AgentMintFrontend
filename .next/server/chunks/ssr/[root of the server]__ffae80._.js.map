{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/constant.ts"],"sourcesContent":["import { Address } from \"viem\";\nimport { abi as Erc20TokenFactoryABI } from \"./compiledContracts/Erc20TokenFactory.json\";\n\n// if (!process.env.NEXT_PUBLIC_EVM_CONTRACT_ADDRESS) {\n//   throw new Error(\"NEXT_PUBLIC_EVM_CONTRACT_ADDRESS is not set\");\n// }\n\nexport const evmContractAddress = process.env\n  .NEXT_PUBLIC_EVM_CONTRACT_ADDRESS as Address;\n\nexport const wagmiContractConfig = {\n  address: evmContractAddress,\n  abi: Erc20TokenFactoryABI,\n} as const;\n\nexport const LOCAL_RPC_URL = \"http://127.0.0.1:8545\";\n"],"names":[],"mappings":";;;;;AACA;;AAMO,MAAM;AAGN,MAAM,sBAAsB;IACjC,SAAS;IACT,KAAK,4HAAA,CAAA,MAAoB;AAC3B;AAEO,MAAM,gBAAgB"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/hooks/OnChain/useReadContracts.ts"],"sourcesContent":["import { useReadContract } from \"wagmi\";\nimport { wagmiContractConfig } from \"@/lib/constant\";\n\ninterface TokenShowcase {\n  owner: string;\n  chain: number; // Chain enum: 0=SECRETNETWORK, 1=EVM, 2=SOLANA, 3=TON\n  tokenAddress: string;\n  showcaseCid: string;\n  tokenMetadataCid: string;\n  createdAt: bigint;\n}\n\ninterface UserTokenInfo {\n  chain: number;\n  tokenAddress: string;\n  showcaseCid: string;\n  tokenMetadataCid: string;\n  hasShowcase: boolean;\n}\n\n// Create separate hooks for dynamic queries\nexport function useTokenShowcaseByAddress(tokenAddress: string) {\n  const { data, isError, isLoading } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getTokenShowcaseByAddress\",\n    args: [tokenAddress],\n  });\n\n  return {\n    data: data as TokenShowcase,\n    isError,\n    isLoading,\n  };\n}\n\nexport function useTokenShowcasesByPage(page: number, pageSize: number) {\n  const { data, isError, isLoading } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getTokenShowcasesByPage\",\n    args: [page, pageSize],\n  });\n\n  return {\n    data: data as TokenShowcase[],\n    isError,\n    isLoading,\n  };\n}\n\nexport function useShowcaseCid(ownerBytes: string, index: number) {\n  const { data, isError, isLoading } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getShowcaseCid\",\n    args: [ownerBytes, index],\n  });\n\n  return {\n    data: data as string,\n    isError,\n    isLoading,\n  };\n}\n\nexport function useReadContracts(ownerAddress: string) {\n  // For all chains, we'll use the address directly as a string\n  const ownerString = ownerAddress;\n\n  // Read token count for owner\n  const {\n    data: tokenCount,\n    isError: tokenCountError,\n    isLoading: tokenCountLoading,\n  } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getTokenCount\",\n    args: [ownerString],\n  });\n\n  // Read token details for owner\n  const {\n    data: tokenDetails,\n    isError: tokenDetailsError,\n    isLoading: tokenDetailsLoading,\n  } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getTokenContract\",\n    args: [ownerString],\n  });\n\n  // Read all token showcases\n  const {\n    data: allShowcases,\n    isError: allShowcasesError,\n    isLoading: allShowcasesLoading,\n  } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getAllTokenShowcases\",\n    args: [],\n  });\n\n  // Read showcase count\n  const {\n    data: showcaseCount,\n    isError: showcaseCountError,\n    isLoading: showcaseCountLoading,\n  } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getShowcaseCount\",\n    args: [],\n  });\n\n  return {\n    tokenCount: tokenCount as number,\n    tokenDetails: tokenDetails as UserTokenInfo[],\n    allShowcases: allShowcases as TokenShowcase[],\n    showcaseCount: showcaseCount as number,\n    isError:\n      tokenCountError ||\n      tokenDetailsError ||\n      allShowcasesError ||\n      showcaseCountError,\n    isLoading:\n      tokenCountLoading ||\n      tokenDetailsLoading ||\n      allShowcasesLoading ||\n      showcaseCountLoading,\n  };\n}\n"],"names":[],"mappings":";;;;;;AACA;AADA;;;AAqBO,SAAS,0BAA0B,YAAoB;IAC5D,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,4WAAA,CAAA,kBAAe,AAAD,EAAE;QACnD,GAAG,sHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM;YAAC;SAAa;IACtB;IAEA,OAAO;QACL,MAAM;QACN;QACA;IACF;AACF;AAEO,SAAS,wBAAwB,IAAY,EAAE,QAAgB;IACpE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,4WAAA,CAAA,kBAAe,AAAD,EAAE;QACnD,GAAG,sHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM;YAAC;YAAM;SAAS;IACxB;IAEA,OAAO;QACL,MAAM;QACN;QACA;IACF;AACF;AAEO,SAAS,eAAe,UAAkB,EAAE,KAAa;IAC9D,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,4WAAA,CAAA,kBAAe,AAAD,EAAE;QACnD,GAAG,sHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM;YAAC;YAAY;SAAM;IAC3B;IAEA,OAAO;QACL,MAAM;QACN;QACA;IACF;AACF;AAEO,SAAS,iBAAiB,YAAoB;IACnD,6DAA6D;IAC7D,MAAM,cAAc;IAEpB,6BAA6B;IAC7B,MAAM,EACJ,MAAM,UAAU,EAChB,SAAS,eAAe,EACxB,WAAW,iBAAiB,EAC7B,GAAG,CAAA,GAAA,4WAAA,CAAA,kBAAe,AAAD,EAAE;QAClB,GAAG,sHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM;YAAC;SAAY;IACrB;IAEA,+BAA+B;IAC/B,MAAM,EACJ,MAAM,YAAY,EAClB,SAAS,iBAAiB,EAC1B,WAAW,mBAAmB,EAC/B,GAAG,CAAA,GAAA,4WAAA,CAAA,kBAAe,AAAD,EAAE;QAClB,GAAG,sHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM;YAAC;SAAY;IACrB;IAEA,2BAA2B;IAC3B,MAAM,EACJ,MAAM,YAAY,EAClB,SAAS,iBAAiB,EAC1B,WAAW,mBAAmB,EAC/B,GAAG,CAAA,GAAA,4WAAA,CAAA,kBAAe,AAAD,EAAE;QAClB,GAAG,sHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM,EAAE;IACV;IAEA,sBAAsB;IACtB,MAAM,EACJ,MAAM,aAAa,EACnB,SAAS,kBAAkB,EAC3B,WAAW,oBAAoB,EAChC,GAAG,CAAA,GAAA,4WAAA,CAAA,kBAAe,AAAD,EAAE;QAClB,GAAG,sHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM,EAAE;IACV;IAEA,OAAO;QACL,YAAY;QACZ,cAAc;QACd,cAAc;QACd,eAAe;QACf,SACE,mBACA,qBACA,qBACA;QACF,WACE,qBACA,uBACA,uBACA;IACJ;AACF"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/dashboard/tokens/_components/TokenDetailHeader.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { formatAddress } from \"@/lib/utils\";\nimport { useRouter } from \"next/navigation\";\n\ninterface TokenDetailHeaderProps {\n  token: {\n    tokenAddress: string;\n    chain: number;\n  };\n}\n\nexport function TokenDetailHeader({ token }: TokenDetailHeaderProps) {\n  const router = useRouter();\n\n  const getChainIcon = (chainId: number) => {\n    switch (chainId) {\n      case 0: // SECRETNETWORK\n        return <Icons.secret className=\"w-4 h-4 mr-2\" />;\n      case 1: // EVM\n        return <Icons.taurus className=\"w-4 h-4 mr-2\" />;\n      case 2: // SOLANA\n        return <Icons.solana className=\"w-4 h-4 mr-2\" />;\n      case 3: // TON\n        return <Icons.ton className=\"w-4 h-4 mr-2\" />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"flex justify-between items-center mb-8\">\n      <div>\n        <div className=\"flex items-center gap-2 mb-2\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => router.push(\"/dashboard/tokens\")}\n          >\n            <Icons.arrowLeft className=\"w-4 h-4 mr-2\" />\n            Back\n          </Button>\n          <h1 className=\"text-2xl font-bold\">\n            {formatAddress(token.tokenAddress)}\n          </h1>\n        </div>\n        <p className=\"text-gray-500 flex items-center\">\n          Chain: {getChainIcon(token.chain)} {token.chain}\n        </p>\n      </div>\n      <div className=\"flex gap-2\">\n        <Button\n          onClick={() => router.push(`/create/agent/${token.tokenAddress}`)}\n          className=\"bg-purple-500 hover:bg-purple-600\"\n        >\n          <Icons.plus className=\"w-4 h-4 mr-2\" />\n          Create Agent\n        </Button>\n        <Button\n          onClick={() => router.push(`/showcase/${token.tokenAddress}`)}\n          variant=\"outline\"\n        >\n          <Icons.eye className=\"w-4 h-4 mr-2\" />\n          View Showcase\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AASO,SAAS,kBAAkB,EAAE,KAAK,EAA0B;IACjE,MAAM,SAAS,CAAA,GAAA,mSAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,CAAC;QACpB,OAAQ;YACN,KAAK;gBACH,qBAAO,+YAAC,iIAAA,CAAA,QAAK,CAAC,MAAM;oBAAC,WAAU;;;;;;YACjC,KAAK;gBACH,qBAAO,+YAAC,iIAAA,CAAA,QAAK,CAAC,MAAM;oBAAC,WAAU;;;;;;YACjC,KAAK;gBACH,qBAAO,+YAAC,iIAAA,CAAA,QAAK,CAAC,MAAM;oBAAC,WAAU;;;;;;YACjC,KAAK;gBACH,qBAAO,+YAAC,iIAAA,CAAA,QAAK,CAAC,GAAG;oBAAC,WAAU;;;;;;YAC9B;gBACE,OAAO;QACX;IACF;IAEA,qBACE,+YAAC;QAAI,WAAU;;0BACb,+YAAC;;kCACC,+YAAC;wBAAI,WAAU;;0CACb,+YAAC,kIAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS,IAAM,OAAO,IAAI,CAAC;;kDAE3B,+YAAC,iIAAA,CAAA,QAAK,CAAC,SAAS;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;0CAG9C,+YAAC;gCAAG,WAAU;0CACX,CAAA,GAAA,mHAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,YAAY;;;;;;;;;;;;kCAGrC,+YAAC;wBAAE,WAAU;;4BAAkC;4BACrC,aAAa,MAAM,KAAK;4BAAE;4BAAE,MAAM,KAAK;;;;;;;;;;;;;0BAGnD,+YAAC;gBAAI,WAAU;;kCACb,+YAAC,kIAAA,CAAA,SAAM;wBACL,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,cAAc,EAAE,MAAM,YAAY,EAAE;wBAChE,WAAU;;0CAEV,+YAAC,iIAAA,CAAA,QAAK,CAAC,IAAI;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAGzC,+YAAC,kIAAA,CAAA,SAAM;wBACL,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,UAAU,EAAE,MAAM,YAAY,EAAE;wBAC5D,SAAQ;;0CAER,+YAAC,iIAAA,CAAA,QAAK,CAAC,GAAG;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;;AAMhD"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/dashboard/tokens/_components/TokenActions.tsx"],"sourcesContent":["import { Card } from \"@/components/ui/card\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { useRouter } from \"next/navigation\";\n\ninterface TokenActionsProps {\n  token: {\n    tokenAddress: string;\n    chain: number;\n    metadata?: {\n      isMintable?: boolean;\n      isBurnable?: boolean;\n      isPausable?: boolean;\n    };\n  };\n}\n\nexport function TokenActions({ token }: TokenActionsProps) {\n  const router = useRouter();\n\n  const actions = [\n    {\n      label: \"Mint Tokens\",\n      icon: <Icons.plus className=\"w-4 h-4\" />,\n      onClick: () =>\n        router.push(`/dashboard/tokens/${token.tokenAddress}/mint`),\n      disabled: !token.metadata?.isMintable,\n      description: \"Create new tokens\",\n    },\n    {\n      label: \"Burn Tokens\",\n      icon: <Icons.flame className=\"w-4 h-4\" />,\n      onClick: () =>\n        router.push(`/dashboard/tokens/${token.tokenAddress}/burn`),\n      disabled: !token.metadata?.isBurnable,\n      description: \"Remove tokens from circulation\",\n    },\n    {\n      label: \"Transfer\",\n      icon: <Icons.send className=\"w-4 h-4\" />,\n      onClick: () =>\n        router.push(`/dashboard/tokens/${token.tokenAddress}/transfer`),\n      disabled: false,\n      description: \"Send tokens to another address\",\n    },\n    {\n      label: token.metadata?.isPausable\n        ? \"Pause Transfers\"\n        : \"Resume Transfers\",\n      icon: token.metadata?.isPausable ? (\n        <Icons.pause className=\"w-4 h-4\" />\n      ) : (\n        <Icons.play className=\"w-4 h-4\" />\n      ),\n      onClick: () =>\n        router.push(`/dashboard/tokens/${token.tokenAddress}/pause`),\n      disabled: !token.metadata?.isPausable,\n      description: \"Control token transfers\",\n    },\n  ];\n\n  return (\n    <div className=\"mb-8\">\n      <h2 className=\"text-xl font-semibold mb-4\">Token Actions</h2>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {actions.map((action) => (\n          <Card\n            key={action.label}\n            className={`p-4 cursor-pointer transition-colors ${\n              action.disabled\n                ? \"opacity-50 cursor-not-allowed\"\n                : \"hover:border-purple-500/50\"\n            }`}\n            onClick={!action.disabled ? action.onClick : undefined}\n          >\n            <div className=\"flex items-center gap-2 mb-2\">\n              {action.icon}\n              <span className=\"font-medium\">{action.label}</span>\n            </div>\n            <p className=\"text-sm text-gray-500\">{action.description}</p>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAcO,SAAS,aAAa,EAAE,KAAK,EAAqB;IACvD,MAAM,SAAS,CAAA,GAAA,mSAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,UAAU;QACd;YACE,OAAO;YACP,oBAAM,+YAAC,iIAAA,CAAA,QAAK,CAAC,IAAI;gBAAC,WAAU;;;;;;YAC5B,SAAS,IACP,OAAO,IAAI,CAAC,CAAC,kBAAkB,EAAE,MAAM,YAAY,CAAC,KAAK,CAAC;YAC5D,UAAU,CAAC,MAAM,QAAQ,EAAE;YAC3B,aAAa;QACf;QACA;YACE,OAAO;YACP,oBAAM,+YAAC,iIAAA,CAAA,QAAK,CAAC,KAAK;gBAAC,WAAU;;;;;;YAC7B,SAAS,IACP,OAAO,IAAI,CAAC,CAAC,kBAAkB,EAAE,MAAM,YAAY,CAAC,KAAK,CAAC;YAC5D,UAAU,CAAC,MAAM,QAAQ,EAAE;YAC3B,aAAa;QACf;QACA;YACE,OAAO;YACP,oBAAM,+YAAC,iIAAA,CAAA,QAAK,CAAC,IAAI;gBAAC,WAAU;;;;;;YAC5B,SAAS,IACP,OAAO,IAAI,CAAC,CAAC,kBAAkB,EAAE,MAAM,YAAY,CAAC,SAAS,CAAC;YAChE,UAAU;YACV,aAAa;QACf;QACA;YACE,OAAO,MAAM,QAAQ,EAAE,aACnB,oBACA;YACJ,MAAM,MAAM,QAAQ,EAAE,2BACpB,+YAAC,iIAAA,CAAA,QAAK,CAAC,KAAK;gBAAC,WAAU;;;;;qCAEvB,+YAAC,iIAAA,CAAA,QAAK,CAAC,IAAI;gBAAC,WAAU;;;;;;YAExB,SAAS,IACP,OAAO,IAAI,CAAC,CAAC,kBAAkB,EAAE,MAAM,YAAY,CAAC,MAAM,CAAC;YAC7D,UAAU,CAAC,MAAM,QAAQ,EAAE;YAC3B,aAAa;QACf;KACD;IAED,qBACE,+YAAC;QAAI,WAAU;;0BACb,+YAAC;gBAAG,WAAU;0BAA6B;;;;;;0BAC3C,+YAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,+YAAC,gIAAA,CAAA,OAAI;wBAEH,WAAW,CAAC,qCAAqC,EAC/C,OAAO,QAAQ,GACX,kCACA,8BACJ;wBACF,SAAS,CAAC,OAAO,QAAQ,GAAG,OAAO,OAAO,GAAG;;0CAE7C,+YAAC;gCAAI,WAAU;;oCACZ,OAAO,IAAI;kDACZ,+YAAC;wCAAK,WAAU;kDAAe,OAAO,KAAK;;;;;;;;;;;;0CAE7C,+YAAC;gCAAE,WAAU;0CAAyB,OAAO,WAAW;;;;;;;uBAZnD,OAAO,KAAK;;;;;;;;;;;;;;;;AAkB7B"}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,2XAAc,IAAI;AAE/B,MAAM,yBAAW,uWAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC,2XAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,2XAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,uWAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC,2XAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,2XAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,uWAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC,2XAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,2XAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/hooks/OnChain/useContractLogs.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { usePublicClient } from \"wagmi\";\nimport { wagmiContractConfig } from \"@/lib/constant\";\nimport { formatEther } from \"viem\";\n\nexport interface TokenLog {\n  type: \"mint\" | \"burn\" | \"transfer\" | \"pause\" | \"resume\";\n  hash: string;\n  from: string;\n  to?: string;\n  amount?: string;\n  timestamp: number;\n  blockNumber: number;\n}\n\nexport function useContractLogs(tokenAddress: string) {\n  const [logs, setLogs] = useState<TokenLog[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n  const publicClient = usePublicClient();\n\n  const fetchLogs = async () => {\n    try {\n      setIsLoading(true);\n\n      // Get all relevant events\n      const events = await publicClient?.getContractEvents({\n        address: tokenAddress as `0x${string}`,\n        abi: wagmiContractConfig.abi,\n        fromBlock: 0n,\n        toBlock: \"latest\",\n        strict: true,\n      });\n\n      if (!events) return;\n\n      // Process and format the logs\n      const formattedLogs = await Promise.all(\n        events.map(async (event) => {\n          const block = await publicClient?.getBlock({\n            blockNumber: event.blockNumber,\n          });\n\n          if (!block) throw new Error(\"Failed to fetch block\");\n\n          let type: TokenLog[\"type\"];\n          switch (event.eventName) {\n            case \"Transfer\":\n              type = \"transfer\";\n              break;\n            case \"Mint\":\n              type = \"mint\";\n              break;\n            case \"Burn\":\n              type = \"burn\";\n              break;\n            case \"Paused\":\n              type = \"pause\";\n              break;\n            case \"Unpaused\":\n              type = \"resume\";\n              break;\n            default:\n              type = \"transfer\";\n          }\n\n          return {\n            type,\n            hash: event.transactionHash,\n            from: event.args?.from || event.args?.operator || \"\",\n            to: event.args?.to,\n            amount: event.args?.amount\n              ? formatEther(event.args.amount)\n              : undefined,\n            timestamp: Number(block.timestamp),\n            blockNumber: Number(event.blockNumber),\n          } satisfies TokenLog;\n        })\n      );\n\n      // Sort logs by timestamp (newest first)\n      const sortedLogs = formattedLogs.sort(\n        (a, b) => b.timestamp - a.timestamp\n      );\n      setLogs(sortedLogs);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching logs:\", err);\n      setError(err instanceof Error ? err : new Error(\"Failed to fetch logs\"));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (tokenAddress) {\n      fetchLogs();\n    }\n  }, [tokenAddress, publicClient]);\n\n  return {\n    logs,\n    isLoading,\n    error,\n    refresh: () => {\n      if (tokenAddress) {\n        setIsLoading(true);\n        setError(null);\n        fetchLogs();\n      }\n    },\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AADA;AAEA;;;;;AAYO,SAAS,gBAAgB,YAAoB;IAClD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAgB;IACjD,MAAM,eAAe,CAAA,GAAA,4WAAA,CAAA,kBAAe,AAAD;IAEnC,MAAM,YAAY;QAChB,IAAI;YACF,aAAa;YAEb,0BAA0B;YAC1B,MAAM,SAAS,MAAM,cAAc,kBAAkB;gBACnD,SAAS;gBACT,KAAK,sHAAA,CAAA,sBAAmB,CAAC,GAAG;gBAC5B,WAAW,EAAE;gBACb,SAAS;gBACT,QAAQ;YACV;YAEA,IAAI,CAAC,QAAQ;YAEb,8BAA8B;YAC9B,MAAM,gBAAgB,MAAM,QAAQ,GAAG,CACrC,OAAO,GAAG,CAAC,OAAO;gBAChB,MAAM,QAAQ,MAAM,cAAc,SAAS;oBACzC,aAAa,MAAM,WAAW;gBAChC;gBAEA,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM;gBAE5B,IAAI;gBACJ,OAAQ,MAAM,SAAS;oBACrB,KAAK;wBACH,OAAO;wBACP;oBACF,KAAK;wBACH,OAAO;wBACP;oBACF,KAAK;wBACH,OAAO;wBACP;oBACF,KAAK;wBACH,OAAO;wBACP;oBACF,KAAK;wBACH,OAAO;wBACP;oBACF;wBACE,OAAO;gBACX;gBAEA,OAAO;oBACL;oBACA,MAAM,MAAM,eAAe;oBAC3B,MAAM,MAAM,IAAI,EAAE,QAAQ,MAAM,IAAI,EAAE,YAAY;oBAClD,IAAI,MAAM,IAAI,EAAE;oBAChB,QAAQ,MAAM,IAAI,EAAE,SAChB,CAAA,GAAA,2TAAA,CAAA,cAAW,AAAD,EAAE,MAAM,IAAI,CAAC,MAAM,IAC7B;oBACJ,WAAW,OAAO,MAAM,SAAS;oBACjC,aAAa,OAAO,MAAM,WAAW;gBACvC;YACF;YAGF,wCAAwC;YACxC,MAAM,aAAa,cAAc,IAAI,CACnC,CAAC,GAAG,IAAM,EAAE,SAAS,GAAG,EAAE,SAAS;YAErC,QAAQ;YACR,SAAS;QACX,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,wBAAwB;YACtC,SAAS,eAAe,QAAQ,MAAM,IAAI,MAAM;QAClD,SAAU;YACR,aAAa;QACf;IACF;IAEA,CAAA,GAAA,sWAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,cAAc;YAChB;QACF;IACF,GAAG;QAAC;QAAc;KAAa;IAE/B,OAAO;QACL;QACA;QACA;QACA,SAAS;YACP,IAAI,cAAc;gBAChB,aAAa;gBACb,SAAS;gBACT;YACF;QACF;IACF;AACF"}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 621, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/dashboard/tokens/_components/TokenHistory.tsx"],"sourcesContent":["import { Card } from \"@/components/ui/card\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { formatAddress } from \"@/lib/utils\";\nimport { useContractLogs } from \"@/hooks/OnChain/useContractLogs\";\n\ninterface Transaction {\n  type: \"mint\" | \"burn\" | \"transfer\" | \"pause\" | \"resume\";\n  hash: string;\n  from: string;\n  to?: string;\n  amount?: string;\n  timestamp: number;\n}\n\ninterface TokenHistoryProps {\n  token: {\n    tokenAddress: string;\n    transactions?: Transaction[];\n  };\n}\n\nexport function TokenHistory({ token }: TokenHistoryProps) {\n  const { logs, isLoading, error } = useContractLogs(token.tokenAddress);\n\n  const getTransactionIcon = (type: Transaction[\"type\"]) => {\n    const icons = {\n      mint: <Icons.plus className=\"w-4 h-4 text-green-500\" />,\n      burn: <Icons.flame className=\"w-4 h-4 text-red-500\" />,\n      transfer: <Icons.send className=\"w-4 h-4 text-blue-500\" />,\n      pause: <Icons.pause className=\"w-4 h-4 text-yellow-500\" />,\n      resume: <Icons.play className=\"w-4 h-4 text-green-500\" />,\n    };\n    return icons[type];\n  };\n\n  if (isLoading) {\n    return (\n      <div>\n        <h2 className=\"text-xl font-semibold mb-4\">Transaction History</h2>\n        <Card className=\"p-8 text-center\">\n          <Icons.spinner className=\"w-6 h-6 animate-spin mx-auto\" />\n          <p className=\"mt-2 text-gray-500\">Loading transaction history...</p>\n        </Card>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div>\n        <h2 className=\"text-xl font-semibold mb-4\">Transaction History</h2>\n        <Card className=\"p-8 text-center\">\n          <Icons.alertTriangle className=\"w-6 h-6 text-red-500 mx-auto\" />\n          <p className=\"mt-2 text-red-500\">Error loading transaction history</p>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-xl font-semibold mb-4\">Transaction History</h2>\n      <Card className=\"overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"border-b border-gray-800\">\n                <th className=\"text-left p-4\">Type</th>\n                <th className=\"text-left p-4\">Transaction</th>\n                <th className=\"text-left p-4\">From</th>\n                <th className=\"text-left p-4\">To</th>\n                <th className=\"text-left p-4\">Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              {logs.map((tx) => (\n                <tr\n                  key={tx.hash}\n                  className=\"border-b border-gray-800 hover:bg-gray-900/50\"\n                >\n                  <td className=\"p-4\">\n                    <div className=\"flex items-center gap-2\">\n                      {getTransactionIcon(tx.type)}\n                      <span>\n                        {tx.type.charAt(0).toUpperCase() + tx.type.slice(1)}\n                      </span>\n                    </div>\n                  </td>\n                  <td className=\"p-4\">\n                    <a\n                      href={`https://etherscan.io/tx/${tx.hash}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-purple-400 hover:text-purple-300\"\n                    >\n                      {formatAddress(tx.hash)}\n                    </a>\n                  </td>\n                  <td className=\"p-4\">{formatAddress(tx.from)}</td>\n                  <td className=\"p-4\">{tx.to ? formatAddress(tx.to) : \"-\"}</td>\n                  <td className=\"p-4\">\n                    {new Date(tx.timestamp * 1000).toLocaleString()}\n                  </td>\n                </tr>\n              ))}\n              {(!logs || logs.length === 0) && (\n                <tr>\n                  <td colSpan={5} className=\"text-center p-8 text-gray-500\">\n                    No transactions found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 953, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 959, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/dashboard/tokens/_components/TokenStats.tsx"],"sourcesContent":["import { Card } from \"@/components/ui/card\";\nimport { Icons } from \"@/components/ui/icons\";\n\ninterface TokenStatsProps {\n  token: {\n    tokenAddress: string;\n    chain: number;\n    metadata?: {\n      totalSupply?: string;\n      circulatingSupply?: string;\n      holders?: number;\n      price?: string;\n      marketCap?: string;\n    };\n  };\n}\n\nexport function TokenStats({ token }: TokenStatsProps) {\n  const stats = [\n    {\n      label: \"Total Supply\",\n      value: token.metadata?.totalSupply || \"N/A\",\n      icon: <Icons.coins className=\"w-4 h-4 text-purple-500\" />,\n    },\n    {\n      label: \"Circulating Supply\",\n      value: token.metadata?.circulatingSupply || \"N/A\",\n      icon: <Icons.circulate className=\"w-4 h-4 text-blue-500\" />,\n    },\n    {\n      label: \"Holders\",\n      value: token.metadata?.holders?.toLocaleString() || \"N/A\",\n      icon: <Icons.users className=\"w-4 h-4 text-green-500\" />,\n    },\n    {\n      label: \"Price\",\n      value: token.metadata?.price || \"N/A\",\n      icon: <Icons.dollarSign className=\"w-4 h-4 text-yellow-500\" />,\n    },\n    {\n      label: \"Market Cap\",\n      value: token.metadata?.marketCap || \"N/A\",\n      icon: <Icons.chartBar className=\"w-4 h-4 text-red-500\" />,\n    },\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4 mb-8\">\n      {stats.map((stat) => (\n        <Card key={stat.label} className=\"p-4\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            {stat.icon}\n            <span className=\"text-sm text-gray-500\">{stat.label}</span>\n          </div>\n          <p className=\"text-lg font-semibold\">{stat.value}</p>\n        </Card>\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAgBO,SAAS,WAAW,EAAE,KAAK,EAAmB;IACnD,MAAM,QAAQ;QACZ;YACE,OAAO;YACP,OAAO,MAAM,QAAQ,EAAE,eAAe;YACtC,oBAAM,+YAAC,iIAAA,CAAA,QAAK,CAAC,KAAK;gBAAC,WAAU;;;;;;QAC/B;QACA;YACE,OAAO;YACP,OAAO,MAAM,QAAQ,EAAE,qBAAqB;YAC5C,oBAAM,+YAAC,iIAAA,CAAA,QAAK,CAAC,SAAS;gBAAC,WAAU;;;;;;QACnC;QACA;YACE,OAAO;YACP,OAAO,MAAM,QAAQ,EAAE,SAAS,oBAAoB;YACpD,oBAAM,+YAAC,iIAAA,CAAA,QAAK,CAAC,KAAK;gBAAC,WAAU;;;;;;QAC/B;QACA;YACE,OAAO;YACP,OAAO,MAAM,QAAQ,EAAE,SAAS;YAChC,oBAAM,+YAAC,iIAAA,CAAA,QAAK,CAAC,UAAU;gBAAC,WAAU;;;;;;QACpC;QACA;YACE,OAAO;YACP,OAAO,MAAM,QAAQ,EAAE,aAAa;YACpC,oBAAM,+YAAC,iIAAA,CAAA,QAAK,CAAC,QAAQ;gBAAC,WAAU;;;;;;QAClC;KACD;IAED,qBACE,+YAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,qBACV,+YAAC,gIAAA,CAAA,OAAI;gBAAkB,WAAU;;kCAC/B,+YAAC;wBAAI,WAAU;;4BACZ,KAAK,IAAI;0CACV,+YAAC;gCAAK,WAAU;0CAAyB,KAAK,KAAK;;;;;;;;;;;;kCAErD,+YAAC;wBAAE,WAAU;kCAAyB,KAAK,KAAK;;;;;;;eALvC,KAAK,KAAK;;;;;;;;;;AAU7B"}},
    {"offset": {"line": 1069, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1075, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/dashboard/tokens/%5BtokenAddress%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { useTokenShowcaseByAddress } from \"@/hooks/OnChain/useReadContracts\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { Card } from \"@/components/ui/card\";\nimport { TokenDetailHeader } from \"../_components/TokenDetailHeader\";\nimport { TokenActions } from \"../_components/TokenActions\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { TokenHistory } from \"../_components/TokenHistory\";\nimport { TokenStats } from \"../_components/TokenStats\";\n\nexport default function TokenDetailPage({\n  params,\n}: {\n  params: { tokenAddress: string };\n}) {\n  const { tokenAddress } = React.use(params);\n  const {\n    data: token,\n    isLoading,\n    isError,\n  } = useTokenShowcaseByAddress(tokenAddress);\n\n  if (isLoading) {\n    return (\n      <div className=\"container max-w-6xl mx-auto px-4 py-16 text-center\">\n        <Icons.spinner className=\"w-8 h-8 animate-spin mx-auto\" />\n      </div>\n    );\n  }\n\n  if (isError || !token) {\n    return (\n      <div className=\"container max-w-6xl mx-auto px-4 py-16\">\n        <Card className=\"p-8 text-center\">\n          <Icons.alertCircle className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-bold text-red-500 mb-2\">\n            Token Not Found\n          </h2>\n          <p className=\"text-gray-500\">\n            The token you&apos;re looking for doesn&apos;t exist or there was an\n            error loading it.\n          </p>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container max-w-6xl mx-auto px-4 py-16\">\n      <TokenDetailHeader token={token} />\n\n      <Tabs defaultValue=\"overview\" className=\"mb-8\">\n        <TabsList>\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"actions\">Actions</TabsTrigger>\n          <TabsTrigger value=\"history\">History</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\">\n          <TokenStats token={token} />\n        </TabsContent>\n\n        <TabsContent value=\"actions\">\n          <TokenActions token={token} />\n        </TabsContent>\n\n        <TabsContent value=\"history\">\n          <TokenHistory token={token} />\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;;;;;;;;;;AAYe,SAAS,gBAAgB,EACtC,MAAM,EAGP;IACC,MAAM,EAAE,YAAY,EAAE,GAAG,uWAAM,GAAG,CAAC;IACnC,MAAM,EACJ,MAAM,KAAK,EACX,SAAS,EACT,OAAO,EACR,GAAG,CAAA,GAAA,2IAAA,CAAA,4BAAyB,AAAD,EAAE;IAE9B,IAAI,WAAW;QACb,qBACE,+YAAC;YAAI,WAAU;sBACb,cAAA,+YAAC,iIAAA,CAAA,QAAK,CAAC,OAAO;gBAAC,WAAU;;;;;;;;;;;IAG/B;IAEA,IAAI,WAAW,CAAC,OAAO;QACrB,qBACE,+YAAC;YAAI,WAAU;sBACb,cAAA,+YAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,+YAAC,iIAAA,CAAA,QAAK,CAAC,WAAW;wBAAC,WAAU;;;;;;kCAC7B,+YAAC;wBAAG,WAAU;kCAAsC;;;;;;kCAGpD,+YAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;IAOrC;IAEA,qBACE,+YAAC;QAAI,WAAU;;0BACb,+YAAC,sKAAA,CAAA,oBAAiB;gBAAC,OAAO;;;;;;0BAE1B,+YAAC,gIAAA,CAAA,OAAI;gBAAC,cAAa;gBAAW,WAAU;;kCACtC,+YAAC,gIAAA,CAAA,WAAQ;;0CACP,+YAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAW;;;;;;0CAC9B,+YAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAU;;;;;;0CAC7B,+YAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAU;;;;;;;;;;;;kCAG/B,+YAAC,gIAAA,CAAA,cAAW;wBAAC,OAAM;kCACjB,cAAA,+YAAC,+JAAA,CAAA,aAAU;4BAAC,OAAO;;;;;;;;;;;kCAGrB,+YAAC,gIAAA,CAAA,cAAW;wBAAC,OAAM;kCACjB,cAAA,+YAAC,iKAAA,CAAA,eAAY;4BAAC,OAAO;;;;;;;;;;;kCAGvB,+YAAC,gIAAA,CAAA,cAAW;wBAAC,OAAM;kCACjB,cAAA,+YAAC,iKAAA,CAAA,eAAY;4BAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;AAK/B"}},
    {"offset": {"line": 1260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}