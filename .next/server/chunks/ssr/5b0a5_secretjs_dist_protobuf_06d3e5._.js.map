{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"any.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/google/protobuf/any.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: google/protobuf/any.proto\n\n/* eslint-disable */\nimport * as _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * `Any` contains an arbitrary serialized protocol buffer message along with a\n * URL that describes the type of the serialized message.\n *\n * Protobuf library provides support to pack/unpack Any values in the form\n * of utility functions or additional generated methods of the Any type.\n *\n * Example 1: Pack and unpack a message in C++.\n *\n *     Foo foo = ...;\n *     Any any;\n *     any.PackFrom(foo);\n *     ...\n *     if (any.UnpackTo(&foo)) {\n *       ...\n *     }\n *\n * Example 2: Pack and unpack a message in Java.\n *\n *     Foo foo = ...;\n *     Any any = Any.pack(foo);\n *     ...\n *     if (any.is(Foo.class)) {\n *       foo = any.unpack(Foo.class);\n *     }\n *\n *  Example 3: Pack and unpack a message in Python.\n *\n *     foo = Foo(...)\n *     any = Any()\n *     any.Pack(foo)\n *     ...\n *     if any.Is(Foo.DESCRIPTOR):\n *       any.Unpack(foo)\n *       ...\n *\n *  Example 4: Pack and unpack a message in Go\n *\n *      foo := &pb.Foo{...}\n *      any, err := ptypes.MarshalAny(foo)\n *      ...\n *      foo := &pb.Foo{}\n *      if err := ptypes.UnmarshalAny(any, foo); err != nil {\n *        ...\n *      }\n *\n * The pack methods provided by protobuf library will by default use\n * 'type.googleapis.com/full.type.name' as the type URL and the unpack\n * methods only use the fully qualified type name after the last '/'\n * in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n * name \"y.z\".\n *\n * JSON\n * ====\n * The JSON representation of an `Any` value uses the regular\n * representation of the deserialized, embedded message, with an\n * additional field `@type` which contains the type URL. Example:\n *\n *     package google.profile;\n *     message Person {\n *       string first_name = 1;\n *       string last_name = 2;\n *     }\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.profile.Person\",\n *       \"firstName\": <string>,\n *       \"lastName\": <string>\n *     }\n *\n * If the embedded message type is well-known and has a custom JSON\n * representation, that representation will be embedded adding a field\n * `value` which holds the custom JSON in addition to the `@type`\n * field. Example (for message [google.protobuf.Duration][]):\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n *       \"value\": \"1.212s\"\n *     }\n */\nexport interface Any {\n  /**\n   * A URL/resource name that uniquely identifies the type of the serialized\n   * protocol buffer message. This string must contain at least\n   * one \"/\" character. The last segment of the URL's path must represent\n   * the fully qualified name of the type (as in\n   * `path/google.protobuf.Duration`). The name should be in a canonical form\n   * (e.g., leading \".\" is not accepted).\n   *\n   * In practice, teams usually precompile into the binary all types that they\n   * expect it to use in the context of Any. However, for URLs which use the\n   * scheme `http`, `https`, or no scheme, one can optionally set up a type\n   * server that maps type URLs to message definitions as follows:\n   *\n   * * If no scheme is provided, `https` is assumed.\n   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   *   value in binary format, or produce an error.\n   * * Applications are allowed to cache lookup results based on the\n   *   URL, or have them precompiled into a binary to avoid any\n   *   lookup. Therefore, binary compatibility needs to be preserved\n   *   on changes to types. (Use versioned type names to manage\n   *   breaking changes.)\n   *\n   * Note: this functionality is not currently available in the official\n   * protobuf release, and it is not used for type URLs beginning with\n   * type.googleapis.com.\n   *\n   * Schemes other than `http`, `https` (or the empty scheme) might be\n   * used with implementation specific semantics.\n   */\n  type_url: string;\n  /** Must be a valid serialized protocol buffer of the above specified type. */\n  value: Uint8Array;\n}\n\nfunction createBaseAny(): Any {\n  return { type_url: \"\", value: new Uint8Array(0) };\n}\n\nexport const Any = {\n  encode(message: Any, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.type_url !== \"\") {\n      writer.uint32(10).string(message.type_url);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Any {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseAny();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.type_url = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.value = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Any {\n    return {\n      type_url: isSet(object.type_url) ? globalThis.String(object.type_url) : \"\",\n      value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: Any): unknown {\n    const obj: any = {};\n    if (message.type_url !== \"\") {\n      obj.type_url = message.type_url;\n    }\n    if (message.value.length !== 0) {\n      obj.value = base64FromBytes(message.value);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Any>): Any {\n    return Any.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Any>): Any {\n    const message = createBaseAny();\n    message.type_url = object.type_url ?? \"\";\n    message.value = object.value ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n  if ((globalThis as any).Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\n\nfunction base64FromBytes(arr: Uint8Array): string {\n  if ((globalThis as any).Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin: string[] = [];\n    arr.forEach((byte) => {\n      bin.push(globalThis.String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"file":"timestamp.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/google/protobuf/timestamp.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: google/protobuf/timestamp.proto\n\n/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * A Timestamp represents a point in time independent of any time zone or local\n * calendar, encoded as a count of seconds and fractions of seconds at\n * nanosecond resolution. The count is relative to an epoch at UTC midnight on\n * January 1, 1970, in the proleptic Gregorian calendar which extends the\n * Gregorian calendar backwards to year one.\n *\n * All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n * second table is needed for interpretation, using a [24-hour linear\n * smear](https://developers.google.com/time/smear).\n *\n * The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n * restricting to that range, we ensure that we can convert to and from [RFC\n * 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n *\n * # Examples\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n * Example 5: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n *\n * # JSON Mapping\n *\n * In JSON format, the Timestamp type is encoded as a string in the\n * [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n * format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n * where {year} is always expressed using four digits while {month}, {day},\n * {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n * seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n * are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n * is required. A proto3 JSON serializer should always use UTC (as indicated by\n * \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n * able to accept both UTC and other timezones (as indicated by an offset).\n *\n * For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n * 01:30 UTC on January 15, 2017.\n *\n * In JavaScript, one can convert a Date object to this format using the\n * standard\n * [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n * method. In Python, a standard `datetime.datetime` object can be converted\n * to this format using\n * [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n * the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n * the Joda Time's [`ISODateTimeFormat.dateTime()`](\n * http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D\n * ) to obtain a formatter capable of generating timestamps in this format.\n */\nexport interface Timestamp {\n  /**\n   * Represents seconds of UTC time since Unix epoch\n   * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   * 9999-12-31T23:59:59Z inclusive.\n   */\n  seconds: string;\n  /**\n   * Non-negative fractions of a second at nanosecond resolution. Negative\n   * second values with fractions must still have non-negative nanos values\n   * that count forward in time. Must be from 0 to 999,999,999\n   * inclusive.\n   */\n  nanos: number;\n}\n\nfunction createBaseTimestamp(): Timestamp {\n  return { seconds: \"0\", nanos: 0 };\n}\n\nexport const Timestamp = {\n  encode(message: Timestamp, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.seconds !== \"0\") {\n      writer.uint32(8).int64(message.seconds);\n    }\n    if (message.nanos !== 0) {\n      writer.uint32(16).int32(message.nanos);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Timestamp {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseTimestamp();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.seconds = longToString(reader.int64() as Long);\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.nanos = reader.int32();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Timestamp {\n    return {\n      seconds: isSet(object.seconds) ? globalThis.String(object.seconds) : \"0\",\n      nanos: isSet(object.nanos) ? globalThis.Number(object.nanos) : 0,\n    };\n  },\n\n  toJSON(message: Timestamp): unknown {\n    const obj: any = {};\n    if (message.seconds !== \"0\") {\n      obj.seconds = message.seconds;\n    }\n    if (message.nanos !== 0) {\n      obj.nanos = Math.round(message.nanos);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Timestamp>): Timestamp {\n    return Timestamp.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Timestamp>): Timestamp {\n    const message = createBaseTimestamp();\n    message.seconds = object.seconds ?? \"0\";\n    message.nanos = object.nanos ?? 0;\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToString(long: Long) {\n  return long.toString();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"file":"duration.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/google/protobuf/duration.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: google/protobuf/duration.proto\n\n/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * A Duration represents a signed, fixed-length span of time represented\n * as a count of seconds and fractions of seconds at nanosecond\n * resolution. It is independent of any calendar and concepts like \"day\"\n * or \"month\". It is related to Timestamp in that the difference between\n * two Timestamp values is a Duration and it can be added or subtracted\n * from a Timestamp. Range is approximately +-10,000 years.\n *\n * # Examples\n *\n * Example 1: Compute Duration from two Timestamps in pseudo code.\n *\n *     Timestamp start = ...;\n *     Timestamp end = ...;\n *     Duration duration = ...;\n *\n *     duration.seconds = end.seconds - start.seconds;\n *     duration.nanos = end.nanos - start.nanos;\n *\n *     if (duration.seconds < 0 && duration.nanos > 0) {\n *       duration.seconds += 1;\n *       duration.nanos -= 1000000000;\n *     } else if (durations.seconds > 0 && duration.nanos < 0) {\n *       duration.seconds -= 1;\n *       duration.nanos += 1000000000;\n *     }\n *\n * Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.\n *\n *     Timestamp start = ...;\n *     Duration duration = ...;\n *     Timestamp end = ...;\n *\n *     end.seconds = start.seconds + duration.seconds;\n *     end.nanos = start.nanos + duration.nanos;\n *\n *     if (end.nanos < 0) {\n *       end.seconds -= 1;\n *       end.nanos += 1000000000;\n *     } else if (end.nanos >= 1000000000) {\n *       end.seconds += 1;\n *       end.nanos -= 1000000000;\n *     }\n *\n * Example 3: Compute Duration from datetime.timedelta in Python.\n *\n *     td = datetime.timedelta(days=3, minutes=10)\n *     duration = Duration()\n *     duration.FromTimedelta(td)\n *\n * # JSON Mapping\n *\n * In JSON format, the Duration type is encoded as a string rather than an\n * object, where the string ends in the suffix \"s\" (indicating seconds) and\n * is preceded by the number of seconds, with nanoseconds expressed as\n * fractional seconds. For example, 3 seconds with 0 nanoseconds should be\n * encoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should\n * be expressed in JSON format as \"3.000000001s\", and 3 seconds and 1\n * microsecond should be expressed in JSON format as \"3.000001s\".\n */\nexport interface Duration {\n  /**\n   * Signed seconds of the span of time. Must be from -315,576,000,000\n   * to +315,576,000,000 inclusive. Note: these bounds are computed from:\n   * 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n   */\n  seconds: string;\n  /**\n   * Signed fractions of a second at nanosecond resolution of the span\n   * of time. Durations less than one second are represented with a 0\n   * `seconds` field and a positive or negative `nanos` field. For durations\n   * of one second or more, a non-zero value for the `nanos` field must be\n   * of the same sign as the `seconds` field. Must be from -999,999,999\n   * to +999,999,999 inclusive.\n   */\n  nanos: number;\n}\n\nfunction createBaseDuration(): Duration {\n  return { seconds: \"0\", nanos: 0 };\n}\n\nexport const Duration = {\n  encode(message: Duration, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.seconds !== \"0\") {\n      writer.uint32(8).int64(message.seconds);\n    }\n    if (message.nanos !== 0) {\n      writer.uint32(16).int32(message.nanos);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Duration {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDuration();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.seconds = longToString(reader.int64() as Long);\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.nanos = reader.int32();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Duration {\n    return {\n      seconds: isSet(object.seconds) ? globalThis.String(object.seconds) : \"0\",\n      nanos: isSet(object.nanos) ? globalThis.Number(object.nanos) : 0,\n    };\n  },\n\n  toJSON(message: Duration): unknown {\n    const obj: any = {};\n    if (message.seconds !== \"0\") {\n      obj.seconds = message.seconds;\n    }\n    if (message.nanos !== 0) {\n      obj.nanos = Math.round(message.nanos);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Duration>): Duration {\n    return Duration.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Duration>): Duration {\n    const message = createBaseDuration();\n    message.seconds = object.seconds ?? \"0\";\n    message.nanos = object.nanos ?? 0;\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToString(long: Long) {\n  return long.toString();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"file":"msg.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/secret/compute/v1beta1/msg.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: secret/compute/v1beta1/msg.proto\n\n/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\n\nexport const protobufPackage = \"secret.compute.v1beta1\";\n\nexport interface MsgStoreCode {\n  /** sender is the canonical address of the sender */\n  sender: Uint8Array;\n  /** WASMByteCode can be raw or gzip compressed */\n  wasm_byte_code: Uint8Array;\n  /**\n   * Source is a valid absolute HTTPS URI to the contract's source code,\n   * optional\n   */\n  source: string;\n  /** Builder is a valid docker image name with tag, optional */\n  builder: string;\n}\n\n/** MsgStoreCodeResponse returns store result data. */\nexport interface MsgStoreCodeResponse {\n  /** CodeID is the reference to the stored WASM code */\n  code_id: string;\n}\n\nexport interface MsgInstantiateContract {\n  /** sender is the canonical address of the sender */\n  sender: Uint8Array;\n  callback_code_hash: string;\n  code_id: string;\n  label: string;\n  /** init_msg is an encrypted input to pass to the contract on init */\n  init_msg: Uint8Array;\n  init_funds: Coin[];\n  /**\n   * used internally for encryption, should always be empty in a signed\n   * transaction\n   */\n  callback_sig: Uint8Array;\n  /** Admin is an optional address that can execute migrations */\n  admin: string;\n}\n\n/** MsgInstantiateContractResponse return instantiation result data */\nexport interface MsgInstantiateContractResponse {\n  /** Address is the bech32 address of the new contract instance. */\n  address: string;\n  /** Data contains base64-encoded bytes to returned from the contract */\n  data: Uint8Array;\n}\n\nexport interface MsgExecuteContract {\n  /** sender is the canonical address of the sender */\n  sender: Uint8Array;\n  /** contract is the canonical address of the contract */\n  contract: Uint8Array;\n  /** msg is an encrypted input to pass to the contract on execute */\n  msg: Uint8Array;\n  /**\n   * used internally for encryption, should always be empty in a signed\n   * transaction\n   */\n  callback_code_hash: string;\n  sent_funds: Coin[];\n  /**\n   * used internally for encryption, should always be empty in a signed\n   * transaction\n   */\n  callback_sig: Uint8Array;\n}\n\n/** MsgExecuteContractResponse returns execution result data. */\nexport interface MsgExecuteContractResponse {\n  /** Data contains base64-encoded bytes to returned from the contract */\n  data: Uint8Array;\n}\n\n/** MsgMigrateContract runs a code upgrade/ downgrade for a smart contract */\nexport interface MsgMigrateContract {\n  /** Sender is the that actor that signed the messages */\n  sender: string;\n  /** Contract is the address of the smart contract */\n  contract: string;\n  /** CodeID references the new WASM code */\n  code_id: string;\n  /** msg is an encrypted input to pass to the contract on migration */\n  msg: Uint8Array;\n  /**\n   * used internally for encryption, should always be empty in a signed\n   * transaction\n   */\n  callback_sig: Uint8Array;\n  /**\n   * used internally for encryption, should always be empty in a signed\n   * transaction\n   */\n  callback_code_hash: string;\n}\n\n/** MsgMigrateContractResponse returns contract migration result data. */\nexport interface MsgMigrateContractResponse {\n  /**\n   * Data contains same raw bytes returned as data from the wasm contract.\n   * (May be empty)\n   */\n  data: Uint8Array;\n}\n\n/** MsgUpdateAdmin sets a new admin for a smart contract */\nexport interface MsgUpdateAdmin {\n  /** Sender is the that actor that signed the messages */\n  sender: string;\n  /** NewAdmin address to be set */\n  new_admin: string;\n  /** Contract is the address of the smart contract */\n  contract: string;\n  /**\n   * used internally for encryption, should always be empty in a signed\n   * transaction\n   */\n  callback_sig: Uint8Array;\n}\n\n/** MsgUpdateAdminResponse returns empty data */\nexport interface MsgUpdateAdminResponse {\n}\n\n/** MsgClearAdmin removes any admin stored for a smart contract */\nexport interface MsgClearAdmin {\n  /** Sender is the that actor that signed the messages */\n  sender: string;\n  /** Contract is the address of the smart contract */\n  contract: string;\n  /**\n   * used internally for encryption, should always be empty in a signed\n   * transaction\n   */\n  callback_sig: Uint8Array;\n}\n\n/** MsgClearAdminResponse returns empty data */\nexport interface MsgClearAdminResponse {\n}\n\nfunction createBaseMsgStoreCode(): MsgStoreCode {\n  return { sender: new Uint8Array(0), wasm_byte_code: new Uint8Array(0), source: \"\", builder: \"\" };\n}\n\nexport const MsgStoreCode = {\n  encode(message: MsgStoreCode, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sender.length !== 0) {\n      writer.uint32(10).bytes(message.sender);\n    }\n    if (message.wasm_byte_code.length !== 0) {\n      writer.uint32(18).bytes(message.wasm_byte_code);\n    }\n    if (message.source !== \"\") {\n      writer.uint32(26).string(message.source);\n    }\n    if (message.builder !== \"\") {\n      writer.uint32(34).string(message.builder);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgStoreCode {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgStoreCode();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.sender = reader.bytes();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.wasm_byte_code = reader.bytes();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.source = reader.string();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.builder = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgStoreCode {\n    return {\n      sender: isSet(object.sender) ? bytesFromBase64(object.sender) : new Uint8Array(0),\n      wasm_byte_code: isSet(object.wasm_byte_code) ? bytesFromBase64(object.wasm_byte_code) : new Uint8Array(0),\n      source: isSet(object.source) ? globalThis.String(object.source) : \"\",\n      builder: isSet(object.builder) ? globalThis.String(object.builder) : \"\",\n    };\n  },\n\n  toJSON(message: MsgStoreCode): unknown {\n    const obj: any = {};\n    if (message.sender.length !== 0) {\n      obj.sender = base64FromBytes(message.sender);\n    }\n    if (message.wasm_byte_code.length !== 0) {\n      obj.wasm_byte_code = base64FromBytes(message.wasm_byte_code);\n    }\n    if (message.source !== \"\") {\n      obj.source = message.source;\n    }\n    if (message.builder !== \"\") {\n      obj.builder = message.builder;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgStoreCode>): MsgStoreCode {\n    return MsgStoreCode.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgStoreCode>): MsgStoreCode {\n    const message = createBaseMsgStoreCode();\n    message.sender = object.sender ?? new Uint8Array(0);\n    message.wasm_byte_code = object.wasm_byte_code ?? new Uint8Array(0);\n    message.source = object.source ?? \"\";\n    message.builder = object.builder ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgStoreCodeResponse(): MsgStoreCodeResponse {\n  return { code_id: \"0\" };\n}\n\nexport const MsgStoreCodeResponse = {\n  encode(message: MsgStoreCodeResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.code_id !== \"0\") {\n      writer.uint32(8).uint64(message.code_id);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgStoreCodeResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgStoreCodeResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.code_id = longToString(reader.uint64() as Long);\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgStoreCodeResponse {\n    return { code_id: isSet(object.code_id) ? globalThis.String(object.code_id) : \"0\" };\n  },\n\n  toJSON(message: MsgStoreCodeResponse): unknown {\n    const obj: any = {};\n    if (message.code_id !== \"0\") {\n      obj.code_id = message.code_id;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgStoreCodeResponse>): MsgStoreCodeResponse {\n    return MsgStoreCodeResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgStoreCodeResponse>): MsgStoreCodeResponse {\n    const message = createBaseMsgStoreCodeResponse();\n    message.code_id = object.code_id ?? \"0\";\n    return message;\n  },\n};\n\nfunction createBaseMsgInstantiateContract(): MsgInstantiateContract {\n  return {\n    sender: new Uint8Array(0),\n    callback_code_hash: \"\",\n    code_id: \"0\",\n    label: \"\",\n    init_msg: new Uint8Array(0),\n    init_funds: [],\n    callback_sig: new Uint8Array(0),\n    admin: \"\",\n  };\n}\n\nexport const MsgInstantiateContract = {\n  encode(message: MsgInstantiateContract, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sender.length !== 0) {\n      writer.uint32(10).bytes(message.sender);\n    }\n    if (message.callback_code_hash !== \"\") {\n      writer.uint32(18).string(message.callback_code_hash);\n    }\n    if (message.code_id !== \"0\") {\n      writer.uint32(24).uint64(message.code_id);\n    }\n    if (message.label !== \"\") {\n      writer.uint32(34).string(message.label);\n    }\n    if (message.init_msg.length !== 0) {\n      writer.uint32(42).bytes(message.init_msg);\n    }\n    for (const v of message.init_funds) {\n      Coin.encode(v!, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.callback_sig.length !== 0) {\n      writer.uint32(58).bytes(message.callback_sig);\n    }\n    if (message.admin !== \"\") {\n      writer.uint32(66).string(message.admin);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgInstantiateContract {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgInstantiateContract();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.sender = reader.bytes();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.callback_code_hash = reader.string();\n          continue;\n        case 3:\n          if (tag !== 24) {\n            break;\n          }\n\n          message.code_id = longToString(reader.uint64() as Long);\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.label = reader.string();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.init_msg = reader.bytes();\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.init_funds.push(Coin.decode(reader, reader.uint32()));\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.callback_sig = reader.bytes();\n          continue;\n        case 8:\n          if (tag !== 66) {\n            break;\n          }\n\n          message.admin = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgInstantiateContract {\n    return {\n      sender: isSet(object.sender) ? bytesFromBase64(object.sender) : new Uint8Array(0),\n      callback_code_hash: isSet(object.callback_code_hash) ? globalThis.String(object.callback_code_hash) : \"\",\n      code_id: isSet(object.code_id) ? globalThis.String(object.code_id) : \"0\",\n      label: isSet(object.label) ? globalThis.String(object.label) : \"\",\n      init_msg: isSet(object.init_msg) ? bytesFromBase64(object.init_msg) : new Uint8Array(0),\n      init_funds: globalThis.Array.isArray(object?.init_funds)\n        ? object.init_funds.map((e: any) => Coin.fromJSON(e))\n        : [],\n      callback_sig: isSet(object.callback_sig) ? bytesFromBase64(object.callback_sig) : new Uint8Array(0),\n      admin: isSet(object.admin) ? globalThis.String(object.admin) : \"\",\n    };\n  },\n\n  toJSON(message: MsgInstantiateContract): unknown {\n    const obj: any = {};\n    if (message.sender.length !== 0) {\n      obj.sender = base64FromBytes(message.sender);\n    }\n    if (message.callback_code_hash !== \"\") {\n      obj.callback_code_hash = message.callback_code_hash;\n    }\n    if (message.code_id !== \"0\") {\n      obj.code_id = message.code_id;\n    }\n    if (message.label !== \"\") {\n      obj.label = message.label;\n    }\n    if (message.init_msg.length !== 0) {\n      obj.init_msg = base64FromBytes(message.init_msg);\n    }\n    if (message.init_funds?.length) {\n      obj.init_funds = message.init_funds.map((e) => Coin.toJSON(e));\n    }\n    if (message.callback_sig.length !== 0) {\n      obj.callback_sig = base64FromBytes(message.callback_sig);\n    }\n    if (message.admin !== \"\") {\n      obj.admin = message.admin;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgInstantiateContract>): MsgInstantiateContract {\n    return MsgInstantiateContract.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgInstantiateContract>): MsgInstantiateContract {\n    const message = createBaseMsgInstantiateContract();\n    message.sender = object.sender ?? new Uint8Array(0);\n    message.callback_code_hash = object.callback_code_hash ?? \"\";\n    message.code_id = object.code_id ?? \"0\";\n    message.label = object.label ?? \"\";\n    message.init_msg = object.init_msg ?? new Uint8Array(0);\n    message.init_funds = object.init_funds?.map((e) => Coin.fromPartial(e)) || [];\n    message.callback_sig = object.callback_sig ?? new Uint8Array(0);\n    message.admin = object.admin ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgInstantiateContractResponse(): MsgInstantiateContractResponse {\n  return { address: \"\", data: new Uint8Array(0) };\n}\n\nexport const MsgInstantiateContractResponse = {\n  encode(message: MsgInstantiateContractResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgInstantiateContractResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgInstantiateContractResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.address = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.data = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgInstantiateContractResponse {\n    return {\n      address: isSet(object.address) ? globalThis.String(object.address) : \"\",\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgInstantiateContractResponse): unknown {\n    const obj: any = {};\n    if (message.address !== \"\") {\n      obj.address = message.address;\n    }\n    if (message.data.length !== 0) {\n      obj.data = base64FromBytes(message.data);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgInstantiateContractResponse>): MsgInstantiateContractResponse {\n    return MsgInstantiateContractResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgInstantiateContractResponse>): MsgInstantiateContractResponse {\n    const message = createBaseMsgInstantiateContractResponse();\n    message.address = object.address ?? \"\";\n    message.data = object.data ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgExecuteContract(): MsgExecuteContract {\n  return {\n    sender: new Uint8Array(0),\n    contract: new Uint8Array(0),\n    msg: new Uint8Array(0),\n    callback_code_hash: \"\",\n    sent_funds: [],\n    callback_sig: new Uint8Array(0),\n  };\n}\n\nexport const MsgExecuteContract = {\n  encode(message: MsgExecuteContract, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sender.length !== 0) {\n      writer.uint32(10).bytes(message.sender);\n    }\n    if (message.contract.length !== 0) {\n      writer.uint32(18).bytes(message.contract);\n    }\n    if (message.msg.length !== 0) {\n      writer.uint32(26).bytes(message.msg);\n    }\n    if (message.callback_code_hash !== \"\") {\n      writer.uint32(34).string(message.callback_code_hash);\n    }\n    for (const v of message.sent_funds) {\n      Coin.encode(v!, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.callback_sig.length !== 0) {\n      writer.uint32(50).bytes(message.callback_sig);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgExecuteContract {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgExecuteContract();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.sender = reader.bytes();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.contract = reader.bytes();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.msg = reader.bytes();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.callback_code_hash = reader.string();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.sent_funds.push(Coin.decode(reader, reader.uint32()));\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.callback_sig = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgExecuteContract {\n    return {\n      sender: isSet(object.sender) ? bytesFromBase64(object.sender) : new Uint8Array(0),\n      contract: isSet(object.contract) ? bytesFromBase64(object.contract) : new Uint8Array(0),\n      msg: isSet(object.msg) ? bytesFromBase64(object.msg) : new Uint8Array(0),\n      callback_code_hash: isSet(object.callback_code_hash) ? globalThis.String(object.callback_code_hash) : \"\",\n      sent_funds: globalThis.Array.isArray(object?.sent_funds)\n        ? object.sent_funds.map((e: any) => Coin.fromJSON(e))\n        : [],\n      callback_sig: isSet(object.callback_sig) ? bytesFromBase64(object.callback_sig) : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgExecuteContract): unknown {\n    const obj: any = {};\n    if (message.sender.length !== 0) {\n      obj.sender = base64FromBytes(message.sender);\n    }\n    if (message.contract.length !== 0) {\n      obj.contract = base64FromBytes(message.contract);\n    }\n    if (message.msg.length !== 0) {\n      obj.msg = base64FromBytes(message.msg);\n    }\n    if (message.callback_code_hash !== \"\") {\n      obj.callback_code_hash = message.callback_code_hash;\n    }\n    if (message.sent_funds?.length) {\n      obj.sent_funds = message.sent_funds.map((e) => Coin.toJSON(e));\n    }\n    if (message.callback_sig.length !== 0) {\n      obj.callback_sig = base64FromBytes(message.callback_sig);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgExecuteContract>): MsgExecuteContract {\n    return MsgExecuteContract.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgExecuteContract>): MsgExecuteContract {\n    const message = createBaseMsgExecuteContract();\n    message.sender = object.sender ?? new Uint8Array(0);\n    message.contract = object.contract ?? new Uint8Array(0);\n    message.msg = object.msg ?? new Uint8Array(0);\n    message.callback_code_hash = object.callback_code_hash ?? \"\";\n    message.sent_funds = object.sent_funds?.map((e) => Coin.fromPartial(e)) || [];\n    message.callback_sig = object.callback_sig ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgExecuteContractResponse(): MsgExecuteContractResponse {\n  return { data: new Uint8Array(0) };\n}\n\nexport const MsgExecuteContractResponse = {\n  encode(message: MsgExecuteContractResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.data.length !== 0) {\n      writer.uint32(10).bytes(message.data);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgExecuteContractResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgExecuteContractResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.data = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgExecuteContractResponse {\n    return { data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(0) };\n  },\n\n  toJSON(message: MsgExecuteContractResponse): unknown {\n    const obj: any = {};\n    if (message.data.length !== 0) {\n      obj.data = base64FromBytes(message.data);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgExecuteContractResponse>): MsgExecuteContractResponse {\n    return MsgExecuteContractResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgExecuteContractResponse>): MsgExecuteContractResponse {\n    const message = createBaseMsgExecuteContractResponse();\n    message.data = object.data ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgMigrateContract(): MsgMigrateContract {\n  return {\n    sender: \"\",\n    contract: \"\",\n    code_id: \"0\",\n    msg: new Uint8Array(0),\n    callback_sig: new Uint8Array(0),\n    callback_code_hash: \"\",\n  };\n}\n\nexport const MsgMigrateContract = {\n  encode(message: MsgMigrateContract, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n    if (message.contract !== \"\") {\n      writer.uint32(18).string(message.contract);\n    }\n    if (message.code_id !== \"0\") {\n      writer.uint32(24).uint64(message.code_id);\n    }\n    if (message.msg.length !== 0) {\n      writer.uint32(34).bytes(message.msg);\n    }\n    if (message.callback_sig.length !== 0) {\n      writer.uint32(58).bytes(message.callback_sig);\n    }\n    if (message.callback_code_hash !== \"\") {\n      writer.uint32(66).string(message.callback_code_hash);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgMigrateContract {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgMigrateContract();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.sender = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.contract = reader.string();\n          continue;\n        case 3:\n          if (tag !== 24) {\n            break;\n          }\n\n          message.code_id = longToString(reader.uint64() as Long);\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.msg = reader.bytes();\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.callback_sig = reader.bytes();\n          continue;\n        case 8:\n          if (tag !== 66) {\n            break;\n          }\n\n          message.callback_code_hash = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgMigrateContract {\n    return {\n      sender: isSet(object.sender) ? globalThis.String(object.sender) : \"\",\n      contract: isSet(object.contract) ? globalThis.String(object.contract) : \"\",\n      code_id: isSet(object.code_id) ? globalThis.String(object.code_id) : \"0\",\n      msg: isSet(object.msg) ? bytesFromBase64(object.msg) : new Uint8Array(0),\n      callback_sig: isSet(object.callback_sig) ? bytesFromBase64(object.callback_sig) : new Uint8Array(0),\n      callback_code_hash: isSet(object.callback_code_hash) ? globalThis.String(object.callback_code_hash) : \"\",\n    };\n  },\n\n  toJSON(message: MsgMigrateContract): unknown {\n    const obj: any = {};\n    if (message.sender !== \"\") {\n      obj.sender = message.sender;\n    }\n    if (message.contract !== \"\") {\n      obj.contract = message.contract;\n    }\n    if (message.code_id !== \"0\") {\n      obj.code_id = message.code_id;\n    }\n    if (message.msg.length !== 0) {\n      obj.msg = base64FromBytes(message.msg);\n    }\n    if (message.callback_sig.length !== 0) {\n      obj.callback_sig = base64FromBytes(message.callback_sig);\n    }\n    if (message.callback_code_hash !== \"\") {\n      obj.callback_code_hash = message.callback_code_hash;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgMigrateContract>): MsgMigrateContract {\n    return MsgMigrateContract.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgMigrateContract>): MsgMigrateContract {\n    const message = createBaseMsgMigrateContract();\n    message.sender = object.sender ?? \"\";\n    message.contract = object.contract ?? \"\";\n    message.code_id = object.code_id ?? \"0\";\n    message.msg = object.msg ?? new Uint8Array(0);\n    message.callback_sig = object.callback_sig ?? new Uint8Array(0);\n    message.callback_code_hash = object.callback_code_hash ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgMigrateContractResponse(): MsgMigrateContractResponse {\n  return { data: new Uint8Array(0) };\n}\n\nexport const MsgMigrateContractResponse = {\n  encode(message: MsgMigrateContractResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.data.length !== 0) {\n      writer.uint32(10).bytes(message.data);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgMigrateContractResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgMigrateContractResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.data = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgMigrateContractResponse {\n    return { data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(0) };\n  },\n\n  toJSON(message: MsgMigrateContractResponse): unknown {\n    const obj: any = {};\n    if (message.data.length !== 0) {\n      obj.data = base64FromBytes(message.data);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgMigrateContractResponse>): MsgMigrateContractResponse {\n    return MsgMigrateContractResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgMigrateContractResponse>): MsgMigrateContractResponse {\n    const message = createBaseMsgMigrateContractResponse();\n    message.data = object.data ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateAdmin(): MsgUpdateAdmin {\n  return { sender: \"\", new_admin: \"\", contract: \"\", callback_sig: new Uint8Array(0) };\n}\n\nexport const MsgUpdateAdmin = {\n  encode(message: MsgUpdateAdmin, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n    if (message.new_admin !== \"\") {\n      writer.uint32(18).string(message.new_admin);\n    }\n    if (message.contract !== \"\") {\n      writer.uint32(26).string(message.contract);\n    }\n    if (message.callback_sig.length !== 0) {\n      writer.uint32(58).bytes(message.callback_sig);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateAdmin {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateAdmin();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.sender = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.new_admin = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.contract = reader.string();\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.callback_sig = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateAdmin {\n    return {\n      sender: isSet(object.sender) ? globalThis.String(object.sender) : \"\",\n      new_admin: isSet(object.new_admin) ? globalThis.String(object.new_admin) : \"\",\n      contract: isSet(object.contract) ? globalThis.String(object.contract) : \"\",\n      callback_sig: isSet(object.callback_sig) ? bytesFromBase64(object.callback_sig) : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgUpdateAdmin): unknown {\n    const obj: any = {};\n    if (message.sender !== \"\") {\n      obj.sender = message.sender;\n    }\n    if (message.new_admin !== \"\") {\n      obj.new_admin = message.new_admin;\n    }\n    if (message.contract !== \"\") {\n      obj.contract = message.contract;\n    }\n    if (message.callback_sig.length !== 0) {\n      obj.callback_sig = base64FromBytes(message.callback_sig);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateAdmin>): MsgUpdateAdmin {\n    return MsgUpdateAdmin.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgUpdateAdmin>): MsgUpdateAdmin {\n    const message = createBaseMsgUpdateAdmin();\n    message.sender = object.sender ?? \"\";\n    message.new_admin = object.new_admin ?? \"\";\n    message.contract = object.contract ?? \"\";\n    message.callback_sig = object.callback_sig ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateAdminResponse(): MsgUpdateAdminResponse {\n  return {};\n}\n\nexport const MsgUpdateAdminResponse = {\n  encode(_: MsgUpdateAdminResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateAdminResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateAdminResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateAdminResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateAdminResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateAdminResponse>): MsgUpdateAdminResponse {\n    return MsgUpdateAdminResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgUpdateAdminResponse>): MsgUpdateAdminResponse {\n    const message = createBaseMsgUpdateAdminResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgClearAdmin(): MsgClearAdmin {\n  return { sender: \"\", contract: \"\", callback_sig: new Uint8Array(0) };\n}\n\nexport const MsgClearAdmin = {\n  encode(message: MsgClearAdmin, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n    if (message.contract !== \"\") {\n      writer.uint32(26).string(message.contract);\n    }\n    if (message.callback_sig.length !== 0) {\n      writer.uint32(58).bytes(message.callback_sig);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgClearAdmin {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgClearAdmin();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.sender = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.contract = reader.string();\n          continue;\n        case 7:\n          if (tag !== 58) {\n            break;\n          }\n\n          message.callback_sig = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgClearAdmin {\n    return {\n      sender: isSet(object.sender) ? globalThis.String(object.sender) : \"\",\n      contract: isSet(object.contract) ? globalThis.String(object.contract) : \"\",\n      callback_sig: isSet(object.callback_sig) ? bytesFromBase64(object.callback_sig) : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgClearAdmin): unknown {\n    const obj: any = {};\n    if (message.sender !== \"\") {\n      obj.sender = message.sender;\n    }\n    if (message.contract !== \"\") {\n      obj.contract = message.contract;\n    }\n    if (message.callback_sig.length !== 0) {\n      obj.callback_sig = base64FromBytes(message.callback_sig);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgClearAdmin>): MsgClearAdmin {\n    return MsgClearAdmin.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgClearAdmin>): MsgClearAdmin {\n    const message = createBaseMsgClearAdmin();\n    message.sender = object.sender ?? \"\";\n    message.contract = object.contract ?? \"\";\n    message.callback_sig = object.callback_sig ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgClearAdminResponse(): MsgClearAdminResponse {\n  return {};\n}\n\nexport const MsgClearAdminResponse = {\n  encode(_: MsgClearAdminResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgClearAdminResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgClearAdminResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgClearAdminResponse {\n    return {};\n  },\n\n  toJSON(_: MsgClearAdminResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgClearAdminResponse>): MsgClearAdminResponse {\n    return MsgClearAdminResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgClearAdminResponse>): MsgClearAdminResponse {\n    const message = createBaseMsgClearAdminResponse();\n    return message;\n  },\n};\n\n/** Msg defines the wasm Msg service. */\nexport interface Msg {\n  /** StoreCode to submit Wasm code to the system */\n  StoreCode(request: MsgStoreCode): Promise<MsgStoreCodeResponse>;\n  /** Instantiate creates a new smart contract instance for the given code id. */\n  InstantiateContract(request: MsgInstantiateContract): Promise<MsgInstantiateContractResponse>;\n  /** Execute submits the given message data to a smart contract */\n  ExecuteContract(request: MsgExecuteContract): Promise<MsgExecuteContractResponse>;\n  /** Migrate runs a code upgrade/ downgrade for a smart contract */\n  MigrateContract(request: MsgMigrateContract): Promise<MsgMigrateContractResponse>;\n  /** UpdateAdmin sets a new   admin for a smart contract */\n  UpdateAdmin(request: MsgUpdateAdmin): Promise<MsgUpdateAdminResponse>;\n  /** ClearAdmin removes any admin stored for a smart contract */\n  ClearAdmin(request: MsgClearAdmin): Promise<MsgClearAdminResponse>;\n}\n\nexport const MsgServiceName = \"secret.compute.v1beta1.Msg\";\nexport class MsgClientImpl implements Msg {\n  private readonly rpc: Rpc;\n  private readonly service: string;\n  constructor(rpc: Rpc, opts?: { service?: string }) {\n    this.service = opts?.service || MsgServiceName;\n    this.rpc = rpc;\n    this.StoreCode = this.StoreCode.bind(this);\n    this.InstantiateContract = this.InstantiateContract.bind(this);\n    this.ExecuteContract = this.ExecuteContract.bind(this);\n    this.MigrateContract = this.MigrateContract.bind(this);\n    this.UpdateAdmin = this.UpdateAdmin.bind(this);\n    this.ClearAdmin = this.ClearAdmin.bind(this);\n  }\n  StoreCode(request: MsgStoreCode): Promise<MsgStoreCodeResponse> {\n    const data = MsgStoreCode.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"StoreCode\", data);\n    return promise.then((data) => MsgStoreCodeResponse.decode(_m0.Reader.create(data)));\n  }\n\n  InstantiateContract(request: MsgInstantiateContract): Promise<MsgInstantiateContractResponse> {\n    const data = MsgInstantiateContract.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"InstantiateContract\", data);\n    return promise.then((data) => MsgInstantiateContractResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ExecuteContract(request: MsgExecuteContract): Promise<MsgExecuteContractResponse> {\n    const data = MsgExecuteContract.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ExecuteContract\", data);\n    return promise.then((data) => MsgExecuteContractResponse.decode(_m0.Reader.create(data)));\n  }\n\n  MigrateContract(request: MsgMigrateContract): Promise<MsgMigrateContractResponse> {\n    const data = MsgMigrateContract.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"MigrateContract\", data);\n    return promise.then((data) => MsgMigrateContractResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateAdmin(request: MsgUpdateAdmin): Promise<MsgUpdateAdminResponse> {\n    const data = MsgUpdateAdmin.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateAdmin\", data);\n    return promise.then((data) => MsgUpdateAdminResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ClearAdmin(request: MsgClearAdmin): Promise<MsgClearAdminResponse> {\n    const data = MsgClearAdmin.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ClearAdmin\", data);\n    return promise.then((data) => MsgClearAdminResponse.decode(_m0.Reader.create(data)));\n  }\n}\n\ninterface Rpc {\n  request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;\n}\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n  if ((globalThis as any).Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\n\nfunction base64FromBytes(arr: Uint8Array): string {\n  if ((globalThis as any).Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin: string[] = [];\n    arr.forEach((byte) => {\n      bin.push(globalThis.String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToString(long: Long) {\n  return long.toString();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":";AAAA,sDAAsD;AACtD,YAAY;AACZ,kCAAkC;AAClC,iCAAiC;AACjC,2CAA2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE3C,kBAAA,EAAoB,CACpB,MAAA,SAAA,iCAAwB;AACxB,MAAA,MAAA,4CAA0C;AAC1C,MAAA,sDAAyD;AAE5C,QAAA,eAAe,GAAG,wBAAwB,CAAC;AA6IxD,SAAS,sBAAsB;IAC7B,OAAO;QAAE,MAAM,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAAE,cAAc,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAAE,MAAM,EAAE,EAAE;QAAE,OAAO,EAAE,EAAE;IAAA,CAAE,CAAC;AACnG,CAAC;AAEY,QAAA,YAAY,GAAG;IAC1B,MAAM,EAAC,OAAqB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACpE,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACzC;QACD,IAAI,OAAO,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;SACjD;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,sBAAsB,EAAE,CAAC;QACzC,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAChC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,cAAc,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACxC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACjF,cAAc,EAAE,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACzG,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;YACpE,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;SACxE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAqB;QAC1B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,GAAG,CAAC,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,GAAG,CAAC,cAAc,GAAG,eAAe,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;SAC9D;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAgC;QACrC,OAAO,QAAA,YAAY,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC9C,CAAC;IACD,WAAW,EAAC,MAAiC;;QAC3C,MAAM,OAAO,GAAG,sBAAsB,EAAE,CAAC;QACzC,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACpD,OAAO,CAAC,cAAc,GAAG,CAAA,KAAA,MAAM,CAAC,cAAc,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACpE,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,8BAA8B;IACrC,OAAO;QAAE,OAAO,EAAE,GAAG;IAAA,CAAE,CAAC;AAC1B,CAAC;AAEY,QAAA,oBAAoB,GAAG;IAClC,MAAM,EAAC,OAA6B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC5E,IAAI,OAAO,CAAC,OAAO,KAAK,GAAG,EAAE;YAC3B,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,8BAA8B,EAAE,CAAC;QACjD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACb,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBACxD,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YAAE,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG;QAAA,CAAE,CAAC;IACtF,CAAC;IAED,MAAM,EAAC,OAA6B;QAClC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,GAAG,EAAE;YAC3B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAwC;QAC7C,OAAO,QAAA,oBAAoB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACtD,CAAC;IACD,WAAW,EAAC,MAAyC;;QACnD,MAAM,OAAO,GAAG,8BAA8B,EAAE,CAAC;QACjD,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QACxC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,gCAAgC;IACvC,OAAO;QACL,MAAM,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QACzB,kBAAkB,EAAE,EAAE;QACtB,OAAO,EAAE,GAAG;QACZ,KAAK,EAAE,EAAE;QACT,QAAQ,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC3B,UAAU,EAAE,EAAE;QACd,YAAY,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC/B,KAAK,EAAE,EAAE;KACV,CAAC;AACJ,CAAC;AAEY,QAAA,sBAAsB,GAAG;IACpC,MAAM,EAAC,OAA+B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC9E,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACzC;QACD,IAAI,OAAO,CAAC,kBAAkB,KAAK,EAAE,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;SACtD;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,GAAG,EAAE;YAC3B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,KAAK,KAAK,EAAE,EAAE;YACxB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACzC;QACD,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC3C;QACD,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,UAAU,CAAE;YAClC,OAAA,IAAI,CAAC,MAAM,CAAC,CAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACpD;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC/C;QACD,IAAI,OAAO,CAAC,KAAK,KAAK,EAAE,EAAE;YACxB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACzC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,gCAAgC,EAAE,CAAC;QACnD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAChC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,kBAAkB,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAC7C,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBACxD,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAChC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAA,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACtC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAChC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACjF,kBAAkB,EAAE,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE;YACxG,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG;YACxE,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;YACjE,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACvF,UAAU,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,UAAU,CAAC,GACpD,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,CAAG,CAAD,MAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GACnD,EAAE;YACN,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACnG,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;SAClE,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA+B;;QACpC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,GAAG,CAAC,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,kBAAkB,KAAK,EAAE,EAAE;YACrC,GAAG,CAAC,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;SACrD;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,GAAG,EAAE;YAC3B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,KAAK,KAAK,EAAE,EAAE;YACxB,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;SAC3B;QACD,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,GAAG,CAAC,QAAQ,GAAG,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAClD;QACD,IAAI,CAAA,KAAA,OAAO,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM,EAAE;YAC9B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,MAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAChE;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,GAAG,CAAC,YAAY,GAAG,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC1D;QACD,IAAI,OAAO,CAAC,KAAK,KAAK,EAAE,EAAE;YACxB,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;SAC3B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA0C;QAC/C,OAAO,QAAA,sBAAsB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACxD,CAAC;IACD,WAAW,EAAC,MAA2C;;QACrD,MAAM,OAAO,GAAG,gCAAgC,EAAE,CAAC;QACnD,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACpD,OAAO,CAAC,kBAAkB,GAAG,CAAA,KAAA,MAAM,CAAC,kBAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7D,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QACxC,OAAO,CAAC,KAAK,GAAG,CAAA,KAAA,MAAM,CAAC,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACnC,OAAO,CAAC,QAAQ,GAAG,CAAA,KAAA,MAAM,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACxD,OAAO,CAAC,UAAU,GAAG,CAAA,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,MAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAI,EAAE,CAAC;QAC9E,OAAO,CAAC,YAAY,GAAG,CAAA,KAAA,MAAM,CAAC,YAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAChE,OAAO,CAAC,KAAK,GAAG,CAAA,KAAA,MAAM,CAAC,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACnC,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,wCAAwC;IAC/C,OAAO;QAAE,OAAO,EAAE,EAAE;QAAE,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;IAAA,CAAE,CAAC;AAClD,CAAC;AAEY,QAAA,8BAA8B,GAAG;IAC5C,MAAM,EAAC,OAAuC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACtF,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACvC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,wCAAwC,EAAE,CAAC;QAC3D,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC9B,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvE,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;SAC5E,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAuC;QAC5C,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,OAAO,KAAK,EAAE,EAAE;YAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,GAAG,CAAC,IAAI,GAAG,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC1C;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAkD;QACvD,OAAO,QAAA,8BAA8B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAChE,CAAC;IACD,WAAW,EAAC,MAAmD;;QAC7D,MAAM,OAAO,GAAG,wCAAwC,EAAE,CAAC;QAC3D,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACvC,OAAO,CAAC,IAAI,GAAG,CAAA,KAAA,MAAM,CAAC,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAChD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,4BAA4B;IACnC,OAAO;QACL,MAAM,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QACzB,QAAQ,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC3B,GAAG,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QACtB,kBAAkB,EAAE,EAAE;QACtB,UAAU,EAAE,EAAE;QACd,YAAY,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;KAChC,CAAC;AACJ,CAAC;AAEY,QAAA,kBAAkB,GAAG;IAChC,MAAM,EAAC,OAA2B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC1E,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACzC;QACD,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SACtC;QACD,IAAI,OAAO,CAAC,kBAAkB,KAAK,EAAE,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;SACtD;QACD,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,UAAU,CAAE;YAClC,OAAA,IAAI,CAAC,MAAM,CAAC,CAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;SACpD;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC/C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,4BAA4B,EAAE,CAAC;QAC/C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAChC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAClC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC7B,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,kBAAkB,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAC7C,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAA,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAC9D,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACtC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACjF,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACvF,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACxE,kBAAkB,EAAE,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE;YACxG,UAAU,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,UAAU,CAAC,GACpD,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,CAAG,CAAD,MAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GACnD,EAAE;YACN,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;SACpG,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA2B;;QAChC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,GAAG,CAAC,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,GAAG,CAAC,QAAQ,GAAG,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAClD;QACD,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,GAAG,CAAC,GAAG,GAAG,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SACxC;QACD,IAAI,OAAO,CAAC,kBAAkB,KAAK,EAAE,EAAE;YACrC,GAAG,CAAC,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;SACrD;QACD,IAAI,CAAA,KAAA,OAAO,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM,EAAE;YAC9B,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,MAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAChE;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,GAAG,CAAC,YAAY,GAAG,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC1D;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAsC;QAC3C,OAAO,QAAA,kBAAkB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACpD,CAAC;IACD,WAAW,EAAC,MAAuC;;QACjD,MAAM,OAAO,GAAG,4BAA4B,EAAE,CAAC;QAC/C,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACpD,OAAO,CAAC,QAAQ,GAAG,CAAA,KAAA,MAAM,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACxD,OAAO,CAAC,GAAG,GAAG,CAAA,KAAA,MAAM,CAAC,GAAG,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC9C,OAAO,CAAC,kBAAkB,GAAG,CAAA,KAAA,MAAM,CAAC,kBAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7D,OAAO,CAAC,UAAU,GAAG,CAAA,CAAA,KAAA,MAAM,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,MAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAI,EAAE,CAAC;QAC9E,OAAO,CAAC,YAAY,GAAG,CAAA,KAAA,MAAM,CAAC,YAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAChE,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,oCAAoC;IAC3C,OAAO;QAAE,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;IAAA,CAAE,CAAC;AACrC,CAAC;AAEY,QAAA,0BAA0B,GAAG;IACxC,MAAM,EAAC,OAAmC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAClF,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACvC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,oCAAoC,EAAE,CAAC;QACvD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC9B,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YAAE,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;QAAA,CAAE,CAAC;IACzF,CAAC;IAED,MAAM,EAAC,OAAmC;QACxC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,GAAG,CAAC,IAAI,GAAG,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC1C;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA8C;QACnD,OAAO,QAAA,0BAA0B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC5D,CAAC;IACD,WAAW,EAAC,MAA+C;;QACzD,MAAM,OAAO,GAAG,oCAAoC,EAAE,CAAC;QACvD,OAAO,CAAC,IAAI,GAAG,CAAA,KAAA,MAAM,CAAC,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAChD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,4BAA4B;IACnC,OAAO;QACL,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,EAAE;QACZ,OAAO,EAAE,GAAG;QACZ,GAAG,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QACtB,YAAY,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAC/B,kBAAkB,EAAE,EAAE;KACvB,CAAC;AACJ,CAAC;AAEY,QAAA,kBAAkB,GAAG;IAChC,MAAM,EAAC,OAA2B,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAC1E,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,IAAI,OAAO,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC3B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC5C;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,GAAG,EAAE;YAC3B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SACtC;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC/C;QACD,IAAI,OAAO,CAAC,kBAAkB,KAAK,EAAE,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;SACtD;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,4BAA4B,EAAE,CAAC;QAC/C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACnC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,EAAU,CAAC,CAAC;oBACxD,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC7B,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACtC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,kBAAkB,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAC7C,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;YACpE,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YAC1E,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG;YACxE,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACxE,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YACnG,kBAAkB,EAAE,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE;SACzG,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAA2B;QAChC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,IAAI,OAAO,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC3B,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;SACjC;QACD,IAAI,OAAO,CAAC,OAAO,KAAK,GAAG,EAAE;YAC3B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,GAAG,CAAC,GAAG,GAAG,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SACxC;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,GAAG,CAAC,YAAY,GAAG,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC1D;QACD,IAAI,OAAO,CAAC,kBAAkB,KAAK,EAAE,EAAE;YACrC,GAAG,CAAC,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;SACrD;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAsC;QAC3C,OAAO,QAAA,kBAAkB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACpD,CAAC;IACD,WAAW,EAAC,MAAuC;;QACjD,MAAM,OAAO,GAAG,4BAA4B,EAAE,CAAC;QAC/C,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,CAAC,QAAQ,GAAG,CAAA,KAAA,MAAM,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACzC,OAAO,CAAC,OAAO,GAAG,CAAA,KAAA,MAAM,CAAC,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,GAAG,CAAC;QACxC,OAAO,CAAC,GAAG,GAAG,CAAA,KAAA,MAAM,CAAC,GAAG,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAC9C,OAAO,CAAC,YAAY,GAAG,CAAA,KAAA,MAAM,CAAC,YAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAChE,OAAO,CAAC,kBAAkB,GAAG,CAAA,KAAA,MAAM,CAAC,kBAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC7D,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,oCAAoC;IAC3C,OAAO;QAAE,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;IAAA,CAAE,CAAC;AACrC,CAAC;AAEY,QAAA,0BAA0B,GAAG;IACxC,MAAM,EAAC,OAAmC,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QAClF,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACvC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,oCAAoC,EAAE,CAAC;QACvD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC9B,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YAAE,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;QAAA,CAAE,CAAC;IACzF,CAAC;IAED,MAAM,EAAC,OAAmC;QACxC,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,GAAG,CAAC,IAAI,GAAG,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC1C;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA8C;QACnD,OAAO,QAAA,0BAA0B,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC5D,CAAC;IACD,WAAW,EAAC,MAA+C;;QACzD,MAAM,OAAO,GAAG,oCAAoC,EAAE,CAAC;QACvD,OAAO,CAAC,IAAI,GAAG,CAAA,KAAA,MAAM,CAAC,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAChD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,wBAAwB;IAC/B,OAAO;QAAE,MAAM,EAAE,EAAE;QAAE,SAAS,EAAE,EAAE;QAAE,QAAQ,EAAE,EAAE;QAAE,YAAY,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;IAAA,CAAE,CAAC;AACtF,CAAC;AAEY,QAAA,cAAc,GAAG;IAC5B,MAAM,EAAC,OAAuB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACtE,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC7C;QACD,IAAI,OAAO,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC3B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC5C;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC/C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,wBAAwB,EAAE,CAAC;QAC3C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACpC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACnC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACtC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;YACpE,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;YAC7E,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YAC1E,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;SACpG,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAuB;QAC5B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,IAAI,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE;YAC5B,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;SACnC;QACD,IAAI,OAAO,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC3B,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;SACjC;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,GAAG,CAAC,YAAY,GAAG,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC1D;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAkC;QACvC,OAAO,QAAA,cAAc,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAChD,CAAC;IACD,WAAW,EAAC,MAAmC;;QAC7C,MAAM,OAAO,GAAG,wBAAwB,EAAE,CAAC;QAC3C,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,CAAC,SAAS,GAAG,CAAA,KAAA,MAAM,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAC3C,OAAO,CAAC,QAAQ,GAAG,CAAA,KAAA,MAAM,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACzC,OAAO,CAAC,YAAY,GAAG,CAAA,KAAA,MAAM,CAAC,YAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAChE,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,gCAAgC;IACvC,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,sBAAsB,GAAG;IACpC,MAAM,EAAC,CAAyB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACxE,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,gCAAgC,EAAE,CAAC;QACnD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAAyB;QAC9B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAA0C;QAC/C,OAAO,QAAA,sBAAsB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACxD,CAAC;IACD,WAAW,EAAC,CAAsC;QAChD,MAAM,OAAO,GAAG,gCAAgC,EAAE,CAAC;QACnD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,uBAAuB;IAC9B,OAAO;QAAE,MAAM,EAAE,EAAE;QAAE,QAAQ,EAAE,EAAE;QAAE,YAAY,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;IAAA,CAAE,CAAC;AACvE,CAAC;AAEY,QAAA,aAAa,GAAG;IAC3B,MAAM,EAAC,OAAsB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACrE,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC1C;QACD,IAAI,OAAO,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC3B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC5C;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC/C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,uBAAuB,EAAE,CAAC;QAC1C,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;gBACjB,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACjC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACnC,SAAS;gBACX,KAAK,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACd,MAAM;qBACP;oBAED,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACtC,SAAS;aACZ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,MAAW;QAClB,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;YACpE,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YAC1E,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;SACpG,CAAC;IACJ,CAAC;IAED,MAAM,EAAC,OAAsB;QAC3B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,IAAI,OAAO,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC3B,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;SACjC;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,GAAG,CAAC,YAAY,GAAG,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC1D;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAiC;QACtC,OAAO,QAAA,aAAa,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IAC/C,CAAC;IACD,WAAW,EAAC,MAAkC;;QAC5C,MAAM,OAAO,GAAG,uBAAuB,EAAE,CAAC;QAC1C,OAAO,CAAC,MAAM,GAAG,CAAA,KAAA,MAAM,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACrC,OAAO,CAAC,QAAQ,GAAG,CAAA,KAAA,MAAM,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QACzC,OAAO,CAAC,YAAY,GAAG,CAAA,KAAA,MAAM,CAAC,YAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QAChE,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAEF,SAAS,+BAA+B;IACtC,OAAO,CAAA,CAAE,CAAC;AACZ,CAAC;AAEY,QAAA,qBAAqB,GAAG;IACnC,MAAM,EAAC,CAAwB,EAAE,SAAqB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACvE,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,EAAC,KAA8B,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,MAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAE;YACvB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAQ,GAAG,KAAK,CAAC,EAAE;aAClB;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAChC,MAAM;aACP;YACD,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ,EAAC,CAAM;QACb,OAAO,CAAA,CAAE,CAAC;IACZ,CAAC;IAED,MAAM,EAAC,CAAwB;QAC7B,MAAM,GAAG,GAAQ,CAAA,CAAE,CAAC;QACpB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,EAAC,IAAyC;QAC9C,OAAO,QAAA,qBAAqB,CAAC,WAAW,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,CAAA,CAAE,CAAC,CAAC;IACvD,CAAC;IACD,WAAW,EAAC,CAAqC;QAC/C,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC;AAkBW,QAAA,cAAc,GAAG,4BAA4B,CAAC;AAC3D,MAAa,aAAa;IAGxB,YAAY,GAAQ,EAAE,IAA2B,CAAA;QAC/C,IAAI,CAAC,OAAO,GAAG,CAAA,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAA,KAAA,IAAJ,IAAI,CAAE,OAAO,KAAI,QAAA,cAAc,CAAC;QAC/C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IACD,SAAS,CAAC,OAAqB,EAAA;QAC7B,MAAM,IAAI,GAAG,QAAA,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;QAClE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtF,CAAC;IAED,mBAAmB,CAAC,OAA+B,EAAA;QACjD,MAAM,IAAI,GAAG,QAAA,sBAAsB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC7D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,qBAAqB,EAAE,IAAI,CAAC,CAAC;QAC5E,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,8BAA8B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,eAAe,CAAC,OAA2B,EAAA;QACzC,MAAM,IAAI,GAAG,QAAA,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACzD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACxE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,0BAA0B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5F,CAAC;IAED,eAAe,CAAC,OAA2B,EAAA;QACzC,MAAM,IAAI,GAAG,QAAA,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACzD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACxE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,0BAA0B,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5F,CAAC;IAED,WAAW,CAAC,OAAuB,EAAA;QACjC,MAAM,IAAI,GAAG,QAAA,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;QACpE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,sBAAsB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,UAAU,CAAC,OAAsB,EAAA;QAC/B,MAAM,IAAI,GAAG,QAAA,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACpD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QACnE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAG,CAAD,OAAC,qBAAqB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvF,CAAC;CACF;AAhDD,QAAA,aAAA,GAAA,cAgDC;AAMD,SAAS,eAAe,CAAC,GAAW;IAClC,IAAK,UAAkB,CAAC,MAAM,EAAE;QAC9B,OAAO,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;KAC/D,MAAM;QACL,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE;YACnC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC5B;QACD,OAAO,GAAG,CAAC;KACZ;AACH,CAAC;AAED,SAAS,eAAe,CAAC,GAAe;IACtC,IAAK,UAAkB,CAAC,MAAM,EAAE;QAC9B,OAAO,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACvD,MAAM;QACL,MAAM,GAAG,GAAa,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACnB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;KACtC;AACH,CAAC;AAUD,SAAS,YAAY,CAAC,IAAU;IAC9B,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;AACzB,CAAC;AAED,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,OAAA,OAAI,EAAE;IAC1B,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,OAAA,OAAW,CAAC;IAC5B,GAAG,CAAC,SAAS,EAAE,CAAC;CACjB;AAED,SAAS,KAAK,CAAC,KAAU;IACvB,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AAC/C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1558, "column": 0}, "map": {"version":3,"file":"params.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/secret/emergencybutton/v1beta1/params.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: secret/emergencybutton/v1beta1/params.proto\n\n/* eslint-disable */\nimport * as _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"secret.emergencybutton.v1beta1\";\n\n/** Params defines the parameters for the ibc-rate-limit module. */\nexport interface Params {\n  switch_status: string;\n  pauser_address: string;\n}\n\nfunction createBaseParams(): Params {\n  return { switch_status: \"\", pauser_address: \"\" };\n}\n\nexport const Params = {\n  encode(message: Params, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.switch_status !== \"\") {\n      writer.uint32(10).string(message.switch_status);\n    }\n    if (message.pauser_address !== \"\") {\n      writer.uint32(18).string(message.pauser_address);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Params {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.switch_status = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.pauser_address = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Params {\n    return {\n      switch_status: isSet(object.switch_status) ? globalThis.String(object.switch_status) : \"\",\n      pauser_address: isSet(object.pauser_address) ? globalThis.String(object.pauser_address) : \"\",\n    };\n  },\n\n  toJSON(message: Params): unknown {\n    const obj: any = {};\n    if (message.switch_status !== \"\") {\n      obj.switch_status = message.switch_status;\n    }\n    if (message.pauser_address !== \"\") {\n      obj.pauser_address = message.pauser_address;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Params>): Params {\n    return Params.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Params>): Params {\n    const message = createBaseParams();\n    message.switch_status = object.switch_status ?? \"\";\n    message.pauser_address = object.pauser_address ?? \"\";\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1672, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1677, "column": 0}, "map": {"version":3,"file":"tx.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/secret/emergencybutton/v1beta1/tx.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: secret/emergencybutton/v1beta1/tx.proto\n\n/* eslint-disable */\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Params } from \"./params\";\n\nexport const protobufPackage = \"secret.emergencybutton.v1beta1\";\n\n/**\n * MsgToggleIbcSwitch represents a message to toggle the emergencybutton status\n * by the defined pauser.\n */\nexport interface MsgToggleIbcSwitch {\n  sender: string;\n}\n\n/** MsgToggleIbcSwitchResponse defines the response type for the toggle. */\nexport interface MsgToggleIbcSwitchResponse {\n}\n\nexport interface MsgUpdateParams {\n  /** authority is the address of the governance account. */\n  authority: string;\n  /**\n   * params defines the x/emergencybutton parameters to update.\n   *\n   * NOTE: All parameters must be supplied.\n   */\n  params?: Params | undefined;\n}\n\nexport interface MsgUpdateParamsResponse {\n}\n\nfunction createBaseMsgToggleIbcSwitch(): MsgToggleIbcSwitch {\n  return { sender: \"\" };\n}\n\nexport const MsgToggleIbcSwitch = {\n  encode(message: MsgToggleIbcSwitch, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgToggleIbcSwitch {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgToggleIbcSwitch();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.sender = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgToggleIbcSwitch {\n    return { sender: isSet(object.sender) ? globalThis.String(object.sender) : \"\" };\n  },\n\n  toJSON(message: MsgToggleIbcSwitch): unknown {\n    const obj: any = {};\n    if (message.sender !== \"\") {\n      obj.sender = message.sender;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgToggleIbcSwitch>): MsgToggleIbcSwitch {\n    return MsgToggleIbcSwitch.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgToggleIbcSwitch>): MsgToggleIbcSwitch {\n    const message = createBaseMsgToggleIbcSwitch();\n    message.sender = object.sender ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgToggleIbcSwitchResponse(): MsgToggleIbcSwitchResponse {\n  return {};\n}\n\nexport const MsgToggleIbcSwitchResponse = {\n  encode(_: MsgToggleIbcSwitchResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgToggleIbcSwitchResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgToggleIbcSwitchResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgToggleIbcSwitchResponse {\n    return {};\n  },\n\n  toJSON(_: MsgToggleIbcSwitchResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgToggleIbcSwitchResponse>): MsgToggleIbcSwitchResponse {\n    return MsgToggleIbcSwitchResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgToggleIbcSwitchResponse>): MsgToggleIbcSwitchResponse {\n    const message = createBaseMsgToggleIbcSwitchResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateParams(): MsgUpdateParams {\n  return { authority: \"\", params: undefined };\n}\n\nexport const MsgUpdateParams = {\n  encode(message: MsgUpdateParams, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.authority !== \"\") {\n      writer.uint32(10).string(message.authority);\n    }\n    if (message.params !== undefined) {\n      Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParams {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.authority = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.params = Params.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateParams {\n    return {\n      authority: isSet(object.authority) ? globalThis.String(object.authority) : \"\",\n      params: isSet(object.params) ? Params.fromJSON(object.params) : undefined,\n    };\n  },\n\n  toJSON(message: MsgUpdateParams): unknown {\n    const obj: any = {};\n    if (message.authority !== \"\") {\n      obj.authority = message.authority;\n    }\n    if (message.params !== undefined) {\n      obj.params = Params.toJSON(message.params);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateParams>): MsgUpdateParams {\n    return MsgUpdateParams.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MsgUpdateParams>): MsgUpdateParams {\n    const message = createBaseMsgUpdateParams();\n    message.authority = object.authority ?? \"\";\n    message.params = (object.params !== undefined && object.params !== null)\n      ? Params.fromPartial(object.params)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateParamsResponse(): MsgUpdateParamsResponse {\n  return {};\n}\n\nexport const MsgUpdateParamsResponse = {\n  encode(_: MsgUpdateParamsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParamsResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateParamsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateParamsResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateParamsResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse {\n    return MsgUpdateParamsResponse.fromPartial(base ?? {});\n  },\n  fromPartial(_: DeepPartial<MsgUpdateParamsResponse>): MsgUpdateParamsResponse {\n    const message = createBaseMsgUpdateParamsResponse();\n    return message;\n  },\n};\n\n/** Msg defines the bank Msg service. */\nexport interface Msg {\n  /**\n   * ToggleIbcSwitch defines a method for toggling the status of the\n   * emergencybutton.\n   */\n  ToggleIbcSwitch(request: MsgToggleIbcSwitch): Promise<MsgToggleIbcSwitchResponse>;\n  UpdateParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse>;\n}\n\nexport const MsgServiceName = \"secret.emergencybutton.v1beta1.Msg\";\nexport class MsgClientImpl implements Msg {\n  private readonly rpc: Rpc;\n  private readonly service: string;\n  constructor(rpc: Rpc, opts?: { service?: string }) {\n    this.service = opts?.service || MsgServiceName;\n    this.rpc = rpc;\n    this.ToggleIbcSwitch = this.ToggleIbcSwitch.bind(this);\n    this.UpdateParams = this.UpdateParams.bind(this);\n  }\n  ToggleIbcSwitch(request: MsgToggleIbcSwitch): Promise<MsgToggleIbcSwitchResponse> {\n    const data = MsgToggleIbcSwitch.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ToggleIbcSwitch\", data);\n    return promise.then((data) => MsgToggleIbcSwitchResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse> {\n    const data = MsgUpdateParams.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateParams\", data);\n    return promise.then((data) => MsgUpdateParamsResponse.decode(_m0.Reader.create(data)));\n  }\n}\n\ninterface Rpc {\n  request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1941, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1946, "column": 0}, "map": {"version":3,"file":"msg.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/secretjs%401.15.1_encoding%400.1.13/node_modules/secretjs/src/protobuf/secret/registration/v1beta1/msg.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v1.178.0\n//   protoc               v3.21.3\n// source: secret/registration/v1beta1/msg.proto\n\n/* eslint-disable */\nimport * as _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"secret.registration.v1beta1\";\n\nexport interface RaAuthenticate {\n  sender: Uint8Array;\n  certificate: Uint8Array;\n}\n\nexport interface RaAuthenticateResponse {\n  data: string;\n  events: string;\n}\n\nexport interface MasterKey {\n  bytes: Uint8Array;\n}\n\nexport interface Key {\n  key: Uint8Array;\n}\n\nfunction createBaseRaAuthenticate(): RaAuthenticate {\n  return { sender: new Uint8Array(0), certificate: new Uint8Array(0) };\n}\n\nexport const RaAuthenticate = {\n  encode(message: RaAuthenticate, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sender.length !== 0) {\n      writer.uint32(10).bytes(message.sender);\n    }\n    if (message.certificate.length !== 0) {\n      writer.uint32(18).bytes(message.certificate);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): RaAuthenticate {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRaAuthenticate();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.sender = reader.bytes();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.certificate = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): RaAuthenticate {\n    return {\n      sender: isSet(object.sender) ? bytesFromBase64(object.sender) : new Uint8Array(0),\n      certificate: isSet(object.certificate) ? bytesFromBase64(object.certificate) : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: RaAuthenticate): unknown {\n    const obj: any = {};\n    if (message.sender.length !== 0) {\n      obj.sender = base64FromBytes(message.sender);\n    }\n    if (message.certificate.length !== 0) {\n      obj.certificate = base64FromBytes(message.certificate);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<RaAuthenticate>): RaAuthenticate {\n    return RaAuthenticate.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<RaAuthenticate>): RaAuthenticate {\n    const message = createBaseRaAuthenticate();\n    message.sender = object.sender ?? new Uint8Array(0);\n    message.certificate = object.certificate ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseRaAuthenticateResponse(): RaAuthenticateResponse {\n  return { data: \"\", events: \"\" };\n}\n\nexport const RaAuthenticateResponse = {\n  encode(message: RaAuthenticateResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.data !== \"\") {\n      writer.uint32(10).string(message.data);\n    }\n    if (message.events !== \"\") {\n      writer.uint32(18).string(message.events);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): RaAuthenticateResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRaAuthenticateResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.data = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.events = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): RaAuthenticateResponse {\n    return {\n      data: isSet(object.data) ? globalThis.String(object.data) : \"\",\n      events: isSet(object.events) ? globalThis.String(object.events) : \"\",\n    };\n  },\n\n  toJSON(message: RaAuthenticateResponse): unknown {\n    const obj: any = {};\n    if (message.data !== \"\") {\n      obj.data = message.data;\n    }\n    if (message.events !== \"\") {\n      obj.events = message.events;\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<RaAuthenticateResponse>): RaAuthenticateResponse {\n    return RaAuthenticateResponse.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<RaAuthenticateResponse>): RaAuthenticateResponse {\n    const message = createBaseRaAuthenticateResponse();\n    message.data = object.data ?? \"\";\n    message.events = object.events ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMasterKey(): MasterKey {\n  return { bytes: new Uint8Array(0) };\n}\n\nexport const MasterKey = {\n  encode(message: MasterKey, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.bytes.length !== 0) {\n      writer.uint32(10).bytes(message.bytes);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MasterKey {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMasterKey();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.bytes = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MasterKey {\n    return { bytes: isSet(object.bytes) ? bytesFromBase64(object.bytes) : new Uint8Array(0) };\n  },\n\n  toJSON(message: MasterKey): unknown {\n    const obj: any = {};\n    if (message.bytes.length !== 0) {\n      obj.bytes = base64FromBytes(message.bytes);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<MasterKey>): MasterKey {\n    return MasterKey.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<MasterKey>): MasterKey {\n    const message = createBaseMasterKey();\n    message.bytes = object.bytes ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseKey(): Key {\n  return { key: new Uint8Array(0) };\n}\n\nexport const Key = {\n  encode(message: Key, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Key {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseKey();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.key = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Key {\n    return { key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(0) };\n  },\n\n  toJSON(message: Key): unknown {\n    const obj: any = {};\n    if (message.key.length !== 0) {\n      obj.key = base64FromBytes(message.key);\n    }\n    return obj;\n  },\n\n  create(base?: DeepPartial<Key>): Key {\n    return Key.fromPartial(base ?? {});\n  },\n  fromPartial(object: DeepPartial<Key>): Key {\n    const message = createBaseKey();\n    message.key = object.key ?? new Uint8Array(0);\n    return message;\n  },\n};\n\n/** Msg defines the wasm Msg service. */\nexport interface Msg {\n  /** Register and authenticate new node */\n  RegisterAuth(request: RaAuthenticate): Promise<RaAuthenticateResponse>;\n}\n\nexport const MsgServiceName = \"secret.registration.v1beta1.Msg\";\nexport class MsgClientImpl implements Msg {\n  private readonly rpc: Rpc;\n  private readonly service: string;\n  constructor(rpc: Rpc, opts?: { service?: string }) {\n    this.service = opts?.service || MsgServiceName;\n    this.rpc = rpc;\n    this.RegisterAuth = this.RegisterAuth.bind(this);\n  }\n  RegisterAuth(request: RaAuthenticate): Promise<RaAuthenticateResponse> {\n    const data = RaAuthenticate.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"RegisterAuth\", data);\n    return promise.then((data) => RaAuthenticateResponse.decode(_m0.Reader.create(data)));\n  }\n}\n\ninterface Rpc {\n  request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;\n}\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n  if ((globalThis as any).Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\n\nfunction base64FromBytes(arr: Uint8Array): string {\n  if ((globalThis as any).Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin: string[] = [];\n    arr.forEach((byte) => {\n      bin.push(globalThis.String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}