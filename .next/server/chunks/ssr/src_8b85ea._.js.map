{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/showcase/ShowcaseCard.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { formatAddress } from \"@/lib/utils\";\nimport { motion } from \"framer-motion\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\nexport interface ShowcaseCardProps {\n  showcase: {\n    owner: string;\n    chain: number;\n    tokenAddress: string;\n    showcaseCid: string;\n    tokenMetadataCid: string;\n    createdAt: bigint;\n    metadata?: {\n      name?: string;\n      symbol?: string;\n      description?: string;\n      image?: string;\n      socialLinks?: Record<string, string>;\n    };\n  };\n}\n\nexport function ShowcaseCard({ showcase }: ShowcaseCardProps) {\n  const chainIcon = getChainIcon(showcase.chain);\n  const createdDate = new Date(Number(showcase.createdAt) * 1000);\n\n  // Shorten CIDs to first 6 and last 4 characters\n  const shortenCid = (cid: string) => {\n    return `${cid.slice(0, 6)}...${cid.slice(-4)}`;\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.3 }}\n    >\n      <Card className=\"overflow-hidden hover:border-purple-500/40 hover:shadow-lg transition-all duration-200 group\">\n        {showcase.metadata?.image && (\n          <div className=\"relative w-full h-48 overflow-hidden\">\n            <Image\n              src={showcase.metadata.image}\n              alt={showcase.metadata.name || \"Token\"}\n              fill\n              className=\"object-cover transition-transform duration-300 group-hover:scale-110\"\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n          </div>\n        )}\n        <CardHeader className=\"p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              {chainIcon && (\n                <div className=\"w-8 h-8 p-1 bg-gray-100 dark:bg-gray-800 rounded-full\">\n                  <Image\n                    src={chainIcon}\n                    alt=\"Chain\"\n                    width={24}\n                    height={24}\n                    className=\"rounded-full\"\n                  />\n                </div>\n              )}\n              <div>\n                <CardTitle className=\"text-xl font-bold\">\n                  {showcase.metadata?.name ||\n                    formatAddress(showcase.tokenAddress)}\n                </CardTitle>\n                {showcase.metadata?.symbol && (\n                  <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    ${showcase.metadata.symbol}\n                  </span>\n                )}\n              </div>\n            </div>\n            <Link\n              href={`/showcase/${showcase.tokenAddress}`}\n              className=\"p-2 text-purple-500 hover:text-purple-400 hover:bg-purple-100 dark:hover:bg-purple-900/30 rounded-full transition-colors\"\n            >\n              <Icons.arrowRight className=\"h-5 w-5\" />\n            </Link>\n          </div>\n        </CardHeader>\n        <CardContent className=\"p-4 pt-0\">\n          <div className=\"space-y-3\">\n            {showcase.metadata?.description ? (\n              <p className=\"text-sm text-gray-600 dark:text-gray-300 line-clamp-2\">\n                {showcase.metadata.description}\n              </p>\n            ) : (\n              <div className=\"space-y-2 bg-gray-50 dark:bg-gray-800/50 p-3 rounded-lg\">\n                <p className=\"text-sm\">\n                  <span className=\"font-medium text-gray-700 dark:text-gray-300\">\n                    CID:\n                  </span>{\" \"}\n                  <code className=\"px-2 py-0.5 bg-gray-100 dark:bg-gray-800 rounded text-xs\">\n                    {shortenCid(showcase.showcaseCid)}\n                  </code>\n                </p>\n                <p className=\"text-sm\">\n                  <span className=\"font-medium text-gray-700 dark:text-gray-300\">\n                    Metadata:\n                  </span>{\" \"}\n                  <code className=\"px-2 py-0.5 bg-gray-100 dark:bg-gray-800 rounded text-xs\">\n                    {shortenCid(showcase.tokenMetadataCid)}\n                  </code>\n                </p>\n              </div>\n            )}\n            <div className=\"flex items-center justify-between text-sm text-gray-500 pt-2 border-t border-gray-100 dark:border-gray-800\">\n              <div className=\"flex items-center gap-4\">\n                <div className=\"flex items-center gap-1.5\">\n                  <Icons.user className=\"h-4 w-4\" />\n                  <span className=\"hover:text-gray-700 dark:hover:text-gray-300 transition-colors\">\n                    {formatAddress(showcase.owner)}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-1.5\">\n                  <Icons.calendar className=\"h-4 w-4\" />\n                  <span>{createdDate.toLocaleDateString()}</span>\n                </div>\n              </div>\n              {showcase.metadata?.socialLinks && (\n                <div className=\"flex gap-2\">\n                  {Object.entries(showcase.metadata.socialLinks).map(\n                    ([platform, url]) => (\n                      <Link\n                        key={platform}\n                        href={url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-gray-400 hover:text-purple-500 transition-colors\"\n                      >\n                        {getSocialIcon(platform)}\n                      </Link>\n                    )\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </motion.div>\n  );\n}\n\nfunction getChainIcon(chainId: number): string {\n  switch (chainId) {\n    case 1: // Taurus\n      return \"/chains/taurus.svg\";\n    case 2: // Solana\n      return \"/chains/solana.svg\";\n    case 3: // Secret\n      return \"/chains/secret.svg\";\n    case 4: // TON\n      return \"/chains/ton.svg\";\n    default:\n      return \"/chains/taurus.svg\";\n  }\n}\n\nfunction getSocialIcon(platform: string) {\n  const Icon = Icons[platform as keyof typeof Icons] || Icons.link;\n  return <Icon className=\"h-4 w-4\" />;\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/store/useShowcaseStore.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { ShowcaseCardProps } from \"@/components/showcase/ShowcaseCard\";\n\ninterface ShowcaseState {\n  showcases: ShowcaseCardProps[\"showcase\"][];\n  filteredShowcases: ShowcaseCardProps[\"showcase\"][];\n  loading: boolean;\n  searchTerm: string;\n  selectedChain: number | null;\n  setShowcases: (showcases: ShowcaseCardProps[\"showcase\"][]) => void;\n  setLoading: (loading: boolean) => void;\n  setSearchTerm: (term: string) => void;\n  setSelectedChain: (chain: number | null) => void;\n  updateShowcaseMetadata: (tokenAddress: string, metadata: any) => void;\n  filterShowcases: () => void;\n}\n\nexport const useShowcaseStore = create<ShowcaseState>((set, get) => ({\n  showcases: [],\n  filteredShowcases: [],\n  loading: true,\n  searchTerm: \"\",\n  selectedChain: null,\n\n  setShowcases: (showcases) => {\n    set({ showcases });\n    get().filterShowcases();\n  },\n\n  setLoading: (loading) => set({ loading }),\n\n  setSearchTerm: (searchTerm) => {\n    set({ searchTerm });\n    get().filterShowcases();\n  },\n\n  setSelectedChain: (selectedChain) => {\n    set({ selectedChain });\n    get().filterShowcases();\n  },\n\n  updateShowcaseMetadata: (tokenAddress, metadata) => {\n    set((state) => ({\n      showcases: state.showcases.map((showcase) =>\n        showcase.tokenAddress === tokenAddress\n          ? { ...showcase, metadata }\n          : showcase\n      ),\n    }));\n    get().filterShowcases();\n  },\n\n  filterShowcases: () => {\n    const { showcases, searchTerm, selectedChain } = get();\n    let filtered = [...showcases];\n\n    if (selectedChain !== null) {\n      filtered = filtered.filter((s) => s.chain === selectedChain);\n    }\n\n    if (searchTerm) {\n      const searchLower = searchTerm.toLowerCase();\n      filtered = filtered.filter(\n        (s) =>\n          s.metadata?.name?.toLowerCase().includes(searchLower) ||\n          s.tokenAddress.toLowerCase().includes(searchLower) ||\n          s.metadata?.description?.toLowerCase().includes(searchLower) ||\n          s.metadata?.symbol?.toLowerCase().includes(searchLower)\n      );\n    }\n\n    set({ filteredShowcases: filtered });\n  },\n}));\n"],"names":[],"mappings":";;;AAAA;;AAiBO,MAAM,mBAAmB,CAAA,GAAA,6TAAA,CAAA,SAAM,AAAD,EAAiB,CAAC,KAAK,MAAQ,CAAC;QACnE,WAAW,EAAE;QACb,mBAAmB,EAAE;QACrB,SAAS;QACT,YAAY;QACZ,eAAe;QAEf,cAAc,CAAC;YACb,IAAI;gBAAE;YAAU;YAChB,MAAM,eAAe;QACvB;QAEA,YAAY,CAAC,UAAY,IAAI;gBAAE;YAAQ;QAEvC,eAAe,CAAC;YACd,IAAI;gBAAE;YAAW;YACjB,MAAM,eAAe;QACvB;QAEA,kBAAkB,CAAC;YACjB,IAAI;gBAAE;YAAc;YACpB,MAAM,eAAe;QACvB;QAEA,wBAAwB,CAAC,cAAc;YACrC,IAAI,CAAC,QAAU,CAAC;oBACd,WAAW,MAAM,SAAS,CAAC,GAAG,CAAC,CAAC,WAC9B,SAAS,YAAY,KAAK,eACtB;4BAAE,GAAG,QAAQ;4BAAE;wBAAS,IACxB;gBAER,CAAC;YACD,MAAM,eAAe;QACvB;QAEA,iBAAiB;YACf,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG;YACjD,IAAI,WAAW;mBAAI;aAAU;YAE7B,IAAI,kBAAkB,MAAM;gBAC1B,WAAW,SAAS,MAAM,CAAC,CAAC,IAAM,EAAE,KAAK,KAAK;YAChD;YAEA,IAAI,YAAY;gBACd,MAAM,cAAc,WAAW,WAAW;gBAC1C,WAAW,SAAS,MAAM,CACxB,CAAC,IACC,EAAE,QAAQ,EAAE,MAAM,cAAc,SAAS,gBACzC,EAAE,YAAY,CAAC,WAAW,GAAG,QAAQ,CAAC,gBACtC,EAAE,QAAQ,EAAE,aAAa,cAAc,SAAS,gBAChD,EAAE,QAAQ,EAAE,QAAQ,cAAc,SAAS;YAEjD;YAEA,IAAI;gBAAE,mBAAmB;YAAS;QACpC;IACF,CAAC"}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/showcase/ShowcaseGrid.tsx"],"sourcesContent":["import { ShowcaseCard, ShowcaseCardProps } from \"./ShowcaseCard\";\nimport { useShowcaseStore } from \"@/lib/store/useShowcaseStore\";\nimport { AnimatePresence } from \"framer-motion\";\n\nexport function ShowcaseGrid() {\n  const { filteredShowcases, loading } = useShowcaseStore();\n\n  if (loading) {\n    return <ShowcaseGridSkeleton />;\n  }\n\n  return (\n    <AnimatePresence>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {filteredShowcases.map((showcase: ShowcaseCardProps[\"showcase\"]) => (\n          <ShowcaseCard key={showcase.tokenAddress} showcase={showcase} />\n        ))}\n      </div>\n    </AnimatePresence>\n  );\n}\n\nfunction ShowcaseGridSkeleton() {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {[...Array(6)].map((_, i) => (\n        <div\n          key={i}\n          className=\"h-[300px] bg-gray-100 dark:bg-gray-800 rounded-lg animate-pulse\"\n        />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEO,SAAS;IACd,MAAM,EAAE,iBAAiB,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,mBAAgB,AAAD;IAEtD,IAAI,SAAS;QACX,qBAAO,+YAAC;;;;;IACV;IAEA,qBACE,+YAAC,oUAAA,CAAA,kBAAe;kBACd,cAAA,+YAAC;YAAI,WAAU;sBACZ,kBAAkB,GAAG,CAAC,CAAC,yBACtB,+YAAC,8IAAA,CAAA,eAAY;oBAA6B,UAAU;mBAAjC,SAAS,YAAY;;;;;;;;;;;;;;;AAKlD;AAEA,SAAS;IACP,qBACE,+YAAC;QAAI,WAAU;kBACZ;eAAI,MAAM;SAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,+YAAC;gBAEC,WAAU;eADL;;;;;;;;;;AAMf"}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,uWAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,+YAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 525, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,+YAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE"}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 753, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 759, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/showcase/ShowcaseFilters.tsx"],"sourcesContent":["import { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { useShowcaseStore } from \"@/lib/store/useShowcaseStore\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { Button } from \"@/components/ui/button\";\n\nexport function ShowcaseFilters() {\n  const { searchTerm, setSearchTerm, selectedChain, setSelectedChain } =\n    useShowcaseStore();\n\n  return (\n    <div className=\"space-y-4 mb-8\">\n      <div className=\"flex flex-col md:flex-row gap-4\">\n        <div className=\"flex-1 relative\">\n          <Icons.search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n          <Input\n            placeholder=\"Search by name, symbol, or address...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"pl-10\"\n          />\n        </div>\n        <Select\n          value={selectedChain?.toString() || \"5\"}\n          onValueChange={(value) =>\n            setSelectedChain(value === \"5\" ? null : Number(value))\n          }\n        >\n          <SelectTrigger className=\"w-[180px]\">\n            <SelectValue placeholder=\"All Chains\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"5\">\n              <div className=\"flex items-center gap-2\">\n                <span>All Chains</span>\n              </div>\n            </SelectItem>\n            <SelectItem value=\"1\">\n              <div className=\"flex items-center gap-2\">\n                <Icons.taurus className=\"h-4 w-4\" />\n                <span>Taurus</span>\n              </div>\n            </SelectItem>\n            <SelectItem value=\"2\">\n              <div className=\"flex items-center gap-2\">\n                <Icons.solana className=\"h-4 w-4\" />\n                <span>Solana</span>\n              </div>\n            </SelectItem>\n            <SelectItem value=\"3\">\n              <div className=\"flex items-center gap-2\">\n                <Icons.secret className=\"h-4 w-4\" />\n                <span>Secret</span>\n              </div>\n            </SelectItem>\n            <SelectItem value=\"4\">\n              <div className=\"flex items-center gap-2\">\n                <Icons.ton className=\"h-4 w-4\" />\n                <span>TON</span>\n              </div>\n            </SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      {/* Active Filters */}\n      <div className=\"flex gap-2 flex-wrap\">\n        {searchTerm && (\n          <Badge variant=\"secondary\" className=\"flex items-center gap-2\">\n            <span>Search: {searchTerm}</span>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"h-4 w-4 p-0 hover:bg-transparent\"\n              onClick={() => setSearchTerm(\"\")}\n            >\n              <Icons.x className=\"h-3 w-3\" />\n            </Button>\n          </Badge>\n        )}\n        {selectedChain && (\n          <Badge variant=\"secondary\" className=\"flex items-center gap-2\">\n            <span>Chain: {getChainName(selectedChain)}</span>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"h-4 w-4 p-0 hover:bg-transparent\"\n              onClick={() => setSelectedChain(null)}\n            >\n              <Icons.x className=\"h-3 w-3\" />\n            </Button>\n          </Badge>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction getChainName(chainId: number): string {\n  switch (chainId) {\n    case 1:\n      return \"Taurus\";\n    case 2:\n      return \"Solana\";\n    case 3:\n      return \"Secret\";\n    case 4:\n      return \"TON\";\n    default:\n      return \"Unknown\";\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1093, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1099, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/showcase/ShowcaseHeader.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport { Button } from \"@/components/ui/button\";\nimport { Icons } from \"@/components/ui/icons\";\n\nexport function ShowcaseHeader() {\n  return (\n    <div className=\"flex justify-between items-center mb-8\">\n      <div>\n        <h1 className=\"text-3xl font-bold\">Token Showcases</h1>\n        <p className=\"text-gray-500 mt-2\">\n          Discover and explore community-created tokens\n        </p>\n      </div>\n      <Link href=\"/create\">\n        <Button className=\"flex items-center gap-2\">\n          <Icons.plus className=\"h-4 w-4\" />\n          Create Token\n        </Button>\n      </Link>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEO,SAAS;IACd,qBACE,+YAAC;QAAI,WAAU;;0BACb,+YAAC;;kCACC,+YAAC;wBAAG,WAAU;kCAAqB;;;;;;kCACnC,+YAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAIpC,+YAAC,6TAAA,CAAA,UAAI;gBAAC,MAAK;0BACT,cAAA,+YAAC,kIAAA,CAAA,SAAM;oBAAC,WAAU;;sCAChB,+YAAC,iIAAA,CAAA,QAAK,CAAC,IAAI;4BAAC,WAAU;;;;;;wBAAY;;;;;;;;;;;;;;;;;;AAM5C"}},
    {"offset": {"line": 1169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1185, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/constant.ts"],"sourcesContent":["import { Address } from \"viem\";\nimport { abi as Erc20TokenFactoryABI } from \"./compiledContracts/Erc20TokenFactory.json\";\nimport { abi as AgentRegistryABI } from \"./compiledContracts/AgentRegistry.json\";\n\nexport const evmContractAddress = process.env\n  .NEXT_PUBLIC_EVM_CONTRACT_ADDRESS as Address;\n\nif (!evmContractAddress) {\n  throw new Error(\"EVM contract address is not set\");\n}\n\nexport const wagmiContractConfig = {\n  address: evmContractAddress,\n  abi: Erc20TokenFactoryABI,\n} as const;\n\nexport const agentRegistryAddress = process.env\n  .NEXT_PUBLIC_AGENT_REGISTRY_ADDRESS as Address;\n\nif (!agentRegistryAddress) {\n  throw new Error(\"Agent registry address is not set\");\n}\n\nexport const wagmiAgentRegistryConfig = {\n  address: agentRegistryAddress,\n  abi: AgentRegistryABI,\n} as const;\n\nexport const LOCAL_RPC_URL = \"http://127.0.0.1:8545\";\n"],"names":[],"mappings":";;;;;;;AACA;AACA;;;AAEO,MAAM;AAGb,uCAAyB;;AAEzB;AAEO,MAAM,sBAAsB;IACjC,SAAS;IACT,KAAK,4HAAA,CAAA,MAAoB;AAC3B;AAEO,MAAM;AAGb,uCAA2B;;AAE3B;AAEO,MAAM,2BAA2B;IACtC,SAAS;IACT,KAAK,wHAAA,CAAA,MAAgB;AACvB;AAEO,MAAM,gBAAgB"}},
    {"offset": {"line": 1213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1219, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/utils/formatShowcaseData.ts"],"sourcesContent":["export interface TokenShowcase {\n  owner: string;\n  chain: number; // Chain enum: 0=SECRETNETWORK, 1=EVM, 2=SOLANA, 3=TON\n  tokenAddress: string;\n  showcaseCid: string;\n  tokenMetadataCid: string;\n  createdAt: bigint;\n}\n\nexport function formatShowcaseData(data: any): TokenShowcase | TokenShowcase[] {\n  // Handle single showcase\n  if (!Array.isArray(data)) {\n    const showcase: TokenShowcase = {\n      owner: data.owner,\n      chain: Number(data.chain),\n      tokenAddress: data.tokenAddress,\n      showcaseCid: data.showcaseCid.replace(/\"/g, \"\"), // Remove quotes\n      tokenMetadataCid: data.tokenMetadataCid.replace(/\"/g, \"\"), // Remove quotes\n      createdAt: BigInt(data.createdAt),\n    };\n    return showcase;\n  }\n\n  // Handle array of showcases\n  const showcases: TokenShowcase[] = data.map((item) => ({\n    owner: item.owner,\n    chain: Number(item.chain),\n    tokenAddress: item.tokenAddress,\n    showcaseCid: item.showcaseCid.replace(/\"/g, \"\"),\n    tokenMetadataCid: item.tokenMetadataCid.replace(/\"/g, \"\"),\n    createdAt: BigInt(item.createdAt),\n  }));\n  return showcases;\n}\n"],"names":[],"mappings":";;;AASO,SAAS,mBAAmB,IAAS;IAC1C,yBAAyB;IACzB,IAAI,CAAC,MAAM,OAAO,CAAC,OAAO;QACxB,MAAM,WAA0B;YAC9B,OAAO,KAAK,KAAK;YACjB,OAAO,OAAO,KAAK,KAAK;YACxB,cAAc,KAAK,YAAY;YAC/B,aAAa,KAAK,WAAW,CAAC,OAAO,CAAC,MAAM;YAC5C,kBAAkB,KAAK,gBAAgB,CAAC,OAAO,CAAC,MAAM;YACtD,WAAW,OAAO,KAAK,SAAS;QAClC;QACA,OAAO;IACT;IAEA,4BAA4B;IAC5B,MAAM,YAA6B,KAAK,GAAG,CAAC,CAAC,OAAS,CAAC;YACrD,OAAO,KAAK,KAAK;YACjB,OAAO,OAAO,KAAK,KAAK;YACxB,cAAc,KAAK,YAAY;YAC/B,aAAa,KAAK,WAAW,CAAC,OAAO,CAAC,MAAM;YAC5C,kBAAkB,KAAK,gBAAgB,CAAC,OAAO,CAAC,MAAM;YACtD,WAAW,OAAO,KAAK,SAAS;QAClC,CAAC;IACD,OAAO;AACT"}},
    {"offset": {"line": 1246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1252, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/showcase/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport useSWR from \"swr\";\nimport { ShowcaseGrid } from \"@/components/showcase/ShowcaseGrid\";\nimport { ShowcaseFilters } from \"@/components/showcase/ShowcaseFilters\";\nimport { ShowcaseHeader } from \"@/components/showcase/ShowcaseHeader\";\nimport { useShowcaseStore } from \"@/lib/store/useShowcaseStore\";\nimport { useReadContract } from \"wagmi\";\nimport { wagmiContractConfig } from \"@/lib/constant\";\nimport { formatShowcaseData } from \"@/lib/utils/formatShowcaseData\";\nimport type { TokenShowcase } from \"@/lib/utils/formatShowcaseData\";\n\nconst fetcher = (url: string) => fetch(url).then((res) => res.json());\n\nexport default function ShowcasePage() {\n  const { setShowcases, setLoading, updateShowcaseMetadata } =\n    useShowcaseStore();\n  const [formattedShowcases, setFormattedShowcases] =\n    useState<TokenShowcase[]>();\n\n  // Use the hook to read all showcases\n  const { data: showcaseData, isLoading } = useReadContract({\n    ...wagmiContractConfig,\n    functionName: \"getAllTokenShowcases\",\n    args: [],\n  });\n\n  // Format showcase data\n  useEffect(() => {\n    if (!showcaseData) return;\n\n    try {\n      const formatted = formatShowcaseData(showcaseData);\n      console.log(\"Formatted showcases:\", formatted);\n      if (!Array.isArray(formatted)) {\n        throw new Error(\n          \"Expected array of showcase data, received single item\"\n        );\n      }\n      setShowcases(formatted);\n      setFormattedShowcases(formatted);\n    } catch (error) {\n      console.error(\"Error processing showcases:\", error);\n    }\n  }, [showcaseData, setShowcases]);\n  //https://data-dao.vercel.app/api/cid/metadata/bafkr6igvrhrqaf7liljzjbnb3t6lvdq5npc45pjybvjgm444t6jwo3qete\n  // Fetch metadata for all showcases using SWR\n  console.log(formattedShowcases);\n  const { data: metadataResults } = useSWR(\n    formattedShowcases\n      ? formattedShowcases.map(\n          (showcase) =>\n            `https://data-dao.vercel.app/api/cid/metadata/${showcase.tokenMetadataCid}`\n        )\n      : null,\n    (urls) => Promise.all(urls.map((url) => fetcher(url)))\n  );\n\n  // Update metadata in store when available\n  useEffect(() => {\n    if (formattedShowcases && metadataResults) {\n      formattedShowcases.forEach((showcase, index) => {\n        updateShowcaseMetadata(showcase.tokenAddress, metadataResults[index]);\n      });\n    }\n  }, [formattedShowcases, metadataResults, updateShowcaseMetadata]);\n\n  // Update loading state\n  useEffect(() => {\n    setLoading(isLoading);\n  }, [isLoading, setLoading]);\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <ShowcaseHeader />\n      <ShowcaseFilters />\n      <ShowcaseGrid />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAFA;AALA;AAHA;;;;;;;;;;;AAaA,MAAM,UAAU,CAAC,MAAgB,MAAM,KAAK,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;AAEnD,SAAS;IACtB,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,sBAAsB,EAAE,GACxD,CAAA,GAAA,uIAAA,CAAA,mBAAgB,AAAD;IACjB,MAAM,CAAC,oBAAoB,sBAAsB,GAC/C,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD;IAET,qCAAqC;IACrC,MAAM,EAAE,MAAM,YAAY,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,4WAAA,CAAA,kBAAe,AAAD,EAAE;QACxD,GAAG,sHAAA,CAAA,sBAAmB;QACtB,cAAc;QACd,MAAM,EAAE;IACV;IAEA,uBAAuB;IACvB,CAAA,GAAA,sWAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,cAAc;QAEnB,IAAI;YACF,MAAM,YAAY,CAAA,GAAA,yIAAA,CAAA,qBAAkB,AAAD,EAAE;YACrC,QAAQ,GAAG,CAAC,wBAAwB;YACpC,IAAI,CAAC,MAAM,OAAO,CAAC,YAAY;gBAC7B,MAAM,IAAI,MACR;YAEJ;YACA,aAAa;YACb,sBAAsB;QACxB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;QAC/C;IACF,GAAG;QAAC;QAAc;KAAa;IAC/B,0GAA0G;IAC1G,6CAA6C;IAC7C,QAAQ,GAAG,CAAC;IACZ,MAAM,EAAE,MAAM,eAAe,EAAE,GAAG,CAAA,GAAA,oOAAA,CAAA,UAAM,AAAD,EACrC,qBACI,mBAAmB,GAAG,CACpB,CAAC,WACC,CAAC,6CAA6C,EAAE,SAAS,gBAAgB,EAAE,IAE/E,MACJ,CAAC,OAAS,QAAQ,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,MAAQ,QAAQ;IAGlD,0CAA0C;IAC1C,CAAA,GAAA,sWAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,sBAAsB,iBAAiB;YACzC,mBAAmB,OAAO,CAAC,CAAC,UAAU;gBACpC,uBAAuB,SAAS,YAAY,EAAE,eAAe,CAAC,MAAM;YACtE;QACF;IACF,GAAG;QAAC;QAAoB;QAAiB;KAAuB;IAEhE,uBAAuB;IACvB,CAAA,GAAA,sWAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG;QAAC;QAAW;KAAW;IAE1B,qBACE,+YAAC;QAAI,WAAU;;0BACb,+YAAC,gJAAA,CAAA,iBAAc;;;;;0BACf,+YAAC,iJAAA,CAAA,kBAAe;;;;;0BAChB,+YAAC,8IAAA,CAAA,eAAY;;;;;;;;;;;AAGnB"}},
    {"offset": {"line": 1352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}