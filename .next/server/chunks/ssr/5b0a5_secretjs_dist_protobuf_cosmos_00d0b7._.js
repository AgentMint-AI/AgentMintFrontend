module.exports = {

"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/upgrade/v1beta1/upgrade.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/upgrade/v1beta1/upgrade.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ModuleVersion = exports.CancelSoftwareUpgradeProposal = exports.SoftwareUpgradeProposal = exports.Plan = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
const timestamp_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/timestamp.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.upgrade.v1beta1";
function createBasePlan() {
    return {
        name: "",
        time: undefined,
        height: "0",
        info: "",
        upgraded_client_state: undefined
    };
}
exports.Plan = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.time !== undefined) {
            timestamp_1.Timestamp.encode(message.time, writer.uint32(18).fork()).ldelim();
        }
        if (message.height !== "0") {
            writer.uint32(24).int64(message.height);
        }
        if (message.info !== "") {
            writer.uint32(34).string(message.info);
        }
        if (message.upgraded_client_state !== undefined) {
            any_1.Any.encode(message.upgraded_client_state, writer.uint32(42).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePlan();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.name = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.height = longToString(reader.int64());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.info = reader.string();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.upgraded_client_state = any_1.Any.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            name: isSet(object.name) ? globalThis.String(object.name) : "",
            time: isSet(object.time) ? fromJsonTimestamp(object.time) : undefined,
            height: isSet(object.height) ? globalThis.String(object.height) : "0",
            info: isSet(object.info) ? globalThis.String(object.info) : "",
            upgraded_client_state: isSet(object.upgraded_client_state) ? any_1.Any.fromJSON(object.upgraded_client_state) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.name !== "") {
            obj.name = message.name;
        }
        if (message.time !== undefined) {
            obj.time = fromTimestamp(message.time).toISOString();
        }
        if (message.height !== "0") {
            obj.height = message.height;
        }
        if (message.info !== "") {
            obj.info = message.info;
        }
        if (message.upgraded_client_state !== undefined) {
            obj.upgraded_client_state = any_1.Any.toJSON(message.upgraded_client_state);
        }
        return obj;
    },
    create (base) {
        return exports.Plan.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBasePlan();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.time = object.time !== undefined && object.time !== null ? timestamp_1.Timestamp.fromPartial(object.time) : undefined;
        message.height = (_b = object.height) !== null && _b !== void 0 ? _b : "0";
        message.info = (_c = object.info) !== null && _c !== void 0 ? _c : "";
        message.upgraded_client_state = object.upgraded_client_state !== undefined && object.upgraded_client_state !== null ? any_1.Any.fromPartial(object.upgraded_client_state) : undefined;
        return message;
    }
};
function createBaseSoftwareUpgradeProposal() {
    return {
        title: "",
        description: "",
        plan: undefined
    };
}
exports.SoftwareUpgradeProposal = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        if (message.plan !== undefined) {
            exports.Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSoftwareUpgradeProposal();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.title = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.description = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.plan = exports.Plan.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            title: isSet(object.title) ? globalThis.String(object.title) : "",
            description: isSet(object.description) ? globalThis.String(object.description) : "",
            plan: isSet(object.plan) ? exports.Plan.fromJSON(object.plan) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.title !== "") {
            obj.title = message.title;
        }
        if (message.description !== "") {
            obj.description = message.description;
        }
        if (message.plan !== undefined) {
            obj.plan = exports.Plan.toJSON(message.plan);
        }
        return obj;
    },
    create (base) {
        return exports.SoftwareUpgradeProposal.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseSoftwareUpgradeProposal();
        message.title = (_a = object.title) !== null && _a !== void 0 ? _a : "";
        message.description = (_b = object.description) !== null && _b !== void 0 ? _b : "";
        message.plan = object.plan !== undefined && object.plan !== null ? exports.Plan.fromPartial(object.plan) : undefined;
        return message;
    }
};
function createBaseCancelSoftwareUpgradeProposal() {
    return {
        title: "",
        description: ""
    };
}
exports.CancelSoftwareUpgradeProposal = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCancelSoftwareUpgradeProposal();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.title = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.description = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            title: isSet(object.title) ? globalThis.String(object.title) : "",
            description: isSet(object.description) ? globalThis.String(object.description) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.title !== "") {
            obj.title = message.title;
        }
        if (message.description !== "") {
            obj.description = message.description;
        }
        return obj;
    },
    create (base) {
        return exports.CancelSoftwareUpgradeProposal.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseCancelSoftwareUpgradeProposal();
        message.title = (_a = object.title) !== null && _a !== void 0 ? _a : "";
        message.description = (_b = object.description) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseModuleVersion() {
    return {
        name: "",
        version: "0"
    };
}
exports.ModuleVersion = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.version !== "0") {
            writer.uint32(16).uint64(message.version);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseModuleVersion();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.name = reader.string();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.version = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            name: isSet(object.name) ? globalThis.String(object.name) : "",
            version: isSet(object.version) ? globalThis.String(object.version) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.name !== "") {
            obj.name = message.name;
        }
        if (message.version !== "0") {
            obj.version = message.version;
        }
        return obj;
    },
    create (base) {
        return exports.ModuleVersion.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseModuleVersion();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.version = (_b = object.version) !== null && _b !== void 0 ? _b : "0";
        return message;
    }
};
function toTimestamp(date) {
    const seconds = Math.trunc(date.getTime() / 1000).toString();
    const nanos = date.getTime() % 1000 * 1000000;
    return {
        seconds,
        nanos
    };
}
function fromTimestamp(t) {
    let millis = (globalThis.Number(t.seconds) || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return toTimestamp(o);
    } else if (typeof o === "string") {
        return toTimestamp(new globalThis.Date(o));
    } else {
        return timestamp_1.Timestamp.fromJSON(o);
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=upgrade.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/upgrade/v1beta1/tx.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/upgrade/v1beta1/tx.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MsgClientImpl = exports.MsgServiceName = exports.MsgCancelUpgradeResponse = exports.MsgCancelUpgrade = exports.MsgSoftwareUpgradeResponse = exports.MsgSoftwareUpgrade = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const upgrade_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/upgrade/v1beta1/upgrade.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.upgrade.v1beta1";
function createBaseMsgSoftwareUpgrade() {
    return {
        authority: "",
        plan: undefined
    };
}
exports.MsgSoftwareUpgrade = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        if (message.plan !== undefined) {
            upgrade_1.Plan.encode(message.plan, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSoftwareUpgrade();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.plan = upgrade_1.Plan.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            authority: isSet(object.authority) ? globalThis.String(object.authority) : "",
            plan: isSet(object.plan) ? upgrade_1.Plan.fromJSON(object.plan) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        if (message.plan !== undefined) {
            obj.plan = upgrade_1.Plan.toJSON(message.plan);
        }
        return obj;
    },
    create (base) {
        return exports.MsgSoftwareUpgrade.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgSoftwareUpgrade();
        message.authority = (_a = object.authority) !== null && _a !== void 0 ? _a : "";
        message.plan = object.plan !== undefined && object.plan !== null ? upgrade_1.Plan.fromPartial(object.plan) : undefined;
        return message;
    }
};
function createBaseMsgSoftwareUpgradeResponse() {
    return {};
}
exports.MsgSoftwareUpgradeResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSoftwareUpgradeResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgSoftwareUpgradeResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgSoftwareUpgradeResponse();
        return message;
    }
};
function createBaseMsgCancelUpgrade() {
    return {
        authority: ""
    };
}
exports.MsgCancelUpgrade = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCancelUpgrade();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            authority: isSet(object.authority) ? globalThis.String(object.authority) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        return obj;
    },
    create (base) {
        return exports.MsgCancelUpgrade.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgCancelUpgrade();
        message.authority = (_a = object.authority) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseMsgCancelUpgradeResponse() {
    return {};
}
exports.MsgCancelUpgradeResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCancelUpgradeResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgCancelUpgradeResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgCancelUpgradeResponse();
        return message;
    }
};
exports.MsgServiceName = "cosmos.upgrade.v1beta1.Msg";
class MsgClientImpl {
    constructor(rpc, opts){
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.MsgServiceName;
        this.rpc = rpc;
        this.SoftwareUpgrade = this.SoftwareUpgrade.bind(this);
        this.CancelUpgrade = this.CancelUpgrade.bind(this);
    }
    SoftwareUpgrade(request) {
        const data = exports.MsgSoftwareUpgrade.encode(request).finish();
        const promise = this.rpc.request(this.service, "SoftwareUpgrade", data);
        return promise.then((data)=>exports.MsgSoftwareUpgradeResponse.decode(_m0.Reader.create(data)));
    }
    CancelUpgrade(request) {
        const data = exports.MsgCancelUpgrade.encode(request).finish();
        const promise = this.rpc.request(this.service, "CancelUpgrade", data);
        return promise.then((data)=>exports.MsgCancelUpgradeResponse.decode(_m0.Reader.create(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=tx.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/authz/v1beta1/authz.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/authz/v1beta1/authz.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GrantQueueItem = exports.GrantAuthorization = exports.Grant = exports.GenericAuthorization = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
const timestamp_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/timestamp.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.authz.v1beta1";
function createBaseGenericAuthorization() {
    return {
        msg: ""
    };
}
exports.GenericAuthorization = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.msg !== "") {
            writer.uint32(10).string(message.msg);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGenericAuthorization();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.msg = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            msg: isSet(object.msg) ? globalThis.String(object.msg) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.msg !== "") {
            obj.msg = message.msg;
        }
        return obj;
    },
    create (base) {
        return exports.GenericAuthorization.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseGenericAuthorization();
        message.msg = (_a = object.msg) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseGrant() {
    return {
        authorization: undefined,
        expiration: undefined
    };
}
exports.Grant = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.authorization !== undefined) {
            any_1.Any.encode(message.authorization, writer.uint32(10).fork()).ldelim();
        }
        if (message.expiration !== undefined) {
            timestamp_1.Timestamp.encode(message.expiration, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGrant();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.authorization = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            authorization: isSet(object.authorization) ? any_1.Any.fromJSON(object.authorization) : undefined,
            expiration: isSet(object.expiration) ? fromJsonTimestamp(object.expiration) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.authorization !== undefined) {
            obj.authorization = any_1.Any.toJSON(message.authorization);
        }
        if (message.expiration !== undefined) {
            obj.expiration = fromTimestamp(message.expiration).toISOString();
        }
        return obj;
    },
    create (base) {
        return exports.Grant.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseGrant();
        message.authorization = object.authorization !== undefined && object.authorization !== null ? any_1.Any.fromPartial(object.authorization) : undefined;
        message.expiration = object.expiration !== undefined && object.expiration !== null ? timestamp_1.Timestamp.fromPartial(object.expiration) : undefined;
        return message;
    }
};
function createBaseGrantAuthorization() {
    return {
        granter: "",
        grantee: "",
        authorization: undefined,
        expiration: undefined
    };
}
exports.GrantAuthorization = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
            writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
            writer.uint32(18).string(message.grantee);
        }
        if (message.authorization !== undefined) {
            any_1.Any.encode(message.authorization, writer.uint32(26).fork()).ldelim();
        }
        if (message.expiration !== undefined) {
            timestamp_1.Timestamp.encode(message.expiration, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGrantAuthorization();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.granter = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.grantee = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.authorization = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            granter: isSet(object.granter) ? globalThis.String(object.granter) : "",
            grantee: isSet(object.grantee) ? globalThis.String(object.grantee) : "",
            authorization: isSet(object.authorization) ? any_1.Any.fromJSON(object.authorization) : undefined,
            expiration: isSet(object.expiration) ? fromJsonTimestamp(object.expiration) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.granter !== "") {
            obj.granter = message.granter;
        }
        if (message.grantee !== "") {
            obj.grantee = message.grantee;
        }
        if (message.authorization !== undefined) {
            obj.authorization = any_1.Any.toJSON(message.authorization);
        }
        if (message.expiration !== undefined) {
            obj.expiration = fromTimestamp(message.expiration).toISOString();
        }
        return obj;
    },
    create (base) {
        return exports.GrantAuthorization.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseGrantAuthorization();
        message.granter = (_a = object.granter) !== null && _a !== void 0 ? _a : "";
        message.grantee = (_b = object.grantee) !== null && _b !== void 0 ? _b : "";
        message.authorization = object.authorization !== undefined && object.authorization !== null ? any_1.Any.fromPartial(object.authorization) : undefined;
        message.expiration = object.expiration !== undefined && object.expiration !== null ? timestamp_1.Timestamp.fromPartial(object.expiration) : undefined;
        return message;
    }
};
function createBaseGrantQueueItem() {
    return {
        msg_type_urls: []
    };
}
exports.GrantQueueItem = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.msg_type_urls){
            writer.uint32(10).string(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGrantQueueItem();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.msg_type_urls.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            msg_type_urls: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.msg_type_urls) ? object.msg_type_urls.map((e)=>globalThis.String(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.msg_type_urls) === null || _a === void 0 ? void 0 : _a.length) {
            obj.msg_type_urls = message.msg_type_urls;
        }
        return obj;
    },
    create (base) {
        return exports.GrantQueueItem.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseGrantQueueItem();
        message.msg_type_urls = ((_a = object.msg_type_urls) === null || _a === void 0 ? void 0 : _a.map((e)=>e)) || [];
        return message;
    }
};
function toTimestamp(date) {
    const seconds = Math.trunc(date.getTime() / 1000).toString();
    const nanos = date.getTime() % 1000 * 1000000;
    return {
        seconds,
        nanos
    };
}
function fromTimestamp(t) {
    let millis = (globalThis.Number(t.seconds) || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return toTimestamp(o);
    } else if (typeof o === "string") {
        return toTimestamp(new globalThis.Date(o));
    } else {
        return timestamp_1.Timestamp.fromJSON(o);
    }
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=authz.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/authz/v1beta1/tx.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/authz/v1beta1/tx.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MsgClientImpl = exports.MsgServiceName = exports.MsgRevokeResponse = exports.MsgRevoke = exports.MsgExecResponse = exports.MsgExec = exports.MsgGrantResponse = exports.MsgGrant = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
const authz_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/authz/v1beta1/authz.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.authz.v1beta1";
function createBaseMsgGrant() {
    return {
        granter: "",
        grantee: "",
        grant: undefined
    };
}
exports.MsgGrant = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
            writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
            writer.uint32(18).string(message.grantee);
        }
        if (message.grant !== undefined) {
            authz_1.Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgGrant();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.granter = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.grantee = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.grant = authz_1.Grant.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            granter: isSet(object.granter) ? globalThis.String(object.granter) : "",
            grantee: isSet(object.grantee) ? globalThis.String(object.grantee) : "",
            grant: isSet(object.grant) ? authz_1.Grant.fromJSON(object.grant) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.granter !== "") {
            obj.granter = message.granter;
        }
        if (message.grantee !== "") {
            obj.grantee = message.grantee;
        }
        if (message.grant !== undefined) {
            obj.grant = authz_1.Grant.toJSON(message.grant);
        }
        return obj;
    },
    create (base) {
        return exports.MsgGrant.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgGrant();
        message.granter = (_a = object.granter) !== null && _a !== void 0 ? _a : "";
        message.grantee = (_b = object.grantee) !== null && _b !== void 0 ? _b : "";
        message.grant = object.grant !== undefined && object.grant !== null ? authz_1.Grant.fromPartial(object.grant) : undefined;
        return message;
    }
};
function createBaseMsgGrantResponse() {
    return {};
}
exports.MsgGrantResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgGrantResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgGrantResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgGrantResponse();
        return message;
    }
};
function createBaseMsgExec() {
    return {
        grantee: "",
        msgs: []
    };
}
exports.MsgExec = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.grantee !== "") {
            writer.uint32(10).string(message.grantee);
        }
        for (const v of message.msgs){
            any_1.Any.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgExec();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.grantee = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.msgs.push(any_1.Any.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            grantee: isSet(object.grantee) ? globalThis.String(object.grantee) : "",
            msgs: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.msgs) ? object.msgs.map((e)=>any_1.Any.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.grantee !== "") {
            obj.grantee = message.grantee;
        }
        if ((_a = message.msgs) === null || _a === void 0 ? void 0 : _a.length) {
            obj.msgs = message.msgs.map((e)=>any_1.Any.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.MsgExec.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgExec();
        message.grantee = (_a = object.grantee) !== null && _a !== void 0 ? _a : "";
        message.msgs = ((_b = object.msgs) === null || _b === void 0 ? void 0 : _b.map((e)=>any_1.Any.fromPartial(e))) || [];
        return message;
    }
};
function createBaseMsgExecResponse() {
    return {
        results: []
    };
}
exports.MsgExecResponse = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.results){
            writer.uint32(10).bytes(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgExecResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.results.push(reader.bytes());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            results: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.results) ? object.results.map((e)=>bytesFromBase64(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.results) === null || _a === void 0 ? void 0 : _a.length) {
            obj.results = message.results.map((e)=>base64FromBytes(e));
        }
        return obj;
    },
    create (base) {
        return exports.MsgExecResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgExecResponse();
        message.results = ((_a = object.results) === null || _a === void 0 ? void 0 : _a.map((e)=>e)) || [];
        return message;
    }
};
function createBaseMsgRevoke() {
    return {
        granter: "",
        grantee: "",
        msg_type_url: ""
    };
}
exports.MsgRevoke = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
            writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
            writer.uint32(18).string(message.grantee);
        }
        if (message.msg_type_url !== "") {
            writer.uint32(26).string(message.msg_type_url);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgRevoke();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.granter = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.grantee = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.msg_type_url = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            granter: isSet(object.granter) ? globalThis.String(object.granter) : "",
            grantee: isSet(object.grantee) ? globalThis.String(object.grantee) : "",
            msg_type_url: isSet(object.msg_type_url) ? globalThis.String(object.msg_type_url) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.granter !== "") {
            obj.granter = message.granter;
        }
        if (message.grantee !== "") {
            obj.grantee = message.grantee;
        }
        if (message.msg_type_url !== "") {
            obj.msg_type_url = message.msg_type_url;
        }
        return obj;
    },
    create (base) {
        return exports.MsgRevoke.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgRevoke();
        message.granter = (_a = object.granter) !== null && _a !== void 0 ? _a : "";
        message.grantee = (_b = object.grantee) !== null && _b !== void 0 ? _b : "";
        message.msg_type_url = (_c = object.msg_type_url) !== null && _c !== void 0 ? _c : "";
        return message;
    }
};
function createBaseMsgRevokeResponse() {
    return {};
}
exports.MsgRevokeResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgRevokeResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgRevokeResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgRevokeResponse();
        return message;
    }
};
exports.MsgServiceName = "cosmos.authz.v1beta1.Msg";
class MsgClientImpl {
    constructor(rpc, opts){
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.MsgServiceName;
        this.rpc = rpc;
        this.Grant = this.Grant.bind(this);
        this.Exec = this.Exec.bind(this);
        this.Revoke = this.Revoke.bind(this);
    }
    Grant(request) {
        const data = exports.MsgGrant.encode(request).finish();
        const promise = this.rpc.request(this.service, "Grant", data);
        return promise.then((data)=>exports.MsgGrantResponse.decode(_m0.Reader.create(data)));
    }
    Exec(request) {
        const data = exports.MsgExec.encode(request).finish();
        const promise = this.rpc.request(this.service, "Exec", data);
        return promise.then((data)=>exports.MsgExecResponse.decode(_m0.Reader.create(data)));
    }
    Revoke(request) {
        const data = exports.MsgRevoke.encode(request).finish();
        const promise = this.rpc.request(this.service, "Revoke", data);
        return promise.then((data)=>exports.MsgRevokeResponse.decode(_m0.Reader.create(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    } else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for(let i = 0; i < bin.length; ++i){
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    } else {
        const bin = [];
        arr.forEach((byte)=>{
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=tx.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/base/v1beta1/coin.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DecProto = exports.IntProto = exports.DecCoin = exports.Coin = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
exports.protobufPackage = "cosmos.base.v1beta1";
function createBaseCoin() {
    return {
        denom: "",
        amount: ""
    };
}
exports.Coin = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
            writer.uint32(10).string(message.denom);
        }
        if (message.amount !== "") {
            writer.uint32(18).string(message.amount);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCoin();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.denom = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.amount = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            denom: isSet(object.denom) ? globalThis.String(object.denom) : "",
            amount: isSet(object.amount) ? globalThis.String(object.amount) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.denom !== "") {
            obj.denom = message.denom;
        }
        if (message.amount !== "") {
            obj.amount = message.amount;
        }
        return obj;
    },
    create (base) {
        return exports.Coin.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseCoin();
        message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : "";
        message.amount = (_b = object.amount) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseDecCoin() {
    return {
        denom: "",
        amount: ""
    };
}
exports.DecCoin = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
            writer.uint32(10).string(message.denom);
        }
        if (message.amount !== "") {
            writer.uint32(18).string(message.amount);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDecCoin();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.denom = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.amount = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            denom: isSet(object.denom) ? globalThis.String(object.denom) : "",
            amount: isSet(object.amount) ? globalThis.String(object.amount) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.denom !== "") {
            obj.denom = message.denom;
        }
        if (message.amount !== "") {
            obj.amount = message.amount;
        }
        return obj;
    },
    create (base) {
        return exports.DecCoin.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseDecCoin();
        message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : "";
        message.amount = (_b = object.amount) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseIntProto() {
    return {
        int: ""
    };
}
exports.IntProto = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.int !== "") {
            writer.uint32(10).string(message.int);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseIntProto();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.int = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            int: isSet(object.int) ? globalThis.String(object.int) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.int !== "") {
            obj.int = message.int;
        }
        return obj;
    },
    create (base) {
        return exports.IntProto.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseIntProto();
        message.int = (_a = object.int) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseDecProto() {
    return {
        dec: ""
    };
}
exports.DecProto = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.dec !== "") {
            writer.uint32(10).string(message.dec);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDecProto();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.dec = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            dec: isSet(object.dec) ? globalThis.String(object.dec) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.dec !== "") {
            obj.dec = message.dec;
        }
        return obj;
    },
    create (base) {
        return exports.DecProto.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseDecProto();
        message.dec = (_a = object.dec) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=coin.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/bank/v1beta1/bank.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/bank/v1beta1/bank.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Metadata = exports.DenomUnit = exports.Supply = exports.Output = exports.Input = exports.SendEnabled = exports.Params = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.bank.v1beta1";
function createBaseParams() {
    return {
        send_enabled: [],
        default_send_enabled: false
    };
}
exports.Params = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.send_enabled){
            exports.SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.default_send_enabled !== false) {
            writer.uint32(16).bool(message.default_send_enabled);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.send_enabled.push(exports.SendEnabled.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.default_send_enabled = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            send_enabled: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.send_enabled) ? object.send_enabled.map((e)=>exports.SendEnabled.fromJSON(e)) : [],
            default_send_enabled: isSet(object.default_send_enabled) ? globalThis.Boolean(object.default_send_enabled) : false
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.send_enabled) === null || _a === void 0 ? void 0 : _a.length) {
            obj.send_enabled = message.send_enabled.map((e)=>exports.SendEnabled.toJSON(e));
        }
        if (message.default_send_enabled !== false) {
            obj.default_send_enabled = message.default_send_enabled;
        }
        return obj;
    },
    create (base) {
        return exports.Params.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseParams();
        message.send_enabled = ((_a = object.send_enabled) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.SendEnabled.fromPartial(e))) || [];
        message.default_send_enabled = (_b = object.default_send_enabled) !== null && _b !== void 0 ? _b : false;
        return message;
    }
};
function createBaseSendEnabled() {
    return {
        denom: "",
        enabled: false
    };
}
exports.SendEnabled = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
            writer.uint32(10).string(message.denom);
        }
        if (message.enabled !== false) {
            writer.uint32(16).bool(message.enabled);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSendEnabled();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.denom = reader.string();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.enabled = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            denom: isSet(object.denom) ? globalThis.String(object.denom) : "",
            enabled: isSet(object.enabled) ? globalThis.Boolean(object.enabled) : false
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.denom !== "") {
            obj.denom = message.denom;
        }
        if (message.enabled !== false) {
            obj.enabled = message.enabled;
        }
        return obj;
    },
    create (base) {
        return exports.SendEnabled.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseSendEnabled();
        message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : "";
        message.enabled = (_b = object.enabled) !== null && _b !== void 0 ? _b : false;
        return message;
    }
};
function createBaseInput() {
    return {
        address: "",
        coins: []
    };
}
exports.Input = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
            writer.uint32(10).string(message.address);
        }
        for (const v of message.coins){
            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseInput();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            address: isSet(object.address) ? globalThis.String(object.address) : "",
            coins: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.coins) ? object.coins.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.address !== "") {
            obj.address = message.address;
        }
        if ((_a = message.coins) === null || _a === void 0 ? void 0 : _a.length) {
            obj.coins = message.coins.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.Input.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseInput();
        message.address = (_a = object.address) !== null && _a !== void 0 ? _a : "";
        message.coins = ((_b = object.coins) === null || _b === void 0 ? void 0 : _b.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseOutput() {
    return {
        address: "",
        coins: []
    };
}
exports.Output = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
            writer.uint32(10).string(message.address);
        }
        for (const v of message.coins){
            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseOutput();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            address: isSet(object.address) ? globalThis.String(object.address) : "",
            coins: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.coins) ? object.coins.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.address !== "") {
            obj.address = message.address;
        }
        if ((_a = message.coins) === null || _a === void 0 ? void 0 : _a.length) {
            obj.coins = message.coins.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.Output.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseOutput();
        message.address = (_a = object.address) !== null && _a !== void 0 ? _a : "";
        message.coins = ((_b = object.coins) === null || _b === void 0 ? void 0 : _b.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseSupply() {
    return {
        total: []
    };
}
exports.Supply = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.total){
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSupply();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.total.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            total: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.total) ? object.total.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.total) === null || _a === void 0 ? void 0 : _a.length) {
            obj.total = message.total.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.Supply.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseSupply();
        message.total = ((_a = object.total) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseDenomUnit() {
    return {
        denom: "",
        exponent: 0,
        aliases: []
    };
}
exports.DenomUnit = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.denom !== "") {
            writer.uint32(10).string(message.denom);
        }
        if (message.exponent !== 0) {
            writer.uint32(16).uint32(message.exponent);
        }
        for (const v of message.aliases){
            writer.uint32(26).string(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDenomUnit();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.denom = reader.string();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.exponent = reader.uint32();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.aliases.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            denom: isSet(object.denom) ? globalThis.String(object.denom) : "",
            exponent: isSet(object.exponent) ? globalThis.Number(object.exponent) : 0,
            aliases: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.aliases) ? object.aliases.map((e)=>globalThis.String(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.denom !== "") {
            obj.denom = message.denom;
        }
        if (message.exponent !== 0) {
            obj.exponent = Math.round(message.exponent);
        }
        if ((_a = message.aliases) === null || _a === void 0 ? void 0 : _a.length) {
            obj.aliases = message.aliases;
        }
        return obj;
    },
    create (base) {
        return exports.DenomUnit.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseDenomUnit();
        message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : "";
        message.exponent = (_b = object.exponent) !== null && _b !== void 0 ? _b : 0;
        message.aliases = ((_c = object.aliases) === null || _c === void 0 ? void 0 : _c.map((e)=>e)) || [];
        return message;
    }
};
function createBaseMetadata() {
    return {
        description: "",
        denom_units: [],
        base: "",
        display: "",
        name: "",
        symbol: "",
        uri: "",
        uri_hash: ""
    };
}
exports.Metadata = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.description !== "") {
            writer.uint32(10).string(message.description);
        }
        for (const v of message.denom_units){
            exports.DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();
        }
        if (message.base !== "") {
            writer.uint32(26).string(message.base);
        }
        if (message.display !== "") {
            writer.uint32(34).string(message.display);
        }
        if (message.name !== "") {
            writer.uint32(42).string(message.name);
        }
        if (message.symbol !== "") {
            writer.uint32(50).string(message.symbol);
        }
        if (message.uri !== "") {
            writer.uint32(58).string(message.uri);
        }
        if (message.uri_hash !== "") {
            writer.uint32(66).string(message.uri_hash);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMetadata();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.description = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.denom_units.push(exports.DenomUnit.decode(reader, reader.uint32()));
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.base = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.display = reader.string();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.name = reader.string();
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.symbol = reader.string();
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.uri = reader.string();
                    continue;
                case 8:
                    if (tag !== 66) {
                        break;
                    }
                    message.uri_hash = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            description: isSet(object.description) ? globalThis.String(object.description) : "",
            denom_units: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.denom_units) ? object.denom_units.map((e)=>exports.DenomUnit.fromJSON(e)) : [],
            base: isSet(object.base) ? globalThis.String(object.base) : "",
            display: isSet(object.display) ? globalThis.String(object.display) : "",
            name: isSet(object.name) ? globalThis.String(object.name) : "",
            symbol: isSet(object.symbol) ? globalThis.String(object.symbol) : "",
            uri: isSet(object.uri) ? globalThis.String(object.uri) : "",
            uri_hash: isSet(object.uri_hash) ? globalThis.String(object.uri_hash) : ""
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.description !== "") {
            obj.description = message.description;
        }
        if ((_a = message.denom_units) === null || _a === void 0 ? void 0 : _a.length) {
            obj.denom_units = message.denom_units.map((e)=>exports.DenomUnit.toJSON(e));
        }
        if (message.base !== "") {
            obj.base = message.base;
        }
        if (message.display !== "") {
            obj.display = message.display;
        }
        if (message.name !== "") {
            obj.name = message.name;
        }
        if (message.symbol !== "") {
            obj.symbol = message.symbol;
        }
        if (message.uri !== "") {
            obj.uri = message.uri;
        }
        if (message.uri_hash !== "") {
            obj.uri_hash = message.uri_hash;
        }
        return obj;
    },
    create (base) {
        return exports.Metadata.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        const message = createBaseMetadata();
        message.description = (_a = object.description) !== null && _a !== void 0 ? _a : "";
        message.denom_units = ((_b = object.denom_units) === null || _b === void 0 ? void 0 : _b.map((e)=>exports.DenomUnit.fromPartial(e))) || [];
        message.base = (_c = object.base) !== null && _c !== void 0 ? _c : "";
        message.display = (_d = object.display) !== null && _d !== void 0 ? _d : "";
        message.name = (_e = object.name) !== null && _e !== void 0 ? _e : "";
        message.symbol = (_f = object.symbol) !== null && _f !== void 0 ? _f : "";
        message.uri = (_g = object.uri) !== null && _g !== void 0 ? _g : "";
        message.uri_hash = (_h = object.uri_hash) !== null && _h !== void 0 ? _h : "";
        return message;
    }
};
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=bank.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/bank/v1beta1/tx.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/bank/v1beta1/tx.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MsgClientImpl = exports.MsgServiceName = exports.MsgSetSendEnabledResponse = exports.MsgSetSendEnabled = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgMultiSendResponse = exports.MsgMultiSend = exports.MsgSendResponse = exports.MsgSend = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
const bank_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/bank/v1beta1/bank.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.bank.v1beta1";
function createBaseMsgSend() {
    return {
        from_address: "",
        to_address: "",
        amount: []
    };
}
exports.MsgSend = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.from_address !== "") {
            writer.uint32(10).string(message.from_address);
        }
        if (message.to_address !== "") {
            writer.uint32(18).string(message.to_address);
        }
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSend();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.from_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.to_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            from_address: isSet(object.from_address) ? globalThis.String(object.from_address) : "",
            to_address: isSet(object.to_address) ? globalThis.String(object.to_address) : "",
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.from_address !== "") {
            obj.from_address = message.from_address;
        }
        if (message.to_address !== "") {
            obj.to_address = message.to_address;
        }
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.MsgSend.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgSend();
        message.from_address = (_a = object.from_address) !== null && _a !== void 0 ? _a : "";
        message.to_address = (_b = object.to_address) !== null && _b !== void 0 ? _b : "";
        message.amount = ((_c = object.amount) === null || _c === void 0 ? void 0 : _c.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseMsgSendResponse() {
    return {};
}
exports.MsgSendResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSendResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgSendResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgSendResponse();
        return message;
    }
};
function createBaseMsgMultiSend() {
    return {
        inputs: [],
        outputs: []
    };
}
exports.MsgMultiSend = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.inputs){
            bank_1.Input.encode(v, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.outputs){
            bank_1.Output.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgMultiSend();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.inputs.push(bank_1.Input.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.outputs.push(bank_1.Output.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            inputs: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.inputs) ? object.inputs.map((e)=>bank_1.Input.fromJSON(e)) : [],
            outputs: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.outputs) ? object.outputs.map((e)=>bank_1.Output.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a, _b;
        const obj = {};
        if ((_a = message.inputs) === null || _a === void 0 ? void 0 : _a.length) {
            obj.inputs = message.inputs.map((e)=>bank_1.Input.toJSON(e));
        }
        if ((_b = message.outputs) === null || _b === void 0 ? void 0 : _b.length) {
            obj.outputs = message.outputs.map((e)=>bank_1.Output.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.MsgMultiSend.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgMultiSend();
        message.inputs = ((_a = object.inputs) === null || _a === void 0 ? void 0 : _a.map((e)=>bank_1.Input.fromPartial(e))) || [];
        message.outputs = ((_b = object.outputs) === null || _b === void 0 ? void 0 : _b.map((e)=>bank_1.Output.fromPartial(e))) || [];
        return message;
    }
};
function createBaseMsgMultiSendResponse() {
    return {};
}
exports.MsgMultiSendResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgMultiSendResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgMultiSendResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgMultiSendResponse();
        return message;
    }
};
function createBaseMsgUpdateParams() {
    return {
        authority: "",
        params: undefined
    };
}
exports.MsgUpdateParams = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        if (message.params !== undefined) {
            bank_1.Params.encode(message.params, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.params = bank_1.Params.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            authority: isSet(object.authority) ? globalThis.String(object.authority) : "",
            params: isSet(object.params) ? bank_1.Params.fromJSON(object.params) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        if (message.params !== undefined) {
            obj.params = bank_1.Params.toJSON(message.params);
        }
        return obj;
    },
    create (base) {
        return exports.MsgUpdateParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgUpdateParams();
        message.authority = (_a = object.authority) !== null && _a !== void 0 ? _a : "";
        message.params = object.params !== undefined && object.params !== null ? bank_1.Params.fromPartial(object.params) : undefined;
        return message;
    }
};
function createBaseMsgUpdateParamsResponse() {
    return {};
}
exports.MsgUpdateParamsResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParamsResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgUpdateParamsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgUpdateParamsResponse();
        return message;
    }
};
function createBaseMsgSetSendEnabled() {
    return {
        authority: "",
        send_enabled: [],
        use_default_for: []
    };
}
exports.MsgSetSendEnabled = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        for (const v of message.send_enabled){
            bank_1.SendEnabled.encode(v, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.use_default_for){
            writer.uint32(26).string(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSetSendEnabled();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.send_enabled.push(bank_1.SendEnabled.decode(reader, reader.uint32()));
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.use_default_for.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            authority: isSet(object.authority) ? globalThis.String(object.authority) : "",
            send_enabled: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.send_enabled) ? object.send_enabled.map((e)=>bank_1.SendEnabled.fromJSON(e)) : [],
            use_default_for: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.use_default_for) ? object.use_default_for.map((e)=>globalThis.String(e)) : []
        };
    },
    toJSON (message) {
        var _a, _b;
        const obj = {};
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        if ((_a = message.send_enabled) === null || _a === void 0 ? void 0 : _a.length) {
            obj.send_enabled = message.send_enabled.map((e)=>bank_1.SendEnabled.toJSON(e));
        }
        if ((_b = message.use_default_for) === null || _b === void 0 ? void 0 : _b.length) {
            obj.use_default_for = message.use_default_for;
        }
        return obj;
    },
    create (base) {
        return exports.MsgSetSendEnabled.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgSetSendEnabled();
        message.authority = (_a = object.authority) !== null && _a !== void 0 ? _a : "";
        message.send_enabled = ((_b = object.send_enabled) === null || _b === void 0 ? void 0 : _b.map((e)=>bank_1.SendEnabled.fromPartial(e))) || [];
        message.use_default_for = ((_c = object.use_default_for) === null || _c === void 0 ? void 0 : _c.map((e)=>e)) || [];
        return message;
    }
};
function createBaseMsgSetSendEnabledResponse() {
    return {};
}
exports.MsgSetSendEnabledResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSetSendEnabledResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgSetSendEnabledResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgSetSendEnabledResponse();
        return message;
    }
};
exports.MsgServiceName = "cosmos.bank.v1beta1.Msg";
class MsgClientImpl {
    constructor(rpc, opts){
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.MsgServiceName;
        this.rpc = rpc;
        this.Send = this.Send.bind(this);
        this.MultiSend = this.MultiSend.bind(this);
        this.UpdateParams = this.UpdateParams.bind(this);
        this.SetSendEnabled = this.SetSendEnabled.bind(this);
    }
    Send(request) {
        const data = exports.MsgSend.encode(request).finish();
        const promise = this.rpc.request(this.service, "Send", data);
        return promise.then((data)=>exports.MsgSendResponse.decode(_m0.Reader.create(data)));
    }
    MultiSend(request) {
        const data = exports.MsgMultiSend.encode(request).finish();
        const promise = this.rpc.request(this.service, "MultiSend", data);
        return promise.then((data)=>exports.MsgMultiSendResponse.decode(_m0.Reader.create(data)));
    }
    UpdateParams(request) {
        const data = exports.MsgUpdateParams.encode(request).finish();
        const promise = this.rpc.request(this.service, "UpdateParams", data);
        return promise.then((data)=>exports.MsgUpdateParamsResponse.decode(_m0.Reader.create(data)));
    }
    SetSendEnabled(request) {
        const data = exports.MsgSetSendEnabled.encode(request).finish();
        const promise = this.rpc.request(this.service, "SetSendEnabled", data);
        return promise.then((data)=>exports.MsgSetSendEnabledResponse.decode(_m0.Reader.create(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=tx.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/crisis/v1beta1/tx.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/crisis/v1beta1/tx.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MsgClientImpl = exports.MsgServiceName = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgVerifyInvariantResponse = exports.MsgVerifyInvariant = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.crisis.v1beta1";
function createBaseMsgVerifyInvariant() {
    return {
        sender: "",
        invariant_module_name: "",
        invariant_route: ""
    };
}
exports.MsgVerifyInvariant = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.sender !== "") {
            writer.uint32(10).string(message.sender);
        }
        if (message.invariant_module_name !== "") {
            writer.uint32(18).string(message.invariant_module_name);
        }
        if (message.invariant_route !== "") {
            writer.uint32(26).string(message.invariant_route);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgVerifyInvariant();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.sender = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.invariant_module_name = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.invariant_route = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            sender: isSet(object.sender) ? globalThis.String(object.sender) : "",
            invariant_module_name: isSet(object.invariant_module_name) ? globalThis.String(object.invariant_module_name) : "",
            invariant_route: isSet(object.invariant_route) ? globalThis.String(object.invariant_route) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.sender !== "") {
            obj.sender = message.sender;
        }
        if (message.invariant_module_name !== "") {
            obj.invariant_module_name = message.invariant_module_name;
        }
        if (message.invariant_route !== "") {
            obj.invariant_route = message.invariant_route;
        }
        return obj;
    },
    create (base) {
        return exports.MsgVerifyInvariant.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgVerifyInvariant();
        message.sender = (_a = object.sender) !== null && _a !== void 0 ? _a : "";
        message.invariant_module_name = (_b = object.invariant_module_name) !== null && _b !== void 0 ? _b : "";
        message.invariant_route = (_c = object.invariant_route) !== null && _c !== void 0 ? _c : "";
        return message;
    }
};
function createBaseMsgVerifyInvariantResponse() {
    return {};
}
exports.MsgVerifyInvariantResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgVerifyInvariantResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgVerifyInvariantResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgVerifyInvariantResponse();
        return message;
    }
};
function createBaseMsgUpdateParams() {
    return {
        authority: "",
        constant_fee: undefined
    };
}
exports.MsgUpdateParams = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        if (message.constant_fee !== undefined) {
            coin_1.Coin.encode(message.constant_fee, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.constant_fee = coin_1.Coin.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            authority: isSet(object.authority) ? globalThis.String(object.authority) : "",
            constant_fee: isSet(object.constant_fee) ? coin_1.Coin.fromJSON(object.constant_fee) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        if (message.constant_fee !== undefined) {
            obj.constant_fee = coin_1.Coin.toJSON(message.constant_fee);
        }
        return obj;
    },
    create (base) {
        return exports.MsgUpdateParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgUpdateParams();
        message.authority = (_a = object.authority) !== null && _a !== void 0 ? _a : "";
        message.constant_fee = object.constant_fee !== undefined && object.constant_fee !== null ? coin_1.Coin.fromPartial(object.constant_fee) : undefined;
        return message;
    }
};
function createBaseMsgUpdateParamsResponse() {
    return {};
}
exports.MsgUpdateParamsResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParamsResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgUpdateParamsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgUpdateParamsResponse();
        return message;
    }
};
exports.MsgServiceName = "cosmos.crisis.v1beta1.Msg";
class MsgClientImpl {
    constructor(rpc, opts){
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.MsgServiceName;
        this.rpc = rpc;
        this.VerifyInvariant = this.VerifyInvariant.bind(this);
        this.UpdateParams = this.UpdateParams.bind(this);
    }
    VerifyInvariant(request) {
        const data = exports.MsgVerifyInvariant.encode(request).finish();
        const promise = this.rpc.request(this.service, "VerifyInvariant", data);
        return promise.then((data)=>exports.MsgVerifyInvariantResponse.decode(_m0.Reader.create(data)));
    }
    UpdateParams(request) {
        const data = exports.MsgUpdateParams.encode(request).finish();
        const promise = this.rpc.request(this.service, "UpdateParams", data);
        return promise.then((data)=>exports.MsgUpdateParamsResponse.decode(_m0.Reader.create(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=tx.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/distribution/v1beta1/distribution.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/distribution/v1beta1/distribution.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommunityPoolSpendProposalWithDeposit = exports.DelegationDelegatorReward = exports.DelegatorStartingInfo = exports.CommunityPoolSpendProposal = exports.FeePool = exports.ValidatorSlashEvents = exports.ValidatorSlashEvent = exports.ValidatorOutstandingRewards = exports.ValidatorAccumulatedCommission = exports.ValidatorCurrentRewards = exports.ValidatorHistoricalRewards = exports.Params = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.distribution.v1beta1";
function createBaseParams() {
    return {
        community_tax: "",
        base_proposer_reward: "",
        bonus_proposer_reward: "",
        withdraw_addr_enabled: false,
        secret_foundation_tax: "",
        secret_foundation_address: "",
        minimum_restake_threshold: "",
        restake_period: ""
    };
}
exports.Params = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.community_tax !== "") {
            writer.uint32(10).string(message.community_tax);
        }
        if (message.base_proposer_reward !== "") {
            writer.uint32(18).string(message.base_proposer_reward);
        }
        if (message.bonus_proposer_reward !== "") {
            writer.uint32(26).string(message.bonus_proposer_reward);
        }
        if (message.withdraw_addr_enabled !== false) {
            writer.uint32(32).bool(message.withdraw_addr_enabled);
        }
        if (message.secret_foundation_tax !== "") {
            writer.uint32(42).string(message.secret_foundation_tax);
        }
        if (message.secret_foundation_address !== "") {
            writer.uint32(50).string(message.secret_foundation_address);
        }
        if (message.minimum_restake_threshold !== "") {
            writer.uint32(58).string(message.minimum_restake_threshold);
        }
        if (message.restake_period !== "") {
            writer.uint32(66).string(message.restake_period);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.community_tax = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.base_proposer_reward = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.bonus_proposer_reward = reader.string();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.withdraw_addr_enabled = reader.bool();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.secret_foundation_tax = reader.string();
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.secret_foundation_address = reader.string();
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.minimum_restake_threshold = reader.string();
                    continue;
                case 8:
                    if (tag !== 66) {
                        break;
                    }
                    message.restake_period = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            community_tax: isSet(object.community_tax) ? globalThis.String(object.community_tax) : "",
            base_proposer_reward: isSet(object.base_proposer_reward) ? globalThis.String(object.base_proposer_reward) : "",
            bonus_proposer_reward: isSet(object.bonus_proposer_reward) ? globalThis.String(object.bonus_proposer_reward) : "",
            withdraw_addr_enabled: isSet(object.withdraw_addr_enabled) ? globalThis.Boolean(object.withdraw_addr_enabled) : false,
            secret_foundation_tax: isSet(object.secret_foundation_tax) ? globalThis.String(object.secret_foundation_tax) : "",
            secret_foundation_address: isSet(object.secret_foundation_address) ? globalThis.String(object.secret_foundation_address) : "",
            minimum_restake_threshold: isSet(object.minimum_restake_threshold) ? globalThis.String(object.minimum_restake_threshold) : "",
            restake_period: isSet(object.restake_period) ? globalThis.String(object.restake_period) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.community_tax !== "") {
            obj.community_tax = message.community_tax;
        }
        if (message.base_proposer_reward !== "") {
            obj.base_proposer_reward = message.base_proposer_reward;
        }
        if (message.bonus_proposer_reward !== "") {
            obj.bonus_proposer_reward = message.bonus_proposer_reward;
        }
        if (message.withdraw_addr_enabled !== false) {
            obj.withdraw_addr_enabled = message.withdraw_addr_enabled;
        }
        if (message.secret_foundation_tax !== "") {
            obj.secret_foundation_tax = message.secret_foundation_tax;
        }
        if (message.secret_foundation_address !== "") {
            obj.secret_foundation_address = message.secret_foundation_address;
        }
        if (message.minimum_restake_threshold !== "") {
            obj.minimum_restake_threshold = message.minimum_restake_threshold;
        }
        if (message.restake_period !== "") {
            obj.restake_period = message.restake_period;
        }
        return obj;
    },
    create (base) {
        return exports.Params.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        const message = createBaseParams();
        message.community_tax = (_a = object.community_tax) !== null && _a !== void 0 ? _a : "";
        message.base_proposer_reward = (_b = object.base_proposer_reward) !== null && _b !== void 0 ? _b : "";
        message.bonus_proposer_reward = (_c = object.bonus_proposer_reward) !== null && _c !== void 0 ? _c : "";
        message.withdraw_addr_enabled = (_d = object.withdraw_addr_enabled) !== null && _d !== void 0 ? _d : false;
        message.secret_foundation_tax = (_e = object.secret_foundation_tax) !== null && _e !== void 0 ? _e : "";
        message.secret_foundation_address = (_f = object.secret_foundation_address) !== null && _f !== void 0 ? _f : "";
        message.minimum_restake_threshold = (_g = object.minimum_restake_threshold) !== null && _g !== void 0 ? _g : "";
        message.restake_period = (_h = object.restake_period) !== null && _h !== void 0 ? _h : "";
        return message;
    }
};
function createBaseValidatorHistoricalRewards() {
    return {
        cumulative_reward_ratio: [],
        reference_count: 0
    };
}
exports.ValidatorHistoricalRewards = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.cumulative_reward_ratio){
            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.reference_count !== 0) {
            writer.uint32(16).uint32(message.reference_count);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseValidatorHistoricalRewards();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.cumulative_reward_ratio.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.reference_count = reader.uint32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            cumulative_reward_ratio: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.cumulative_reward_ratio) ? object.cumulative_reward_ratio.map((e)=>coin_1.DecCoin.fromJSON(e)) : [],
            reference_count: isSet(object.reference_count) ? globalThis.Number(object.reference_count) : 0
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.cumulative_reward_ratio) === null || _a === void 0 ? void 0 : _a.length) {
            obj.cumulative_reward_ratio = message.cumulative_reward_ratio.map((e)=>coin_1.DecCoin.toJSON(e));
        }
        if (message.reference_count !== 0) {
            obj.reference_count = Math.round(message.reference_count);
        }
        return obj;
    },
    create (base) {
        return exports.ValidatorHistoricalRewards.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseValidatorHistoricalRewards();
        message.cumulative_reward_ratio = ((_a = object.cumulative_reward_ratio) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.DecCoin.fromPartial(e))) || [];
        message.reference_count = (_b = object.reference_count) !== null && _b !== void 0 ? _b : 0;
        return message;
    }
};
function createBaseValidatorCurrentRewards() {
    return {
        rewards: [],
        period: "0"
    };
}
exports.ValidatorCurrentRewards = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.rewards){
            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.period !== "0") {
            writer.uint32(16).uint64(message.period);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseValidatorCurrentRewards();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.period = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            rewards: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.rewards) ? object.rewards.map((e)=>coin_1.DecCoin.fromJSON(e)) : [],
            period: isSet(object.period) ? globalThis.String(object.period) : "0"
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.rewards) === null || _a === void 0 ? void 0 : _a.length) {
            obj.rewards = message.rewards.map((e)=>coin_1.DecCoin.toJSON(e));
        }
        if (message.period !== "0") {
            obj.period = message.period;
        }
        return obj;
    },
    create (base) {
        return exports.ValidatorCurrentRewards.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseValidatorCurrentRewards();
        message.rewards = ((_a = object.rewards) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.DecCoin.fromPartial(e))) || [];
        message.period = (_b = object.period) !== null && _b !== void 0 ? _b : "0";
        return message;
    }
};
function createBaseValidatorAccumulatedCommission() {
    return {
        commission: []
    };
}
exports.ValidatorAccumulatedCommission = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.commission){
            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseValidatorAccumulatedCommission();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.commission.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            commission: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.commission) ? object.commission.map((e)=>coin_1.DecCoin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.commission) === null || _a === void 0 ? void 0 : _a.length) {
            obj.commission = message.commission.map((e)=>coin_1.DecCoin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.ValidatorAccumulatedCommission.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseValidatorAccumulatedCommission();
        message.commission = ((_a = object.commission) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.DecCoin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseValidatorOutstandingRewards() {
    return {
        rewards: []
    };
}
exports.ValidatorOutstandingRewards = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.rewards){
            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseValidatorOutstandingRewards();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            rewards: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.rewards) ? object.rewards.map((e)=>coin_1.DecCoin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.rewards) === null || _a === void 0 ? void 0 : _a.length) {
            obj.rewards = message.rewards.map((e)=>coin_1.DecCoin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.ValidatorOutstandingRewards.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseValidatorOutstandingRewards();
        message.rewards = ((_a = object.rewards) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.DecCoin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseValidatorSlashEvent() {
    return {
        validator_period: "0",
        fraction: ""
    };
}
exports.ValidatorSlashEvent = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.validator_period !== "0") {
            writer.uint32(8).uint64(message.validator_period);
        }
        if (message.fraction !== "") {
            writer.uint32(18).string(message.fraction);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseValidatorSlashEvent();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.validator_period = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.fraction = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            validator_period: isSet(object.validator_period) ? globalThis.String(object.validator_period) : "0",
            fraction: isSet(object.fraction) ? globalThis.String(object.fraction) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.validator_period !== "0") {
            obj.validator_period = message.validator_period;
        }
        if (message.fraction !== "") {
            obj.fraction = message.fraction;
        }
        return obj;
    },
    create (base) {
        return exports.ValidatorSlashEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseValidatorSlashEvent();
        message.validator_period = (_a = object.validator_period) !== null && _a !== void 0 ? _a : "0";
        message.fraction = (_b = object.fraction) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseValidatorSlashEvents() {
    return {
        validator_slash_events: []
    };
}
exports.ValidatorSlashEvents = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.validator_slash_events){
            exports.ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseValidatorSlashEvents();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.validator_slash_events.push(exports.ValidatorSlashEvent.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            validator_slash_events: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.validator_slash_events) ? object.validator_slash_events.map((e)=>exports.ValidatorSlashEvent.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.validator_slash_events) === null || _a === void 0 ? void 0 : _a.length) {
            obj.validator_slash_events = message.validator_slash_events.map((e)=>exports.ValidatorSlashEvent.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.ValidatorSlashEvents.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseValidatorSlashEvents();
        message.validator_slash_events = ((_a = object.validator_slash_events) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.ValidatorSlashEvent.fromPartial(e))) || [];
        return message;
    }
};
function createBaseFeePool() {
    return {
        community_pool: []
    };
}
exports.FeePool = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.community_pool){
            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseFeePool();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.community_pool.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            community_pool: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.community_pool) ? object.community_pool.map((e)=>coin_1.DecCoin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.community_pool) === null || _a === void 0 ? void 0 : _a.length) {
            obj.community_pool = message.community_pool.map((e)=>coin_1.DecCoin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.FeePool.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseFeePool();
        message.community_pool = ((_a = object.community_pool) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.DecCoin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseCommunityPoolSpendProposal() {
    return {
        title: "",
        description: "",
        recipient: "",
        amount: []
    };
}
exports.CommunityPoolSpendProposal = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        if (message.recipient !== "") {
            writer.uint32(26).string(message.recipient);
        }
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCommunityPoolSpendProposal();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.title = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.description = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.recipient = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            title: isSet(object.title) ? globalThis.String(object.title) : "",
            description: isSet(object.description) ? globalThis.String(object.description) : "",
            recipient: isSet(object.recipient) ? globalThis.String(object.recipient) : "",
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.title !== "") {
            obj.title = message.title;
        }
        if (message.description !== "") {
            obj.description = message.description;
        }
        if (message.recipient !== "") {
            obj.recipient = message.recipient;
        }
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.CommunityPoolSpendProposal.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseCommunityPoolSpendProposal();
        message.title = (_a = object.title) !== null && _a !== void 0 ? _a : "";
        message.description = (_b = object.description) !== null && _b !== void 0 ? _b : "";
        message.recipient = (_c = object.recipient) !== null && _c !== void 0 ? _c : "";
        message.amount = ((_d = object.amount) === null || _d === void 0 ? void 0 : _d.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseDelegatorStartingInfo() {
    return {
        previous_period: "0",
        stake: "",
        height: "0"
    };
}
exports.DelegatorStartingInfo = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.previous_period !== "0") {
            writer.uint32(8).uint64(message.previous_period);
        }
        if (message.stake !== "") {
            writer.uint32(18).string(message.stake);
        }
        if (message.height !== "0") {
            writer.uint32(24).uint64(message.height);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDelegatorStartingInfo();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.previous_period = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.stake = reader.string();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.height = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            previous_period: isSet(object.previous_period) ? globalThis.String(object.previous_period) : "0",
            stake: isSet(object.stake) ? globalThis.String(object.stake) : "",
            height: isSet(object.height) ? globalThis.String(object.height) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.previous_period !== "0") {
            obj.previous_period = message.previous_period;
        }
        if (message.stake !== "") {
            obj.stake = message.stake;
        }
        if (message.height !== "0") {
            obj.height = message.height;
        }
        return obj;
    },
    create (base) {
        return exports.DelegatorStartingInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseDelegatorStartingInfo();
        message.previous_period = (_a = object.previous_period) !== null && _a !== void 0 ? _a : "0";
        message.stake = (_b = object.stake) !== null && _b !== void 0 ? _b : "";
        message.height = (_c = object.height) !== null && _c !== void 0 ? _c : "0";
        return message;
    }
};
function createBaseDelegationDelegatorReward() {
    return {
        validator_address: "",
        reward: []
    };
}
exports.DelegationDelegatorReward = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.validator_address !== "") {
            writer.uint32(10).string(message.validator_address);
        }
        for (const v of message.reward){
            coin_1.DecCoin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDelegationDelegatorReward();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.reward.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : "",
            reward: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.reward) ? object.reward.map((e)=>coin_1.DecCoin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        if ((_a = message.reward) === null || _a === void 0 ? void 0 : _a.length) {
            obj.reward = message.reward.map((e)=>coin_1.DecCoin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.DelegationDelegatorReward.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseDelegationDelegatorReward();
        message.validator_address = (_a = object.validator_address) !== null && _a !== void 0 ? _a : "";
        message.reward = ((_b = object.reward) === null || _b === void 0 ? void 0 : _b.map((e)=>coin_1.DecCoin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseCommunityPoolSpendProposalWithDeposit() {
    return {
        title: "",
        description: "",
        recipient: "",
        amount: "",
        deposit: ""
    };
}
exports.CommunityPoolSpendProposalWithDeposit = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        if (message.recipient !== "") {
            writer.uint32(26).string(message.recipient);
        }
        if (message.amount !== "") {
            writer.uint32(34).string(message.amount);
        }
        if (message.deposit !== "") {
            writer.uint32(42).string(message.deposit);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCommunityPoolSpendProposalWithDeposit();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.title = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.description = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.recipient = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.amount = reader.string();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.deposit = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            title: isSet(object.title) ? globalThis.String(object.title) : "",
            description: isSet(object.description) ? globalThis.String(object.description) : "",
            recipient: isSet(object.recipient) ? globalThis.String(object.recipient) : "",
            amount: isSet(object.amount) ? globalThis.String(object.amount) : "",
            deposit: isSet(object.deposit) ? globalThis.String(object.deposit) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.title !== "") {
            obj.title = message.title;
        }
        if (message.description !== "") {
            obj.description = message.description;
        }
        if (message.recipient !== "") {
            obj.recipient = message.recipient;
        }
        if (message.amount !== "") {
            obj.amount = message.amount;
        }
        if (message.deposit !== "") {
            obj.deposit = message.deposit;
        }
        return obj;
    },
    create (base) {
        return exports.CommunityPoolSpendProposalWithDeposit.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseCommunityPoolSpendProposalWithDeposit();
        message.title = (_a = object.title) !== null && _a !== void 0 ? _a : "";
        message.description = (_b = object.description) !== null && _b !== void 0 ? _b : "";
        message.recipient = (_c = object.recipient) !== null && _c !== void 0 ? _c : "";
        message.amount = (_d = object.amount) !== null && _d !== void 0 ? _d : "";
        message.deposit = (_e = object.deposit) !== null && _e !== void 0 ? _e : "";
        return message;
    }
};
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=distribution.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/distribution/v1beta1/tx.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/distribution/v1beta1/tx.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MsgClientImpl = exports.MsgServiceName = exports.MsgDepositValidatorRewardsPoolResponse = exports.MsgDepositValidatorRewardsPool = exports.MsgCommunityPoolSpendResponse = exports.MsgCommunityPoolSpend = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgFundCommunityPoolResponse = exports.MsgFundCommunityPool = exports.MsgWithdrawValidatorCommissionResponse = exports.MsgWithdrawValidatorCommission = exports.MsgWithdrawDelegatorRewardResponse = exports.MsgWithdrawDelegatorReward = exports.MsgSetWithdrawAddressResponse = exports.MsgSetAutoRestakeResponse = exports.MsgSetAutoRestake = exports.MsgSetWithdrawAddress = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
const distribution_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/distribution/v1beta1/distribution.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.distribution.v1beta1";
function createBaseMsgSetWithdrawAddress() {
    return {
        delegator_address: "",
        withdraw_address: ""
    };
}
exports.MsgSetWithdrawAddress = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegator_address !== "") {
            writer.uint32(10).string(message.delegator_address);
        }
        if (message.withdraw_address !== "") {
            writer.uint32(18).string(message.withdraw_address);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSetWithdrawAddress();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.withdraw_address = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            withdraw_address: isSet(object.withdraw_address) ? globalThis.String(object.withdraw_address) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.withdraw_address !== "") {
            obj.withdraw_address = message.withdraw_address;
        }
        return obj;
    },
    create (base) {
        return exports.MsgSetWithdrawAddress.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgSetWithdrawAddress();
        message.delegator_address = (_a = object.delegator_address) !== null && _a !== void 0 ? _a : "";
        message.withdraw_address = (_b = object.withdraw_address) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseMsgSetAutoRestake() {
    return {
        delegator_address: "",
        validator_address: "",
        enabled: false
    };
}
exports.MsgSetAutoRestake = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegator_address !== "") {
            writer.uint32(10).string(message.delegator_address);
        }
        if (message.validator_address !== "") {
            writer.uint32(18).string(message.validator_address);
        }
        if (message.enabled !== false) {
            writer.uint32(24).bool(message.enabled);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSetAutoRestake();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.enabled = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : "",
            enabled: isSet(object.enabled) ? globalThis.Boolean(object.enabled) : false
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        if (message.enabled !== false) {
            obj.enabled = message.enabled;
        }
        return obj;
    },
    create (base) {
        return exports.MsgSetAutoRestake.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgSetAutoRestake();
        message.delegator_address = (_a = object.delegator_address) !== null && _a !== void 0 ? _a : "";
        message.validator_address = (_b = object.validator_address) !== null && _b !== void 0 ? _b : "";
        message.enabled = (_c = object.enabled) !== null && _c !== void 0 ? _c : false;
        return message;
    }
};
function createBaseMsgSetAutoRestakeResponse() {
    return {};
}
exports.MsgSetAutoRestakeResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSetAutoRestakeResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgSetAutoRestakeResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgSetAutoRestakeResponse();
        return message;
    }
};
function createBaseMsgSetWithdrawAddressResponse() {
    return {};
}
exports.MsgSetWithdrawAddressResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSetWithdrawAddressResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgSetWithdrawAddressResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgSetWithdrawAddressResponse();
        return message;
    }
};
function createBaseMsgWithdrawDelegatorReward() {
    return {
        delegator_address: "",
        validator_address: ""
    };
}
exports.MsgWithdrawDelegatorReward = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegator_address !== "") {
            writer.uint32(10).string(message.delegator_address);
        }
        if (message.validator_address !== "") {
            writer.uint32(18).string(message.validator_address);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgWithdrawDelegatorReward();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        return obj;
    },
    create (base) {
        return exports.MsgWithdrawDelegatorReward.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgWithdrawDelegatorReward();
        message.delegator_address = (_a = object.delegator_address) !== null && _a !== void 0 ? _a : "";
        message.validator_address = (_b = object.validator_address) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseMsgWithdrawDelegatorRewardResponse() {
    return {
        amount: []
    };
}
exports.MsgWithdrawDelegatorRewardResponse = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgWithdrawDelegatorRewardResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.MsgWithdrawDelegatorRewardResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgWithdrawDelegatorRewardResponse();
        message.amount = ((_a = object.amount) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseMsgWithdrawValidatorCommission() {
    return {
        validator_address: ""
    };
}
exports.MsgWithdrawValidatorCommission = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.validator_address !== "") {
            writer.uint32(10).string(message.validator_address);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgWithdrawValidatorCommission();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        return obj;
    },
    create (base) {
        return exports.MsgWithdrawValidatorCommission.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgWithdrawValidatorCommission();
        message.validator_address = (_a = object.validator_address) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseMsgWithdrawValidatorCommissionResponse() {
    return {
        amount: []
    };
}
exports.MsgWithdrawValidatorCommissionResponse = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgWithdrawValidatorCommissionResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.MsgWithdrawValidatorCommissionResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgWithdrawValidatorCommissionResponse();
        message.amount = ((_a = object.amount) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseMsgFundCommunityPool() {
    return {
        amount: [],
        depositor: ""
    };
}
exports.MsgFundCommunityPool = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.depositor !== "") {
            writer.uint32(18).string(message.depositor);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgFundCommunityPool();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.depositor = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            depositor: isSet(object.depositor) ? globalThis.String(object.depositor) : ""
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.depositor !== "") {
            obj.depositor = message.depositor;
        }
        return obj;
    },
    create (base) {
        return exports.MsgFundCommunityPool.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgFundCommunityPool();
        message.amount = ((_a = object.amount) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.depositor = (_b = object.depositor) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseMsgFundCommunityPoolResponse() {
    return {};
}
exports.MsgFundCommunityPoolResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgFundCommunityPoolResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgFundCommunityPoolResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgFundCommunityPoolResponse();
        return message;
    }
};
function createBaseMsgUpdateParams() {
    return {
        authority: "",
        params: undefined
    };
}
exports.MsgUpdateParams = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        if (message.params !== undefined) {
            distribution_1.Params.encode(message.params, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.params = distribution_1.Params.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            authority: isSet(object.authority) ? globalThis.String(object.authority) : "",
            params: isSet(object.params) ? distribution_1.Params.fromJSON(object.params) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        if (message.params !== undefined) {
            obj.params = distribution_1.Params.toJSON(message.params);
        }
        return obj;
    },
    create (base) {
        return exports.MsgUpdateParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgUpdateParams();
        message.authority = (_a = object.authority) !== null && _a !== void 0 ? _a : "";
        message.params = object.params !== undefined && object.params !== null ? distribution_1.Params.fromPartial(object.params) : undefined;
        return message;
    }
};
function createBaseMsgUpdateParamsResponse() {
    return {};
}
exports.MsgUpdateParamsResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParamsResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgUpdateParamsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgUpdateParamsResponse();
        return message;
    }
};
function createBaseMsgCommunityPoolSpend() {
    return {
        authority: "",
        recipient: "",
        amount: []
    };
}
exports.MsgCommunityPoolSpend = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        if (message.recipient !== "") {
            writer.uint32(18).string(message.recipient);
        }
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCommunityPoolSpend();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.recipient = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            authority: isSet(object.authority) ? globalThis.String(object.authority) : "",
            recipient: isSet(object.recipient) ? globalThis.String(object.recipient) : "",
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        if (message.recipient !== "") {
            obj.recipient = message.recipient;
        }
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.MsgCommunityPoolSpend.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgCommunityPoolSpend();
        message.authority = (_a = object.authority) !== null && _a !== void 0 ? _a : "";
        message.recipient = (_b = object.recipient) !== null && _b !== void 0 ? _b : "";
        message.amount = ((_c = object.amount) === null || _c === void 0 ? void 0 : _c.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseMsgCommunityPoolSpendResponse() {
    return {};
}
exports.MsgCommunityPoolSpendResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCommunityPoolSpendResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgCommunityPoolSpendResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgCommunityPoolSpendResponse();
        return message;
    }
};
function createBaseMsgDepositValidatorRewardsPool() {
    return {
        depositor: "",
        validator_address: "",
        amount: []
    };
}
exports.MsgDepositValidatorRewardsPool = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.depositor !== "") {
            writer.uint32(10).string(message.depositor);
        }
        if (message.validator_address !== "") {
            writer.uint32(18).string(message.validator_address);
        }
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgDepositValidatorRewardsPool();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.depositor = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            depositor: isSet(object.depositor) ? globalThis.String(object.depositor) : "",
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : "",
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.depositor !== "") {
            obj.depositor = message.depositor;
        }
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.MsgDepositValidatorRewardsPool.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgDepositValidatorRewardsPool();
        message.depositor = (_a = object.depositor) !== null && _a !== void 0 ? _a : "";
        message.validator_address = (_b = object.validator_address) !== null && _b !== void 0 ? _b : "";
        message.amount = ((_c = object.amount) === null || _c === void 0 ? void 0 : _c.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseMsgDepositValidatorRewardsPoolResponse() {
    return {};
}
exports.MsgDepositValidatorRewardsPoolResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgDepositValidatorRewardsPoolResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgDepositValidatorRewardsPoolResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgDepositValidatorRewardsPoolResponse();
        return message;
    }
};
exports.MsgServiceName = "cosmos.distribution.v1beta1.Msg";
class MsgClientImpl {
    constructor(rpc, opts){
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.MsgServiceName;
        this.rpc = rpc;
        this.SetWithdrawAddress = this.SetWithdrawAddress.bind(this);
        this.WithdrawDelegatorReward = this.WithdrawDelegatorReward.bind(this);
        this.WithdrawValidatorCommission = this.WithdrawValidatorCommission.bind(this);
        this.FundCommunityPool = this.FundCommunityPool.bind(this);
        this.SetAutoRestake = this.SetAutoRestake.bind(this);
        this.UpdateParams = this.UpdateParams.bind(this);
        this.CommunityPoolSpend = this.CommunityPoolSpend.bind(this);
        this.DepositValidatorRewardsPool = this.DepositValidatorRewardsPool.bind(this);
    }
    SetWithdrawAddress(request) {
        const data = exports.MsgSetWithdrawAddress.encode(request).finish();
        const promise = this.rpc.request(this.service, "SetWithdrawAddress", data);
        return promise.then((data)=>exports.MsgSetWithdrawAddressResponse.decode(_m0.Reader.create(data)));
    }
    WithdrawDelegatorReward(request) {
        const data = exports.MsgWithdrawDelegatorReward.encode(request).finish();
        const promise = this.rpc.request(this.service, "WithdrawDelegatorReward", data);
        return promise.then((data)=>exports.MsgWithdrawDelegatorRewardResponse.decode(_m0.Reader.create(data)));
    }
    WithdrawValidatorCommission(request) {
        const data = exports.MsgWithdrawValidatorCommission.encode(request).finish();
        const promise = this.rpc.request(this.service, "WithdrawValidatorCommission", data);
        return promise.then((data)=>exports.MsgWithdrawValidatorCommissionResponse.decode(_m0.Reader.create(data)));
    }
    FundCommunityPool(request) {
        const data = exports.MsgFundCommunityPool.encode(request).finish();
        const promise = this.rpc.request(this.service, "FundCommunityPool", data);
        return promise.then((data)=>exports.MsgFundCommunityPoolResponse.decode(_m0.Reader.create(data)));
    }
    SetAutoRestake(request) {
        const data = exports.MsgSetAutoRestake.encode(request).finish();
        const promise = this.rpc.request(this.service, "SetAutoRestake", data);
        return promise.then((data)=>exports.MsgSetAutoRestakeResponse.decode(_m0.Reader.create(data)));
    }
    UpdateParams(request) {
        const data = exports.MsgUpdateParams.encode(request).finish();
        const promise = this.rpc.request(this.service, "UpdateParams", data);
        return promise.then((data)=>exports.MsgUpdateParamsResponse.decode(_m0.Reader.create(data)));
    }
    CommunityPoolSpend(request) {
        const data = exports.MsgCommunityPoolSpend.encode(request).finish();
        const promise = this.rpc.request(this.service, "CommunityPoolSpend", data);
        return promise.then((data)=>exports.MsgCommunityPoolSpendResponse.decode(_m0.Reader.create(data)));
    }
    DepositValidatorRewardsPool(request) {
        const data = exports.MsgDepositValidatorRewardsPool.encode(request).finish();
        const promise = this.rpc.request(this.service, "DepositValidatorRewardsPool", data);
        return promise.then((data)=>exports.MsgDepositValidatorRewardsPoolResponse.decode(_m0.Reader.create(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=tx.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/evidence/v1beta1/tx.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/evidence/v1beta1/tx.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MsgClientImpl = exports.MsgServiceName = exports.MsgSubmitEvidenceResponse = exports.MsgSubmitEvidence = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.evidence.v1beta1";
function createBaseMsgSubmitEvidence() {
    return {
        submitter: "",
        evidence: undefined
    };
}
exports.MsgSubmitEvidence = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.submitter !== "") {
            writer.uint32(10).string(message.submitter);
        }
        if (message.evidence !== undefined) {
            any_1.Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSubmitEvidence();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.submitter = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.evidence = any_1.Any.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            submitter: isSet(object.submitter) ? globalThis.String(object.submitter) : "",
            evidence: isSet(object.evidence) ? any_1.Any.fromJSON(object.evidence) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.submitter !== "") {
            obj.submitter = message.submitter;
        }
        if (message.evidence !== undefined) {
            obj.evidence = any_1.Any.toJSON(message.evidence);
        }
        return obj;
    },
    create (base) {
        return exports.MsgSubmitEvidence.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgSubmitEvidence();
        message.submitter = (_a = object.submitter) !== null && _a !== void 0 ? _a : "";
        message.evidence = object.evidence !== undefined && object.evidence !== null ? any_1.Any.fromPartial(object.evidence) : undefined;
        return message;
    }
};
function createBaseMsgSubmitEvidenceResponse() {
    return {
        hash: new Uint8Array(0)
    };
}
exports.MsgSubmitEvidenceResponse = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.hash.length !== 0) {
            writer.uint32(34).bytes(message.hash);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSubmitEvidenceResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.hash = reader.bytes();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            hash: isSet(object.hash) ? bytesFromBase64(object.hash) : new Uint8Array(0)
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.hash.length !== 0) {
            obj.hash = base64FromBytes(message.hash);
        }
        return obj;
    },
    create (base) {
        return exports.MsgSubmitEvidenceResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgSubmitEvidenceResponse();
        message.hash = (_a = object.hash) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        return message;
    }
};
exports.MsgServiceName = "cosmos.evidence.v1beta1.Msg";
class MsgClientImpl {
    constructor(rpc, opts){
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.MsgServiceName;
        this.rpc = rpc;
        this.SubmitEvidence = this.SubmitEvidence.bind(this);
    }
    SubmitEvidence(request) {
        const data = exports.MsgSubmitEvidence.encode(request).finish();
        const promise = this.rpc.request(this.service, "SubmitEvidence", data);
        return promise.then((data)=>exports.MsgSubmitEvidenceResponse.decode(_m0.Reader.create(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    } else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for(let i = 0; i < bin.length; ++i){
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    } else {
        const bin = [];
        arr.forEach((byte)=>{
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=tx.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/feegrant/v1beta1/tx.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/feegrant/v1beta1/tx.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MsgClientImpl = exports.MsgServiceName = exports.MsgPruneAllowancesResponse = exports.MsgPruneAllowances = exports.MsgRevokeAllowanceResponse = exports.MsgRevokeAllowance = exports.MsgGrantAllowanceResponse = exports.MsgGrantAllowance = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.feegrant.v1beta1";
function createBaseMsgGrantAllowance() {
    return {
        granter: "",
        grantee: "",
        allowance: undefined
    };
}
exports.MsgGrantAllowance = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
            writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
            writer.uint32(18).string(message.grantee);
        }
        if (message.allowance !== undefined) {
            any_1.Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgGrantAllowance();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.granter = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.grantee = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.allowance = any_1.Any.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            granter: isSet(object.granter) ? globalThis.String(object.granter) : "",
            grantee: isSet(object.grantee) ? globalThis.String(object.grantee) : "",
            allowance: isSet(object.allowance) ? any_1.Any.fromJSON(object.allowance) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.granter !== "") {
            obj.granter = message.granter;
        }
        if (message.grantee !== "") {
            obj.grantee = message.grantee;
        }
        if (message.allowance !== undefined) {
            obj.allowance = any_1.Any.toJSON(message.allowance);
        }
        return obj;
    },
    create (base) {
        return exports.MsgGrantAllowance.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgGrantAllowance();
        message.granter = (_a = object.granter) !== null && _a !== void 0 ? _a : "";
        message.grantee = (_b = object.grantee) !== null && _b !== void 0 ? _b : "";
        message.allowance = object.allowance !== undefined && object.allowance !== null ? any_1.Any.fromPartial(object.allowance) : undefined;
        return message;
    }
};
function createBaseMsgGrantAllowanceResponse() {
    return {};
}
exports.MsgGrantAllowanceResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgGrantAllowanceResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgGrantAllowanceResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgGrantAllowanceResponse();
        return message;
    }
};
function createBaseMsgRevokeAllowance() {
    return {
        granter: "",
        grantee: ""
    };
}
exports.MsgRevokeAllowance = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
            writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
            writer.uint32(18).string(message.grantee);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgRevokeAllowance();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.granter = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.grantee = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            granter: isSet(object.granter) ? globalThis.String(object.granter) : "",
            grantee: isSet(object.grantee) ? globalThis.String(object.grantee) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.granter !== "") {
            obj.granter = message.granter;
        }
        if (message.grantee !== "") {
            obj.grantee = message.grantee;
        }
        return obj;
    },
    create (base) {
        return exports.MsgRevokeAllowance.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgRevokeAllowance();
        message.granter = (_a = object.granter) !== null && _a !== void 0 ? _a : "";
        message.grantee = (_b = object.grantee) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseMsgRevokeAllowanceResponse() {
    return {};
}
exports.MsgRevokeAllowanceResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgRevokeAllowanceResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgRevokeAllowanceResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgRevokeAllowanceResponse();
        return message;
    }
};
function createBaseMsgPruneAllowances() {
    return {
        pruner: ""
    };
}
exports.MsgPruneAllowances = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.pruner !== "") {
            writer.uint32(10).string(message.pruner);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgPruneAllowances();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.pruner = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            pruner: isSet(object.pruner) ? globalThis.String(object.pruner) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.pruner !== "") {
            obj.pruner = message.pruner;
        }
        return obj;
    },
    create (base) {
        return exports.MsgPruneAllowances.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgPruneAllowances();
        message.pruner = (_a = object.pruner) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseMsgPruneAllowancesResponse() {
    return {};
}
exports.MsgPruneAllowancesResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgPruneAllowancesResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgPruneAllowancesResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgPruneAllowancesResponse();
        return message;
    }
};
exports.MsgServiceName = "cosmos.feegrant.v1beta1.Msg";
class MsgClientImpl {
    constructor(rpc, opts){
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.MsgServiceName;
        this.rpc = rpc;
        this.GrantAllowance = this.GrantAllowance.bind(this);
        this.RevokeAllowance = this.RevokeAllowance.bind(this);
        this.PruneAllowances = this.PruneAllowances.bind(this);
    }
    GrantAllowance(request) {
        const data = exports.MsgGrantAllowance.encode(request).finish();
        const promise = this.rpc.request(this.service, "GrantAllowance", data);
        return promise.then((data)=>exports.MsgGrantAllowanceResponse.decode(_m0.Reader.create(data)));
    }
    RevokeAllowance(request) {
        const data = exports.MsgRevokeAllowance.encode(request).finish();
        const promise = this.rpc.request(this.service, "RevokeAllowance", data);
        return promise.then((data)=>exports.MsgRevokeAllowanceResponse.decode(_m0.Reader.create(data)));
    }
    PruneAllowances(request) {
        const data = exports.MsgPruneAllowances.encode(request).finish();
        const promise = this.rpc.request(this.service, "PruneAllowances", data);
        return promise.then((data)=>exports.MsgPruneAllowancesResponse.decode(_m0.Reader.create(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=tx.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/gov/v1/gov.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/gov/v1/gov.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Params = exports.TallyParams = exports.VotingParams = exports.DepositParams = exports.Vote = exports.TallyResult = exports.Proposal = exports.Deposit = exports.WeightedVoteOption = exports.proposalStatusToJSON = exports.proposalStatusFromJSON = exports.ProposalStatus = exports.voteOptionToJSON = exports.voteOptionFromJSON = exports.VoteOption = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
const duration_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/duration.js [app-ssr] (ecmascript)");
const timestamp_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/timestamp.js [app-ssr] (ecmascript)");
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.gov.v1";
/** Since: cosmos-sdk 0.46 */ /** VoteOption enumerates the valid vote options for a given governance proposal. */ var VoteOption;
(function(VoteOption) {
    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */ VoteOption[VoteOption["VOTE_OPTION_UNSPECIFIED"] = 0] = "VOTE_OPTION_UNSPECIFIED";
    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */ VoteOption[VoteOption["VOTE_OPTION_YES"] = 1] = "VOTE_OPTION_YES";
    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */ VoteOption[VoteOption["VOTE_OPTION_ABSTAIN"] = 2] = "VOTE_OPTION_ABSTAIN";
    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */ VoteOption[VoteOption["VOTE_OPTION_NO"] = 3] = "VOTE_OPTION_NO";
    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */ VoteOption[VoteOption["VOTE_OPTION_NO_WITH_VETO"] = 4] = "VOTE_OPTION_NO_WITH_VETO";
    VoteOption[VoteOption["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(VoteOption = exports.VoteOption || (exports.VoteOption = {}));
function voteOptionFromJSON(object) {
    switch(object){
        case 0:
        case "VOTE_OPTION_UNSPECIFIED":
            return VoteOption.VOTE_OPTION_UNSPECIFIED;
        case 1:
        case "VOTE_OPTION_YES":
            return VoteOption.VOTE_OPTION_YES;
        case 2:
        case "VOTE_OPTION_ABSTAIN":
            return VoteOption.VOTE_OPTION_ABSTAIN;
        case 3:
        case "VOTE_OPTION_NO":
            return VoteOption.VOTE_OPTION_NO;
        case 4:
        case "VOTE_OPTION_NO_WITH_VETO":
            return VoteOption.VOTE_OPTION_NO_WITH_VETO;
        case -1:
        case "UNRECOGNIZED":
        default:
            return VoteOption.UNRECOGNIZED;
    }
}
exports.voteOptionFromJSON = voteOptionFromJSON;
function voteOptionToJSON(object) {
    switch(object){
        case VoteOption.VOTE_OPTION_UNSPECIFIED:
            return "VOTE_OPTION_UNSPECIFIED";
        case VoteOption.VOTE_OPTION_YES:
            return "VOTE_OPTION_YES";
        case VoteOption.VOTE_OPTION_ABSTAIN:
            return "VOTE_OPTION_ABSTAIN";
        case VoteOption.VOTE_OPTION_NO:
            return "VOTE_OPTION_NO";
        case VoteOption.VOTE_OPTION_NO_WITH_VETO:
            return "VOTE_OPTION_NO_WITH_VETO";
        case VoteOption.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.voteOptionToJSON = voteOptionToJSON;
/** ProposalStatus enumerates the valid statuses of a proposal. */ var ProposalStatus;
(function(ProposalStatus) {
    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status. */ ProposalStatus[ProposalStatus["PROPOSAL_STATUS_UNSPECIFIED"] = 0] = "PROPOSAL_STATUS_UNSPECIFIED";
    /**
     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
     * period.
     */ ProposalStatus[ProposalStatus["PROPOSAL_STATUS_DEPOSIT_PERIOD"] = 1] = "PROPOSAL_STATUS_DEPOSIT_PERIOD";
    /**
     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
     * period.
     */ ProposalStatus[ProposalStatus["PROPOSAL_STATUS_VOTING_PERIOD"] = 2] = "PROPOSAL_STATUS_VOTING_PERIOD";
    /**
     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
     * passed.
     */ ProposalStatus[ProposalStatus["PROPOSAL_STATUS_PASSED"] = 3] = "PROPOSAL_STATUS_PASSED";
    /**
     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
     * been rejected.
     */ ProposalStatus[ProposalStatus["PROPOSAL_STATUS_REJECTED"] = 4] = "PROPOSAL_STATUS_REJECTED";
    /**
     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
     * failed.
     */ ProposalStatus[ProposalStatus["PROPOSAL_STATUS_FAILED"] = 5] = "PROPOSAL_STATUS_FAILED";
    ProposalStatus[ProposalStatus["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(ProposalStatus = exports.ProposalStatus || (exports.ProposalStatus = {}));
function proposalStatusFromJSON(object) {
    switch(object){
        case 0:
        case "PROPOSAL_STATUS_UNSPECIFIED":
            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;
        case 1:
        case "PROPOSAL_STATUS_DEPOSIT_PERIOD":
            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;
        case 2:
        case "PROPOSAL_STATUS_VOTING_PERIOD":
            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;
        case 3:
        case "PROPOSAL_STATUS_PASSED":
            return ProposalStatus.PROPOSAL_STATUS_PASSED;
        case 4:
        case "PROPOSAL_STATUS_REJECTED":
            return ProposalStatus.PROPOSAL_STATUS_REJECTED;
        case 5:
        case "PROPOSAL_STATUS_FAILED":
            return ProposalStatus.PROPOSAL_STATUS_FAILED;
        case -1:
        case "UNRECOGNIZED":
        default:
            return ProposalStatus.UNRECOGNIZED;
    }
}
exports.proposalStatusFromJSON = proposalStatusFromJSON;
function proposalStatusToJSON(object) {
    switch(object){
        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:
            return "PROPOSAL_STATUS_UNSPECIFIED";
        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:
            return "PROPOSAL_STATUS_DEPOSIT_PERIOD";
        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:
            return "PROPOSAL_STATUS_VOTING_PERIOD";
        case ProposalStatus.PROPOSAL_STATUS_PASSED:
            return "PROPOSAL_STATUS_PASSED";
        case ProposalStatus.PROPOSAL_STATUS_REJECTED:
            return "PROPOSAL_STATUS_REJECTED";
        case ProposalStatus.PROPOSAL_STATUS_FAILED:
            return "PROPOSAL_STATUS_FAILED";
        case ProposalStatus.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.proposalStatusToJSON = proposalStatusToJSON;
function createBaseWeightedVoteOption() {
    return {
        option: 0,
        weight: ""
    };
}
exports.WeightedVoteOption = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.option !== 0) {
            writer.uint32(8).int32(message.option);
        }
        if (message.weight !== "") {
            writer.uint32(18).string(message.weight);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseWeightedVoteOption();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.option = reader.int32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.weight = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            option: isSet(object.option) ? voteOptionFromJSON(object.option) : 0,
            weight: isSet(object.weight) ? globalThis.String(object.weight) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.option !== 0) {
            obj.option = voteOptionToJSON(message.option);
        }
        if (message.weight !== "") {
            obj.weight = message.weight;
        }
        return obj;
    },
    create (base) {
        return exports.WeightedVoteOption.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseWeightedVoteOption();
        message.option = (_a = object.option) !== null && _a !== void 0 ? _a : 0;
        message.weight = (_b = object.weight) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseDeposit() {
    return {
        proposal_id: "0",
        depositor: "",
        amount: []
    };
}
exports.Deposit = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.proposal_id !== "0") {
            writer.uint32(8).uint64(message.proposal_id);
        }
        if (message.depositor !== "") {
            writer.uint32(18).string(message.depositor);
        }
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDeposit();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.proposal_id = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.depositor = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            proposal_id: isSet(object.proposal_id) ? globalThis.String(object.proposal_id) : "0",
            depositor: isSet(object.depositor) ? globalThis.String(object.depositor) : "",
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.proposal_id !== "0") {
            obj.proposal_id = message.proposal_id;
        }
        if (message.depositor !== "") {
            obj.depositor = message.depositor;
        }
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.Deposit.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseDeposit();
        message.proposal_id = (_a = object.proposal_id) !== null && _a !== void 0 ? _a : "0";
        message.depositor = (_b = object.depositor) !== null && _b !== void 0 ? _b : "";
        message.amount = ((_c = object.amount) === null || _c === void 0 ? void 0 : _c.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseProposal() {
    return {
        id: "0",
        messages: [],
        status: 0,
        final_tally_result: undefined,
        submit_time: undefined,
        deposit_end_time: undefined,
        total_deposit: [],
        voting_start_time: undefined,
        voting_end_time: undefined,
        metadata: "",
        title: "",
        summary: "",
        proposer: "",
        expedited: false,
        failed_reason: ""
    };
}
exports.Proposal = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.id !== "0") {
            writer.uint32(8).uint64(message.id);
        }
        for (const v of message.messages){
            any_1.Any.encode(v, writer.uint32(18).fork()).ldelim();
        }
        if (message.status !== 0) {
            writer.uint32(24).int32(message.status);
        }
        if (message.final_tally_result !== undefined) {
            exports.TallyResult.encode(message.final_tally_result, writer.uint32(34).fork()).ldelim();
        }
        if (message.submit_time !== undefined) {
            timestamp_1.Timestamp.encode(message.submit_time, writer.uint32(42).fork()).ldelim();
        }
        if (message.deposit_end_time !== undefined) {
            timestamp_1.Timestamp.encode(message.deposit_end_time, writer.uint32(50).fork()).ldelim();
        }
        for (const v of message.total_deposit){
            coin_1.Coin.encode(v, writer.uint32(58).fork()).ldelim();
        }
        if (message.voting_start_time !== undefined) {
            timestamp_1.Timestamp.encode(message.voting_start_time, writer.uint32(66).fork()).ldelim();
        }
        if (message.voting_end_time !== undefined) {
            timestamp_1.Timestamp.encode(message.voting_end_time, writer.uint32(74).fork()).ldelim();
        }
        if (message.metadata !== "") {
            writer.uint32(82).string(message.metadata);
        }
        if (message.title !== "") {
            writer.uint32(90).string(message.title);
        }
        if (message.summary !== "") {
            writer.uint32(98).string(message.summary);
        }
        if (message.proposer !== "") {
            writer.uint32(106).string(message.proposer);
        }
        if (message.expedited !== false) {
            writer.uint32(112).bool(message.expedited);
        }
        if (message.failed_reason !== "") {
            writer.uint32(122).string(message.failed_reason);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseProposal();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.id = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.messages.push(any_1.Any.decode(reader, reader.uint32()));
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.status = reader.int32();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.final_tally_result = exports.TallyResult.decode(reader, reader.uint32());
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.submit_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.deposit_end_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.total_deposit.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 8:
                    if (tag !== 66) {
                        break;
                    }
                    message.voting_start_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 9:
                    if (tag !== 74) {
                        break;
                    }
                    message.voting_end_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 10:
                    if (tag !== 82) {
                        break;
                    }
                    message.metadata = reader.string();
                    continue;
                case 11:
                    if (tag !== 90) {
                        break;
                    }
                    message.title = reader.string();
                    continue;
                case 12:
                    if (tag !== 98) {
                        break;
                    }
                    message.summary = reader.string();
                    continue;
                case 13:
                    if (tag !== 106) {
                        break;
                    }
                    message.proposer = reader.string();
                    continue;
                case 14:
                    if (tag !== 112) {
                        break;
                    }
                    message.expedited = reader.bool();
                    continue;
                case 15:
                    if (tag !== 122) {
                        break;
                    }
                    message.failed_reason = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            id: isSet(object.id) ? globalThis.String(object.id) : "0",
            messages: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.messages) ? object.messages.map((e)=>any_1.Any.fromJSON(e)) : [],
            status: isSet(object.status) ? proposalStatusFromJSON(object.status) : 0,
            final_tally_result: isSet(object.final_tally_result) ? exports.TallyResult.fromJSON(object.final_tally_result) : undefined,
            submit_time: isSet(object.submit_time) ? fromJsonTimestamp(object.submit_time) : undefined,
            deposit_end_time: isSet(object.deposit_end_time) ? fromJsonTimestamp(object.deposit_end_time) : undefined,
            total_deposit: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.total_deposit) ? object.total_deposit.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            voting_start_time: isSet(object.voting_start_time) ? fromJsonTimestamp(object.voting_start_time) : undefined,
            voting_end_time: isSet(object.voting_end_time) ? fromJsonTimestamp(object.voting_end_time) : undefined,
            metadata: isSet(object.metadata) ? globalThis.String(object.metadata) : "",
            title: isSet(object.title) ? globalThis.String(object.title) : "",
            summary: isSet(object.summary) ? globalThis.String(object.summary) : "",
            proposer: isSet(object.proposer) ? globalThis.String(object.proposer) : "",
            expedited: isSet(object.expedited) ? globalThis.Boolean(object.expedited) : false,
            failed_reason: isSet(object.failed_reason) ? globalThis.String(object.failed_reason) : ""
        };
    },
    toJSON (message) {
        var _a, _b;
        const obj = {};
        if (message.id !== "0") {
            obj.id = message.id;
        }
        if ((_a = message.messages) === null || _a === void 0 ? void 0 : _a.length) {
            obj.messages = message.messages.map((e)=>any_1.Any.toJSON(e));
        }
        if (message.status !== 0) {
            obj.status = proposalStatusToJSON(message.status);
        }
        if (message.final_tally_result !== undefined) {
            obj.final_tally_result = exports.TallyResult.toJSON(message.final_tally_result);
        }
        if (message.submit_time !== undefined) {
            obj.submit_time = fromTimestamp(message.submit_time).toISOString();
        }
        if (message.deposit_end_time !== undefined) {
            obj.deposit_end_time = fromTimestamp(message.deposit_end_time).toISOString();
        }
        if ((_b = message.total_deposit) === null || _b === void 0 ? void 0 : _b.length) {
            obj.total_deposit = message.total_deposit.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.voting_start_time !== undefined) {
            obj.voting_start_time = fromTimestamp(message.voting_start_time).toISOString();
        }
        if (message.voting_end_time !== undefined) {
            obj.voting_end_time = fromTimestamp(message.voting_end_time).toISOString();
        }
        if (message.metadata !== "") {
            obj.metadata = message.metadata;
        }
        if (message.title !== "") {
            obj.title = message.title;
        }
        if (message.summary !== "") {
            obj.summary = message.summary;
        }
        if (message.proposer !== "") {
            obj.proposer = message.proposer;
        }
        if (message.expedited !== false) {
            obj.expedited = message.expedited;
        }
        if (message.failed_reason !== "") {
            obj.failed_reason = message.failed_reason;
        }
        return obj;
    },
    create (base) {
        return exports.Proposal.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        const message = createBaseProposal();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : "0";
        message.messages = ((_b = object.messages) === null || _b === void 0 ? void 0 : _b.map((e)=>any_1.Any.fromPartial(e))) || [];
        message.status = (_c = object.status) !== null && _c !== void 0 ? _c : 0;
        message.final_tally_result = object.final_tally_result !== undefined && object.final_tally_result !== null ? exports.TallyResult.fromPartial(object.final_tally_result) : undefined;
        message.submit_time = object.submit_time !== undefined && object.submit_time !== null ? timestamp_1.Timestamp.fromPartial(object.submit_time) : undefined;
        message.deposit_end_time = object.deposit_end_time !== undefined && object.deposit_end_time !== null ? timestamp_1.Timestamp.fromPartial(object.deposit_end_time) : undefined;
        message.total_deposit = ((_d = object.total_deposit) === null || _d === void 0 ? void 0 : _d.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.voting_start_time = object.voting_start_time !== undefined && object.voting_start_time !== null ? timestamp_1.Timestamp.fromPartial(object.voting_start_time) : undefined;
        message.voting_end_time = object.voting_end_time !== undefined && object.voting_end_time !== null ? timestamp_1.Timestamp.fromPartial(object.voting_end_time) : undefined;
        message.metadata = (_e = object.metadata) !== null && _e !== void 0 ? _e : "";
        message.title = (_f = object.title) !== null && _f !== void 0 ? _f : "";
        message.summary = (_g = object.summary) !== null && _g !== void 0 ? _g : "";
        message.proposer = (_h = object.proposer) !== null && _h !== void 0 ? _h : "";
        message.expedited = (_j = object.expedited) !== null && _j !== void 0 ? _j : false;
        message.failed_reason = (_k = object.failed_reason) !== null && _k !== void 0 ? _k : "";
        return message;
    }
};
function createBaseTallyResult() {
    return {
        yes_count: "",
        abstain_count: "",
        no_count: "",
        no_with_veto_count: ""
    };
}
exports.TallyResult = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.yes_count !== "") {
            writer.uint32(10).string(message.yes_count);
        }
        if (message.abstain_count !== "") {
            writer.uint32(18).string(message.abstain_count);
        }
        if (message.no_count !== "") {
            writer.uint32(26).string(message.no_count);
        }
        if (message.no_with_veto_count !== "") {
            writer.uint32(34).string(message.no_with_veto_count);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTallyResult();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.yes_count = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.abstain_count = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.no_count = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.no_with_veto_count = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            yes_count: isSet(object.yes_count) ? globalThis.String(object.yes_count) : "",
            abstain_count: isSet(object.abstain_count) ? globalThis.String(object.abstain_count) : "",
            no_count: isSet(object.no_count) ? globalThis.String(object.no_count) : "",
            no_with_veto_count: isSet(object.no_with_veto_count) ? globalThis.String(object.no_with_veto_count) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.yes_count !== "") {
            obj.yes_count = message.yes_count;
        }
        if (message.abstain_count !== "") {
            obj.abstain_count = message.abstain_count;
        }
        if (message.no_count !== "") {
            obj.no_count = message.no_count;
        }
        if (message.no_with_veto_count !== "") {
            obj.no_with_veto_count = message.no_with_veto_count;
        }
        return obj;
    },
    create (base) {
        return exports.TallyResult.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseTallyResult();
        message.yes_count = (_a = object.yes_count) !== null && _a !== void 0 ? _a : "";
        message.abstain_count = (_b = object.abstain_count) !== null && _b !== void 0 ? _b : "";
        message.no_count = (_c = object.no_count) !== null && _c !== void 0 ? _c : "";
        message.no_with_veto_count = (_d = object.no_with_veto_count) !== null && _d !== void 0 ? _d : "";
        return message;
    }
};
function createBaseVote() {
    return {
        proposal_id: "0",
        voter: "",
        options: [],
        metadata: ""
    };
}
exports.Vote = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.proposal_id !== "0") {
            writer.uint32(8).uint64(message.proposal_id);
        }
        if (message.voter !== "") {
            writer.uint32(18).string(message.voter);
        }
        for (const v of message.options){
            exports.WeightedVoteOption.encode(v, writer.uint32(34).fork()).ldelim();
        }
        if (message.metadata !== "") {
            writer.uint32(42).string(message.metadata);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseVote();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.proposal_id = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.voter = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.options.push(exports.WeightedVoteOption.decode(reader, reader.uint32()));
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.metadata = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            proposal_id: isSet(object.proposal_id) ? globalThis.String(object.proposal_id) : "0",
            voter: isSet(object.voter) ? globalThis.String(object.voter) : "",
            options: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.options) ? object.options.map((e)=>exports.WeightedVoteOption.fromJSON(e)) : [],
            metadata: isSet(object.metadata) ? globalThis.String(object.metadata) : ""
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.proposal_id !== "0") {
            obj.proposal_id = message.proposal_id;
        }
        if (message.voter !== "") {
            obj.voter = message.voter;
        }
        if ((_a = message.options) === null || _a === void 0 ? void 0 : _a.length) {
            obj.options = message.options.map((e)=>exports.WeightedVoteOption.toJSON(e));
        }
        if (message.metadata !== "") {
            obj.metadata = message.metadata;
        }
        return obj;
    },
    create (base) {
        return exports.Vote.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseVote();
        message.proposal_id = (_a = object.proposal_id) !== null && _a !== void 0 ? _a : "0";
        message.voter = (_b = object.voter) !== null && _b !== void 0 ? _b : "";
        message.options = ((_c = object.options) === null || _c === void 0 ? void 0 : _c.map((e)=>exports.WeightedVoteOption.fromPartial(e))) || [];
        message.metadata = (_d = object.metadata) !== null && _d !== void 0 ? _d : "";
        return message;
    }
};
function createBaseDepositParams() {
    return {
        min_deposit: [],
        max_deposit_period: undefined
    };
}
exports.DepositParams = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.min_deposit){
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.max_deposit_period !== undefined) {
            duration_1.Duration.encode(message.max_deposit_period, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDepositParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.min_deposit.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.max_deposit_period = duration_1.Duration.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            min_deposit: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.min_deposit) ? object.min_deposit.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            max_deposit_period: isSet(object.max_deposit_period) ? duration_1.Duration.fromJSON(object.max_deposit_period) : undefined
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.min_deposit) === null || _a === void 0 ? void 0 : _a.length) {
            obj.min_deposit = message.min_deposit.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.max_deposit_period !== undefined) {
            obj.max_deposit_period = duration_1.Duration.toJSON(message.max_deposit_period);
        }
        return obj;
    },
    create (base) {
        return exports.DepositParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseDepositParams();
        message.min_deposit = ((_a = object.min_deposit) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.max_deposit_period = object.max_deposit_period !== undefined && object.max_deposit_period !== null ? duration_1.Duration.fromPartial(object.max_deposit_period) : undefined;
        return message;
    }
};
function createBaseVotingParams() {
    return {
        voting_period: undefined
    };
}
exports.VotingParams = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.voting_period !== undefined) {
            duration_1.Duration.encode(message.voting_period, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseVotingParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.voting_period = duration_1.Duration.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            voting_period: isSet(object.voting_period) ? duration_1.Duration.fromJSON(object.voting_period) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.voting_period !== undefined) {
            obj.voting_period = duration_1.Duration.toJSON(message.voting_period);
        }
        return obj;
    },
    create (base) {
        return exports.VotingParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseVotingParams();
        message.voting_period = object.voting_period !== undefined && object.voting_period !== null ? duration_1.Duration.fromPartial(object.voting_period) : undefined;
        return message;
    }
};
function createBaseTallyParams() {
    return {
        quorum: "",
        threshold: "",
        veto_threshold: ""
    };
}
exports.TallyParams = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.quorum !== "") {
            writer.uint32(10).string(message.quorum);
        }
        if (message.threshold !== "") {
            writer.uint32(18).string(message.threshold);
        }
        if (message.veto_threshold !== "") {
            writer.uint32(26).string(message.veto_threshold);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTallyParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.quorum = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.threshold = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.veto_threshold = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            quorum: isSet(object.quorum) ? globalThis.String(object.quorum) : "",
            threshold: isSet(object.threshold) ? globalThis.String(object.threshold) : "",
            veto_threshold: isSet(object.veto_threshold) ? globalThis.String(object.veto_threshold) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.quorum !== "") {
            obj.quorum = message.quorum;
        }
        if (message.threshold !== "") {
            obj.threshold = message.threshold;
        }
        if (message.veto_threshold !== "") {
            obj.veto_threshold = message.veto_threshold;
        }
        return obj;
    },
    create (base) {
        return exports.TallyParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseTallyParams();
        message.quorum = (_a = object.quorum) !== null && _a !== void 0 ? _a : "";
        message.threshold = (_b = object.threshold) !== null && _b !== void 0 ? _b : "";
        message.veto_threshold = (_c = object.veto_threshold) !== null && _c !== void 0 ? _c : "";
        return message;
    }
};
function createBaseParams() {
    return {
        min_deposit: [],
        max_deposit_period: undefined,
        voting_period: undefined,
        quorum: "",
        threshold: "",
        veto_threshold: "",
        min_initial_deposit_ratio: "",
        proposal_cancel_ratio: "",
        proposal_cancel_dest: "",
        expedited_voting_period: undefined,
        expedited_threshold: "",
        expedited_min_deposit: [],
        burn_vote_quorum: false,
        burn_proposal_deposit_prevote: false,
        burn_vote_veto: false,
        min_deposit_ratio: ""
    };
}
exports.Params = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.min_deposit){
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.max_deposit_period !== undefined) {
            duration_1.Duration.encode(message.max_deposit_period, writer.uint32(18).fork()).ldelim();
        }
        if (message.voting_period !== undefined) {
            duration_1.Duration.encode(message.voting_period, writer.uint32(26).fork()).ldelim();
        }
        if (message.quorum !== "") {
            writer.uint32(34).string(message.quorum);
        }
        if (message.threshold !== "") {
            writer.uint32(42).string(message.threshold);
        }
        if (message.veto_threshold !== "") {
            writer.uint32(50).string(message.veto_threshold);
        }
        if (message.min_initial_deposit_ratio !== "") {
            writer.uint32(58).string(message.min_initial_deposit_ratio);
        }
        if (message.proposal_cancel_ratio !== "") {
            writer.uint32(66).string(message.proposal_cancel_ratio);
        }
        if (message.proposal_cancel_dest !== "") {
            writer.uint32(74).string(message.proposal_cancel_dest);
        }
        if (message.expedited_voting_period !== undefined) {
            duration_1.Duration.encode(message.expedited_voting_period, writer.uint32(82).fork()).ldelim();
        }
        if (message.expedited_threshold !== "") {
            writer.uint32(90).string(message.expedited_threshold);
        }
        for (const v of message.expedited_min_deposit){
            coin_1.Coin.encode(v, writer.uint32(98).fork()).ldelim();
        }
        if (message.burn_vote_quorum !== false) {
            writer.uint32(104).bool(message.burn_vote_quorum);
        }
        if (message.burn_proposal_deposit_prevote !== false) {
            writer.uint32(112).bool(message.burn_proposal_deposit_prevote);
        }
        if (message.burn_vote_veto !== false) {
            writer.uint32(120).bool(message.burn_vote_veto);
        }
        if (message.min_deposit_ratio !== "") {
            writer.uint32(130).string(message.min_deposit_ratio);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.min_deposit.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.max_deposit_period = duration_1.Duration.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.voting_period = duration_1.Duration.decode(reader, reader.uint32());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.quorum = reader.string();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.threshold = reader.string();
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.veto_threshold = reader.string();
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.min_initial_deposit_ratio = reader.string();
                    continue;
                case 8:
                    if (tag !== 66) {
                        break;
                    }
                    message.proposal_cancel_ratio = reader.string();
                    continue;
                case 9:
                    if (tag !== 74) {
                        break;
                    }
                    message.proposal_cancel_dest = reader.string();
                    continue;
                case 10:
                    if (tag !== 82) {
                        break;
                    }
                    message.expedited_voting_period = duration_1.Duration.decode(reader, reader.uint32());
                    continue;
                case 11:
                    if (tag !== 90) {
                        break;
                    }
                    message.expedited_threshold = reader.string();
                    continue;
                case 12:
                    if (tag !== 98) {
                        break;
                    }
                    message.expedited_min_deposit.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 13:
                    if (tag !== 104) {
                        break;
                    }
                    message.burn_vote_quorum = reader.bool();
                    continue;
                case 14:
                    if (tag !== 112) {
                        break;
                    }
                    message.burn_proposal_deposit_prevote = reader.bool();
                    continue;
                case 15:
                    if (tag !== 120) {
                        break;
                    }
                    message.burn_vote_veto = reader.bool();
                    continue;
                case 16:
                    if (tag !== 130) {
                        break;
                    }
                    message.min_deposit_ratio = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            min_deposit: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.min_deposit) ? object.min_deposit.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            max_deposit_period: isSet(object.max_deposit_period) ? duration_1.Duration.fromJSON(object.max_deposit_period) : undefined,
            voting_period: isSet(object.voting_period) ? duration_1.Duration.fromJSON(object.voting_period) : undefined,
            quorum: isSet(object.quorum) ? globalThis.String(object.quorum) : "",
            threshold: isSet(object.threshold) ? globalThis.String(object.threshold) : "",
            veto_threshold: isSet(object.veto_threshold) ? globalThis.String(object.veto_threshold) : "",
            min_initial_deposit_ratio: isSet(object.min_initial_deposit_ratio) ? globalThis.String(object.min_initial_deposit_ratio) : "",
            proposal_cancel_ratio: isSet(object.proposal_cancel_ratio) ? globalThis.String(object.proposal_cancel_ratio) : "",
            proposal_cancel_dest: isSet(object.proposal_cancel_dest) ? globalThis.String(object.proposal_cancel_dest) : "",
            expedited_voting_period: isSet(object.expedited_voting_period) ? duration_1.Duration.fromJSON(object.expedited_voting_period) : undefined,
            expedited_threshold: isSet(object.expedited_threshold) ? globalThis.String(object.expedited_threshold) : "",
            expedited_min_deposit: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.expedited_min_deposit) ? object.expedited_min_deposit.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            burn_vote_quorum: isSet(object.burn_vote_quorum) ? globalThis.Boolean(object.burn_vote_quorum) : false,
            burn_proposal_deposit_prevote: isSet(object.burn_proposal_deposit_prevote) ? globalThis.Boolean(object.burn_proposal_deposit_prevote) : false,
            burn_vote_veto: isSet(object.burn_vote_veto) ? globalThis.Boolean(object.burn_vote_veto) : false,
            min_deposit_ratio: isSet(object.min_deposit_ratio) ? globalThis.String(object.min_deposit_ratio) : ""
        };
    },
    toJSON (message) {
        var _a, _b;
        const obj = {};
        if ((_a = message.min_deposit) === null || _a === void 0 ? void 0 : _a.length) {
            obj.min_deposit = message.min_deposit.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.max_deposit_period !== undefined) {
            obj.max_deposit_period = duration_1.Duration.toJSON(message.max_deposit_period);
        }
        if (message.voting_period !== undefined) {
            obj.voting_period = duration_1.Duration.toJSON(message.voting_period);
        }
        if (message.quorum !== "") {
            obj.quorum = message.quorum;
        }
        if (message.threshold !== "") {
            obj.threshold = message.threshold;
        }
        if (message.veto_threshold !== "") {
            obj.veto_threshold = message.veto_threshold;
        }
        if (message.min_initial_deposit_ratio !== "") {
            obj.min_initial_deposit_ratio = message.min_initial_deposit_ratio;
        }
        if (message.proposal_cancel_ratio !== "") {
            obj.proposal_cancel_ratio = message.proposal_cancel_ratio;
        }
        if (message.proposal_cancel_dest !== "") {
            obj.proposal_cancel_dest = message.proposal_cancel_dest;
        }
        if (message.expedited_voting_period !== undefined) {
            obj.expedited_voting_period = duration_1.Duration.toJSON(message.expedited_voting_period);
        }
        if (message.expedited_threshold !== "") {
            obj.expedited_threshold = message.expedited_threshold;
        }
        if ((_b = message.expedited_min_deposit) === null || _b === void 0 ? void 0 : _b.length) {
            obj.expedited_min_deposit = message.expedited_min_deposit.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.burn_vote_quorum !== false) {
            obj.burn_vote_quorum = message.burn_vote_quorum;
        }
        if (message.burn_proposal_deposit_prevote !== false) {
            obj.burn_proposal_deposit_prevote = message.burn_proposal_deposit_prevote;
        }
        if (message.burn_vote_veto !== false) {
            obj.burn_vote_veto = message.burn_vote_veto;
        }
        if (message.min_deposit_ratio !== "") {
            obj.min_deposit_ratio = message.min_deposit_ratio;
        }
        return obj;
    },
    create (base) {
        return exports.Params.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;
        const message = createBaseParams();
        message.min_deposit = ((_a = object.min_deposit) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.max_deposit_period = object.max_deposit_period !== undefined && object.max_deposit_period !== null ? duration_1.Duration.fromPartial(object.max_deposit_period) : undefined;
        message.voting_period = object.voting_period !== undefined && object.voting_period !== null ? duration_1.Duration.fromPartial(object.voting_period) : undefined;
        message.quorum = (_b = object.quorum) !== null && _b !== void 0 ? _b : "";
        message.threshold = (_c = object.threshold) !== null && _c !== void 0 ? _c : "";
        message.veto_threshold = (_d = object.veto_threshold) !== null && _d !== void 0 ? _d : "";
        message.min_initial_deposit_ratio = (_e = object.min_initial_deposit_ratio) !== null && _e !== void 0 ? _e : "";
        message.proposal_cancel_ratio = (_f = object.proposal_cancel_ratio) !== null && _f !== void 0 ? _f : "";
        message.proposal_cancel_dest = (_g = object.proposal_cancel_dest) !== null && _g !== void 0 ? _g : "";
        message.expedited_voting_period = object.expedited_voting_period !== undefined && object.expedited_voting_period !== null ? duration_1.Duration.fromPartial(object.expedited_voting_period) : undefined;
        message.expedited_threshold = (_h = object.expedited_threshold) !== null && _h !== void 0 ? _h : "";
        message.expedited_min_deposit = ((_j = object.expedited_min_deposit) === null || _j === void 0 ? void 0 : _j.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.burn_vote_quorum = (_k = object.burn_vote_quorum) !== null && _k !== void 0 ? _k : false;
        message.burn_proposal_deposit_prevote = (_l = object.burn_proposal_deposit_prevote) !== null && _l !== void 0 ? _l : false;
        message.burn_vote_veto = (_m = object.burn_vote_veto) !== null && _m !== void 0 ? _m : false;
        message.min_deposit_ratio = (_o = object.min_deposit_ratio) !== null && _o !== void 0 ? _o : "";
        return message;
    }
};
function toTimestamp(date) {
    const seconds = Math.trunc(date.getTime() / 1000).toString();
    const nanos = date.getTime() % 1000 * 1000000;
    return {
        seconds,
        nanos
    };
}
function fromTimestamp(t) {
    let millis = (globalThis.Number(t.seconds) || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return toTimestamp(o);
    } else if (typeof o === "string") {
        return toTimestamp(new globalThis.Date(o));
    } else {
        return timestamp_1.Timestamp.fromJSON(o);
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=gov.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/gov/v1/tx.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/gov/v1/tx.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MsgClientImpl = exports.MsgServiceName = exports.MsgCancelProposalResponse = exports.MsgCancelProposal = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgDepositResponse = exports.MsgDeposit = exports.MsgVoteWeightedResponse = exports.MsgVoteWeighted = exports.MsgVoteResponse = exports.MsgVote = exports.MsgExecLegacyContentResponse = exports.MsgExecLegacyContent = exports.MsgSubmitProposalResponse = exports.MsgSubmitProposal = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
const timestamp_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/timestamp.js [app-ssr] (ecmascript)");
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
const gov_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/gov/v1/gov.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.gov.v1";
function createBaseMsgSubmitProposal() {
    return {
        messages: [],
        initial_deposit: [],
        proposer: "",
        metadata: "",
        title: "",
        summary: "",
        expedited: false
    };
}
exports.MsgSubmitProposal = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.messages){
            any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.initial_deposit){
            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        if (message.proposer !== "") {
            writer.uint32(26).string(message.proposer);
        }
        if (message.metadata !== "") {
            writer.uint32(34).string(message.metadata);
        }
        if (message.title !== "") {
            writer.uint32(42).string(message.title);
        }
        if (message.summary !== "") {
            writer.uint32(50).string(message.summary);
        }
        if (message.expedited !== false) {
            writer.uint32(56).bool(message.expedited);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSubmitProposal();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.messages.push(any_1.Any.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.initial_deposit.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.proposer = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.metadata = reader.string();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.title = reader.string();
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.summary = reader.string();
                    continue;
                case 7:
                    if (tag !== 56) {
                        break;
                    }
                    message.expedited = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            messages: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.messages) ? object.messages.map((e)=>any_1.Any.fromJSON(e)) : [],
            initial_deposit: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.initial_deposit) ? object.initial_deposit.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            proposer: isSet(object.proposer) ? globalThis.String(object.proposer) : "",
            metadata: isSet(object.metadata) ? globalThis.String(object.metadata) : "",
            title: isSet(object.title) ? globalThis.String(object.title) : "",
            summary: isSet(object.summary) ? globalThis.String(object.summary) : "",
            expedited: isSet(object.expedited) ? globalThis.Boolean(object.expedited) : false
        };
    },
    toJSON (message) {
        var _a, _b;
        const obj = {};
        if ((_a = message.messages) === null || _a === void 0 ? void 0 : _a.length) {
            obj.messages = message.messages.map((e)=>any_1.Any.toJSON(e));
        }
        if ((_b = message.initial_deposit) === null || _b === void 0 ? void 0 : _b.length) {
            obj.initial_deposit = message.initial_deposit.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.proposer !== "") {
            obj.proposer = message.proposer;
        }
        if (message.metadata !== "") {
            obj.metadata = message.metadata;
        }
        if (message.title !== "") {
            obj.title = message.title;
        }
        if (message.summary !== "") {
            obj.summary = message.summary;
        }
        if (message.expedited !== false) {
            obj.expedited = message.expedited;
        }
        return obj;
    },
    create (base) {
        return exports.MsgSubmitProposal.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e, _f, _g;
        const message = createBaseMsgSubmitProposal();
        message.messages = ((_a = object.messages) === null || _a === void 0 ? void 0 : _a.map((e)=>any_1.Any.fromPartial(e))) || [];
        message.initial_deposit = ((_b = object.initial_deposit) === null || _b === void 0 ? void 0 : _b.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.proposer = (_c = object.proposer) !== null && _c !== void 0 ? _c : "";
        message.metadata = (_d = object.metadata) !== null && _d !== void 0 ? _d : "";
        message.title = (_e = object.title) !== null && _e !== void 0 ? _e : "";
        message.summary = (_f = object.summary) !== null && _f !== void 0 ? _f : "";
        message.expedited = (_g = object.expedited) !== null && _g !== void 0 ? _g : false;
        return message;
    }
};
function createBaseMsgSubmitProposalResponse() {
    return {
        proposal_id: "0"
    };
}
exports.MsgSubmitProposalResponse = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.proposal_id !== "0") {
            writer.uint32(8).uint64(message.proposal_id);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgSubmitProposalResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.proposal_id = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            proposal_id: isSet(object.proposal_id) ? globalThis.String(object.proposal_id) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.proposal_id !== "0") {
            obj.proposal_id = message.proposal_id;
        }
        return obj;
    },
    create (base) {
        return exports.MsgSubmitProposalResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgSubmitProposalResponse();
        message.proposal_id = (_a = object.proposal_id) !== null && _a !== void 0 ? _a : "0";
        return message;
    }
};
function createBaseMsgExecLegacyContent() {
    return {
        content: undefined,
        authority: ""
    };
}
exports.MsgExecLegacyContent = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.content !== undefined) {
            any_1.Any.encode(message.content, writer.uint32(10).fork()).ldelim();
        }
        if (message.authority !== "") {
            writer.uint32(18).string(message.authority);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgExecLegacyContent();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.content = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            content: isSet(object.content) ? any_1.Any.fromJSON(object.content) : undefined,
            authority: isSet(object.authority) ? globalThis.String(object.authority) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.content !== undefined) {
            obj.content = any_1.Any.toJSON(message.content);
        }
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        return obj;
    },
    create (base) {
        return exports.MsgExecLegacyContent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgExecLegacyContent();
        message.content = object.content !== undefined && object.content !== null ? any_1.Any.fromPartial(object.content) : undefined;
        message.authority = (_a = object.authority) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseMsgExecLegacyContentResponse() {
    return {};
}
exports.MsgExecLegacyContentResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgExecLegacyContentResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgExecLegacyContentResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgExecLegacyContentResponse();
        return message;
    }
};
function createBaseMsgVote() {
    return {
        proposal_id: "0",
        voter: "",
        option: 0,
        metadata: ""
    };
}
exports.MsgVote = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.proposal_id !== "0") {
            writer.uint32(8).uint64(message.proposal_id);
        }
        if (message.voter !== "") {
            writer.uint32(18).string(message.voter);
        }
        if (message.option !== 0) {
            writer.uint32(24).int32(message.option);
        }
        if (message.metadata !== "") {
            writer.uint32(34).string(message.metadata);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgVote();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.proposal_id = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.voter = reader.string();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.option = reader.int32();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.metadata = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            proposal_id: isSet(object.proposal_id) ? globalThis.String(object.proposal_id) : "0",
            voter: isSet(object.voter) ? globalThis.String(object.voter) : "",
            option: isSet(object.option) ? (0, gov_1.voteOptionFromJSON)(object.option) : 0,
            metadata: isSet(object.metadata) ? globalThis.String(object.metadata) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.proposal_id !== "0") {
            obj.proposal_id = message.proposal_id;
        }
        if (message.voter !== "") {
            obj.voter = message.voter;
        }
        if (message.option !== 0) {
            obj.option = (0, gov_1.voteOptionToJSON)(message.option);
        }
        if (message.metadata !== "") {
            obj.metadata = message.metadata;
        }
        return obj;
    },
    create (base) {
        return exports.MsgVote.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseMsgVote();
        message.proposal_id = (_a = object.proposal_id) !== null && _a !== void 0 ? _a : "0";
        message.voter = (_b = object.voter) !== null && _b !== void 0 ? _b : "";
        message.option = (_c = object.option) !== null && _c !== void 0 ? _c : 0;
        message.metadata = (_d = object.metadata) !== null && _d !== void 0 ? _d : "";
        return message;
    }
};
function createBaseMsgVoteResponse() {
    return {};
}
exports.MsgVoteResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgVoteResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgVoteResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgVoteResponse();
        return message;
    }
};
function createBaseMsgVoteWeighted() {
    return {
        proposal_id: "0",
        voter: "",
        options: [],
        metadata: ""
    };
}
exports.MsgVoteWeighted = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.proposal_id !== "0") {
            writer.uint32(8).uint64(message.proposal_id);
        }
        if (message.voter !== "") {
            writer.uint32(18).string(message.voter);
        }
        for (const v of message.options){
            gov_1.WeightedVoteOption.encode(v, writer.uint32(26).fork()).ldelim();
        }
        if (message.metadata !== "") {
            writer.uint32(34).string(message.metadata);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgVoteWeighted();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.proposal_id = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.voter = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.options.push(gov_1.WeightedVoteOption.decode(reader, reader.uint32()));
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.metadata = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            proposal_id: isSet(object.proposal_id) ? globalThis.String(object.proposal_id) : "0",
            voter: isSet(object.voter) ? globalThis.String(object.voter) : "",
            options: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.options) ? object.options.map((e)=>gov_1.WeightedVoteOption.fromJSON(e)) : [],
            metadata: isSet(object.metadata) ? globalThis.String(object.metadata) : ""
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.proposal_id !== "0") {
            obj.proposal_id = message.proposal_id;
        }
        if (message.voter !== "") {
            obj.voter = message.voter;
        }
        if ((_a = message.options) === null || _a === void 0 ? void 0 : _a.length) {
            obj.options = message.options.map((e)=>gov_1.WeightedVoteOption.toJSON(e));
        }
        if (message.metadata !== "") {
            obj.metadata = message.metadata;
        }
        return obj;
    },
    create (base) {
        return exports.MsgVoteWeighted.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseMsgVoteWeighted();
        message.proposal_id = (_a = object.proposal_id) !== null && _a !== void 0 ? _a : "0";
        message.voter = (_b = object.voter) !== null && _b !== void 0 ? _b : "";
        message.options = ((_c = object.options) === null || _c === void 0 ? void 0 : _c.map((e)=>gov_1.WeightedVoteOption.fromPartial(e))) || [];
        message.metadata = (_d = object.metadata) !== null && _d !== void 0 ? _d : "";
        return message;
    }
};
function createBaseMsgVoteWeightedResponse() {
    return {};
}
exports.MsgVoteWeightedResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgVoteWeightedResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgVoteWeightedResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgVoteWeightedResponse();
        return message;
    }
};
function createBaseMsgDeposit() {
    return {
        proposal_id: "0",
        depositor: "",
        amount: []
    };
}
exports.MsgDeposit = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.proposal_id !== "0") {
            writer.uint32(8).uint64(message.proposal_id);
        }
        if (message.depositor !== "") {
            writer.uint32(18).string(message.depositor);
        }
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgDeposit();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.proposal_id = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.depositor = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            proposal_id: isSet(object.proposal_id) ? globalThis.String(object.proposal_id) : "0",
            depositor: isSet(object.depositor) ? globalThis.String(object.depositor) : "",
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.proposal_id !== "0") {
            obj.proposal_id = message.proposal_id;
        }
        if (message.depositor !== "") {
            obj.depositor = message.depositor;
        }
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.MsgDeposit.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgDeposit();
        message.proposal_id = (_a = object.proposal_id) !== null && _a !== void 0 ? _a : "0";
        message.depositor = (_b = object.depositor) !== null && _b !== void 0 ? _b : "";
        message.amount = ((_c = object.amount) === null || _c === void 0 ? void 0 : _c.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseMsgDepositResponse() {
    return {};
}
exports.MsgDepositResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgDepositResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgDepositResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgDepositResponse();
        return message;
    }
};
function createBaseMsgUpdateParams() {
    return {
        authority: "",
        params: undefined
    };
}
exports.MsgUpdateParams = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        if (message.params !== undefined) {
            gov_1.Params.encode(message.params, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.params = gov_1.Params.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            authority: isSet(object.authority) ? globalThis.String(object.authority) : "",
            params: isSet(object.params) ? gov_1.Params.fromJSON(object.params) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        if (message.params !== undefined) {
            obj.params = gov_1.Params.toJSON(message.params);
        }
        return obj;
    },
    create (base) {
        return exports.MsgUpdateParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgUpdateParams();
        message.authority = (_a = object.authority) !== null && _a !== void 0 ? _a : "";
        message.params = object.params !== undefined && object.params !== null ? gov_1.Params.fromPartial(object.params) : undefined;
        return message;
    }
};
function createBaseMsgUpdateParamsResponse() {
    return {};
}
exports.MsgUpdateParamsResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParamsResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgUpdateParamsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgUpdateParamsResponse();
        return message;
    }
};
function createBaseMsgCancelProposal() {
    return {
        proposal_id: "0",
        proposer: ""
    };
}
exports.MsgCancelProposal = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.proposal_id !== "0") {
            writer.uint32(8).uint64(message.proposal_id);
        }
        if (message.proposer !== "") {
            writer.uint32(18).string(message.proposer);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCancelProposal();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.proposal_id = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.proposer = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            proposal_id: isSet(object.proposal_id) ? globalThis.String(object.proposal_id) : "0",
            proposer: isSet(object.proposer) ? globalThis.String(object.proposer) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.proposal_id !== "0") {
            obj.proposal_id = message.proposal_id;
        }
        if (message.proposer !== "") {
            obj.proposer = message.proposer;
        }
        return obj;
    },
    create (base) {
        return exports.MsgCancelProposal.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgCancelProposal();
        message.proposal_id = (_a = object.proposal_id) !== null && _a !== void 0 ? _a : "0";
        message.proposer = (_b = object.proposer) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseMsgCancelProposalResponse() {
    return {
        proposal_id: "0",
        canceled_time: undefined,
        canceled_height: "0"
    };
}
exports.MsgCancelProposalResponse = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.proposal_id !== "0") {
            writer.uint32(8).uint64(message.proposal_id);
        }
        if (message.canceled_time !== undefined) {
            timestamp_1.Timestamp.encode(message.canceled_time, writer.uint32(18).fork()).ldelim();
        }
        if (message.canceled_height !== "0") {
            writer.uint32(24).uint64(message.canceled_height);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCancelProposalResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.proposal_id = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.canceled_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.canceled_height = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            proposal_id: isSet(object.proposal_id) ? globalThis.String(object.proposal_id) : "0",
            canceled_time: isSet(object.canceled_time) ? fromJsonTimestamp(object.canceled_time) : undefined,
            canceled_height: isSet(object.canceled_height) ? globalThis.String(object.canceled_height) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.proposal_id !== "0") {
            obj.proposal_id = message.proposal_id;
        }
        if (message.canceled_time !== undefined) {
            obj.canceled_time = fromTimestamp(message.canceled_time).toISOString();
        }
        if (message.canceled_height !== "0") {
            obj.canceled_height = message.canceled_height;
        }
        return obj;
    },
    create (base) {
        return exports.MsgCancelProposalResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgCancelProposalResponse();
        message.proposal_id = (_a = object.proposal_id) !== null && _a !== void 0 ? _a : "0";
        message.canceled_time = object.canceled_time !== undefined && object.canceled_time !== null ? timestamp_1.Timestamp.fromPartial(object.canceled_time) : undefined;
        message.canceled_height = (_b = object.canceled_height) !== null && _b !== void 0 ? _b : "0";
        return message;
    }
};
exports.MsgServiceName = "cosmos.gov.v1.Msg";
class MsgClientImpl {
    constructor(rpc, opts){
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.MsgServiceName;
        this.rpc = rpc;
        this.SubmitProposal = this.SubmitProposal.bind(this);
        this.ExecLegacyContent = this.ExecLegacyContent.bind(this);
        this.Vote = this.Vote.bind(this);
        this.VoteWeighted = this.VoteWeighted.bind(this);
        this.Deposit = this.Deposit.bind(this);
        this.UpdateParams = this.UpdateParams.bind(this);
        this.CancelProposal = this.CancelProposal.bind(this);
    }
    SubmitProposal(request) {
        const data = exports.MsgSubmitProposal.encode(request).finish();
        const promise = this.rpc.request(this.service, "SubmitProposal", data);
        return promise.then((data)=>exports.MsgSubmitProposalResponse.decode(_m0.Reader.create(data)));
    }
    ExecLegacyContent(request) {
        const data = exports.MsgExecLegacyContent.encode(request).finish();
        const promise = this.rpc.request(this.service, "ExecLegacyContent", data);
        return promise.then((data)=>exports.MsgExecLegacyContentResponse.decode(_m0.Reader.create(data)));
    }
    Vote(request) {
        const data = exports.MsgVote.encode(request).finish();
        const promise = this.rpc.request(this.service, "Vote", data);
        return promise.then((data)=>exports.MsgVoteResponse.decode(_m0.Reader.create(data)));
    }
    VoteWeighted(request) {
        const data = exports.MsgVoteWeighted.encode(request).finish();
        const promise = this.rpc.request(this.service, "VoteWeighted", data);
        return promise.then((data)=>exports.MsgVoteWeightedResponse.decode(_m0.Reader.create(data)));
    }
    Deposit(request) {
        const data = exports.MsgDeposit.encode(request).finish();
        const promise = this.rpc.request(this.service, "Deposit", data);
        return promise.then((data)=>exports.MsgDepositResponse.decode(_m0.Reader.create(data)));
    }
    UpdateParams(request) {
        const data = exports.MsgUpdateParams.encode(request).finish();
        const promise = this.rpc.request(this.service, "UpdateParams", data);
        return promise.then((data)=>exports.MsgUpdateParamsResponse.decode(_m0.Reader.create(data)));
    }
    CancelProposal(request) {
        const data = exports.MsgCancelProposal.encode(request).finish();
        const promise = this.rpc.request(this.service, "CancelProposal", data);
        return promise.then((data)=>exports.MsgCancelProposalResponse.decode(_m0.Reader.create(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
function toTimestamp(date) {
    const seconds = Math.trunc(date.getTime() / 1000).toString();
    const nanos = date.getTime() % 1000 * 1000000;
    return {
        seconds,
        nanos
    };
}
function fromTimestamp(t) {
    let millis = (globalThis.Number(t.seconds) || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return toTimestamp(o);
    } else if (typeof o === "string") {
        return toTimestamp(new globalThis.Date(o));
    } else {
        return timestamp_1.Timestamp.fromJSON(o);
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=tx.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/slashing/v1beta1/slashing.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/slashing/v1beta1/slashing.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Params = exports.ValidatorSigningInfo = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const duration_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/duration.js [app-ssr] (ecmascript)");
const timestamp_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/timestamp.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.slashing.v1beta1";
function createBaseValidatorSigningInfo() {
    return {
        address: "",
        start_height: "0",
        index_offset: "0",
        jailed_until: undefined,
        tombstoned: false,
        missed_blocks_counter: "0"
    };
}
exports.ValidatorSigningInfo = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
            writer.uint32(10).string(message.address);
        }
        if (message.start_height !== "0") {
            writer.uint32(16).int64(message.start_height);
        }
        if (message.index_offset !== "0") {
            writer.uint32(24).int64(message.index_offset);
        }
        if (message.jailed_until !== undefined) {
            timestamp_1.Timestamp.encode(message.jailed_until, writer.uint32(34).fork()).ldelim();
        }
        if (message.tombstoned !== false) {
            writer.uint32(40).bool(message.tombstoned);
        }
        if (message.missed_blocks_counter !== "0") {
            writer.uint32(48).int64(message.missed_blocks_counter);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseValidatorSigningInfo();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.address = reader.string();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.start_height = longToString(reader.int64());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.index_offset = longToString(reader.int64());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.jailed_until = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.tombstoned = reader.bool();
                    continue;
                case 6:
                    if (tag !== 48) {
                        break;
                    }
                    message.missed_blocks_counter = longToString(reader.int64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            address: isSet(object.address) ? globalThis.String(object.address) : "",
            start_height: isSet(object.start_height) ? globalThis.String(object.start_height) : "0",
            index_offset: isSet(object.index_offset) ? globalThis.String(object.index_offset) : "0",
            jailed_until: isSet(object.jailed_until) ? fromJsonTimestamp(object.jailed_until) : undefined,
            tombstoned: isSet(object.tombstoned) ? globalThis.Boolean(object.tombstoned) : false,
            missed_blocks_counter: isSet(object.missed_blocks_counter) ? globalThis.String(object.missed_blocks_counter) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.address !== "") {
            obj.address = message.address;
        }
        if (message.start_height !== "0") {
            obj.start_height = message.start_height;
        }
        if (message.index_offset !== "0") {
            obj.index_offset = message.index_offset;
        }
        if (message.jailed_until !== undefined) {
            obj.jailed_until = fromTimestamp(message.jailed_until).toISOString();
        }
        if (message.tombstoned !== false) {
            obj.tombstoned = message.tombstoned;
        }
        if (message.missed_blocks_counter !== "0") {
            obj.missed_blocks_counter = message.missed_blocks_counter;
        }
        return obj;
    },
    create (base) {
        return exports.ValidatorSigningInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseValidatorSigningInfo();
        message.address = (_a = object.address) !== null && _a !== void 0 ? _a : "";
        message.start_height = (_b = object.start_height) !== null && _b !== void 0 ? _b : "0";
        message.index_offset = (_c = object.index_offset) !== null && _c !== void 0 ? _c : "0";
        message.jailed_until = object.jailed_until !== undefined && object.jailed_until !== null ? timestamp_1.Timestamp.fromPartial(object.jailed_until) : undefined;
        message.tombstoned = (_d = object.tombstoned) !== null && _d !== void 0 ? _d : false;
        message.missed_blocks_counter = (_e = object.missed_blocks_counter) !== null && _e !== void 0 ? _e : "0";
        return message;
    }
};
function createBaseParams() {
    return {
        signed_blocks_window: "0",
        min_signed_per_window: new Uint8Array(0),
        downtime_jail_duration: undefined,
        slash_fraction_double_sign: new Uint8Array(0),
        slash_fraction_downtime: new Uint8Array(0)
    };
}
exports.Params = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.signed_blocks_window !== "0") {
            writer.uint32(8).int64(message.signed_blocks_window);
        }
        if (message.min_signed_per_window.length !== 0) {
            writer.uint32(18).bytes(message.min_signed_per_window);
        }
        if (message.downtime_jail_duration !== undefined) {
            duration_1.Duration.encode(message.downtime_jail_duration, writer.uint32(26).fork()).ldelim();
        }
        if (message.slash_fraction_double_sign.length !== 0) {
            writer.uint32(34).bytes(message.slash_fraction_double_sign);
        }
        if (message.slash_fraction_downtime.length !== 0) {
            writer.uint32(42).bytes(message.slash_fraction_downtime);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.signed_blocks_window = longToString(reader.int64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.min_signed_per_window = reader.bytes();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.downtime_jail_duration = duration_1.Duration.decode(reader, reader.uint32());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.slash_fraction_double_sign = reader.bytes();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.slash_fraction_downtime = reader.bytes();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            signed_blocks_window: isSet(object.signed_blocks_window) ? globalThis.String(object.signed_blocks_window) : "0",
            min_signed_per_window: isSet(object.min_signed_per_window) ? bytesFromBase64(object.min_signed_per_window) : new Uint8Array(0),
            downtime_jail_duration: isSet(object.downtime_jail_duration) ? duration_1.Duration.fromJSON(object.downtime_jail_duration) : undefined,
            slash_fraction_double_sign: isSet(object.slash_fraction_double_sign) ? bytesFromBase64(object.slash_fraction_double_sign) : new Uint8Array(0),
            slash_fraction_downtime: isSet(object.slash_fraction_downtime) ? bytesFromBase64(object.slash_fraction_downtime) : new Uint8Array(0)
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.signed_blocks_window !== "0") {
            obj.signed_blocks_window = message.signed_blocks_window;
        }
        if (message.min_signed_per_window.length !== 0) {
            obj.min_signed_per_window = base64FromBytes(message.min_signed_per_window);
        }
        if (message.downtime_jail_duration !== undefined) {
            obj.downtime_jail_duration = duration_1.Duration.toJSON(message.downtime_jail_duration);
        }
        if (message.slash_fraction_double_sign.length !== 0) {
            obj.slash_fraction_double_sign = base64FromBytes(message.slash_fraction_double_sign);
        }
        if (message.slash_fraction_downtime.length !== 0) {
            obj.slash_fraction_downtime = base64FromBytes(message.slash_fraction_downtime);
        }
        return obj;
    },
    create (base) {
        return exports.Params.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseParams();
        message.signed_blocks_window = (_a = object.signed_blocks_window) !== null && _a !== void 0 ? _a : "0";
        message.min_signed_per_window = (_b = object.min_signed_per_window) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.downtime_jail_duration = object.downtime_jail_duration !== undefined && object.downtime_jail_duration !== null ? duration_1.Duration.fromPartial(object.downtime_jail_duration) : undefined;
        message.slash_fraction_double_sign = (_c = object.slash_fraction_double_sign) !== null && _c !== void 0 ? _c : new Uint8Array(0);
        message.slash_fraction_downtime = (_d = object.slash_fraction_downtime) !== null && _d !== void 0 ? _d : new Uint8Array(0);
        return message;
    }
};
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    } else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for(let i = 0; i < bin.length; ++i){
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    } else {
        const bin = [];
        arr.forEach((byte)=>{
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function toTimestamp(date) {
    const seconds = Math.trunc(date.getTime() / 1000).toString();
    const nanos = date.getTime() % 1000 * 1000000;
    return {
        seconds,
        nanos
    };
}
function fromTimestamp(t) {
    let millis = (globalThis.Number(t.seconds) || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return toTimestamp(o);
    } else if (typeof o === "string") {
        return toTimestamp(new globalThis.Date(o));
    } else {
        return timestamp_1.Timestamp.fromJSON(o);
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=slashing.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/slashing/v1beta1/tx.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/slashing/v1beta1/tx.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MsgClientImpl = exports.MsgServiceName = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgUnjailResponse = exports.MsgUnjail = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const slashing_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/slashing/v1beta1/slashing.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.slashing.v1beta1";
function createBaseMsgUnjail() {
    return {
        validator_addr: ""
    };
}
exports.MsgUnjail = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.validator_addr !== "") {
            writer.uint32(10).string(message.validator_addr);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUnjail();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.validator_addr = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            validator_addr: isSet(object.validator_addr) ? globalThis.String(object.validator_addr) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.validator_addr !== "") {
            obj.validator_addr = message.validator_addr;
        }
        return obj;
    },
    create (base) {
        return exports.MsgUnjail.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgUnjail();
        message.validator_addr = (_a = object.validator_addr) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseMsgUnjailResponse() {
    return {};
}
exports.MsgUnjailResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUnjailResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgUnjailResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgUnjailResponse();
        return message;
    }
};
function createBaseMsgUpdateParams() {
    return {
        authority: "",
        params: undefined
    };
}
exports.MsgUpdateParams = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        if (message.params !== undefined) {
            slashing_1.Params.encode(message.params, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.params = slashing_1.Params.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            authority: isSet(object.authority) ? globalThis.String(object.authority) : "",
            params: isSet(object.params) ? slashing_1.Params.fromJSON(object.params) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        if (message.params !== undefined) {
            obj.params = slashing_1.Params.toJSON(message.params);
        }
        return obj;
    },
    create (base) {
        return exports.MsgUpdateParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgUpdateParams();
        message.authority = (_a = object.authority) !== null && _a !== void 0 ? _a : "";
        message.params = object.params !== undefined && object.params !== null ? slashing_1.Params.fromPartial(object.params) : undefined;
        return message;
    }
};
function createBaseMsgUpdateParamsResponse() {
    return {};
}
exports.MsgUpdateParamsResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParamsResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgUpdateParamsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgUpdateParamsResponse();
        return message;
    }
};
exports.MsgServiceName = "cosmos.slashing.v1beta1.Msg";
class MsgClientImpl {
    constructor(rpc, opts){
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.MsgServiceName;
        this.rpc = rpc;
        this.Unjail = this.Unjail.bind(this);
        this.UpdateParams = this.UpdateParams.bind(this);
    }
    Unjail(request) {
        const data = exports.MsgUnjail.encode(request).finish();
        const promise = this.rpc.request(this.service, "Unjail", data);
        return promise.then((data)=>exports.MsgUnjailResponse.decode(_m0.Reader.create(data)));
    }
    UpdateParams(request) {
        const data = exports.MsgUpdateParams.encode(request).finish();
        const promise = this.rpc.request(this.service, "UpdateParams", data);
        return promise.then((data)=>exports.MsgUpdateParamsResponse.decode(_m0.Reader.create(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=tx.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/staking/v1beta1/staking.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/staking/v1beta1/staking.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ValidatorUpdates = exports.Pool = exports.RedelegationResponse = exports.RedelegationEntryResponse = exports.DelegationResponse = exports.Params = exports.Redelegation = exports.RedelegationEntry = exports.UnbondingDelegationEntry = exports.UnbondingDelegation = exports.Delegation = exports.DVVTriplets = exports.DVVTriplet = exports.DVPairs = exports.DVPair = exports.ValAddresses = exports.Validator = exports.Description = exports.Commission = exports.CommissionRates = exports.HistoricalInfo = exports.infractionToJSON = exports.infractionFromJSON = exports.Infraction = exports.bondStatusToJSON = exports.bondStatusFromJSON = exports.BondStatus = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
const duration_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/duration.js [app-ssr] (ecmascript)");
const timestamp_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/timestamp.js [app-ssr] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/tendermint/abci/types.js [app-ssr] (ecmascript)");
const types_2 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/tendermint/types/types.js [app-ssr] (ecmascript)");
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.staking.v1beta1";
/** BondStatus is the status of a validator. */ var BondStatus;
(function(BondStatus) {
    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */ BondStatus[BondStatus["BOND_STATUS_UNSPECIFIED"] = 0] = "BOND_STATUS_UNSPECIFIED";
    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */ BondStatus[BondStatus["BOND_STATUS_UNBONDED"] = 1] = "BOND_STATUS_UNBONDED";
    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */ BondStatus[BondStatus["BOND_STATUS_UNBONDING"] = 2] = "BOND_STATUS_UNBONDING";
    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */ BondStatus[BondStatus["BOND_STATUS_BONDED"] = 3] = "BOND_STATUS_BONDED";
    BondStatus[BondStatus["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(BondStatus = exports.BondStatus || (exports.BondStatus = {}));
function bondStatusFromJSON(object) {
    switch(object){
        case 0:
        case "BOND_STATUS_UNSPECIFIED":
            return BondStatus.BOND_STATUS_UNSPECIFIED;
        case 1:
        case "BOND_STATUS_UNBONDED":
            return BondStatus.BOND_STATUS_UNBONDED;
        case 2:
        case "BOND_STATUS_UNBONDING":
            return BondStatus.BOND_STATUS_UNBONDING;
        case 3:
        case "BOND_STATUS_BONDED":
            return BondStatus.BOND_STATUS_BONDED;
        case -1:
        case "UNRECOGNIZED":
        default:
            return BondStatus.UNRECOGNIZED;
    }
}
exports.bondStatusFromJSON = bondStatusFromJSON;
function bondStatusToJSON(object) {
    switch(object){
        case BondStatus.BOND_STATUS_UNSPECIFIED:
            return "BOND_STATUS_UNSPECIFIED";
        case BondStatus.BOND_STATUS_UNBONDED:
            return "BOND_STATUS_UNBONDED";
        case BondStatus.BOND_STATUS_UNBONDING:
            return "BOND_STATUS_UNBONDING";
        case BondStatus.BOND_STATUS_BONDED:
            return "BOND_STATUS_BONDED";
        case BondStatus.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.bondStatusToJSON = bondStatusToJSON;
/** Infraction indicates the infraction a validator commited. */ var Infraction;
(function(Infraction) {
    /** INFRACTION_UNSPECIFIED - UNSPECIFIED defines an empty infraction. */ Infraction[Infraction["INFRACTION_UNSPECIFIED"] = 0] = "INFRACTION_UNSPECIFIED";
    /** INFRACTION_DOUBLE_SIGN - DOUBLE_SIGN defines a validator that double-signs a block. */ Infraction[Infraction["INFRACTION_DOUBLE_SIGN"] = 1] = "INFRACTION_DOUBLE_SIGN";
    /** INFRACTION_DOWNTIME - DOWNTIME defines a validator that missed signing too many blocks. */ Infraction[Infraction["INFRACTION_DOWNTIME"] = 2] = "INFRACTION_DOWNTIME";
    Infraction[Infraction["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(Infraction = exports.Infraction || (exports.Infraction = {}));
function infractionFromJSON(object) {
    switch(object){
        case 0:
        case "INFRACTION_UNSPECIFIED":
            return Infraction.INFRACTION_UNSPECIFIED;
        case 1:
        case "INFRACTION_DOUBLE_SIGN":
            return Infraction.INFRACTION_DOUBLE_SIGN;
        case 2:
        case "INFRACTION_DOWNTIME":
            return Infraction.INFRACTION_DOWNTIME;
        case -1:
        case "UNRECOGNIZED":
        default:
            return Infraction.UNRECOGNIZED;
    }
}
exports.infractionFromJSON = infractionFromJSON;
function infractionToJSON(object) {
    switch(object){
        case Infraction.INFRACTION_UNSPECIFIED:
            return "INFRACTION_UNSPECIFIED";
        case Infraction.INFRACTION_DOUBLE_SIGN:
            return "INFRACTION_DOUBLE_SIGN";
        case Infraction.INFRACTION_DOWNTIME:
            return "INFRACTION_DOWNTIME";
        case Infraction.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.infractionToJSON = infractionToJSON;
function createBaseHistoricalInfo() {
    return {
        header: undefined,
        valset: []
    };
}
exports.HistoricalInfo = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.header !== undefined) {
            types_2.Header.encode(message.header, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.valset){
            exports.Validator.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseHistoricalInfo();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.header = types_2.Header.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.valset.push(exports.Validator.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            header: isSet(object.header) ? types_2.Header.fromJSON(object.header) : undefined,
            valset: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.valset) ? object.valset.map((e)=>exports.Validator.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.header !== undefined) {
            obj.header = types_2.Header.toJSON(message.header);
        }
        if ((_a = message.valset) === null || _a === void 0 ? void 0 : _a.length) {
            obj.valset = message.valset.map((e)=>exports.Validator.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.HistoricalInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseHistoricalInfo();
        message.header = object.header !== undefined && object.header !== null ? types_2.Header.fromPartial(object.header) : undefined;
        message.valset = ((_a = object.valset) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.Validator.fromPartial(e))) || [];
        return message;
    }
};
function createBaseCommissionRates() {
    return {
        rate: "",
        max_rate: "",
        max_change_rate: ""
    };
}
exports.CommissionRates = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.rate !== "") {
            writer.uint32(10).string(message.rate);
        }
        if (message.max_rate !== "") {
            writer.uint32(18).string(message.max_rate);
        }
        if (message.max_change_rate !== "") {
            writer.uint32(26).string(message.max_change_rate);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCommissionRates();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.rate = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.max_rate = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.max_change_rate = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            rate: isSet(object.rate) ? globalThis.String(object.rate) : "",
            max_rate: isSet(object.max_rate) ? globalThis.String(object.max_rate) : "",
            max_change_rate: isSet(object.max_change_rate) ? globalThis.String(object.max_change_rate) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.rate !== "") {
            obj.rate = message.rate;
        }
        if (message.max_rate !== "") {
            obj.max_rate = message.max_rate;
        }
        if (message.max_change_rate !== "") {
            obj.max_change_rate = message.max_change_rate;
        }
        return obj;
    },
    create (base) {
        return exports.CommissionRates.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseCommissionRates();
        message.rate = (_a = object.rate) !== null && _a !== void 0 ? _a : "";
        message.max_rate = (_b = object.max_rate) !== null && _b !== void 0 ? _b : "";
        message.max_change_rate = (_c = object.max_change_rate) !== null && _c !== void 0 ? _c : "";
        return message;
    }
};
function createBaseCommission() {
    return {
        commission_rates: undefined,
        update_time: undefined
    };
}
exports.Commission = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.commission_rates !== undefined) {
            exports.CommissionRates.encode(message.commission_rates, writer.uint32(10).fork()).ldelim();
        }
        if (message.update_time !== undefined) {
            timestamp_1.Timestamp.encode(message.update_time, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCommission();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.commission_rates = exports.CommissionRates.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.update_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            commission_rates: isSet(object.commission_rates) ? exports.CommissionRates.fromJSON(object.commission_rates) : undefined,
            update_time: isSet(object.update_time) ? fromJsonTimestamp(object.update_time) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.commission_rates !== undefined) {
            obj.commission_rates = exports.CommissionRates.toJSON(message.commission_rates);
        }
        if (message.update_time !== undefined) {
            obj.update_time = fromTimestamp(message.update_time).toISOString();
        }
        return obj;
    },
    create (base) {
        return exports.Commission.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseCommission();
        message.commission_rates = object.commission_rates !== undefined && object.commission_rates !== null ? exports.CommissionRates.fromPartial(object.commission_rates) : undefined;
        message.update_time = object.update_time !== undefined && object.update_time !== null ? timestamp_1.Timestamp.fromPartial(object.update_time) : undefined;
        return message;
    }
};
function createBaseDescription() {
    return {
        moniker: "",
        identity: "",
        website: "",
        security_contact: "",
        details: ""
    };
}
exports.Description = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.moniker !== "") {
            writer.uint32(10).string(message.moniker);
        }
        if (message.identity !== "") {
            writer.uint32(18).string(message.identity);
        }
        if (message.website !== "") {
            writer.uint32(26).string(message.website);
        }
        if (message.security_contact !== "") {
            writer.uint32(34).string(message.security_contact);
        }
        if (message.details !== "") {
            writer.uint32(42).string(message.details);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDescription();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.moniker = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.identity = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.website = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.security_contact = reader.string();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.details = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            moniker: isSet(object.moniker) ? globalThis.String(object.moniker) : "",
            identity: isSet(object.identity) ? globalThis.String(object.identity) : "",
            website: isSet(object.website) ? globalThis.String(object.website) : "",
            security_contact: isSet(object.security_contact) ? globalThis.String(object.security_contact) : "",
            details: isSet(object.details) ? globalThis.String(object.details) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.moniker !== "") {
            obj.moniker = message.moniker;
        }
        if (message.identity !== "") {
            obj.identity = message.identity;
        }
        if (message.website !== "") {
            obj.website = message.website;
        }
        if (message.security_contact !== "") {
            obj.security_contact = message.security_contact;
        }
        if (message.details !== "") {
            obj.details = message.details;
        }
        return obj;
    },
    create (base) {
        return exports.Description.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseDescription();
        message.moniker = (_a = object.moniker) !== null && _a !== void 0 ? _a : "";
        message.identity = (_b = object.identity) !== null && _b !== void 0 ? _b : "";
        message.website = (_c = object.website) !== null && _c !== void 0 ? _c : "";
        message.security_contact = (_d = object.security_contact) !== null && _d !== void 0 ? _d : "";
        message.details = (_e = object.details) !== null && _e !== void 0 ? _e : "";
        return message;
    }
};
function createBaseValidator() {
    return {
        operator_address: "",
        consensus_pubkey: undefined,
        jailed: false,
        status: 0,
        tokens: "",
        delegator_shares: "",
        description: undefined,
        unbonding_height: "0",
        unbonding_time: undefined,
        commission: undefined,
        min_self_delegation: "",
        unbonding_on_hold_ref_count: "0",
        unbonding_ids: []
    };
}
exports.Validator = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.operator_address !== "") {
            writer.uint32(10).string(message.operator_address);
        }
        if (message.consensus_pubkey !== undefined) {
            any_1.Any.encode(message.consensus_pubkey, writer.uint32(18).fork()).ldelim();
        }
        if (message.jailed !== false) {
            writer.uint32(24).bool(message.jailed);
        }
        if (message.status !== 0) {
            writer.uint32(32).int32(message.status);
        }
        if (message.tokens !== "") {
            writer.uint32(42).string(message.tokens);
        }
        if (message.delegator_shares !== "") {
            writer.uint32(50).string(message.delegator_shares);
        }
        if (message.description !== undefined) {
            exports.Description.encode(message.description, writer.uint32(58).fork()).ldelim();
        }
        if (message.unbonding_height !== "0") {
            writer.uint32(64).int64(message.unbonding_height);
        }
        if (message.unbonding_time !== undefined) {
            timestamp_1.Timestamp.encode(message.unbonding_time, writer.uint32(74).fork()).ldelim();
        }
        if (message.commission !== undefined) {
            exports.Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();
        }
        if (message.min_self_delegation !== "") {
            writer.uint32(90).string(message.min_self_delegation);
        }
        if (message.unbonding_on_hold_ref_count !== "0") {
            writer.uint32(96).int64(message.unbonding_on_hold_ref_count);
        }
        writer.uint32(106).fork();
        for (const v of message.unbonding_ids){
            writer.uint64(v);
        }
        writer.ldelim();
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseValidator();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.operator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.consensus_pubkey = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.jailed = reader.bool();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.status = reader.int32();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.tokens = reader.string();
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.delegator_shares = reader.string();
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.description = exports.Description.decode(reader, reader.uint32());
                    continue;
                case 8:
                    if (tag !== 64) {
                        break;
                    }
                    message.unbonding_height = longToString(reader.int64());
                    continue;
                case 9:
                    if (tag !== 74) {
                        break;
                    }
                    message.unbonding_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 10:
                    if (tag !== 82) {
                        break;
                    }
                    message.commission = exports.Commission.decode(reader, reader.uint32());
                    continue;
                case 11:
                    if (tag !== 90) {
                        break;
                    }
                    message.min_self_delegation = reader.string();
                    continue;
                case 12:
                    if (tag !== 96) {
                        break;
                    }
                    message.unbonding_on_hold_ref_count = longToString(reader.int64());
                    continue;
                case 13:
                    if (tag === 104) {
                        message.unbonding_ids.push(longToString(reader.uint64()));
                        continue;
                    }
                    if (tag === 106) {
                        const end2 = reader.uint32() + reader.pos;
                        while(reader.pos < end2){
                            message.unbonding_ids.push(longToString(reader.uint64()));
                        }
                        continue;
                    }
                    break;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            operator_address: isSet(object.operator_address) ? globalThis.String(object.operator_address) : "",
            consensus_pubkey: isSet(object.consensus_pubkey) ? any_1.Any.fromJSON(object.consensus_pubkey) : undefined,
            jailed: isSet(object.jailed) ? globalThis.Boolean(object.jailed) : false,
            status: isSet(object.status) ? bondStatusFromJSON(object.status) : 0,
            tokens: isSet(object.tokens) ? globalThis.String(object.tokens) : "",
            delegator_shares: isSet(object.delegator_shares) ? globalThis.String(object.delegator_shares) : "",
            description: isSet(object.description) ? exports.Description.fromJSON(object.description) : undefined,
            unbonding_height: isSet(object.unbonding_height) ? globalThis.String(object.unbonding_height) : "0",
            unbonding_time: isSet(object.unbonding_time) ? fromJsonTimestamp(object.unbonding_time) : undefined,
            commission: isSet(object.commission) ? exports.Commission.fromJSON(object.commission) : undefined,
            min_self_delegation: isSet(object.min_self_delegation) ? globalThis.String(object.min_self_delegation) : "",
            unbonding_on_hold_ref_count: isSet(object.unbonding_on_hold_ref_count) ? globalThis.String(object.unbonding_on_hold_ref_count) : "0",
            unbonding_ids: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.unbonding_ids) ? object.unbonding_ids.map((e)=>globalThis.String(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.operator_address !== "") {
            obj.operator_address = message.operator_address;
        }
        if (message.consensus_pubkey !== undefined) {
            obj.consensus_pubkey = any_1.Any.toJSON(message.consensus_pubkey);
        }
        if (message.jailed !== false) {
            obj.jailed = message.jailed;
        }
        if (message.status !== 0) {
            obj.status = bondStatusToJSON(message.status);
        }
        if (message.tokens !== "") {
            obj.tokens = message.tokens;
        }
        if (message.delegator_shares !== "") {
            obj.delegator_shares = message.delegator_shares;
        }
        if (message.description !== undefined) {
            obj.description = exports.Description.toJSON(message.description);
        }
        if (message.unbonding_height !== "0") {
            obj.unbonding_height = message.unbonding_height;
        }
        if (message.unbonding_time !== undefined) {
            obj.unbonding_time = fromTimestamp(message.unbonding_time).toISOString();
        }
        if (message.commission !== undefined) {
            obj.commission = exports.Commission.toJSON(message.commission);
        }
        if (message.min_self_delegation !== "") {
            obj.min_self_delegation = message.min_self_delegation;
        }
        if (message.unbonding_on_hold_ref_count !== "0") {
            obj.unbonding_on_hold_ref_count = message.unbonding_on_hold_ref_count;
        }
        if ((_a = message.unbonding_ids) === null || _a === void 0 ? void 0 : _a.length) {
            obj.unbonding_ids = message.unbonding_ids;
        }
        return obj;
    },
    create (base) {
        return exports.Validator.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        const message = createBaseValidator();
        message.operator_address = (_a = object.operator_address) !== null && _a !== void 0 ? _a : "";
        message.consensus_pubkey = object.consensus_pubkey !== undefined && object.consensus_pubkey !== null ? any_1.Any.fromPartial(object.consensus_pubkey) : undefined;
        message.jailed = (_b = object.jailed) !== null && _b !== void 0 ? _b : false;
        message.status = (_c = object.status) !== null && _c !== void 0 ? _c : 0;
        message.tokens = (_d = object.tokens) !== null && _d !== void 0 ? _d : "";
        message.delegator_shares = (_e = object.delegator_shares) !== null && _e !== void 0 ? _e : "";
        message.description = object.description !== undefined && object.description !== null ? exports.Description.fromPartial(object.description) : undefined;
        message.unbonding_height = (_f = object.unbonding_height) !== null && _f !== void 0 ? _f : "0";
        message.unbonding_time = object.unbonding_time !== undefined && object.unbonding_time !== null ? timestamp_1.Timestamp.fromPartial(object.unbonding_time) : undefined;
        message.commission = object.commission !== undefined && object.commission !== null ? exports.Commission.fromPartial(object.commission) : undefined;
        message.min_self_delegation = (_g = object.min_self_delegation) !== null && _g !== void 0 ? _g : "";
        message.unbonding_on_hold_ref_count = (_h = object.unbonding_on_hold_ref_count) !== null && _h !== void 0 ? _h : "0";
        message.unbonding_ids = ((_j = object.unbonding_ids) === null || _j === void 0 ? void 0 : _j.map((e)=>e)) || [];
        return message;
    }
};
function createBaseValAddresses() {
    return {
        addresses: []
    };
}
exports.ValAddresses = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.addresses){
            writer.uint32(10).string(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseValAddresses();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.addresses.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            addresses: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.addresses) ? object.addresses.map((e)=>globalThis.String(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.addresses) === null || _a === void 0 ? void 0 : _a.length) {
            obj.addresses = message.addresses;
        }
        return obj;
    },
    create (base) {
        return exports.ValAddresses.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseValAddresses();
        message.addresses = ((_a = object.addresses) === null || _a === void 0 ? void 0 : _a.map((e)=>e)) || [];
        return message;
    }
};
function createBaseDVPair() {
    return {
        delegator_address: "",
        validator_address: ""
    };
}
exports.DVPair = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegator_address !== "") {
            writer.uint32(10).string(message.delegator_address);
        }
        if (message.validator_address !== "") {
            writer.uint32(18).string(message.validator_address);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDVPair();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        return obj;
    },
    create (base) {
        return exports.DVPair.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseDVPair();
        message.delegator_address = (_a = object.delegator_address) !== null && _a !== void 0 ? _a : "";
        message.validator_address = (_b = object.validator_address) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseDVPairs() {
    return {
        pairs: []
    };
}
exports.DVPairs = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.pairs){
            exports.DVPair.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDVPairs();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.pairs.push(exports.DVPair.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            pairs: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.pairs) ? object.pairs.map((e)=>exports.DVPair.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.pairs) === null || _a === void 0 ? void 0 : _a.length) {
            obj.pairs = message.pairs.map((e)=>exports.DVPair.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.DVPairs.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseDVPairs();
        message.pairs = ((_a = object.pairs) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.DVPair.fromPartial(e))) || [];
        return message;
    }
};
function createBaseDVVTriplet() {
    return {
        delegator_address: "",
        validator_src_address: "",
        validator_dst_address: ""
    };
}
exports.DVVTriplet = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegator_address !== "") {
            writer.uint32(10).string(message.delegator_address);
        }
        if (message.validator_src_address !== "") {
            writer.uint32(18).string(message.validator_src_address);
        }
        if (message.validator_dst_address !== "") {
            writer.uint32(26).string(message.validator_dst_address);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDVVTriplet();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_src_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.validator_dst_address = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            validator_src_address: isSet(object.validator_src_address) ? globalThis.String(object.validator_src_address) : "",
            validator_dst_address: isSet(object.validator_dst_address) ? globalThis.String(object.validator_dst_address) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.validator_src_address !== "") {
            obj.validator_src_address = message.validator_src_address;
        }
        if (message.validator_dst_address !== "") {
            obj.validator_dst_address = message.validator_dst_address;
        }
        return obj;
    },
    create (base) {
        return exports.DVVTriplet.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseDVVTriplet();
        message.delegator_address = (_a = object.delegator_address) !== null && _a !== void 0 ? _a : "";
        message.validator_src_address = (_b = object.validator_src_address) !== null && _b !== void 0 ? _b : "";
        message.validator_dst_address = (_c = object.validator_dst_address) !== null && _c !== void 0 ? _c : "";
        return message;
    }
};
function createBaseDVVTriplets() {
    return {
        triplets: []
    };
}
exports.DVVTriplets = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.triplets){
            exports.DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDVVTriplets();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.triplets.push(exports.DVVTriplet.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            triplets: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.triplets) ? object.triplets.map((e)=>exports.DVVTriplet.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.triplets) === null || _a === void 0 ? void 0 : _a.length) {
            obj.triplets = message.triplets.map((e)=>exports.DVVTriplet.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.DVVTriplets.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseDVVTriplets();
        message.triplets = ((_a = object.triplets) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.DVVTriplet.fromPartial(e))) || [];
        return message;
    }
};
function createBaseDelegation() {
    return {
        delegator_address: "",
        validator_address: "",
        shares: ""
    };
}
exports.Delegation = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegator_address !== "") {
            writer.uint32(10).string(message.delegator_address);
        }
        if (message.validator_address !== "") {
            writer.uint32(18).string(message.validator_address);
        }
        if (message.shares !== "") {
            writer.uint32(26).string(message.shares);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDelegation();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.shares = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : "",
            shares: isSet(object.shares) ? globalThis.String(object.shares) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        if (message.shares !== "") {
            obj.shares = message.shares;
        }
        return obj;
    },
    create (base) {
        return exports.Delegation.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseDelegation();
        message.delegator_address = (_a = object.delegator_address) !== null && _a !== void 0 ? _a : "";
        message.validator_address = (_b = object.validator_address) !== null && _b !== void 0 ? _b : "";
        message.shares = (_c = object.shares) !== null && _c !== void 0 ? _c : "";
        return message;
    }
};
function createBaseUnbondingDelegation() {
    return {
        delegator_address: "",
        validator_address: "",
        entries: []
    };
}
exports.UnbondingDelegation = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegator_address !== "") {
            writer.uint32(10).string(message.delegator_address);
        }
        if (message.validator_address !== "") {
            writer.uint32(18).string(message.validator_address);
        }
        for (const v of message.entries){
            exports.UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseUnbondingDelegation();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.entries.push(exports.UnbondingDelegationEntry.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : "",
            entries: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.entries) ? object.entries.map((e)=>exports.UnbondingDelegationEntry.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        if ((_a = message.entries) === null || _a === void 0 ? void 0 : _a.length) {
            obj.entries = message.entries.map((e)=>exports.UnbondingDelegationEntry.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.UnbondingDelegation.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseUnbondingDelegation();
        message.delegator_address = (_a = object.delegator_address) !== null && _a !== void 0 ? _a : "";
        message.validator_address = (_b = object.validator_address) !== null && _b !== void 0 ? _b : "";
        message.entries = ((_c = object.entries) === null || _c === void 0 ? void 0 : _c.map((e)=>exports.UnbondingDelegationEntry.fromPartial(e))) || [];
        return message;
    }
};
function createBaseUnbondingDelegationEntry() {
    return {
        creation_height: "0",
        completion_time: undefined,
        initial_balance: "",
        balance: "",
        unbonding_id: "0",
        unbonding_on_hold_ref_count: "0"
    };
}
exports.UnbondingDelegationEntry = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.creation_height !== "0") {
            writer.uint32(8).int64(message.creation_height);
        }
        if (message.completion_time !== undefined) {
            timestamp_1.Timestamp.encode(message.completion_time, writer.uint32(18).fork()).ldelim();
        }
        if (message.initial_balance !== "") {
            writer.uint32(26).string(message.initial_balance);
        }
        if (message.balance !== "") {
            writer.uint32(34).string(message.balance);
        }
        if (message.unbonding_id !== "0") {
            writer.uint32(40).uint64(message.unbonding_id);
        }
        if (message.unbonding_on_hold_ref_count !== "0") {
            writer.uint32(48).int64(message.unbonding_on_hold_ref_count);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseUnbondingDelegationEntry();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.creation_height = longToString(reader.int64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.completion_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.initial_balance = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.balance = reader.string();
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.unbonding_id = longToString(reader.uint64());
                    continue;
                case 6:
                    if (tag !== 48) {
                        break;
                    }
                    message.unbonding_on_hold_ref_count = longToString(reader.int64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            creation_height: isSet(object.creation_height) ? globalThis.String(object.creation_height) : "0",
            completion_time: isSet(object.completion_time) ? fromJsonTimestamp(object.completion_time) : undefined,
            initial_balance: isSet(object.initial_balance) ? globalThis.String(object.initial_balance) : "",
            balance: isSet(object.balance) ? globalThis.String(object.balance) : "",
            unbonding_id: isSet(object.unbonding_id) ? globalThis.String(object.unbonding_id) : "0",
            unbonding_on_hold_ref_count: isSet(object.unbonding_on_hold_ref_count) ? globalThis.String(object.unbonding_on_hold_ref_count) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.creation_height !== "0") {
            obj.creation_height = message.creation_height;
        }
        if (message.completion_time !== undefined) {
            obj.completion_time = fromTimestamp(message.completion_time).toISOString();
        }
        if (message.initial_balance !== "") {
            obj.initial_balance = message.initial_balance;
        }
        if (message.balance !== "") {
            obj.balance = message.balance;
        }
        if (message.unbonding_id !== "0") {
            obj.unbonding_id = message.unbonding_id;
        }
        if (message.unbonding_on_hold_ref_count !== "0") {
            obj.unbonding_on_hold_ref_count = message.unbonding_on_hold_ref_count;
        }
        return obj;
    },
    create (base) {
        return exports.UnbondingDelegationEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseUnbondingDelegationEntry();
        message.creation_height = (_a = object.creation_height) !== null && _a !== void 0 ? _a : "0";
        message.completion_time = object.completion_time !== undefined && object.completion_time !== null ? timestamp_1.Timestamp.fromPartial(object.completion_time) : undefined;
        message.initial_balance = (_b = object.initial_balance) !== null && _b !== void 0 ? _b : "";
        message.balance = (_c = object.balance) !== null && _c !== void 0 ? _c : "";
        message.unbonding_id = (_d = object.unbonding_id) !== null && _d !== void 0 ? _d : "0";
        message.unbonding_on_hold_ref_count = (_e = object.unbonding_on_hold_ref_count) !== null && _e !== void 0 ? _e : "0";
        return message;
    }
};
function createBaseRedelegationEntry() {
    return {
        creation_height: "0",
        completion_time: undefined,
        initial_balance: "",
        shares_dst: "",
        unbonding_id: "0",
        unbonding_on_hold_ref_count: "0"
    };
}
exports.RedelegationEntry = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.creation_height !== "0") {
            writer.uint32(8).int64(message.creation_height);
        }
        if (message.completion_time !== undefined) {
            timestamp_1.Timestamp.encode(message.completion_time, writer.uint32(18).fork()).ldelim();
        }
        if (message.initial_balance !== "") {
            writer.uint32(26).string(message.initial_balance);
        }
        if (message.shares_dst !== "") {
            writer.uint32(34).string(message.shares_dst);
        }
        if (message.unbonding_id !== "0") {
            writer.uint32(40).uint64(message.unbonding_id);
        }
        if (message.unbonding_on_hold_ref_count !== "0") {
            writer.uint32(48).int64(message.unbonding_on_hold_ref_count);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseRedelegationEntry();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.creation_height = longToString(reader.int64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.completion_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.initial_balance = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.shares_dst = reader.string();
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.unbonding_id = longToString(reader.uint64());
                    continue;
                case 6:
                    if (tag !== 48) {
                        break;
                    }
                    message.unbonding_on_hold_ref_count = longToString(reader.int64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            creation_height: isSet(object.creation_height) ? globalThis.String(object.creation_height) : "0",
            completion_time: isSet(object.completion_time) ? fromJsonTimestamp(object.completion_time) : undefined,
            initial_balance: isSet(object.initial_balance) ? globalThis.String(object.initial_balance) : "",
            shares_dst: isSet(object.shares_dst) ? globalThis.String(object.shares_dst) : "",
            unbonding_id: isSet(object.unbonding_id) ? globalThis.String(object.unbonding_id) : "0",
            unbonding_on_hold_ref_count: isSet(object.unbonding_on_hold_ref_count) ? globalThis.String(object.unbonding_on_hold_ref_count) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.creation_height !== "0") {
            obj.creation_height = message.creation_height;
        }
        if (message.completion_time !== undefined) {
            obj.completion_time = fromTimestamp(message.completion_time).toISOString();
        }
        if (message.initial_balance !== "") {
            obj.initial_balance = message.initial_balance;
        }
        if (message.shares_dst !== "") {
            obj.shares_dst = message.shares_dst;
        }
        if (message.unbonding_id !== "0") {
            obj.unbonding_id = message.unbonding_id;
        }
        if (message.unbonding_on_hold_ref_count !== "0") {
            obj.unbonding_on_hold_ref_count = message.unbonding_on_hold_ref_count;
        }
        return obj;
    },
    create (base) {
        return exports.RedelegationEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseRedelegationEntry();
        message.creation_height = (_a = object.creation_height) !== null && _a !== void 0 ? _a : "0";
        message.completion_time = object.completion_time !== undefined && object.completion_time !== null ? timestamp_1.Timestamp.fromPartial(object.completion_time) : undefined;
        message.initial_balance = (_b = object.initial_balance) !== null && _b !== void 0 ? _b : "";
        message.shares_dst = (_c = object.shares_dst) !== null && _c !== void 0 ? _c : "";
        message.unbonding_id = (_d = object.unbonding_id) !== null && _d !== void 0 ? _d : "0";
        message.unbonding_on_hold_ref_count = (_e = object.unbonding_on_hold_ref_count) !== null && _e !== void 0 ? _e : "0";
        return message;
    }
};
function createBaseRedelegation() {
    return {
        delegator_address: "",
        validator_src_address: "",
        validator_dst_address: "",
        entries: []
    };
}
exports.Redelegation = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegator_address !== "") {
            writer.uint32(10).string(message.delegator_address);
        }
        if (message.validator_src_address !== "") {
            writer.uint32(18).string(message.validator_src_address);
        }
        if (message.validator_dst_address !== "") {
            writer.uint32(26).string(message.validator_dst_address);
        }
        for (const v of message.entries){
            exports.RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseRedelegation();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_src_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.validator_dst_address = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.entries.push(exports.RedelegationEntry.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            validator_src_address: isSet(object.validator_src_address) ? globalThis.String(object.validator_src_address) : "",
            validator_dst_address: isSet(object.validator_dst_address) ? globalThis.String(object.validator_dst_address) : "",
            entries: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.entries) ? object.entries.map((e)=>exports.RedelegationEntry.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.validator_src_address !== "") {
            obj.validator_src_address = message.validator_src_address;
        }
        if (message.validator_dst_address !== "") {
            obj.validator_dst_address = message.validator_dst_address;
        }
        if ((_a = message.entries) === null || _a === void 0 ? void 0 : _a.length) {
            obj.entries = message.entries.map((e)=>exports.RedelegationEntry.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.Redelegation.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseRedelegation();
        message.delegator_address = (_a = object.delegator_address) !== null && _a !== void 0 ? _a : "";
        message.validator_src_address = (_b = object.validator_src_address) !== null && _b !== void 0 ? _b : "";
        message.validator_dst_address = (_c = object.validator_dst_address) !== null && _c !== void 0 ? _c : "";
        message.entries = ((_d = object.entries) === null || _d === void 0 ? void 0 : _d.map((e)=>exports.RedelegationEntry.fromPartial(e))) || [];
        return message;
    }
};
function createBaseParams() {
    return {
        unbonding_time: undefined,
        max_validators: 0,
        max_entries: 0,
        historical_entries: 0,
        bond_denom: "",
        min_commission_rate: ""
    };
}
exports.Params = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.unbonding_time !== undefined) {
            duration_1.Duration.encode(message.unbonding_time, writer.uint32(10).fork()).ldelim();
        }
        if (message.max_validators !== 0) {
            writer.uint32(16).uint32(message.max_validators);
        }
        if (message.max_entries !== 0) {
            writer.uint32(24).uint32(message.max_entries);
        }
        if (message.historical_entries !== 0) {
            writer.uint32(32).uint32(message.historical_entries);
        }
        if (message.bond_denom !== "") {
            writer.uint32(42).string(message.bond_denom);
        }
        if (message.min_commission_rate !== "") {
            writer.uint32(50).string(message.min_commission_rate);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.unbonding_time = duration_1.Duration.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.max_validators = reader.uint32();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.max_entries = reader.uint32();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.historical_entries = reader.uint32();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.bond_denom = reader.string();
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.min_commission_rate = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            unbonding_time: isSet(object.unbonding_time) ? duration_1.Duration.fromJSON(object.unbonding_time) : undefined,
            max_validators: isSet(object.max_validators) ? globalThis.Number(object.max_validators) : 0,
            max_entries: isSet(object.max_entries) ? globalThis.Number(object.max_entries) : 0,
            historical_entries: isSet(object.historical_entries) ? globalThis.Number(object.historical_entries) : 0,
            bond_denom: isSet(object.bond_denom) ? globalThis.String(object.bond_denom) : "",
            min_commission_rate: isSet(object.min_commission_rate) ? globalThis.String(object.min_commission_rate) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.unbonding_time !== undefined) {
            obj.unbonding_time = duration_1.Duration.toJSON(message.unbonding_time);
        }
        if (message.max_validators !== 0) {
            obj.max_validators = Math.round(message.max_validators);
        }
        if (message.max_entries !== 0) {
            obj.max_entries = Math.round(message.max_entries);
        }
        if (message.historical_entries !== 0) {
            obj.historical_entries = Math.round(message.historical_entries);
        }
        if (message.bond_denom !== "") {
            obj.bond_denom = message.bond_denom;
        }
        if (message.min_commission_rate !== "") {
            obj.min_commission_rate = message.min_commission_rate;
        }
        return obj;
    },
    create (base) {
        return exports.Params.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseParams();
        message.unbonding_time = object.unbonding_time !== undefined && object.unbonding_time !== null ? duration_1.Duration.fromPartial(object.unbonding_time) : undefined;
        message.max_validators = (_a = object.max_validators) !== null && _a !== void 0 ? _a : 0;
        message.max_entries = (_b = object.max_entries) !== null && _b !== void 0 ? _b : 0;
        message.historical_entries = (_c = object.historical_entries) !== null && _c !== void 0 ? _c : 0;
        message.bond_denom = (_d = object.bond_denom) !== null && _d !== void 0 ? _d : "";
        message.min_commission_rate = (_e = object.min_commission_rate) !== null && _e !== void 0 ? _e : "";
        return message;
    }
};
function createBaseDelegationResponse() {
    return {
        delegation: undefined,
        balance: undefined
    };
}
exports.DelegationResponse = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegation !== undefined) {
            exports.Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();
        }
        if (message.balance !== undefined) {
            coin_1.Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDelegationResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegation = exports.Delegation.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.balance = coin_1.Coin.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegation: isSet(object.delegation) ? exports.Delegation.fromJSON(object.delegation) : undefined,
            balance: isSet(object.balance) ? coin_1.Coin.fromJSON(object.balance) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.delegation !== undefined) {
            obj.delegation = exports.Delegation.toJSON(message.delegation);
        }
        if (message.balance !== undefined) {
            obj.balance = coin_1.Coin.toJSON(message.balance);
        }
        return obj;
    },
    create (base) {
        return exports.DelegationResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseDelegationResponse();
        message.delegation = object.delegation !== undefined && object.delegation !== null ? exports.Delegation.fromPartial(object.delegation) : undefined;
        message.balance = object.balance !== undefined && object.balance !== null ? coin_1.Coin.fromPartial(object.balance) : undefined;
        return message;
    }
};
function createBaseRedelegationEntryResponse() {
    return {
        redelegation_entry: undefined,
        balance: ""
    };
}
exports.RedelegationEntryResponse = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.redelegation_entry !== undefined) {
            exports.RedelegationEntry.encode(message.redelegation_entry, writer.uint32(10).fork()).ldelim();
        }
        if (message.balance !== "") {
            writer.uint32(34).string(message.balance);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseRedelegationEntryResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.redelegation_entry = exports.RedelegationEntry.decode(reader, reader.uint32());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.balance = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            redelegation_entry: isSet(object.redelegation_entry) ? exports.RedelegationEntry.fromJSON(object.redelegation_entry) : undefined,
            balance: isSet(object.balance) ? globalThis.String(object.balance) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.redelegation_entry !== undefined) {
            obj.redelegation_entry = exports.RedelegationEntry.toJSON(message.redelegation_entry);
        }
        if (message.balance !== "") {
            obj.balance = message.balance;
        }
        return obj;
    },
    create (base) {
        return exports.RedelegationEntryResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseRedelegationEntryResponse();
        message.redelegation_entry = object.redelegation_entry !== undefined && object.redelegation_entry !== null ? exports.RedelegationEntry.fromPartial(object.redelegation_entry) : undefined;
        message.balance = (_a = object.balance) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseRedelegationResponse() {
    return {
        redelegation: undefined,
        entries: []
    };
}
exports.RedelegationResponse = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.redelegation !== undefined) {
            exports.Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.entries){
            exports.RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseRedelegationResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.redelegation = exports.Redelegation.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.entries.push(exports.RedelegationEntryResponse.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            redelegation: isSet(object.redelegation) ? exports.Redelegation.fromJSON(object.redelegation) : undefined,
            entries: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.entries) ? object.entries.map((e)=>exports.RedelegationEntryResponse.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.redelegation !== undefined) {
            obj.redelegation = exports.Redelegation.toJSON(message.redelegation);
        }
        if ((_a = message.entries) === null || _a === void 0 ? void 0 : _a.length) {
            obj.entries = message.entries.map((e)=>exports.RedelegationEntryResponse.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.RedelegationResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseRedelegationResponse();
        message.redelegation = object.redelegation !== undefined && object.redelegation !== null ? exports.Redelegation.fromPartial(object.redelegation) : undefined;
        message.entries = ((_a = object.entries) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.RedelegationEntryResponse.fromPartial(e))) || [];
        return message;
    }
};
function createBasePool() {
    return {
        not_bonded_tokens: "",
        bonded_tokens: ""
    };
}
exports.Pool = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.not_bonded_tokens !== "") {
            writer.uint32(10).string(message.not_bonded_tokens);
        }
        if (message.bonded_tokens !== "") {
            writer.uint32(18).string(message.bonded_tokens);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePool();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.not_bonded_tokens = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.bonded_tokens = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            not_bonded_tokens: isSet(object.not_bonded_tokens) ? globalThis.String(object.not_bonded_tokens) : "",
            bonded_tokens: isSet(object.bonded_tokens) ? globalThis.String(object.bonded_tokens) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.not_bonded_tokens !== "") {
            obj.not_bonded_tokens = message.not_bonded_tokens;
        }
        if (message.bonded_tokens !== "") {
            obj.bonded_tokens = message.bonded_tokens;
        }
        return obj;
    },
    create (base) {
        return exports.Pool.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBasePool();
        message.not_bonded_tokens = (_a = object.not_bonded_tokens) !== null && _a !== void 0 ? _a : "";
        message.bonded_tokens = (_b = object.bonded_tokens) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseValidatorUpdates() {
    return {
        updates: []
    };
}
exports.ValidatorUpdates = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.updates){
            types_1.ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseValidatorUpdates();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.updates.push(types_1.ValidatorUpdate.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            updates: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.updates) ? object.updates.map((e)=>types_1.ValidatorUpdate.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.updates) === null || _a === void 0 ? void 0 : _a.length) {
            obj.updates = message.updates.map((e)=>types_1.ValidatorUpdate.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.ValidatorUpdates.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseValidatorUpdates();
        message.updates = ((_a = object.updates) === null || _a === void 0 ? void 0 : _a.map((e)=>types_1.ValidatorUpdate.fromPartial(e))) || [];
        return message;
    }
};
function toTimestamp(date) {
    const seconds = Math.trunc(date.getTime() / 1000).toString();
    const nanos = date.getTime() % 1000 * 1000000;
    return {
        seconds,
        nanos
    };
}
function fromTimestamp(t) {
    let millis = (globalThis.Number(t.seconds) || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return toTimestamp(o);
    } else if (typeof o === "string") {
        return toTimestamp(new globalThis.Date(o));
    } else {
        return timestamp_1.Timestamp.fromJSON(o);
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=staking.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/staking/v1beta1/tx.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/staking/v1beta1/tx.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MsgClientImpl = exports.MsgServiceName = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgCancelUnbondingDelegationResponse = exports.MsgCancelUnbondingDelegation = exports.MsgUndelegateResponse = exports.MsgUndelegate = exports.MsgBeginRedelegateResponse = exports.MsgBeginRedelegate = exports.MsgDelegateResponse = exports.MsgDelegate = exports.MsgEditValidatorResponse = exports.MsgEditValidator = exports.MsgCreateValidatorResponse = exports.MsgCreateValidator = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
const timestamp_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/timestamp.js [app-ssr] (ecmascript)");
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
const staking_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/staking/v1beta1/staking.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.staking.v1beta1";
function createBaseMsgCreateValidator() {
    return {
        description: undefined,
        commission: undefined,
        min_self_delegation: "",
        delegator_address: "",
        validator_address: "",
        pubkey: undefined,
        value: undefined
    };
}
exports.MsgCreateValidator = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.description !== undefined) {
            staking_1.Description.encode(message.description, writer.uint32(10).fork()).ldelim();
        }
        if (message.commission !== undefined) {
            staking_1.CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();
        }
        if (message.min_self_delegation !== "") {
            writer.uint32(26).string(message.min_self_delegation);
        }
        if (message.delegator_address !== "") {
            writer.uint32(34).string(message.delegator_address);
        }
        if (message.validator_address !== "") {
            writer.uint32(42).string(message.validator_address);
        }
        if (message.pubkey !== undefined) {
            any_1.Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();
        }
        if (message.value !== undefined) {
            coin_1.Coin.encode(message.value, writer.uint32(58).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateValidator();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.description = staking_1.Description.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.commission = staking_1.CommissionRates.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.min_self_delegation = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.pubkey = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.value = coin_1.Coin.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            description: isSet(object.description) ? staking_1.Description.fromJSON(object.description) : undefined,
            commission: isSet(object.commission) ? staking_1.CommissionRates.fromJSON(object.commission) : undefined,
            min_self_delegation: isSet(object.min_self_delegation) ? globalThis.String(object.min_self_delegation) : "",
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : "",
            pubkey: isSet(object.pubkey) ? any_1.Any.fromJSON(object.pubkey) : undefined,
            value: isSet(object.value) ? coin_1.Coin.fromJSON(object.value) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.description !== undefined) {
            obj.description = staking_1.Description.toJSON(message.description);
        }
        if (message.commission !== undefined) {
            obj.commission = staking_1.CommissionRates.toJSON(message.commission);
        }
        if (message.min_self_delegation !== "") {
            obj.min_self_delegation = message.min_self_delegation;
        }
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        if (message.pubkey !== undefined) {
            obj.pubkey = any_1.Any.toJSON(message.pubkey);
        }
        if (message.value !== undefined) {
            obj.value = coin_1.Coin.toJSON(message.value);
        }
        return obj;
    },
    create (base) {
        return exports.MsgCreateValidator.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgCreateValidator();
        message.description = object.description !== undefined && object.description !== null ? staking_1.Description.fromPartial(object.description) : undefined;
        message.commission = object.commission !== undefined && object.commission !== null ? staking_1.CommissionRates.fromPartial(object.commission) : undefined;
        message.min_self_delegation = (_a = object.min_self_delegation) !== null && _a !== void 0 ? _a : "";
        message.delegator_address = (_b = object.delegator_address) !== null && _b !== void 0 ? _b : "";
        message.validator_address = (_c = object.validator_address) !== null && _c !== void 0 ? _c : "";
        message.pubkey = object.pubkey !== undefined && object.pubkey !== null ? any_1.Any.fromPartial(object.pubkey) : undefined;
        message.value = object.value !== undefined && object.value !== null ? coin_1.Coin.fromPartial(object.value) : undefined;
        return message;
    }
};
function createBaseMsgCreateValidatorResponse() {
    return {};
}
exports.MsgCreateValidatorResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateValidatorResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgCreateValidatorResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgCreateValidatorResponse();
        return message;
    }
};
function createBaseMsgEditValidator() {
    return {
        description: undefined,
        validator_address: "",
        commission_rate: "",
        min_self_delegation: ""
    };
}
exports.MsgEditValidator = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.description !== undefined) {
            staking_1.Description.encode(message.description, writer.uint32(10).fork()).ldelim();
        }
        if (message.validator_address !== "") {
            writer.uint32(18).string(message.validator_address);
        }
        if (message.commission_rate !== "") {
            writer.uint32(26).string(message.commission_rate);
        }
        if (message.min_self_delegation !== "") {
            writer.uint32(34).string(message.min_self_delegation);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgEditValidator();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.description = staking_1.Description.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.commission_rate = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.min_self_delegation = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            description: isSet(object.description) ? staking_1.Description.fromJSON(object.description) : undefined,
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : "",
            commission_rate: isSet(object.commission_rate) ? globalThis.String(object.commission_rate) : "",
            min_self_delegation: isSet(object.min_self_delegation) ? globalThis.String(object.min_self_delegation) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.description !== undefined) {
            obj.description = staking_1.Description.toJSON(message.description);
        }
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        if (message.commission_rate !== "") {
            obj.commission_rate = message.commission_rate;
        }
        if (message.min_self_delegation !== "") {
            obj.min_self_delegation = message.min_self_delegation;
        }
        return obj;
    },
    create (base) {
        return exports.MsgEditValidator.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgEditValidator();
        message.description = object.description !== undefined && object.description !== null ? staking_1.Description.fromPartial(object.description) : undefined;
        message.validator_address = (_a = object.validator_address) !== null && _a !== void 0 ? _a : "";
        message.commission_rate = (_b = object.commission_rate) !== null && _b !== void 0 ? _b : "";
        message.min_self_delegation = (_c = object.min_self_delegation) !== null && _c !== void 0 ? _c : "";
        return message;
    }
};
function createBaseMsgEditValidatorResponse() {
    return {};
}
exports.MsgEditValidatorResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgEditValidatorResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgEditValidatorResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgEditValidatorResponse();
        return message;
    }
};
function createBaseMsgDelegate() {
    return {
        delegator_address: "",
        validator_address: "",
        amount: undefined
    };
}
exports.MsgDelegate = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegator_address !== "") {
            writer.uint32(10).string(message.delegator_address);
        }
        if (message.validator_address !== "") {
            writer.uint32(18).string(message.validator_address);
        }
        if (message.amount !== undefined) {
            coin_1.Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgDelegate();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.amount = coin_1.Coin.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : "",
            amount: isSet(object.amount) ? coin_1.Coin.fromJSON(object.amount) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        if (message.amount !== undefined) {
            obj.amount = coin_1.Coin.toJSON(message.amount);
        }
        return obj;
    },
    create (base) {
        return exports.MsgDelegate.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgDelegate();
        message.delegator_address = (_a = object.delegator_address) !== null && _a !== void 0 ? _a : "";
        message.validator_address = (_b = object.validator_address) !== null && _b !== void 0 ? _b : "";
        message.amount = object.amount !== undefined && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : undefined;
        return message;
    }
};
function createBaseMsgDelegateResponse() {
    return {};
}
exports.MsgDelegateResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgDelegateResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgDelegateResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgDelegateResponse();
        return message;
    }
};
function createBaseMsgBeginRedelegate() {
    return {
        delegator_address: "",
        validator_src_address: "",
        validator_dst_address: "",
        amount: undefined
    };
}
exports.MsgBeginRedelegate = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegator_address !== "") {
            writer.uint32(10).string(message.delegator_address);
        }
        if (message.validator_src_address !== "") {
            writer.uint32(18).string(message.validator_src_address);
        }
        if (message.validator_dst_address !== "") {
            writer.uint32(26).string(message.validator_dst_address);
        }
        if (message.amount !== undefined) {
            coin_1.Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgBeginRedelegate();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_src_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.validator_dst_address = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.amount = coin_1.Coin.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            validator_src_address: isSet(object.validator_src_address) ? globalThis.String(object.validator_src_address) : "",
            validator_dst_address: isSet(object.validator_dst_address) ? globalThis.String(object.validator_dst_address) : "",
            amount: isSet(object.amount) ? coin_1.Coin.fromJSON(object.amount) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.validator_src_address !== "") {
            obj.validator_src_address = message.validator_src_address;
        }
        if (message.validator_dst_address !== "") {
            obj.validator_dst_address = message.validator_dst_address;
        }
        if (message.amount !== undefined) {
            obj.amount = coin_1.Coin.toJSON(message.amount);
        }
        return obj;
    },
    create (base) {
        return exports.MsgBeginRedelegate.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgBeginRedelegate();
        message.delegator_address = (_a = object.delegator_address) !== null && _a !== void 0 ? _a : "";
        message.validator_src_address = (_b = object.validator_src_address) !== null && _b !== void 0 ? _b : "";
        message.validator_dst_address = (_c = object.validator_dst_address) !== null && _c !== void 0 ? _c : "";
        message.amount = object.amount !== undefined && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : undefined;
        return message;
    }
};
function createBaseMsgBeginRedelegateResponse() {
    return {
        completion_time: undefined
    };
}
exports.MsgBeginRedelegateResponse = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.completion_time !== undefined) {
            timestamp_1.Timestamp.encode(message.completion_time, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgBeginRedelegateResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.completion_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            completion_time: isSet(object.completion_time) ? fromJsonTimestamp(object.completion_time) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.completion_time !== undefined) {
            obj.completion_time = fromTimestamp(message.completion_time).toISOString();
        }
        return obj;
    },
    create (base) {
        return exports.MsgBeginRedelegateResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseMsgBeginRedelegateResponse();
        message.completion_time = object.completion_time !== undefined && object.completion_time !== null ? timestamp_1.Timestamp.fromPartial(object.completion_time) : undefined;
        return message;
    }
};
function createBaseMsgUndelegate() {
    return {
        delegator_address: "",
        validator_address: "",
        amount: undefined
    };
}
exports.MsgUndelegate = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegator_address !== "") {
            writer.uint32(10).string(message.delegator_address);
        }
        if (message.validator_address !== "") {
            writer.uint32(18).string(message.validator_address);
        }
        if (message.amount !== undefined) {
            coin_1.Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUndelegate();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.amount = coin_1.Coin.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : "",
            amount: isSet(object.amount) ? coin_1.Coin.fromJSON(object.amount) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        if (message.amount !== undefined) {
            obj.amount = coin_1.Coin.toJSON(message.amount);
        }
        return obj;
    },
    create (base) {
        return exports.MsgUndelegate.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgUndelegate();
        message.delegator_address = (_a = object.delegator_address) !== null && _a !== void 0 ? _a : "";
        message.validator_address = (_b = object.validator_address) !== null && _b !== void 0 ? _b : "";
        message.amount = object.amount !== undefined && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : undefined;
        return message;
    }
};
function createBaseMsgUndelegateResponse() {
    return {
        completion_time: undefined,
        amount: undefined
    };
}
exports.MsgUndelegateResponse = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.completion_time !== undefined) {
            timestamp_1.Timestamp.encode(message.completion_time, writer.uint32(10).fork()).ldelim();
        }
        if (message.amount !== undefined) {
            coin_1.Coin.encode(message.amount, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUndelegateResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.completion_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.amount = coin_1.Coin.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            completion_time: isSet(object.completion_time) ? fromJsonTimestamp(object.completion_time) : undefined,
            amount: isSet(object.amount) ? coin_1.Coin.fromJSON(object.amount) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.completion_time !== undefined) {
            obj.completion_time = fromTimestamp(message.completion_time).toISOString();
        }
        if (message.amount !== undefined) {
            obj.amount = coin_1.Coin.toJSON(message.amount);
        }
        return obj;
    },
    create (base) {
        return exports.MsgUndelegateResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseMsgUndelegateResponse();
        message.completion_time = object.completion_time !== undefined && object.completion_time !== null ? timestamp_1.Timestamp.fromPartial(object.completion_time) : undefined;
        message.amount = object.amount !== undefined && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : undefined;
        return message;
    }
};
function createBaseMsgCancelUnbondingDelegation() {
    return {
        delegator_address: "",
        validator_address: "",
        amount: undefined,
        creation_height: "0"
    };
}
exports.MsgCancelUnbondingDelegation = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.delegator_address !== "") {
            writer.uint32(10).string(message.delegator_address);
        }
        if (message.validator_address !== "") {
            writer.uint32(18).string(message.validator_address);
        }
        if (message.amount !== undefined) {
            coin_1.Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();
        }
        if (message.creation_height !== "0") {
            writer.uint32(32).int64(message.creation_height);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCancelUnbondingDelegation();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.delegator_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validator_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.amount = coin_1.Coin.decode(reader, reader.uint32());
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.creation_height = longToString(reader.int64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            delegator_address: isSet(object.delegator_address) ? globalThis.String(object.delegator_address) : "",
            validator_address: isSet(object.validator_address) ? globalThis.String(object.validator_address) : "",
            amount: isSet(object.amount) ? coin_1.Coin.fromJSON(object.amount) : undefined,
            creation_height: isSet(object.creation_height) ? globalThis.String(object.creation_height) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.delegator_address !== "") {
            obj.delegator_address = message.delegator_address;
        }
        if (message.validator_address !== "") {
            obj.validator_address = message.validator_address;
        }
        if (message.amount !== undefined) {
            obj.amount = coin_1.Coin.toJSON(message.amount);
        }
        if (message.creation_height !== "0") {
            obj.creation_height = message.creation_height;
        }
        return obj;
    },
    create (base) {
        return exports.MsgCancelUnbondingDelegation.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgCancelUnbondingDelegation();
        message.delegator_address = (_a = object.delegator_address) !== null && _a !== void 0 ? _a : "";
        message.validator_address = (_b = object.validator_address) !== null && _b !== void 0 ? _b : "";
        message.amount = object.amount !== undefined && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : undefined;
        message.creation_height = (_c = object.creation_height) !== null && _c !== void 0 ? _c : "0";
        return message;
    }
};
function createBaseMsgCancelUnbondingDelegationResponse() {
    return {};
}
exports.MsgCancelUnbondingDelegationResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCancelUnbondingDelegationResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgCancelUnbondingDelegationResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgCancelUnbondingDelegationResponse();
        return message;
    }
};
function createBaseMsgUpdateParams() {
    return {
        authority: "",
        params: undefined
    };
}
exports.MsgUpdateParams = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        if (message.params !== undefined) {
            staking_1.Params.encode(message.params, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.params = staking_1.Params.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            authority: isSet(object.authority) ? globalThis.String(object.authority) : "",
            params: isSet(object.params) ? staking_1.Params.fromJSON(object.params) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        if (message.params !== undefined) {
            obj.params = staking_1.Params.toJSON(message.params);
        }
        return obj;
    },
    create (base) {
        return exports.MsgUpdateParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMsgUpdateParams();
        message.authority = (_a = object.authority) !== null && _a !== void 0 ? _a : "";
        message.params = object.params !== undefined && object.params !== null ? staking_1.Params.fromPartial(object.params) : undefined;
        return message;
    }
};
function createBaseMsgUpdateParamsResponse() {
    return {};
}
exports.MsgUpdateParamsResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParamsResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgUpdateParamsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgUpdateParamsResponse();
        return message;
    }
};
exports.MsgServiceName = "cosmos.staking.v1beta1.Msg";
class MsgClientImpl {
    constructor(rpc, opts){
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.MsgServiceName;
        this.rpc = rpc;
        this.CreateValidator = this.CreateValidator.bind(this);
        this.EditValidator = this.EditValidator.bind(this);
        this.Delegate = this.Delegate.bind(this);
        this.BeginRedelegate = this.BeginRedelegate.bind(this);
        this.Undelegate = this.Undelegate.bind(this);
        this.CancelUnbondingDelegation = this.CancelUnbondingDelegation.bind(this);
        this.UpdateParams = this.UpdateParams.bind(this);
    }
    CreateValidator(request) {
        const data = exports.MsgCreateValidator.encode(request).finish();
        const promise = this.rpc.request(this.service, "CreateValidator", data);
        return promise.then((data)=>exports.MsgCreateValidatorResponse.decode(_m0.Reader.create(data)));
    }
    EditValidator(request) {
        const data = exports.MsgEditValidator.encode(request).finish();
        const promise = this.rpc.request(this.service, "EditValidator", data);
        return promise.then((data)=>exports.MsgEditValidatorResponse.decode(_m0.Reader.create(data)));
    }
    Delegate(request) {
        const data = exports.MsgDelegate.encode(request).finish();
        const promise = this.rpc.request(this.service, "Delegate", data);
        return promise.then((data)=>exports.MsgDelegateResponse.decode(_m0.Reader.create(data)));
    }
    BeginRedelegate(request) {
        const data = exports.MsgBeginRedelegate.encode(request).finish();
        const promise = this.rpc.request(this.service, "BeginRedelegate", data);
        return promise.then((data)=>exports.MsgBeginRedelegateResponse.decode(_m0.Reader.create(data)));
    }
    Undelegate(request) {
        const data = exports.MsgUndelegate.encode(request).finish();
        const promise = this.rpc.request(this.service, "Undelegate", data);
        return promise.then((data)=>exports.MsgUndelegateResponse.decode(_m0.Reader.create(data)));
    }
    CancelUnbondingDelegation(request) {
        const data = exports.MsgCancelUnbondingDelegation.encode(request).finish();
        const promise = this.rpc.request(this.service, "CancelUnbondingDelegation", data);
        return promise.then((data)=>exports.MsgCancelUnbondingDelegationResponse.decode(_m0.Reader.create(data)));
    }
    UpdateParams(request) {
        const data = exports.MsgUpdateParams.encode(request).finish();
        const promise = this.rpc.request(this.service, "UpdateParams", data);
        return promise.then((data)=>exports.MsgUpdateParamsResponse.decode(_m0.Reader.create(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
function toTimestamp(date) {
    const seconds = Math.trunc(date.getTime() / 1000).toString();
    const nanos = date.getTime() % 1000 * 1000000;
    return {
        seconds,
        nanos
    };
}
function fromTimestamp(t) {
    let millis = (globalThis.Number(t.seconds) || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return toTimestamp(o);
    } else if (typeof o === "string") {
        return toTimestamp(new globalThis.Date(o));
    } else {
        return timestamp_1.Timestamp.fromJSON(o);
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=tx.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/auth/v1beta1/auth.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/auth/v1beta1/auth.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Params = exports.ModuleCredential = exports.ModuleAccount = exports.BaseAccount = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.auth.v1beta1";
function createBaseBaseAccount() {
    return {
        address: "",
        pub_key: undefined,
        account_number: "0",
        sequence: "0"
    };
}
exports.BaseAccount = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
            writer.uint32(10).string(message.address);
        }
        if (message.pub_key !== undefined) {
            any_1.Any.encode(message.pub_key, writer.uint32(18).fork()).ldelim();
        }
        if (message.account_number !== "0") {
            writer.uint32(24).uint64(message.account_number);
        }
        if (message.sequence !== "0") {
            writer.uint32(32).uint64(message.sequence);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBaseAccount();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.pub_key = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.account_number = longToString(reader.uint64());
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.sequence = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            address: isSet(object.address) ? globalThis.String(object.address) : "",
            pub_key: isSet(object.pub_key) ? any_1.Any.fromJSON(object.pub_key) : undefined,
            account_number: isSet(object.account_number) ? globalThis.String(object.account_number) : "0",
            sequence: isSet(object.sequence) ? globalThis.String(object.sequence) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.address !== "") {
            obj.address = message.address;
        }
        if (message.pub_key !== undefined) {
            obj.pub_key = any_1.Any.toJSON(message.pub_key);
        }
        if (message.account_number !== "0") {
            obj.account_number = message.account_number;
        }
        if (message.sequence !== "0") {
            obj.sequence = message.sequence;
        }
        return obj;
    },
    create (base) {
        return exports.BaseAccount.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseBaseAccount();
        message.address = (_a = object.address) !== null && _a !== void 0 ? _a : "";
        message.pub_key = object.pub_key !== undefined && object.pub_key !== null ? any_1.Any.fromPartial(object.pub_key) : undefined;
        message.account_number = (_b = object.account_number) !== null && _b !== void 0 ? _b : "0";
        message.sequence = (_c = object.sequence) !== null && _c !== void 0 ? _c : "0";
        return message;
    }
};
function createBaseModuleAccount() {
    return {
        base_account: undefined,
        name: "",
        permissions: []
    };
}
exports.ModuleAccount = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.base_account !== undefined) {
            exports.BaseAccount.encode(message.base_account, writer.uint32(10).fork()).ldelim();
        }
        if (message.name !== "") {
            writer.uint32(18).string(message.name);
        }
        for (const v of message.permissions){
            writer.uint32(26).string(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseModuleAccount();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.base_account = exports.BaseAccount.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.name = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.permissions.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            base_account: isSet(object.base_account) ? exports.BaseAccount.fromJSON(object.base_account) : undefined,
            name: isSet(object.name) ? globalThis.String(object.name) : "",
            permissions: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.permissions) ? object.permissions.map((e)=>globalThis.String(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.base_account !== undefined) {
            obj.base_account = exports.BaseAccount.toJSON(message.base_account);
        }
        if (message.name !== "") {
            obj.name = message.name;
        }
        if ((_a = message.permissions) === null || _a === void 0 ? void 0 : _a.length) {
            obj.permissions = message.permissions;
        }
        return obj;
    },
    create (base) {
        return exports.ModuleAccount.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseModuleAccount();
        message.base_account = object.base_account !== undefined && object.base_account !== null ? exports.BaseAccount.fromPartial(object.base_account) : undefined;
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.permissions = ((_b = object.permissions) === null || _b === void 0 ? void 0 : _b.map((e)=>e)) || [];
        return message;
    }
};
function createBaseModuleCredential() {
    return {
        module_name: "",
        derivation_keys: []
    };
}
exports.ModuleCredential = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.module_name !== "") {
            writer.uint32(10).string(message.module_name);
        }
        for (const v of message.derivation_keys){
            writer.uint32(18).bytes(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseModuleCredential();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.module_name = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.derivation_keys.push(reader.bytes());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            module_name: isSet(object.module_name) ? globalThis.String(object.module_name) : "",
            derivation_keys: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.derivation_keys) ? object.derivation_keys.map((e)=>bytesFromBase64(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.module_name !== "") {
            obj.module_name = message.module_name;
        }
        if ((_a = message.derivation_keys) === null || _a === void 0 ? void 0 : _a.length) {
            obj.derivation_keys = message.derivation_keys.map((e)=>base64FromBytes(e));
        }
        return obj;
    },
    create (base) {
        return exports.ModuleCredential.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseModuleCredential();
        message.module_name = (_a = object.module_name) !== null && _a !== void 0 ? _a : "";
        message.derivation_keys = ((_b = object.derivation_keys) === null || _b === void 0 ? void 0 : _b.map((e)=>e)) || [];
        return message;
    }
};
function createBaseParams() {
    return {
        max_memo_characters: "0",
        tx_sig_limit: "0",
        tx_size_cost_per_byte: "0",
        sig_verify_cost_ed25519: "0",
        sig_verify_cost_secp256k1: "0"
    };
}
exports.Params = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.max_memo_characters !== "0") {
            writer.uint32(8).uint64(message.max_memo_characters);
        }
        if (message.tx_sig_limit !== "0") {
            writer.uint32(16).uint64(message.tx_sig_limit);
        }
        if (message.tx_size_cost_per_byte !== "0") {
            writer.uint32(24).uint64(message.tx_size_cost_per_byte);
        }
        if (message.sig_verify_cost_ed25519 !== "0") {
            writer.uint32(32).uint64(message.sig_verify_cost_ed25519);
        }
        if (message.sig_verify_cost_secp256k1 !== "0") {
            writer.uint32(40).uint64(message.sig_verify_cost_secp256k1);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.max_memo_characters = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.tx_sig_limit = longToString(reader.uint64());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.tx_size_cost_per_byte = longToString(reader.uint64());
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.sig_verify_cost_ed25519 = longToString(reader.uint64());
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.sig_verify_cost_secp256k1 = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            max_memo_characters: isSet(object.max_memo_characters) ? globalThis.String(object.max_memo_characters) : "0",
            tx_sig_limit: isSet(object.tx_sig_limit) ? globalThis.String(object.tx_sig_limit) : "0",
            tx_size_cost_per_byte: isSet(object.tx_size_cost_per_byte) ? globalThis.String(object.tx_size_cost_per_byte) : "0",
            sig_verify_cost_ed25519: isSet(object.sig_verify_cost_ed25519) ? globalThis.String(object.sig_verify_cost_ed25519) : "0",
            sig_verify_cost_secp256k1: isSet(object.sig_verify_cost_secp256k1) ? globalThis.String(object.sig_verify_cost_secp256k1) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.max_memo_characters !== "0") {
            obj.max_memo_characters = message.max_memo_characters;
        }
        if (message.tx_sig_limit !== "0") {
            obj.tx_sig_limit = message.tx_sig_limit;
        }
        if (message.tx_size_cost_per_byte !== "0") {
            obj.tx_size_cost_per_byte = message.tx_size_cost_per_byte;
        }
        if (message.sig_verify_cost_ed25519 !== "0") {
            obj.sig_verify_cost_ed25519 = message.sig_verify_cost_ed25519;
        }
        if (message.sig_verify_cost_secp256k1 !== "0") {
            obj.sig_verify_cost_secp256k1 = message.sig_verify_cost_secp256k1;
        }
        return obj;
    },
    create (base) {
        return exports.Params.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseParams();
        message.max_memo_characters = (_a = object.max_memo_characters) !== null && _a !== void 0 ? _a : "0";
        message.tx_sig_limit = (_b = object.tx_sig_limit) !== null && _b !== void 0 ? _b : "0";
        message.tx_size_cost_per_byte = (_c = object.tx_size_cost_per_byte) !== null && _c !== void 0 ? _c : "0";
        message.sig_verify_cost_ed25519 = (_d = object.sig_verify_cost_ed25519) !== null && _d !== void 0 ? _d : "0";
        message.sig_verify_cost_secp256k1 = (_e = object.sig_verify_cost_secp256k1) !== null && _e !== void 0 ? _e : "0";
        return message;
    }
};
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    } else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for(let i = 0; i < bin.length; ++i){
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    } else {
        const bin = [];
        arr.forEach((byte)=>{
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=auth.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/vesting/v1beta1/vesting.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/vesting/v1beta1/vesting.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PermanentLockedAccount = exports.PeriodicVestingAccount = exports.Period = exports.DelayedVestingAccount = exports.ContinuousVestingAccount = exports.BaseVestingAccount = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const auth_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/auth/v1beta1/auth.js [app-ssr] (ecmascript)");
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.vesting.v1beta1";
function createBaseBaseVestingAccount() {
    return {
        base_account: undefined,
        original_vesting: [],
        delegated_free: [],
        delegated_vesting: [],
        end_time: "0"
    };
}
exports.BaseVestingAccount = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.base_account !== undefined) {
            auth_1.BaseAccount.encode(message.base_account, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.original_vesting){
            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.delegated_free){
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.delegated_vesting){
            coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();
        }
        if (message.end_time !== "0") {
            writer.uint32(40).int64(message.end_time);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBaseVestingAccount();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.base_account = auth_1.BaseAccount.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.original_vesting.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.delegated_free.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.delegated_vesting.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.end_time = longToString(reader.int64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            base_account: isSet(object.base_account) ? auth_1.BaseAccount.fromJSON(object.base_account) : undefined,
            original_vesting: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.original_vesting) ? object.original_vesting.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            delegated_free: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.delegated_free) ? object.delegated_free.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            delegated_vesting: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.delegated_vesting) ? object.delegated_vesting.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            end_time: isSet(object.end_time) ? globalThis.String(object.end_time) : "0"
        };
    },
    toJSON (message) {
        var _a, _b, _c;
        const obj = {};
        if (message.base_account !== undefined) {
            obj.base_account = auth_1.BaseAccount.toJSON(message.base_account);
        }
        if ((_a = message.original_vesting) === null || _a === void 0 ? void 0 : _a.length) {
            obj.original_vesting = message.original_vesting.map((e)=>coin_1.Coin.toJSON(e));
        }
        if ((_b = message.delegated_free) === null || _b === void 0 ? void 0 : _b.length) {
            obj.delegated_free = message.delegated_free.map((e)=>coin_1.Coin.toJSON(e));
        }
        if ((_c = message.delegated_vesting) === null || _c === void 0 ? void 0 : _c.length) {
            obj.delegated_vesting = message.delegated_vesting.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.end_time !== "0") {
            obj.end_time = message.end_time;
        }
        return obj;
    },
    create (base) {
        return exports.BaseVestingAccount.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseBaseVestingAccount();
        message.base_account = object.base_account !== undefined && object.base_account !== null ? auth_1.BaseAccount.fromPartial(object.base_account) : undefined;
        message.original_vesting = ((_a = object.original_vesting) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.delegated_free = ((_b = object.delegated_free) === null || _b === void 0 ? void 0 : _b.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.delegated_vesting = ((_c = object.delegated_vesting) === null || _c === void 0 ? void 0 : _c.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.end_time = (_d = object.end_time) !== null && _d !== void 0 ? _d : "0";
        return message;
    }
};
function createBaseContinuousVestingAccount() {
    return {
        base_vesting_account: undefined,
        start_time: "0"
    };
}
exports.ContinuousVestingAccount = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.base_vesting_account !== undefined) {
            exports.BaseVestingAccount.encode(message.base_vesting_account, writer.uint32(10).fork()).ldelim();
        }
        if (message.start_time !== "0") {
            writer.uint32(16).int64(message.start_time);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseContinuousVestingAccount();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.base_vesting_account = exports.BaseVestingAccount.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.start_time = longToString(reader.int64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            base_vesting_account: isSet(object.base_vesting_account) ? exports.BaseVestingAccount.fromJSON(object.base_vesting_account) : undefined,
            start_time: isSet(object.start_time) ? globalThis.String(object.start_time) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.base_vesting_account !== undefined) {
            obj.base_vesting_account = exports.BaseVestingAccount.toJSON(message.base_vesting_account);
        }
        if (message.start_time !== "0") {
            obj.start_time = message.start_time;
        }
        return obj;
    },
    create (base) {
        return exports.ContinuousVestingAccount.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseContinuousVestingAccount();
        message.base_vesting_account = object.base_vesting_account !== undefined && object.base_vesting_account !== null ? exports.BaseVestingAccount.fromPartial(object.base_vesting_account) : undefined;
        message.start_time = (_a = object.start_time) !== null && _a !== void 0 ? _a : "0";
        return message;
    }
};
function createBaseDelayedVestingAccount() {
    return {
        base_vesting_account: undefined
    };
}
exports.DelayedVestingAccount = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.base_vesting_account !== undefined) {
            exports.BaseVestingAccount.encode(message.base_vesting_account, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDelayedVestingAccount();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.base_vesting_account = exports.BaseVestingAccount.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            base_vesting_account: isSet(object.base_vesting_account) ? exports.BaseVestingAccount.fromJSON(object.base_vesting_account) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.base_vesting_account !== undefined) {
            obj.base_vesting_account = exports.BaseVestingAccount.toJSON(message.base_vesting_account);
        }
        return obj;
    },
    create (base) {
        return exports.DelayedVestingAccount.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseDelayedVestingAccount();
        message.base_vesting_account = object.base_vesting_account !== undefined && object.base_vesting_account !== null ? exports.BaseVestingAccount.fromPartial(object.base_vesting_account) : undefined;
        return message;
    }
};
function createBasePeriod() {
    return {
        length: "0",
        amount: []
    };
}
exports.Period = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.length !== "0") {
            writer.uint32(8).int64(message.length);
        }
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePeriod();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.length = longToString(reader.int64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            length: isSet(object.length) ? globalThis.String(object.length) : "0",
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.length !== "0") {
            obj.length = message.length;
        }
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.Period.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBasePeriod();
        message.length = (_a = object.length) !== null && _a !== void 0 ? _a : "0";
        message.amount = ((_b = object.amount) === null || _b === void 0 ? void 0 : _b.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBasePeriodicVestingAccount() {
    return {
        base_vesting_account: undefined,
        start_time: "0",
        vesting_periods: []
    };
}
exports.PeriodicVestingAccount = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.base_vesting_account !== undefined) {
            exports.BaseVestingAccount.encode(message.base_vesting_account, writer.uint32(10).fork()).ldelim();
        }
        if (message.start_time !== "0") {
            writer.uint32(16).int64(message.start_time);
        }
        for (const v of message.vesting_periods){
            exports.Period.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePeriodicVestingAccount();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.base_vesting_account = exports.BaseVestingAccount.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.start_time = longToString(reader.int64());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.vesting_periods.push(exports.Period.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            base_vesting_account: isSet(object.base_vesting_account) ? exports.BaseVestingAccount.fromJSON(object.base_vesting_account) : undefined,
            start_time: isSet(object.start_time) ? globalThis.String(object.start_time) : "0",
            vesting_periods: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.vesting_periods) ? object.vesting_periods.map((e)=>exports.Period.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.base_vesting_account !== undefined) {
            obj.base_vesting_account = exports.BaseVestingAccount.toJSON(message.base_vesting_account);
        }
        if (message.start_time !== "0") {
            obj.start_time = message.start_time;
        }
        if ((_a = message.vesting_periods) === null || _a === void 0 ? void 0 : _a.length) {
            obj.vesting_periods = message.vesting_periods.map((e)=>exports.Period.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.PeriodicVestingAccount.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBasePeriodicVestingAccount();
        message.base_vesting_account = object.base_vesting_account !== undefined && object.base_vesting_account !== null ? exports.BaseVestingAccount.fromPartial(object.base_vesting_account) : undefined;
        message.start_time = (_a = object.start_time) !== null && _a !== void 0 ? _a : "0";
        message.vesting_periods = ((_b = object.vesting_periods) === null || _b === void 0 ? void 0 : _b.map((e)=>exports.Period.fromPartial(e))) || [];
        return message;
    }
};
function createBasePermanentLockedAccount() {
    return {
        base_vesting_account: undefined
    };
}
exports.PermanentLockedAccount = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.base_vesting_account !== undefined) {
            exports.BaseVestingAccount.encode(message.base_vesting_account, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePermanentLockedAccount();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.base_vesting_account = exports.BaseVestingAccount.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            base_vesting_account: isSet(object.base_vesting_account) ? exports.BaseVestingAccount.fromJSON(object.base_vesting_account) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.base_vesting_account !== undefined) {
            obj.base_vesting_account = exports.BaseVestingAccount.toJSON(message.base_vesting_account);
        }
        return obj;
    },
    create (base) {
        return exports.PermanentLockedAccount.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBasePermanentLockedAccount();
        message.base_vesting_account = object.base_vesting_account !== undefined && object.base_vesting_account !== null ? exports.BaseVestingAccount.fromPartial(object.base_vesting_account) : undefined;
        return message;
    }
};
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=vesting.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/vesting/v1beta1/tx.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/vesting/v1beta1/tx.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MsgClientImpl = exports.MsgServiceName = exports.MsgCreatePeriodicVestingAccountResponse = exports.MsgCreatePeriodicVestingAccount = exports.MsgCreatePermanentLockedAccountResponse = exports.MsgCreatePermanentLockedAccount = exports.MsgCreateVestingAccountResponse = exports.MsgCreateVestingAccount = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
const vesting_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/vesting/v1beta1/vesting.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.vesting.v1beta1";
function createBaseMsgCreateVestingAccount() {
    return {
        from_address: "",
        to_address: "",
        amount: [],
        end_time: "0",
        delayed: false
    };
}
exports.MsgCreateVestingAccount = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.from_address !== "") {
            writer.uint32(10).string(message.from_address);
        }
        if (message.to_address !== "") {
            writer.uint32(18).string(message.to_address);
        }
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        if (message.end_time !== "0") {
            writer.uint32(32).int64(message.end_time);
        }
        if (message.delayed !== false) {
            writer.uint32(40).bool(message.delayed);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateVestingAccount();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.from_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.to_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.end_time = longToString(reader.int64());
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.delayed = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            from_address: isSet(object.from_address) ? globalThis.String(object.from_address) : "",
            to_address: isSet(object.to_address) ? globalThis.String(object.to_address) : "",
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            end_time: isSet(object.end_time) ? globalThis.String(object.end_time) : "0",
            delayed: isSet(object.delayed) ? globalThis.Boolean(object.delayed) : false
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.from_address !== "") {
            obj.from_address = message.from_address;
        }
        if (message.to_address !== "") {
            obj.to_address = message.to_address;
        }
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.end_time !== "0") {
            obj.end_time = message.end_time;
        }
        if (message.delayed !== false) {
            obj.delayed = message.delayed;
        }
        return obj;
    },
    create (base) {
        return exports.MsgCreateVestingAccount.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseMsgCreateVestingAccount();
        message.from_address = (_a = object.from_address) !== null && _a !== void 0 ? _a : "";
        message.to_address = (_b = object.to_address) !== null && _b !== void 0 ? _b : "";
        message.amount = ((_c = object.amount) === null || _c === void 0 ? void 0 : _c.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.end_time = (_d = object.end_time) !== null && _d !== void 0 ? _d : "0";
        message.delayed = (_e = object.delayed) !== null && _e !== void 0 ? _e : false;
        return message;
    }
};
function createBaseMsgCreateVestingAccountResponse() {
    return {};
}
exports.MsgCreateVestingAccountResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateVestingAccountResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgCreateVestingAccountResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgCreateVestingAccountResponse();
        return message;
    }
};
function createBaseMsgCreatePermanentLockedAccount() {
    return {
        from_address: "",
        to_address: "",
        amount: []
    };
}
exports.MsgCreatePermanentLockedAccount = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.from_address !== "") {
            writer.uint32(10).string(message.from_address);
        }
        if (message.to_address !== "") {
            writer.uint32(18).string(message.to_address);
        }
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCreatePermanentLockedAccount();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.from_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.to_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            from_address: isSet(object.from_address) ? globalThis.String(object.from_address) : "",
            to_address: isSet(object.to_address) ? globalThis.String(object.to_address) : "",
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.from_address !== "") {
            obj.from_address = message.from_address;
        }
        if (message.to_address !== "") {
            obj.to_address = message.to_address;
        }
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.MsgCreatePermanentLockedAccount.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseMsgCreatePermanentLockedAccount();
        message.from_address = (_a = object.from_address) !== null && _a !== void 0 ? _a : "";
        message.to_address = (_b = object.to_address) !== null && _b !== void 0 ? _b : "";
        message.amount = ((_c = object.amount) === null || _c === void 0 ? void 0 : _c.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseMsgCreatePermanentLockedAccountResponse() {
    return {};
}
exports.MsgCreatePermanentLockedAccountResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCreatePermanentLockedAccountResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgCreatePermanentLockedAccountResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgCreatePermanentLockedAccountResponse();
        return message;
    }
};
function createBaseMsgCreatePeriodicVestingAccount() {
    return {
        from_address: "",
        to_address: "",
        start_time: "0",
        vesting_periods: []
    };
}
exports.MsgCreatePeriodicVestingAccount = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.from_address !== "") {
            writer.uint32(10).string(message.from_address);
        }
        if (message.to_address !== "") {
            writer.uint32(18).string(message.to_address);
        }
        if (message.start_time !== "0") {
            writer.uint32(24).int64(message.start_time);
        }
        for (const v of message.vesting_periods){
            vesting_1.Period.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCreatePeriodicVestingAccount();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.from_address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.to_address = reader.string();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.start_time = longToString(reader.int64());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.vesting_periods.push(vesting_1.Period.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            from_address: isSet(object.from_address) ? globalThis.String(object.from_address) : "",
            to_address: isSet(object.to_address) ? globalThis.String(object.to_address) : "",
            start_time: isSet(object.start_time) ? globalThis.String(object.start_time) : "0",
            vesting_periods: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.vesting_periods) ? object.vesting_periods.map((e)=>vesting_1.Period.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.from_address !== "") {
            obj.from_address = message.from_address;
        }
        if (message.to_address !== "") {
            obj.to_address = message.to_address;
        }
        if (message.start_time !== "0") {
            obj.start_time = message.start_time;
        }
        if ((_a = message.vesting_periods) === null || _a === void 0 ? void 0 : _a.length) {
            obj.vesting_periods = message.vesting_periods.map((e)=>vesting_1.Period.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.MsgCreatePeriodicVestingAccount.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseMsgCreatePeriodicVestingAccount();
        message.from_address = (_a = object.from_address) !== null && _a !== void 0 ? _a : "";
        message.to_address = (_b = object.to_address) !== null && _b !== void 0 ? _b : "";
        message.start_time = (_c = object.start_time) !== null && _c !== void 0 ? _c : "0";
        message.vesting_periods = ((_d = object.vesting_periods) === null || _d === void 0 ? void 0 : _d.map((e)=>vesting_1.Period.fromPartial(e))) || [];
        return message;
    }
};
function createBaseMsgCreatePeriodicVestingAccountResponse() {
    return {};
}
exports.MsgCreatePeriodicVestingAccountResponse = {
    encode (_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCreatePeriodicVestingAccountResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (_) {
        return {};
    },
    toJSON (_) {
        const obj = {};
        return obj;
    },
    create (base) {
        return exports.MsgCreatePeriodicVestingAccountResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (_) {
        const message = createBaseMsgCreatePeriodicVestingAccountResponse();
        return message;
    }
};
exports.MsgServiceName = "cosmos.vesting.v1beta1.Msg";
class MsgClientImpl {
    constructor(rpc, opts){
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.MsgServiceName;
        this.rpc = rpc;
        this.CreateVestingAccount = this.CreateVestingAccount.bind(this);
        this.CreatePermanentLockedAccount = this.CreatePermanentLockedAccount.bind(this);
        this.CreatePeriodicVestingAccount = this.CreatePeriodicVestingAccount.bind(this);
    }
    CreateVestingAccount(request) {
        const data = exports.MsgCreateVestingAccount.encode(request).finish();
        const promise = this.rpc.request(this.service, "CreateVestingAccount", data);
        return promise.then((data)=>exports.MsgCreateVestingAccountResponse.decode(_m0.Reader.create(data)));
    }
    CreatePermanentLockedAccount(request) {
        const data = exports.MsgCreatePermanentLockedAccount.encode(request).finish();
        const promise = this.rpc.request(this.service, "CreatePermanentLockedAccount", data);
        return promise.then((data)=>exports.MsgCreatePermanentLockedAccountResponse.decode(_m0.Reader.create(data)));
    }
    CreatePeriodicVestingAccount(request) {
        const data = exports.MsgCreatePeriodicVestingAccount.encode(request).finish();
        const promise = this.rpc.request(this.service, "CreatePeriodicVestingAccount", data);
        return promise.then((data)=>exports.MsgCreatePeriodicVestingAccountResponse.decode(_m0.Reader.create(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=tx.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/ics23/v1/proofs.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/ics23/v1/proofs.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CompressedNonExistenceProof = exports.CompressedExistenceProof = exports.CompressedBatchEntry = exports.CompressedBatchProof = exports.BatchEntry = exports.BatchProof = exports.InnerSpec = exports.ProofSpec = exports.InnerOp = exports.LeafOp = exports.CommitmentProof = exports.NonExistenceProof = exports.ExistenceProof = exports.lengthOpToJSON = exports.lengthOpFromJSON = exports.LengthOp = exports.hashOpToJSON = exports.hashOpFromJSON = exports.HashOp = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
exports.protobufPackage = "cosmos.ics23.v1";
var HashOp;
(function(HashOp) {
    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */ HashOp[HashOp["NO_HASH"] = 0] = "NO_HASH";
    HashOp[HashOp["SHA256"] = 1] = "SHA256";
    HashOp[HashOp["SHA512"] = 2] = "SHA512";
    HashOp[HashOp["KECCAK"] = 3] = "KECCAK";
    HashOp[HashOp["RIPEMD160"] = 4] = "RIPEMD160";
    /** BITCOIN - ripemd160(sha256(x)) */ HashOp[HashOp["BITCOIN"] = 5] = "BITCOIN";
    HashOp[HashOp["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(HashOp = exports.HashOp || (exports.HashOp = {}));
function hashOpFromJSON(object) {
    switch(object){
        case 0:
        case "NO_HASH":
            return HashOp.NO_HASH;
        case 1:
        case "SHA256":
            return HashOp.SHA256;
        case 2:
        case "SHA512":
            return HashOp.SHA512;
        case 3:
        case "KECCAK":
            return HashOp.KECCAK;
        case 4:
        case "RIPEMD160":
            return HashOp.RIPEMD160;
        case 5:
        case "BITCOIN":
            return HashOp.BITCOIN;
        case -1:
        case "UNRECOGNIZED":
        default:
            return HashOp.UNRECOGNIZED;
    }
}
exports.hashOpFromJSON = hashOpFromJSON;
function hashOpToJSON(object) {
    switch(object){
        case HashOp.NO_HASH:
            return "NO_HASH";
        case HashOp.SHA256:
            return "SHA256";
        case HashOp.SHA512:
            return "SHA512";
        case HashOp.KECCAK:
            return "KECCAK";
        case HashOp.RIPEMD160:
            return "RIPEMD160";
        case HashOp.BITCOIN:
            return "BITCOIN";
        case HashOp.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.hashOpToJSON = hashOpToJSON;
/**
 * LengthOp defines how to process the key and value of the LeafOp
 * to include length information. After encoding the length with the given
 * algorithm, the length will be prepended to the key and value bytes.
 * (Each one with it's own encoded length)
 */ var LengthOp;
(function(LengthOp) {
    /** NO_PREFIX - NO_PREFIX don't include any length info */ LengthOp[LengthOp["NO_PREFIX"] = 0] = "NO_PREFIX";
    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */ LengthOp[LengthOp["VAR_PROTO"] = 1] = "VAR_PROTO";
    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */ LengthOp[LengthOp["VAR_RLP"] = 2] = "VAR_RLP";
    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */ LengthOp[LengthOp["FIXED32_BIG"] = 3] = "FIXED32_BIG";
    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */ LengthOp[LengthOp["FIXED32_LITTLE"] = 4] = "FIXED32_LITTLE";
    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */ LengthOp[LengthOp["FIXED64_BIG"] = 5] = "FIXED64_BIG";
    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */ LengthOp[LengthOp["FIXED64_LITTLE"] = 6] = "FIXED64_LITTLE";
    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */ LengthOp[LengthOp["REQUIRE_32_BYTES"] = 7] = "REQUIRE_32_BYTES";
    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */ LengthOp[LengthOp["REQUIRE_64_BYTES"] = 8] = "REQUIRE_64_BYTES";
    LengthOp[LengthOp["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(LengthOp = exports.LengthOp || (exports.LengthOp = {}));
function lengthOpFromJSON(object) {
    switch(object){
        case 0:
        case "NO_PREFIX":
            return LengthOp.NO_PREFIX;
        case 1:
        case "VAR_PROTO":
            return LengthOp.VAR_PROTO;
        case 2:
        case "VAR_RLP":
            return LengthOp.VAR_RLP;
        case 3:
        case "FIXED32_BIG":
            return LengthOp.FIXED32_BIG;
        case 4:
        case "FIXED32_LITTLE":
            return LengthOp.FIXED32_LITTLE;
        case 5:
        case "FIXED64_BIG":
            return LengthOp.FIXED64_BIG;
        case 6:
        case "FIXED64_LITTLE":
            return LengthOp.FIXED64_LITTLE;
        case 7:
        case "REQUIRE_32_BYTES":
            return LengthOp.REQUIRE_32_BYTES;
        case 8:
        case "REQUIRE_64_BYTES":
            return LengthOp.REQUIRE_64_BYTES;
        case -1:
        case "UNRECOGNIZED":
        default:
            return LengthOp.UNRECOGNIZED;
    }
}
exports.lengthOpFromJSON = lengthOpFromJSON;
function lengthOpToJSON(object) {
    switch(object){
        case LengthOp.NO_PREFIX:
            return "NO_PREFIX";
        case LengthOp.VAR_PROTO:
            return "VAR_PROTO";
        case LengthOp.VAR_RLP:
            return "VAR_RLP";
        case LengthOp.FIXED32_BIG:
            return "FIXED32_BIG";
        case LengthOp.FIXED32_LITTLE:
            return "FIXED32_LITTLE";
        case LengthOp.FIXED64_BIG:
            return "FIXED64_BIG";
        case LengthOp.FIXED64_LITTLE:
            return "FIXED64_LITTLE";
        case LengthOp.REQUIRE_32_BYTES:
            return "REQUIRE_32_BYTES";
        case LengthOp.REQUIRE_64_BYTES:
            return "REQUIRE_64_BYTES";
        case LengthOp.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.lengthOpToJSON = lengthOpToJSON;
function createBaseExistenceProof() {
    return {
        key: new Uint8Array(0),
        value: new Uint8Array(0),
        leaf: undefined,
        path: []
    };
}
exports.ExistenceProof = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
            writer.uint32(10).bytes(message.key);
        }
        if (message.value.length !== 0) {
            writer.uint32(18).bytes(message.value);
        }
        if (message.leaf !== undefined) {
            exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.path){
            exports.InnerOp.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseExistenceProof();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.key = reader.bytes();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.value = reader.bytes();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.leaf = exports.LeafOp.decode(reader, reader.uint32());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.path.push(exports.InnerOp.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(0),
            value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(0),
            leaf: isSet(object.leaf) ? exports.LeafOp.fromJSON(object.leaf) : undefined,
            path: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.path) ? object.path.map((e)=>exports.InnerOp.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.key.length !== 0) {
            obj.key = base64FromBytes(message.key);
        }
        if (message.value.length !== 0) {
            obj.value = base64FromBytes(message.value);
        }
        if (message.leaf !== undefined) {
            obj.leaf = exports.LeafOp.toJSON(message.leaf);
        }
        if ((_a = message.path) === null || _a === void 0 ? void 0 : _a.length) {
            obj.path = message.path.map((e)=>exports.InnerOp.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.ExistenceProof.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseExistenceProof();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.leaf = object.leaf !== undefined && object.leaf !== null ? exports.LeafOp.fromPartial(object.leaf) : undefined;
        message.path = ((_c = object.path) === null || _c === void 0 ? void 0 : _c.map((e)=>exports.InnerOp.fromPartial(e))) || [];
        return message;
    }
};
function createBaseNonExistenceProof() {
    return {
        key: new Uint8Array(0),
        left: undefined,
        right: undefined
    };
}
exports.NonExistenceProof = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
            writer.uint32(10).bytes(message.key);
        }
        if (message.left !== undefined) {
            exports.ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();
        }
        if (message.right !== undefined) {
            exports.ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseNonExistenceProof();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.key = reader.bytes();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.left = exports.ExistenceProof.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.right = exports.ExistenceProof.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(0),
            left: isSet(object.left) ? exports.ExistenceProof.fromJSON(object.left) : undefined,
            right: isSet(object.right) ? exports.ExistenceProof.fromJSON(object.right) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.key.length !== 0) {
            obj.key = base64FromBytes(message.key);
        }
        if (message.left !== undefined) {
            obj.left = exports.ExistenceProof.toJSON(message.left);
        }
        if (message.right !== undefined) {
            obj.right = exports.ExistenceProof.toJSON(message.right);
        }
        return obj;
    },
    create (base) {
        return exports.NonExistenceProof.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseNonExistenceProof();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.left = object.left !== undefined && object.left !== null ? exports.ExistenceProof.fromPartial(object.left) : undefined;
        message.right = object.right !== undefined && object.right !== null ? exports.ExistenceProof.fromPartial(object.right) : undefined;
        return message;
    }
};
function createBaseCommitmentProof() {
    return {
        exist: undefined,
        nonexist: undefined,
        batch: undefined,
        compressed: undefined
    };
}
exports.CommitmentProof = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.exist !== undefined) {
            exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();
        }
        if (message.nonexist !== undefined) {
            exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();
        }
        if (message.batch !== undefined) {
            exports.BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();
        }
        if (message.compressed !== undefined) {
            exports.CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCommitmentProof();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.exist = exports.ExistenceProof.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.batch = exports.BatchProof.decode(reader, reader.uint32());
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.compressed = exports.CompressedBatchProof.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            exist: isSet(object.exist) ? exports.ExistenceProof.fromJSON(object.exist) : undefined,
            nonexist: isSet(object.nonexist) ? exports.NonExistenceProof.fromJSON(object.nonexist) : undefined,
            batch: isSet(object.batch) ? exports.BatchProof.fromJSON(object.batch) : undefined,
            compressed: isSet(object.compressed) ? exports.CompressedBatchProof.fromJSON(object.compressed) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.exist !== undefined) {
            obj.exist = exports.ExistenceProof.toJSON(message.exist);
        }
        if (message.nonexist !== undefined) {
            obj.nonexist = exports.NonExistenceProof.toJSON(message.nonexist);
        }
        if (message.batch !== undefined) {
            obj.batch = exports.BatchProof.toJSON(message.batch);
        }
        if (message.compressed !== undefined) {
            obj.compressed = exports.CompressedBatchProof.toJSON(message.compressed);
        }
        return obj;
    },
    create (base) {
        return exports.CommitmentProof.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseCommitmentProof();
        message.exist = object.exist !== undefined && object.exist !== null ? exports.ExistenceProof.fromPartial(object.exist) : undefined;
        message.nonexist = object.nonexist !== undefined && object.nonexist !== null ? exports.NonExistenceProof.fromPartial(object.nonexist) : undefined;
        message.batch = object.batch !== undefined && object.batch !== null ? exports.BatchProof.fromPartial(object.batch) : undefined;
        message.compressed = object.compressed !== undefined && object.compressed !== null ? exports.CompressedBatchProof.fromPartial(object.compressed) : undefined;
        return message;
    }
};
function createBaseLeafOp() {
    return {
        hash: 0,
        prehash_key: 0,
        prehash_value: 0,
        length: 0,
        prefix: new Uint8Array(0)
    };
}
exports.LeafOp = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.hash !== 0) {
            writer.uint32(8).int32(message.hash);
        }
        if (message.prehash_key !== 0) {
            writer.uint32(16).int32(message.prehash_key);
        }
        if (message.prehash_value !== 0) {
            writer.uint32(24).int32(message.prehash_value);
        }
        if (message.length !== 0) {
            writer.uint32(32).int32(message.length);
        }
        if (message.prefix.length !== 0) {
            writer.uint32(42).bytes(message.prefix);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseLeafOp();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.hash = reader.int32();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.prehash_key = reader.int32();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.prehash_value = reader.int32();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.length = reader.int32();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.prefix = reader.bytes();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            hash: isSet(object.hash) ? hashOpFromJSON(object.hash) : 0,
            prehash_key: isSet(object.prehash_key) ? hashOpFromJSON(object.prehash_key) : 0,
            prehash_value: isSet(object.prehash_value) ? hashOpFromJSON(object.prehash_value) : 0,
            length: isSet(object.length) ? lengthOpFromJSON(object.length) : 0,
            prefix: isSet(object.prefix) ? bytesFromBase64(object.prefix) : new Uint8Array(0)
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.hash !== 0) {
            obj.hash = hashOpToJSON(message.hash);
        }
        if (message.prehash_key !== 0) {
            obj.prehash_key = hashOpToJSON(message.prehash_key);
        }
        if (message.prehash_value !== 0) {
            obj.prehash_value = hashOpToJSON(message.prehash_value);
        }
        if (message.length !== 0) {
            obj.length = lengthOpToJSON(message.length);
        }
        if (message.prefix.length !== 0) {
            obj.prefix = base64FromBytes(message.prefix);
        }
        return obj;
    },
    create (base) {
        return exports.LeafOp.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseLeafOp();
        message.hash = (_a = object.hash) !== null && _a !== void 0 ? _a : 0;
        message.prehash_key = (_b = object.prehash_key) !== null && _b !== void 0 ? _b : 0;
        message.prehash_value = (_c = object.prehash_value) !== null && _c !== void 0 ? _c : 0;
        message.length = (_d = object.length) !== null && _d !== void 0 ? _d : 0;
        message.prefix = (_e = object.prefix) !== null && _e !== void 0 ? _e : new Uint8Array(0);
        return message;
    }
};
function createBaseInnerOp() {
    return {
        hash: 0,
        prefix: new Uint8Array(0),
        suffix: new Uint8Array(0)
    };
}
exports.InnerOp = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.hash !== 0) {
            writer.uint32(8).int32(message.hash);
        }
        if (message.prefix.length !== 0) {
            writer.uint32(18).bytes(message.prefix);
        }
        if (message.suffix.length !== 0) {
            writer.uint32(26).bytes(message.suffix);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseInnerOp();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.hash = reader.int32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.prefix = reader.bytes();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.suffix = reader.bytes();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            hash: isSet(object.hash) ? hashOpFromJSON(object.hash) : 0,
            prefix: isSet(object.prefix) ? bytesFromBase64(object.prefix) : new Uint8Array(0),
            suffix: isSet(object.suffix) ? bytesFromBase64(object.suffix) : new Uint8Array(0)
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.hash !== 0) {
            obj.hash = hashOpToJSON(message.hash);
        }
        if (message.prefix.length !== 0) {
            obj.prefix = base64FromBytes(message.prefix);
        }
        if (message.suffix.length !== 0) {
            obj.suffix = base64FromBytes(message.suffix);
        }
        return obj;
    },
    create (base) {
        return exports.InnerOp.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseInnerOp();
        message.hash = (_a = object.hash) !== null && _a !== void 0 ? _a : 0;
        message.prefix = (_b = object.prefix) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.suffix = (_c = object.suffix) !== null && _c !== void 0 ? _c : new Uint8Array(0);
        return message;
    }
};
function createBaseProofSpec() {
    return {
        leaf_spec: undefined,
        inner_spec: undefined,
        max_depth: 0,
        min_depth: 0
    };
}
exports.ProofSpec = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.leaf_spec !== undefined) {
            exports.LeafOp.encode(message.leaf_spec, writer.uint32(10).fork()).ldelim();
        }
        if (message.inner_spec !== undefined) {
            exports.InnerSpec.encode(message.inner_spec, writer.uint32(18).fork()).ldelim();
        }
        if (message.max_depth !== 0) {
            writer.uint32(24).int32(message.max_depth);
        }
        if (message.min_depth !== 0) {
            writer.uint32(32).int32(message.min_depth);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseProofSpec();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.leaf_spec = exports.LeafOp.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.inner_spec = exports.InnerSpec.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.max_depth = reader.int32();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.min_depth = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            leaf_spec: isSet(object.leaf_spec) ? exports.LeafOp.fromJSON(object.leaf_spec) : undefined,
            inner_spec: isSet(object.inner_spec) ? exports.InnerSpec.fromJSON(object.inner_spec) : undefined,
            max_depth: isSet(object.max_depth) ? globalThis.Number(object.max_depth) : 0,
            min_depth: isSet(object.min_depth) ? globalThis.Number(object.min_depth) : 0
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.leaf_spec !== undefined) {
            obj.leaf_spec = exports.LeafOp.toJSON(message.leaf_spec);
        }
        if (message.inner_spec !== undefined) {
            obj.inner_spec = exports.InnerSpec.toJSON(message.inner_spec);
        }
        if (message.max_depth !== 0) {
            obj.max_depth = Math.round(message.max_depth);
        }
        if (message.min_depth !== 0) {
            obj.min_depth = Math.round(message.min_depth);
        }
        return obj;
    },
    create (base) {
        return exports.ProofSpec.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseProofSpec();
        message.leaf_spec = object.leaf_spec !== undefined && object.leaf_spec !== null ? exports.LeafOp.fromPartial(object.leaf_spec) : undefined;
        message.inner_spec = object.inner_spec !== undefined && object.inner_spec !== null ? exports.InnerSpec.fromPartial(object.inner_spec) : undefined;
        message.max_depth = (_a = object.max_depth) !== null && _a !== void 0 ? _a : 0;
        message.min_depth = (_b = object.min_depth) !== null && _b !== void 0 ? _b : 0;
        return message;
    }
};
function createBaseInnerSpec() {
    return {
        child_order: [],
        child_size: 0,
        min_prefix_length: 0,
        max_prefix_length: 0,
        empty_child: new Uint8Array(0),
        hash: 0
    };
}
exports.InnerSpec = {
    encode (message, writer = _m0.Writer.create()) {
        writer.uint32(10).fork();
        for (const v of message.child_order){
            writer.int32(v);
        }
        writer.ldelim();
        if (message.child_size !== 0) {
            writer.uint32(16).int32(message.child_size);
        }
        if (message.min_prefix_length !== 0) {
            writer.uint32(24).int32(message.min_prefix_length);
        }
        if (message.max_prefix_length !== 0) {
            writer.uint32(32).int32(message.max_prefix_length);
        }
        if (message.empty_child.length !== 0) {
            writer.uint32(42).bytes(message.empty_child);
        }
        if (message.hash !== 0) {
            writer.uint32(48).int32(message.hash);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseInnerSpec();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag === 8) {
                        message.child_order.push(reader.int32());
                        continue;
                    }
                    if (tag === 10) {
                        const end2 = reader.uint32() + reader.pos;
                        while(reader.pos < end2){
                            message.child_order.push(reader.int32());
                        }
                        continue;
                    }
                    break;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.child_size = reader.int32();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.min_prefix_length = reader.int32();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.max_prefix_length = reader.int32();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.empty_child = reader.bytes();
                    continue;
                case 6:
                    if (tag !== 48) {
                        break;
                    }
                    message.hash = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            child_order: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.child_order) ? object.child_order.map((e)=>globalThis.Number(e)) : [],
            child_size: isSet(object.child_size) ? globalThis.Number(object.child_size) : 0,
            min_prefix_length: isSet(object.min_prefix_length) ? globalThis.Number(object.min_prefix_length) : 0,
            max_prefix_length: isSet(object.max_prefix_length) ? globalThis.Number(object.max_prefix_length) : 0,
            empty_child: isSet(object.empty_child) ? bytesFromBase64(object.empty_child) : new Uint8Array(0),
            hash: isSet(object.hash) ? hashOpFromJSON(object.hash) : 0
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.child_order) === null || _a === void 0 ? void 0 : _a.length) {
            obj.child_order = message.child_order.map((e)=>Math.round(e));
        }
        if (message.child_size !== 0) {
            obj.child_size = Math.round(message.child_size);
        }
        if (message.min_prefix_length !== 0) {
            obj.min_prefix_length = Math.round(message.min_prefix_length);
        }
        if (message.max_prefix_length !== 0) {
            obj.max_prefix_length = Math.round(message.max_prefix_length);
        }
        if (message.empty_child.length !== 0) {
            obj.empty_child = base64FromBytes(message.empty_child);
        }
        if (message.hash !== 0) {
            obj.hash = hashOpToJSON(message.hash);
        }
        return obj;
    },
    create (base) {
        return exports.InnerSpec.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e, _f;
        const message = createBaseInnerSpec();
        message.child_order = ((_a = object.child_order) === null || _a === void 0 ? void 0 : _a.map((e)=>e)) || [];
        message.child_size = (_b = object.child_size) !== null && _b !== void 0 ? _b : 0;
        message.min_prefix_length = (_c = object.min_prefix_length) !== null && _c !== void 0 ? _c : 0;
        message.max_prefix_length = (_d = object.max_prefix_length) !== null && _d !== void 0 ? _d : 0;
        message.empty_child = (_e = object.empty_child) !== null && _e !== void 0 ? _e : new Uint8Array(0);
        message.hash = (_f = object.hash) !== null && _f !== void 0 ? _f : 0;
        return message;
    }
};
function createBaseBatchProof() {
    return {
        entries: []
    };
}
exports.BatchProof = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.entries){
            exports.BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBatchProof();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.entries.push(exports.BatchEntry.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            entries: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.entries) ? object.entries.map((e)=>exports.BatchEntry.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.entries) === null || _a === void 0 ? void 0 : _a.length) {
            obj.entries = message.entries.map((e)=>exports.BatchEntry.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.BatchProof.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseBatchProof();
        message.entries = ((_a = object.entries) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.BatchEntry.fromPartial(e))) || [];
        return message;
    }
};
function createBaseBatchEntry() {
    return {
        exist: undefined,
        nonexist: undefined
    };
}
exports.BatchEntry = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.exist !== undefined) {
            exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();
        }
        if (message.nonexist !== undefined) {
            exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBatchEntry();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.exist = exports.ExistenceProof.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            exist: isSet(object.exist) ? exports.ExistenceProof.fromJSON(object.exist) : undefined,
            nonexist: isSet(object.nonexist) ? exports.NonExistenceProof.fromJSON(object.nonexist) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.exist !== undefined) {
            obj.exist = exports.ExistenceProof.toJSON(message.exist);
        }
        if (message.nonexist !== undefined) {
            obj.nonexist = exports.NonExistenceProof.toJSON(message.nonexist);
        }
        return obj;
    },
    create (base) {
        return exports.BatchEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseBatchEntry();
        message.exist = object.exist !== undefined && object.exist !== null ? exports.ExistenceProof.fromPartial(object.exist) : undefined;
        message.nonexist = object.nonexist !== undefined && object.nonexist !== null ? exports.NonExistenceProof.fromPartial(object.nonexist) : undefined;
        return message;
    }
};
function createBaseCompressedBatchProof() {
    return {
        entries: [],
        lookup_inners: []
    };
}
exports.CompressedBatchProof = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.entries){
            exports.CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.lookup_inners){
            exports.InnerOp.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCompressedBatchProof();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.entries.push(exports.CompressedBatchEntry.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.lookup_inners.push(exports.InnerOp.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            entries: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.entries) ? object.entries.map((e)=>exports.CompressedBatchEntry.fromJSON(e)) : [],
            lookup_inners: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.lookup_inners) ? object.lookup_inners.map((e)=>exports.InnerOp.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a, _b;
        const obj = {};
        if ((_a = message.entries) === null || _a === void 0 ? void 0 : _a.length) {
            obj.entries = message.entries.map((e)=>exports.CompressedBatchEntry.toJSON(e));
        }
        if ((_b = message.lookup_inners) === null || _b === void 0 ? void 0 : _b.length) {
            obj.lookup_inners = message.lookup_inners.map((e)=>exports.InnerOp.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.CompressedBatchProof.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseCompressedBatchProof();
        message.entries = ((_a = object.entries) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.CompressedBatchEntry.fromPartial(e))) || [];
        message.lookup_inners = ((_b = object.lookup_inners) === null || _b === void 0 ? void 0 : _b.map((e)=>exports.InnerOp.fromPartial(e))) || [];
        return message;
    }
};
function createBaseCompressedBatchEntry() {
    return {
        exist: undefined,
        nonexist: undefined
    };
}
exports.CompressedBatchEntry = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.exist !== undefined) {
            exports.CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();
        }
        if (message.nonexist !== undefined) {
            exports.CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCompressedBatchEntry();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.exist = exports.CompressedExistenceProof.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.nonexist = exports.CompressedNonExistenceProof.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            exist: isSet(object.exist) ? exports.CompressedExistenceProof.fromJSON(object.exist) : undefined,
            nonexist: isSet(object.nonexist) ? exports.CompressedNonExistenceProof.fromJSON(object.nonexist) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.exist !== undefined) {
            obj.exist = exports.CompressedExistenceProof.toJSON(message.exist);
        }
        if (message.nonexist !== undefined) {
            obj.nonexist = exports.CompressedNonExistenceProof.toJSON(message.nonexist);
        }
        return obj;
    },
    create (base) {
        return exports.CompressedBatchEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseCompressedBatchEntry();
        message.exist = object.exist !== undefined && object.exist !== null ? exports.CompressedExistenceProof.fromPartial(object.exist) : undefined;
        message.nonexist = object.nonexist !== undefined && object.nonexist !== null ? exports.CompressedNonExistenceProof.fromPartial(object.nonexist) : undefined;
        return message;
    }
};
function createBaseCompressedExistenceProof() {
    return {
        key: new Uint8Array(0),
        value: new Uint8Array(0),
        leaf: undefined,
        path: []
    };
}
exports.CompressedExistenceProof = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
            writer.uint32(10).bytes(message.key);
        }
        if (message.value.length !== 0) {
            writer.uint32(18).bytes(message.value);
        }
        if (message.leaf !== undefined) {
            exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();
        }
        writer.uint32(34).fork();
        for (const v of message.path){
            writer.int32(v);
        }
        writer.ldelim();
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCompressedExistenceProof();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.key = reader.bytes();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.value = reader.bytes();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.leaf = exports.LeafOp.decode(reader, reader.uint32());
                    continue;
                case 4:
                    if (tag === 32) {
                        message.path.push(reader.int32());
                        continue;
                    }
                    if (tag === 34) {
                        const end2 = reader.uint32() + reader.pos;
                        while(reader.pos < end2){
                            message.path.push(reader.int32());
                        }
                        continue;
                    }
                    break;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(0),
            value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(0),
            leaf: isSet(object.leaf) ? exports.LeafOp.fromJSON(object.leaf) : undefined,
            path: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.path) ? object.path.map((e)=>globalThis.Number(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.key.length !== 0) {
            obj.key = base64FromBytes(message.key);
        }
        if (message.value.length !== 0) {
            obj.value = base64FromBytes(message.value);
        }
        if (message.leaf !== undefined) {
            obj.leaf = exports.LeafOp.toJSON(message.leaf);
        }
        if ((_a = message.path) === null || _a === void 0 ? void 0 : _a.length) {
            obj.path = message.path.map((e)=>Math.round(e));
        }
        return obj;
    },
    create (base) {
        return exports.CompressedExistenceProof.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseCompressedExistenceProof();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.leaf = object.leaf !== undefined && object.leaf !== null ? exports.LeafOp.fromPartial(object.leaf) : undefined;
        message.path = ((_c = object.path) === null || _c === void 0 ? void 0 : _c.map((e)=>e)) || [];
        return message;
    }
};
function createBaseCompressedNonExistenceProof() {
    return {
        key: new Uint8Array(0),
        left: undefined,
        right: undefined
    };
}
exports.CompressedNonExistenceProof = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
            writer.uint32(10).bytes(message.key);
        }
        if (message.left !== undefined) {
            exports.CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();
        }
        if (message.right !== undefined) {
            exports.CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCompressedNonExistenceProof();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.key = reader.bytes();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.left = exports.CompressedExistenceProof.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.right = exports.CompressedExistenceProof.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(0),
            left: isSet(object.left) ? exports.CompressedExistenceProof.fromJSON(object.left) : undefined,
            right: isSet(object.right) ? exports.CompressedExistenceProof.fromJSON(object.right) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.key.length !== 0) {
            obj.key = base64FromBytes(message.key);
        }
        if (message.left !== undefined) {
            obj.left = exports.CompressedExistenceProof.toJSON(message.left);
        }
        if (message.right !== undefined) {
            obj.right = exports.CompressedExistenceProof.toJSON(message.right);
        }
        return obj;
    },
    create (base) {
        return exports.CompressedNonExistenceProof.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseCompressedNonExistenceProof();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.left = object.left !== undefined && object.left !== null ? exports.CompressedExistenceProof.fromPartial(object.left) : undefined;
        message.right = object.right !== undefined && object.right !== null ? exports.CompressedExistenceProof.fromPartial(object.right) : undefined;
        return message;
    }
};
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    } else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for(let i = 0; i < bin.length; ++i){
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    } else {
        const bin = [];
        arr.forEach((byte)=>{
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=proofs.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/bank/v1beta1/authz.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/bank/v1beta1/authz.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SendAuthorization = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.bank.v1beta1";
function createBaseSendAuthorization() {
    return {
        spend_limit: [],
        allow_list: []
    };
}
exports.SendAuthorization = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.spend_limit){
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.allow_list){
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSendAuthorization();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.spend_limit.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.allow_list.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            spend_limit: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.spend_limit) ? object.spend_limit.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            allow_list: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.allow_list) ? object.allow_list.map((e)=>globalThis.String(e)) : []
        };
    },
    toJSON (message) {
        var _a, _b;
        const obj = {};
        if ((_a = message.spend_limit) === null || _a === void 0 ? void 0 : _a.length) {
            obj.spend_limit = message.spend_limit.map((e)=>coin_1.Coin.toJSON(e));
        }
        if ((_b = message.allow_list) === null || _b === void 0 ? void 0 : _b.length) {
            obj.allow_list = message.allow_list;
        }
        return obj;
    },
    create (base) {
        return exports.SendAuthorization.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseSendAuthorization();
        message.spend_limit = ((_a = object.spend_limit) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.allow_list = ((_b = object.allow_list) === null || _b === void 0 ? void 0 : _b.map((e)=>e)) || [];
        return message;
    }
}; //# sourceMappingURL=authz.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/staking/v1beta1/authz.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/staking/v1beta1/authz.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StakeAuthorization_Validators = exports.StakeAuthorization = exports.authorizationTypeToJSON = exports.authorizationTypeFromJSON = exports.AuthorizationType = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.staking.v1beta1";
/**
 * AuthorizationType defines the type of staking module authorization type
 *
 * Since: cosmos-sdk 0.43
 */ var AuthorizationType;
(function(AuthorizationType) {
    /** AUTHORIZATION_TYPE_UNSPECIFIED - AUTHORIZATION_TYPE_UNSPECIFIED specifies an unknown authorization type */ AuthorizationType[AuthorizationType["AUTHORIZATION_TYPE_UNSPECIFIED"] = 0] = "AUTHORIZATION_TYPE_UNSPECIFIED";
    /** AUTHORIZATION_TYPE_DELEGATE - AUTHORIZATION_TYPE_DELEGATE defines an authorization type for Msg/Delegate */ AuthorizationType[AuthorizationType["AUTHORIZATION_TYPE_DELEGATE"] = 1] = "AUTHORIZATION_TYPE_DELEGATE";
    /** AUTHORIZATION_TYPE_UNDELEGATE - AUTHORIZATION_TYPE_UNDELEGATE defines an authorization type for Msg/Undelegate */ AuthorizationType[AuthorizationType["AUTHORIZATION_TYPE_UNDELEGATE"] = 2] = "AUTHORIZATION_TYPE_UNDELEGATE";
    /** AUTHORIZATION_TYPE_REDELEGATE - AUTHORIZATION_TYPE_REDELEGATE defines an authorization type for Msg/BeginRedelegate */ AuthorizationType[AuthorizationType["AUTHORIZATION_TYPE_REDELEGATE"] = 3] = "AUTHORIZATION_TYPE_REDELEGATE";
    /** AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION - AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION defines an authorization type for Msg/MsgCancelUnbondingDelegation */ AuthorizationType[AuthorizationType["AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION"] = 4] = "AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION";
    AuthorizationType[AuthorizationType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(AuthorizationType = exports.AuthorizationType || (exports.AuthorizationType = {}));
function authorizationTypeFromJSON(object) {
    switch(object){
        case 0:
        case "AUTHORIZATION_TYPE_UNSPECIFIED":
            return AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED;
        case 1:
        case "AUTHORIZATION_TYPE_DELEGATE":
            return AuthorizationType.AUTHORIZATION_TYPE_DELEGATE;
        case 2:
        case "AUTHORIZATION_TYPE_UNDELEGATE":
            return AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE;
        case 3:
        case "AUTHORIZATION_TYPE_REDELEGATE":
            return AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE;
        case 4:
        case "AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION":
            return AuthorizationType.AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION;
        case -1:
        case "UNRECOGNIZED":
        default:
            return AuthorizationType.UNRECOGNIZED;
    }
}
exports.authorizationTypeFromJSON = authorizationTypeFromJSON;
function authorizationTypeToJSON(object) {
    switch(object){
        case AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED:
            return "AUTHORIZATION_TYPE_UNSPECIFIED";
        case AuthorizationType.AUTHORIZATION_TYPE_DELEGATE:
            return "AUTHORIZATION_TYPE_DELEGATE";
        case AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE:
            return "AUTHORIZATION_TYPE_UNDELEGATE";
        case AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE:
            return "AUTHORIZATION_TYPE_REDELEGATE";
        case AuthorizationType.AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION:
            return "AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION";
        case AuthorizationType.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.authorizationTypeToJSON = authorizationTypeToJSON;
function createBaseStakeAuthorization() {
    return {
        max_tokens: undefined,
        allow_list: undefined,
        deny_list: undefined,
        authorization_type: 0
    };
}
exports.StakeAuthorization = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.max_tokens !== undefined) {
            coin_1.Coin.encode(message.max_tokens, writer.uint32(10).fork()).ldelim();
        }
        if (message.allow_list !== undefined) {
            exports.StakeAuthorization_Validators.encode(message.allow_list, writer.uint32(18).fork()).ldelim();
        }
        if (message.deny_list !== undefined) {
            exports.StakeAuthorization_Validators.encode(message.deny_list, writer.uint32(26).fork()).ldelim();
        }
        if (message.authorization_type !== 0) {
            writer.uint32(32).int32(message.authorization_type);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseStakeAuthorization();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.max_tokens = coin_1.Coin.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.allow_list = exports.StakeAuthorization_Validators.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.deny_list = exports.StakeAuthorization_Validators.decode(reader, reader.uint32());
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.authorization_type = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            max_tokens: isSet(object.max_tokens) ? coin_1.Coin.fromJSON(object.max_tokens) : undefined,
            allow_list: isSet(object.allow_list) ? exports.StakeAuthorization_Validators.fromJSON(object.allow_list) : undefined,
            deny_list: isSet(object.deny_list) ? exports.StakeAuthorization_Validators.fromJSON(object.deny_list) : undefined,
            authorization_type: isSet(object.authorization_type) ? authorizationTypeFromJSON(object.authorization_type) : 0
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.max_tokens !== undefined) {
            obj.max_tokens = coin_1.Coin.toJSON(message.max_tokens);
        }
        if (message.allow_list !== undefined) {
            obj.allow_list = exports.StakeAuthorization_Validators.toJSON(message.allow_list);
        }
        if (message.deny_list !== undefined) {
            obj.deny_list = exports.StakeAuthorization_Validators.toJSON(message.deny_list);
        }
        if (message.authorization_type !== 0) {
            obj.authorization_type = authorizationTypeToJSON(message.authorization_type);
        }
        return obj;
    },
    create (base) {
        return exports.StakeAuthorization.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseStakeAuthorization();
        message.max_tokens = object.max_tokens !== undefined && object.max_tokens !== null ? coin_1.Coin.fromPartial(object.max_tokens) : undefined;
        message.allow_list = object.allow_list !== undefined && object.allow_list !== null ? exports.StakeAuthorization_Validators.fromPartial(object.allow_list) : undefined;
        message.deny_list = object.deny_list !== undefined && object.deny_list !== null ? exports.StakeAuthorization_Validators.fromPartial(object.deny_list) : undefined;
        message.authorization_type = (_a = object.authorization_type) !== null && _a !== void 0 ? _a : 0;
        return message;
    }
};
function createBaseStakeAuthorization_Validators() {
    return {
        address: []
    };
}
exports.StakeAuthorization_Validators = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.address){
            writer.uint32(10).string(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseStakeAuthorization_Validators();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.address.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            address: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.address) ? object.address.map((e)=>globalThis.String(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.address) === null || _a === void 0 ? void 0 : _a.length) {
            obj.address = message.address;
        }
        return obj;
    },
    create (base) {
        return exports.StakeAuthorization_Validators.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseStakeAuthorization_Validators();
        message.address = ((_a = object.address) === null || _a === void 0 ? void 0 : _a.map((e)=>e)) || [];
        return message;
    }
};
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=authz.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/feegrant/v1beta1/feegrant.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/feegrant/v1beta1/feegrant.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Grant = exports.AllowedMsgAllowance = exports.PeriodicAllowance = exports.BasicAllowance = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
const duration_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/duration.js [app-ssr] (ecmascript)");
const timestamp_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/timestamp.js [app-ssr] (ecmascript)");
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.feegrant.v1beta1";
function createBaseBasicAllowance() {
    return {
        spend_limit: [],
        expiration: undefined
    };
}
exports.BasicAllowance = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.spend_limit){
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.expiration !== undefined) {
            timestamp_1.Timestamp.encode(message.expiration, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBasicAllowance();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.spend_limit.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.expiration = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            spend_limit: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.spend_limit) ? object.spend_limit.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            expiration: isSet(object.expiration) ? fromJsonTimestamp(object.expiration) : undefined
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.spend_limit) === null || _a === void 0 ? void 0 : _a.length) {
            obj.spend_limit = message.spend_limit.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.expiration !== undefined) {
            obj.expiration = fromTimestamp(message.expiration).toISOString();
        }
        return obj;
    },
    create (base) {
        return exports.BasicAllowance.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseBasicAllowance();
        message.spend_limit = ((_a = object.spend_limit) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.expiration = object.expiration !== undefined && object.expiration !== null ? timestamp_1.Timestamp.fromPartial(object.expiration) : undefined;
        return message;
    }
};
function createBasePeriodicAllowance() {
    return {
        basic: undefined,
        period: undefined,
        period_spend_limit: [],
        period_can_spend: [],
        period_reset: undefined
    };
}
exports.PeriodicAllowance = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.basic !== undefined) {
            exports.BasicAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();
        }
        if (message.period !== undefined) {
            duration_1.Duration.encode(message.period, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.period_spend_limit){
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.period_can_spend){
            coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();
        }
        if (message.period_reset !== undefined) {
            timestamp_1.Timestamp.encode(message.period_reset, writer.uint32(42).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePeriodicAllowance();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.basic = exports.BasicAllowance.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.period = duration_1.Duration.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.period_spend_limit.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.period_can_spend.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.period_reset = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            basic: isSet(object.basic) ? exports.BasicAllowance.fromJSON(object.basic) : undefined,
            period: isSet(object.period) ? duration_1.Duration.fromJSON(object.period) : undefined,
            period_spend_limit: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.period_spend_limit) ? object.period_spend_limit.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            period_can_spend: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.period_can_spend) ? object.period_can_spend.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            period_reset: isSet(object.period_reset) ? fromJsonTimestamp(object.period_reset) : undefined
        };
    },
    toJSON (message) {
        var _a, _b;
        const obj = {};
        if (message.basic !== undefined) {
            obj.basic = exports.BasicAllowance.toJSON(message.basic);
        }
        if (message.period !== undefined) {
            obj.period = duration_1.Duration.toJSON(message.period);
        }
        if ((_a = message.period_spend_limit) === null || _a === void 0 ? void 0 : _a.length) {
            obj.period_spend_limit = message.period_spend_limit.map((e)=>coin_1.Coin.toJSON(e));
        }
        if ((_b = message.period_can_spend) === null || _b === void 0 ? void 0 : _b.length) {
            obj.period_can_spend = message.period_can_spend.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.period_reset !== undefined) {
            obj.period_reset = fromTimestamp(message.period_reset).toISOString();
        }
        return obj;
    },
    create (base) {
        return exports.PeriodicAllowance.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBasePeriodicAllowance();
        message.basic = object.basic !== undefined && object.basic !== null ? exports.BasicAllowance.fromPartial(object.basic) : undefined;
        message.period = object.period !== undefined && object.period !== null ? duration_1.Duration.fromPartial(object.period) : undefined;
        message.period_spend_limit = ((_a = object.period_spend_limit) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.period_can_spend = ((_b = object.period_can_spend) === null || _b === void 0 ? void 0 : _b.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.period_reset = object.period_reset !== undefined && object.period_reset !== null ? timestamp_1.Timestamp.fromPartial(object.period_reset) : undefined;
        return message;
    }
};
function createBaseAllowedMsgAllowance() {
    return {
        allowance: undefined,
        allowed_messages: []
    };
}
exports.AllowedMsgAllowance = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.allowance !== undefined) {
            any_1.Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.allowed_messages){
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseAllowedMsgAllowance();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.allowance = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.allowed_messages.push(reader.string());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            allowance: isSet(object.allowance) ? any_1.Any.fromJSON(object.allowance) : undefined,
            allowed_messages: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.allowed_messages) ? object.allowed_messages.map((e)=>globalThis.String(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.allowance !== undefined) {
            obj.allowance = any_1.Any.toJSON(message.allowance);
        }
        if ((_a = message.allowed_messages) === null || _a === void 0 ? void 0 : _a.length) {
            obj.allowed_messages = message.allowed_messages;
        }
        return obj;
    },
    create (base) {
        return exports.AllowedMsgAllowance.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseAllowedMsgAllowance();
        message.allowance = object.allowance !== undefined && object.allowance !== null ? any_1.Any.fromPartial(object.allowance) : undefined;
        message.allowed_messages = ((_a = object.allowed_messages) === null || _a === void 0 ? void 0 : _a.map((e)=>e)) || [];
        return message;
    }
};
function createBaseGrant() {
    return {
        granter: "",
        grantee: "",
        allowance: undefined
    };
}
exports.Grant = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.granter !== "") {
            writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
            writer.uint32(18).string(message.grantee);
        }
        if (message.allowance !== undefined) {
            any_1.Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGrant();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.granter = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.grantee = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.allowance = any_1.Any.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            granter: isSet(object.granter) ? globalThis.String(object.granter) : "",
            grantee: isSet(object.grantee) ? globalThis.String(object.grantee) : "",
            allowance: isSet(object.allowance) ? any_1.Any.fromJSON(object.allowance) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.granter !== "") {
            obj.granter = message.granter;
        }
        if (message.grantee !== "") {
            obj.grantee = message.grantee;
        }
        if (message.allowance !== undefined) {
            obj.allowance = any_1.Any.toJSON(message.allowance);
        }
        return obj;
    },
    create (base) {
        return exports.Grant.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseGrant();
        message.granter = (_a = object.granter) !== null && _a !== void 0 ? _a : "";
        message.grantee = (_b = object.grantee) !== null && _b !== void 0 ? _b : "";
        message.allowance = object.allowance !== undefined && object.allowance !== null ? any_1.Any.fromPartial(object.allowance) : undefined;
        return message;
    }
};
function toTimestamp(date) {
    const seconds = Math.trunc(date.getTime() / 1000).toString();
    const nanos = date.getTime() % 1000 * 1000000;
    return {
        seconds,
        nanos
    };
}
function fromTimestamp(t) {
    let millis = (globalThis.Number(t.seconds) || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return toTimestamp(o);
    } else if (typeof o === "string") {
        return toTimestamp(new globalThis.Date(o));
    } else {
        return timestamp_1.Timestamp.fromJSON(o);
    }
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=feegrant.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/gov/v1beta1/gov.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/gov/v1beta1/gov.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TallyParams = exports.VotingParams = exports.DepositParams = exports.Vote = exports.TallyResult = exports.Proposal = exports.Deposit = exports.TextProposal = exports.WeightedVoteOption = exports.proposalStatusToJSON = exports.proposalStatusFromJSON = exports.ProposalStatus = exports.voteOptionToJSON = exports.voteOptionFromJSON = exports.VoteOption = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
const duration_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/duration.js [app-ssr] (ecmascript)");
const timestamp_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/timestamp.js [app-ssr] (ecmascript)");
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.gov.v1beta1";
/** VoteOption enumerates the valid vote options for a given governance proposal. */ var VoteOption;
(function(VoteOption) {
    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */ VoteOption[VoteOption["VOTE_OPTION_UNSPECIFIED"] = 0] = "VOTE_OPTION_UNSPECIFIED";
    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */ VoteOption[VoteOption["VOTE_OPTION_YES"] = 1] = "VOTE_OPTION_YES";
    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */ VoteOption[VoteOption["VOTE_OPTION_ABSTAIN"] = 2] = "VOTE_OPTION_ABSTAIN";
    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */ VoteOption[VoteOption["VOTE_OPTION_NO"] = 3] = "VOTE_OPTION_NO";
    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */ VoteOption[VoteOption["VOTE_OPTION_NO_WITH_VETO"] = 4] = "VOTE_OPTION_NO_WITH_VETO";
    VoteOption[VoteOption["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(VoteOption = exports.VoteOption || (exports.VoteOption = {}));
function voteOptionFromJSON(object) {
    switch(object){
        case 0:
        case "VOTE_OPTION_UNSPECIFIED":
            return VoteOption.VOTE_OPTION_UNSPECIFIED;
        case 1:
        case "VOTE_OPTION_YES":
            return VoteOption.VOTE_OPTION_YES;
        case 2:
        case "VOTE_OPTION_ABSTAIN":
            return VoteOption.VOTE_OPTION_ABSTAIN;
        case 3:
        case "VOTE_OPTION_NO":
            return VoteOption.VOTE_OPTION_NO;
        case 4:
        case "VOTE_OPTION_NO_WITH_VETO":
            return VoteOption.VOTE_OPTION_NO_WITH_VETO;
        case -1:
        case "UNRECOGNIZED":
        default:
            return VoteOption.UNRECOGNIZED;
    }
}
exports.voteOptionFromJSON = voteOptionFromJSON;
function voteOptionToJSON(object) {
    switch(object){
        case VoteOption.VOTE_OPTION_UNSPECIFIED:
            return "VOTE_OPTION_UNSPECIFIED";
        case VoteOption.VOTE_OPTION_YES:
            return "VOTE_OPTION_YES";
        case VoteOption.VOTE_OPTION_ABSTAIN:
            return "VOTE_OPTION_ABSTAIN";
        case VoteOption.VOTE_OPTION_NO:
            return "VOTE_OPTION_NO";
        case VoteOption.VOTE_OPTION_NO_WITH_VETO:
            return "VOTE_OPTION_NO_WITH_VETO";
        case VoteOption.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.voteOptionToJSON = voteOptionToJSON;
/** ProposalStatus enumerates the valid statuses of a proposal. */ var ProposalStatus;
(function(ProposalStatus) {
    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status. */ ProposalStatus[ProposalStatus["PROPOSAL_STATUS_UNSPECIFIED"] = 0] = "PROPOSAL_STATUS_UNSPECIFIED";
    /**
     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
     * period.
     */ ProposalStatus[ProposalStatus["PROPOSAL_STATUS_DEPOSIT_PERIOD"] = 1] = "PROPOSAL_STATUS_DEPOSIT_PERIOD";
    /**
     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
     * period.
     */ ProposalStatus[ProposalStatus["PROPOSAL_STATUS_VOTING_PERIOD"] = 2] = "PROPOSAL_STATUS_VOTING_PERIOD";
    /**
     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
     * passed.
     */ ProposalStatus[ProposalStatus["PROPOSAL_STATUS_PASSED"] = 3] = "PROPOSAL_STATUS_PASSED";
    /**
     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
     * been rejected.
     */ ProposalStatus[ProposalStatus["PROPOSAL_STATUS_REJECTED"] = 4] = "PROPOSAL_STATUS_REJECTED";
    /**
     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
     * failed.
     */ ProposalStatus[ProposalStatus["PROPOSAL_STATUS_FAILED"] = 5] = "PROPOSAL_STATUS_FAILED";
    ProposalStatus[ProposalStatus["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(ProposalStatus = exports.ProposalStatus || (exports.ProposalStatus = {}));
function proposalStatusFromJSON(object) {
    switch(object){
        case 0:
        case "PROPOSAL_STATUS_UNSPECIFIED":
            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;
        case 1:
        case "PROPOSAL_STATUS_DEPOSIT_PERIOD":
            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;
        case 2:
        case "PROPOSAL_STATUS_VOTING_PERIOD":
            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;
        case 3:
        case "PROPOSAL_STATUS_PASSED":
            return ProposalStatus.PROPOSAL_STATUS_PASSED;
        case 4:
        case "PROPOSAL_STATUS_REJECTED":
            return ProposalStatus.PROPOSAL_STATUS_REJECTED;
        case 5:
        case "PROPOSAL_STATUS_FAILED":
            return ProposalStatus.PROPOSAL_STATUS_FAILED;
        case -1:
        case "UNRECOGNIZED":
        default:
            return ProposalStatus.UNRECOGNIZED;
    }
}
exports.proposalStatusFromJSON = proposalStatusFromJSON;
function proposalStatusToJSON(object) {
    switch(object){
        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:
            return "PROPOSAL_STATUS_UNSPECIFIED";
        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:
            return "PROPOSAL_STATUS_DEPOSIT_PERIOD";
        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:
            return "PROPOSAL_STATUS_VOTING_PERIOD";
        case ProposalStatus.PROPOSAL_STATUS_PASSED:
            return "PROPOSAL_STATUS_PASSED";
        case ProposalStatus.PROPOSAL_STATUS_REJECTED:
            return "PROPOSAL_STATUS_REJECTED";
        case ProposalStatus.PROPOSAL_STATUS_FAILED:
            return "PROPOSAL_STATUS_FAILED";
        case ProposalStatus.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.proposalStatusToJSON = proposalStatusToJSON;
function createBaseWeightedVoteOption() {
    return {
        option: 0,
        weight: ""
    };
}
exports.WeightedVoteOption = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.option !== 0) {
            writer.uint32(8).int32(message.option);
        }
        if (message.weight !== "") {
            writer.uint32(18).string(message.weight);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseWeightedVoteOption();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.option = reader.int32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.weight = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            option: isSet(object.option) ? voteOptionFromJSON(object.option) : 0,
            weight: isSet(object.weight) ? globalThis.String(object.weight) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.option !== 0) {
            obj.option = voteOptionToJSON(message.option);
        }
        if (message.weight !== "") {
            obj.weight = message.weight;
        }
        return obj;
    },
    create (base) {
        return exports.WeightedVoteOption.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseWeightedVoteOption();
        message.option = (_a = object.option) !== null && _a !== void 0 ? _a : 0;
        message.weight = (_b = object.weight) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseTextProposal() {
    return {
        title: "",
        description: ""
    };
}
exports.TextProposal = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTextProposal();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.title = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.description = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            title: isSet(object.title) ? globalThis.String(object.title) : "",
            description: isSet(object.description) ? globalThis.String(object.description) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.title !== "") {
            obj.title = message.title;
        }
        if (message.description !== "") {
            obj.description = message.description;
        }
        return obj;
    },
    create (base) {
        return exports.TextProposal.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseTextProposal();
        message.title = (_a = object.title) !== null && _a !== void 0 ? _a : "";
        message.description = (_b = object.description) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseDeposit() {
    return {
        proposal_id: "0",
        depositor: "",
        amount: []
    };
}
exports.Deposit = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.proposal_id !== "0") {
            writer.uint32(8).uint64(message.proposal_id);
        }
        if (message.depositor !== "") {
            writer.uint32(18).string(message.depositor);
        }
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDeposit();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.proposal_id = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.depositor = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            proposal_id: isSet(object.proposal_id) ? globalThis.String(object.proposal_id) : "0",
            depositor: isSet(object.depositor) ? globalThis.String(object.depositor) : "",
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.proposal_id !== "0") {
            obj.proposal_id = message.proposal_id;
        }
        if (message.depositor !== "") {
            obj.depositor = message.depositor;
        }
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.Deposit.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseDeposit();
        message.proposal_id = (_a = object.proposal_id) !== null && _a !== void 0 ? _a : "0";
        message.depositor = (_b = object.depositor) !== null && _b !== void 0 ? _b : "";
        message.amount = ((_c = object.amount) === null || _c === void 0 ? void 0 : _c.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        return message;
    }
};
function createBaseProposal() {
    return {
        proposal_id: "0",
        content: undefined,
        status: 0,
        final_tally_result: undefined,
        submit_time: undefined,
        deposit_end_time: undefined,
        total_deposit: [],
        voting_start_time: undefined,
        voting_end_time: undefined
    };
}
exports.Proposal = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.proposal_id !== "0") {
            writer.uint32(8).uint64(message.proposal_id);
        }
        if (message.content !== undefined) {
            any_1.Any.encode(message.content, writer.uint32(18).fork()).ldelim();
        }
        if (message.status !== 0) {
            writer.uint32(24).int32(message.status);
        }
        if (message.final_tally_result !== undefined) {
            exports.TallyResult.encode(message.final_tally_result, writer.uint32(34).fork()).ldelim();
        }
        if (message.submit_time !== undefined) {
            timestamp_1.Timestamp.encode(message.submit_time, writer.uint32(42).fork()).ldelim();
        }
        if (message.deposit_end_time !== undefined) {
            timestamp_1.Timestamp.encode(message.deposit_end_time, writer.uint32(50).fork()).ldelim();
        }
        for (const v of message.total_deposit){
            coin_1.Coin.encode(v, writer.uint32(58).fork()).ldelim();
        }
        if (message.voting_start_time !== undefined) {
            timestamp_1.Timestamp.encode(message.voting_start_time, writer.uint32(66).fork()).ldelim();
        }
        if (message.voting_end_time !== undefined) {
            timestamp_1.Timestamp.encode(message.voting_end_time, writer.uint32(74).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseProposal();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.proposal_id = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.content = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.status = reader.int32();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.final_tally_result = exports.TallyResult.decode(reader, reader.uint32());
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.submit_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.deposit_end_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.total_deposit.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 8:
                    if (tag !== 66) {
                        break;
                    }
                    message.voting_start_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
                case 9:
                    if (tag !== 74) {
                        break;
                    }
                    message.voting_end_time = timestamp_1.Timestamp.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            proposal_id: isSet(object.proposal_id) ? globalThis.String(object.proposal_id) : "0",
            content: isSet(object.content) ? any_1.Any.fromJSON(object.content) : undefined,
            status: isSet(object.status) ? proposalStatusFromJSON(object.status) : 0,
            final_tally_result: isSet(object.final_tally_result) ? exports.TallyResult.fromJSON(object.final_tally_result) : undefined,
            submit_time: isSet(object.submit_time) ? fromJsonTimestamp(object.submit_time) : undefined,
            deposit_end_time: isSet(object.deposit_end_time) ? fromJsonTimestamp(object.deposit_end_time) : undefined,
            total_deposit: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.total_deposit) ? object.total_deposit.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            voting_start_time: isSet(object.voting_start_time) ? fromJsonTimestamp(object.voting_start_time) : undefined,
            voting_end_time: isSet(object.voting_end_time) ? fromJsonTimestamp(object.voting_end_time) : undefined
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.proposal_id !== "0") {
            obj.proposal_id = message.proposal_id;
        }
        if (message.content !== undefined) {
            obj.content = any_1.Any.toJSON(message.content);
        }
        if (message.status !== 0) {
            obj.status = proposalStatusToJSON(message.status);
        }
        if (message.final_tally_result !== undefined) {
            obj.final_tally_result = exports.TallyResult.toJSON(message.final_tally_result);
        }
        if (message.submit_time !== undefined) {
            obj.submit_time = fromTimestamp(message.submit_time).toISOString();
        }
        if (message.deposit_end_time !== undefined) {
            obj.deposit_end_time = fromTimestamp(message.deposit_end_time).toISOString();
        }
        if ((_a = message.total_deposit) === null || _a === void 0 ? void 0 : _a.length) {
            obj.total_deposit = message.total_deposit.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.voting_start_time !== undefined) {
            obj.voting_start_time = fromTimestamp(message.voting_start_time).toISOString();
        }
        if (message.voting_end_time !== undefined) {
            obj.voting_end_time = fromTimestamp(message.voting_end_time).toISOString();
        }
        return obj;
    },
    create (base) {
        return exports.Proposal.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseProposal();
        message.proposal_id = (_a = object.proposal_id) !== null && _a !== void 0 ? _a : "0";
        message.content = object.content !== undefined && object.content !== null ? any_1.Any.fromPartial(object.content) : undefined;
        message.status = (_b = object.status) !== null && _b !== void 0 ? _b : 0;
        message.final_tally_result = object.final_tally_result !== undefined && object.final_tally_result !== null ? exports.TallyResult.fromPartial(object.final_tally_result) : undefined;
        message.submit_time = object.submit_time !== undefined && object.submit_time !== null ? timestamp_1.Timestamp.fromPartial(object.submit_time) : undefined;
        message.deposit_end_time = object.deposit_end_time !== undefined && object.deposit_end_time !== null ? timestamp_1.Timestamp.fromPartial(object.deposit_end_time) : undefined;
        message.total_deposit = ((_c = object.total_deposit) === null || _c === void 0 ? void 0 : _c.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.voting_start_time = object.voting_start_time !== undefined && object.voting_start_time !== null ? timestamp_1.Timestamp.fromPartial(object.voting_start_time) : undefined;
        message.voting_end_time = object.voting_end_time !== undefined && object.voting_end_time !== null ? timestamp_1.Timestamp.fromPartial(object.voting_end_time) : undefined;
        return message;
    }
};
function createBaseTallyResult() {
    return {
        yes: "",
        abstain: "",
        no: "",
        no_with_veto: ""
    };
}
exports.TallyResult = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.yes !== "") {
            writer.uint32(10).string(message.yes);
        }
        if (message.abstain !== "") {
            writer.uint32(18).string(message.abstain);
        }
        if (message.no !== "") {
            writer.uint32(26).string(message.no);
        }
        if (message.no_with_veto !== "") {
            writer.uint32(34).string(message.no_with_veto);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTallyResult();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.yes = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.abstain = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.no = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.no_with_veto = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            yes: isSet(object.yes) ? globalThis.String(object.yes) : "",
            abstain: isSet(object.abstain) ? globalThis.String(object.abstain) : "",
            no: isSet(object.no) ? globalThis.String(object.no) : "",
            no_with_veto: isSet(object.no_with_veto) ? globalThis.String(object.no_with_veto) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.yes !== "") {
            obj.yes = message.yes;
        }
        if (message.abstain !== "") {
            obj.abstain = message.abstain;
        }
        if (message.no !== "") {
            obj.no = message.no;
        }
        if (message.no_with_veto !== "") {
            obj.no_with_veto = message.no_with_veto;
        }
        return obj;
    },
    create (base) {
        return exports.TallyResult.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseTallyResult();
        message.yes = (_a = object.yes) !== null && _a !== void 0 ? _a : "";
        message.abstain = (_b = object.abstain) !== null && _b !== void 0 ? _b : "";
        message.no = (_c = object.no) !== null && _c !== void 0 ? _c : "";
        message.no_with_veto = (_d = object.no_with_veto) !== null && _d !== void 0 ? _d : "";
        return message;
    }
};
function createBaseVote() {
    return {
        proposal_id: "0",
        voter: "",
        option: 0,
        options: []
    };
}
exports.Vote = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.proposal_id !== "0") {
            writer.uint32(8).uint64(message.proposal_id);
        }
        if (message.voter !== "") {
            writer.uint32(18).string(message.voter);
        }
        if (message.option !== 0) {
            writer.uint32(24).int32(message.option);
        }
        for (const v of message.options){
            exports.WeightedVoteOption.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseVote();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.proposal_id = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.voter = reader.string();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.option = reader.int32();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.options.push(exports.WeightedVoteOption.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            proposal_id: isSet(object.proposal_id) ? globalThis.String(object.proposal_id) : "0",
            voter: isSet(object.voter) ? globalThis.String(object.voter) : "",
            option: isSet(object.option) ? voteOptionFromJSON(object.option) : 0,
            options: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.options) ? object.options.map((e)=>exports.WeightedVoteOption.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.proposal_id !== "0") {
            obj.proposal_id = message.proposal_id;
        }
        if (message.voter !== "") {
            obj.voter = message.voter;
        }
        if (message.option !== 0) {
            obj.option = voteOptionToJSON(message.option);
        }
        if ((_a = message.options) === null || _a === void 0 ? void 0 : _a.length) {
            obj.options = message.options.map((e)=>exports.WeightedVoteOption.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.Vote.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseVote();
        message.proposal_id = (_a = object.proposal_id) !== null && _a !== void 0 ? _a : "0";
        message.voter = (_b = object.voter) !== null && _b !== void 0 ? _b : "";
        message.option = (_c = object.option) !== null && _c !== void 0 ? _c : 0;
        message.options = ((_d = object.options) === null || _d === void 0 ? void 0 : _d.map((e)=>exports.WeightedVoteOption.fromPartial(e))) || [];
        return message;
    }
};
function createBaseDepositParams() {
    return {
        min_deposit: [],
        max_deposit_period: undefined
    };
}
exports.DepositParams = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.min_deposit){
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.max_deposit_period !== undefined) {
            duration_1.Duration.encode(message.max_deposit_period, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDepositParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.min_deposit.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.max_deposit_period = duration_1.Duration.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            min_deposit: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.min_deposit) ? object.min_deposit.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            max_deposit_period: isSet(object.max_deposit_period) ? duration_1.Duration.fromJSON(object.max_deposit_period) : undefined
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.min_deposit) === null || _a === void 0 ? void 0 : _a.length) {
            obj.min_deposit = message.min_deposit.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.max_deposit_period !== undefined) {
            obj.max_deposit_period = duration_1.Duration.toJSON(message.max_deposit_period);
        }
        return obj;
    },
    create (base) {
        return exports.DepositParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseDepositParams();
        message.min_deposit = ((_a = object.min_deposit) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.max_deposit_period = object.max_deposit_period !== undefined && object.max_deposit_period !== null ? duration_1.Duration.fromPartial(object.max_deposit_period) : undefined;
        return message;
    }
};
function createBaseVotingParams() {
    return {
        voting_period: undefined
    };
}
exports.VotingParams = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.voting_period !== undefined) {
            duration_1.Duration.encode(message.voting_period, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseVotingParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.voting_period = duration_1.Duration.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            voting_period: isSet(object.voting_period) ? duration_1.Duration.fromJSON(object.voting_period) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.voting_period !== undefined) {
            obj.voting_period = duration_1.Duration.toJSON(message.voting_period);
        }
        return obj;
    },
    create (base) {
        return exports.VotingParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseVotingParams();
        message.voting_period = object.voting_period !== undefined && object.voting_period !== null ? duration_1.Duration.fromPartial(object.voting_period) : undefined;
        return message;
    }
};
function createBaseTallyParams() {
    return {
        quorum: new Uint8Array(0),
        threshold: new Uint8Array(0),
        veto_threshold: new Uint8Array(0)
    };
}
exports.TallyParams = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.quorum.length !== 0) {
            writer.uint32(10).bytes(message.quorum);
        }
        if (message.threshold.length !== 0) {
            writer.uint32(18).bytes(message.threshold);
        }
        if (message.veto_threshold.length !== 0) {
            writer.uint32(26).bytes(message.veto_threshold);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTallyParams();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.quorum = reader.bytes();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.threshold = reader.bytes();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.veto_threshold = reader.bytes();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            quorum: isSet(object.quorum) ? bytesFromBase64(object.quorum) : new Uint8Array(0),
            threshold: isSet(object.threshold) ? bytesFromBase64(object.threshold) : new Uint8Array(0),
            veto_threshold: isSet(object.veto_threshold) ? bytesFromBase64(object.veto_threshold) : new Uint8Array(0)
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.quorum.length !== 0) {
            obj.quorum = base64FromBytes(message.quorum);
        }
        if (message.threshold.length !== 0) {
            obj.threshold = base64FromBytes(message.threshold);
        }
        if (message.veto_threshold.length !== 0) {
            obj.veto_threshold = base64FromBytes(message.veto_threshold);
        }
        return obj;
    },
    create (base) {
        return exports.TallyParams.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseTallyParams();
        message.quorum = (_a = object.quorum) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.threshold = (_b = object.threshold) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.veto_threshold = (_c = object.veto_threshold) !== null && _c !== void 0 ? _c : new Uint8Array(0);
        return message;
    }
};
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    } else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for(let i = 0; i < bin.length; ++i){
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    } else {
        const bin = [];
        arr.forEach((byte)=>{
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function toTimestamp(date) {
    const seconds = Math.trunc(date.getTime() / 1000).toString();
    const nanos = date.getTime() % 1000 * 1000000;
    return {
        seconds,
        nanos
    };
}
function fromTimestamp(t) {
    let millis = (globalThis.Number(t.seconds) || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return toTimestamp(o);
    } else if (typeof o === "string") {
        return toTimestamp(new globalThis.Date(o));
    } else {
        return timestamp_1.Timestamp.fromJSON(o);
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=gov.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/params/v1beta1/params.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/params/v1beta1/params.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ParamChange = exports.ParameterChangeProposal = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
exports.protobufPackage = "cosmos.params.v1beta1";
function createBaseParameterChangeProposal() {
    return {
        title: "",
        description: "",
        changes: []
    };
}
exports.ParameterChangeProposal = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        for (const v of message.changes){
            exports.ParamChange.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParameterChangeProposal();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.title = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.description = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.changes.push(exports.ParamChange.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            title: isSet(object.title) ? globalThis.String(object.title) : "",
            description: isSet(object.description) ? globalThis.String(object.description) : "",
            changes: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.changes) ? object.changes.map((e)=>exports.ParamChange.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.title !== "") {
            obj.title = message.title;
        }
        if (message.description !== "") {
            obj.description = message.description;
        }
        if ((_a = message.changes) === null || _a === void 0 ? void 0 : _a.length) {
            obj.changes = message.changes.map((e)=>exports.ParamChange.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.ParameterChangeProposal.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseParameterChangeProposal();
        message.title = (_a = object.title) !== null && _a !== void 0 ? _a : "";
        message.description = (_b = object.description) !== null && _b !== void 0 ? _b : "";
        message.changes = ((_c = object.changes) === null || _c === void 0 ? void 0 : _c.map((e)=>exports.ParamChange.fromPartial(e))) || [];
        return message;
    }
};
function createBaseParamChange() {
    return {
        subspace: "",
        key: "",
        value: ""
    };
}
exports.ParamChange = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.subspace !== "") {
            writer.uint32(10).string(message.subspace);
        }
        if (message.key !== "") {
            writer.uint32(18).string(message.key);
        }
        if (message.value !== "") {
            writer.uint32(26).string(message.value);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParamChange();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.subspace = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.key = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.value = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            subspace: isSet(object.subspace) ? globalThis.String(object.subspace) : "",
            key: isSet(object.key) ? globalThis.String(object.key) : "",
            value: isSet(object.value) ? globalThis.String(object.value) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.subspace !== "") {
            obj.subspace = message.subspace;
        }
        if (message.key !== "") {
            obj.key = message.key;
        }
        if (message.value !== "") {
            obj.value = message.value;
        }
        return obj;
    },
    create (base) {
        return exports.ParamChange.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseParamChange();
        message.subspace = (_a = object.subspace) !== null && _a !== void 0 ? _a : "";
        message.key = (_b = object.key) !== null && _b !== void 0 ? _b : "";
        message.value = (_c = object.value) !== null && _c !== void 0 ? _c : "";
        return message;
    }
};
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=params.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/crypto/ed25519/keys.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/crypto/ed25519/keys.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
exports.protobufPackage = "cosmos.crypto.ed25519";
function createBasePubKey() {
    return {
        key: new Uint8Array(0)
    };
}
exports.PubKey = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
            writer.uint32(10).bytes(message.key);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePubKey();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.key = reader.bytes();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(0)
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.key.length !== 0) {
            obj.key = base64FromBytes(message.key);
        }
        return obj;
    },
    create (base) {
        return exports.PubKey.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBasePubKey();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        return message;
    }
};
function createBasePrivKey() {
    return {
        key: new Uint8Array(0)
    };
}
exports.PrivKey = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.key.length !== 0) {
            writer.uint32(10).bytes(message.key);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePrivKey();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.key = reader.bytes();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(0)
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.key.length !== 0) {
            obj.key = base64FromBytes(message.key);
        }
        return obj;
    },
    create (base) {
        return exports.PrivKey.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBasePrivKey();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        return message;
    }
};
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    } else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for(let i = 0; i < bin.length; ++i){
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    } else {
        const bin = [];
        arr.forEach((byte)=>{
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=keys.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/abci/v1beta1/abci.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/base/abci/v1beta1/abci.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SearchBlocksResult = exports.SearchTxsResult = exports.TxMsgData = exports.MsgData = exports.SimulationResponse = exports.Result = exports.GasInfo = exports.Attribute = exports.StringEvent = exports.ABCIMessageLog = exports.TxResponse = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
const types_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/tendermint/abci/types.js [app-ssr] (ecmascript)");
const block_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/tendermint/types/block.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.base.abci.v1beta1";
function createBaseTxResponse() {
    return {
        height: "0",
        txhash: "",
        codespace: "",
        code: 0,
        data: "",
        raw_log: "",
        logs: [],
        info: "",
        gas_wanted: "0",
        gas_used: "0",
        tx: undefined,
        timestamp: "",
        events: []
    };
}
exports.TxResponse = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.height !== "0") {
            writer.uint32(8).int64(message.height);
        }
        if (message.txhash !== "") {
            writer.uint32(18).string(message.txhash);
        }
        if (message.codespace !== "") {
            writer.uint32(26).string(message.codespace);
        }
        if (message.code !== 0) {
            writer.uint32(32).uint32(message.code);
        }
        if (message.data !== "") {
            writer.uint32(42).string(message.data);
        }
        if (message.raw_log !== "") {
            writer.uint32(50).string(message.raw_log);
        }
        for (const v of message.logs){
            exports.ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();
        }
        if (message.info !== "") {
            writer.uint32(66).string(message.info);
        }
        if (message.gas_wanted !== "0") {
            writer.uint32(72).int64(message.gas_wanted);
        }
        if (message.gas_used !== "0") {
            writer.uint32(80).int64(message.gas_used);
        }
        if (message.tx !== undefined) {
            any_1.Any.encode(message.tx, writer.uint32(90).fork()).ldelim();
        }
        if (message.timestamp !== "") {
            writer.uint32(98).string(message.timestamp);
        }
        for (const v of message.events){
            types_1.Event.encode(v, writer.uint32(106).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTxResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.height = longToString(reader.int64());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.txhash = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.codespace = reader.string();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.code = reader.uint32();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.data = reader.string();
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.raw_log = reader.string();
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.logs.push(exports.ABCIMessageLog.decode(reader, reader.uint32()));
                    continue;
                case 8:
                    if (tag !== 66) {
                        break;
                    }
                    message.info = reader.string();
                    continue;
                case 9:
                    if (tag !== 72) {
                        break;
                    }
                    message.gas_wanted = longToString(reader.int64());
                    continue;
                case 10:
                    if (tag !== 80) {
                        break;
                    }
                    message.gas_used = longToString(reader.int64());
                    continue;
                case 11:
                    if (tag !== 90) {
                        break;
                    }
                    message.tx = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 12:
                    if (tag !== 98) {
                        break;
                    }
                    message.timestamp = reader.string();
                    continue;
                case 13:
                    if (tag !== 106) {
                        break;
                    }
                    message.events.push(types_1.Event.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            height: isSet(object.height) ? globalThis.String(object.height) : "0",
            txhash: isSet(object.txhash) ? globalThis.String(object.txhash) : "",
            codespace: isSet(object.codespace) ? globalThis.String(object.codespace) : "",
            code: isSet(object.code) ? globalThis.Number(object.code) : 0,
            data: isSet(object.data) ? globalThis.String(object.data) : "",
            raw_log: isSet(object.raw_log) ? globalThis.String(object.raw_log) : "",
            logs: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.logs) ? object.logs.map((e)=>exports.ABCIMessageLog.fromJSON(e)) : [],
            info: isSet(object.info) ? globalThis.String(object.info) : "",
            gas_wanted: isSet(object.gas_wanted) ? globalThis.String(object.gas_wanted) : "0",
            gas_used: isSet(object.gas_used) ? globalThis.String(object.gas_used) : "0",
            tx: isSet(object.tx) ? any_1.Any.fromJSON(object.tx) : undefined,
            timestamp: isSet(object.timestamp) ? globalThis.String(object.timestamp) : "",
            events: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map((e)=>types_1.Event.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a, _b;
        const obj = {};
        if (message.height !== "0") {
            obj.height = message.height;
        }
        if (message.txhash !== "") {
            obj.txhash = message.txhash;
        }
        if (message.codespace !== "") {
            obj.codespace = message.codespace;
        }
        if (message.code !== 0) {
            obj.code = Math.round(message.code);
        }
        if (message.data !== "") {
            obj.data = message.data;
        }
        if (message.raw_log !== "") {
            obj.raw_log = message.raw_log;
        }
        if ((_a = message.logs) === null || _a === void 0 ? void 0 : _a.length) {
            obj.logs = message.logs.map((e)=>exports.ABCIMessageLog.toJSON(e));
        }
        if (message.info !== "") {
            obj.info = message.info;
        }
        if (message.gas_wanted !== "0") {
            obj.gas_wanted = message.gas_wanted;
        }
        if (message.gas_used !== "0") {
            obj.gas_used = message.gas_used;
        }
        if (message.tx !== undefined) {
            obj.tx = any_1.Any.toJSON(message.tx);
        }
        if (message.timestamp !== "") {
            obj.timestamp = message.timestamp;
        }
        if ((_b = message.events) === null || _b === void 0 ? void 0 : _b.length) {
            obj.events = message.events.map((e)=>types_1.Event.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.TxResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
        const message = createBaseTxResponse();
        message.height = (_a = object.height) !== null && _a !== void 0 ? _a : "0";
        message.txhash = (_b = object.txhash) !== null && _b !== void 0 ? _b : "";
        message.codespace = (_c = object.codespace) !== null && _c !== void 0 ? _c : "";
        message.code = (_d = object.code) !== null && _d !== void 0 ? _d : 0;
        message.data = (_e = object.data) !== null && _e !== void 0 ? _e : "";
        message.raw_log = (_f = object.raw_log) !== null && _f !== void 0 ? _f : "";
        message.logs = ((_g = object.logs) === null || _g === void 0 ? void 0 : _g.map((e)=>exports.ABCIMessageLog.fromPartial(e))) || [];
        message.info = (_h = object.info) !== null && _h !== void 0 ? _h : "";
        message.gas_wanted = (_j = object.gas_wanted) !== null && _j !== void 0 ? _j : "0";
        message.gas_used = (_k = object.gas_used) !== null && _k !== void 0 ? _k : "0";
        message.tx = object.tx !== undefined && object.tx !== null ? any_1.Any.fromPartial(object.tx) : undefined;
        message.timestamp = (_l = object.timestamp) !== null && _l !== void 0 ? _l : "";
        message.events = ((_m = object.events) === null || _m === void 0 ? void 0 : _m.map((e)=>types_1.Event.fromPartial(e))) || [];
        return message;
    }
};
function createBaseABCIMessageLog() {
    return {
        msg_index: 0,
        log: "",
        events: []
    };
}
exports.ABCIMessageLog = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.msg_index !== 0) {
            writer.uint32(8).uint32(message.msg_index);
        }
        if (message.log !== "") {
            writer.uint32(18).string(message.log);
        }
        for (const v of message.events){
            exports.StringEvent.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseABCIMessageLog();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.msg_index = reader.uint32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.log = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.events.push(exports.StringEvent.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            msg_index: isSet(object.msg_index) ? globalThis.Number(object.msg_index) : 0,
            log: isSet(object.log) ? globalThis.String(object.log) : "",
            events: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map((e)=>exports.StringEvent.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.msg_index !== 0) {
            obj.msg_index = Math.round(message.msg_index);
        }
        if (message.log !== "") {
            obj.log = message.log;
        }
        if ((_a = message.events) === null || _a === void 0 ? void 0 : _a.length) {
            obj.events = message.events.map((e)=>exports.StringEvent.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.ABCIMessageLog.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseABCIMessageLog();
        message.msg_index = (_a = object.msg_index) !== null && _a !== void 0 ? _a : 0;
        message.log = (_b = object.log) !== null && _b !== void 0 ? _b : "";
        message.events = ((_c = object.events) === null || _c === void 0 ? void 0 : _c.map((e)=>exports.StringEvent.fromPartial(e))) || [];
        return message;
    }
};
function createBaseStringEvent() {
    return {
        type: "",
        attributes: []
    };
}
exports.StringEvent = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.type !== "") {
            writer.uint32(10).string(message.type);
        }
        for (const v of message.attributes){
            exports.Attribute.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseStringEvent();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.type = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.attributes.push(exports.Attribute.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            type: isSet(object.type) ? globalThis.String(object.type) : "",
            attributes: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.attributes) ? object.attributes.map((e)=>exports.Attribute.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.type !== "") {
            obj.type = message.type;
        }
        if ((_a = message.attributes) === null || _a === void 0 ? void 0 : _a.length) {
            obj.attributes = message.attributes.map((e)=>exports.Attribute.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.StringEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseStringEvent();
        message.type = (_a = object.type) !== null && _a !== void 0 ? _a : "";
        message.attributes = ((_b = object.attributes) === null || _b === void 0 ? void 0 : _b.map((e)=>exports.Attribute.fromPartial(e))) || [];
        return message;
    }
};
function createBaseAttribute() {
    return {
        key: "",
        value: ""
    };
}
exports.Attribute = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== "") {
            writer.uint32(18).string(message.value);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseAttribute();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.key = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.value = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            key: isSet(object.key) ? globalThis.String(object.key) : "",
            value: isSet(object.value) ? globalThis.String(object.value) : ""
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.key !== "") {
            obj.key = message.key;
        }
        if (message.value !== "") {
            obj.value = message.value;
        }
        return obj;
    },
    create (base) {
        return exports.Attribute.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseAttribute();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseGasInfo() {
    return {
        gas_wanted: "0",
        gas_used: "0"
    };
}
exports.GasInfo = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.gas_wanted !== "0") {
            writer.uint32(8).uint64(message.gas_wanted);
        }
        if (message.gas_used !== "0") {
            writer.uint32(16).uint64(message.gas_used);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGasInfo();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.gas_wanted = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.gas_used = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            gas_wanted: isSet(object.gas_wanted) ? globalThis.String(object.gas_wanted) : "0",
            gas_used: isSet(object.gas_used) ? globalThis.String(object.gas_used) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.gas_wanted !== "0") {
            obj.gas_wanted = message.gas_wanted;
        }
        if (message.gas_used !== "0") {
            obj.gas_used = message.gas_used;
        }
        return obj;
    },
    create (base) {
        return exports.GasInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseGasInfo();
        message.gas_wanted = (_a = object.gas_wanted) !== null && _a !== void 0 ? _a : "0";
        message.gas_used = (_b = object.gas_used) !== null && _b !== void 0 ? _b : "0";
        return message;
    }
};
function createBaseResult() {
    return {
        data: new Uint8Array(0),
        log: "",
        events: [],
        msg_responses: []
    };
}
exports.Result = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.data.length !== 0) {
            writer.uint32(10).bytes(message.data);
        }
        if (message.log !== "") {
            writer.uint32(18).string(message.log);
        }
        for (const v of message.events){
            types_1.Event.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.msg_responses){
            any_1.Any.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseResult();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.data = reader.bytes();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.log = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.events.push(types_1.Event.decode(reader, reader.uint32()));
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.msg_responses.push(any_1.Any.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(0),
            log: isSet(object.log) ? globalThis.String(object.log) : "",
            events: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map((e)=>types_1.Event.fromJSON(e)) : [],
            msg_responses: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.msg_responses) ? object.msg_responses.map((e)=>any_1.Any.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a, _b;
        const obj = {};
        if (message.data.length !== 0) {
            obj.data = base64FromBytes(message.data);
        }
        if (message.log !== "") {
            obj.log = message.log;
        }
        if ((_a = message.events) === null || _a === void 0 ? void 0 : _a.length) {
            obj.events = message.events.map((e)=>types_1.Event.toJSON(e));
        }
        if ((_b = message.msg_responses) === null || _b === void 0 ? void 0 : _b.length) {
            obj.msg_responses = message.msg_responses.map((e)=>any_1.Any.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.Result.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseResult();
        message.data = (_a = object.data) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.log = (_b = object.log) !== null && _b !== void 0 ? _b : "";
        message.events = ((_c = object.events) === null || _c === void 0 ? void 0 : _c.map((e)=>types_1.Event.fromPartial(e))) || [];
        message.msg_responses = ((_d = object.msg_responses) === null || _d === void 0 ? void 0 : _d.map((e)=>any_1.Any.fromPartial(e))) || [];
        return message;
    }
};
function createBaseSimulationResponse() {
    return {
        gas_info: undefined,
        result: undefined
    };
}
exports.SimulationResponse = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.gas_info !== undefined) {
            exports.GasInfo.encode(message.gas_info, writer.uint32(10).fork()).ldelim();
        }
        if (message.result !== undefined) {
            exports.Result.encode(message.result, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSimulationResponse();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.gas_info = exports.GasInfo.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.result = exports.Result.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            gas_info: isSet(object.gas_info) ? exports.GasInfo.fromJSON(object.gas_info) : undefined,
            result: isSet(object.result) ? exports.Result.fromJSON(object.result) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.gas_info !== undefined) {
            obj.gas_info = exports.GasInfo.toJSON(message.gas_info);
        }
        if (message.result !== undefined) {
            obj.result = exports.Result.toJSON(message.result);
        }
        return obj;
    },
    create (base) {
        return exports.SimulationResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseSimulationResponse();
        message.gas_info = object.gas_info !== undefined && object.gas_info !== null ? exports.GasInfo.fromPartial(object.gas_info) : undefined;
        message.result = object.result !== undefined && object.result !== null ? exports.Result.fromPartial(object.result) : undefined;
        return message;
    }
};
function createBaseMsgData() {
    return {
        msg_type: "",
        data: new Uint8Array(0)
    };
}
exports.MsgData = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.msg_type !== "") {
            writer.uint32(10).string(message.msg_type);
        }
        if (message.data.length !== 0) {
            writer.uint32(18).bytes(message.data);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgData();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.msg_type = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.data = reader.bytes();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            msg_type: isSet(object.msg_type) ? globalThis.String(object.msg_type) : "",
            data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(0)
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.msg_type !== "") {
            obj.msg_type = message.msg_type;
        }
        if (message.data.length !== 0) {
            obj.data = base64FromBytes(message.data);
        }
        return obj;
    },
    create (base) {
        return exports.MsgData.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseMsgData();
        message.msg_type = (_a = object.msg_type) !== null && _a !== void 0 ? _a : "";
        message.data = (_b = object.data) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        return message;
    }
};
function createBaseTxMsgData() {
    return {
        data: [],
        msg_responses: []
    };
}
exports.TxMsgData = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.data){
            exports.MsgData.encode(v, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.msg_responses){
            any_1.Any.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTxMsgData();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.data.push(exports.MsgData.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.msg_responses.push(any_1.Any.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            data: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.data) ? object.data.map((e)=>exports.MsgData.fromJSON(e)) : [],
            msg_responses: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.msg_responses) ? object.msg_responses.map((e)=>any_1.Any.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a, _b;
        const obj = {};
        if ((_a = message.data) === null || _a === void 0 ? void 0 : _a.length) {
            obj.data = message.data.map((e)=>exports.MsgData.toJSON(e));
        }
        if ((_b = message.msg_responses) === null || _b === void 0 ? void 0 : _b.length) {
            obj.msg_responses = message.msg_responses.map((e)=>any_1.Any.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.TxMsgData.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseTxMsgData();
        message.data = ((_a = object.data) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.MsgData.fromPartial(e))) || [];
        message.msg_responses = ((_b = object.msg_responses) === null || _b === void 0 ? void 0 : _b.map((e)=>any_1.Any.fromPartial(e))) || [];
        return message;
    }
};
function createBaseSearchTxsResult() {
    return {
        total_count: "0",
        count: "0",
        page_number: "0",
        page_total: "0",
        limit: "0",
        txs: []
    };
}
exports.SearchTxsResult = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.total_count !== "0") {
            writer.uint32(8).uint64(message.total_count);
        }
        if (message.count !== "0") {
            writer.uint32(16).uint64(message.count);
        }
        if (message.page_number !== "0") {
            writer.uint32(24).uint64(message.page_number);
        }
        if (message.page_total !== "0") {
            writer.uint32(32).uint64(message.page_total);
        }
        if (message.limit !== "0") {
            writer.uint32(40).uint64(message.limit);
        }
        for (const v of message.txs){
            exports.TxResponse.encode(v, writer.uint32(50).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSearchTxsResult();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.total_count = longToString(reader.uint64());
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.count = longToString(reader.uint64());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.page_number = longToString(reader.uint64());
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.page_total = longToString(reader.uint64());
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.limit = longToString(reader.uint64());
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.txs.push(exports.TxResponse.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            total_count: isSet(object.total_count) ? globalThis.String(object.total_count) : "0",
            count: isSet(object.count) ? globalThis.String(object.count) : "0",
            page_number: isSet(object.page_number) ? globalThis.String(object.page_number) : "0",
            page_total: isSet(object.page_total) ? globalThis.String(object.page_total) : "0",
            limit: isSet(object.limit) ? globalThis.String(object.limit) : "0",
            txs: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.txs) ? object.txs.map((e)=>exports.TxResponse.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.total_count !== "0") {
            obj.total_count = message.total_count;
        }
        if (message.count !== "0") {
            obj.count = message.count;
        }
        if (message.page_number !== "0") {
            obj.page_number = message.page_number;
        }
        if (message.page_total !== "0") {
            obj.page_total = message.page_total;
        }
        if (message.limit !== "0") {
            obj.limit = message.limit;
        }
        if ((_a = message.txs) === null || _a === void 0 ? void 0 : _a.length) {
            obj.txs = message.txs.map((e)=>exports.TxResponse.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.SearchTxsResult.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e, _f;
        const message = createBaseSearchTxsResult();
        message.total_count = (_a = object.total_count) !== null && _a !== void 0 ? _a : "0";
        message.count = (_b = object.count) !== null && _b !== void 0 ? _b : "0";
        message.page_number = (_c = object.page_number) !== null && _c !== void 0 ? _c : "0";
        message.page_total = (_d = object.page_total) !== null && _d !== void 0 ? _d : "0";
        message.limit = (_e = object.limit) !== null && _e !== void 0 ? _e : "0";
        message.txs = ((_f = object.txs) === null || _f === void 0 ? void 0 : _f.map((e)=>exports.TxResponse.fromPartial(e))) || [];
        return message;
    }
};
function createBaseSearchBlocksResult() {
    return {
        total_count: "0",
        count: "0",
        page_number: "0",
        page_total: "0",
        limit: "0",
        blocks: []
    };
}
exports.SearchBlocksResult = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.total_count !== "0") {
            writer.uint32(8).int64(message.total_count);
        }
        if (message.count !== "0") {
            writer.uint32(16).int64(message.count);
        }
        if (message.page_number !== "0") {
            writer.uint32(24).int64(message.page_number);
        }
        if (message.page_total !== "0") {
            writer.uint32(32).int64(message.page_total);
        }
        if (message.limit !== "0") {
            writer.uint32(40).int64(message.limit);
        }
        for (const v of message.blocks){
            block_1.Block.encode(v, writer.uint32(50).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSearchBlocksResult();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.total_count = longToString(reader.int64());
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.count = longToString(reader.int64());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.page_number = longToString(reader.int64());
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.page_total = longToString(reader.int64());
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.limit = longToString(reader.int64());
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.blocks.push(block_1.Block.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            total_count: isSet(object.total_count) ? globalThis.String(object.total_count) : "0",
            count: isSet(object.count) ? globalThis.String(object.count) : "0",
            page_number: isSet(object.page_number) ? globalThis.String(object.page_number) : "0",
            page_total: isSet(object.page_total) ? globalThis.String(object.page_total) : "0",
            limit: isSet(object.limit) ? globalThis.String(object.limit) : "0",
            blocks: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.blocks) ? object.blocks.map((e)=>block_1.Block.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.total_count !== "0") {
            obj.total_count = message.total_count;
        }
        if (message.count !== "0") {
            obj.count = message.count;
        }
        if (message.page_number !== "0") {
            obj.page_number = message.page_number;
        }
        if (message.page_total !== "0") {
            obj.page_total = message.page_total;
        }
        if (message.limit !== "0") {
            obj.limit = message.limit;
        }
        if ((_a = message.blocks) === null || _a === void 0 ? void 0 : _a.length) {
            obj.blocks = message.blocks.map((e)=>block_1.Block.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.SearchBlocksResult.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e, _f;
        const message = createBaseSearchBlocksResult();
        message.total_count = (_a = object.total_count) !== null && _a !== void 0 ? _a : "0";
        message.count = (_b = object.count) !== null && _b !== void 0 ? _b : "0";
        message.page_number = (_c = object.page_number) !== null && _c !== void 0 ? _c : "0";
        message.page_total = (_d = object.page_total) !== null && _d !== void 0 ? _d : "0";
        message.limit = (_e = object.limit) !== null && _e !== void 0 ? _e : "0";
        message.blocks = ((_f = object.blocks) === null || _f === void 0 ? void 0 : _f.map((e)=>block_1.Block.fromPartial(e))) || [];
        return message;
    }
};
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    } else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for(let i = 0; i < bin.length; ++i){
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    } else {
        const bin = [];
        arr.forEach((byte)=>{
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=abci.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/crypto/multisig/v1beta1/multisig.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/crypto/multisig/v1beta1/multisig.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CompactBitArray = exports.MultiSignature = exports.protobufPackage = void 0;
/* eslint-disable */ const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
exports.protobufPackage = "cosmos.crypto.multisig.v1beta1";
function createBaseMultiSignature() {
    return {
        signatures: []
    };
}
exports.MultiSignature = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.signatures){
            writer.uint32(10).bytes(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMultiSignature();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.signatures.push(reader.bytes());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            signatures: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map((e)=>bytesFromBase64(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.signatures) === null || _a === void 0 ? void 0 : _a.length) {
            obj.signatures = message.signatures.map((e)=>base64FromBytes(e));
        }
        return obj;
    },
    create (base) {
        return exports.MultiSignature.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseMultiSignature();
        message.signatures = ((_a = object.signatures) === null || _a === void 0 ? void 0 : _a.map((e)=>e)) || [];
        return message;
    }
};
function createBaseCompactBitArray() {
    return {
        extra_bits_stored: 0,
        elems: new Uint8Array(0)
    };
}
exports.CompactBitArray = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.extra_bits_stored !== 0) {
            writer.uint32(8).uint32(message.extra_bits_stored);
        }
        if (message.elems.length !== 0) {
            writer.uint32(18).bytes(message.elems);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCompactBitArray();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.extra_bits_stored = reader.uint32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.elems = reader.bytes();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            extra_bits_stored: isSet(object.extra_bits_stored) ? globalThis.Number(object.extra_bits_stored) : 0,
            elems: isSet(object.elems) ? bytesFromBase64(object.elems) : new Uint8Array(0)
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.extra_bits_stored !== 0) {
            obj.extra_bits_stored = Math.round(message.extra_bits_stored);
        }
        if (message.elems.length !== 0) {
            obj.elems = base64FromBytes(message.elems);
        }
        return obj;
    },
    create (base) {
        return exports.CompactBitArray.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseCompactBitArray();
        message.extra_bits_stored = (_a = object.extra_bits_stored) !== null && _a !== void 0 ? _a : 0;
        message.elems = (_b = object.elems) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        return message;
    }
};
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    } else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for(let i = 0; i < bin.length; ++i){
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    } else {
        const bin = [];
        arr.forEach((byte)=>{
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=multisig.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/tx/signing/v1beta1/signing.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/tx/signing/v1beta1/signing.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SignatureDescriptor_Data_Multi = exports.SignatureDescriptor_Data_Single = exports.SignatureDescriptor_Data = exports.SignatureDescriptor = exports.SignatureDescriptors = exports.signModeToJSON = exports.signModeFromJSON = exports.SignMode = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
const multisig_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/crypto/multisig/v1beta1/multisig.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.tx.signing.v1beta1";
/**
 * SignMode represents a signing mode with its own security guarantees.
 *
 * This enum should be considered a registry of all known sign modes
 * in the Cosmos ecosystem. Apps are not expected to support all known
 * sign modes. Apps that would like to support custom  sign modes are
 * encouraged to open a small PR against this file to add a new case
 * to this SignMode enum describing their sign mode so that different
 * apps have a consistent version of this enum.
 */ var SignMode;
(function(SignMode) {
    /**
     * SIGN_MODE_UNSPECIFIED - SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
     * rejected.
     */ SignMode[SignMode["SIGN_MODE_UNSPECIFIED"] = 0] = "SIGN_MODE_UNSPECIFIED";
    /**
     * SIGN_MODE_DIRECT - SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
     * verified with raw bytes from Tx.
     */ SignMode[SignMode["SIGN_MODE_DIRECT"] = 1] = "SIGN_MODE_DIRECT";
    /**
     * SIGN_MODE_TEXTUAL - SIGN_MODE_TEXTUAL is a future signing mode that will verify some
     * human-readable textual representation on top of the binary representation
     * from SIGN_MODE_DIRECT.
     *
     * Since: cosmos-sdk 0.50
     */ SignMode[SignMode["SIGN_MODE_TEXTUAL"] = 2] = "SIGN_MODE_TEXTUAL";
    /**
     * SIGN_MODE_DIRECT_AUX - SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
     * SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
     * require signers signing over other signers' `signer_info`.
     *
     * Since: cosmos-sdk 0.46
     */ SignMode[SignMode["SIGN_MODE_DIRECT_AUX"] = 3] = "SIGN_MODE_DIRECT_AUX";
    /**
     * SIGN_MODE_LEGACY_AMINO_JSON - SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
     * Amino JSON and will be removed in the future.
     */ SignMode[SignMode["SIGN_MODE_LEGACY_AMINO_JSON"] = 127] = "SIGN_MODE_LEGACY_AMINO_JSON";
    /**
     * SIGN_MODE_EIP_191 - SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
     * SDK. Ref: https://eips.ethereum.org/EIPS/eip-191
     *
     * Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
     * but is not implemented on the SDK by default. To enable EIP-191, you need
     * to pass a custom `TxConfig` that has an implementation of
     * `SignModeHandler` for EIP-191. The SDK may decide to fully support
     * EIP-191 in the future.
     *
     * Since: cosmos-sdk 0.45.2
     */ SignMode[SignMode["SIGN_MODE_EIP_191"] = 191] = "SIGN_MODE_EIP_191";
    SignMode[SignMode["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(SignMode = exports.SignMode || (exports.SignMode = {}));
function signModeFromJSON(object) {
    switch(object){
        case 0:
        case "SIGN_MODE_UNSPECIFIED":
            return SignMode.SIGN_MODE_UNSPECIFIED;
        case 1:
        case "SIGN_MODE_DIRECT":
            return SignMode.SIGN_MODE_DIRECT;
        case 2:
        case "SIGN_MODE_TEXTUAL":
            return SignMode.SIGN_MODE_TEXTUAL;
        case 3:
        case "SIGN_MODE_DIRECT_AUX":
            return SignMode.SIGN_MODE_DIRECT_AUX;
        case 127:
        case "SIGN_MODE_LEGACY_AMINO_JSON":
            return SignMode.SIGN_MODE_LEGACY_AMINO_JSON;
        case 191:
        case "SIGN_MODE_EIP_191":
            return SignMode.SIGN_MODE_EIP_191;
        case -1:
        case "UNRECOGNIZED":
        default:
            return SignMode.UNRECOGNIZED;
    }
}
exports.signModeFromJSON = signModeFromJSON;
function signModeToJSON(object) {
    switch(object){
        case SignMode.SIGN_MODE_UNSPECIFIED:
            return "SIGN_MODE_UNSPECIFIED";
        case SignMode.SIGN_MODE_DIRECT:
            return "SIGN_MODE_DIRECT";
        case SignMode.SIGN_MODE_TEXTUAL:
            return "SIGN_MODE_TEXTUAL";
        case SignMode.SIGN_MODE_DIRECT_AUX:
            return "SIGN_MODE_DIRECT_AUX";
        case SignMode.SIGN_MODE_LEGACY_AMINO_JSON:
            return "SIGN_MODE_LEGACY_AMINO_JSON";
        case SignMode.SIGN_MODE_EIP_191:
            return "SIGN_MODE_EIP_191";
        case SignMode.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.signModeToJSON = signModeToJSON;
function createBaseSignatureDescriptors() {
    return {
        signatures: []
    };
}
exports.SignatureDescriptors = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.signatures){
            exports.SignatureDescriptor.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptors();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.signatures.push(exports.SignatureDescriptor.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            signatures: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map((e)=>exports.SignatureDescriptor.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.signatures) === null || _a === void 0 ? void 0 : _a.length) {
            obj.signatures = message.signatures.map((e)=>exports.SignatureDescriptor.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.SignatureDescriptors.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseSignatureDescriptors();
        message.signatures = ((_a = object.signatures) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.SignatureDescriptor.fromPartial(e))) || [];
        return message;
    }
};
function createBaseSignatureDescriptor() {
    return {
        public_key: undefined,
        data: undefined,
        sequence: "0"
    };
}
exports.SignatureDescriptor = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.public_key !== undefined) {
            any_1.Any.encode(message.public_key, writer.uint32(10).fork()).ldelim();
        }
        if (message.data !== undefined) {
            exports.SignatureDescriptor_Data.encode(message.data, writer.uint32(18).fork()).ldelim();
        }
        if (message.sequence !== "0") {
            writer.uint32(24).uint64(message.sequence);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.public_key = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.data = exports.SignatureDescriptor_Data.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.sequence = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            public_key: isSet(object.public_key) ? any_1.Any.fromJSON(object.public_key) : undefined,
            data: isSet(object.data) ? exports.SignatureDescriptor_Data.fromJSON(object.data) : undefined,
            sequence: isSet(object.sequence) ? globalThis.String(object.sequence) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.public_key !== undefined) {
            obj.public_key = any_1.Any.toJSON(message.public_key);
        }
        if (message.data !== undefined) {
            obj.data = exports.SignatureDescriptor_Data.toJSON(message.data);
        }
        if (message.sequence !== "0") {
            obj.sequence = message.sequence;
        }
        return obj;
    },
    create (base) {
        return exports.SignatureDescriptor.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseSignatureDescriptor();
        message.public_key = object.public_key !== undefined && object.public_key !== null ? any_1.Any.fromPartial(object.public_key) : undefined;
        message.data = object.data !== undefined && object.data !== null ? exports.SignatureDescriptor_Data.fromPartial(object.data) : undefined;
        message.sequence = (_a = object.sequence) !== null && _a !== void 0 ? _a : "0";
        return message;
    }
};
function createBaseSignatureDescriptor_Data() {
    return {
        single: undefined,
        multi: undefined
    };
}
exports.SignatureDescriptor_Data = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.single !== undefined) {
            exports.SignatureDescriptor_Data_Single.encode(message.single, writer.uint32(10).fork()).ldelim();
        }
        if (message.multi !== undefined) {
            exports.SignatureDescriptor_Data_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor_Data();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.single = exports.SignatureDescriptor_Data_Single.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.multi = exports.SignatureDescriptor_Data_Multi.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            single: isSet(object.single) ? exports.SignatureDescriptor_Data_Single.fromJSON(object.single) : undefined,
            multi: isSet(object.multi) ? exports.SignatureDescriptor_Data_Multi.fromJSON(object.multi) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.single !== undefined) {
            obj.single = exports.SignatureDescriptor_Data_Single.toJSON(message.single);
        }
        if (message.multi !== undefined) {
            obj.multi = exports.SignatureDescriptor_Data_Multi.toJSON(message.multi);
        }
        return obj;
    },
    create (base) {
        return exports.SignatureDescriptor_Data.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseSignatureDescriptor_Data();
        message.single = object.single !== undefined && object.single !== null ? exports.SignatureDescriptor_Data_Single.fromPartial(object.single) : undefined;
        message.multi = object.multi !== undefined && object.multi !== null ? exports.SignatureDescriptor_Data_Multi.fromPartial(object.multi) : undefined;
        return message;
    }
};
function createBaseSignatureDescriptor_Data_Single() {
    return {
        mode: 0,
        signature: new Uint8Array(0)
    };
}
exports.SignatureDescriptor_Data_Single = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.mode !== 0) {
            writer.uint32(8).int32(message.mode);
        }
        if (message.signature.length !== 0) {
            writer.uint32(18).bytes(message.signature);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor_Data_Single();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.mode = reader.int32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.signature = reader.bytes();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            mode: isSet(object.mode) ? signModeFromJSON(object.mode) : 0,
            signature: isSet(object.signature) ? bytesFromBase64(object.signature) : new Uint8Array(0)
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.mode !== 0) {
            obj.mode = signModeToJSON(message.mode);
        }
        if (message.signature.length !== 0) {
            obj.signature = base64FromBytes(message.signature);
        }
        return obj;
    },
    create (base) {
        return exports.SignatureDescriptor_Data_Single.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseSignatureDescriptor_Data_Single();
        message.mode = (_a = object.mode) !== null && _a !== void 0 ? _a : 0;
        message.signature = (_b = object.signature) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        return message;
    }
};
function createBaseSignatureDescriptor_Data_Multi() {
    return {
        bitarray: undefined,
        signatures: []
    };
}
exports.SignatureDescriptor_Data_Multi = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.bitarray !== undefined) {
            multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.signatures){
            exports.SignatureDescriptor_Data.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignatureDescriptor_Data_Multi();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.signatures.push(exports.SignatureDescriptor_Data.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            bitarray: isSet(object.bitarray) ? multisig_1.CompactBitArray.fromJSON(object.bitarray) : undefined,
            signatures: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map((e)=>exports.SignatureDescriptor_Data.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.bitarray !== undefined) {
            obj.bitarray = multisig_1.CompactBitArray.toJSON(message.bitarray);
        }
        if ((_a = message.signatures) === null || _a === void 0 ? void 0 : _a.length) {
            obj.signatures = message.signatures.map((e)=>exports.SignatureDescriptor_Data.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.SignatureDescriptor_Data_Multi.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseSignatureDescriptor_Data_Multi();
        message.bitarray = object.bitarray !== undefined && object.bitarray !== null ? multisig_1.CompactBitArray.fromPartial(object.bitarray) : undefined;
        message.signatures = ((_a = object.signatures) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.SignatureDescriptor_Data.fromPartial(e))) || [];
        return message;
    }
};
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    } else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for(let i = 0; i < bin.length; ++i){
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    } else {
        const bin = [];
        arr.forEach((byte)=>{
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=signing.js.map
}}),
"[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/tx/v1beta1/tx.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               v3.21.3
// source: cosmos/tx/v1beta1/tx.proto
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AuxSignerData = exports.Tip = exports.Fee = exports.ModeInfo_Multi = exports.ModeInfo_Single = exports.ModeInfo = exports.SignerInfo = exports.AuthInfo = exports.TxBody = exports.SignDocDirectAux = exports.SignDoc = exports.TxRaw = exports.Tx = exports.protobufPackage = void 0;
/* eslint-disable */ const long_1 = __importDefault(__turbopack_require__("[project]/node_modules/.pnpm/long@5.3.1/node_modules/long/umd/index.js [app-ssr] (ecmascript)"));
const _m0 = __importStar(__turbopack_require__("[project]/node_modules/.pnpm/protobufjs@7.2.5/node_modules/protobufjs/minimal.js [app-ssr] (ecmascript)"));
const any_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/google/protobuf/any.js [app-ssr] (ecmascript)");
const coin_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/base/v1beta1/coin.js [app-ssr] (ecmascript)");
const multisig_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/crypto/multisig/v1beta1/multisig.js [app-ssr] (ecmascript)");
const signing_1 = __turbopack_require__("[project]/node_modules/.pnpm/secretjs@1.15.1_encoding@0.1.13/node_modules/secretjs/dist/protobuf/cosmos/tx/signing/v1beta1/signing.js [app-ssr] (ecmascript)");
exports.protobufPackage = "cosmos.tx.v1beta1";
function createBaseTx() {
    return {
        body: undefined,
        auth_info: undefined,
        signatures: []
    };
}
exports.Tx = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.body !== undefined) {
            exports.TxBody.encode(message.body, writer.uint32(10).fork()).ldelim();
        }
        if (message.auth_info !== undefined) {
            exports.AuthInfo.encode(message.auth_info, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.signatures){
            writer.uint32(26).bytes(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTx();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.body = exports.TxBody.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.auth_info = exports.AuthInfo.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.signatures.push(reader.bytes());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            body: isSet(object.body) ? exports.TxBody.fromJSON(object.body) : undefined,
            auth_info: isSet(object.auth_info) ? exports.AuthInfo.fromJSON(object.auth_info) : undefined,
            signatures: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map((e)=>bytesFromBase64(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.body !== undefined) {
            obj.body = exports.TxBody.toJSON(message.body);
        }
        if (message.auth_info !== undefined) {
            obj.auth_info = exports.AuthInfo.toJSON(message.auth_info);
        }
        if ((_a = message.signatures) === null || _a === void 0 ? void 0 : _a.length) {
            obj.signatures = message.signatures.map((e)=>base64FromBytes(e));
        }
        return obj;
    },
    create (base) {
        return exports.Tx.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseTx();
        message.body = object.body !== undefined && object.body !== null ? exports.TxBody.fromPartial(object.body) : undefined;
        message.auth_info = object.auth_info !== undefined && object.auth_info !== null ? exports.AuthInfo.fromPartial(object.auth_info) : undefined;
        message.signatures = ((_a = object.signatures) === null || _a === void 0 ? void 0 : _a.map((e)=>e)) || [];
        return message;
    }
};
function createBaseTxRaw() {
    return {
        body_bytes: new Uint8Array(0),
        auth_info_bytes: new Uint8Array(0),
        signatures: []
    };
}
exports.TxRaw = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.body_bytes.length !== 0) {
            writer.uint32(10).bytes(message.body_bytes);
        }
        if (message.auth_info_bytes.length !== 0) {
            writer.uint32(18).bytes(message.auth_info_bytes);
        }
        for (const v of message.signatures){
            writer.uint32(26).bytes(v);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTxRaw();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.body_bytes = reader.bytes();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.auth_info_bytes = reader.bytes();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.signatures.push(reader.bytes());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            body_bytes: isSet(object.body_bytes) ? bytesFromBase64(object.body_bytes) : new Uint8Array(0),
            auth_info_bytes: isSet(object.auth_info_bytes) ? bytesFromBase64(object.auth_info_bytes) : new Uint8Array(0),
            signatures: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map((e)=>bytesFromBase64(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.body_bytes.length !== 0) {
            obj.body_bytes = base64FromBytes(message.body_bytes);
        }
        if (message.auth_info_bytes.length !== 0) {
            obj.auth_info_bytes = base64FromBytes(message.auth_info_bytes);
        }
        if ((_a = message.signatures) === null || _a === void 0 ? void 0 : _a.length) {
            obj.signatures = message.signatures.map((e)=>base64FromBytes(e));
        }
        return obj;
    },
    create (base) {
        return exports.TxRaw.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseTxRaw();
        message.body_bytes = (_a = object.body_bytes) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.auth_info_bytes = (_b = object.auth_info_bytes) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.signatures = ((_c = object.signatures) === null || _c === void 0 ? void 0 : _c.map((e)=>e)) || [];
        return message;
    }
};
function createBaseSignDoc() {
    return {
        body_bytes: new Uint8Array(0),
        auth_info_bytes: new Uint8Array(0),
        chain_id: "",
        account_number: "0"
    };
}
exports.SignDoc = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.body_bytes.length !== 0) {
            writer.uint32(10).bytes(message.body_bytes);
        }
        if (message.auth_info_bytes.length !== 0) {
            writer.uint32(18).bytes(message.auth_info_bytes);
        }
        if (message.chain_id !== "") {
            writer.uint32(26).string(message.chain_id);
        }
        if (message.account_number !== "0") {
            writer.uint32(32).uint64(message.account_number);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignDoc();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.body_bytes = reader.bytes();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.auth_info_bytes = reader.bytes();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.chain_id = reader.string();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.account_number = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            body_bytes: isSet(object.body_bytes) ? bytesFromBase64(object.body_bytes) : new Uint8Array(0),
            auth_info_bytes: isSet(object.auth_info_bytes) ? bytesFromBase64(object.auth_info_bytes) : new Uint8Array(0),
            chain_id: isSet(object.chain_id) ? globalThis.String(object.chain_id) : "",
            account_number: isSet(object.account_number) ? globalThis.String(object.account_number) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.body_bytes.length !== 0) {
            obj.body_bytes = base64FromBytes(message.body_bytes);
        }
        if (message.auth_info_bytes.length !== 0) {
            obj.auth_info_bytes = base64FromBytes(message.auth_info_bytes);
        }
        if (message.chain_id !== "") {
            obj.chain_id = message.chain_id;
        }
        if (message.account_number !== "0") {
            obj.account_number = message.account_number;
        }
        return obj;
    },
    create (base) {
        return exports.SignDoc.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseSignDoc();
        message.body_bytes = (_a = object.body_bytes) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.auth_info_bytes = (_b = object.auth_info_bytes) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.chain_id = (_c = object.chain_id) !== null && _c !== void 0 ? _c : "";
        message.account_number = (_d = object.account_number) !== null && _d !== void 0 ? _d : "0";
        return message;
    }
};
function createBaseSignDocDirectAux() {
    return {
        body_bytes: new Uint8Array(0),
        public_key: undefined,
        chain_id: "",
        account_number: "0",
        sequence: "0",
        tip: undefined
    };
}
exports.SignDocDirectAux = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.body_bytes.length !== 0) {
            writer.uint32(10).bytes(message.body_bytes);
        }
        if (message.public_key !== undefined) {
            any_1.Any.encode(message.public_key, writer.uint32(18).fork()).ldelim();
        }
        if (message.chain_id !== "") {
            writer.uint32(26).string(message.chain_id);
        }
        if (message.account_number !== "0") {
            writer.uint32(32).uint64(message.account_number);
        }
        if (message.sequence !== "0") {
            writer.uint32(40).uint64(message.sequence);
        }
        if (message.tip !== undefined) {
            exports.Tip.encode(message.tip, writer.uint32(50).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignDocDirectAux();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.body_bytes = reader.bytes();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.public_key = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.chain_id = reader.string();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.account_number = longToString(reader.uint64());
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.sequence = longToString(reader.uint64());
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.tip = exports.Tip.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            body_bytes: isSet(object.body_bytes) ? bytesFromBase64(object.body_bytes) : new Uint8Array(0),
            public_key: isSet(object.public_key) ? any_1.Any.fromJSON(object.public_key) : undefined,
            chain_id: isSet(object.chain_id) ? globalThis.String(object.chain_id) : "",
            account_number: isSet(object.account_number) ? globalThis.String(object.account_number) : "0",
            sequence: isSet(object.sequence) ? globalThis.String(object.sequence) : "0",
            tip: isSet(object.tip) ? exports.Tip.fromJSON(object.tip) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.body_bytes.length !== 0) {
            obj.body_bytes = base64FromBytes(message.body_bytes);
        }
        if (message.public_key !== undefined) {
            obj.public_key = any_1.Any.toJSON(message.public_key);
        }
        if (message.chain_id !== "") {
            obj.chain_id = message.chain_id;
        }
        if (message.account_number !== "0") {
            obj.account_number = message.account_number;
        }
        if (message.sequence !== "0") {
            obj.sequence = message.sequence;
        }
        if (message.tip !== undefined) {
            obj.tip = exports.Tip.toJSON(message.tip);
        }
        return obj;
    },
    create (base) {
        return exports.SignDocDirectAux.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseSignDocDirectAux();
        message.body_bytes = (_a = object.body_bytes) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.public_key = object.public_key !== undefined && object.public_key !== null ? any_1.Any.fromPartial(object.public_key) : undefined;
        message.chain_id = (_b = object.chain_id) !== null && _b !== void 0 ? _b : "";
        message.account_number = (_c = object.account_number) !== null && _c !== void 0 ? _c : "0";
        message.sequence = (_d = object.sequence) !== null && _d !== void 0 ? _d : "0";
        message.tip = object.tip !== undefined && object.tip !== null ? exports.Tip.fromPartial(object.tip) : undefined;
        return message;
    }
};
function createBaseTxBody() {
    return {
        messages: [],
        memo: "",
        timeout_height: "0",
        extension_options: [],
        non_critical_extension_options: []
    };
}
exports.TxBody = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.messages){
            any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.memo !== "") {
            writer.uint32(18).string(message.memo);
        }
        if (message.timeout_height !== "0") {
            writer.uint32(24).uint64(message.timeout_height);
        }
        for (const v of message.extension_options){
            any_1.Any.encode(v, writer.uint32(8186).fork()).ldelim();
        }
        for (const v of message.non_critical_extension_options){
            any_1.Any.encode(v, writer.uint32(16378).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTxBody();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.messages.push(any_1.Any.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.memo = reader.string();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.timeout_height = longToString(reader.uint64());
                    continue;
                case 1023:
                    if (tag !== 8186) {
                        break;
                    }
                    message.extension_options.push(any_1.Any.decode(reader, reader.uint32()));
                    continue;
                case 2047:
                    if (tag !== 16378) {
                        break;
                    }
                    message.non_critical_extension_options.push(any_1.Any.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            messages: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.messages) ? object.messages.map((e)=>any_1.Any.fromJSON(e)) : [],
            memo: isSet(object.memo) ? globalThis.String(object.memo) : "",
            timeout_height: isSet(object.timeout_height) ? globalThis.String(object.timeout_height) : "0",
            extension_options: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.extension_options) ? object.extension_options.map((e)=>any_1.Any.fromJSON(e)) : [],
            non_critical_extension_options: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.non_critical_extension_options) ? object.non_critical_extension_options.map((e)=>any_1.Any.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a, _b, _c;
        const obj = {};
        if ((_a = message.messages) === null || _a === void 0 ? void 0 : _a.length) {
            obj.messages = message.messages.map((e)=>any_1.Any.toJSON(e));
        }
        if (message.memo !== "") {
            obj.memo = message.memo;
        }
        if (message.timeout_height !== "0") {
            obj.timeout_height = message.timeout_height;
        }
        if ((_b = message.extension_options) === null || _b === void 0 ? void 0 : _b.length) {
            obj.extension_options = message.extension_options.map((e)=>any_1.Any.toJSON(e));
        }
        if ((_c = message.non_critical_extension_options) === null || _c === void 0 ? void 0 : _c.length) {
            obj.non_critical_extension_options = message.non_critical_extension_options.map((e)=>any_1.Any.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.TxBody.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseTxBody();
        message.messages = ((_a = object.messages) === null || _a === void 0 ? void 0 : _a.map((e)=>any_1.Any.fromPartial(e))) || [];
        message.memo = (_b = object.memo) !== null && _b !== void 0 ? _b : "";
        message.timeout_height = (_c = object.timeout_height) !== null && _c !== void 0 ? _c : "0";
        message.extension_options = ((_d = object.extension_options) === null || _d === void 0 ? void 0 : _d.map((e)=>any_1.Any.fromPartial(e))) || [];
        message.non_critical_extension_options = ((_e = object.non_critical_extension_options) === null || _e === void 0 ? void 0 : _e.map((e)=>any_1.Any.fromPartial(e))) || [];
        return message;
    }
};
function createBaseAuthInfo() {
    return {
        signer_infos: [],
        fee: undefined,
        tip: undefined
    };
}
exports.AuthInfo = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.signer_infos){
            exports.SignerInfo.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.fee !== undefined) {
            exports.Fee.encode(message.fee, writer.uint32(18).fork()).ldelim();
        }
        if (message.tip !== undefined) {
            exports.Tip.encode(message.tip, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseAuthInfo();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.signer_infos.push(exports.SignerInfo.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.fee = exports.Fee.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.tip = exports.Tip.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            signer_infos: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.signer_infos) ? object.signer_infos.map((e)=>exports.SignerInfo.fromJSON(e)) : [],
            fee: isSet(object.fee) ? exports.Fee.fromJSON(object.fee) : undefined,
            tip: isSet(object.tip) ? exports.Tip.fromJSON(object.tip) : undefined
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.signer_infos) === null || _a === void 0 ? void 0 : _a.length) {
            obj.signer_infos = message.signer_infos.map((e)=>exports.SignerInfo.toJSON(e));
        }
        if (message.fee !== undefined) {
            obj.fee = exports.Fee.toJSON(message.fee);
        }
        if (message.tip !== undefined) {
            obj.tip = exports.Tip.toJSON(message.tip);
        }
        return obj;
    },
    create (base) {
        return exports.AuthInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseAuthInfo();
        message.signer_infos = ((_a = object.signer_infos) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.SignerInfo.fromPartial(e))) || [];
        message.fee = object.fee !== undefined && object.fee !== null ? exports.Fee.fromPartial(object.fee) : undefined;
        message.tip = object.tip !== undefined && object.tip !== null ? exports.Tip.fromPartial(object.tip) : undefined;
        return message;
    }
};
function createBaseSignerInfo() {
    return {
        public_key: undefined,
        mode_info: undefined,
        sequence: "0"
    };
}
exports.SignerInfo = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.public_key !== undefined) {
            any_1.Any.encode(message.public_key, writer.uint32(10).fork()).ldelim();
        }
        if (message.mode_info !== undefined) {
            exports.ModeInfo.encode(message.mode_info, writer.uint32(18).fork()).ldelim();
        }
        if (message.sequence !== "0") {
            writer.uint32(24).uint64(message.sequence);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSignerInfo();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.public_key = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.mode_info = exports.ModeInfo.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.sequence = longToString(reader.uint64());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            public_key: isSet(object.public_key) ? any_1.Any.fromJSON(object.public_key) : undefined,
            mode_info: isSet(object.mode_info) ? exports.ModeInfo.fromJSON(object.mode_info) : undefined,
            sequence: isSet(object.sequence) ? globalThis.String(object.sequence) : "0"
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.public_key !== undefined) {
            obj.public_key = any_1.Any.toJSON(message.public_key);
        }
        if (message.mode_info !== undefined) {
            obj.mode_info = exports.ModeInfo.toJSON(message.mode_info);
        }
        if (message.sequence !== "0") {
            obj.sequence = message.sequence;
        }
        return obj;
    },
    create (base) {
        return exports.SignerInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseSignerInfo();
        message.public_key = object.public_key !== undefined && object.public_key !== null ? any_1.Any.fromPartial(object.public_key) : undefined;
        message.mode_info = object.mode_info !== undefined && object.mode_info !== null ? exports.ModeInfo.fromPartial(object.mode_info) : undefined;
        message.sequence = (_a = object.sequence) !== null && _a !== void 0 ? _a : "0";
        return message;
    }
};
function createBaseModeInfo() {
    return {
        single: undefined,
        multi: undefined
    };
}
exports.ModeInfo = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.single !== undefined) {
            exports.ModeInfo_Single.encode(message.single, writer.uint32(10).fork()).ldelim();
        }
        if (message.multi !== undefined) {
            exports.ModeInfo_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseModeInfo();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.single = exports.ModeInfo_Single.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.multi = exports.ModeInfo_Multi.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            single: isSet(object.single) ? exports.ModeInfo_Single.fromJSON(object.single) : undefined,
            multi: isSet(object.multi) ? exports.ModeInfo_Multi.fromJSON(object.multi) : undefined
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.single !== undefined) {
            obj.single = exports.ModeInfo_Single.toJSON(message.single);
        }
        if (message.multi !== undefined) {
            obj.multi = exports.ModeInfo_Multi.toJSON(message.multi);
        }
        return obj;
    },
    create (base) {
        return exports.ModeInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        const message = createBaseModeInfo();
        message.single = object.single !== undefined && object.single !== null ? exports.ModeInfo_Single.fromPartial(object.single) : undefined;
        message.multi = object.multi !== undefined && object.multi !== null ? exports.ModeInfo_Multi.fromPartial(object.multi) : undefined;
        return message;
    }
};
function createBaseModeInfo_Single() {
    return {
        mode: 0
    };
}
exports.ModeInfo_Single = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.mode !== 0) {
            writer.uint32(8).int32(message.mode);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseModeInfo_Single();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.mode = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            mode: isSet(object.mode) ? (0, signing_1.signModeFromJSON)(object.mode) : 0
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.mode !== 0) {
            obj.mode = (0, signing_1.signModeToJSON)(message.mode);
        }
        return obj;
    },
    create (base) {
        return exports.ModeInfo_Single.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseModeInfo_Single();
        message.mode = (_a = object.mode) !== null && _a !== void 0 ? _a : 0;
        return message;
    }
};
function createBaseModeInfo_Multi() {
    return {
        bitarray: undefined,
        mode_infos: []
    };
}
exports.ModeInfo_Multi = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.bitarray !== undefined) {
            multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.mode_infos){
            exports.ModeInfo.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseModeInfo_Multi();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.mode_infos.push(exports.ModeInfo.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            bitarray: isSet(object.bitarray) ? multisig_1.CompactBitArray.fromJSON(object.bitarray) : undefined,
            mode_infos: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.mode_infos) ? object.mode_infos.map((e)=>exports.ModeInfo.fromJSON(e)) : []
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if (message.bitarray !== undefined) {
            obj.bitarray = multisig_1.CompactBitArray.toJSON(message.bitarray);
        }
        if ((_a = message.mode_infos) === null || _a === void 0 ? void 0 : _a.length) {
            obj.mode_infos = message.mode_infos.map((e)=>exports.ModeInfo.toJSON(e));
        }
        return obj;
    },
    create (base) {
        return exports.ModeInfo_Multi.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a;
        const message = createBaseModeInfo_Multi();
        message.bitarray = object.bitarray !== undefined && object.bitarray !== null ? multisig_1.CompactBitArray.fromPartial(object.bitarray) : undefined;
        message.mode_infos = ((_a = object.mode_infos) === null || _a === void 0 ? void 0 : _a.map((e)=>exports.ModeInfo.fromPartial(e))) || [];
        return message;
    }
};
function createBaseFee() {
    return {
        amount: [],
        gas_limit: "0",
        payer: "",
        granter: ""
    };
}
exports.Fee = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.gas_limit !== "0") {
            writer.uint32(16).uint64(message.gas_limit);
        }
        if (message.payer !== "") {
            writer.uint32(26).string(message.payer);
        }
        if (message.granter !== "") {
            writer.uint32(34).string(message.granter);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseFee();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.gas_limit = longToString(reader.uint64());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.payer = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.granter = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            gas_limit: isSet(object.gas_limit) ? globalThis.String(object.gas_limit) : "0",
            payer: isSet(object.payer) ? globalThis.String(object.payer) : "",
            granter: isSet(object.granter) ? globalThis.String(object.granter) : ""
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.gas_limit !== "0") {
            obj.gas_limit = message.gas_limit;
        }
        if (message.payer !== "") {
            obj.payer = message.payer;
        }
        if (message.granter !== "") {
            obj.granter = message.granter;
        }
        return obj;
    },
    create (base) {
        return exports.Fee.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c, _d;
        const message = createBaseFee();
        message.amount = ((_a = object.amount) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.gas_limit = (_b = object.gas_limit) !== null && _b !== void 0 ? _b : "0";
        message.payer = (_c = object.payer) !== null && _c !== void 0 ? _c : "";
        message.granter = (_d = object.granter) !== null && _d !== void 0 ? _d : "";
        return message;
    }
};
function createBaseTip() {
    return {
        amount: [],
        tipper: ""
    };
}
exports.Tip = {
    encode (message, writer = _m0.Writer.create()) {
        for (const v of message.amount){
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.tipper !== "") {
            writer.uint32(18).string(message.tipper);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseTip();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.tipper = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            amount: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map((e)=>coin_1.Coin.fromJSON(e)) : [],
            tipper: isSet(object.tipper) ? globalThis.String(object.tipper) : ""
        };
    },
    toJSON (message) {
        var _a;
        const obj = {};
        if ((_a = message.amount) === null || _a === void 0 ? void 0 : _a.length) {
            obj.amount = message.amount.map((e)=>coin_1.Coin.toJSON(e));
        }
        if (message.tipper !== "") {
            obj.tipper = message.tipper;
        }
        return obj;
    },
    create (base) {
        return exports.Tip.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b;
        const message = createBaseTip();
        message.amount = ((_a = object.amount) === null || _a === void 0 ? void 0 : _a.map((e)=>coin_1.Coin.fromPartial(e))) || [];
        message.tipper = (_b = object.tipper) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseAuxSignerData() {
    return {
        address: "",
        sign_doc: undefined,
        mode: 0,
        sig: new Uint8Array(0)
    };
}
exports.AuxSignerData = {
    encode (message, writer = _m0.Writer.create()) {
        if (message.address !== "") {
            writer.uint32(10).string(message.address);
        }
        if (message.sign_doc !== undefined) {
            exports.SignDocDirectAux.encode(message.sign_doc, writer.uint32(18).fork()).ldelim();
        }
        if (message.mode !== 0) {
            writer.uint32(24).int32(message.mode);
        }
        if (message.sig.length !== 0) {
            writer.uint32(34).bytes(message.sig);
        }
        return writer;
    },
    decode (input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseAuxSignerData();
        while(reader.pos < end){
            const tag = reader.uint32();
            switch(tag >>> 3){
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.address = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.sign_doc = exports.SignDocDirectAux.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.mode = reader.int32();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.sig = reader.bytes();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON (object) {
        return {
            address: isSet(object.address) ? globalThis.String(object.address) : "",
            sign_doc: isSet(object.sign_doc) ? exports.SignDocDirectAux.fromJSON(object.sign_doc) : undefined,
            mode: isSet(object.mode) ? (0, signing_1.signModeFromJSON)(object.mode) : 0,
            sig: isSet(object.sig) ? bytesFromBase64(object.sig) : new Uint8Array(0)
        };
    },
    toJSON (message) {
        const obj = {};
        if (message.address !== "") {
            obj.address = message.address;
        }
        if (message.sign_doc !== undefined) {
            obj.sign_doc = exports.SignDocDirectAux.toJSON(message.sign_doc);
        }
        if (message.mode !== 0) {
            obj.mode = (0, signing_1.signModeToJSON)(message.mode);
        }
        if (message.sig.length !== 0) {
            obj.sig = base64FromBytes(message.sig);
        }
        return obj;
    },
    create (base) {
        return exports.AuxSignerData.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial (object) {
        var _a, _b, _c;
        const message = createBaseAuxSignerData();
        message.address = (_a = object.address) !== null && _a !== void 0 ? _a : "";
        message.sign_doc = object.sign_doc !== undefined && object.sign_doc !== null ? exports.SignDocDirectAux.fromPartial(object.sign_doc) : undefined;
        message.mode = (_b = object.mode) !== null && _b !== void 0 ? _b : 0;
        message.sig = (_c = object.sig) !== null && _c !== void 0 ? _c : new Uint8Array(0);
        return message;
    }
};
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    } else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for(let i = 0; i < bin.length; ++i){
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    } else {
        const bin = [];
        arr.forEach((byte)=>{
            bin.push(globalThis.String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
} //# sourceMappingURL=tx.js.map
}}),

};

//# sourceMappingURL=5b0a5_secretjs_dist_protobuf_cosmos_00d0b7._.js.map