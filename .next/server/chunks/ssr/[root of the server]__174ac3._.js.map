{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/wallets.ts"],"sourcesContent":["import {\n  PhantomWalletAdapter,\n  SolflareWalletAdapter,\n} from \"@solana/wallet-adapter-wallets\";\n\nexport function getSolanaWallets() {\n  return [\n    new PhantomWalletAdapter(),\n    new SolflareWalletAdapter(),\n  ];\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAKO,SAAS;IACd,OAAO;QACL,IAAI,yYAAA,CAAA,uBAAoB;QACxB,IAAI,2YAAA,CAAA,wBAAqB;KAC1B;AACH"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/tarus.ts"],"sourcesContent":["import { defineChain } from \"viem\";\n\nexport const tarus = /*#__PURE__*/ defineChain({\n  id: 490_000,\n  name: \"Autonomys EVM\",\n  nativeCurrency: { name: \"Autonomys\", symbol: \"tAI3\", decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: [\n        \"https://auto-evm.taurus.autonomys.xyz/ws\",\n        \"https://auto-evm-0.taurus.subspace.network/ws\",\n      ],\n      webSocket: [\"wss://auto-evm.taurus.autonomys.xyz/ws\"],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: \"BlockScout\",\n      url: \"https://blockscout.taurus.autonomys.xyz\",\n    },\n  },\n  testnet: true,\n});\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,QAAQ,WAAW,GAAG,CAAA,GAAA,4TAAA,CAAA,cAAW,AAAD,EAAE;IAC7C,IAAI;IACJ,MAAM;IACN,gBAAgB;QAAE,MAAM;QAAa,QAAQ;QAAQ,UAAU;IAAG;IAClE,SAAS;QACP,SAAS;YACP,MAAM;gBACJ;gBACA;aACD;YACD,WAAW;gBAAC;aAAyC;QACvD;IACF;IACA,gBAAgB;QACd,SAAS;YACP,MAAM;YACN,KAAK;QACP;IACF;IACA,SAAS;AACX"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/wagmiConfig.ts"],"sourcesContent":["import { createConfig, http } from \"wagmi\";\n// import {\n//   mainnet,\n//   polygon,\n//   avalanche,\n//   base,\n//   arbitrum,\n//   optimism,\n// } from \"wagmi/chains\";\nimport { tarus } from \"./tarus\";\n\n// Define local Anvil chain\nexport const localAnvil = {\n  id: 31337,\n  name: \"Anvil Local\",\n  nativeCurrency: {\n    decimals: 18,\n    name: \"Ethereum\",\n    symbol: \"ETH\",\n  },\n  rpcUrls: {\n    default: {\n      http: [\"http://127.0.0.1:8545\"],\n    },\n    public: {\n      http: [\"http://127.0.0.1:8545\"],\n    },\n  },\n  blockExplorers: {\n    default: { name: \"Local Explorer\", url: \"http://localhost:8545\" },\n  },\n} as const;\n\nexport const config = createConfig({\n  chains: [tarus /*localAnvil*/],\n  transports: {\n    [tarus.id]: http(tarus.rpcUrls.default.http[0]),\n    // [localAnvil.id]: http(localAnvil.rpcUrls.default.http[0]),\n  },\n});\n"],"names":[],"mappings":";;;;AACA,WAAW;AACX,aAAa;AACb,aAAa;AACb,eAAe;AACf,UAAU;AACV,cAAc;AACd,cAAc;AACd,yBAAyB;AACzB;AATA;AAAA;;;AAYO,MAAM,aAAa;IACxB,IAAI;IACJ,MAAM;IACN,gBAAgB;QACd,UAAU;QACV,MAAM;QACN,QAAQ;IACV;IACA,SAAS;QACP,SAAS;YACP,MAAM;gBAAC;aAAwB;QACjC;QACA,QAAQ;YACN,MAAM;gBAAC;aAAwB;QACjC;IACF;IACA,gBAAgB;QACd,SAAS;YAAE,MAAM;YAAkB,KAAK;QAAwB;IAClE;AACF;AAEO,MAAM,SAAS,CAAA,GAAA,8WAAA,CAAA,eAAY,AAAD,EAAE;IACjC,QAAQ;QAAC,oHAAM,YAAY,GAAlB,CAAA,QAAK;KAAgB;IAC9B,YAAY;QACV,CAAC,mHAAA,CAAA,QAAK,CAAC,EAAE,CAAC,EAAE,CAAA,GAAA,4TAAA,CAAA,OAAI,AAAD,EAAE,mHAAA,CAAA,QAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;IAEhD;AACF"}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/providers/secretNetworkContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\nimport { SecretNetworkClient, MetaMaskWallet } from \"secretjs\";\nimport { toast } from \"sonner\";\n\ninterface SecretNetworkContextType {\n  secretjs: SecretNetworkClient | null;\n  connectMetaMask: () => Promise<void>;\n  connectKeplr: () => Promise<void>;\n  connectLeap: () => Promise<void>;\n  disconnect: () => void;\n  isConnected: boolean;\n  address: string | null;\n  walletType: \"metamask\" | \"keplr\" | \"leap\" | null;\n}\n\nconst SecretNetworkContext = createContext<SecretNetworkContextType | null>(\n  null\n);\n\nconst CHAIN_ID = \"pulsar-3\";\nconst API_URL = \"https://pulsar.lcd.secretnodes.com\"; //TODO Replace with actual API URL from https://github.com/scrtlabs/api-registry\n\nexport function SecretNetworkProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [secretjs, setSecretjs] = useState<SecretNetworkClient | null>(null);\n  const [address, setAddress] = useState<string | null>(null);\n  const [walletType, setWalletType] = useState<\n    \"metamask\" | \"keplr\" | \"leap\" | null\n  >(null);\n\n  // Auto reconnect on mount\n  useEffect(() => {\n    const savedWalletType = localStorage.getItem(\"walletType\") as\n      | \"metamask\"\n      | \"keplr\"\n      | \"leap\"\n      | null;\n    if (savedWalletType === \"metamask\") {\n      connectMetaMask();\n    } else if (savedWalletType === \"keplr\") {\n      connectKeplr();\n    } else if (savedWalletType === \"leap\") {\n      connectLeap();\n    }\n  }, []);\n\n  const handleConnection = async (\n    connectFn: () => Promise<void>,\n    walletName: string\n  ) => {\n    const toastId = toast.loading(`Connecting to ${walletName}...`);\n    try {\n      await connectFn();\n      toast.dismiss(toastId);\n      toast.success(`Connected to ${walletName}`);\n    } catch (error: unknown) {\n      toast.dismiss(toastId);\n      toast.error(\n        `Failed to connect to ${walletName}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n      console.error(`${walletName} connection failed:`, error);\n    }\n  };\n\n  const connectMetaMask = () =>\n    handleConnection(async () => {\n      try {\n        const [ethAddress] = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n\n        const wallet = await MetaMaskWallet.create(window.ethereum, ethAddress);\n\n        const client = new SecretNetworkClient({\n          url: API_URL,\n          chainId: CHAIN_ID,\n          wallet: wallet,\n          walletAddress: wallet.address,\n        });\n        console.log(wallet.address);\n\n        setSecretjs(client);\n        setAddress(wallet.address);\n        setWalletType(\"metamask\");\n        localStorage.setItem(\"walletType\", \"metamask\");\n      } catch (error) {\n        console.error(\"MetaMask connection failed:\", error);\n        throw error;\n      }\n    }, \"MetaMask\");\n\n  const connectKeplr = () =>\n    handleConnection(async () => {\n      try {\n        const sleep = (ms: number) =>\n          new Promise((resolve) => setTimeout(resolve, ms));\n\n        while (\n          !window.keplr ||\n          !window.getEnigmaUtils ||\n          !window.getOfflineSigner\n        ) {\n          await sleep(50);\n        }\n\n        await window.keplr.enable(CHAIN_ID);\n        const keplrOfflineSigner = window.keplr.getOfflineSigner(CHAIN_ID);\n        const [{ address: myAddress }] = await keplrOfflineSigner.getAccounts();\n\n        const client = new SecretNetworkClient({\n          url: API_URL,\n          chainId: CHAIN_ID,\n          wallet: keplrOfflineSigner,\n          walletAddress: myAddress,\n          encryptionUtils: window.keplr.getEnigmaUtils(CHAIN_ID),\n        });\n\n        setSecretjs(client);\n        setAddress(myAddress);\n        setWalletType(\"keplr\");\n        localStorage.setItem(\"walletType\", \"keplr\");\n      } catch (error) {\n        console.error(\"Keplr connection failed:\", error);\n        throw error;\n      }\n    }, \"Keplr\");\n\n  const connectLeap = () =>\n    handleConnection(async () => {\n      try {\n        const sleep = (ms: number) =>\n          new Promise((resolve) => setTimeout(resolve, ms));\n\n        while (\n          !window.leap ||\n          !window.leap.getEnigmaUtils ||\n          !window.leap.getOfflineSignerOnlyAmino\n        ) {\n          await sleep(50);\n        }\n\n        await window.leap.enable(CHAIN_ID);\n        const leapOfflineSigner = window.leap.getOfflineSigner(CHAIN_ID);\n        const [{ address: myAddress }] = await leapOfflineSigner.getAccounts();\n\n        const client = new SecretNetworkClient({\n          url: API_URL,\n          chainId: CHAIN_ID,\n          wallet: leapOfflineSigner,\n          walletAddress: myAddress,\n          encryptionUtils: window.leap.getEnigmaUtils(CHAIN_ID),\n        });\n\n        setSecretjs(client);\n        setAddress(myAddress);\n        setWalletType(\"leap\");\n        localStorage.setItem(\"walletType\", \"leap\");\n      } catch (error) {\n        console.error(\"Leap connection failed:\", error);\n        throw error;\n      }\n    }, \"Leap\");\n\n  const disconnect = () => {\n    setSecretjs(null);\n    setAddress(null);\n    setWalletType(null);\n    localStorage.removeItem(\"walletType\");\n  };\n\n  return (\n    <SecretNetworkContext.Provider\n      value={{\n        secretjs,\n        connectMetaMask,\n        connectKeplr,\n        connectLeap,\n        disconnect,\n        isConnected: !!secretjs,\n        address,\n        walletType,\n      }}\n    >\n      {children}\n    </SecretNetworkContext.Provider>\n  );\n}\n\nexport const useSecretNetwork = () => {\n  const context = useContext(SecretNetworkContext);\n  if (!context) {\n    throw new Error(\n      \"useSecretNetwork must be used within a SecretNetworkProvider\"\n    );\n  }\n  return context;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/tonconnect/utils/web.ts"],"sourcesContent":["export function isClientSide(): boolean {\n    return typeof window !== 'undefined';\n}\n\nexport function isServerSide(): boolean {\n    return !isClientSide();\n}\n"],"names":[],"mappings":";;;;AAAO,SAAS;IACZ,OAAO,gBAAkB;AAC7B;AAEO,SAAS;IACZ,OAAO,CAAC;AACZ"}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/tonconnect/components/TonConnectUIProvider.tsx"],"sourcesContent":["import { createContext, FunctionComponent, memo, ReactNode } from 'react';\nimport {\n    ActionConfiguration,\n    Locales,\n    TonConnectUI,\n    UIPreferences,\n    WalletsListConfiguration\n} from '@tonconnect/ui';\nimport type { ITonConnect } from '@tonconnect/ui';\nimport { isClientSide } from '../utils/web';\n\nexport const TonConnectUIContext = createContext<TonConnectUI | null>(null);\n\nexport type TonConnectUIProviderProps = {\n    children: ReactNode;\n} & Partial<TonConnectUIProviderPropsBase> &\n    Partial<TonConnectUIProviderPropsWithManifest | TonConnectUIProviderPropsWithConnector>;\n\nexport interface TonConnectUIProviderPropsWithManifest {\n    /**\n     * Url to the [manifest]{@link https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest} with the Dapp metadata that will be displayed in the user's wallet.\n     * If not passed, manifest from `${window.location.origin}/tonconnect-manifest.json` will be taken.\n     */\n    manifestUrl: string;\n}\n\nexport interface TonConnectUIProviderPropsWithConnector {\n    /**\n     * TonConnect instance. Can be helpful if you use custom ITonConnect implementation, or use both of @tonconnect/sdk and @tonconnect/ui in your app.\n     */\n    connector: ITonConnect;\n}\n\nexport interface TonConnectUIProviderPropsBase {\n    /**\n     * Try to restore existing session and reconnect to the corresponding wallet.\n     * @default true.\n     */\n    restoreConnection: boolean;\n\n    /**\n     * Language for the phrases it the UI elements.\n     * @default system\n     */\n    language: Locales;\n\n    /**\n     * HTML element id to attach the modal window element. If not passed, `div#tc-widget-root` in the end of the <body> will be added and used.\n     * @default `div#tc-widget-root`.\n     */\n    widgetRootId: string;\n\n    /**\n     * UI elements configuration.\n     */\n    uiPreferences?: UIPreferences;\n\n    /**\n     * Configuration for the wallets list in the connect wallet modal.\n     */\n    walletsListConfiguration?: WalletsListConfiguration;\n\n    /**\n     * Configuration for action-period (e.g. sendTransaction) UI elements: modals and notifications and wallet behaviour (return strategy).\n     */\n    actionsConfiguration?: ActionConfiguration;\n\n    /**\n     * Specifies whether the Android back button should be used to close modals and notifications on Android devices.\n     * @default true\n     */\n    enableAndroidBackHandler?: boolean;\n}\n\nlet tonConnectUI: TonConnectUI | null = null;\n\n/**\n * Add TonConnectUIProvider to the root of the app. You can specify UI options using props.\n * All TonConnect UI hooks calls and `<TonConnectButton />` component must be placed inside `<TonConnectUIProvider>`.\n * @param children JSX to insert.\n * @param [options] additional options.\n * @constructor\n */\nconst TonConnectUIProvider: FunctionComponent<TonConnectUIProviderProps> = ({\n    children,\n    ...options\n}) => {\n    if (isClientSide() && !tonConnectUI) {\n        tonConnectUI = new TonConnectUI(options);\n    }\n\n    return (\n        <TonConnectUIContext.Provider value={tonConnectUI}>{children}</TonConnectUIContext.Provider>\n    );\n};\n\nexport default memo(TonConnectUIProvider);\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAQA;AARA;;;;;AAUO,MAAM,oCAAsB,CAAA,GAAA,sWAAA,CAAA,gBAAa,AAAD,EAAuB;AA+DtE,IAAI,eAAoC;AAExC;;;;;;CAMC,GACD,MAAM,uBAAqE,CAAC,EACxE,QAAQ,EACR,GAAG,SACN;IACG,IAAI,CAAA,GAAA,0HAAA,CAAA,eAAY,AAAD,OAAO,CAAC,cAAc;QACjC,eAAe,IAAI,4PAAA,CAAA,eAAY,CAAC;IACpC;IAEA,qBACI,+YAAC,oBAAoB,QAAQ;QAAC,OAAO;kBAAe;;;;;;AAE5D;qDAEe,CAAA,GAAA,sWAAA,CAAA,OAAI,AAAD,EAAE"}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/tonconnect/errors/ton-connect-ui-react.error.ts"],"sourcesContent":["import { TonConnectUIError } from '@tonconnect/ui';\n\n/**\n * Base class for TonConnectUIReact errors. You can check if the error was triggered by the @tonconnect/ui-react using `err instanceof TonConnectUIReactError`.\n */\nexport class TonConnectUIReactError extends TonConnectUIError {\n    constructor(...args: ConstructorParameters<typeof Error>) {\n        super(...args);\n\n        Object.setPrototypeOf(this, TonConnectUIReactError.prototype);\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAKO,MAAM,+BAA+B,4PAAA,CAAA,oBAAiB;IACzD,YAAY,GAAG,IAAyC,CAAE;QACtD,KAAK,IAAI;QAET,OAAO,cAAc,CAAC,IAAI,EAAE,uBAAuB,SAAS;IAChE;AACJ"}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/tonconnect/errors/ton-connect-provider-not-set.error.ts"],"sourcesContent":["import { TonConnectUIReactError } from './ton-connect-ui-react.error';\n\n/**\n * Thrown when either <TonConnectProvider> not added to the top of the tags tree,\n * either there is an attempt using TonConnect UI hook or <TonConnectButton> inside <TonConnectProvider>\n */\nexport class TonConnectProviderNotSetError extends TonConnectUIReactError {\n    constructor(...args: ConstructorParameters<typeof Error>) {\n        super(...args);\n\n        Object.setPrototypeOf(this, TonConnectProviderNotSetError.prototype);\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AAMO,MAAM,sCAAsC,8JAAA,CAAA,yBAAsB;IACrE,YAAY,GAAG,IAAyC,CAAE;QACtD,KAAK,IAAI;QAET,OAAO,cAAc,CAAC,IAAI,EAAE,8BAA8B,SAAS;IACvE;AACJ"}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/tonconnect/utils/errors.ts"],"sourcesContent":["import { TonConnectUI } from '@tonconnect/ui';\nimport { TonConnectProviderNotSetError } from '../errors/ton-connect-provider-not-set.error';\n\nexport function checkProvider(provider: TonConnectUI | null): provider is TonConnectUI {\n    if (!provider) {\n        throw new TonConnectProviderNotSetError(\n            'You should add <TonConnectUIProvider> on the top of the app to use TonConnect'\n        );\n    }\n\n    return true;\n}\n"],"names":[],"mappings":";;;AACA;;AAEO,SAAS,cAAc,QAA6B;IACvD,IAAI,CAAC,UAAU;QACX,MAAM,IAAI,yKAAA,CAAA,gCAA6B,CACnC;IAER;IAEA,OAAO;AACX"}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 533, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/tonconnect/hooks/useTonConnectUI.ts"],"sourcesContent":["import { useCallback, useContext } from 'react';\nimport { TonConnectUIContext } from '../components/TonConnectUIProvider';\nimport { TonConnectUI, TonConnectUiOptions } from '@tonconnect/ui';\nimport { checkProvider } from '../utils/errors';\nimport { isServerSide } from '../utils/web';\n\n/**\n * Use it to get access to the `TonConnectUI` instance and UI options updating function.\n */\nexport function useTonConnectUI(): [TonConnectUI, (options: TonConnectUiOptions) => void] {\n    const tonConnectUI = useContext(TonConnectUIContext);\n    const setOptions = useCallback(\n        (options: TonConnectUiOptions) => {\n            if (tonConnectUI) {\n                tonConnectUI!.uiOptions = options;\n            }\n        },\n        [tonConnectUI]\n    );\n\n    if (isServerSide()) {\n        return [null as unknown as TonConnectUI, () => {}];\n    }\n\n    checkProvider(tonConnectUI);\n    return [tonConnectUI!, setOptions];\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AACA;;;;;AAKO,SAAS;IACZ,MAAM,eAAe,CAAA,GAAA,sWAAA,CAAA,aAAU,AAAD,EAAE,iJAAA,CAAA,sBAAmB;IACnD,MAAM,aAAa,CAAA,GAAA,sWAAA,CAAA,cAAW,AAAD,EACzB,CAAC;QACG,IAAI,cAAc;YACd,aAAc,SAAS,GAAG;QAC9B;IACJ,GACA;QAAC;KAAa;IAGlB,IAAI,CAAA,GAAA,0HAAA,CAAA,eAAY,AAAD,KAAK;QAChB,OAAO;YAAC;YAAiC,KAAO;SAAE;IACtD;IAEA,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;IACd,OAAO;QAAC;QAAe;KAAW;AACtC"}},
    {"offset": {"line": 565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/tonconnect/components/TonConnectButton.tsx"],"sourcesContent":["import { CSSProperties, FunctionComponent, memo, useEffect } from 'react';\nimport { useTonConnectUI } from '../hooks/useTonConnectUI';\n\nconst buttonRootId = 'ton-connect-button';\n\nexport interface TonConnectButtonProps {\n    className?: string;\n\n    style?: CSSProperties;\n}\n\n/**\n * TonConnect Button is universal UI component for initializing connection. After wallet is connected it transforms to a wallet menu.\n * It is recommended to place it in the top right corner of your app.\n * @param [className] css class to add to the button container.\n * @param [style] style to add to the button container.\n * @constructor\n */\nconst TonConnectButton: FunctionComponent<TonConnectButtonProps> = ({ className, style }) => {\n    const [_, setOptions] = useTonConnectUI();\n\n    useEffect(() => {\n        setOptions({ buttonRootId });\n        return () => setOptions({ buttonRootId: null });\n    }, [setOptions]);\n\n    return (\n        <div\n            id={buttonRootId}\n            className={className}\n            style={{ width: 'fit-content', ...style }}\n        ></div>\n    );\n};\n\nexport default memo(TonConnectButton);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,eAAe;AAQrB;;;;;;CAMC,GACD,MAAM,mBAA6D,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;IACpF,MAAM,CAAC,GAAG,WAAW,GAAG,CAAA,GAAA,sIAAA,CAAA,kBAAe,AAAD;IAEtC,CAAA,GAAA,sWAAA,CAAA,YAAS,AAAD,EAAE;QACN,WAAW;YAAE;QAAa;QAC1B,OAAO,IAAM,WAAW;gBAAE,cAAc;YAAK;IACjD,GAAG;QAAC;KAAW;IAEf,qBACI,+YAAC;QACG,IAAI;QACJ,WAAW;QACX,OAAO;YAAE,OAAO;YAAe,GAAG,KAAK;QAAC;;;;;;AAGpD;qDAEe,CAAA,GAAA,sWAAA,CAAA,OAAI,AAAD,EAAE"}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 657, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/tonconnect/hooks/useTonWallet.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ConnectedWallet, Wallet, WalletInfoWithOpenMethod } from '@tonconnect/ui';\nimport { useTonConnectUI } from './useTonConnectUI';\n\n/**\n * Use it to get user's current ton wallet. If wallet is not connected hook will return null.\n */\nexport function useTonWallet(): Wallet | (Wallet & WalletInfoWithOpenMethod) | null {\n    const [tonConnectUI] = useTonConnectUI();\n    const [wallet, setWallet] = useState<Wallet | (Wallet & WalletInfoWithOpenMethod) | null>(\n        tonConnectUI?.wallet || null\n    );\n\n    useEffect(() => {\n        if (tonConnectUI) {\n            setWallet(tonConnectUI.wallet);\n            return tonConnectUI.onStatusChange((value: ConnectedWallet | null) => {\n                setWallet(value);\n            });\n        }\n    }, [tonConnectUI]);\n\n    return wallet;\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAKO,SAAS;IACZ,MAAM,CAAC,aAAa,GAAG,CAAA,GAAA,sIAAA,CAAA,kBAAe,AAAD;IACrC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAC/B,cAAc,UAAU;IAG5B,CAAA,GAAA,sWAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,cAAc;YACd,UAAU,aAAa,MAAM;YAC7B,OAAO,aAAa,cAAc,CAAC,CAAC;gBAChC,UAAU;YACd;QACJ;IACJ,GAAG;QAAC;KAAa;IAEjB,OAAO;AACX"}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 685, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/tonconnect/hooks/useTonAddress.ts"],"sourcesContent":["import { CHAIN, toUserFriendlyAddress } from '@tonconnect/ui';\nimport { useTonWallet } from './useTonWallet';\nimport { useMemo } from 'react';\n\n/**\n * Use it to get user's current ton wallet address. If wallet is not connected hook will return empty string.\n * @param [userFriendly=true] allows to choose format of the address.\n */\nexport function useTonAddress(userFriendly = true): string {\n    const wallet = useTonWallet();\n    return useMemo(() => {\n        if (wallet) {\n            return userFriendly\n                ? toUserFriendlyAddress(\n                      wallet.account.address,\n                      wallet.account.chain === CHAIN.TESTNET\n                  )\n                : wallet.account.address;\n        } else {\n            return '';\n        }\n    }, [wallet, userFriendly, wallet?.account.address, wallet?.account.chain]);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAFA;AAAA;;;;AAQO,SAAS,cAAc,eAAe,IAAI;IAC7C,MAAM,SAAS,CAAA,GAAA,mIAAA,CAAA,eAAY,AAAD;IAC1B,OAAO,CAAA,GAAA,sWAAA,CAAA,UAAO,AAAD,EAAE;QACX,IAAI,QAAQ;YACR,OAAO,eACD,CAAA,GAAA,oQAAA,CAAA,wBAAqB,AAAD,EAChB,OAAO,OAAO,CAAC,OAAO,EACtB,OAAO,OAAO,CAAC,KAAK,KAAK,qOAAA,CAAA,QAAK,CAAC,OAAO,IAE1C,OAAO,OAAO,CAAC,OAAO;QAChC,OAAO;YACH,OAAO;QACX;IACJ,GAAG;QAAC;QAAQ;QAAc,QAAQ,QAAQ;QAAS,QAAQ,QAAQ;KAAM;AAC7E"}},
    {"offset": {"line": 711, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 717, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/tonconnect/hooks/useTonConnectModal.ts"],"sourcesContent":["import { WalletsModal, WalletsModalState } from '@tonconnect/ui';\nimport { useTonConnectUI } from './useTonConnectUI';\nimport { useEffect, useState } from 'react';\n\n/**\n * Use it to get access to the open/close modal functions.\n */\nexport function useTonConnectModal(): Omit<WalletsModal, 'onStateChange'> {\n    const [tonConnectUI] = useTonConnectUI();\n    const [state, setState] = useState(tonConnectUI?.modal.state || null);\n\n    useEffect(() => {\n        if (tonConnectUI) {\n            setState(tonConnectUI.modal.state);\n            return tonConnectUI.onModalStateChange((value: WalletsModalState) => {\n                setState(value);\n            });\n        }\n    }, [tonConnectUI]);\n\n    return {\n        state: state,\n        open: () => tonConnectUI?.modal.open(),\n        close: () => tonConnectUI?.modal.close()\n    };\n}\n"],"names":[],"mappings":";;;AACA;AACA;;;AAKO,SAAS;IACZ,MAAM,CAAC,aAAa,GAAG,CAAA,GAAA,sIAAA,CAAA,kBAAe,AAAD;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE,cAAc,MAAM,SAAS;IAEhE,CAAA,GAAA,sWAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,cAAc;YACd,SAAS,aAAa,KAAK,CAAC,KAAK;YACjC,OAAO,aAAa,kBAAkB,CAAC,CAAC;gBACpC,SAAS;YACb;QACJ;IACJ,GAAG;QAAC;KAAa;IAEjB,OAAO;QACH,OAAO;QACP,MAAM,IAAM,cAAc,MAAM;QAChC,OAAO,IAAM,cAAc,MAAM;IACrC;AACJ"}},
    {"offset": {"line": 743, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 749, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/tonconnect/hooks/useIsConnectionRestored.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTonConnectUI } from './useTonConnectUI';\n\n/**\n * Indicates current status of the connection restoring process.\n */\nexport function useIsConnectionRestored(): boolean {\n    const [restored, setRestored] = useState(false);\n    const [tonConnectUI] = useTonConnectUI();\n\n    useEffect(() => {\n        if (tonConnectUI) {\n            tonConnectUI.connectionRestored.then(() => setRestored(true));\n        }\n    }, [tonConnectUI]);\n\n    return restored;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAKO,SAAS;IACZ,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,GAAG,CAAA,GAAA,sIAAA,CAAA,kBAAe,AAAD;IAErC,CAAA,GAAA,sWAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,cAAc;YACd,aAAa,kBAAkB,CAAC,IAAI,CAAC,IAAM,YAAY;QAC3D;IACJ,GAAG;QAAC;KAAa;IAEjB,OAAO;AACX"}},
    {"offset": {"line": 768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 774, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 780, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 803, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 820, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 823, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 849, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/providers/TonProvider.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\nimport { THEME, TonConnectUIProvider } from \"../../tonconnect\";\nimport { tonWalletsList } from \"@/config/ton-wallets\";\n\ninterface TonProviderProps {\n  children: React.ReactNode;\n}\n\nexport function TonProvider({ children }: TonProviderProps) {\n  return (\n    <TonConnectUIProvider manifestUrl=\"http://localhost:3000/tonconnect-manifest.json\">\n      {children}\n    </TonConnectUIProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAFA;;;AASO,SAAS,YAAY,EAAE,QAAQ,EAAoB;IACxD,qBACE,+YAAC,oMAAA,CAAA,uBAAoB;QAAC,aAAY;kBAC/B;;;;;;AAGP"}},
    {"offset": {"line": 868, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 882, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/providers/web3.tsx"],"sourcesContent":["\"use client\";\n\nimport \"@rainbow-me/rainbowkit/styles.css\";\nimport \"@solana/wallet-adapter-react-ui/styles.css\";\n\nimport { WalletProvider as SolanaWalletProvider } from \"@solana/wallet-adapter-react\";\nimport { WalletModalProvider } from \"@solana/wallet-adapter-react-ui\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { WagmiProvider } from \"wagmi\";\nimport { getSolanaWallets } from \"@/lib/wallets\";\nimport { RainbowKitProvider, darkTheme } from \"@rainbow-me/rainbowkit\";\nimport { config } from \"@/lib/wagmiConfig\";\nimport { useMemo } from \"react\";\nimport { SecretNetworkProvider } from \"./secretNetworkContext\";\nimport { TonProvider } from \"./TonProvider\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { ConnectionProvider } from \"@solana/wallet-adapter-react\";\n\n// Add chain environment check\n\n// Update wagmi config\n\n// Create a client\nconst queryClient = new QueryClient();\n\nexport function Web3Providers({ children }: { children: React.ReactNode }) {\n  const solanaWallets = useMemo(() => getSolanaWallets(), []);\n  const endpoint = useMemo(() => clusterApiUrl(\"devnet\"), []);\n\n  return (\n    <div className=\"bg-[#0A0118]\">\n      <TonProvider>\n        <WagmiProvider config={config}>\n          <QueryClientProvider client={queryClient}>\n            <RainbowKitProvider\n              theme={darkTheme({\n                accentColor: \"#E11D48\",\n                accentColorForeground: \"white\",\n                borderRadius: \"medium\",\n              })}\n            >\n              <ConnectionProvider endpoint={endpoint}>\n                <SolanaWalletProvider wallets={solanaWallets} autoConnect>\n                  <WalletModalProvider>\n                    <SecretNetworkProvider>{children}</SecretNetworkProvider>\n                  </WalletModalProvider>\n                </SolanaWalletProvider>\n              </ConnectionProvider>\n            </RainbowKitProvider>\n          </QueryClientProvider>\n        </WagmiProvider>\n      </TonProvider>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AASA;AAEA;AACA;AACA;AACA;AACA;AARA;AACA;AADA;AAGA;AAAA;AAMA;AAXA;AACA;AANA;;;;;;;;;;;;;;;;AAkBA,8BAA8B;AAE9B,sBAAsB;AAEtB,kBAAkB;AAClB,MAAM,cAAc,IAAI,sPAAA,CAAA,cAAW;AAE5B,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,MAAM,gBAAgB,CAAA,GAAA,sWAAA,CAAA,UAAO,AAAD,EAAE,IAAM,CAAA,GAAA,qHAAA,CAAA,mBAAgB,AAAD,KAAK,EAAE;IAC1D,MAAM,WAAW,CAAA,GAAA,sWAAA,CAAA,UAAO,AAAD,EAAE,IAAM,CAAA,GAAA,yTAAA,CAAA,gBAAa,AAAD,EAAE,WAAW,EAAE;IAE1D,qBACE,+YAAC;QAAI,WAAU;kBACb,cAAA,+YAAC,gIAAA,CAAA,cAAW;sBACV,cAAA,+YAAC,2VAAA,CAAA,gBAAa;gBAAC,QAAQ,yHAAA,CAAA,SAAM;0BAC3B,cAAA,+YAAC,sRAAA,CAAA,sBAAmB;oBAAC,QAAQ;8BAC3B,cAAA,+YAAC,kYAAA,CAAA,qBAAkB;wBACjB,OAAO,CAAA,GAAA,8XAAA,CAAA,YAAS,AAAD,EAAE;4BACf,aAAa;4BACb,uBAAuB;4BACvB,cAAc;wBAChB;kCAEA,cAAA,+YAAC,0YAAA,CAAA,qBAAkB;4BAAC,UAAU;sCAC5B,cAAA,+YAAC,sYAAA,CAAA,iBAAoB;gCAAC,SAAS;gCAAe,WAAW;0CACvD,cAAA,+YAAC,iZAAA,CAAA,sBAAmB;8CAClB,cAAA,+YAAC,yIAAA,CAAA,wBAAqB;kDAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU5C"}},
    {"offset": {"line": 990, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 996, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function formatAddress(address?: string) {\n  if (!address) return \"\";\n  return `${address.slice(0, 4)}...${address.slice(-4)}`;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,cAAc,OAAgB;IAC5C,IAAI,CAAC,SAAS,OAAO;IACrB,OAAO,GAAG,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,IAAI;AACxD"}},
    {"offset": {"line": 1011, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1017, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,uWAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,qSAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,+YAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 1071, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1077, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/sheet.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n      {children}\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAEA;AAGA;AAJA;AAEA;AALA;;;;;;;AASA,MAAM,QAAQ,6XAAe,IAAI;AAEjC,MAAM,eAAe,6XAAe,OAAO;AAE3C,MAAM,aAAa,6XAAe,KAAK;AAEvC,MAAM,cAAc,6XAAe,MAAM;AAEzC,MAAM,6BAAe,uWAAM,UAAU,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC,6XAAe,OAAO;QACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,aAAa,WAAW,GAAG,6XAAe,OAAO,CAAC,WAAW;AAE7D,MAAM,gBAAgB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACtB,oMACA;IACE,UAAU;QACR,MAAM;YACJ,KAAK;YACL,QACE;YACF,MAAM;YACN,OACE;QACJ;IACF;IACA,iBAAiB;QACf,MAAM;IACR;AACF;AAOF,MAAM,6BAAe,uWAAM,UAAU,CAGnC,CAAC,EAAE,OAAO,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpD,+YAAC;;0BACC,+YAAC;;;;;0BACD,+YAAC,6XAAe,OAAO;gBACrB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;oBAAE;gBAAK,IAAI;gBACtC,GAAG,KAAK;;kCAET,+YAAC,6XAAe,KAAK;wBAAC,WAAU;;0CAC9B,+YAAC,gRAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,+YAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;oBAE3B;;;;;;;;;;;;;AAIP,aAAa,WAAW,GAAG,6XAAe,OAAO,CAAC,WAAW;AAE7D,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,+YAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,+YAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,uWAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC,6XAAe,KAAK;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;QACtD,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,6XAAe,KAAK,CAAC,WAAW;AAEzD,MAAM,iCAAmB,uWAAM,UAAU,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC,6XAAe,WAAW;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,6XAAe,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 1220, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1226, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/icons.tsx"],"sourcesContent":["import {\n  Wallet,\n  LogOut,\n  Menu,\n  type Icon as LucideIcon,\n  Plus,\n  Sparkles,\n  Home,\n  LayoutDashboardIcon,\n  Settings,\n  ArrowRight,\n  Rocket,\n  Check,\n  ArrowLeft,\n  Pause,\n  ChartLine,\n  ChevronRight,\n  ChevronDown,\n  CheckCheckIcon,\n  X,\n  Upload,\n  Loader2,\n  Globe,\n  PlusCircle,\n  Search,\n  Circle,\n  CheckCircle,\n  User,\n  AlertTriangle,\n  Redo2,\n  Package,\n  ExternalLink,\n  Calendar,\n  Link,\n  Coins,\n  Hash,\n  AlertCircle,\n  RefreshCcw,\n  Copy,\n  ChartBar,\n  SendIcon,\n  Eye,\n  BotIcon,\n  HelpCircle,\n  Clock,\n  Lock,\n} from \"lucide-react\";\nimport {\n  FaTwitter,\n  FaFacebookF,\n  FaGithub,\n  FaInstagram,\n  FaReddit,\n  FaTelegramPlane,\n  FaDiscord,\n  FaMediumM,\n  FaPen,\n  FaYoutube,\n  FaUsers,\n  FaRoad,\n  FaDollarSign,\n  FaPlay,\n  FaFire,\n} from \"react-icons/fa\";\nimport Image from \"next/image\";\nimport { ImageProps } from \"next/image\";\n\nexport type Icon = typeof LucideIcon;\n\nexport type IconProps = Omit<ImageProps, \"src\" | \"alt\">;\n\nexport const Icons = {\n  logout: LogOut,\n  menu: Menu,\n  wallet: Wallet,\n  layout: LayoutDashboardIcon,\n  plus: Plus,\n  home: Home,\n  sparkles: Sparkles,\n  twitter: FaTwitter,\n  settings: Settings,\n  arrowRight: ArrowRight,\n  spinner: Loader2,\n  rocket: Rocket,\n  check: Check,\n  base: Wallet,\n  arbitrum: Wallet,\n  optimism: Wallet,\n  polygon: Wallet,\n  avalanche: Wallet,\n  arrowLeft: ArrowLeft,\n  chart: ChartLine,\n  pause: Pause,\n  chevronRight: ChevronRight,\n  chevronDown: ChevronDown,\n  chain: CheckCheckIcon,\n  x: X,\n  token: PlusCircle,\n  search: Search,\n  circle: Circle,\n  checkCircle: CheckCircle,\n  user: User,\n  alertTriangle: AlertTriangle,\n  redo2: Redo2,\n  package: Package,\n  externalLink: ExternalLink,\n  calendar: Calendar,\n  link: Link,\n  icons: Package,\n  coins: Coins,\n  hash: Hash,\n  alertCircle: AlertCircle,\n  refresh: RefreshCcw,\n  copy: Copy,\n  chartBar: ChartBar,\n  dollarSign: FaDollarSign,\n  circulate: FaDollarSign,\n  flame: FaFire,\n  play: FaPlay,\n  send: SendIcon,\n  eye: Eye,\n  bot: BotIcon,\n  help: HelpCircle,\n  metamask: (props: IconProps) => (\n    <Image\n      src=\"/chains/metamask.svg\"\n      width={24}\n      height={24}\n      alt=\"MetaMask\"\n      {...props}\n    />\n  ),\n  keplr: (props: IconProps) => (\n    <Image\n      src=\"/chains/keplr.svg\"\n      width={24}\n      height={24}\n      alt=\"Keplr\"\n      {...props}\n    />\n  ),\n  leap: (props: IconProps) => (\n    <Image\n      src=\"/chains/leap.svg\"\n      width={24}\n      height={24}\n      alt=\"Leap\"\n      {...props}\n    />\n  ),\n  taurus: (props: IconProps) => (\n    <Image\n      src=\"/chains/taurus.svg\"\n      width={24}\n      height={24}\n      alt=\"Taurus\"\n      {...props}\n    />\n  ),\n  ton: (props: IconProps) => (\n    <Image src=\"/chains/ton.svg\" width={24} height={24} alt=\"TON\" {...props} />\n  ),\n  secret: (props: IconProps) => (\n    <Image\n      src=\"/chains/secret.svg\"\n      width={24}\n      height={24}\n      alt=\"Secret Network\"\n      {...props}\n    />\n  ),\n  solana: (props: IconProps) => (\n    <Image\n      src=\"/chains/solana.svg\"\n      width={24}\n      height={24}\n      alt=\"Solana\"\n      {...props}\n    />\n  ),\n  upload: Upload,\n  globe: Globe,\n  telegram: FaTelegramPlane,\n  discord: FaDiscord,\n  facebook: FaFacebookF,\n  github: FaGithub,\n  medium: FaMediumM,\n  instagram: FaInstagram,\n  reddit: FaReddit,\n  pen: FaPen,\n  youtube: FaYoutube,\n  users: FaUsers,\n  roadmap: FaRoad,\n  plusCircle: PlusCircle,\n  fire: FaFire,\n  transfer: SendIcon,\n  lock: Lock,\n  clock: Clock,\n  external: ExternalLink,\n} as const;\n\nexport type IconKeys = keyof typeof Icons;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1435, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,6XAAgB,IAAI;AAEnC,MAAM,gBAAgB,6XAAgB,OAAO;AAE7C,MAAM,eAAe,6XAAgB,MAAM;AAE3C,MAAM,cAAc,6XAAgB,KAAK;AAEzC,MAAM,8BAAgB,uWAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC,6XAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,6XAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,uWAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,+YAAC;;0BACC,+YAAC;;;;;0BACD,+YAAC,6XAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,+YAAC,6XAAgB,KAAK;wBAAC,WAAU;;0CAC/B,+YAAC,gRAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,+YAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,6XAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,+YAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,+YAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,uWAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC,6XAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,6XAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,uWAAM,UAAU,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC,6XAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,6XAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 1561, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1567, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,uWAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,uWAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,uWAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,uWAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,uWAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,uWAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 1642, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1648, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/secret-network/SecretWalletOptions.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\";\nimport { useSecretNetwork } from \"@/providers/secretNetworkContext\";\nimport { Icons } from \"@/components/ui/icons\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport Image from \"next/image\";\nimport { useEffect, useState } from \"react\";\n\ninterface SecretWalletOptionsProps {\n  onConnect?: () => void;\n}\n\nexport function SecretWalletOptions({ onConnect }: SecretWalletOptionsProps) {\n  const { connectMetaMask, connectKeplr, connectLeap } = useSecretNetwork();\n  const [hasLeap, setHasLeap] = useState(false);\n  const [hasKeplr, setHasKeplr] = useState(false);\n\n  useEffect(() => {\n    setHasLeap(!!window.leap);\n    setHasKeplr(!!window.keplr);\n  }, []);\n\n  const handleConnect = async (connectFn: () => Promise<void>) => {\n    await connectFn();\n    onConnect?.();\n  };\n\n  const walletOptions = [\n    {\n      name: \"MetaMask\",\n      icon: \"/metamask.svg\",\n      onClick: () => handleConnect(connectMetaMask),\n      description: \"Connect using MetaMask wallet\",\n      disabled: false,\n    },\n    {\n      name: \"Keplr\",\n      icon: \"/chains/keplr.svg\",\n      onClick: () => handleConnect(connectKeplr),\n      description: \"Connect using Keplr wallet\",\n      disabled: !hasKeplr,\n    },\n    {\n      name: \"Leap\",\n      icon: \"/chains/leap.svg\",\n      onClick: () => handleConnect(connectLeap),\n      description: \"Connect using Leap wallet\",\n      disabled: !hasLeap,\n    },\n  ];\n\n  return (\n    <Card className=\"border-purple-500/20 bg-[#0A0118]\">\n      <CardHeader>\n        <CardTitle className=\"text-purple-50\">Secret Network</CardTitle>\n        <CardDescription>Choose your preferred wallet</CardDescription>\n      </CardHeader>\n      <CardContent className=\"grid gap-4\">\n        {walletOptions.map((wallet) => (\n          <Button\n            key={wallet.name}\n            variant=\"outline\"\n            onClick={wallet.onClick}\n            disabled={wallet.disabled}\n            className=\"w-full flex items-center gap-3 hover:bg-purple-500/20 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <div className=\"h-5 w-5 relative\">\n              <Image\n                src={wallet.icon}\n                alt={wallet.name}\n                width={20}\n                height={20}\n              />\n            </div>\n            <span className=\"flex-1 text-left\">{wallet.name}</span>\n            <Icons.chevronRight className=\"h-4 w-4 text-purple-400\" />\n          </Button>\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAOA;AACA;;;;;;;;AAMO,SAAS,oBAAoB,EAAE,SAAS,EAA4B;IACzE,MAAM,EAAE,eAAe,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,yIAAA,CAAA,mBAAgB,AAAD;IACtE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,sWAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW,CAAC,CAAC,OAAO,IAAI;QACxB,YAAY,CAAC,CAAC,OAAO,KAAK;IAC5B,GAAG,EAAE;IAEL,MAAM,gBAAgB,OAAO;QAC3B,MAAM;QACN;IACF;IAEA,MAAM,gBAAgB;QACpB;YACE,MAAM;YACN,MAAM;YACN,SAAS,IAAM,cAAc;YAC7B,aAAa;YACb,UAAU;QACZ;QACA;YACE,MAAM;YACN,MAAM;YACN,SAAS,IAAM,cAAc;YAC7B,aAAa;YACb,UAAU,CAAC;QACb;QACA;YACE,MAAM;YACN,MAAM;YACN,SAAS,IAAM,cAAc;YAC7B,aAAa;YACb,UAAU,CAAC;QACb;KACD;IAED,qBACE,+YAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,+YAAC,gIAAA,CAAA,aAAU;;kCACT,+YAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAiB;;;;;;kCACtC,+YAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,+YAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;0BACpB,cAAc,GAAG,CAAC,CAAC,uBAClB,+YAAC,kIAAA,CAAA,SAAM;wBAEL,SAAQ;wBACR,SAAS,OAAO,OAAO;wBACvB,UAAU,OAAO,QAAQ;wBACzB,WAAU;;0CAEV,+YAAC;gCAAI,WAAU;0CACb,cAAA,+YAAC,8RAAA,CAAA,UAAK;oCACJ,KAAK,OAAO,IAAI;oCAChB,KAAK,OAAO,IAAI;oCAChB,OAAO;oCACP,QAAQ;;;;;;;;;;;0CAGZ,+YAAC;gCAAK,WAAU;0CAAoB,OAAO,IAAI;;;;;;0CAC/C,+YAAC,iIAAA,CAAA,QAAK,CAAC,YAAY;gCAAC,WAAU;;;;;;;uBAfzB,OAAO,IAAI;;;;;;;;;;;;;;;;AAqB5B"}},
    {"offset": {"line": 1784, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1790, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ConnectButton.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { useAccount, useDisconnect } from \"wagmi\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { formatAddress } from \"@/lib/utils\";\nimport Image from \"next/image\";\nimport { ConnectButton as RainbowConnectButton } from \"@rainbow-me/rainbowkit\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { useSecretNetwork } from \"@/providers/secretNetworkContext\";\nimport { useTonAddress, useTonWallet, useTonConnectUI } from \"../../tonconnect\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Card } from \"@/components/ui/card\";\nimport { SecretWalletOptions } from \"@/components/secret-network/SecretWalletOptions\";\nimport { toast } from \"sonner\";\n\ninterface ChainOption {\n  id: string;\n  name: string;\n  icon: string;\n  features: string[];\n  isConnected: boolean;\n  connect: () => void;\n}\n\nexport function ConnectModal() {\n  const {\n    isConnected: isSecretConnected,\n    address: secretAddress,\n    disconnect: disconnectSecret,\n  } = useSecretNetwork();\n  const { address, isConnected: isEvmConnected } = useAccount();\n  const { disconnect: disconnectEvm } = useDisconnect();\n  const {\n    connected: isSolanaConnected,\n    publicKey,\n    disconnect: disconnectSolana,\n  } = useWallet();\n  const tonWallet = useTonWallet();\n  const tonAddress = useTonAddress();\n  const [tonConnectUI] = useTonConnectUI();\n  const isTonConnected = !!tonWallet;\n  const [isLoading, setIsLoading] = useState<string | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedChain, setSelectedChain] = useState<string | null>(null);\n\n  const isConnected =\n    isEvmConnected || isSolanaConnected || isSecretConnected || isTonConnected;\n\n  const handleDisconnect = () => {\n    if (isSolanaConnected) disconnectSolana();\n    if (isSecretConnected) disconnectSecret();\n    if (isEvmConnected) disconnectEvm();\n    if (isTonConnected) tonConnectUI.disconnect();\n  };\n\n  const getDisplayAddress = () => {\n    if (isSolanaConnected && publicKey)\n      return formatAddress(publicKey.toBase58());\n    if (isSecretConnected && secretAddress) return formatAddress(secretAddress);\n    if (isTonConnected && tonAddress) return formatAddress(tonAddress);\n    if (isEvmConnected && address) return formatAddress(address);\n    return \"\";\n  };\n\n  const getChainLogo = (): string => {\n    if (isSolanaConnected) return \"/chains/solana.svg\";\n    if (isSecretConnected) return \"/chains/secret.svg\";\n    if (isEvmConnected) return \"/chains/taurus.svg\";\n    if (isTonConnected) return \"/chains/ton.svg\";\n    return \"/chains/taurus.svg\";\n  };\n\n  const handleChainSelect = (chainId: string) => {\n    if (chainId === \"secret\") {\n      setSelectedChain(\"secret\");\n    } else if (chainId === \"ton\") {\n      //setIsLoading(chainId);\n      // tonConnectUI.connectWallet();\n      toast.info(\"TON integration coming soon! please connect another chain\", {\n        style: {\n          fontSize: \"1.2rem\",\n          padding: \"1rem\",\n          minWidth: \"300px\",\n        },\n      });\n    }\n    // Other chains will be handled by their respective buttons\n  };\n\n  const SUPPORTED_CHAINS: ChainOption[] = [\n    {\n      id: \"solana\",\n      name: \"Solana\",\n      icon: \"/chains/solana.svg\",\n      features: [\"SPL Tokens\", \"Fast Transactions\"],\n      isConnected: isSolanaConnected,\n      connect: () => {\n        setSelectedChain(\"solana\");\n      },\n    },\n    {\n      id: \"secret\",\n      name: \"Secret Network\",\n      icon: \"/chains/secret.svg\",\n      features: [\"private\", \"encrypted\"],\n      isConnected: isSecretConnected,\n      connect: () => handleChainSelect(\"secret\"),\n    },\n    {\n      id: \"taurus\",\n      name: \"Taurus Autonomous\",\n      icon: \"/chains/taurus.svg\",\n      features: [\"mintable\", \"burnable\", \"pausable\"],\n      isConnected: isEvmConnected,\n      connect: () => {\n        setSelectedChain(\"taurus\");\n      },\n    },\n    {\n      id: \"ton\",\n      name: \"TON\",\n      icon: \"/chains/ton.svg\",\n      features: [\"metadata\", \"freezeAuthority\"],\n      isConnected: isTonConnected,\n      connect: () => {\n        // setIsLoading(\"ton\");\n        // tonConnectUI.connectWallet();\n        handleChainSelect(\"ton\");\n      },\n    },\n  ];\n\n  if (isConnected) {\n    return (\n      <Button\n        variant=\"outline\"\n        onClick={handleDisconnect}\n        className=\"w-full justify-between hover:bg-purple-600/10 hover:border-purple-500 bg-[#1A1325] border-2 border-purple-500/30 py-4 rounded-xl transition-all duration-300\"\n      >\n        <div className=\"flex items-center\">\n          <Image\n            src={getChainLogo()}\n            alt=\"Chain icon\"\n            width={24}\n            height={24}\n            className=\"mr-3 object-contain\"\n          />\n          <span className=\"font-mono text-sm font-medium text-purple-50\">\n            {getDisplayAddress()}\n          </span>\n        </div>\n        <Icons.logout className=\"ml-2 h-5 w-5 text-purple-400 hover:text-purple-300 transition-colors\" />\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>\n        <Button\n          variant=\"outline\"\n          className=\"w-full hover:bg-purple-600/10 hover:border-purple-500 bg-[#1A1325] border-2 border-purple-500/30 py-4 rounded-xl transition-all duration-300\"\n        >\n          <span className=\"text-sm font-medium text-purple-50\">\n            Connect Wallet\n          </span>\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[425px] bg-[#0A0118] border border-purple-500/20\">\n        {selectedChain === \"secret\" ? (\n          <>\n            <DialogHeader>\n              <Button\n                variant=\"ghost\"\n                className=\"absolute left-4 top-4 p-0 hover:bg-transparent\"\n                onClick={() => setSelectedChain(null)}\n              >\n                <Icons.arrowLeft className=\"h-4 w-4 text-purple-400\" />\n              </Button>\n            </DialogHeader>\n            <SecretWalletOptions onConnect={() => setIsOpen(false)} />\n          </>\n        ) : selectedChain === \"taurus\" ? (\n          <>\n            <DialogHeader>\n              <Button\n                variant=\"ghost\"\n                className=\"absolute left-4 top-4 p-0 hover:bg-transparent\"\n                onClick={() => setSelectedChain(null)}\n              >\n                <Icons.arrowLeft className=\"h-4 w-4 text-purple-400\" />\n              </Button>\n              <DialogTitle className=\"text-xl font-bold text-gray-100\">\n                Connect to Taurus\n              </DialogTitle>\n            </DialogHeader>\n            <div className=\"py-4\">\n              <RainbowConnectButton.Custom>\n                {({ openConnectModal, mounted }) => {\n                  const ready = mounted;\n                  if (!ready) return null;\n                  return (\n                    <Button\n                      onClick={openConnectModal}\n                      variant=\"outline\"\n                      className=\"w-full hover:bg-purple-500/20 transition-all duration-200\"\n                    >\n                      Connect EVM Wallet\n                    </Button>\n                  );\n                }}\n              </RainbowConnectButton.Custom>\n            </div>\n          </>\n        ) : selectedChain === \"solana\" ? (\n          <>\n            <DialogHeader>\n              <Button\n                variant=\"ghost\"\n                className=\"absolute left-4 top-4 p-0 hover:bg-transparent\"\n                onClick={() => setSelectedChain(null)}\n              >\n                <Icons.arrowLeft className=\"h-4 w-4 text-purple-400\" />\n              </Button>\n              <DialogTitle className=\"text-xl font-bold text-gray-100\">\n                Connect to Solana\n              </DialogTitle>\n            </DialogHeader>\n            <div className=\"py-4\">\n              <WalletMultiButton className=\"w-full !bg-transparent hover:!bg-purple-500/20 !border-2 !border-purple-500/30 !py-4 !rounded-xl !transition-all !duration-300\" />\n            </div>\n          </>\n        ) : (\n          <>\n            <DialogHeader>\n              <DialogTitle className=\"text-xl font-bold text-gray-100\">\n                Connect Wallet\n              </DialogTitle>\n              <p className=\"text-sm text-gray-400\">\n                Select a chain to connect your wallet\n              </p>\n            </DialogHeader>\n            <div className=\"grid gap-4\">\n              {SUPPORTED_CHAINS.map((chain) => (\n                <Card\n                  key={chain.id}\n                  className={`p-4 cursor-pointer transition-all duration-200 ${\n                    chain.isConnected\n                      ? \"border-purple-500\"\n                      : \"border-purple-500/20\"\n                  } hover:border-purple-500/40`}\n                  onClick={chain.connect}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-3\">\n                      {isLoading === chain.id ? (\n                        <Icons.spinner className=\"w-8 h-8 animate-spin\" />\n                      ) : (\n                        <Image\n                          src={chain.icon}\n                          alt={chain.name}\n                          width={32}\n                          height={32}\n                        />\n                      )}\n                      <div className=\"flex flex-col\">\n                        <span className=\"font-medium\">{chain.name}</span>\n                        <span className=\"text-xs text-muted-foreground\">\n                          {chain.features.join(\" • \")}\n                        </span>\n                      </div>\n                    </div>\n                    {chain.isConnected && (\n                      <span className=\"text-xs text-green-500\">Connected</span>\n                    )}\n                    {!chain.isConnected && (\n                      <Icons.chevronRight className=\"h-4 w-4 text-purple-400\" />\n                    )}\n                  </div>\n                </Card>\n              ))}\n            </div>\n          </>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2289, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/Header.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { Button } from \"./ui/button\";\nimport { useAccount } from \"wagmi\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { cn } from \"@/lib/utils\";\nimport { useState, useEffect } from \"react\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Icons } from \"./ui/icons\";\nimport { ConnectModal } from \"./ConnectButton\";\nimport { useSecretNetwork } from \"@/providers/secretNetworkContext\";\nimport { useTonWallet } from \"../../tonconnect\";\n\nexport function Header() {\n  const { isConnected: isEvmConnected } = useAccount();\n  const { connected: isSolanaConnected } = useWallet();\n  const { isConnected: isSecretConnected } = useSecretNetwork();\n  const tonWallet = useTonWallet();\n  const isTonConnected = !!tonWallet;\n\n  const isConnected =\n    isEvmConnected || isSolanaConnected || isSecretConnected || isTonConnected;\n  const [isOpen, setIsOpen] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 20);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const navigationLinks = [\n    {\n      href: \"/\",\n      label: \"Home\",\n      icon: <Icons.home className=\"w-4 h-4 mr-2\" />,\n      requiresAuth: false,\n    },\n    {\n      href: \"/showcase\",\n      label: \"Showcase\",\n      icon: <Icons.sparkles className=\"w-4 h-4 mr-2\" />,\n      requiresAuth: false,\n    },\n    {\n      href: \"/dashboard\",\n      label: \"Dashboard\",\n      icon: <Icons.layout className=\"w-4 h-4 mr-2\" />,\n      requiresAuth: true,\n    },\n    {\n      href: \"/dashboard/tokens\",\n      label: \"Tokens\",\n      icon: <Icons.coins className=\"w-4 h-4 mr-2\" />,\n      requiresAuth: true,\n    },\n    {\n      href: \"/dashboard/agents\",\n      label: \"AI Agents\",\n      icon: <Icons.bot className=\"w-4 h-4 mr-2\" />,\n      requiresAuth: true,\n    },\n    {\n      href: \"/create\",\n      label: \"Create\",\n      icon: <Icons.plus className=\"w-4 h-4 mr-2\" />,\n      requiresAuth: true,\n    },\n  ];\n\n  return (\n    <header\n      className={cn(\n        \"sticky top-0 z-50 w-full transition-all duration-300\",\n        scrolled\n          ? \"bg-black/80 backdrop-blur-lg border-b border-purple-500/20\"\n          : \"bg-gradient-to-b from-purple-900/90 to-black/90\"\n      )}\n    >\n      <div className=\"container flex h-20 items-center\">\n        {/* Logo */}\n        <div className=\"flex flex-1 items-center justify-start\">\n          <Link href=\"/\" className=\"flex items-center space-x-3\">\n            <Icons.sparkles className=\"w-8 h-8 text-pink-500\" />\n            <span className=\"text-2xl font-bold bg-gradient-to-r from-pink-500 via-purple-500 to-cyan-500 bg-clip-text text-transparent\">\n              AgentMint.AI\n            </span>\n          </Link>\n        </div>\n\n        {/* Desktop Navigation */}\n        <nav className=\"hidden md:flex items-center space-x-8 px-8\">\n          {navigationLinks.map(({ href, label, icon, requiresAuth }) => (\n            <div key={href}>\n              <Link\n                href={href}\n                className={cn(\n                  \"flex items-center text-sm font-medium transition-colors hover:text-pink-500\",\n                  requiresAuth &&\n                    !isConnected &&\n                    \"pointer-events-none opacity-50\"\n                )}\n              >\n                {icon}\n                {label}\n              </Link>\n            </div>\n          ))}\n        </nav>\n\n        {/* Connect Button & Mobile Menu */}\n        <div className=\"flex flex-1 items-center justify-end space-x-4\">\n          <div className=\"hidden md:block\">\n            <ConnectModal />\n          </div>\n\n          {/* Mobile Menu */}\n          <Sheet open={isOpen} onOpenChange={setIsOpen}>\n            <SheetTrigger asChild>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"md:hidden text-white hover:text-pink-500\"\n              >\n                <Icons.menu className=\"h-6 w-6\" />\n                <span className=\"sr-only\">Toggle menu</span>\n              </Button>\n            </SheetTrigger>\n            <SheetContent\n              side=\"right\"\n              className=\"w-[300px] bg-gradient-to-b from-purple-900/95 to-black/95 text-white border-purple-500/20\"\n            >\n              <div className=\"flex flex-col space-y-8 pt-8\">\n                <ConnectModal />\n                <nav className=\"flex flex-col space-y-6\">\n                  {navigationLinks.map(\n                    ({ href, label, icon, requiresAuth }) => (\n                      <Link\n                        key={href}\n                        href={href}\n                        onClick={() => setIsOpen(false)}\n                        className={cn(\n                          \"flex items-center text-base font-medium transition-colors hover:text-pink-500 hover:translate-x-2 duration-200\",\n                          requiresAuth &&\n                            !isConnected &&\n                            \"pointer-events-none opacity-50\"\n                        )}\n                      >\n                        {icon}\n                        {label}\n                      </Link>\n                    )\n                  )}\n                </nav>\n              </div>\n            </SheetContent>\n          </Sheet>\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2588, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2594, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAOA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,wRAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,+YAAC,wQAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,cAAc;YACZ,YAAY;gBACV,OACE;gBACF,aAAa;gBACb,cACE;gBACF,cACE;YACJ;QACF;QACC,GAAG,KAAK;;;;;;AAGf"}},
    {"offset": {"line": 2625, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}