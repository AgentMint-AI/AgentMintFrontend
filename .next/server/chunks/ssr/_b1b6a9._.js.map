{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,uWAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,+YAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/constant.ts"],"sourcesContent":["import { Address } from \"viem\";\nimport { abi as Erc20TokenFactoryABI } from \"./compiledContracts/Erc20TokenFactory.json\";\nimport { abi as AgentRegistryABI } from \"./compiledContracts/AgentRegistry.json\";\n\nexport const evmContractAddress = process.env\n  .NEXT_PUBLIC_EVM_CONTRACT_ADDRESS as Address;\n\nif (!evmContractAddress) {\n  throw new Error(\"EVM contract address is not set\");\n}\n\nexport const wagmiContractConfig = {\n  address: evmContractAddress,\n  abi: Erc20TokenFactoryABI,\n} as const;\n\nexport const agentRegistryAddress = process.env\n  .NEXT_PUBLIC_AGENT_REGISTRY_ADDRESS as Address;\n\nif (!agentRegistryAddress) {\n  throw new Error(\"Agent registry address is not set\");\n}\n\nexport const wagmiAgentRegistryConfig = {\n  address: agentRegistryAddress,\n  abi: AgentRegistryABI,\n} as const;\n\nexport const LOCAL_RPC_URL = \"http://127.0.0.1:8545\";\n"],"names":[],"mappings":";;;;;;;AACA;AACA;;;AAEO,MAAM;AAGb,uCAAyB;;AAEzB;AAEO,MAAM,sBAAsB;IACjC,SAAS;IACT,KAAK,4HAAA,CAAA,MAAoB;AAC3B;AAEO,MAAM;AAGb,uCAA2B;;AAE3B;AAEO,MAAM,2BAA2B;IACtC,SAAS;IACT,KAAK,wHAAA,CAAA,MAAgB;AACvB;AAEO,MAAM,gBAAgB"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/service/TokenFactoryService.ts"],"sourcesContent":["import { createPublicClient, createWalletClient, http } from \"viem\";\nimport { privateKeyToAccount } from \"viem/accounts\";\nimport { wagmiContractConfig } from \"../src/lib/constant\";\nimport { tarus } from \"@/lib/tarus\";\n\nexport class TokenFactoryService {\n  private publicClient;\n  private walletClient;\n  private factoryAddress: `0x${string}`;\n\n  constructor(rpcUrl: string, factoryAddress: string, privateKey: string) {\n    console.log(\"Initializing TokenFactoryService...\");\n    console.log(\"RPC URL:\", rpcUrl);\n    console.log(\"Factory Address:\", factoryAddress);\n    console.log(\"Private Key:\", privateKey);\n    if (!rpcUrl || !factoryAddress || !privateKey) {\n      throw new Error(\n        \"Missing required parameters: rpcUrl, factoryAddress, and privateKey must be provided\"\n      );\n    }\n\n    this.factoryAddress = factoryAddress as `0x${string}`;\n\n    this.publicClient = createPublicClient({\n      chain: tarus,\n      transport: http(rpcUrl),\n    });\n    console.log(\"Public client created\");\n\n    const account = privateKeyToAccount(privateKey as `0x${string}`);\n    console.log(\"Account created:\", account.address);\n\n    this.walletClient = createWalletClient({\n      account,\n      chain: tarus,\n      transport: http(rpcUrl),\n    });\n    console.log(\"Wallet client created\");\n  }\n\n  //USER WILL USE THE HOOKS\n  // async createToken(\n  //   name: string,\n  //   symbol: string,\n  //   initialSupply: number,\n  //   showcaseCid: string,\n  //   tokenMetadataCid: string\n  // ) {\n  //   try {\n  //     const hash = await this.walletClient.writeContract({\n  //       address: this.factoryAddress,\n  //       abi: wagmiContractConfig.abi,\n  //       functionName: \"createToken\",\n  //       args: [name, symbol, initialSupply, showcaseCid, tokenMetadataCid],\n  //     });\n\n  //     return hash;\n  //   } catch (error) {\n  //     console.error(\"Failed to create token:\", error);\n  //     throw error;\n  //   }\n  // }\n\n  async addTokenContract(\n    ownerAddress: string,\n    tokenInfo: {\n      chain: number;\n      tokenAddress: string;\n      showcaseCid: string;\n      tokenMetadataCid: string;\n      hasShowcase: boolean;\n    }\n  ) {\n    if (!ownerAddress || !tokenInfo) {\n      throw new Error(\n        \"Missing required parameters: ownerAddress and tokenInfo must be provided\"\n      );\n    }\n\n    console.log(\"Adding token contract...\");\n    console.log(\"Owner address:\", ownerAddress);\n    console.log(\"Token info:\", tokenInfo);\n    try {\n      const hash = await this.walletClient.writeContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"addTokenContract\",\n        args: [ownerAddress, tokenInfo],\n      });\n      console.log(\"Token contract added successfully. Hash:\", hash);\n      return hash;\n    } catch (error) {\n      console.error(\"Failed to add token contract:\", error);\n      throw error;\n    }\n  }\n\n  async getAllTokenShowcases() {\n    console.log(\"Getting all token showcases...\");\n    try {\n      const showcases = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getAllTokenShowcases\",\n        args: [],\n      });\n      console.log(\"Retrieved showcases:\", showcases);\n      return showcases;\n    } catch (error) {\n      console.error(\"Failed to retrieve all token showcases:\", error);\n      throw error;\n    }\n  }\n\n  async getTokenShowcaseByAddress(tokenAddress: string) {\n    if (!tokenAddress) {\n      throw new Error(\n        \"Missing required parameter: tokenAddress must be provided\"\n      );\n    }\n\n    console.log(\"Getting token showcase for address:\", tokenAddress);\n    try {\n      const showcase = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getTokenShowcaseByAddress\",\n        args: [tokenAddress],\n      });\n      console.log(\"Retrieved showcase:\", showcase);\n      return showcase;\n    } catch (error) {\n      console.error(\"Failed to retrieve token showcase by address:\", error);\n      throw error;\n    }\n  }\n\n  async getTokenShowcasesByPage(\n    page: number,\n    pageSize: number\n  ): Promise<[number, string, string, string, boolean][]> {\n    if (typeof page !== \"number\" || typeof pageSize !== \"number\") {\n      throw new Error(\"Invalid parameters: page and pageSize must be numbers\");\n    }\n\n    console.log(\"Getting token showcases by page:\", page, \"size:\", pageSize);\n    try {\n      const showcases = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getTokenShowcasesByPage\",\n        args: [page, pageSize],\n      });\n      console.log(\"Retrieved showcases:\", showcases);\n      return showcases as [number, string, string, string, boolean][];\n    } catch (error) {\n      console.error(\"Failed to retrieve token showcases by page:\", error);\n      throw error;\n    }\n  }\n\n  async getTokenContract(ownerAddress: string) {\n    if (!ownerAddress) {\n      throw new Error(\n        \"Missing required parameter: ownerAddress must be provided\"\n      );\n    }\n\n    console.log(\"Getting token contract for owner:\", ownerAddress);\n    try {\n      // First convert the address to string format as expected by the contract\n      const addressString = `\"${ownerAddress}\"`;\n      console.log(\"Converted address format:\", addressString);\n\n      const tokens = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getTokenContract\",\n        args: [\"DdBdxWFt1cCuuwW6d13gd5daoM5YkHofc2BxQ7tdEKRE\"],\n      });\n\n      // Add type assertion and logging\n      const typedTokens = tokens as unknown as [\n        number,\n        string,\n        string,\n        string,\n        boolean\n      ][];\n      console.log(\"Retrieved tokens:\", typedTokens);\n      return typedTokens;\n    } catch (error) {\n      console.error(\"Failed to retrieve token contracts:\", error);\n      throw error;\n    }\n  }\n\n  async getTokenCount(ownerAddress: string) {\n    if (!ownerAddress) {\n      throw new Error(\n        \"Missing required parameter: ownerAddress must be provided\"\n      );\n    }\n\n    console.log(\"Getting token count for owner:\", ownerAddress);\n    try {\n      const count = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getTokenCount\",\n        args: [ownerAddress],\n      });\n      console.log(\"Token count:\", count);\n      return count;\n    } catch (error) {\n      console.error(\"Failed to retrieve token count:\", error);\n      throw error;\n    }\n  }\n\n  async getShowcaseCid(ownerAddress: string, index: number) {\n    if (!ownerAddress || typeof index !== \"number\") {\n      throw new Error(\n        \"Missing required parameters: ownerAddress must be provided and index must be a number\"\n      );\n    }\n\n    console.log(\n      \"Getting showcase CID for owner:\",\n      ownerAddress,\n      \"index:\",\n      index\n    );\n    try {\n      const cid = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getShowcaseCid\",\n        args: [ownerAddress, index],\n      });\n      console.log(\"Retrieved CID:\", cid);\n      return cid;\n    } catch (error) {\n      console.error(\"Failed to retrieve showcase CID:\", error);\n      throw error;\n    }\n  }\n\n  async getShowcaseCount() {\n    console.log(\"Getting showcase count...\");\n    try {\n      const count = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getShowcaseCount\",\n        args: [],\n      });\n      console.log(\"Showcase count:\", count);\n      return count;\n    } catch (error) {\n      console.error(\"Failed to retrieve showcase count:\", error);\n      throw error;\n    }\n  }\n\n  async addressToString(address: string) {\n    if (!address) {\n      throw new Error(\"Missing required parameter: address must be provided\");\n    }\n\n    console.log(\"Converting address to string:\", address);\n    try {\n      const str = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"addressToString\",\n        args: [address as `0x${string}`],\n      });\n      console.log(\"Converted string:\", str);\n      return str;\n    } catch (error) {\n      console.error(\"Failed to convert address to string:\", error);\n      throw error;\n    }\n  }\n}\n\n// async function exampleUsage() {\n//   // Initialize the service\n//   const tokenFactoryService = new TokenFactoryService(\n//     \"https://auto-evm-0.taurus.subspace.network/ws\",\n//     \"0x4Ef4267aF397a50441A910c2748235DC265848b7\",\n//     \"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\"\n//   );\n\n//   try {\n//     // Create a new token\n//     // const createHash = await tokenFactoryService.createToken(\n//     //   \"My Token\",\n//     //   \"MTK\",\n//     //   1000000,\n//     //   \"QmShowcaseCid...\",\n//     //   \"QmMetadataCid...\"\n//     // );\n//     // console.log(\"Token created with hash:\", createHash);\n\n//     // Add an existing token\n//     // const addHash = await tokenFactoryService.addTokenContract(\n//     //   \"0xYourOwnerAddress\",\n//     //   {\n//     //     chain: 1, // EVM\n//     //     tokenAddress: \"0xTokenAddress\",\n//     //     showcaseCid: \"QmShowcaseCid...\",\n//     //     tokenMetadataCid: \"QmMetadataCid...\",\n//     //     hasShowcase: true\n//     //   }\n//     // );\n//     // console.log(\"Token added with hash:\", addHash);\n\n//     // Get all token showcases\n//     const showcases = await tokenFactoryService.getAllTokenShowcases();\n//     console.log(\"All token showcases:\", showcases);\n\n//     // Get a specific token showcase\n//     const showcase = await tokenFactoryService.getTokenShowcaseByAddress(\n//       \"0xA6a8c021b0250e10ad0d6BD0E62039b9016e37e2\"\n//     );\n//     console.log(\"Specific token showcase:\", showcase);\n//   } catch (error) {\n//     console.error(\"Error in example usage:\", error);\n//   }\n// }\n\n// exampleUsage().then().catch();\n// Example usage\n\n// const tokenFactoryService = new TokenFactoryService('YOUR_RPC_URL', 'YOUR_FACTORY_ADDRESS', 'YOUR_PRIVATE_KEY');\n// // Create a new token\n// const createHash = await tokenFactoryService.createToken(\"My Token\", \"MTK\", 1000000, \"Qm...\", \"Qm...\");\n\n// // Add an existing token\n// const addHash = await tokenFactoryService.addTokenContract(\"0xYourOwnerAddress\", {\n//   chain: 1, // EVM\n//   tokenAddress: \"0xTokenAddress\",\n//   showcaseCid: \"Qm...\",\n//   tokenMetadataCid: \"Qm...\",\n//   hasShowcase: true\n// });\n\n// // Get all token showcases\n// const showcases = await tokenFactoryService.getAllTokenShowcases();\n\n// // Get a specific token showcase\n// const showcase = await tokenFactoryService.getTokenShowcaseByAddress(\"0xTokenAddress\");\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/social/TokenSelector.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { IconKeys, Icons } from \"@/components/ui/icons\";\nimport Image from \"next/image\";\nimport useSWR from \"swr\";\n\nimport { useAccount } from \"wagmi\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { TokenFactoryService } from \"../../../service/TokenFactoryService\";\nimport { useSecretNetwork } from \"@/providers/secretNetworkContext\";\nimport { useTonWallet } from \"../../../tonconnect\";\n\n// Define proper types for the token data\ninterface TokenMetadata {\n  name: string;\n  symbol: string;\n  chain: string;\n  description?: string;\n  image?: string;\n  decimals?: number;\n  initialSupply?: string;\n  isMintable?: boolean;\n  isBurnable?: boolean;\n  isPausable?: boolean;\n  showcase?: {\n    youtubeLink?: string;\n    socialLinks?: {\n      website?: string;\n      twitter?: string;\n      telegram?: string;\n      discord?: string;\n      github?: string;\n      medium?: string;\n      reddit?: string;\n      instagram?: string;\n      facebook?: string;\n    };\n    roadmap?: Array<{\n      title: string;\n      description: string;\n      date: string;\n      completed: boolean;\n    }>;\n    team?: Array<{\n      name: string;\n      role: string;\n      profileImage?: string;\n      socialLinks?: {\n        twitter?: string;\n        linkedin?: string;\n        github?: string;\n      };\n    }>;\n    tags?: string[];\n  };\n}\n\ninterface Token extends TokenMetadata {\n  id: string;\n  contractAddress: string;\n}\n\ninterface TokenSelectorProps {\n  onSelect: (token: Token | null) => void;\n  selectedToken: Token | null;\n}\n\n// Add this type definition at the top of the file\ninterface TokenContractResponse {\n  chain: number;\n  tokenAddress: string;\n  showcaseCid: string;\n  tokenMetadataCid: string;\n  hasShowcase: boolean;\n}\n\n// Fetch metadata helper\nconst fetchMetadata = async (cid: string): Promise<TokenMetadata | null> => {\n  if (!cid) return null;\n  try {\n    const response = await fetch(`/api/token/metadata?cid=${cid}`);\n    if (!response.ok) throw new Error(\"Failed to fetch metadata\");\n    return response.json();\n  } catch (error) {\n    console.error(\"Error fetching metadata:\", error);\n    return null;\n  }\n};\n\n// Add a new component for displaying social links\nconst SocialLinks = ({ links }: { links: Record<string, string> }) => {\n  const validLinks = Object.entries(links).filter(\n    ([, url]) => url && url.length > 0\n  );\n  if (validLinks.length === 0) return null;\n\n  return (\n    <div className=\"flex gap-2 mt-2\">\n      {validLinks.map(([platform, url]) => {\n        const Icon = Icons[platform as IconKeys] || Icons.link;\n        return (\n          <a\n            key={platform}\n            href={url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-purple-400 hover:text-purple-300 transition-colors\"\n          >\n            <Icon className=\"w-4 h-4\" />\n          </a>\n        );\n      })}\n    </div>\n  );\n};\n\n// Add a component for displaying team members\nconst TeamMembers = ({ team }: { team: TokenMetadata[\"showcase\"][\"team\"] }) => {\n  if (!team || team.length === 0) return null;\n\n  return (\n    <div className=\"mt-4\">\n      <h4 className=\"text-sm font-medium text-gray-400 mb-2\">Team</h4>\n      <div className=\"flex flex-wrap gap-4\">\n        {team.map((member, index) => (\n          <div key={index} className=\"flex items-center space-x-3\">\n            {member.profileImage ? (\n              <Image\n                src={member.profileImage}\n                alt={member.name}\n                width={32}\n                height={32}\n                className=\"rounded-full\"\n              />\n            ) : (\n              <div className=\"w-8 h-8 rounded-full bg-purple-500/20 flex items-center justify-center\">\n                <Icons.user className=\"w-4 h-4 text-purple-500\" />\n              </div>\n            )}\n            <div>\n              <p className=\"text-sm font-medium\">{member.name}</p>\n              <p className=\"text-xs text-gray-400\">{member.role}</p>\n              {member.socialLinks && <SocialLinks links={member.socialLinks} />}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Add a component for displaying roadmap\nconst Roadmap = ({\n  roadmap,\n}: {\n  roadmap: TokenMetadata[\"showcase\"][\"roadmap\"];\n}) => {\n  if (!roadmap || roadmap.length === 0) return null;\n\n  return (\n    <div className=\"mt-4\">\n      <h4 className=\"text-sm font-medium text-gray-400 mb-2\">Roadmap</h4>\n      <div className=\"space-y-2\">\n        {roadmap.map((item, index) => (\n          <div\n            key={index}\n            className={`flex items-center space-x-2 ${\n              item.completed ? \"text-green-500\" : \"text-gray-400\"\n            }`}\n          >\n            {item.completed ? (\n              <Icons.checkCircle className=\"w-4 h-4\" />\n            ) : (\n              <Icons.circle className=\"w-4 h-4\" />\n            )}\n            <div>\n              <p className=\"text-sm font-medium\">{item.title}</p>\n              <p className=\"text-xs\">{item.description}</p>\n              <p className=\"text-xs text-gray-500\">\n                {new Date(item.date).toLocaleDateString()}\n              </p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport function TokenSelector({ onSelect, selectedToken }: TokenSelectorProps) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const pageSize = 10;\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Get connected wallet addresses and connection states\n  const { address: evmAddress, isConnected: isEvmConnected } = useAccount();\n  const { publicKey: solanaAddress, connected: isSolanaConnected } =\n    useWallet();\n  const { address: secretAddress, isConnected: isSecretConnected } =\n    useSecretNetwork();\n  const tonWallet = useTonWallet();\n  const isTonConnected = !!tonWallet;\n\n  // Initialize TokenFactoryService\n  const tokenFactory = new TokenFactoryService(\n    process.env.NEXT_PUBLIC_EVM_RPC_URL!,\n    process.env.NEXT_PUBLIC_EVM_CONTRACT_ADDRESS!,\n    process.env.NEXT_PUBLIC_EVM_PRIVATE_KEY!\n  );\n\n  const { data: tokensWithMetadata } = useSWR(\n    [\n      \"tokens\",\n      evmAddress,\n      solanaAddress?.toString(),\n      secretAddress,\n      tonWallet?.account.address,\n    ],\n    async () => {\n      setIsLoading(true);\n      try {\n        const currentAddress =\n          evmAddress ||\n          solanaAddress?.toString() ||\n          secretAddress ||\n          tonWallet?.account.address;\n\n        if (!currentAddress) {\n          console.log(\"No current address found\");\n          return [];\n        }\n\n        console.log(\"TokenFactory configuration:\", {\n          rpcUrl: process.env.NEXT_PUBLIC_EVM_RPC_URL,\n          factoryAddress: process.env.NEXT_PUBLIC_EVM_CONTRACT_ADDRESS,\n        });\n\n        const tokens = await tokenFactory.getTokenContract(currentAddress);\n\n        if (!tokens || !tokens.length) {\n          console.log(\"No tokens returned from contract\");\n          return [];\n        }\n\n        // Fetch metadata for each token\n        const tokensWithMeta = await Promise.all(\n          (tokens as unknown as TokenContractResponse[]).map(async (token) => {\n            const metadata = await fetchMetadata(token.tokenMetadataCid);\n            return metadata\n              ? {\n                  id: `${token.chain}-${token.tokenAddress}`,\n                  contractAddress: token.tokenAddress,\n                  ...metadata,\n                }\n              : null;\n          })\n        );\n\n        return tokensWithMeta.filter((token): token is Token => token !== null);\n      } catch (error) {\n        console.error(\"Error fetching tokens:\", error);\n        return [];\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    {\n      revalidateOnFocus: false,\n    }\n  );\n\n  // Filter tokens based on search query\n  const filteredTokens = tokensWithMetadata?.filter(\n    (token: Token) =>\n      token.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      token.symbol.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      token.contractAddress.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  // Get the current network name\n  const getCurrentNetwork = () => {\n    if (isEvmConnected) return \"EVM\";\n    if (isSolanaConnected) return \"Solana\";\n    if (isSecretConnected) return \"Secret Network\";\n    if (isTonConnected) return \"TON\";\n    return \"No wallet connected\";\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-sm text-gray-400 mb-2\">\n        Connected to: {getCurrentNetwork()}\n      </div>\n\n      <div className=\"relative\">\n        <Input\n          placeholder=\"Search by name, symbol, or address...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          className=\"bg-[#0A0118] pl-10\"\n        />\n        <Icons.search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n      </div>\n\n      {isLoading ? (\n        <div className=\"flex justify-center py-8\">\n          <Icons.spinner className=\"w-6 h-6 animate-spin text-purple-500\" />\n        </div>\n      ) : (\n        <div className=\"space-y-4 max-h-[400px] overflow-y-auto\">\n          {!isEvmConnected &&\n          !isSolanaConnected &&\n          !isSecretConnected &&\n          !isTonConnected ? (\n            <div className=\"text-center py-8 text-gray-400\">\n              Please connect a wallet to view your tokens\n            </div>\n          ) : filteredTokens?.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-400\">\n              No tokens found for the current connected wallet\n            </div>\n          ) : (\n            filteredTokens?.map((token: Token) => (\n              <Card\n                key={token.id}\n                className={`p-4 cursor-pointer transition-all duration-200 ${\n                  selectedToken?.id === token.id\n                    ? \"bg-purple-500/20 border-purple-500\"\n                    : \"bg-[#0A0118] hover:bg-[#1A0627] border-purple-500/20\"\n                }`}\n                onClick={() => onSelect(token)}\n              >\n                <div className=\"space-y-4\">\n                  {/* Token Header */}\n                  <div className=\"flex items-center space-x-4\">\n                    {token.image ? (\n                      <Image\n                        src={token.image}\n                        alt={token.name}\n                        width={40}\n                        height={40}\n                        className=\"w-10 h-10 rounded-full\"\n                      />\n                    ) : (\n                      <div className=\"w-10 h-10 rounded-full bg-purple-500/20 flex items-center justify-center\">\n                        <Icons.token className=\"w-6 h-6 text-purple-500\" />\n                      </div>\n                    )}\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between\">\n                        <h3 className=\"font-medium\">{token.name}</h3>\n                        <span className=\"text-sm text-gray-400\">\n                          {token.symbol}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center space-x-2 mt-1\">\n                        <span className=\"text-xs text-gray-400\">\n                          {token.chain}\n                        </span>\n                        <span className=\"text-xs text-gray-400\">•</span>\n                        <span className=\"text-xs text-gray-400\">\n                          {token.contractAddress.slice(0, 6)}...\n                          {token.contractAddress.slice(-4)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Token Description */}\n                  {token.description && (\n                    <p className=\"text-sm text-gray-400\">{token.description}</p>\n                  )}\n\n                  {/* Showcase Content */}\n                  {token.showcase && (\n                    <div className=\"border-t border-purple-500/20 pt-4 mt-4\">\n                      {/* Social Links */}\n                      {token.showcase.socialLinks && (\n                        <SocialLinks links={token.showcase.socialLinks} />\n                      )}\n\n                      {/* Team Members */}\n                      <TeamMembers team={token.showcase.team} />\n\n                      {/* Roadmap */}\n                      <Roadmap roadmap={token.showcase.roadmap} />\n\n                      {/* Tags */}\n                      {token.showcase.tags &&\n                        token.showcase.tags.length > 0 && (\n                          <div className=\"flex flex-wrap gap-2 mt-4\">\n                            {token.showcase.tags.map((tag, index) => (\n                              <span\n                                key={index}\n                                className=\"px-2 py-1 text-xs rounded-full bg-purple-500/20 text-purple-300\"\n                              >\n                                {tag}\n                              </span>\n                            ))}\n                          </div>\n                        )}\n                    </div>\n                  )}\n                </div>\n              </Card>\n            ))\n          )}\n        </div>\n      )}\n\n      {tokensWithMetadata?.length === pageSize && (\n        <div className=\"flex justify-center mt-4\">\n          <button\n            onClick={() => setPage(page + 1)}\n            className=\"text-purple-400 hover:text-purple-300 transition-colors\"\n          >\n            Load More\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 977, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 983, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/service/FormPersistenceService.ts"],"sourcesContent":["import { ChainOption } from \"@/components/ChainSelector\";\n\ntype FormData = {\n  name: string;\n  contractAddress: string;\n  chain: ChainOption;\n  twitterCredentials: {\n    username: string;\n    password: string;\n  };\n  contentStrategy: {\n    style: string[];\n    topics: string[];\n    tone: string;\n    tags: string[];\n    postFrequency: string;\n    engagement: {\n      replyStyle: string;\n      interactionFrequency: string;\n      autoReply: boolean;\n    };\n    contentTypes: {\n      text: boolean;\n      polls: boolean;\n      threads: boolean;\n      spaces: boolean;\n    };\n  };\n  metadata: {\n    description: string;\n    website: string;\n    twitter: string;\n    telegram: string;\n    discord: string;\n  };\n  tokenomics: {\n    isMintable: boolean;\n    isBurnable: boolean;\n    isPausable: boolean;\n    totalSupply: string;\n    circulatingSupply: string;\n    marketCap: string;\n    price: string;\n  };\n  team: Array<{\n    name: string;\n    role: string;\n    socials: {\n      twitter?: string;\n      linkedin?: string;\n      github?: string;\n      telegram?: string;\n      x?: string;\n    };\n  }>;\n  roadmap: Array<{\n    title: string;\n    description: string;\n    date: string;\n    completed: boolean;\n  }>;\n  communityGuidelines: {\n    allowedTopics: string[];\n    bannedTopics: string[];\n    moderationLevel: string;\n    languagePreference: string;\n  };\n  marketingStrategy: {\n    targetAudience: string[];\n    competitors: string[];\n    uniqueSellingPoints: string[];\n    campaignGoals: string[];\n  };\n  achievements: Array<{\n    title: string;\n    date: string;\n    description: string;\n    type: \"partnership\" | \"development\" | \"community\" | \"other\";\n  }>;\n};\n\nexport class FormPersistenceService {\n  private static STORAGE_KEY = \"agent_form_data\";\n  private static LAST_MODIFIED_KEY = \"agent_form_last_modified\";\n  private static FORM_VERSION = \"1.0.0\"; // For handling schema updates\n  private static VERSION_KEY = \"agent_form_version\";\n\n  static saveForm(formData: FormData): void {\n    try {\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(formData));\n      localStorage.setItem(this.LAST_MODIFIED_KEY, new Date().toISOString());\n      localStorage.setItem(this.VERSION_KEY, this.FORM_VERSION);\n    } catch (error) {\n      console.error(\"Error saving form data:\", error);\n    }\n  }\n\n  static loadForm(): FormData | null {\n    try {\n      const savedVersion = localStorage.getItem(this.VERSION_KEY);\n      const formData = localStorage.getItem(this.STORAGE_KEY);\n\n      if (!formData) return null;\n\n      // Version check for future schema migrations\n      if (savedVersion !== this.FORM_VERSION) {\n        console.warn(\"Form version mismatch, might need migration\");\n        // Implement migration logic here if needed\n      }\n\n      return JSON.parse(formData);\n    } catch (error) {\n      console.error(\"Error loading form data:\", error);\n      return null;\n    }\n  }\n\n  static clearForm(): void {\n    try {\n      localStorage.removeItem(this.STORAGE_KEY);\n      localStorage.removeItem(this.LAST_MODIFIED_KEY);\n      localStorage.removeItem(this.VERSION_KEY);\n    } catch (error) {\n      console.error(\"Error clearing form data:\", error);\n    }\n  }\n\n  static getLastModified(): Date | null {\n    try {\n      const lastModified = localStorage.getItem(this.LAST_MODIFIED_KEY);\n      return lastModified ? new Date(lastModified) : null;\n    } catch (error) {\n      console.error(\"Error getting last modified date:\", error);\n      return null;\n    }\n  }\n\n  static hasStoredForm(): boolean {\n    return !!localStorage.getItem(this.STORAGE_KEY);\n  }\n\n  // Auto-save functionality\n  static setupAutoSave(\n    formData: FormData,\n    interval: number = 30000\n  ): () => void {\n    const intervalId = setInterval(() => {\n      this.saveForm(formData);\n    }, interval);\n\n    // Return cleanup function\n    return () => clearInterval(intervalId);\n  }\n}\n"],"names":[],"mappings":";;;AAiFO,MAAM;IACX,OAAe,cAAc,kBAAkB;IAC/C,OAAe,oBAAoB,2BAA2B;IAC9D,OAAe,eAAe,QAAQ;IACtC,OAAe,cAAc,qBAAqB;IAElD,OAAO,SAAS,QAAkB,EAAQ;QACxC,IAAI;YACF,aAAa,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,SAAS,CAAC;YACtD,aAAa,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,OAAO,WAAW;YACnE,aAAa,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY;QAC1D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,OAAO,WAA4B;QACjC,IAAI;YACF,MAAM,eAAe,aAAa,OAAO,CAAC,IAAI,CAAC,WAAW;YAC1D,MAAM,WAAW,aAAa,OAAO,CAAC,IAAI,CAAC,WAAW;YAEtD,IAAI,CAAC,UAAU,OAAO;YAEtB,6CAA6C;YAC7C,IAAI,iBAAiB,IAAI,CAAC,YAAY,EAAE;gBACtC,QAAQ,IAAI,CAAC;YACb,2CAA2C;YAC7C;YAEA,OAAO,KAAK,KAAK,CAAC;QACpB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,OAAO;QACT;IACF;IAEA,OAAO,YAAkB;QACvB,IAAI;YACF,aAAa,UAAU,CAAC,IAAI,CAAC,WAAW;YACxC,aAAa,UAAU,CAAC,IAAI,CAAC,iBAAiB;YAC9C,aAAa,UAAU,CAAC,IAAI,CAAC,WAAW;QAC1C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,OAAO,kBAA+B;QACpC,IAAI;YACF,MAAM,eAAe,aAAa,OAAO,CAAC,IAAI,CAAC,iBAAiB;YAChE,OAAO,eAAe,IAAI,KAAK,gBAAgB;QACjD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qCAAqC;YACnD,OAAO;QACT;IACF;IAEA,OAAO,gBAAyB;QAC9B,OAAO,CAAC,CAAC,aAAa,OAAO,CAAC,IAAI,CAAC,WAAW;IAChD;IAEA,0BAA0B;IAC1B,OAAO,cACL,QAAkB,EAClB,WAAmB,KAAK,EACZ;QACZ,MAAM,aAAa,YAAY;YAC7B,IAAI,CAAC,QAAQ,CAAC;QAChB,GAAG;QAEH,0BAA0B;QAC1B,OAAO,IAAM,cAAc;IAC7B;AACF"}},
    {"offset": {"line": 1046, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1052, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/social/ExistingTokenForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { TokenSelector } from \"./TokenSelector\";\nimport { FormPersistenceService } from \"../../../service/FormPersistenceService\";\nimport { toast } from \"sonner\";\n\ninterface Token {\n  id: string;\n  symbol: string;\n  name: string;\n  contractAddress: string;\n  chain: string;\n  description?: string;\n  isMintable?: boolean;\n  isBurnable?: boolean;\n  isPausable?: boolean;\n  initialSupply?: string;\n  showcase?: {\n    tags?: string[];\n    socialLinks?: {\n      website?: string;\n      twitter?: string;\n      telegram?: string;\n      discord?: string;\n      medium?: string;\n    };\n    team?: Array<{\n      name: string;\n      role: string;\n      socialLinks?: {\n        twitter?: string;\n        linkedin?: string;\n        github?: string;\n      };\n    }>;\n    roadmap?: Array<{\n      title: string;\n      description: string;\n      date: string;\n      completed: boolean;\n    }>;\n  };\n}\n\nexport function ExistingTokenForm() {\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedToken, setSelectedToken] = useState<Token | null>(null);\n  const [twitterCredentials, setTwitterCredentials] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const handleCreateAgent = async () => {\n    if (!selectedToken) return;\n\n    setIsLoading(true);\n    try {\n      // Convert selected token data to ManualAgentForm format\n      const formData = {\n        name: selectedToken.name,\n        contractAddress: selectedToken.contractAddress,\n        chain: {\n          id: selectedToken.chain,\n          name: selectedToken.chain,\n        },\n        twitterCredentials,\n        contentStrategy: {\n          style: [\"casual\", \"professional\"],\n          topics: [],\n          tone: \"positive\",\n          tags: selectedToken.showcase?.tags || [],\n          postFrequency: \"daily\",\n          engagement: {\n            replyStyle: \"friendly\",\n            interactionFrequency: \"medium\",\n            autoReply: true,\n          },\n          contentTypes: {\n            text: true,\n            polls: false,\n            threads: true,\n            spaces: false,\n          },\n        },\n        metadata: {\n          description: selectedToken.description || \"\",\n          website: selectedToken.showcase?.socialLinks?.website || \"\",\n          twitter: selectedToken.showcase?.socialLinks?.twitter || \"\",\n          telegram: selectedToken.showcase?.socialLinks?.telegram || \"\",\n          discord: selectedToken.showcase?.socialLinks?.discord || \"\",\n          medium: selectedToken.showcase?.socialLinks?.medium || \"\",\n        },\n        tokenomics: {\n          isMintable: selectedToken.isMintable || false,\n          isBurnable: selectedToken.isBurnable || false,\n          isPausable: selectedToken.isPausable || false,\n          totalSupply: selectedToken.initialSupply || \"\",\n          circulatingSupply: \"\",\n          marketCap: \"\",\n          price: \"\",\n        },\n        team:\n          selectedToken.showcase?.team?.map((member) => ({\n            name: member.name,\n            role: member.role,\n            socials: {\n              twitter: member.socialLinks?.twitter || \"\",\n              linkedin: member.socialLinks?.linkedin || \"\",\n              github: member.socialLinks?.github || \"\",\n            },\n          })) || [],\n        roadmap:\n          selectedToken.showcase?.roadmap?.map((item) => ({\n            title: item.title,\n            description: item.description,\n            date: item.date,\n            completed: item.completed,\n          })) || [],\n        communityGuidelines: {\n          allowedTopics: [],\n          bannedTopics: [],\n          moderationLevel: \"medium\",\n          languagePreference: \"english\",\n        },\n        marketingStrategy: {\n          targetAudience: [],\n          competitors: [],\n          uniqueSellingPoints: [],\n          campaignGoals: [],\n        },\n        achievements: [],\n      };\n\n      // Save form data\n      FormPersistenceService.saveForm(formData);\n\n      toast.success(\"Token data loaded successfully!\");\n      router.push(\"/create/manual\");\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Failed to load token data\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"text-center mb-12\">\n        <h1 className=\"text-4xl font-bold mb-4 bg-gradient-to-r from-pink-500 via-purple-500 to-cyan-500 bg-clip-text text-transparent\">\n          Create Agent from Token\n        </h1>\n        <p className=\"text-gray-400 max-w-2xl mx-auto\">\n          Select your existing token and configure your AI-powered social media\n          agent\n        </p>\n      </div>\n\n      <Card className=\"p-6 bg-[#130627] border border-purple-500/20\">\n        <TokenSelector\n          onSelect={setSelectedToken}\n          selectedToken={selectedToken!}\n        />\n      </Card>\n\n      {selectedToken && (\n        <Card className=\"p-6 bg-[#130627] border border-purple-500/20\">\n          <div className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Twitter Username\n              </label>\n              <Input\n                value={twitterCredentials.username}\n                onChange={(e) =>\n                  setTwitterCredentials({\n                    ...twitterCredentials,\n                    username: e.target.value,\n                  })\n                }\n                className=\"bg-[#0A0118]\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Twitter Password\n              </label>\n              <Input\n                type=\"password\"\n                value={twitterCredentials.password}\n                onChange={(e) =>\n                  setTwitterCredentials({\n                    ...twitterCredentials,\n                    password: e.target.value,\n                  })\n                }\n                className=\"bg-[#0A0118]\"\n              />\n            </div>\n\n            <Button\n              onClick={handleCreateAgent}\n              className=\"w-full bg-purple-500 hover:bg-purple-600\"\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <Icons.spinner className=\"w-4 h-4 animate-spin mr-2\" />\n              ) : (\n                <Icons.twitter className=\"w-4 h-4 mr-2\" />\n              )}\n              Create Social Agent\n            </Button>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1329, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/create/social/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { ExistingTokenForm } from \"@/components/social/ExistingTokenForm\";\nimport { useRouter } from \"next/navigation\";\n// import { Token } from \"@/types/token\";\n\nexport default function SocialPage() {\n  const [selectedOption, setSelectedOption] = useState<\"existing\" | null>(null);\n  const router = useRouter();\n\n  const options = [\n    {\n      id: \"existing\",\n      title: \"Create from Existing Token\",\n      description:\n        \"Select your token and we'll configure the agent automatically\",\n      icon: <Icons.token className=\"w-6 h-6 text-purple-500\" />,\n    },\n    {\n      id: \"manual\",\n      title: \"Manual Setup\",\n      description: \"Configure your AI agent manually with custom parameters\",\n      icon: <Icons.settings className=\"w-6 h-6 text-purple-500\" />,\n    },\n  ];\n\n  if (!selectedOption) {\n    return (\n      <div className=\"container max-w-6xl mx-auto px-4 py-16\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold mb-4 bg-gradient-to-r from-pink-500 via-purple-500 to-cyan-500 bg-clip-text text-transparent\">\n            Setup Social Media Agent\n          </h1>\n          <p className=\"text-gray-400 max-w-2xl mx-auto\">\n            Choose how you want to configure your AI-powered social media agent\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 gap-6\">\n          {options.map((option) => (\n            <Card\n              key={option.id}\n              className=\"p-6 bg-[#130627] border border-purple-500/20 hover:border-purple-500/40 transition-all duration-200 cursor-pointer\"\n              onClick={() => {\n                if (option.id === \"manual\") {\n                  router.push(\"/create/manual\");\n                } else {\n                  setSelectedOption(\"existing\");\n                }\n              }}\n            >\n              <div className=\"mb-4\">{option.icon}</div>\n              <h3 className=\"text-xl font-bold mb-2\">{option.title}</h3>\n              <p className=\"text-gray-400 mb-6\">{option.description}</p>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container max-w-6xl mx-auto px-4 py-16\">\n      <Button\n        variant=\"ghost\"\n        className=\"mb-8\"\n        onClick={() => setSelectedOption(null)}\n      >\n        <Icons.arrowLeft className=\"w-4 h-4 mr-2\" />\n        Back to Options\n      </Button>\n\n      <ExistingTokenForm />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AAUe,SAAS;IACtB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAqB;IACxE,MAAM,SAAS,CAAA,GAAA,mSAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,UAAU;QACd;YACE,IAAI;YACJ,OAAO;YACP,aACE;YACF,oBAAM,+YAAC,iIAAA,CAAA,QAAK,CAAC,KAAK;gBAAC,WAAU;;;;;;QAC/B;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,oBAAM,+YAAC,iIAAA,CAAA,QAAK,CAAC,QAAQ;gBAAC,WAAU;;;;;;QAClC;KACD;IAED,IAAI,CAAC,gBAAgB;QACnB,qBACE,+YAAC;YAAI,WAAU;;8BACb,+YAAC;oBAAI,WAAU;;sCACb,+YAAC;4BAAG,WAAU;sCAAkH;;;;;;sCAGhI,+YAAC;4BAAE,WAAU;sCAAkC;;;;;;;;;;;;8BAKjD,+YAAC;oBAAI,WAAU;8BACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,+YAAC,gIAAA,CAAA,OAAI;4BAEH,WAAU;4BACV,SAAS;gCACP,IAAI,OAAO,EAAE,KAAK,UAAU;oCAC1B,OAAO,IAAI,CAAC;gCACd,OAAO;oCACL,kBAAkB;gCACpB;4BACF;;8CAEA,+YAAC;oCAAI,WAAU;8CAAQ,OAAO,IAAI;;;;;;8CAClC,+YAAC;oCAAG,WAAU;8CAA0B,OAAO,KAAK;;;;;;8CACpD,+YAAC;oCAAE,WAAU;8CAAsB,OAAO,WAAW;;;;;;;2BAZhD,OAAO,EAAE;;;;;;;;;;;;;;;;IAkB1B;IAEA,qBACE,+YAAC;QAAI,WAAU;;0BACb,+YAAC,kIAAA,CAAA,SAAM;gBACL,SAAQ;gBACR,WAAU;gBACV,SAAS,IAAM,kBAAkB;;kCAEjC,+YAAC,iIAAA,CAAA,QAAK,CAAC,SAAS;wBAAC,WAAU;;;;;;oBAAiB;;;;;;;0BAI9C,+YAAC,iJAAA,CAAA,oBAAiB;;;;;;;;;;;AAGxB"}},
    {"offset": {"line": 1493, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}