{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,uWAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,+YAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,uWAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,+YAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,uBAAS,uWAAM,UAAU,CAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC,6XAAiB,IAAI;QACpB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+XACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,+YAAC,6XAAiB,KAAK;YACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,6XAAiB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,uWAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC,4XAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,4XAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,+YAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/create/TagInput.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Icons } from \"@/components/ui/icons\";\n\ninterface TagInputProps {\n  value: string[];\n  onChange: (tags: string[]) => void;\n  placeholder?: string;\n}\n\nexport function TagInput({ value, onChange, placeholder }: TagInputProps) {\n  const [input, setInput] = useState(\"\");\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && input.trim() && value.length < 3) {\n      e.preventDefault();\n      onChange([...value, input.trim()]);\n      setInput(\"\");\n    }\n  };\n\n  const removeTag = (tagToRemove: string) => {\n    onChange(value.filter((tag) => tag !== tagToRemove));\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex flex-wrap gap-2\">\n        {value.map((tag) => (\n          <Badge key={tag} variant=\"secondary\" className=\"px-2 py-1\">\n            {tag}\n            <button\n              type=\"button\"\n              onClick={() => removeTag(tag)}\n              className=\"ml-2 hover:text-red-500\"\n            >\n              <Icons.x className=\"h-3 w-3\" />\n            </button>\n          </Badge>\n        ))}\n      </div>\n      <Input\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyDown={handleKeyDown}\n        placeholder={placeholder}\n        disabled={value.length >= 3}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAaO,SAAS,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAiB;IACtE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,gBAAgB,CAAC;QACrB,IAAI,EAAE,GAAG,KAAK,WAAW,MAAM,IAAI,MAAM,MAAM,MAAM,GAAG,GAAG;YACzD,EAAE,cAAc;YAChB,SAAS;mBAAI;gBAAO,MAAM,IAAI;aAAG;YACjC,SAAS;QACX;IACF;IAEA,MAAM,YAAY,CAAC;QACjB,SAAS,MAAM,MAAM,CAAC,CAAC,MAAQ,QAAQ;IACzC;IAEA,qBACE,+YAAC;QAAI,WAAU;;0BACb,+YAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,oBACV,+YAAC,iIAAA,CAAA,QAAK;wBAAW,SAAQ;wBAAY,WAAU;;4BAC5C;0CACD,+YAAC;gCACC,MAAK;gCACL,SAAS,IAAM,UAAU;gCACzB,WAAU;0CAEV,cAAA,+YAAC,iIAAA,CAAA,QAAK,CAAC,CAAC;oCAAC,WAAU;;;;;;;;;;;;uBAPX;;;;;;;;;;0BAYhB,+YAAC,iIAAA,CAAA,QAAK;gBACJ,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,WAAW;gBACX,aAAa;gBACb,UAAU,MAAM,MAAM,IAAI;;;;;;;;;;;;AAIlC"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/hooks/autodrive/useImageUpload.ts"],"sourcesContent":["import { useState } from \"react\";\n\ninterface UseImageUploadResult {\n  uploadImage: (file: File) => Promise<string>;\n  isUploading: boolean;\n  error: string | null;\n}\n\nexport function useImageUpload(): UseImageUploadResult {\n  const [isUploading, setIsUploading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const uploadImage = async (file: File): Promise<string> => {\n    setIsUploading(true);\n    setError(null);\n\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      //https://data-dao.vercel.app/api/cid/metadata\n      const response = await fetch(\n        \"https://data-dao.vercel.app/api/upload/avatar\",\n        {\n          method: \"POST\",\n          body: formData,\n        }\n      );\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || \"Failed to upload image\");\n      }\n\n      console.log(data, \"data\");\n\n      return data.url;\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : \"Failed to upload image\";\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  return {\n    uploadImage,\n    isUploading,\n    error,\n  };\n}\n"],"names":[],"mappings":";;;AAAA;;AAQO,SAAS;IACd,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,cAAc,OAAO;QACzB,eAAe;QACf,SAAS;QAET,IAAI;YACF,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,QAAQ;YACxB,8CAA8C;YAC9C,MAAM,WAAW,MAAM,MACrB,iDACA;gBACE,QAAQ;gBACR,MAAM;YACR;YAGF,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;YAChC;YAEA,QAAQ,GAAG,CAAC,MAAM;YAElB,OAAO,KAAK,GAAG;QACjB,EAAE,OAAO,KAAK;YACZ,MAAM,eACJ,eAAe,QAAQ,IAAI,OAAO,GAAG;YACvC,SAAS;YACT,MAAM,IAAI,MAAM;QAClB,SAAU;YACR,eAAe;QACjB;IACF;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/create/ImageUpload.tsx"],"sourcesContent":["\"use client\";\n\nimport { useDropzone } from \"react-dropzone\";\nimport { Button } from \"@/components/ui/button\";\nimport { Icons } from \"@/components/ui/icons\";\nimport Image from \"next/image\";\nimport { useImageUpload } from \"@/hooks/autodrive/useImageUpload\";\nimport { toast } from \"sonner\";\n\ninterface ImageUploadProps {\n  value: string;\n  onChange: (url: string) => void;\n}\n\nexport function ImageUpload({ value, onChange }: ImageUploadProps) {\n  const { uploadImage, isUploading, error } = useImageUpload();\n\n  const onDrop = async (acceptedFiles: File[], rejectedFiles: any[]) => {\n    if (rejectedFiles.length > 0) {\n      toast.error(\n        \"Please upload a valid image file (JPEG, PNG, GIF, SVG or BMP under 5MB)\"\n      );\n      return;\n    }\n\n    if (acceptedFiles.length === 0) return;\n\n    try {\n      const file = acceptedFiles[0];\n      const imageUrl = await uploadImage(file);\n      onChange(`https://data-dao.vercel.app${imageUrl}`);\n      console.log(imageUrl, \"imageUrl\");\n    } catch (err) {\n      console.error(\"Error uploading file:\", err);\n      toast.error(\"Failed to upload image\");\n    }\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      \"image/jpeg\": [\".jpg\", \".jpeg\"],\n      \"image/png\": [\".png\"],\n      \"image/gif\": [\".gif\"],\n      \"image/svg+xml\": [\".svg\"],\n      \"image/bmp\": [\".bmp\"],\n    },\n    maxFiles: 1,\n    maxSize: 5 * 1024 * 1024, // 5MB\n  });\n\n  return (\n    <div className=\"flex items-center gap-4\">\n      <div\n        {...getRootProps()}\n        className={`h-16 w-16 rounded-full border-2 border-dashed ${\n          isDragActive ? \"border-purple-500 bg-purple-50/10\" : \"border-gray-300\"\n        } flex items-center justify-center cursor-pointer transition-colors`}\n      >\n        <input {...getInputProps()} />\n        {value ? (\n          <div className=\"relative h-16 w-16\">\n            <Image\n              src={value}\n              alt=\"Token logo\"\n              width={64}\n              height={64}\n              className=\"rounded-full object-cover\"\n              loading=\"eager\"\n              priority={true}\n              onError={(e) => {\n                const img = e.target as HTMLImageElement;\n                img.src = \"/fallback-image.png\"; // Add a fallback image\n                toast.error(\"Failed to load image\");\n              }}\n            />\n            {isUploading && (\n              <div className=\"absolute inset-0 flex items-center justify-center rounded-full bg-black/50\">\n                <Icons.spinner className=\"h-6 w-6 animate-spin text-white\" />\n              </div>\n            )}\n          </div>\n        ) : (\n          <Icons.upload className=\"h-6 w-6 text-gray-400\" />\n        )}\n      </div>\n      <Button\n        type=\"button\"\n        variant=\"outline\"\n        {...getRootProps()}\n        disabled={isUploading}\n      >\n        {isUploading ? (\n          <>\n            <Icons.spinner className=\"mr-2 h-4 w-4 animate-spin\" />\n            Uploading...\n          </>\n        ) : (\n          \"Upload Logo\"\n        )}\n      </Button>\n\n      {error && <p className=\"text-sm text-red-500\">{error}</p>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;;;;;;;;AAcO,SAAS,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAoB;IAC/D,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,2IAAA,CAAA,iBAAc,AAAD;IAEzD,MAAM,SAAS,OAAO,eAAuB;QAC3C,IAAI,cAAc,MAAM,GAAG,GAAG;YAC5B,wQAAA,CAAA,QAAK,CAAC,KAAK,CACT;YAEF;QACF;QAEA,IAAI,cAAc,MAAM,KAAK,GAAG;QAEhC,IAAI;YACF,MAAM,OAAO,aAAa,CAAC,EAAE;YAC7B,MAAM,WAAW,MAAM,YAAY;YACnC,SAAS,CAAC,2BAA2B,EAAE,UAAU;YACjD,QAAQ,GAAG,CAAC,UAAU;QACxB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,yBAAyB;YACvC,wQAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,6PAAA,CAAA,cAAW,AAAD,EAAE;QAChE;QACA,QAAQ;YACN,cAAc;gBAAC;gBAAQ;aAAQ;YAC/B,aAAa;gBAAC;aAAO;YACrB,aAAa;gBAAC;aAAO;YACrB,iBAAiB;gBAAC;aAAO;YACzB,aAAa;gBAAC;aAAO;QACvB;QACA,UAAU;QACV,SAAS,IAAI,OAAO;IACtB;IAEA,qBACE,+YAAC;QAAI,WAAU;;0BACb,+YAAC;gBACE,GAAG,cAAc;gBAClB,WAAW,CAAC,8CAA8C,EACxD,eAAe,sCAAsC,kBACtD,kEAAkE,CAAC;;kCAEpE,+YAAC;wBAAO,GAAG,eAAe;;;;;;oBACzB,sBACC,+YAAC;wBAAI,WAAU;;0CACb,+YAAC,8RAAA,CAAA,UAAK;gCACJ,KAAK;gCACL,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;gCACV,SAAQ;gCACR,UAAU;gCACV,SAAS,CAAC;oCACR,MAAM,MAAM,EAAE,MAAM;oCACpB,IAAI,GAAG,GAAG,uBAAuB,uBAAuB;oCACxD,wQAAA,CAAA,QAAK,CAAC,KAAK,CAAC;gCACd;;;;;;4BAED,6BACC,+YAAC;gCAAI,WAAU;0CACb,cAAA,+YAAC,iIAAA,CAAA,QAAK,CAAC,OAAO;oCAAC,WAAU;;;;;;;;;;;;;;;;6CAK/B,+YAAC,iIAAA,CAAA,QAAK,CAAC,MAAM;wBAAC,WAAU;;;;;;;;;;;;0BAG5B,+YAAC,kIAAA,CAAA,SAAM;gBACL,MAAK;gBACL,SAAQ;gBACP,GAAG,cAAc;gBAClB,UAAU;0BAET,4BACC;;sCACE,+YAAC,iIAAA,CAAA,QAAK,CAAC,OAAO;4BAAC,WAAU;;;;;;wBAA8B;;mCAIzD;;;;;;YAIH,uBAAS,+YAAC;gBAAE,WAAU;0BAAwB;;;;;;;;;;;;AAGrD"}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-[0.8rem] text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-[0.8rem] font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 626, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 632, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/hooks/OnChain/useSolanaWrite.ts"],"sourcesContent":["import { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { useState, useCallback } from \"react\";\nimport {\n  MINT_SIZE,\n  TOKEN_PROGRAM_ID,\n  getAssociatedTokenAddress,\n  createInitializeMintInstruction,\n  createAssociatedTokenAccountInstruction,\n  createMintToInstruction,\n} from \"@solana/spl-token\";\nimport {\n  Keypair,\n  SystemProgram,\n  Transaction,\n  PublicKey,\n} from \"@solana/web3.js\";\n\n/**\n * Interface defining the parameters required to create a new SPL token.\n * @interface TokenParams\n * @property {string} name - The name of the token (e.g., \"Solana USD\")\n * @property {string} symbol - The symbol of the token (e.g., \"USDC\")\n * @property {string} uri - The URI pointing to the token's metadata\n * @property {number} decimals - Number of decimal places (e.g., 9 for most Solana tokens)\n * @property {number} initialSupply - Initial amount of tokens to mint\n * @property {boolean} isMintable - Whether new tokens can be minted later\n * @property {boolean} isFreezable - Whether token accounts can be frozen\n * @property {boolean} isBurnable - Whether tokens can be burned\n * @property {boolean} isPausable - Whether transfers can be paused\n */\nexport interface TokenParams {\n  name: string;\n  symbol: string;\n  uri: string;\n  decimals: number;\n  initialSupply: number;\n  isMintable: boolean;\n  isFreezable: boolean;\n  isBurnable: boolean;\n  isPausable: boolean;\n}\n\n/**\n * A custom React hook for creating and managing SPL tokens on Solana.\n * This hook provides functions to:\n * 1. Create new SPL tokens with custom parameters\n * 2. Create Associated Token Accounts (ATAs) for existing tokens\n *\n * The hook handles all the necessary transaction building, signing, and sending\n * while managing loading states and error handling.\n *\n * @example\n * ```tsx\n * const { createToken, createTokenAccount, isLoading } = useSolanaWrite();\n *\n * // Create a new token\n * const handleCreateToken = async () => {\n *   const result = await createToken({\n *     name: \"My Token\",\n *     symbol: \"MTK\",\n *     decimals: 9,\n *     initialSupply: 1000000,\n *     // ... other params\n *   });\n *   console.log(\"Token created:\", result.mintAddress);\n * };\n *\n * // Create an ATA for an existing token\n * const handleCreateATA = async () => {\n *   const result = await createTokenAccount(\n *     \"token_mint_address\",\n *     \"owner_address\"\n *   );\n *   console.log(\"ATA created:\", result.tokenAccount);\n * };\n * ```\n *\n * @returns {Object} An object containing token management functions and state\n * @returns {Function} createToken - Creates a new SPL token with specified parameters\n * @returns {Function} createTokenAccount - Creates an ATA for an existing token\n * @returns {boolean} isLoading - Loading state for ongoing operations\n */\nexport function useSolanaWrite() {\n  const { connection } = useConnection();\n  const { publicKey, sendTransaction } = useWallet();\n  const [isLoading, setIsLoading] = useState(false);\n\n  /**\n   * Creates a new SPL token with the specified parameters.\n   * This function:\n   * 1. Creates a new mint account\n   * 2. Initializes the mint with specified decimals and authorities\n   * 3. Creates an Associated Token Account (ATA) for the token creator\n   * 4. Mints the initial supply to the creator's ATA if specified\n   *\n   * @param {TokenParams} params - Parameters for the new token\n   * @returns {Promise<Object>} Object containing transaction signature and addresses\n   * @returns {string} signature - The transaction signature\n   * @returns {string} mintAddress - The address of the new token mint\n   * @returns {string} tokenAccount - The address of the creator's token account\n   * @throws {Error} If wallet is not connected or transaction fails\n   */\n  const createToken = useCallback(\n    async (params: TokenParams) => {\n      console.log(\"Creating new token with params:\", params);\n      if (!publicKey || !sendTransaction) {\n        throw new Error(\"Wallet not connected\");\n      }\n\n      setIsLoading(true);\n\n      try {\n        // Generate the mint keypair\n        const mintKeypair = Keypair.generate();\n        console.log(\n          \"Generated mint keypair:\",\n          mintKeypair.publicKey.toString()\n        );\n\n        // Get minimum lamports for rent exemption\n        const lamports = await connection.getMinimumBalanceForRentExemption(\n          MINT_SIZE\n        );\n        console.log(\"Required lamports for rent exemption:\", lamports);\n\n        // Get the ATA address before creating it\n        const associatedTokenAccount = await getAssociatedTokenAddress(\n          mintKeypair.publicKey,\n          publicKey,\n          false,\n          TOKEN_PROGRAM_ID\n        );\n        console.log(\n          \"Associated token account address:\",\n          associatedTokenAccount.toString()\n        );\n\n        // Create a transaction for token creation\n        const transaction = new Transaction().add(\n          // Create the mint account\n          SystemProgram.createAccount({\n            fromPubkey: publicKey,\n            newAccountPubkey: mintKeypair.publicKey,\n            space: MINT_SIZE,\n            lamports,\n            programId: TOKEN_PROGRAM_ID,\n          }),\n          // Initialize the mint\n          createInitializeMintInstruction(\n            mintKeypair.publicKey,\n            params.decimals,\n            publicKey,\n            params.isFreezable ? publicKey : null,\n            TOKEN_PROGRAM_ID\n          ),\n          // Create the associated token account\n          createAssociatedTokenAccountInstruction(\n            publicKey,\n            associatedTokenAccount,\n            publicKey,\n            mintKeypair.publicKey\n          )\n        );\n        console.log(\"Created transaction with initial instructions\");\n\n        // If initial supply > 0, add mint instruction\n        if (params.initialSupply > 0) {\n          const mintAmount =\n            params.initialSupply * Math.pow(10, params.decimals);\n          console.log(\n            \"Adding mint instruction for initial supply:\",\n            mintAmount\n          );\n          transaction.add(\n            createMintToInstruction(\n              mintKeypair.publicKey,\n              associatedTokenAccount,\n              publicKey,\n              mintAmount\n            )\n          );\n        }\n\n        // Send the transaction\n        console.log(\"Sending transaction...\");\n        const signature = await sendTransaction(transaction, connection, {\n          signers: [mintKeypair],\n        });\n        console.log(\"Transaction sent with signature:\", signature);\n\n        // Wait for confirmation\n        await connection.confirmTransaction(signature);\n        console.log(\"Transaction confirmed\");\n\n        const result = {\n          signature,\n          mintAddress: mintKeypair.publicKey.toString(),\n          tokenAccount: associatedTokenAccount.toString(),\n          ownerAddress: publicKey.toString(),\n        };\n        console.log(\"Token creation completed successfully:\", result);\n        return result;\n      } catch (error) {\n        console.error(\"Error creating token:\", error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [connection, publicKey, sendTransaction]\n  );\n\n  /**\n   * Creates an Associated Token Account (ATA) for an existing token.\n   * This function creates a new ATA that can hold a specific token for a specific owner.\n   * If the ATA already exists, the transaction will fail.\n   *\n   * @param {string} mintAddress - The address of the token mint\n   * @param {string} owner - The address of the account that will own the token account\n   * @returns {Promise<Object>} Object containing transaction details\n   * @returns {string} signature - The transaction signature\n   * @returns {string} tokenAccount - The address of the new token account\n   * @throws {Error} If wallet is not connected or transaction fails\n   */\n  const createTokenAccount = useCallback(\n    async (mintAddress: string, owner: string) => {\n      console.log(\n        \"Creating token account for mint:\",\n        mintAddress,\n        \"owner:\",\n        owner\n      );\n      if (!publicKey || !sendTransaction) {\n        throw new Error(\"Wallet not connected\");\n      }\n\n      setIsLoading(true);\n\n      try {\n        const mintPubkey = new PublicKey(mintAddress);\n        const ownerPubkey = new PublicKey(owner);\n        console.log(\n          \"Parsed public keys - mint:\",\n          mintPubkey.toString(),\n          \"owner:\",\n          ownerPubkey.toString()\n        );\n\n        const associatedTokenAddress = await getAssociatedTokenAddress(\n          mintPubkey,\n          ownerPubkey,\n          false,\n          TOKEN_PROGRAM_ID\n        );\n        console.log(\n          \"Generated associated token address:\",\n          associatedTokenAddress.toString()\n        );\n\n        const transaction = new Transaction().add(\n          createAssociatedTokenAccountInstruction(\n            publicKey,\n            associatedTokenAddress,\n            ownerPubkey,\n            mintPubkey\n          )\n        );\n        console.log(\"Created transaction with ATA instruction\");\n\n        console.log(\"Sending transaction...\");\n        const signature = await sendTransaction(transaction, connection);\n        console.log(\"Transaction sent with signature:\", signature);\n\n        await connection.confirmTransaction(signature);\n        console.log(\"Transaction confirmed\");\n\n        const result = {\n          signature,\n          tokenAccount: associatedTokenAddress.toString(),\n        };\n        console.log(\"Token account creation completed successfully:\", result);\n        return result;\n      } catch (error) {\n        console.error(\"Error creating token account:\", error);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [connection, publicKey, sendTransaction]\n  );\n\n  return {\n    createToken,\n    createTokenAccount,\n    isLoading,\n  };\n}\n\n// // Constants\n//     createTokenAccount,\n//     isLoading,\n//   };\n// }\n\n// Constants\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 788, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 794, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/service/SecretNetworkToken.ts"],"sourcesContent":["import { SecretNetworkClient, Wallet } from \"secretjs\";\n\nexport interface TokenParams {\n  name: string;\n  symbol: string;\n  initialSupply: string;\n  decimals: number;\n  publicTotalSupply?: boolean;\n  enableDeposit?: boolean;\n  enableRedeem?: boolean;\n  enableMint?: boolean;\n  enableBurn?: boolean;\n  canModifyDenoms?: boolean;\n}\n\ninterface TokenCreationResult {\n  transactionHash: string;\n  contractAddress: string;\n}\n\ninterface TokenTransferResult {\n  transactionHash: string;\n}\n\nexport class SecretNetworkTokenService {\n  private secretjs: SecretNetworkClient;\n  private contract_wasm: Buffer | null = null;\n\n  constructor(private secretNetworkClient: SecretNetworkClient) {\n    this.secretjs = secretNetworkClient;\n  }\n\n  private async loadWasm() {\n    if (!this.contract_wasm) {\n      const response = await fetch(\n        \"/compileContract/snip20_reference_impl.wasm.gz\"\n      );\n      console.log(\"response\", response);\n      const arrayBuffer = await response.arrayBuffer();\n      this.contract_wasm = Buffer.from(arrayBuffer);\n    }\n    console.log(\"this.contract_wasm\", this.contract_wasm);\n    return this.contract_wasm;\n  }\n\n  async createToken(params: TokenParams): Promise<TokenCreationResult> {\n    try {\n      const wasmBuffer = await this.loadWasm();\n\n      // Upload contract code\n      const tx = await this.secretjs.tx.compute.storeCode(\n        {\n          sender: this.secretjs.address,\n          wasm_byte_code: wasmBuffer,\n          source: \"\",\n          builder: \"\",\n        },\n        {\n          gasLimit: 4_000_000,\n        }\n      );\n\n      const tokenCodeId = Number(\n        tx.arrayLog?.find(\n          (log) => log.type === \"message\" && log.key === \"code_id\"\n        )?.value\n      );\n\n      if (!tokenCodeId) {\n        throw new Error(\"Failed to get code ID from transaction\");\n      }\n\n      const tokenCodeHash = (\n        await this.secretjs.query.compute.codeHashByCodeId({\n          code_id: tokenCodeId.toString(),\n        })\n      ).code_hash;\n\n      // Initialize contract\n      const initMsg = {\n        name: params.name,\n        symbol: params.symbol,\n        decimals: params.decimals,\n        prng_seed: Buffer.from(\"Something really random\").toString(\"base64\"),\n        admin: this.secretjs.address,\n        initial_balances: [\n          {\n            address: this.secretjs.address,\n            amount: params.initialSupply,\n          },\n        ],\n        config: {\n          enable_deposit: params.enableDeposit ?? true,\n          enable_redeem: params.enableRedeem ?? true,\n          enable_mint: params.enableMint ?? true,\n          enable_burn: params.enableBurn ?? true,\n          can_modify_denoms: params.canModifyDenoms ?? true,\n        },\n      };\n\n      const instantiateTx = await this.secretjs.tx.compute.instantiateContract(\n        {\n          code_id: tokenCodeId,\n          sender: this.secretjs.address,\n          code_hash: tokenCodeHash,\n          init_msg: initMsg,\n          label: `${params.symbol}_token_${Math.ceil(Math.random() * 10000)}`,\n        },\n        {\n          gasLimit: 400_000,\n        }\n      );\n\n      const contractAddress = instantiateTx.arrayLog?.find(\n        (log) => log.type === \"message\" && log.key === \"contract_address\"\n      )?.value;\n\n      if (!contractAddress) {\n        throw new Error(\"Failed to get contract address\");\n      }\n\n      return {\n        transactionHash: instantiateTx.transactionHash,\n        contractAddress,\n      };\n    } catch (error) {\n      console.error(\"Error creating token:\", error);\n      throw error;\n    }\n  }\n\n  async transferToken(\n    contract_address: string,\n    recipient: string,\n    amount: string\n  ): Promise<TokenTransferResult> {\n    try {\n      const tx = await this.secretjs.tx.compute.executeContract(\n        {\n          sender: this.secretjs.address,\n          contract_address,\n          msg: {\n            transfer: {\n              recipient,\n              amount,\n            },\n          },\n        },\n        {\n          gasLimit: 100_000,\n        }\n      );\n\n      return {\n        transactionHash: tx.transactionHash,\n      };\n    } catch (error) {\n      console.error(\"Error transferring tokens:\", error);\n      throw error;\n    }\n  }\n}\n// Example usage\n// async function testTokenOperations() {\n//   try {\n//     const wallet = new Wallet(\n//       \"desk pigeon hammer sleep only mistake stool december offer patrol once vacant\"\n//     );\n\n//     const secretjs = new SecretNetworkClient({\n//       chainId: \"pulsar-3\",\n//       url: \"https://pulsar.lcd.secretnodes.com\",\n//       wallet: wallet,\n//       walletAddress: wallet.address,\n//     });\n\n//     const secretToken = new SecretNetworkTokenService(secretjs);\n\n//     // Example token parameters\n//     const tokenParams = {\n//       name: \"TestToken\",\n//       symbol: \"TEST\",\n//       initialSupply: \"1000000\",\n//       decimals: 6,\n//       enableDeposit: true,\n//       enableRedeem: true,\n//       enableMint: true,\n//       enableBurn: true,\n//       canModifyDenoms: true,\n//     };\n\n//     // Create token\n//     const createTx = await secretToken.createToken(tokenParams);\n//     console.log(\"Token created:\", createTx);\n\n//     // Get contract address from creation transaction\n//     const contractAddress = createTx?.arrayLog?.find(\n//       (log) => log.type === \"message\" && log.key === \"contract_address\"\n//     )?.value;\n//     console.log(\"Contract address:\", contractAddress);\n\n//     // Transfer some tokens\n//     const recipientAddress = \"secret1verdmwf2e0d930vulxru5fg3lm9y8r3xg5u7l6\"; // Replace with actual recipient address\n//     const transferAmount = \"1000\";\n\n//     const transferTx = await secretToken.transferToken(\n//       contractAddress,\n//       recipientAddress,\n//       transferAmount\n//     );\n//     console.log(\"Transfer completed:\", transferTx);\n//   } catch (error) {\n//     console.error(\"Error in token operations:\", error);\n//   }\n// }\n\n// testTokenOperations().then(() => {\n//   console.log(\"Token operations completed\");\n// });\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 949, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 955, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/hooks/OnChain/useSecretNetworkWrite.ts"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { useSecretNetwork } from \"@/providers/secretNetworkContext\";\nimport { SecretNetworkTokenService } from \"../../../service/SecretNetworkToken\";\n\nexport interface TokenParams {\n  name: string;\n  symbol: string;\n  initialSupply: string;\n  decimals: number;\n  publicTotalSupply?: boolean;\n  enableDeposit?: boolean;\n  enableRedeem?: boolean;\n  enableMint?: boolean;\n  enableBurn?: boolean;\n  canModifyDenoms?: boolean;\n}\n\nexport function SecretNetworkWrite() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { secretjs, isConnected } = useSecretNetwork();\n\n  const createToken = useCallback(\n    async (params: TokenParams) => {\n      if (!isConnected || !secretjs) {\n        throw new Error(\"Secret Network client not initialized\");\n      }\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const tokenService = new SecretNetworkTokenService(secretjs);\n        const result = await tokenService.createToken({\n          ...params,\n        });\n\n        return {\n          transactionHash: result.transactionHash,\n          contractAddress: result.contractAddress,\n          ownerAddress: secretjs.address,\n        };\n      } catch (error: unknown) {\n        const errorMessage =\n          error instanceof Error ? error.message : String(error);\n        console.error(\"Error creating token:\", errorMessage);\n        setError(errorMessage);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [secretjs, isConnected]\n  );\n\n  const transferToken = useCallback(\n    async (contract_address: string, recipient: string, amount: string) => {\n      if (!isConnected || !secretjs) {\n        throw new Error(\"Secret Network client not initialized\");\n      }\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const tokenService = new SecretNetworkTokenService(secretjs);\n        const result = await tokenService.transferToken(\n          contract_address,\n          recipient,\n          amount\n        );\n\n        return {\n          signature: result.transactionHash,\n          success: true,\n        };\n      } catch (error: unknown) {\n        const errorMessage =\n          error instanceof Error ? error.message : String(error);\n        console.error(\"Error transferring tokens:\", errorMessage);\n        setError(errorMessage);\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [secretjs, isConnected]\n  );\n\n  return {\n    createToken,\n    transferToken,\n    isLoading,\n    error,\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAeO,SAAS;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,yIAAA,CAAA,mBAAgB,AAAD;IAEjD,MAAM,cAAc,CAAA,GAAA,sWAAA,CAAA,cAAW,AAAD,EAC5B,OAAO;QACL,IAAI,CAAC,eAAe,CAAC,UAAU;YAC7B,MAAM,IAAI,MAAM;QAClB;QAEA,aAAa;QACb,SAAS;QAET,IAAI;YACF,MAAM,eAAe,IAAI,6HAAA,CAAA,4BAAyB,CAAC;YACnD,MAAM,SAAS,MAAM,aAAa,WAAW,CAAC;gBAC5C,GAAG,MAAM;YACX;YAEA,OAAO;gBACL,iBAAiB,OAAO,eAAe;gBACvC,iBAAiB,OAAO,eAAe;gBACvC,cAAc,SAAS,OAAO;YAChC;QACF,EAAE,OAAO,OAAgB;YACvB,MAAM,eACJ,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;YAClD,QAAQ,KAAK,CAAC,yBAAyB;YACvC,SAAS;YACT,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF,GACA;QAAC;QAAU;KAAY;IAGzB,MAAM,gBAAgB,CAAA,GAAA,sWAAA,CAAA,cAAW,AAAD,EAC9B,OAAO,kBAA0B,WAAmB;QAClD,IAAI,CAAC,eAAe,CAAC,UAAU;YAC7B,MAAM,IAAI,MAAM;QAClB;QAEA,aAAa;QACb,SAAS;QAET,IAAI;YACF,MAAM,eAAe,IAAI,6HAAA,CAAA,4BAAyB,CAAC;YACnD,MAAM,SAAS,MAAM,aAAa,aAAa,CAC7C,kBACA,WACA;YAGF,OAAO;gBACL,WAAW,OAAO,eAAe;gBACjC,SAAS;YACX;QACF,EAAE,OAAO,OAAgB;YACvB,MAAM,eACJ,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;YAClD,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,SAAS;YACT,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF,GACA;QAAC;QAAU;KAAY;IAGzB,OAAO;QACL;QACA;QACA;QACA;IACF;AACF"}},
    {"offset": {"line": 1028, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1044, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/constant.ts"],"sourcesContent":["import { Address } from \"viem\";\nimport { abi as Erc20TokenFactoryABI } from \"./compiledContracts/Erc20TokenFactory.json\";\nimport { abi as AgentRegistryABI } from \"./compiledContracts/AgentRegistry.json\";\n\nexport const evmContractAddress = process.env\n  .NEXT_PUBLIC_EVM_CONTRACT_ADDRESS as Address;\n\nif (!evmContractAddress) {\n  throw new Error(\"EVM contract address is not set\");\n}\n\nexport const wagmiContractConfig = {\n  address: evmContractAddress,\n  abi: Erc20TokenFactoryABI,\n} as const;\n\nexport const agentRegistryAddress = process.env\n  .NEXT_PUBLIC_AGENT_REGISTRY_ADDRESS as Address;\n\nif (!agentRegistryAddress) {\n  throw new Error(\"Agent registry address is not set\");\n}\n\nexport const wagmiAgentRegistryConfig = {\n  address: agentRegistryAddress,\n  abi: AgentRegistryABI,\n} as const;\n\nexport const LOCAL_RPC_URL = \"http://127.0.0.1:8545\";\n"],"names":[],"mappings":";;;;;;;AACA;AACA;;;AAEO,MAAM;AAGb,uCAAyB;;AAEzB;AAEO,MAAM,sBAAsB;IACjC,SAAS;IACT,KAAK,4HAAA,CAAA,MAAoB;AAC3B;AAEO,MAAM;AAGb,uCAA2B;;AAE3B;AAEO,MAAM,2BAA2B;IACtC,SAAS;IACT,KAAK,wHAAA,CAAA,MAAgB;AACvB;AAEO,MAAM,gBAAgB"}},
    {"offset": {"line": 1072, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1078, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/hooks/OnChain/useWriteContracts.ts"],"sourcesContent":["import { useWriteContract } from \"wagmi\";\nimport { wagmiContractConfig } from \"@/lib/constant\";\nimport {\n  solanaAddressToBytes,\n  tonAddressToBytes,\n  secretAddressToBytes,\n} from \"@/lib/tokenUtils\";\n\n/**\n * Hook for managing token creation and registration in the EVM contract.\n */\n/**\n * Custom hook for managing token creation and registration in the EVM contract.\n *\n * This hook provides functionalities to create a new ERC20 meme coin and\n * to add an existing token to the contract based on the specified blockchain.\n *\n * @returns {Object} An object containing the functions to create a new token\n * and to add an existing token.\n */\nexport function useWriteContracts() {\n  // Create a new token in EVM contract\n  const { writeContractAsync: createErc20MemeCoin } = useWriteContract();\n  const { writeContractAsync: addToken } = useWriteContract();\n\n  /**\n   * Adds an existing token to the contract.\n   *\n   * @param {string} ownerAddress - The address of the token owner.\n   * @param {string} tokenAddress - The address of the token to be added.\n   * @param {\"SECRETNETWORK\" | \"SOLANA\" | \"TON\" | \"EVM\"} chain - The blockchain\n   * type where the token exists.\n   * @param {string} showcaseCid - The CID for the token's showcase.\n   * @param {string} tokenMetadataCid - The CID for the token's metadata.\n   *\n   * @throws Will throw an error if the chain type is unsupported.\n   */\n  const addExistingToken = async (\n    ownerAddress: string,\n    tokenAddress: string,\n    chain: \"SECRETNETWORK\" | \"SOLANA\" | \"TON\" | \"EVM\",\n    showcaseCid: string,\n    tokenMetadataCid: string\n  ) => {\n    try {\n      // Map chain to enum value\n      const chainMap = {\n        SECRETNETWORK: 0,\n        EVM: 1,\n        SOLANA: 2,\n        TON: 3,\n      };\n\n      // Call addTokenContract with converted parameters\n      await addToken({\n        ...wagmiContractConfig,\n        functionName: \"addTokenContract\",\n        args: [\n          ownerAddress,\n          {\n            chain: chainMap[chain],\n            tokenAddress: tokenAddress,\n            showcaseCid: showcaseCid,\n            tokenMetadataCid: tokenMetadataCid,\n            hasShowcase: showcaseCid.length > 0,\n          },\n        ],\n      });\n    } catch (error) {\n      console.error(\"Error adding existing token:\", error);\n      throw error;\n    }\n  };\n\n  /**\n   * Creates a new ERC20 meme coin.\n   *\n   * @param {string} name - The name of the token.\n   * @param {string} symbol - The symbol of the token.\n   * @param {number} initialSupply - The initial supply of the token.\n   * @param {string} showcaseCid - The CID for the token's showcase.\n   * @param {string} tokenMetadataCid - The CID for the token's metadata.\n   * @returns {Promise<string>} The address of the created token contract\n   */\n  const createEvmToken = async (\n    name: string,\n    symbol: string,\n    initialSupply: number,\n    showcaseCid: string,\n    tokenMetadataCid: string\n  ): Promise<string> => {\n    try {\n      const result = await createErc20MemeCoin({\n        ...wagmiContractConfig,\n        functionName: \"createToken\",\n        args: [\n          name,\n          symbol,\n          BigInt(initialSupply),\n          showcaseCid,\n          tokenMetadataCid,\n        ],\n      });\n      console.log(\"result\", result);\n      return result as string;\n    } catch (error) {\n      console.error(\"Error creating EVM token:\", error);\n      throw error;\n    }\n  };\n\n  return { createEvmToken, addExistingToken };\n}\n"],"names":[],"mappings":";;;AACA;AADA;;;AAoBO,SAAS;IACd,qCAAqC;IACrC,MAAM,EAAE,oBAAoB,mBAAmB,EAAE,GAAG,CAAA,GAAA,6WAAA,CAAA,mBAAgB,AAAD;IACnE,MAAM,EAAE,oBAAoB,QAAQ,EAAE,GAAG,CAAA,GAAA,6WAAA,CAAA,mBAAgB,AAAD;IAExD;;;;;;;;;;;GAWC,GACD,MAAM,mBAAmB,OACvB,cACA,cACA,OACA,aACA;QAEA,IAAI;YACF,0BAA0B;YAC1B,MAAM,WAAW;gBACf,eAAe;gBACf,KAAK;gBACL,QAAQ;gBACR,KAAK;YACP;YAEA,kDAAkD;YAClD,MAAM,SAAS;gBACb,GAAG,sHAAA,CAAA,sBAAmB;gBACtB,cAAc;gBACd,MAAM;oBACJ;oBACA;wBACE,OAAO,QAAQ,CAAC,MAAM;wBACtB,cAAc;wBACd,aAAa;wBACb,kBAAkB;wBAClB,aAAa,YAAY,MAAM,GAAG;oBACpC;iBACD;YACH;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,MAAM;QACR;IACF;IAEA;;;;;;;;;GASC,GACD,MAAM,iBAAiB,OACrB,MACA,QACA,eACA,aACA;QAEA,IAAI;YACF,MAAM,SAAS,MAAM,oBAAoB;gBACvC,GAAG,sHAAA,CAAA,sBAAmB;gBACtB,cAAc;gBACd,MAAM;oBACJ;oBACA;oBACA,OAAO;oBACP;oBACA;iBACD;YACH;YACA,QAAQ,GAAG,CAAC,UAAU;YACtB,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,MAAM;QACR;IACF;IAEA,OAAO;QAAE;QAAgB;IAAiB;AAC5C"}},
    {"offset": {"line": 1163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1169, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/hooks/autodrive/useTokenUpload.ts"],"sourcesContent":["import { useState } from \"react\";\nimport { TokenMetadata, ShowcaseMetadata } from \"@/types/token\";\n\ninterface UploadProgress {\n  images: number;\n  metadata: number;\n  showcase: number;\n}\n\nexport function useTokenUpload() {\n  const [uploadProgress, setUploadProgress] = useState<UploadProgress>({\n    images: 0,\n    metadata: 0,\n    showcase: 0,\n  });\n  const [isUploading, setIsUploading] = useState(false);\n\n  const uploadTokenMetadata = async (\n    tokenMetadata: TokenMetadata,\n    showcaseMetadata?: ShowcaseMetadata\n  ): Promise<{ metadataCid: string; showcaseCid?: string }> => {\n    setIsUploading(true);\n    try {\n      // Upload token metadata\n      console.log(\"uploading in useTokenUpload\");\n      setUploadProgress((prev) => ({ ...prev, metadata: 50 }));\n      const tokenResponse = await fetch(\"/api/token/metadata\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(tokenMetadata),\n      });\n\n      if (!tokenResponse.ok) {\n        const error = await tokenResponse.json();\n        throw new Error(error.message || \"Failed to upload token metadata\");\n      }\n\n      const { cid: metadataCid } = await tokenResponse.json();\n      console.log(\"metadataCid\", metadataCid);\n      setUploadProgress((prev) => ({ ...prev, metadata: 100 }));\n\n      // Upload showcase metadata if provided\n      let showcaseCid;\n      if (showcaseMetadata) {\n        setUploadProgress((prev) => ({ ...prev, showcase: 50 }));\n        const showcaseResponse = await fetch(\"/api/token/showcase\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(showcaseMetadata),\n        });\n\n        if (!showcaseResponse.ok) {\n          const error = await showcaseResponse.json();\n          throw new Error(\n            error.message || \"Failed to upload showcase metadata\"\n          );\n        }\n\n        const { cid: showcaseId } = await showcaseResponse.json();\n        showcaseCid = showcaseId;\n        setUploadProgress((prev) => ({ ...prev, showcase: 100 }));\n      }\n\n      return { metadataCid, showcaseCid };\n    } catch (error) {\n      console.error(\"Error uploading metadata:\", error);\n      throw error;\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const resetProgress = () => {\n    setUploadProgress({ images: 0, metadata: 0, showcase: 0 });\n    setIsUploading(false);\n  };\n\n  return {\n    isUploading,\n    uploadProgress,\n    uploadTokenMetadata,\n    resetProgress,\n  };\n}\n\n// {\n//   \"name\": \"My Token\",\n//   \"symbol\": \"MTK\",\n//   \"description\": \"Description here\",\n//   \"image\": \"https://{public_url}/cid/image/cidOfTokenLogo\",\n//   \"decimals\": 9,\n//   \"initialSupply\": \"1000000000\",\n//   \"showcase\": {\n//     \"youtubeLink\": \"https://youtube.com/...\",\n//     \"socialLinks\": {\n//       \"website\": \"https://...\",\n//       \"twitter\": \"https://twitter.com/...\",\n//       \"telegram\": \"https://t.me/...\"\n//     },\n//     \"roadmap\": [\n//       {\n//         \"title\": \"Phase 1\",\n//         \"description\": \"Launch token\",\n//         \"date\": \"2024-Q2\",\n//         \"completed\": false\n//       }\n//     ],\n//     \"team\": [\n//       {\n//         \"name\": \"John Doe\",\n//         \"role\": \"Lead Developer\",\n//         \"profileImage\": \"cidOfProfileImage\",\n//         \"socialLinks\": {\n//           \"twitter\": \"https://twitter.com/johndoe\",\n//           \"github\": \"https://github.com/johndoe\"\n//         }\n//       }\n//     ]\n//   },\n//   \"isMintable\": true,\n//   \"isBurnable\": true,\n//   \"isPausable\": false\n// }\n"],"names":[],"mappings":";;;AAAA;;AASO,SAAS;IACd,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAkB;QACnE,QAAQ;QACR,UAAU;QACV,UAAU;IACZ;IACA,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,sBAAsB,OAC1B,eACA;QAEA,eAAe;QACf,IAAI;YACF,wBAAwB;YACxB,QAAQ,GAAG,CAAC;YACZ,kBAAkB,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,UAAU;gBAAG,CAAC;YACtD,MAAM,gBAAgB,MAAM,MAAM,uBAAuB;gBACvD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,cAAc,EAAE,EAAE;gBACrB,MAAM,QAAQ,MAAM,cAAc,IAAI;gBACtC,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;YACnC;YAEA,MAAM,EAAE,KAAK,WAAW,EAAE,GAAG,MAAM,cAAc,IAAI;YACrD,QAAQ,GAAG,CAAC,eAAe;YAC3B,kBAAkB,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,UAAU;gBAAI,CAAC;YAEvD,uCAAuC;YACvC,IAAI;YACJ,IAAI,kBAAkB;gBACpB,kBAAkB,CAAC,OAAS,CAAC;wBAAE,GAAG,IAAI;wBAAE,UAAU;oBAAG,CAAC;gBACtD,MAAM,mBAAmB,MAAM,MAAM,uBAAuB;oBAC1D,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,MAAM,KAAK,SAAS,CAAC;gBACvB;gBAEA,IAAI,CAAC,iBAAiB,EAAE,EAAE;oBACxB,MAAM,QAAQ,MAAM,iBAAiB,IAAI;oBACzC,MAAM,IAAI,MACR,MAAM,OAAO,IAAI;gBAErB;gBAEA,MAAM,EAAE,KAAK,UAAU,EAAE,GAAG,MAAM,iBAAiB,IAAI;gBACvD,cAAc;gBACd,kBAAkB,CAAC,OAAS,CAAC;wBAAE,GAAG,IAAI;wBAAE,UAAU;oBAAI,CAAC;YACzD;YAEA,OAAO;gBAAE;gBAAa;YAAY;QACpC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,MAAM;QACR,SAAU;YACR,eAAe;QACjB;IACF;IAEA,MAAM,gBAAgB;QACpB,kBAAkB;YAAE,QAAQ;YAAG,UAAU;YAAG,UAAU;QAAE;QACxD,eAAe;IACjB;IAEA,OAAO;QACL;QACA;QACA;QACA;IACF;AACF,EAEA,IAAI;CACJ,wBAAwB;CACxB,qBAAqB;CACrB,uCAAuC;CACvC,8DAA8D;CAC9D,mBAAmB;CACnB,mCAAmC;CACnC,kBAAkB;CAClB,gDAAgD;CAChD,uBAAuB;CACvB,kCAAkC;CAClC,8CAA8C;CAC9C,uCAAuC;CACvC,SAAS;CACT,mBAAmB;CACnB,UAAU;CACV,8BAA8B;CAC9B,yCAAyC;CACzC,6BAA6B;CAC7B,6BAA6B;CAC7B,UAAU;CACV,SAAS;CACT,gBAAgB;CAChB,UAAU;CACV,8BAA8B;CAC9B,oCAAoC;CACpC,+CAA+C;CAC/C,2BAA2B;CAC3B,sDAAsD;CACtD,mDAAmD;CACnD,YAAY;CACZ,UAAU;CACV,QAAQ;CACR,OAAO;CACP,wBAAwB;CACxB,wBAAwB;CACxB,wBAAwB;CACxB,IAAI"}},
    {"offset": {"line": 1295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1301, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/service/TokenFactoryService.ts"],"sourcesContent":["import { createPublicClient, createWalletClient, http } from \"viem\";\nimport { privateKeyToAccount } from \"viem/accounts\";\nimport { wagmiContractConfig } from \"../src/lib/constant\";\nimport { tarus } from \"@/lib/tarus\";\n\nexport class TokenFactoryService {\n  private publicClient;\n  private walletClient;\n  private factoryAddress: `0x${string}`;\n\n  constructor(rpcUrl: string, factoryAddress: string, privateKey: string) {\n    console.log(\"Initializing TokenFactoryService...\");\n    console.log(\"RPC URL:\", rpcUrl);\n    console.log(\"Factory Address:\", factoryAddress);\n    console.log(\"Private Key:\", privateKey);\n    if (!rpcUrl || !factoryAddress || !privateKey) {\n      throw new Error(\n        \"Missing required parameters: rpcUrl, factoryAddress, and privateKey must be provided\"\n      );\n    }\n\n    this.factoryAddress = factoryAddress as `0x${string}`;\n\n    this.publicClient = createPublicClient({\n      chain: tarus,\n      transport: http(rpcUrl),\n    });\n    console.log(\"Public client created\");\n\n    const account = privateKeyToAccount(privateKey as `0x${string}`);\n    console.log(\"Account created:\", account.address);\n\n    this.walletClient = createWalletClient({\n      account,\n      chain: tarus,\n      transport: http(rpcUrl),\n    });\n    console.log(\"Wallet client created\");\n  }\n\n  //USER WILL USE THE HOOKS\n  // async createToken(\n  //   name: string,\n  //   symbol: string,\n  //   initialSupply: number,\n  //   showcaseCid: string,\n  //   tokenMetadataCid: string\n  // ) {\n  //   try {\n  //     const hash = await this.walletClient.writeContract({\n  //       address: this.factoryAddress,\n  //       abi: wagmiContractConfig.abi,\n  //       functionName: \"createToken\",\n  //       args: [name, symbol, initialSupply, showcaseCid, tokenMetadataCid],\n  //     });\n\n  //     return hash;\n  //   } catch (error) {\n  //     console.error(\"Failed to create token:\", error);\n  //     throw error;\n  //   }\n  // }\n\n  async addTokenContract(\n    ownerAddress: string,\n    tokenInfo: {\n      chain: number;\n      tokenAddress: string;\n      showcaseCid: string;\n      tokenMetadataCid: string;\n      hasShowcase: boolean;\n    }\n  ) {\n    if (!ownerAddress || !tokenInfo) {\n      throw new Error(\n        \"Missing required parameters: ownerAddress and tokenInfo must be provided\"\n      );\n    }\n\n    console.log(\"Adding token contract...\");\n    console.log(\"Owner address:\", ownerAddress);\n    console.log(\"Token info:\", tokenInfo);\n    try {\n      const hash = await this.walletClient.writeContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"addTokenContract\",\n        args: [ownerAddress, tokenInfo],\n      });\n      console.log(\"Token contract added successfully. Hash:\", hash);\n      return hash;\n    } catch (error) {\n      console.error(\"Failed to add token contract:\", error);\n      throw error;\n    }\n  }\n\n  async getAllTokenShowcases() {\n    console.log(\"Getting all token showcases...\");\n    try {\n      const showcases = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getAllTokenShowcases\",\n        args: [],\n      });\n      console.log(\"Retrieved showcases:\", showcases);\n      return showcases;\n    } catch (error) {\n      console.error(\"Failed to retrieve all token showcases:\", error);\n      throw error;\n    }\n  }\n\n  async getTokenShowcaseByAddress(tokenAddress: string) {\n    if (!tokenAddress) {\n      throw new Error(\n        \"Missing required parameter: tokenAddress must be provided\"\n      );\n    }\n\n    console.log(\"Getting token showcase for address:\", tokenAddress);\n    try {\n      const showcase = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getTokenShowcaseByAddress\",\n        args: [tokenAddress],\n      });\n      console.log(\"Retrieved showcase:\", showcase);\n      return showcase;\n    } catch (error) {\n      console.error(\"Failed to retrieve token showcase by address:\", error);\n      throw error;\n    }\n  }\n\n  async getTokenShowcasesByPage(\n    page: number,\n    pageSize: number\n  ): Promise<[number, string, string, string, boolean][]> {\n    if (typeof page !== \"number\" || typeof pageSize !== \"number\") {\n      throw new Error(\"Invalid parameters: page and pageSize must be numbers\");\n    }\n\n    console.log(\"Getting token showcases by page:\", page, \"size:\", pageSize);\n    try {\n      const showcases = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getTokenShowcasesByPage\",\n        args: [page, pageSize],\n      });\n      console.log(\"Retrieved showcases:\", showcases);\n      return showcases as [number, string, string, string, boolean][];\n    } catch (error) {\n      console.error(\"Failed to retrieve token showcases by page:\", error);\n      throw error;\n    }\n  }\n\n  async getTokenContract(ownerAddress: string) {\n    if (!ownerAddress) {\n      throw new Error(\n        \"Missing required parameter: ownerAddress must be provided\"\n      );\n    }\n\n    console.log(\"Getting token contract for owner:\", ownerAddress);\n    try {\n      // First convert the address to string format as expected by the contract\n      const addressString = `\"${ownerAddress}\"`;\n      console.log(\"Converted address format:\", addressString);\n\n      const tokens = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getTokenContract\",\n        args: [\"DdBdxWFt1cCuuwW6d13gd5daoM5YkHofc2BxQ7tdEKRE\"],\n      });\n\n      // Add type assertion and logging\n      const typedTokens = tokens as unknown as [\n        number,\n        string,\n        string,\n        string,\n        boolean\n      ][];\n      console.log(\"Retrieved tokens:\", typedTokens);\n      return typedTokens;\n    } catch (error) {\n      console.error(\"Failed to retrieve token contracts:\", error);\n      throw error;\n    }\n  }\n\n  async getTokenCount(ownerAddress: string) {\n    if (!ownerAddress) {\n      throw new Error(\n        \"Missing required parameter: ownerAddress must be provided\"\n      );\n    }\n\n    console.log(\"Getting token count for owner:\", ownerAddress);\n    try {\n      const count = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getTokenCount\",\n        args: [ownerAddress],\n      });\n      console.log(\"Token count:\", count);\n      return count;\n    } catch (error) {\n      console.error(\"Failed to retrieve token count:\", error);\n      throw error;\n    }\n  }\n\n  async getShowcaseCid(ownerAddress: string, index: number) {\n    if (!ownerAddress || typeof index !== \"number\") {\n      throw new Error(\n        \"Missing required parameters: ownerAddress must be provided and index must be a number\"\n      );\n    }\n\n    console.log(\n      \"Getting showcase CID for owner:\",\n      ownerAddress,\n      \"index:\",\n      index\n    );\n    try {\n      const cid = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getShowcaseCid\",\n        args: [ownerAddress, index],\n      });\n      console.log(\"Retrieved CID:\", cid);\n      return cid;\n    } catch (error) {\n      console.error(\"Failed to retrieve showcase CID:\", error);\n      throw error;\n    }\n  }\n\n  async getShowcaseCount() {\n    console.log(\"Getting showcase count...\");\n    try {\n      const count = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"getShowcaseCount\",\n        args: [],\n      });\n      console.log(\"Showcase count:\", count);\n      return count;\n    } catch (error) {\n      console.error(\"Failed to retrieve showcase count:\", error);\n      throw error;\n    }\n  }\n\n  async addressToString(address: string) {\n    if (!address) {\n      throw new Error(\"Missing required parameter: address must be provided\");\n    }\n\n    console.log(\"Converting address to string:\", address);\n    try {\n      const str = await this.publicClient.readContract({\n        address: this.factoryAddress,\n        abi: wagmiContractConfig.abi,\n        functionName: \"addressToString\",\n        args: [address as `0x${string}`],\n      });\n      console.log(\"Converted string:\", str);\n      return str;\n    } catch (error) {\n      console.error(\"Failed to convert address to string:\", error);\n      throw error;\n    }\n  }\n}\n\n// async function exampleUsage() {\n//   // Initialize the service\n//   const tokenFactoryService = new TokenFactoryService(\n//     \"https://auto-evm-0.taurus.subspace.network/ws\",\n//     \"0x4Ef4267aF397a50441A910c2748235DC265848b7\",\n//     \"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\"\n//   );\n\n//   try {\n//     // Create a new token\n//     // const createHash = await tokenFactoryService.createToken(\n//     //   \"My Token\",\n//     //   \"MTK\",\n//     //   1000000,\n//     //   \"QmShowcaseCid...\",\n//     //   \"QmMetadataCid...\"\n//     // );\n//     // console.log(\"Token created with hash:\", createHash);\n\n//     // Add an existing token\n//     // const addHash = await tokenFactoryService.addTokenContract(\n//     //   \"0xYourOwnerAddress\",\n//     //   {\n//     //     chain: 1, // EVM\n//     //     tokenAddress: \"0xTokenAddress\",\n//     //     showcaseCid: \"QmShowcaseCid...\",\n//     //     tokenMetadataCid: \"QmMetadataCid...\",\n//     //     hasShowcase: true\n//     //   }\n//     // );\n//     // console.log(\"Token added with hash:\", addHash);\n\n//     // Get all token showcases\n//     const showcases = await tokenFactoryService.getAllTokenShowcases();\n//     console.log(\"All token showcases:\", showcases);\n\n//     // Get a specific token showcase\n//     const showcase = await tokenFactoryService.getTokenShowcaseByAddress(\n//       \"0xA6a8c021b0250e10ad0d6BD0E62039b9016e37e2\"\n//     );\n//     console.log(\"Specific token showcase:\", showcase);\n//   } catch (error) {\n//     console.error(\"Error in example usage:\", error);\n//   }\n// }\n\n// exampleUsage().then().catch();\n// Example usage\n\n// const tokenFactoryService = new TokenFactoryService('YOUR_RPC_URL', 'YOUR_FACTORY_ADDRESS', 'YOUR_PRIVATE_KEY');\n// // Create a new token\n// const createHash = await tokenFactoryService.createToken(\"My Token\", \"MTK\", 1000000, \"Qm...\", \"Qm...\");\n\n// // Add an existing token\n// const addHash = await tokenFactoryService.addTokenContract(\"0xYourOwnerAddress\", {\n//   chain: 1, // EVM\n//   tokenAddress: \"0xTokenAddress\",\n//   showcaseCid: \"Qm...\",\n//   tokenMetadataCid: \"Qm...\",\n//   hasShowcase: true\n// });\n\n// // Get all token showcases\n// const showcases = await tokenFactoryService.getAllTokenShowcases();\n\n// // Get a specific token showcase\n// const showcase = await tokenFactoryService.getTokenShowcaseByAddress(\"0xTokenAddress\");\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1609, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1615, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/service/TokenCreationService.ts"],"sourcesContent":["import { TokenParams as SolanaTokenParams } from \"@/hooks/OnChain/useSolanaWrite\";\nimport { TokenParams as SecretTokenParams } from \"@/hooks/OnChain/useSecretNetworkWrite\";\nimport { TokenFormData, TokenMetadata, ShowcaseMetadata } from \"@/types/token\";\nimport { TokenFactoryService } from \"./TokenFactoryService\";\n\ninterface TokenCreationResult {\n  contractAddress: string;\n  metadataCid: string;\n  showcaseCid?: string;\n}\n\ninterface MetadataUploadResult {\n  metadataCid: string;\n  showcaseCid?: string;\n}\n\nexport class TokenCreationService {\n  private tokenFactoryService: TokenFactoryService;\n\n  constructor() {\n    // Initialize TokenFactoryService with environment variables\n    this.tokenFactoryService = new TokenFactoryService(\n      process.env.NEXT_PUBLIC_EVM_RPC_URL!,\n      process.env.NEXT_PUBLIC_EVM_CONTRACT_ADDRESS!,\n      process.env.NEXT_PUBLIC_EVM_PRIVATE_KEY!\n    );\n  }\n\n  private prepareTokenMetadata(values: TokenFormData): TokenMetadata {\n    return {\n      name: values.name,\n      symbol: values.symbol,\n      chain: values.chain,\n      description: values.description,\n      image: values.image,\n      decimals: values.decimals,\n      initialSupply: values.initialSupply,\n      isMintable: values.isMintable,\n      isBurnable: values.isBurnable,\n      isPausable: values.isPausable,\n      hasRevokeMintAuthority: values.hasRevokeMintAuthority,\n      hasFreezeAuthority: values.hasFreezeAuthority,\n    };\n  }\n\n  private prepareShowcaseMetadata(values: TokenFormData): ShowcaseMetadata {\n    return {\n      youtubeLink: values.showcase?.youtubeLink,\n      socialLinks: values.showcase?.socialLinks,\n      roadmap: values.showcase?.roadmap,\n      team: values.showcase?.team?.map((member) => ({\n        name: member.name,\n        role: member.role,\n        profileImage: member.profileImage,\n        socialLinks: Object.fromEntries(\n          Object.entries(member.socialLinks ?? {}).filter(\n            ([, value]) => value !== undefined\n          )\n        ),\n      })),\n      tags: values.showcase?.tags,\n    };\n  }\n\n  /**\n   * Creates a token on the specified chain and registers it in the factory\n   * @param values Form values from TokenCreationForm\n   * @param chainType The blockchain to create the token on\n   * @param uploadTokenMetadata Function to upload metadata\n   * @param createSolanaToken Function from useSolanaWrite\n   * @param createSecretToken Function from useSecretNetworkWrite\n   * @param createEvmToken Function from useEvmWrite\n   */\n  async createToken(\n    values: TokenFormData,\n    chainType: \"evm\" | \"solana\" | \"secret\" | \"ton\",\n    showCase: boolean,\n    {\n      uploadTokenMetadata,\n      createSolanaToken,\n      createSecretToken,\n      createEvmToken,\n    }: {\n      uploadTokenMetadata: (\n        metadata: TokenMetadata,\n        showcase?: ShowcaseMetadata\n      ) => Promise<MetadataUploadResult>;\n      createSolanaToken?: (params: SolanaTokenParams) => Promise<{\n        signature: string;\n        mintAddress: string;\n        tokenAccount: string;\n        ownerAddress: string;\n      }>;\n      createSecretToken?: (params: SecretTokenParams) => Promise<{\n        transactionHash: string;\n        contractAddress: string;\n        ownerAddress: string;\n      }>;\n      createEvmToken?: (\n        name: string,\n        symbol: string,\n        initialSupply: number,\n        showcaseCid: string,\n        tokenMetadataCid: string\n      ) => Promise<string>;\n    }\n  ): Promise<TokenCreationResult> {\n    try {\n      console.log(\"creating token pls wait\");\n      console.log(values, \"values\");\n      // Prepare metadata\n      const tokenMetadata = this.prepareTokenMetadata(values);\n      const showcaseMetadata = this.prepareShowcaseMetadata(values);\n\n      // Upload metadata\n      const { metadataCid, showcaseCid } = await uploadTokenMetadata(\n        tokenMetadata,\n        showCase ? showcaseMetadata : undefined\n      );\n      console.log(\"cid\", metadataCid);\n      let contractAddress: string;\n      let ownerAddress: string;\n\n      // Create token based on chain type\n      switch (chainType) {\n        case \"solana\": {\n          if (!createSolanaToken)\n            throw new Error(\"Solana creation not provided\");\n\n          const tokenParams: SolanaTokenParams = {\n            name: values.name,\n            symbol: values.symbol,\n            uri: metadataCid,\n            decimals: values.decimals,\n            initialSupply: Number(values.initialSupply),\n            isMintable: values.isMintable ?? false,\n            isFreezable: values.hasFreezeAuthority ?? false,\n            isBurnable: values.isBurnable ?? false,\n            isPausable: values.isPausable ?? false,\n          };\n\n          const result = await createSolanaToken(tokenParams);\n          contractAddress = result.mintAddress;\n          ownerAddress = result.ownerAddress;\n\n          // Register token in factory using TokenFactoryService\n          await this.tokenFactoryService.addTokenContract(ownerAddress, {\n            chain: 2, // Solana\n            tokenAddress: contractAddress,\n            showcaseCid: showcaseCid || \"\",\n            tokenMetadataCid: metadataCid,\n            hasShowcase: !!showcaseCid,\n          });\n          break;\n        }\n\n        case \"secret\": {\n          if (!createSecretToken)\n            throw new Error(\"Secret creation not provided\");\n\n          const tokenParams: SecretTokenParams = {\n            name: values.name,\n            symbol: values.symbol,\n            initialSupply: values.initialSupply,\n            decimals: values.decimals,\n            publicTotalSupply: true,\n            enableMint: values.isMintable ?? false,\n            enableBurn: values.isBurnable ?? false,\n          };\n\n          const result = await createSecretToken(tokenParams);\n          contractAddress = result.contractAddress;\n          ownerAddress = result.ownerAddress;\n\n          // Register token in factory using TokenFactoryService\n          await this.tokenFactoryService.addTokenContract(ownerAddress, {\n            chain: 0, // Secret Network\n            tokenAddress: contractAddress,\n            showcaseCid: showcaseCid || \"\",\n            tokenMetadataCid: metadataCid,\n            hasShowcase: !!showcaseCid,\n          });\n          break;\n        }\n\n        case \"evm\": {\n          if (!createEvmToken) throw new Error(\"EVM creation not provided\");\n\n          contractAddress = await createEvmToken(\n            values.name,\n            values.symbol,\n            Number(values.initialSupply),\n            showcaseCid || \"\",\n            metadataCid\n          );\n          break;\n        }\n\n        case \"ton\":\n          throw new Error(\"TON implementation not yet available\");\n\n        default:\n          throw new Error(`Unsupported chain type: ${chainType}`);\n      }\n\n      return {\n        contractAddress,\n        metadataCid,\n        showcaseCid,\n      };\n    } catch (error) {\n      console.error(\"Error in token creation service:\", error);\n      throw error;\n    }\n  }\n}\n"],"names":[],"mappings":";;;AAGA;;AAaO,MAAM;IACH,oBAAyC;IAEjD,aAAc;QACZ,4DAA4D;QAC5D,IAAI,CAAC,mBAAmB,GAAG,IAAI,8HAAA,CAAA,sBAAmB;IAKpD;IAEQ,qBAAqB,MAAqB,EAAiB;QACjE,OAAO;YACL,MAAM,OAAO,IAAI;YACjB,QAAQ,OAAO,MAAM;YACrB,OAAO,OAAO,KAAK;YACnB,aAAa,OAAO,WAAW;YAC/B,OAAO,OAAO,KAAK;YACnB,UAAU,OAAO,QAAQ;YACzB,eAAe,OAAO,aAAa;YACnC,YAAY,OAAO,UAAU;YAC7B,YAAY,OAAO,UAAU;YAC7B,YAAY,OAAO,UAAU;YAC7B,wBAAwB,OAAO,sBAAsB;YACrD,oBAAoB,OAAO,kBAAkB;QAC/C;IACF;IAEQ,wBAAwB,MAAqB,EAAoB;QACvE,OAAO;YACL,aAAa,OAAO,QAAQ,EAAE;YAC9B,aAAa,OAAO,QAAQ,EAAE;YAC9B,SAAS,OAAO,QAAQ,EAAE;YAC1B,MAAM,OAAO,QAAQ,EAAE,MAAM,IAAI,CAAC,SAAW,CAAC;oBAC5C,MAAM,OAAO,IAAI;oBACjB,MAAM,OAAO,IAAI;oBACjB,cAAc,OAAO,YAAY;oBACjC,aAAa,OAAO,WAAW,CAC7B,OAAO,OAAO,CAAC,OAAO,WAAW,IAAI,CAAC,GAAG,MAAM,CAC7C,CAAC,GAAG,MAAM,GAAK,UAAU;gBAG/B,CAAC;YACD,MAAM,OAAO,QAAQ,EAAE;QACzB;IACF;IAEA;;;;;;;;GAQC,GACD,MAAM,YACJ,MAAqB,EACrB,SAA8C,EAC9C,QAAiB,EACjB,EACE,mBAAmB,EACnB,iBAAiB,EACjB,iBAAiB,EACjB,cAAc,EAwBf,EAC6B;QAC9B,IAAI;YACF,QAAQ,GAAG,CAAC;YACZ,QAAQ,GAAG,CAAC,QAAQ;YACpB,mBAAmB;YACnB,MAAM,gBAAgB,IAAI,CAAC,oBAAoB,CAAC;YAChD,MAAM,mBAAmB,IAAI,CAAC,uBAAuB,CAAC;YAEtD,kBAAkB;YAClB,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,MAAM,oBACzC,eACA,WAAW,mBAAmB;YAEhC,QAAQ,GAAG,CAAC,OAAO;YACnB,IAAI;YACJ,IAAI;YAEJ,mCAAmC;YACnC,OAAQ;gBACN,KAAK;oBAAU;wBACb,IAAI,CAAC,mBACH,MAAM,IAAI,MAAM;wBAElB,MAAM,cAAiC;4BACrC,MAAM,OAAO,IAAI;4BACjB,QAAQ,OAAO,MAAM;4BACrB,KAAK;4BACL,UAAU,OAAO,QAAQ;4BACzB,eAAe,OAAO,OAAO,aAAa;4BAC1C,YAAY,OAAO,UAAU,IAAI;4BACjC,aAAa,OAAO,kBAAkB,IAAI;4BAC1C,YAAY,OAAO,UAAU,IAAI;4BACjC,YAAY,OAAO,UAAU,IAAI;wBACnC;wBAEA,MAAM,SAAS,MAAM,kBAAkB;wBACvC,kBAAkB,OAAO,WAAW;wBACpC,eAAe,OAAO,YAAY;wBAElC,sDAAsD;wBACtD,MAAM,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,cAAc;4BAC5D,OAAO;4BACP,cAAc;4BACd,aAAa,eAAe;4BAC5B,kBAAkB;4BAClB,aAAa,CAAC,CAAC;wBACjB;wBACA;oBACF;gBAEA,KAAK;oBAAU;wBACb,IAAI,CAAC,mBACH,MAAM,IAAI,MAAM;wBAElB,MAAM,cAAiC;4BACrC,MAAM,OAAO,IAAI;4BACjB,QAAQ,OAAO,MAAM;4BACrB,eAAe,OAAO,aAAa;4BACnC,UAAU,OAAO,QAAQ;4BACzB,mBAAmB;4BACnB,YAAY,OAAO,UAAU,IAAI;4BACjC,YAAY,OAAO,UAAU,IAAI;wBACnC;wBAEA,MAAM,SAAS,MAAM,kBAAkB;wBACvC,kBAAkB,OAAO,eAAe;wBACxC,eAAe,OAAO,YAAY;wBAElC,sDAAsD;wBACtD,MAAM,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,cAAc;4BAC5D,OAAO;4BACP,cAAc;4BACd,aAAa,eAAe;4BAC5B,kBAAkB;4BAClB,aAAa,CAAC,CAAC;wBACjB;wBACA;oBACF;gBAEA,KAAK;oBAAO;wBACV,IAAI,CAAC,gBAAgB,MAAM,IAAI,MAAM;wBAErC,kBAAkB,MAAM,eACtB,OAAO,IAAI,EACX,OAAO,MAAM,EACb,OAAO,OAAO,aAAa,GAC3B,eAAe,IACf;wBAEF;oBACF;gBAEA,KAAK;oBACH,MAAM,IAAI,MAAM;gBAElB;oBACE,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,WAAW;YAC1D;YAEA,OAAO;gBACL;gBACA;gBACA;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oCAAoC;YAClD,MAAM;QACR;IACF;AACF"}},
    {"offset": {"line": 1752, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1758, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/lib/explorer.ts"],"sourcesContent":["export function getExplorerUrl(\n  chain: \"evm\" | \"solana\" | \"secret\" | \"ton\"\n): string {\n  switch (chain) {\n    case \"evm\":\n      return \"https://blockscout.taurus.autonomys.xyz\";\n    case \"solana\":\n      return \"https://explorer.solana.com\";\n    case \"secret\":\n      return \"https://www.secretscan.io\";\n    case \"ton\":\n      return \"https://tonscan.org\";\n    default:\n      return \"\";\n  }\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,eACd,KAA0C;IAE1C,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF"}},
    {"offset": {"line": 1775, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1781, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/create/TokenCreationSuccess.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { getExplorerUrl } from \"@/lib/explorer\";\nimport { formatAddress } from \"@/lib/utils\";\nimport { ExternalLink } from \"lucide-react\";\nimport { Icons } from \"../ui/icons\";\n\ninterface TokenCreationSuccessProps {\n  data: {\n    signature?: string;\n    mintAddress?: string;\n    tokenAccount?: string;\n    ownerAddress?: string;\n    contractAddress?: string; // for EVM\n    chain: \"evm\" | \"solana\" | \"secret\" | \"ton\";\n  };\n  onCreateAgent: () => void;\n}\n\nexport function TokenCreationSuccess({\n  data,\n  onCreateAgent,\n}: TokenCreationSuccessProps) {\n  const explorerUrl = getExplorerUrl(data.chain);\n\n  return (\n    <Card className=\"p-4 md:p-6 space-y-4 md:space-y-6\">\n      <div className=\"text-center\">\n        <h2 className=\"text-xl md:text-2xl font-bold text-green-500 mb-1 md:mb-2\">\n          🎉 Token Created Successfully!\n        </h2>\n        <p className=\"text-sm md:text-base text-gray-400\">\n          Your token has been deployed and is ready to use\n        </p>\n      </div>\n\n      <div className=\"space-y-3 md:space-y-4\">\n        {data.mintAddress && (\n          <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center gap-1 sm:gap-4\">\n            <span className=\"text-sm md:text-base text-gray-400\">\n              Token Address\n            </span>\n            <a\n              href={`${explorerUrl}/address/${data.mintAddress}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center hover:text-purple-400 transition-colors text-sm md:text-base break-all sm:break-normal\"\n            >\n              {formatAddress(data.mintAddress)}\n              <ExternalLink className=\"ml-2 h-3 w-3 md:h-4 md:w-4 flex-shrink-0\" />\n            </a>\n          </div>\n        )}\n\n        {data.contractAddress && (\n          <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center gap-1 sm:gap-4\">\n            <span className=\"text-sm md:text-base text-gray-400\">\n              Contract Address\n            </span>\n            <a\n              href={`${explorerUrl}/address/${data.contractAddress}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center hover:text-purple-400 transition-colors text-sm md:text-base break-all sm:break-normal\"\n            >\n              {formatAddress(data.contractAddress)}\n              <ExternalLink className=\"ml-2 h-3 w-3 md:h-4 md:w-4 flex-shrink-0\" />\n            </a>\n          </div>\n        )}\n\n        {data.signature && (\n          <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center gap-1 sm:gap-4\">\n            <span className=\"text-sm md:text-base text-gray-400\">\n              Transaction\n            </span>\n            <a\n              href={`${explorerUrl}/tx/${data.signature}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center hover:text-purple-400 transition-colors text-sm md:text-base break-all sm:break-normal\"\n            >\n              {formatAddress(data.signature)}\n              <ExternalLink className=\"ml-2 h-3 w-3 md:h-4 md:w-4 flex-shrink-0\" />\n            </a>\n          </div>\n        )}\n      </div>\n\n      <div className=\"pt-6 md:pt-8 border-t\">\n        <div className=\"flex flex-col sm:flex-row items-start sm:items-center sm:justify-between gap-4 sm:gap-6\">\n          <div>\n            <h3 className=\"text-xl md:text-2xl font-bold\">\n              Enhance Your Token\n            </h3>\n            <p className=\"text-sm md:text-base text-gray-500 mt-1\">\n              Deploy an AI agent to automate token management and marketing\n            </p>\n          </div>\n          <Button\n            onClick={onCreateAgent}\n            className=\"w-full sm:w-auto flex items-center justify-center px-4 md:px-6 py-2 bg-purple-600 hover:bg-purple-700 text-white font-medium rounded-lg transition-colors\"\n          >\n            <span>Create Agent</span>\n            <Icons.arrowRight className=\"ml-2 h-3 w-3 md:h-4 md:w-4\" />\n          </Button>\n        </div>\n      </div>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAEA;AADA;;;;;;;;AAeO,SAAS,qBAAqB,EACnC,IAAI,EACJ,aAAa,EACa;IAC1B,MAAM,cAAc,CAAA,GAAA,sHAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,KAAK;IAE7C,qBACE,+YAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,+YAAC;gBAAI,WAAU;;kCACb,+YAAC;wBAAG,WAAU;kCAA4D;;;;;;kCAG1E,+YAAC;wBAAE,WAAU;kCAAqC;;;;;;;;;;;;0BAKpD,+YAAC;gBAAI,WAAU;;oBACZ,KAAK,WAAW,kBACf,+YAAC;wBAAI,WAAU;;0CACb,+YAAC;gCAAK,WAAU;0CAAqC;;;;;;0CAGrD,+YAAC;gCACC,MAAM,GAAG,YAAY,SAAS,EAAE,KAAK,WAAW,EAAE;gCAClD,QAAO;gCACP,KAAI;gCACJ,WAAU;;oCAET,CAAA,GAAA,mHAAA,CAAA,gBAAa,AAAD,EAAE,KAAK,WAAW;kDAC/B,+YAAC,0SAAA,CAAA,eAAY;wCAAC,WAAU;;;;;;;;;;;;;;;;;;oBAK7B,KAAK,eAAe,kBACnB,+YAAC;wBAAI,WAAU;;0CACb,+YAAC;gCAAK,WAAU;0CAAqC;;;;;;0CAGrD,+YAAC;gCACC,MAAM,GAAG,YAAY,SAAS,EAAE,KAAK,eAAe,EAAE;gCACtD,QAAO;gCACP,KAAI;gCACJ,WAAU;;oCAET,CAAA,GAAA,mHAAA,CAAA,gBAAa,AAAD,EAAE,KAAK,eAAe;kDACnC,+YAAC,0SAAA,CAAA,eAAY;wCAAC,WAAU;;;;;;;;;;;;;;;;;;oBAK7B,KAAK,SAAS,kBACb,+YAAC;wBAAI,WAAU;;0CACb,+YAAC;gCAAK,WAAU;0CAAqC;;;;;;0CAGrD,+YAAC;gCACC,MAAM,GAAG,YAAY,IAAI,EAAE,KAAK,SAAS,EAAE;gCAC3C,QAAO;gCACP,KAAI;gCACJ,WAAU;;oCAET,CAAA,GAAA,mHAAA,CAAA,gBAAa,AAAD,EAAE,KAAK,SAAS;kDAC7B,+YAAC,0SAAA,CAAA,eAAY;wCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;0BAMhC,+YAAC;gBAAI,WAAU;0BACb,cAAA,+YAAC;oBAAI,WAAU;;sCACb,+YAAC;;8CACC,+YAAC;oCAAG,WAAU;8CAAgC;;;;;;8CAG9C,+YAAC;oCAAE,WAAU;8CAA0C;;;;;;;;;;;;sCAIzD,+YAAC,kIAAA,CAAA,SAAM;4BACL,SAAS;4BACT,WAAU;;8CAEV,+YAAC;8CAAK;;;;;;8CACN,+YAAC,iIAAA,CAAA,QAAK,CAAC,UAAU;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMxC"}},
    {"offset": {"line": 2019, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2025, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/create/TokenCreationForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { type IconKeys } from \"@/components/ui/icons\";\nimport { TagInput } from \"./TagInput\";\nimport { PlusCircle, X } from \"lucide-react\";\nimport { TokenFormData, ShowcaseMetadata } from \"@/types/token\";\nimport { ImageUpload } from \"./ImageUpload\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport * as z from \"zod\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { useState } from \"react\";\nimport { useSolanaWrite } from \"@/hooks/OnChain/useSolanaWrite\";\nimport { SecretNetworkWrite } from \"@/hooks/OnChain/useSecretNetworkWrite\";\nimport { useWriteContracts } from \"@/hooks/OnChain/useWriteContracts\";\nimport { useTokenUpload } from \"@/hooks/autodrive/useTokenUpload\";\nimport { toast } from \"sonner\";\nimport { TokenCreationService } from \"../../../service/TokenCreationService\";\nimport { TokenCreationSuccess } from \"./TokenCreationSuccess\";\n\nconst formSchema = z\n  .object({\n    name: z.string().max(50, \"Token name must be less than 50 characters\"),\n    symbol: z.string().max(10, \"Token symbol must be less than 10 characters\"),\n    decimals: z.number().min(0).max(18),\n    chain: z.enum([\"evm\", \"solana\", \"secret\", \"ton\"]),\n    initialSupply: z.string(),\n    description: z.string(),\n    image: z.string().url().optional().or(z.literal(\"\")),\n    showcase: z\n      .object({\n        youtubeLink: z\n          .string()\n          .url(\"Please enter a valid YouTube URL\")\n          .optional()\n          .or(z.literal(\"\")),\n        socialLinks: z\n          .object({\n            website: z\n              .string()\n              .url(\"Please enter a valid website URL (include https://)\")\n              .optional()\n              .or(z.literal(\"\")),\n            twitter: z\n              .string()\n              .url(\"Please enter a valid Twitter URL (include https://)\")\n              .optional()\n              .or(z.literal(\"\")),\n            telegram: z\n              .string()\n              .url(\"Please enter a valid Telegram URL (include https://)\")\n              .optional()\n              .or(z.literal(\"\")),\n            discord: z\n              .string()\n              .url(\"Please enter a valid Discord URL (include https://)\")\n              .optional()\n              .or(z.literal(\"\")),\n            github: z\n              .string()\n              .url(\"Please enter a valid GitHub URL (include https://)\")\n              .optional()\n              .or(z.literal(\"\")),\n            medium: z\n              .string()\n              .url(\"Please enter a valid Medium URL (include https://)\")\n              .optional()\n              .or(z.literal(\"\")),\n            reddit: z\n              .string()\n              .url(\"Please enter a valid Reddit URL (include https://)\")\n              .optional()\n              .or(z.literal(\"\")),\n            instagram: z\n              .string()\n              .url(\"Please enter a valid Instagram URL (include https://)\")\n              .optional()\n              .or(z.literal(\"\")),\n            facebook: z\n              .string()\n              .url(\"Please enter a valid Facebook URL (include https://)\")\n              .optional()\n              .or(z.literal(\"\")),\n          })\n          .optional()\n          .nullable()\n          .default({}),\n        roadmap: z\n          .array(\n            z.object({\n              title: z.string().optional().or(z.literal(\"\")),\n              description: z.string().optional().or(z.literal(\"\")),\n              date: z.string().optional().or(z.literal(\"\")),\n              completed: z.boolean().optional().default(false),\n            })\n          )\n          .optional()\n          .nullable()\n          .default([]),\n        team: z\n          .array(\n            z.object({\n              name: z.string().optional().or(z.literal(\"\")),\n              role: z.string().optional().or(z.literal(\"\")),\n              profileImage: z.string().url().optional().or(z.literal(\"\")),\n              socialLinks: z\n                .object({\n                  twitter: z.string().url().optional().or(z.literal(\"\")),\n                  linkedin: z.string().url().optional().or(z.literal(\"\")),\n                  github: z.string().url().optional().or(z.literal(\"\")),\n                })\n                .optional()\n                .nullable()\n                .default({}),\n            })\n          )\n          .optional()\n          .nullable()\n          .default([]),\n        tags: z.array(z.string()).max(3).optional().nullable().default([]),\n      })\n      .optional()\n      .nullable()\n      .default({}),\n    isMintable: z.boolean().optional().default(false),\n    isBurnable: z.boolean().optional().default(false),\n    isPausable: z.boolean().optional().default(false),\n    hasRevokeMintAuthority: z.boolean().optional().default(false),\n    hasFreezeAuthority: z.boolean().optional().default(false),\n  })\n  .required();\n\ntype FormValues = z.infer<typeof formSchema>;\n\ninterface TokenCreationFormProps {\n  initialData?: Partial<TokenFormData>;\n  chainType: \"evm\" | \"solana\" | \"secret\" | \"ton\";\n}\n\nexport function TokenCreationForm({\n  initialData,\n  chainType,\n}: TokenCreationFormProps) {\n  const { uploadTokenMetadata, isUploading } = useTokenUpload();\n  const { createToken: createSolanaToken } = useSolanaWrite();\n  const { createToken: createSecretToken } = SecretNetworkWrite();\n  const { createEvmToken } = useWriteContracts();\n  const [showShowcase, setShowShowcase] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [creationResult, setCreationResult] = useState<any>(null);\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: initialData?.name || \"\",\n      symbol: initialData?.symbol || \"\",\n      chain: chainType,\n      decimals: 9,\n      initialSupply: initialData?.initialSupply || \"\",\n      description: initialData?.description || \"\",\n      image: initialData?.image || \"\",\n      showcase: {\n        youtubeLink: \"\",\n        socialLinks: {\n          website: \"\",\n          twitter: \"\",\n          telegram: \"\",\n          discord: \"\",\n          github: \"\",\n          medium: \"\",\n          reddit: \"\",\n          instagram: \"\",\n          facebook: \"\",\n        },\n        roadmap: [],\n        team: [],\n        tags: [],\n      },\n      isMintable: initialData?.isMintable || false,\n      isBurnable: initialData?.isBurnable || false,\n      isPausable: initialData?.isPausable || false,\n\n      hasRevokeMintAuthority: initialData?.hasRevokeMintAuthority || false,\n      hasFreezeAuthority: initialData?.hasFreezeAuthority || false,\n    },\n  });\n\n  async function onSubmit(values: FormValues) {\n    if (isSubmitting) return;\n\n    setIsSubmitting(true);\n    const toastId = toast.loading(\"Creating your token...\");\n\n    try {\n      // Clean up showcase data if showcase is disabled\n      const submissionValues = {\n        ...values,\n        showcase: showShowcase ? values.showcase : null,\n      };\n\n      const tokenService = new TokenCreationService();\n      const result = await tokenService.createToken(\n        submissionValues,\n        chainType,\n        showShowcase,\n        {\n          uploadTokenMetadata,\n          createSolanaToken,\n          createSecretToken,\n          createEvmToken,\n        }\n      );\n\n      console.log(\"results\", result);\n\n      setCreationResult(result);\n      toast.success(\"Token created successfully! 🎉\", {\n        id: toastId,\n      });\n      return result;\n    } catch (error) {\n      console.error(\"Error creating token:\", error);\n      toast.error(\n        error instanceof Error ? error.message : \"Failed to create token\",\n        {\n          id: toastId,\n        }\n      );\n      throw error;\n    } finally {\n      setIsSubmitting(false);\n    }\n  }\n\n  const socialLinks: Array<{\n    name: keyof NonNullable<ShowcaseMetadata[\"socialLinks\"]>;\n    icon: IconKeys;\n    placeholder: string;\n  }> = [\n    {\n      name: \"website\",\n      icon: \"globe\",\n      placeholder: \"https://website.com\",\n    },\n    {\n      name: \"twitter\",\n      icon: \"twitter\",\n      placeholder: \"https://twitter.com/\",\n    },\n    {\n      name: \"telegram\",\n      icon: \"telegram\",\n      placeholder: \"https://telegram.com/\",\n    },\n    {\n      name: \"discord\",\n      icon: \"discord\",\n      placeholder: \"https://discord.com/\",\n    },\n    {\n      name: \"medium\",\n      icon: \"medium\",\n      placeholder: \"https://medium.com/\",\n    },\n    {\n      name: \"facebook\",\n      icon: \"facebook\",\n      placeholder: \"https://facebook.com/\",\n    },\n  ];\n\n  const handleFormSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const values = form.getValues();\n\n    // If showcase is disabled, remove showcase data\n    if (!showShowcase) {\n      values.showcase = null;\n    }\n\n    try {\n      const isValid = await form.trigger();\n      if (!isValid) {\n        console.log(\"Form validation errors:\", form.formState.errors);\n        return;\n      }\n\n      await onSubmit(values);\n    } catch (error) {\n      console.error(\"Form submission failed:\", error);\n    }\n  };\n\n  if (creationResult) {\n    console.log(creationResult);\n    return (\n      <TokenCreationSuccess\n        data={{\n          ...creationResult,\n          chain: chainType,\n        }}\n        onCreateAgent={() => {\n          // Handle agent creation navigation\n          // You can use router.push() here\n        }}\n      />\n    );\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={handleFormSubmit} className=\"space-y-8\">\n        <Card className=\"p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Token Information</h2>\n\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Token Name (Max 50)</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"My awesome token\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"symbol\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Token Symbol (Max 10)</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"AWESOME\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"decimals\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Decimals</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"number\"\n                      placeholder=\"9\"\n                      {...field}\n                      onChange={(e) => field.onChange(Number(e.target.value))}\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    Change the number of decimals for your token\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"initialSupply\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Supply</FormLabel>\n                  <FormControl>\n                    <Input type=\"number\" placeholder=\"1000000000\" {...field} />\n                  </FormControl>\n                  <FormDescription>\n                    The initial number of available tokens that will be created\n                    in your wallet\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {(chainType === \"solana\" || chainType === \"ton\") && (\n              <FormField\n                control={form.control}\n                name=\"image\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Logo</FormLabel>\n                    <FormControl>\n                      <ImageUpload\n                        value={field.value || \"\"}\n                        onChange={field.onChange}\n                      />\n                    </FormControl>\n                    <FormDescription>Add logo for your token</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            )}\n\n            <FormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Description</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Here you can briefly describe your token\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n        </Card>\n\n        <Card className=\"p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Additional Settings</h2>\n\n          <div className=\"space-y-4\">\n            {(chainType === \"solana\" || chainType === \"secret\") && (\n              <>\n                <FormField\n                  control={form.control}\n                  name=\"isMintable\"\n                  render={({ field }) => (\n                    <FormItem className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <FormLabel>Mintable</FormLabel>\n                        <FormDescription>\n                          If you select it immutable it means you will not be\n                          able to update token metadata\n                        </FormDescription>\n                      </div>\n                      <FormControl>\n                        <Switch\n                          checked={field.value}\n                          onCheckedChange={field.onChange}\n                        />\n                      </FormControl>\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"isBurnable\"\n                  render={({ field }) => (\n                    <FormItem className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <FormLabel>Burnable</FormLabel>\n                        <FormDescription>\n                          Allow tokens to be burned (permanently removed from\n                          circulation)\n                        </FormDescription>\n                      </div>\n                      <FormControl>\n                        <Switch\n                          checked={field.value}\n                          onCheckedChange={field.onChange}\n                        />\n                      </FormControl>\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"isPausable\"\n                  render={({ field }) => (\n                    <FormItem className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <FormLabel>Pausable</FormLabel>\n                        <FormDescription>\n                          Allow token transfers to be paused in case of\n                          emergency\n                        </FormDescription>\n                      </div>\n                      <FormControl>\n                        <Switch\n                          checked={field.value}\n                          onCheckedChange={field.onChange}\n                        />\n                      </FormControl>\n                    </FormItem>\n                  )}\n                />\n              </>\n            )}\n\n            {chainType === \"solana\" && (\n              <>\n                <FormField\n                  control={form.control}\n                  name=\"hasRevokeMintAuthority\"\n                  render={({ field }) => (\n                    <FormItem className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <FormLabel>Revoke Mint Authority</FormLabel>\n                        <FormDescription>\n                          Prevent additional token supply to increase forever\n                          more\n                        </FormDescription>\n                      </div>\n                      <FormControl>\n                        <Switch\n                          checked={field.value}\n                          onCheckedChange={field.onChange}\n                        />\n                      </FormControl>\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"hasFreezeAuthority\"\n                  render={({ field }) => (\n                    <FormItem className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <FormLabel>Freeze Authority</FormLabel>\n                        <FormDescription>\n                          Enable token freezing functionality\n                        </FormDescription>\n                      </div>\n                      <FormControl>\n                        <Switch\n                          checked={field.value}\n                          onCheckedChange={field.onChange}\n                        />\n                      </FormControl>\n                    </FormItem>\n                  )}\n                />\n              </>\n            )}\n          </div>\n        </Card>\n\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-xl font-semibold\">Showcase Token</h2>\n            <Switch checked={showShowcase} onCheckedChange={setShowShowcase} />\n          </div>\n\n          {showShowcase && (\n            <div className=\"space-y-8\">\n              <FormField\n                control={form.control}\n                name=\"showcase.tags\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Tags (optional)</FormLabel>\n                    <FormControl>\n                      <TagInput\n                        value={field.value || []}\n                        onChange={field.onChange}\n                        placeholder=\"Enter tag\"\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      Select tags that are most associated with your project -\n                      max 3 tags\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-semibold\">Social Links</h3>\n                <p className=\"text-sm text-gray-500\">\n                  Please enter complete URLs including https://\n                </p>\n\n                {socialLinks.map((social) => (\n                  <FormField\n                    key={social.name}\n                    control={form.control}\n                    name={`showcase.socialLinks.${social.name}`}\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-col\">\n                        <div className=\"flex items-center space-x-2\">\n                          {(() => {\n                            const Icon = Icons[social.icon];\n                            return <Icon className=\"w-5 h-5\" />;\n                          })()}\n                          <FormLabel className=\"capitalize\">\n                            {social.name}\n                          </FormLabel>\n                        </div>\n                        <FormControl>\n                          <Input {...field} placeholder={social.placeholder} />\n                        </FormControl>\n                        <FormMessage className=\"text-red-500\" />\n                      </FormItem>\n                    )}\n                  />\n                ))}\n              </div>\n\n              <div>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h2 className=\"text-xl font-semibold\">Team Members</h2>\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => {\n                      const currentTeam = form.getValues(\"showcase.team\") || [];\n                      form.setValue(\"showcase.team\", [\n                        ...currentTeam,\n                        {\n                          name: \"\",\n                          role: \"\",\n                          profileImage: \"\",\n                          socialLinks: {},\n                        },\n                      ]);\n                    }}\n                  >\n                    <PlusCircle className=\"w-4 h-4 mr-2\" />\n                    Add Team Member\n                  </Button>\n                </div>\n\n                {form.formState.errors.showcase?.team && (\n                  <p className=\"text-red-500 text-sm mb-2\">\n                    {form.formState.errors.showcase.team.message}\n                  </p>\n                )}\n\n                <div className=\"space-y-4\">\n                  {(form.watch(\"showcase.team\") || []).map((_, index) => (\n                    <Card key={index} className=\"p-4 relative\">\n                      <Button\n                        type=\"button\"\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"absolute right-2 top-2\"\n                        onClick={() => {\n                          const currentTeam =\n                            form.getValues(\"showcase.team\") || [];\n                          form.setValue(\n                            \"showcase.team\",\n                            currentTeam.filter((_, i) => i !== index)\n                          );\n                        }}\n                      >\n                        <X className=\"w-4 h-4\" />\n                      </Button>\n\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <Controller\n                          control={form.control}\n                          name={`showcase.team.${index}.name`}\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Name</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"John Doe\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        <Controller\n                          control={form.control}\n                          name={`showcase.team.${index}.role`}\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Role</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"CEO\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        <Controller\n                          control={form.control}\n                          name={`showcase.team.${index}.profileImage`}\n                          render={({ field }) => (\n                            <FormItem className=\"col-span-2\">\n                              <FormLabel>Profile Image</FormLabel>\n                              <FormControl>\n                                <ImageUpload\n                                  value={field.value || \"\"}\n                                  onChange={(url) => field.onChange(url)}\n                                />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        <div className=\"col-span-2 space-y-2\">\n                          <Label>Social Links</Label>\n                          <div className=\"grid grid-cols-2 gap-4\">\n                            {[\"twitter\", \"linkedin\", \"github\"].map(\n                              (platform) => (\n                                <Controller\n                                  key={platform}\n                                  control={form.control}\n                                  name={`showcase.team.${index}.socialLinks.${platform}`}\n                                  render={({ field }) => (\n                                    <FormItem>\n                                      <FormLabel className=\"capitalize\">\n                                        {platform}\n                                      </FormLabel>\n                                      <FormControl>\n                                        <Input\n                                          placeholder={`https://${platform}.com/username`}\n                                          {...field}\n                                        />\n                                      </FormControl>\n                                      <FormMessage />\n                                    </FormItem>\n                                  )}\n                                />\n                              )\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </Card>\n                  ))}\n                </div>\n              </div>\n\n              <div>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h2 className=\"text-xl font-semibold\">Roadmap</h2>\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => {\n                      const currentRoadmap =\n                        form.getValues(\"showcase.roadmap\") || [];\n                      form.setValue(\"showcase.roadmap\", [\n                        ...currentRoadmap,\n                        {\n                          title: \"\",\n                          description: \"\",\n                          date: \"\",\n                          completed: false,\n                        },\n                      ]);\n                    }}\n                  >\n                    <PlusCircle className=\"w-4 h-4 mr-2\" />\n                    Add Milestone\n                  </Button>\n                </div>\n\n                <div className=\"space-y-4\">\n                  {(form.watch(\"showcase.roadmap\") || []).map((_, index) => (\n                    <Card key={index} className=\"p-4 relative\">\n                      <Button\n                        type=\"button\"\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"absolute right-2 top-2\"\n                        onClick={() => {\n                          const currentRoadmap =\n                            form.getValues(\"showcase.roadmap\") || [];\n                          form.setValue(\n                            \"showcase.roadmap\",\n                            currentRoadmap.filter((_, i) => i !== index)\n                          );\n                        }}\n                      >\n                        <X className=\"w-4 h-4\" />\n                      </Button>\n\n                      <div className=\"grid gap-4\">\n                        <div className=\"grid grid-cols-2 gap-4\">\n                          <Controller\n                            control={form.control}\n                            name={`showcase.roadmap.${index}.title`}\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Title</FormLabel>\n                                <FormControl>\n                                  <Input placeholder=\"Phase 1\" {...field} />\n                                </FormControl>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n\n                          <Controller\n                            control={form.control}\n                            name={`showcase.roadmap.${index}.date`}\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Date</FormLabel>\n                                <FormControl>\n                                  <Input type=\"date\" {...field} />\n                                </FormControl>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n                        </div>\n\n                        <Controller\n                          control={form.control}\n                          name={`showcase.roadmap.${index}.description`}\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Description</FormLabel>\n                              <FormControl>\n                                <Textarea\n                                  placeholder=\"Describe this milestone...\"\n                                  {...field}\n                                />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        <Controller\n                          control={form.control}\n                          name={`showcase.roadmap.${index}.completed`}\n                          render={({ field }) => (\n                            <FormItem className=\"flex items-center space-x-2\">\n                              <FormControl>\n                                <Switch\n                                  checked={field.value}\n                                  onCheckedChange={field.onChange}\n                                />\n                              </FormControl>\n                              <FormLabel>Completed</FormLabel>\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n                    </Card>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n        </Card>\n\n        <div className=\"space-y-4\">\n          {Object.keys(form.formState.errors).length > 0 && (\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n              <h3 className=\"text-red-800 font-medium mb-2\">\n                Please fix the following errors:\n              </h3>\n              <ul className=\"list-disc pl-5 space-y-1\">\n                {Object.entries(form.formState.errors).map(\n                  ([key, error]: [string, any]) => {\n                    if (key === \"showcase\") {\n                      return Object.entries(error).map(\n                        ([showcaseKey, showcaseError]: [string, any]) => {\n                          if (showcaseKey === \"socialLinks\") {\n                            return Object.entries(showcaseError).map(\n                              ([socialKey, socialError]: [string, any]) => (\n                                <li\n                                  key={`${key}-${showcaseKey}-${socialKey}`}\n                                  className=\"text-red-700 text-sm\"\n                                >\n                                  {`${socialKey}: ${socialError.message}`}\n                                </li>\n                              )\n                            );\n                          }\n                          return (\n                            <li\n                              key={`${key}-${showcaseKey}`}\n                              className=\"text-red-700 text-sm\"\n                            >\n                              {`${showcaseKey}: ${showcaseError.message}`}\n                            </li>\n                          );\n                        }\n                      );\n                    }\n                    return (\n                      <li key={key} className=\"text-red-700 text-sm\">\n                        {`${key}: ${error.message}`}\n                      </li>\n                    );\n                  }\n                )}\n              </ul>\n            </div>\n          )}\n\n          <Button\n            type=\"submit\"\n            className=\"w-full\"\n            disabled={isSubmitting || isUploading}\n          >\n            {isUploading\n              ? \"Uploading Metadata...\"\n              : isSubmitting\n              ? \"Creating Token...\"\n              : \"Create Token\"}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3747, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/ChainSelector.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { useAccount, useChainId, useSwitchChain } from \"wagmi\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { toast } from \"sonner\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { useSecretNetwork } from \"@/providers/secretNetworkContext\";\nimport { useTonWallet } from \"../../tonconnect\";\n\nexport interface ChainOption {\n  id: number | string;\n  name: string;\n  icon: keyof typeof Icons;\n  isEVM: boolean;\n  features?: string[];\n  chainId?: number;\n}\n\nconst SUPPORTED_CHAINS: ChainOption[] = [\n  {\n    id: \"solana\",\n    name: \"Solana\",\n    icon: \"solana\",\n    isEVM: false,\n    features: [\"SPL Tokens\", \"Fast Transactions\"],\n  },\n  {\n    id: \"secret\",\n    name: \"Secret Network\",\n    icon: \"secret\",\n    isEVM: false,\n    features: [\"private\", \"encrypted\"],\n  },\n  {\n    id: \"taurus\",\n    name: \"Taurus Autonomous\",\n    icon: \"taurus\",\n    isEVM: true,\n    chainId: 490000,\n    features: [\"mintable\", \"burnable\", \"pausable\"],\n  },\n  {\n    id: \"ton\",\n    name: \"TON\",\n    icon: \"ton\",\n    isEVM: false,\n    features: [\"metadata\", \"freezeAuthority\"],\n  },\n];\n\ninterface ChainSelectorProps {\n  onSelect: (chain: ChainOption) => void;\n  selectedChain: ChainOption | null; // Made required and removed undefined\n}\n\nexport function ChainSelector({ onSelect, selectedChain }: ChainSelectorProps) {\n  const chainId = useChainId();\n  const { switchChainAsync } = useSwitchChain();\n  const { isConnected: isSecretConnected } = useSecretNetwork();\n  const { isConnected: isEvmConnected } = useAccount();\n  const { connected: isSolanaConnected } = useWallet();\n  const tonWallet = useTonWallet();\n  const isTonConnected = !!tonWallet;\n\n  const [isLoading, setIsLoading] = useState<string | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [localSelectedChain, setLocalSelectedChain] =\n    useState<ChainOption | null>(selectedChain);\n\n  useEffect(() => {\n    setLocalSelectedChain(selectedChain);\n  }, [selectedChain]);\n\n  const getCurrentChain = () => {\n    if (isSecretConnected) return \"secret\";\n    if (isEvmConnected) return \"taurus\";\n    if (isSolanaConnected) return \"solana\";\n    if (isTonConnected) return \"ton\";\n    return null;\n  };\n\n  const handleChainSelect = async (chainOption: ChainOption) => {\n    setIsLoading(chainOption.id.toString());\n    try {\n      const currentChain = getCurrentChain();\n\n      if (currentChain && currentChain !== chainOption.id) {\n        toast.error(\n          `Please disconnect from ${currentChain.toUpperCase()} first`\n        );\n        return;\n      }\n\n      if (chainOption.isEVM) {\n        if (!isEvmConnected) {\n          toast.error(\"Please connect your EVM wallet first\");\n          return;\n        }\n\n        if (chainOption.chainId && chainId !== chainOption.chainId) {\n          await switchChainAsync({ chainId: chainOption.chainId });\n        }\n      } else {\n        // Handle non-EVM chain connections\n        switch (chainOption.id) {\n          case \"solana\":\n            if (!isSolanaConnected) {\n              toast.error(\"Please connect your Solana wallet first\");\n              return;\n            }\n            break;\n          case \"secret\":\n            if (!isSecretConnected) {\n              toast.error(\"Please connect your Secret Network wallet first\");\n              return;\n            }\n            break;\n          case \"ton\":\n            if (!isTonConnected) {\n              toast.error(\"Please connect your TON wallet first\");\n              return;\n            }\n            break;\n        }\n      }\n\n      setLocalSelectedChain(chainOption);\n      onSelect(chainOption);\n      setIsOpen(false);\n      toast.success(`Selected ${chainOption.name}`);\n    } catch (error: unknown) {\n      console.error(\"Error switching chain:\", error);\n      toast.error(\n        error instanceof Error\n          ? error.message\n          : \"Failed to switch chain. Please try again.\"\n      );\n    } finally {\n      setIsLoading(null);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>\n        <Card className=\"p-3 cursor-pointer hover:bg-accent flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            {localSelectedChain ? (\n              <>\n                <div className=\"w-5 h-5\">\n                  {(() => {\n                    const IconComponent =\n                      Icons[localSelectedChain?.id as keyof typeof Icons];\n                    return <IconComponent className=\"w-5 h-5\" />;\n                  })()}\n                </div>\n                <span className=\"font-medium\">{localSelectedChain.name}</span>\n              </>\n            ) : (\n              <>\n                <Icons.chain className=\"w-5 h-5\" />\n                <span>Select Chain</span>\n              </>\n            )}\n          </div>\n          <Icons.chevronDown className=\"h-4 w-4\" />\n        </Card>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>\n            {localSelectedChain\n              ? `Selected: ${localSelectedChain.name}`\n              : \"Select Chain\"}\n          </DialogTitle>\n        </DialogHeader>\n        <div className=\"grid gap-4\">\n          {SUPPORTED_CHAINS.map((chainOption) => {\n            const IconComponent = Icons[chainOption.icon];\n            const isSelected = localSelectedChain?.id === chainOption.id;\n            const isCurrentlyLoading = isLoading === chainOption.id.toString();\n            const currentChain = getCurrentChain();\n            const isConnectedToOtherChain =\n              currentChain && currentChain !== chainOption.id;\n\n            return (\n              <Card\n                key={chainOption.id}\n                className={`p-4 cursor-pointer transition-all duration-200 ${\n                  isSelected ? \"border-purple-500\" : \"border-purple-500/20\"\n                } hover:border-purple-500/40 ${\n                  isConnectedToOtherChain ? \"opacity-50\" : \"\"\n                }`}\n                onClick={() => handleChainSelect(chainOption)}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    {isCurrentlyLoading ? (\n                      <Icons.spinner className=\"w-8 h-8 animate-spin\" />\n                    ) : (\n                      <IconComponent className=\"w-8 h-8\" />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <span className=\"font-medium\">{chainOption.name}</span>\n                      {chainOption.features && (\n                        <span className=\"text-xs text-muted-foreground\">\n                          {chainOption.features.join(\" • \")}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                  {isConnectedToOtherChain && (\n                    <span className=\"text-xs text-yellow-500\">\n                      Disconnect Required\n                    </span>\n                  )}\n                </div>\n              </Card>\n            );\n          })}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4088, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4094, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/create/ThemeForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { ChainSelector } from \"@/components/ChainSelector\";\nimport { type ChainOption } from \"@/components/ChainSelector\";\nimport { toast } from \"sonner\";\nimport { generateMemeCoinOptions } from \"../../../service/MemeCoinAIGenerator\";\nimport { type MemeCoinOption } from \"../../../service/MemeCoinAIGenerator\";\ninterface ThemeFormProps {\n  selectedChain: ChainOption | null;\n  onChainSelect: (chain: ChainOption) => void;\n  onOptionsGenerated: (options: MemeCoinOption[]) => void;\n}\n\nexport function ThemeForm({\n  selectedChain,\n  onChainSelect,\n  onOptionsGenerated,\n}: ThemeFormProps) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    topics: \"\",\n    sentiment: \"bullish\",\n    style: \"casual\",\n    emojis: \"🚀,🌙,💎\",\n    phrases: \"to the moon,diamond hands,LFG\",\n  });\n\n  const handleGenerate = async () => {\n    if (!selectedChain) {\n      toast.error(\"Please select a blockchain first\");\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      //   await generateMemeCoinOptions({\n      //     input: {\n      //       topics: formData.topics.split(\",\").map((t) => t.trim()),\n      //       sentiment: formData.sentiment as \"bullish\" | \"neutral\" | \"memetic\",\n      //       style: formData.style,\n      //       emojis: formData.emojis.split(\",\").map((e) => e.trim()),\n      //       phrases: formData.phrases.split(\",\").map((p) => p.trim()),\n      //     },\n      //     onOptionsGenerated: (options) => {\n      //       onOptionsGenerated(options);\n      //       setIsLoading(false);\n      //     },\n      //     onError: (error) => {\n      //       console.error(error);\n      //       toast.error(\"Failed to generate options\");\n      //       setIsLoading(false);\n      //     },\n      //   });\n      // Simulate API call with dummy data\n      const dummyOptions = [\n        {\n          name: \"HellBucks\",\n          symbol: \"HELL\",\n          description:\n            \"Infernal crypto rising from the depths, burning through traditional finance with demonic gains! 🔥\",\n          logoPrompt: \"Cartoonish devil holding crypto coin with flames\",\n          initialSupply: 666000000,\n          tokenomics: {\n            burnPercentage: 3,\n            taxPercentage: 5,\n            maxWalletPercentage: 2,\n          },\n          marketingStyle: [\"Edgy\", \"Dark humor\", \"Provocative\", \"Rebellious\"],\n          suggestedHashtags: [\n            \"#HellCoin\",\n            \"#DiamondHandsInferno\",\n            \"#ToTheMoonFromHell\",\n            \"#LFGHellBucks\",\n          ],\n          contentStrategy: [\n            \"Viral memes\",\n            \"Satanic investment jokes\",\n            \"Community challenges\",\n            \"Extreme price prediction videos\",\n          ],\n          communityGuidelines: [\n            \"HODL like you're escaping hell\",\n            \"No fear, only gains\",\n            \"Spread the infernal gospel\",\n            \"Diamond hands or eternal damnation\",\n          ],\n        },\n        {\n          name: \"InfernalToken\",\n          symbol: \"BLZE\",\n          description:\n            \"Scorching crypto that burns through traditional investment barriers with hellfire gains! 🔥\",\n          logoPrompt: \"Flaming pentagram with crypto symbol in center\",\n          initialSupply: 666666666,\n          tokenomics: {\n            burnPercentage: 4,\n            taxPercentage: 6,\n            maxWalletPercentage: 3,\n          },\n          marketingStyle: [\n            \"Provocative\",\n            \"Rebellious\",\n            \"Dark comedy\",\n            \"Intense\",\n          ],\n          suggestedHashtags: [\n            \"#InfernalInvestment\",\n            \"#HellishReturns\",\n            \"#DiamondHandsInferno\",\n            \"#LFGBlazeToken\",\n          ],\n          contentStrategy: [\n            \"Shock value memes\",\n            \"Demonic investment tutorials\",\n            \"Viral challenge videos\",\n            \"Extreme gain screenshots\",\n          ],\n          communityGuidelines: [\n            \"Burn traditional finance\",\n            \"HODL or burn\",\n            \"No weakness allowed\",\n            \"Spread hellish investment vibes\",\n          ],\n        },\n        {\n          name: \"DamnationCoin\",\n          symbol: \"DAMN\",\n          description:\n            \"Crypto that turns financial suffering into legendary gains, straight from the depths of investment hell! 🔥\",\n          logoPrompt: \"Demonic hand holding golden cryptocurrency\",\n          initialSupply: 999999999,\n          tokenomics: {\n            burnPercentage: 5,\n            taxPercentage: 4,\n            maxWalletPercentage: 2,\n          },\n          marketingStyle: [\"Dark humor\", \"Intense\", \"Rebellious\", \"Shocking\"],\n          suggestedHashtags: [\n            \"#DamnationWealth\",\n            \"#HellishReturns\",\n            \"#ToTheMoonFromHell\",\n            \"#LFGDamnCoin\",\n          ],\n          contentStrategy: [\n            \"Extreme investment memes\",\n            \"Satirical financial content\",\n            \"Community roast sessions\",\n            \"Viral challenge competitions\",\n          ],\n          communityGuidelines: [\n            \"Fear is for the weak\",\n            \"Embrace the inferno\",\n            \"Diamond hands forever\",\n            \"No surrender to traditional markets\",\n          ],\n        },\n      ];\n\n      // Simulate delay\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      onOptionsGenerated(dummyOptions);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Failed to generate options\");\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"p-6 bg-[#130627] border border-purple-500/20 mb-8\">\n      <div className=\"space-y-6\">\n        <div>\n          <Label className=\"block text-sm font-medium mb-2\">\n            Select Blockchain\n          </Label>\n          <ChainSelector\n            selectedChain={selectedChain}\n            onSelect={onChainSelect}\n          />\n        </div>\n\n        {selectedChain && (\n          <>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <Label className=\"block text-sm font-medium mb-2\">\n                  Topics (comma-separated)\n                </Label>\n                <Input\n                  value={formData.topics}\n                  onChange={(e) =>\n                    setFormData({ ...formData, topics: e.target.value })\n                  }\n                  placeholder=\"meme coins, crypto, blockchain\"\n                  className=\"bg-[#0A0118]\"\n                  disabled={isLoading}\n                />\n              </div>\n              <div>\n                <Label className=\"block text-sm font-medium mb-2\">\n                  Key Phrases (comma-separated)\n                </Label>\n                <Input\n                  value={formData.phrases}\n                  onChange={(e) =>\n                    setFormData({ ...formData, phrases: e.target.value })\n                  }\n                  placeholder=\"to the moon, diamond hands, LFG\"\n                  className=\"bg-[#0A0118]\"\n                  disabled={isLoading}\n                />\n              </div>\n            </div>\n\n            <Button\n              onClick={handleGenerate}\n              className=\"w-full bg-purple-500 hover:bg-purple-600 disabled:opacity-50\"\n              disabled={isLoading || !formData.topics.trim()}\n            >\n              {isLoading ? (\n                <Icons.spinner className=\"w-4 h-4 animate-spin mr-2\" />\n              ) : (\n                <Icons.sparkles className=\"w-4 h-4 mr-2\" />\n              )}\n              {isLoading ? \"Generating...\" : \"Generate Options\"}\n            </Button>\n          </>\n        )}\n      </div>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4410, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4416, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/components/create/MemeCoinOptionsList.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Icons } from \"@/components/ui/icons\";\nimport { type MemeCoinOption } from \"../../../service/MemeCoinAIGenerator\";\n\ninterface MemeCoinOptionsListProps {\n  options: MemeCoinOption[];\n  onSelect: (option: MemeCoinOption) => void;\n}\n\nexport function MemeCoinOptionsList({\n  options,\n  onSelect,\n}: MemeCoinOptionsListProps) {\n  return (\n    <div className=\"grid md:grid-cols-3 gap-6\">\n      {options.map((option, index) => (\n        <Card\n          key={index}\n          className=\"p-6 bg-[#130627] border border-purple-500/20 hover:border-purple-500/40 transition-all duration-200\"\n        >\n          <h3 className=\"text-xl font-bold mb-2\">{option.name}</h3>\n          <p className=\"text-sm text-gray-400 mb-4\">{option.description}</p>\n\n          <div className=\"space-y-2 mb-4\">\n            <div className=\"text-sm\">\n              <span className=\"font-medium\">Symbol:</span> {option.symbol}\n            </div>\n            <div className=\"text-sm\">\n              <span className=\"font-medium\">Supply:</span>{\" \"}\n              {option.initialSupply.toLocaleString()}\n            </div>\n            <div className=\"text-sm\">\n              <span className=\"font-medium\">Burn:</span>{\" \"}\n              {option.tokenomics.burnPercentage}%\n            </div>\n          </div>\n\n          <div className=\"space-y-3\">\n            {option.marketingStyle && (\n              <div className=\"flex flex-wrap gap-2\">\n                {option.marketingStyle.slice(0, 3).map((style, idx) => (\n                  <span\n                    key={idx}\n                    className=\"text-xs px-2 py-1 rounded-full bg-purple-500/20 text-purple-300\"\n                  >\n                    {style}\n                  </span>\n                ))}\n              </div>\n            )}\n\n            {option.suggestedHashtags && (\n              <div className=\"flex flex-wrap gap-2\">\n                {option.suggestedHashtags.slice(0, 3).map((tag, idx) => (\n                  <span\n                    key={idx}\n                    className=\"text-xs px-2 py-1 rounded-full bg-blue-500/20 text-blue-300\"\n                  >\n                    {tag}\n                  </span>\n                ))}\n              </div>\n            )}\n          </div>\n\n          <Button\n            onClick={() => onSelect(option)}\n            className=\"w-full mt-4 bg-purple-500/20 hover:bg-purple-500/30 text-purple-300\"\n          >\n            Select & Continue\n            <Icons.arrowRight className=\"w-4 h-4 ml-2\" />\n          </Button>\n        </Card>\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAYO,SAAS,oBAAoB,EAClC,OAAO,EACP,QAAQ,EACiB;IACzB,qBACE,+YAAC;QAAI,WAAU;kBACZ,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,+YAAC,gIAAA,CAAA,OAAI;gBAEH,WAAU;;kCAEV,+YAAC;wBAAG,WAAU;kCAA0B,OAAO,IAAI;;;;;;kCACnD,+YAAC;wBAAE,WAAU;kCAA8B,OAAO,WAAW;;;;;;kCAE7D,+YAAC;wBAAI,WAAU;;0CACb,+YAAC;gCAAI,WAAU;;kDACb,+YAAC;wCAAK,WAAU;kDAAc;;;;;;oCAAc;oCAAE,OAAO,MAAM;;;;;;;0CAE7D,+YAAC;gCAAI,WAAU;;kDACb,+YAAC;wCAAK,WAAU;kDAAc;;;;;;oCAAe;oCAC5C,OAAO,aAAa,CAAC,cAAc;;;;;;;0CAEtC,+YAAC;gCAAI,WAAU;;kDACb,+YAAC;wCAAK,WAAU;kDAAc;;;;;;oCAAa;oCAC1C,OAAO,UAAU,CAAC,cAAc;oCAAC;;;;;;;;;;;;;kCAItC,+YAAC;wBAAI,WAAU;;4BACZ,OAAO,cAAc,kBACpB,+YAAC;gCAAI,WAAU;0CACZ,OAAO,cAAc,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,oBAC7C,+YAAC;wCAEC,WAAU;kDAET;uCAHI;;;;;;;;;;4BASZ,OAAO,iBAAiB,kBACvB,+YAAC;gCAAI,WAAU;0CACZ,OAAO,iBAAiB,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,oBAC9C,+YAAC;wCAEC,WAAU;kDAET;uCAHI;;;;;;;;;;;;;;;;kCAUf,+YAAC,kIAAA,CAAA,SAAM;wBACL,SAAS,IAAM,SAAS;wBACxB,WAAU;;4BACX;0CAEC,+YAAC,iIAAA,CAAA,QAAK,CAAC,UAAU;gCAAC,WAAU;;;;;;;;;;;;;eArDzB;;;;;;;;;;AA2Df"}},
    {"offset": {"line": 4586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4592, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/src/app/create/theme/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { TokenCreationForm } from \"@/components/create/TokenCreationForm\";\nimport { type MemeCoinOption } from \"../../../../service/MemeCoinAIGenerator\";\nimport { type ChainOption } from \"@/components/ChainSelector\";\nimport { ThemeForm } from \"@/components/create/ThemeForm\";\nimport { MemeCoinOptionsList } from \"@/components/create/MemeCoinOptionsList\";\nimport { TokenFormData } from \"@/types/token\";\n\nexport default function ThemePage() {\n  const [options, setOptions] = useState<MemeCoinOption[]>([]);\n  const [selectedChain, setSelectedChain] = useState<ChainOption | null>(null);\n  const [selectedOption, setSelectedOption] = useState<MemeCoinOption | null>(\n    null\n  );\n\n  const handleSelectOption = (option: MemeCoinOption) => {\n    setSelectedOption(option);\n  };\n\n  return (\n    <div className=\"container max-w-6xl mx-auto px-4 py-16\">\n      <div className=\"text-center mb-12\">\n        <h1 className=\"text-4xl font-bold mb-4 bg-gradient-to-r from-pink-500 via-purple-500 to-cyan-500 bg-clip-text text-transparent\">\n          Design Your Meme Coin\n        </h1>\n        <p className=\"text-gray-400 max-w-2xl mx-auto\">\n          Let our AI generate unique meme coin concepts based on your\n          preferences\n        </p>\n      </div>\n\n      {!selectedOption ? (\n        <>\n          <ThemeForm\n            selectedChain={selectedChain}\n            onChainSelect={setSelectedChain}\n            onOptionsGenerated={setOptions}\n          />\n\n          {options.length > 0 && (\n            <MemeCoinOptionsList\n              options={options}\n              onSelect={handleSelectOption}\n            />\n          )}\n        </>\n      ) : (\n        <div className=\"space-y-8\">\n          <div className=\"flex justify-between items-center\">\n            <h2 className=\"text-2xl font-semibold\">\n              Customize Your Token: {selectedOption.name}\n            </h2>\n            <button\n              onClick={() => setSelectedOption(null)}\n              className=\"text-purple-400 hover:text-purple-300 transition-colors\"\n            >\n              ← Back to Options\n            </button>\n          </div>\n\n          <TokenCreationForm\n            initialData={\n              {\n                name: selectedOption.name,\n                symbol: selectedOption.symbol,\n                description: selectedOption.description,\n                initialSupply: selectedOption.initialSupply.toString(),\n                decimals: 9,\n                chain: \"evm\" as const,\n                showcase: {\n                  tags: [\n                    ...selectedOption.suggestedHashtags.map((tag) =>\n                      tag.replace(\"#\", \"\")\n                    ),\n                    ...selectedOption.marketingStyle,\n                    ...selectedOption.contentStrategy,\n                    ...(selectedOption.communityGuidelines || []),\n                  ].slice(0, 3),\n                  roadmap: [],\n                  team: [],\n                  socialLinks: {\n                    website: \"\",\n                    twitter: \"\",\n                    telegram: \"\",\n                    discord: \"\",\n                    github: \"\",\n                    medium: \"\",\n                    reddit: \"\",\n                    instagram: \"\",\n                    facebook: \"\",\n                  },\n                },\n                isMintable: true,\n                isBurnable: selectedOption.tokenomics.burnPercentage > 0,\n                isPausable: false,\n              } satisfies Partial<TokenFormData>\n            }\n            chainType={\n              selectedChain?.id === \"taurus\"\n                ? \"evm\"\n                : selectedChain?.id === \"solana\"\n                ? \"solana\"\n                : selectedChain?.id === \"secret\"\n                ? \"secret\"\n                : \"ton\"\n            }\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAGA;AACA;AAPA;;;;;;AAUe,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAoB,EAAE;IAC3D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAsB;IACvE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EACjD;IAGF,MAAM,qBAAqB,CAAC;QAC1B,kBAAkB;IACpB;IAEA,qBACE,+YAAC;QAAI,WAAU;;0BACb,+YAAC;gBAAI,WAAU;;kCACb,+YAAC;wBAAG,WAAU;kCAAkH;;;;;;kCAGhI,+YAAC;wBAAE,WAAU;kCAAkC;;;;;;;;;;;;YAMhD,CAAC,+BACA;;kCACE,+YAAC,yIAAA,CAAA,YAAS;wBACR,eAAe;wBACf,eAAe;wBACf,oBAAoB;;;;;;oBAGrB,QAAQ,MAAM,GAAG,mBAChB,+YAAC,mJAAA,CAAA,sBAAmB;wBAClB,SAAS;wBACT,UAAU;;;;;;;6CAKhB,+YAAC;gBAAI,WAAU;;kCACb,+YAAC;wBAAI,WAAU;;0CACb,+YAAC;gCAAG,WAAU;;oCAAyB;oCACd,eAAe,IAAI;;;;;;;0CAE5C,+YAAC;gCACC,SAAS,IAAM,kBAAkB;gCACjC,WAAU;0CACX;;;;;;;;;;;;kCAKH,+YAAC,iJAAA,CAAA,oBAAiB;wBAChB,aACE;4BACE,MAAM,eAAe,IAAI;4BACzB,QAAQ,eAAe,MAAM;4BAC7B,aAAa,eAAe,WAAW;4BACvC,eAAe,eAAe,aAAa,CAAC,QAAQ;4BACpD,UAAU;4BACV,OAAO;4BACP,UAAU;gCACR,MAAM;uCACD,eAAe,iBAAiB,CAAC,GAAG,CAAC,CAAC,MACvC,IAAI,OAAO,CAAC,KAAK;uCAEhB,eAAe,cAAc;uCAC7B,eAAe,eAAe;uCAC7B,eAAe,mBAAmB,IAAI,EAAE;iCAC7C,CAAC,KAAK,CAAC,GAAG;gCACX,SAAS,EAAE;gCACX,MAAM,EAAE;gCACR,aAAa;oCACX,SAAS;oCACT,SAAS;oCACT,UAAU;oCACV,SAAS;oCACT,QAAQ;oCACR,QAAQ;oCACR,QAAQ;oCACR,WAAW;oCACX,UAAU;gCACZ;4BACF;4BACA,YAAY;4BACZ,YAAY,eAAe,UAAU,CAAC,cAAc,GAAG;4BACvD,YAAY;wBACd;wBAEF,WACE,eAAe,OAAO,WAClB,QACA,eAAe,OAAO,WACtB,WACA,eAAe,OAAO,WACtB,WACA;;;;;;;;;;;;;;;;;;AAOlB"}},
    {"offset": {"line": 4745, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}