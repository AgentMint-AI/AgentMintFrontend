{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40webbuf%2Bblake3%403.0.26_%40webbuf%2Bfixedbuf%403.0.26_%40webbuf%2Bwebbuf%403.0.26__%40webbuf%2Bwebbuf%403.0.26/node_modules/%40webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.js"],"sourcesContent":["let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nlet cachedUint8ArrayMemory0 = null;\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\nconst heap = new Array(128).fill(undefined);\nheap.push(undefined, null, true, false);\nlet heap_next = heap.length;\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length)\n        heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n    heap[idx] = obj;\n    return idx;\n}\nlet WASM_VECTOR_LEN = 0;\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8ArrayMemory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\nlet cachedDataViewMemory0 = null;\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\nfunction getObject(idx) { return heap[idx]; }\nfunction dropObject(idx) {\n    if (idx < 132)\n        return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nexport function blake3_hash(data) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.blake3_hash(retptr, ptr0, len0);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        if (r3) {\n            throw takeObject(r2);\n        }\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nexport function double_blake3_hash(data) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.double_blake3_hash(retptr, ptr0, len0);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        if (r3) {\n            throw takeObject(r2);\n        }\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n * @param {Uint8Array} key\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nexport function blake3_mac(key, data) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(key, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.blake3_mac(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        if (r3) {\n            throw takeObject(r2);\n        }\n        var v3 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v3;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\nexport function __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n}\n;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40webbuf%2Bblake3%403.0.26_%40webbuf%2Bfixedbuf%403.0.26_%40webbuf%2Bwebbuf%403.0.26__%40webbuf%2Bwebbuf%403.0.26/node_modules/%40webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.wasm.js"],"sourcesContent":["import * as webbuf_blake3_bg from './webbuf_blake3_bg.js';\nconst wasmBase64 = \"\";\nconst wasmBinary = Uint8Array.from(atob(wasmBase64), c => c.charCodeAt(0));\nconst wasmModule = new WebAssembly.Module(wasmBinary);\nconst importObject = { './webbuf_blake3_bg.js': webbuf_blake3_bg };\nconst wasm = new WebAssembly.Instance(wasmModule, importObject).exports;\nexport { wasm };\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,aAAa;AACnB,MAAM,aAAa,WAAW,IAAI,CAAC,KAAK,aAAa,CAAA,IAAK,EAAE,UAAU,CAAC;AACvE,MAAM,aAAa,IAAI,YAAY,MAAM,CAAC;AAC1C,MAAM,eAAe;IAAE,yBAAyB;AAAiB;AACjE,MAAM,OAAO,IAAI,YAAY,QAAQ,CAAC,YAAY,cAAc,OAAO","ignoreList":[0]}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40webbuf%2Bblake3%403.0.26_%40webbuf%2Bfixedbuf%403.0.26_%40webbuf%2Bwebbuf%403.0.26__%40webbuf%2Bwebbuf%403.0.26/node_modules/%40webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3.js"],"sourcesContent":["import { wasm } from \"./webbuf_blake3_bg.wasm.js\";\nexport * from \"./webbuf_blake3_bg.js\";\nimport { __wbg_set_wasm } from \"./webbuf_blake3_bg.js\";\n__wbg_set_wasm(wasm);\n"],"names":[],"mappings":";AAEA;AAFA;;;;AAGA,CAAA,GAAA,8XAAA,CAAA,iBAAc,AAAD,EAAE,sYAAA,CAAA,OAAI","ignoreList":[0]}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40webbuf%2Bwebbuf%403.0.26/node_modules/%40webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf_bg.js"],"sourcesContent":["let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nlet cachedUint8ArrayMemory0 = null;\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\nconst heap = new Array(128).fill(undefined);\nheap.push(undefined, null, true, false);\nlet heap_next = heap.length;\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length)\n        heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n    heap[idx] = obj;\n    return idx;\n}\nlet WASM_VECTOR_LEN = 0;\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8ArrayMemory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\nlet cachedDataViewMemory0 = null;\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n/**\n * Encode a byte slice into a base64 string using the default engine\n * @param {Uint8Array} data\n * @returns {string}\n */\nexport function encode_base64(data) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.encode_base64(retptr, ptr0, len0);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        deferred2_0 = r0;\n        deferred2_1 = r1;\n        return getStringFromWasm0(r0, r1);\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nlet cachedTextEncoder = new lTextEncoder('utf-8');\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n    }\n    : function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    });\nfunction passStringToWasm0(arg, malloc, realloc) {\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n    const mem = getUint8ArrayMemory0();\n    let offset = 0;\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F)\n            break;\n        mem[ptr + offset] = code;\n    }\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\nfunction getObject(idx) { return heap[idx]; }\nfunction dropObject(idx) {\n    if (idx < 132)\n        return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n * Decode a base64 string into a byte vector\n * Returns an error string if decoding fails\n * @param {string} encoded\n * @returns {Uint8Array}\n */\nexport function decode_base64_strip_whitespace(encoded) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(encoded, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.decode_base64_strip_whitespace(retptr, ptr0, len0);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        if (r3) {\n            throw takeObject(r2);\n        }\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n * @param {string} encoded\n * @returns {Uint8Array}\n */\nexport function decode_base64(encoded) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(encoded, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.decode_base64(retptr, ptr0, len0);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        if (r3) {\n            throw takeObject(r2);\n        }\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n * Encode a byte slice into a hex string\n * @param {Uint8Array} data\n * @returns {string}\n */\nexport function encode_hex(data) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.encode_hex(retptr, ptr0, len0);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        deferred2_0 = r0;\n        deferred2_1 = r1;\n        return getStringFromWasm0(r0, r1);\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n/**\n * Decode a hex string into a byte vector\n * Returns an error string if decoding fails\n * @param {string} encoded\n * @returns {Uint8Array}\n */\nexport function decode_hex(encoded) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(encoded, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.decode_hex(retptr, ptr0, len0);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        if (r3) {\n            throw takeObject(r2);\n        }\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\nexport function __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n}\n;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40webbuf%2Bwebbuf%403.0.26/node_modules/%40webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf_bg.wasm.js"],"sourcesContent":["import * as webbuf_bg from './webbuf_bg.js';\nconst wasmBase64 = \"\";\nconst wasmBinary = Uint8Array.from(atob(wasmBase64), c => c.charCodeAt(0));\nconst wasmModule = new WebAssembly.Module(wasmBinary);\nconst importObject = { './webbuf_bg.js': webbuf_bg };\nconst wasm = new WebAssembly.Instance(wasmModule, importObject).exports;\nexport { wasm };\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,aAAa;AACnB,MAAM,aAAa,WAAW,IAAI,CAAC,KAAK,aAAa,CAAA,IAAK,EAAE,UAAU,CAAC;AACvE,MAAM,aAAa,IAAI,YAAY,MAAM,CAAC;AAC1C,MAAM,eAAe;IAAE,kBAAkB;AAAU;AACnD,MAAM,OAAO,IAAI,YAAY,QAAQ,CAAC,YAAY,cAAc,OAAO","ignoreList":[0]}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40webbuf%2Bwebbuf%403.0.26/node_modules/%40webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf.js"],"sourcesContent":["import { wasm } from \"./webbuf_bg.wasm.js\";\nexport * from \"./webbuf_bg.js\";\nimport { __wbg_set_wasm } from \"./webbuf_bg.js\";\n__wbg_set_wasm(wasm);\n"],"names":[],"mappings":";AAEA;AAFA;;;;AAGA,CAAA,GAAA,6PAAA,CAAA,iBAAc,AAAD,EAAE,qQAAA,CAAA,OAAI","ignoreList":[0]}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40webbuf%2Bwebbuf%403.0.26/node_modules/%40webbuf/webbuf/dist/webbuf.js"],"sourcesContent":["import { encode_base64, decode_base64, decode_base64_strip_whitespace, encode_hex, decode_hex, } from \"./rs-webbuf-inline-base64/webbuf.js\";\nfunction verifyOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) {\n        throw new Error(\"offset is not uint\");\n    }\n    if (offset + ext > length) {\n        throw new Error(\"Trying to access beyond buffer length\");\n    }\n}\nexport class WebBuf extends Uint8Array {\n    static concat(list) {\n        const size = list.reduce((acc, buf) => acc + buf.length, 0);\n        const result = new WebBuf(size);\n        let offset = 0;\n        for (const buf of list) {\n            result.set(buf, offset);\n            offset += buf.length;\n        }\n        return result;\n    }\n    static alloc(size, fill = 0) {\n        const buf = new WebBuf(size);\n        if (fill !== 0) {\n            buf.fill(fill);\n        }\n        return buf;\n    }\n    fill(value, start = 0, end = this.length) {\n        for (let i = start; i < end; i++) {\n            this[i] = value;\n        }\n        return this;\n    }\n    // Override slice method to return WebBuf instead of Uint8Array\n    slice(start, end) {\n        const slicedArray = super.slice(start, end); // Create a slice using Uint8Array's slice method\n        return new WebBuf(slicedArray.buffer, slicedArray.byteOffset, slicedArray.byteLength); // Return a WebBuf instead\n    }\n    subarray(start, end) {\n        const subArray = super.subarray(start, end);\n        return new WebBuf(subArray.buffer, subArray.byteOffset, subArray.byteLength);\n    }\n    /**\n     * Reverse the buffer in place\n     * @returns webbuf\n     */\n    reverse() {\n        super.reverse();\n        return this;\n    }\n    clone() {\n        return new WebBuf(this);\n    }\n    toReverse() {\n        const cloned = new WebBuf(this);\n        cloned.reverse();\n        return cloned;\n    }\n    copy(target, targetStart = 0, sourceStart = 0, sourceEnd = this.length) {\n        if (sourceStart >= sourceEnd) {\n            return 0;\n        }\n        if (targetStart >= target.length) {\n            throw new Error(\"targetStart out of bounds\");\n        }\n        if (sourceEnd > this.length) {\n            throw new Error(\"sourceEnd out of bounds\");\n        }\n        if (targetStart + sourceEnd - sourceStart > target.length) {\n            throw new Error(\"source is too large\");\n        }\n        target.set(this.subarray(sourceStart, sourceEnd), targetStart);\n        return sourceEnd - sourceStart;\n    }\n    /**\n     * Return a WebBuf that is a view of the same data as the input Uint8Array\n     *\n     * @param buffer\n     * @returns WebBuf\n     */\n    static view(buffer) {\n        return new WebBuf(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    }\n    /**\n     * Create a new WebBuf from a Uint8Array (copy)\n     * @param buffer\n     * @returns webbuf\n     */\n    static fromUint8Array(buffer) {\n        return new WebBuf(buffer);\n    }\n    static fromArray(array) {\n        return new WebBuf(array);\n    }\n    static fromUtf8(str) {\n        const encoder = new TextEncoder();\n        return new WebBuf(encoder.encode(str));\n    }\n    static fromString(str, encoding = \"utf8\") {\n        if (encoding === \"hex\") {\n            return WebBuf.fromHex(str);\n        }\n        if (encoding === \"base64\") {\n            return WebBuf.fromBase64(str);\n        }\n        if (encoding === \"utf8\") {\n            return WebBuf.fromUtf8(str);\n        }\n        return WebBuf.fromUtf8(str);\n    }\n    // we use wasm for big data, because small data is faster in js\n    // experiments show wasm is always faster\n    static FROM_BASE64_ALGO_THRESHOLD = 10; // str len\n    // experiments show wasm is always faster\n    static TO_BASE64_ALGO_THRESHOLD = 10; // buf len\n    // experimentally derived for optimal performance\n    static FROM_HEX_ALGO_THRESHOLD = 1_000; // str len\n    // experiments show wasm is always faster\n    static TO_HEX_ALGO_THRESHOLD = 10; // buf len\n    static fromHexPureJs(hex) {\n        const result = new WebBuf(hex.length / 2);\n        for (let i = 0; i < hex.length; i += 2) {\n            result[i / 2] = Number.parseInt(hex.slice(i, i + 2), 16);\n        }\n        return result;\n    }\n    static fromHexWasm(hex) {\n        const uint8array = decode_hex(hex);\n        return new WebBuf(uint8array.buffer, uint8array.byteOffset, uint8array.byteLength);\n    }\n    static fromHex(hex) {\n        if (hex.length % 2 !== 0) {\n            throw new Error(\"Invalid hex string\");\n        }\n        if (hex.length < WebBuf.FROM_HEX_ALGO_THRESHOLD) {\n            return WebBuf.fromHexPureJs(hex);\n        }\n        return WebBuf.fromHexWasm(hex);\n    }\n    toHexPureJs() {\n        return Array.from(this)\n            .map((byte) => byte.toString(16).padStart(2, \"0\"))\n            .join(\"\");\n    }\n    toHexWasm() {\n        return encode_hex(this);\n    }\n    toHex() {\n        // disabled: experiments show this is not faster, even for small buffers\n        // if (this.length < WebBuf.TO_HEX_ALGO_THRESHOLD) {\n        //   return this.toHexPureJs();\n        // }\n        return this.toHexWasm();\n    }\n    static fromBase64PureJs(b64, stripWhitespace = false) {\n        const uint8array = new Uint8Array(atob(stripWhitespace ? b64.replace(/\\s+/g, \"\") : b64)\n            .split(\"\")\n            .map((c) => c.charCodeAt(0)));\n        return new WebBuf(uint8array.buffer, uint8array.byteOffset, uint8array.byteLength);\n    }\n    static fromBase64Wasm(b64, stripWhitespace = false) {\n        const uint8array = stripWhitespace\n            ? decode_base64_strip_whitespace(b64)\n            : decode_base64(b64);\n        return new WebBuf(uint8array.buffer, uint8array.byteOffset, uint8array.byteLength);\n    }\n    /**\n     * Convert a base64 string to a Uint8Array. Tolerant of whitespace, but\n     * throws if the string has invalid characters.\n     *\n     * @param b64\n     * @returns Uint8Array\n     * @throws {Error} if the input string is not valid base64\n     */\n    static fromBase64(b64, stripWhitespace = false) {\n        // disabled: experiments show this is not faster, even for small buffers\n        // if (b64.length < WebBuf.FROM_BASE64_ALGO_THRESHOLD) {\n        //   return WebBuf.fromBase64PureJs(b64, stripWhitespace);\n        // }\n        return WebBuf.fromBase64Wasm(b64, stripWhitespace);\n    }\n    toBase64PureJs() {\n        return btoa(String.fromCharCode(...new Uint8Array(this)));\n    }\n    toBase64Wasm() {\n        return encode_base64(this);\n    }\n    toBase64() {\n        // disabled: experiments show this is not faster, even for small buffers\n        // if (this.length < WebBuf.TO_BASE64_ALGO_THRESHOLD) {\n        //   return this.toBase64PureJs();\n        // }\n        return this.toBase64Wasm();\n    }\n    /**\n     * Override Uint8Array.from to return a WebBuf\n     *\n     * @param source An array-like or iterable object to convert to WebBuf\n     * @param mapFn Optional map function to call on every element of the array\n     * @param thisArg Optional value to use as `this` when executing `mapFn`\n     * @returns WebBuf\n     */\n    static from(source, mapFn, \n    // biome-ignore lint:\n    thisArg) {\n        if (typeof mapFn === \"string\") {\n            if (typeof source !== \"string\") {\n                throw new TypeError(\"Invalid mapFn\");\n            }\n            if (mapFn === \"hex\") {\n                return WebBuf.fromHex(source);\n            }\n            if (mapFn === \"base64\") {\n                return WebBuf.fromBase64(source);\n            }\n            if (mapFn === \"utf8\") {\n                return WebBuf.fromUtf8(source);\n            }\n            throw new TypeError(\"Invalid mapFn\");\n        }\n        if (typeof source === \"string\") {\n            return WebBuf.fromUtf8(source);\n        }\n        if (source instanceof Uint8Array) {\n            return WebBuf.view(source);\n        }\n        const sourceArray = Array.from(source);\n        // biome-ignore lint:\n        const uint8Array = super.from(sourceArray, mapFn, thisArg);\n        return new WebBuf(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n    }\n    toUtf8() {\n        const decoder = new TextDecoder();\n        return decoder.decode(this);\n    }\n    toString(encoding) {\n        if (encoding === \"hex\") {\n            return this.toHex();\n        }\n        if (encoding === \"base64\") {\n            return this.toBase64();\n        }\n        if (encoding === \"utf8\") {\n            const decoder = new TextDecoder();\n            return decoder.decode(this);\n        }\n        return this.toUtf8();\n    }\n    inspect() {\n        return `<WebBuf ${this.toHex().slice(0, 40) + (this.length > 40 ? \"...\" : \"\")}>`;\n    }\n    toArray() {\n        return Array.from(this);\n    }\n    compare(other) {\n        const len = Math.min(this.length, other.length);\n        for (let i = 0; i < len; i++) {\n            if (this[i] !== other[i]) {\n                return this[i] < other[i] ? -1 : 1;\n            }\n        }\n        if (this.length < other.length) {\n            return -1;\n        }\n        if (this.length > other.length) {\n            return 1;\n        }\n        return 0;\n    }\n    static compare(buf1, buf2) {\n        return buf1.compare(buf2);\n    }\n    equals(other) {\n        return this.compare(other) === 0;\n    }\n    write(buf, offset = 0) {\n        verifyOffset(offset, buf.length, this.length);\n        this.set(buf, offset);\n        return buf.length;\n    }\n    read(offset, ext) {\n        verifyOffset(offset, ext, this.length);\n        return this.subarray(offset, offset + ext);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 731, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 737, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 739, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 754, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40webbuf%2Bfixedbuf%403.0.26_%40webbuf%2Bwebbuf%403.0.26/node_modules/%40webbuf/fixedbuf/dist/fixedbuf.js"],"sourcesContent":["import { WebBuf } from \"@webbuf/webbuf\";\nexport class FixedBuf {\n    _buf;\n    _size;\n    constructor(size, buf) {\n        if (buf.length !== size) {\n            throw new Error(\"invalid size error\");\n        }\n        this._buf = buf;\n        this._size = size;\n    }\n    get buf() {\n        return this._buf;\n    }\n    static fromBuf(size, buf) {\n        return new FixedBuf(size, buf);\n    }\n    static alloc(size, fill) {\n        const buf = WebBuf.alloc(size, fill);\n        return FixedBuf.fromBuf(size, buf);\n    }\n    static fromHex(size, hex) {\n        const buf = WebBuf.from(hex, \"hex\");\n        return FixedBuf.fromBuf(size, buf);\n    }\n    toHex() {\n        return this._buf.toString(\"hex\");\n    }\n    static fromBase64(size, base64) {\n        try {\n            const buf = WebBuf.from(base64, \"base64\");\n            return FixedBuf.fromBuf(size, buf);\n        }\n        catch (err) {\n            throw new Error(\"invalid encoding\");\n        }\n    }\n    toBase64() {\n        return this._buf.toString(\"base64\");\n    }\n    static fromRandom(size) {\n        const buf = crypto.getRandomValues(WebBuf.alloc(size));\n        return FixedBuf.fromBuf(size, buf);\n    }\n    clone() {\n        return FixedBuf.fromBuf(this._size, WebBuf.from(this._buf));\n    }\n    toReverse() {\n        const cloneedReverse = this._buf.toReverse();\n        return FixedBuf.fromBuf(this._size, cloneedReverse);\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM;IACT,KAAK;IACL,MAAM;IACN,YAAY,IAAI,EAAE,GAAG,CAAE;QACnB,IAAI,IAAI,MAAM,KAAK,MAAM;YACrB,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG;IACjB;IACA,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,IAAI;IACpB;IACA,OAAO,QAAQ,IAAI,EAAE,GAAG,EAAE;QACtB,OAAO,IAAI,SAAS,MAAM;IAC9B;IACA,OAAO,MAAM,IAAI,EAAE,IAAI,EAAE;QACrB,MAAM,MAAM,sNAAA,CAAA,SAAM,CAAC,KAAK,CAAC,MAAM;QAC/B,OAAO,SAAS,OAAO,CAAC,MAAM;IAClC;IACA,OAAO,QAAQ,IAAI,EAAE,GAAG,EAAE;QACtB,MAAM,MAAM,sNAAA,CAAA,SAAM,CAAC,IAAI,CAAC,KAAK;QAC7B,OAAO,SAAS,OAAO,CAAC,MAAM;IAClC;IACA,QAAQ;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC9B;IACA,OAAO,WAAW,IAAI,EAAE,MAAM,EAAE;QAC5B,IAAI;YACA,MAAM,MAAM,sNAAA,CAAA,SAAM,CAAC,IAAI,CAAC,QAAQ;YAChC,OAAO,SAAS,OAAO,CAAC,MAAM;QAClC,EACA,OAAO,KAAK;YACR,MAAM,IAAI,MAAM;QACpB;IACJ;IACA,WAAW;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC9B;IACA,OAAO,WAAW,IAAI,EAAE;QACpB,MAAM,MAAM,OAAO,eAAe,CAAC,sNAAA,CAAA,SAAM,CAAC,KAAK,CAAC;QAChD,OAAO,SAAS,OAAO,CAAC,MAAM;IAClC;IACA,QAAQ;QACJ,OAAO,SAAS,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,sNAAA,CAAA,SAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;IAC7D;IACA,YAAY;QACR,MAAM,iBAAiB,IAAI,CAAC,IAAI,CAAC,SAAS;QAC1C,OAAO,SAAS,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE;IACxC;AACJ","ignoreList":[0]}},
    {"offset": {"line": 810, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 816, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 818, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 833, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40webbuf%2Bblake3%403.0.26_%40webbuf%2Bfixedbuf%403.0.26_%40webbuf%2Bwebbuf%403.0.26__%40webbuf%2Bwebbuf%403.0.26/node_modules/%40webbuf/blake3/dist/index.js"],"sourcesContent":["import { blake3_hash, double_blake3_hash, blake3_mac, } from \"./rs-webbuf_blake3-inline-base64/webbuf_blake3.js\";\nimport { WebBuf } from \"@webbuf/webbuf\";\nimport { FixedBuf } from \"@webbuf/fixedbuf\";\nexport function blake3Hash(buf) {\n    const hash = blake3_hash(buf);\n    return FixedBuf.fromBuf(32, WebBuf.fromUint8Array(hash));\n}\nexport function doubleBlake3Hash(buf) {\n    const hash = double_blake3_hash(buf);\n    return FixedBuf.fromBuf(32, WebBuf.fromUint8Array(hash));\n}\nexport function blake3Mac(key, message) {\n    const mac = blake3_mac(key.buf, message);\n    return FixedBuf.fromBuf(32, WebBuf.fromUint8Array(mac));\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAFA;AAEA;AADA;;;;AAEO,SAAS,WAAW,GAAG;IAC1B,MAAM,OAAO,CAAA,GAAA,8XAAA,CAAA,cAAW,AAAD,EAAE;IACzB,OAAO,iQAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,IAAI,sNAAA,CAAA,SAAM,CAAC,cAAc,CAAC;AACtD;AACO,SAAS,iBAAiB,GAAG;IAChC,MAAM,OAAO,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EAAE;IAChC,OAAO,iQAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,IAAI,sNAAA,CAAA,SAAM,CAAC,cAAc,CAAC;AACtD;AACO,SAAS,UAAU,GAAG,EAAE,OAAO;IAClC,MAAM,MAAM,CAAA,GAAA,8XAAA,CAAA,aAAU,AAAD,EAAE,IAAI,GAAG,EAAE;IAChC,OAAO,iQAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,IAAI,sNAAA,CAAA,SAAM,CAAC,cAAc,CAAC;AACtD","ignoreList":[0]}},
    {"offset": {"line": 859, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 865, "column": 0}, "map": {"version":3,"file":"bytes.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bytes.ts"],"sourcesContent":["export const empty = new Uint8Array(0)\n\nexport function toHex (d: Uint8Array): string {\n  return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n}\n\nexport function fromHex (hex: string): Uint8Array {\n  const hexes = hex.match(/../g)\n  return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\nexport function equals (aa: Uint8Array, bb: Uint8Array): boolean {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function coerce (o: ArrayBufferView | ArrayBuffer | Uint8Array): Uint8Array {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\nexport function isBinary (o: unknown): o is ArrayBuffer | ArrayBufferView {\n  return o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n}\n\nexport function fromString (str: string): Uint8Array {\n  return new TextEncoder().encode(str)\n}\n\nexport function toString (b: Uint8Array): string {\n  return new TextDecoder().decode(b)\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;AAEhC,SAAU,KAAK,CAAE,CAAa;IAClC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAG,CAAD,EAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAA;AAC9E,CAAC;AAEK,SAAU,OAAO,CAAE,GAAW;IAClC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IAC9B,OAAO,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,EAAC,CAAC,CAAC,EAAE,AAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAA;AAChF,CAAC;AAEK,SAAU,MAAM,CAAE,EAAc,EAAE,EAAc;IACpD,IAAI,EAAE,KAAK,EAAE,EAAE,OAAO,IAAI,CAAA;IAC1B,IAAI,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,UAAU,EAAE,CAAC;QACpC,OAAO,KAAK,CAAA;IACd,CAAC;IAED,IAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,UAAU,EAAE,EAAE,EAAE,CAAE,CAAC;QAC1C,IAAI,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACtB,OAAO,KAAK,CAAA;QACd,CAAC;IACH,CAAC;IAED,OAAO,IAAI,CAAA;AACb,CAAC;AAEK,SAAU,MAAM,CAAE,CAA6C;IACnE,IAAI,CAAC,YAAY,UAAU,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,YAAY,EAAE,OAAO,CAAC,CAAA;IAC5E,IAAI,CAAC,YAAY,WAAW,EAAE,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IACtD,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1B,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,UAAU,CAAC,CAAA;IAC7D,CAAC;IACD,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAA;AACtD,CAAC;AAEK,SAAU,QAAQ,CAAE,CAAU;IAClC,OAAO,CAAC,YAAY,WAAW,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AAC1D,CAAC;AAEK,SAAU,UAAU,CAAE,GAAW;IACrC,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;AACtC,CAAC;AAEK,SAAU,QAAQ,CAAE,CAAa;IACrC,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AACpC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 912, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 918, "column": 0}, "map": {"version":3,"file":"base-x.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/vendor/base-x.js"],"sourcesContent":["/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  /**\n   * @param {any[] | Iterable<number>} source\n   */\n  function encode (source) {\n    // @ts-ignore\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  /**\n   * @param {string | string[]} source\n   */\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  /**\n   * @param {string | string[]} string\n   */\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1084, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1090, "column": 0}, "map": {"version":3,"file":"base.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bases/base.ts"],"sourcesContent":["import { coerce } from '../bytes.js'\nimport basex from '../vendor/base-x.js'\nimport type { BaseCodec, BaseDecoder, BaseEncoder, CombobaseDecoder, Multibase, MultibaseCodec, MultibaseDecoder, MultibaseEncoder, UnibaseDecoder } from './interface.js'\n\ninterface EncodeFn { (bytes: Uint8Array): string }\ninterface DecodeFn { (text: string): Uint8Array }\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder<Base extends string, Prefix extends string> implements MultibaseEncoder<Prefix>, BaseEncoder {\n  readonly name: Base\n  readonly prefix: Prefix\n  readonly baseEncode: EncodeFn\n\n  constructor (name: Base, prefix: Prefix, baseEncode: EncodeFn) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  encode (bytes: Uint8Array): Multibase<Prefix> {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder<Base extends string, Prefix extends string> implements MultibaseDecoder<Prefix>, UnibaseDecoder<Prefix>, BaseDecoder {\n  readonly name: Base\n  readonly prefix: Prefix\n  readonly baseDecode: DecodeFn\n  private readonly prefixCodePoint: number\n\n  constructor (name: Base, prefix: Prefix, baseDecode: DecodeFn) {\n    this.name = name\n    this.prefix = prefix\n    const prefixCodePoint = prefix.codePointAt(0)\n    /* c8 ignore next 3 */\n    if (prefixCodePoint === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    this.prefixCodePoint = prefixCodePoint\n    this.baseDecode = baseDecode\n  }\n\n  decode (text: string): Uint8Array {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  or<OtherPrefix extends string> (decoder: UnibaseDecoder<OtherPrefix> | ComposedDecoder<OtherPrefix>): ComposedDecoder<Prefix | OtherPrefix> {\n    return or(this, decoder)\n  }\n}\n\ntype Decoders<Prefix extends string> = Record<Prefix, UnibaseDecoder<Prefix>>\n\nclass ComposedDecoder<Prefix extends string> implements MultibaseDecoder<Prefix>, CombobaseDecoder<Prefix> {\n  readonly decoders: Decoders<Prefix>\n\n  constructor (decoders: Decoders<Prefix>) {\n    this.decoders = decoders\n  }\n\n  or <OtherPrefix extends string> (decoder: UnibaseDecoder<OtherPrefix> | ComposedDecoder<OtherPrefix>): ComposedDecoder<Prefix | OtherPrefix> {\n    return or(this, decoder)\n  }\n\n  decode (input: string): Uint8Array {\n    const prefix = input[0] as Prefix\n    const decoder = this.decoders[prefix]\n    if (decoder != null) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\nexport function or <L extends string, R extends string> (left: UnibaseDecoder<L> | CombobaseDecoder<L>, right: UnibaseDecoder<R> | CombobaseDecoder<R>): ComposedDecoder<L | R> {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  return new ComposedDecoder({\n    ...(left.decoders ?? { [(left as UnibaseDecoder<L>).prefix]: left }),\n    ...(right.decoders ?? { [(right as UnibaseDecoder<R>).prefix]: right })\n  } as Decoders<L | R>)\n}\n\nexport class Codec<Base extends string, Prefix extends string> implements MultibaseCodec<Prefix>, MultibaseEncoder<Prefix>, MultibaseDecoder<Prefix>, BaseCodec, BaseEncoder, BaseDecoder {\n  readonly name: Base\n  readonly prefix: Prefix\n  readonly baseEncode: EncodeFn\n  readonly baseDecode: DecodeFn\n  readonly encoder: Encoder<Base, Prefix>\n  readonly decoder: Decoder<Base, Prefix>\n\n  constructor (name: Base, prefix: Prefix, baseEncode: EncodeFn, baseDecode: DecodeFn) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  encode (input: Uint8Array): string {\n    return this.encoder.encode(input)\n  }\n\n  decode (input: string): Uint8Array {\n    return this.decoder.decode(input)\n  }\n}\n\nexport function from <Base extends string, Prefix extends string> ({ name, prefix, encode, decode }: { name: Base, prefix: Prefix, encode: EncodeFn, decode: DecodeFn }): Codec<Base, Prefix> {\n  return new Codec(name, prefix, encode, decode)\n}\n\nexport function baseX <Base extends string, Prefix extends string> ({ name, prefix, alphabet }: { name: Base, prefix: Prefix, alphabet: string }): Codec<Base, Prefix> {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: (text: string): Uint8Array => coerce(decode(text))\n  })\n}\n\nfunction decode (string: string, alphabet: string, bitsPerChar: number, name: string): Uint8Array {\n  // Build the character lookup table:\n  const codes: Record<string, number> = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\nfunction encode (data: Uint8Array, alphabet: string, bitsPerChar: number): string {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits !== 0) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while (((out.length * bitsPerChar) & 7) !== 0) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n */\nexport function rfc4648 <Base extends string, Prefix extends string> ({ name, prefix, bitsPerChar, alphabet }: { name: Base, prefix: Prefix, bitsPerChar: number, alphabet: string }): Codec<Base, Prefix> {\n  return from({\n    prefix,\n    name,\n    encode (input: Uint8Array): string {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input: string): Uint8Array {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1302, "column": 0}, "map": {"version":3,"file":"base32.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bases/base32.ts"],"sourcesContent":["import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;;AAE5B,MAAM,MAAM,gOAAG,UAAA,AAAO,EAAC;IAC5B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,QAAQ;IACd,QAAQ,EAAE,kCAAkC;IAC5C,WAAW,EAAE,CAAC;CACf,CAAC,CAAA;AAEK,MAAM,WAAW,OAAG,mOAAA,AAAO,EAAC;IACjC,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,aAAa;IACnB,QAAQ,EAAE,kCAAkC;IAC5C,WAAW,EAAE,CAAC;CACf,CAAC,CAAA;AAEK,MAAM,SAAS,gOAAG,UAAA,AAAO,EAAC;IAC/B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,WAAW;IACjB,QAAQ,EAAE,mCAAmC;IAC7C,WAAW,EAAE,CAAC;CACf,CAAC,CAAA;AAEK,MAAM,cAAc,gOAAG,UAAA,AAAO,EAAC;IACpC,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,gBAAgB;IACtB,QAAQ,EAAE,mCAAmC;IAC7C,WAAW,EAAE,CAAC;CACf,CAAC,CAAA;AAEK,MAAM,SAAS,gOAAG,UAAA,AAAO,EAAC;IAC/B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,WAAW;IACjB,QAAQ,EAAE,kCAAkC;IAC5C,WAAW,EAAE,CAAC;CACf,CAAC,CAAA;AAEK,MAAM,cAAc,gOAAG,UAAA,AAAO,EAAC;IACpC,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,gBAAgB;IACtB,QAAQ,EAAE,kCAAkC;IAC5C,WAAW,EAAE,CAAC;CACf,CAAC,CAAA;AAEK,MAAM,YAAY,gOAAG,UAAA,AAAO,EAAC;IAClC,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,cAAc;IACpB,QAAQ,EAAE,mCAAmC;IAC7C,WAAW,EAAE,CAAC;CACf,CAAC,CAAA;AAEK,MAAM,iBAAiB,IAAG,sOAAA,AAAO,EAAC;IACvC,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,mBAAmB;IACzB,QAAQ,EAAE,mCAAmC;IAC7C,WAAW,EAAE,CAAC;CACf,CAAC,CAAA;AAEK,MAAM,OAAO,gOAAG,UAAA,AAAO,EAAC;IAC7B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,SAAS;IACf,QAAQ,EAAE,kCAAkC;IAC5C,WAAW,EAAE,CAAC;CACf,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 1369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1375, "column": 0}, "map": {"version":3,"file":"base36.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bases/base36.ts"],"sourcesContent":["import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,WAAW,CAAA;;AAE1B,MAAM,MAAM,gOAAG,QAAA,AAAK,EAAC;IAC1B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,QAAQ;IACd,QAAQ,EAAE,sCAAsC;CACjD,CAAC,CAAA;AAEK,MAAM,WAAW,gOAAG,QAAA,AAAK,EAAC;IAC/B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,aAAa;IACnB,QAAQ,EAAE,sCAAsC;CACjD,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 1391, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1397, "column": 0}, "map": {"version":3,"file":"base58.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bases/base58.ts"],"sourcesContent":["import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,WAAW,CAAA;;AAE1B,MAAM,SAAS,gOAAG,QAAA,AAAK,EAAC;IAC7B,IAAI,EAAE,WAAW;IACjB,MAAM,EAAE,GAAG;IACX,QAAQ,EAAE,4DAA4D;CACvE,CAAC,CAAA;AAEK,MAAM,YAAY,gOAAG,QAAA,AAAK,EAAC;IAChC,IAAI,EAAE,cAAc;IACpB,MAAM,EAAE,GAAG;IACX,QAAQ,EAAE,4DAA4D;CACvE,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 1413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1419, "column": 0}, "map": {"version":3,"file":"varint.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/vendor/varint.js"],"sourcesContent":["/* eslint-disable */\nvar encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  // @ts-ignore\n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      // @ts-ignore\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  // @ts-ignore\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (/** @type {number} */ value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n"],"names":[],"mappings":"AAAA,kBAAA,EAAoB;;;AACpB,IAAI,QAAQ,GAAG,MAAM,CAAC;AAEtB,IAAI,GAAG,GAAG,IAAI,EACV,IAAI,GAAG,IAAI,EACX,MAAM,GAAG,CAAC,IAAI,EACd,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAE1B;;;;GAIG,CACH,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM;IAC9B,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;IAChB,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;IACrB,IAAI,SAAS,GAAG,MAAM,CAAC;IAEvB,MAAM,GAAG,IAAI,GAAG,CAAE,CAAC;QACjB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,EAAG,GAAG,CAAC;QACnC,GAAG,IAAI,GAAG,CAAC;IACb,CAAC;IACD,MAAM,GAAG,GAAG,MAAM,CAAE,CAAC;QACnB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,EAAG,GAAG,CAAC;QACnC,GAAG,MAAM,CAAC,CAAC;IACb,CAAC;IACD,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IAEtB,aAAa;IACb,MAAM,CAAC,KAAK,GAAG,MAAM,GAAG,SAAS,GAAG,CAAC,CAAC;IAEtC,OAAO,GAAG,CAAA;AACZ,CAAC;AAED,IAAI,MAAM,GAAG,IAAI,CAAC;AAElB,IAAI,KAAK,GAAG,IAAI,EACZ,MAAM,GAAG,IAAI,CAAC;AAElB;;;GAGG,CACH,SAAS,IAAI,CAAC,GAAG,EAAE,MAAM;IACvB,IAAI,GAAG,GAAM,CAAC,EACV,MAAM,GAAG,MAAM,IAAI,CAAC,EACpB,KAAK,GAAI,CAAC,EACV,OAAO,GAAG,MAAM,EAChB,CAAC,EACD,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;IAEnB,GAAG,CAAC;QACF,IAAI,OAAO,IAAI,CAAC,EAAE,CAAC;YACjB,aAAa;YACb,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,MAAM,IAAI,UAAU,CAAC,yBAAyB,CAAC,CAAA;QACjD,CAAC;QACD,CAAC,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;QACnB,GAAG,IAAI,KAAK,GAAG,EAAE,GACb,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,KAAK,GACrB,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACtC,KAAK,IAAI,CAAC,CAAC;IACb,CAAC,OAAQ,CAAC,IAAI,KAAK,CAAC;IAEpB,aAAa;IACb,IAAI,CAAC,KAAK,GAAG,OAAO,GAAG,MAAM,CAAC;IAE9B,OAAO,GAAG,CAAA;AACZ,CAAC;AAED,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC;AACzB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACzB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACzB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACzB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACzB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACzB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACzB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACzB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAEzB,IAAI,MAAM,GAAG,SAAU,mBAAA,EAAqB,CAAC,KAAK;IAChD,OAAO,AACL,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GACd,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GACd,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GACd,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GACd,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GACd,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GACd,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GACd,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GACd,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GACD,EAAE,CAChB,CAAA;AACH,CAAC,CAAC;AAEF,IAAI,MAAM,GAAG;IACT,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,MAAM;IACd,cAAc,EAAE,MAAM;CACzB,CAAC;AAEF,IAAI,YAAY,GAAG,MAAM,CAAC;uCAEX,YAAY,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1486, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1492, "column": 0}, "map": {"version":3,"file":"varint.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/varint.ts"],"sourcesContent":["import varint from './vendor/varint.js'\n\nexport function decode (data: Uint8Array, offset = 0): [number, number] {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\nexport function encodeTo (int: number, target: Uint8Array, offset = 0): Uint8Array {\n  varint.encode(int, target, offset)\n  return target\n}\n\nexport function encodingLength (int: number): number {\n  return varint.encodingLength(int)\n}\n"],"names":[],"mappings":";;;;;AAAA,OAAO,MAAM,MAAM,oBAAoB,CAAA;;AAEjC,SAAU,MAAM,CAAE,IAAgB,EAAE,MAAM,GAAG,CAAC;IAClD,MAAM,IAAI,+NAAG,UAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;IACxC,OAAO;QAAC,IAAI;oOAAE,UAAM,CAAC,MAAM,CAAC,KAAK;KAAC,CAAA;AACpC,CAAC;AAEK,SAAU,QAAQ,CAAE,GAAW,EAAE,MAAkB,EAAE,MAAM,GAAG,CAAC;gOACnE,UAAM,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;IAClC,OAAO,MAAM,CAAA;AACf,CAAC;AAEK,SAAU,cAAc,CAAE,GAAW;IACzC,mOAAO,UAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAA;AACnC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1519, "column": 0}, "map": {"version":3,"file":"digest.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/hashes/digest.ts"],"sourcesContent":["import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\nimport type { MultihashDigest } from './interface.js'\n\n/**\n * Creates a multihash digest.\n */\nexport function create <Code extends number> (code: Code, digest: Uint8Array): Digest<Code, number> {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nexport function decode (multihash: Uint8Array): MultihashDigest {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\nexport function equals (a: MultihashDigest, b: unknown): b is MultihashDigest {\n  if (a === b) {\n    return true\n  } else {\n    const data = b as { code?: unknown, size?: unknown, bytes?: unknown }\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nexport class Digest<Code extends number, Size extends number> implements MultihashDigest {\n  readonly code: Code\n  readonly size: Size\n  readonly digest: Uint8Array\n  readonly bytes: Uint8Array\n\n  /**\n   * Creates a multihash digest.\n   */\n  constructor (code: Code, size: Size, digest: Uint8Array, bytes: Uint8Array) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n\n/**\n * Used to check that the passed multihash has the passed code\n */\nexport function hasCode <T extends number> (digest: MultihashDigest, code: T): digest is MultihashDigest<T> {\n  return digest.code === code\n}\n"],"names":[],"mappings":";;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,IAAI,UAAU,EAAE,MAAM,aAAa,CAAA;AAC1D,OAAO,KAAK,MAAM,MAAM,cAAc,CAAA;;;AAMhC,SAAU,MAAM,CAAwB,IAAU,EAAE,MAAkB;IAC1E,MAAM,IAAI,GAAG,MAAM,CAAC,UAAU,CAAA;IAC9B,MAAM,UAAU,GAAG,MAAM,4MAAC,cAAc,CAAC,IAAI,CAAC,CAAA;IAC9C,MAAM,YAAY,GAAG,UAAU,GAAG,MAAM,4MAAC,cAAc,CAAC,IAAI,CAAC,CAAA;IAE7D,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,CAAA;IACjD,MAAM,4MAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAA;IAC/B,MAAM,4MAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC,CAAA;IACxC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY,CAAC,CAAA;IAE/B,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;AAC9C,CAAC;AAKK,SAAU,MAAM,CAAE,SAAqB;IAC3C,MAAM,KAAK,IAAG,6NAAA,AAAM,EAAC,SAAS,CAAC,CAAA;IAC/B,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,MAAM,4MAAC,MAAM,CAAC,KAAK,CAAC,CAAA;IAC/C,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,GAAG,MAAM,4MAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAA;IACtE,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,GAAG,YAAY,CAAC,CAAA;IAExD,IAAI,MAAM,CAAC,UAAU,KAAK,IAAI,EAAE,CAAC;QAC/B,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAA;IACrC,CAAC;IAED,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;AAC9C,CAAC;AAEK,SAAU,MAAM,CAAE,CAAkB,EAAE,CAAU;IACpD,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACZ,OAAO,IAAI,CAAA;IACb,CAAC,MAAM,CAAC;QACN,MAAM,IAAI,GAAG,CAAwD,CAAA;QAErE,OAAO,AACL,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IACpB,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IACpB,IAAI,CAAC,KAAK,YAAY,UAAU,yNAChC,SAAA,AAAU,EAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAChC,CAAA;IACH,CAAC;AACH,CAAC;AAMK,MAAO,MAAM;IACR,IAAI,CAAM;IACV,IAAI,CAAM;IACV,MAAM,CAAY;IAClB,KAAK,CAAY;IAE1B;;OAEG,CACH,YAAa,IAAU,EAAE,IAAU,EAAE,MAAkB,EAAE,KAAiB,CAAA;QACxE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACpB,CAAC;CACF;AAKK,SAAU,OAAO,CAAqB,MAAuB,EAAE,IAAO;IAC1E,OAAO,MAAM,CAAC,IAAI,KAAK,IAAI,CAAA;AAC7B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1575, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1581, "column": 0}, "map": {"version":3,"file":"interface.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/link/interface.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unnecessary-type-constraint */\n/* eslint-disable no-use-before-define */\n\nimport type { MultibaseEncoder, MultibaseDecoder, Multibase } from '../bases/interface.js'\nimport type { Phantom, ByteView } from '../block/interface.js'\nimport type { MultihashDigest } from '../hashes/interface.js'\n\nexport type { MultihashDigest, MultibaseEncoder, MultibaseDecoder }\nexport type Version = 0 | 1\n\nexport type DAG_PB = 0x70\nexport type SHA_256 = 0x12\n\n/**\n * Represents an IPLD link to a specific data of type `T`.\n *\n * @template T - Logical type of the data being linked to.\n * @template C - multicodec code corresponding to a codec linked data is encoded with\n * @template A - multicodec code corresponding to the hashing algorithm of the CID\n * @template V - CID version\n */\nexport interface Link<\n  Data extends unknown = unknown,\n  Format extends number = number,\n  Alg extends number = number,\n  V extends Version = 1\n  > extends Phantom<Data> {\n  readonly version: V\n  readonly code: Format\n  readonly multihash: MultihashDigest<Alg>\n\n  readonly byteOffset: number\n  readonly byteLength: number\n  readonly bytes: ByteView<Link<Data, Format, Alg, V>>\n\n  equals(other: unknown): other is Link<Data, Format, Alg, Version>\n\n  toString<Prefix extends string>(base?: MultibaseEncoder<Prefix>): ToString<Link<Data, Format, Alg, Version>, Prefix>\n  link(): Link<Data, Format, Alg, V>\n\n  toV1(): Link<Data, Format, Alg, 1>\n}\n\nexport interface LinkJSON<T extends UnknownLink = UnknownLink> {\n  '/': ToString<T>\n}\n\nexport interface LegacyLink<T extends unknown = unknown> extends Link<T, DAG_PB, SHA_256, 0> {\n}\n\nexport type UnknownLink =\n  | LegacyLink<unknown>\n  | Link<unknown, number, number, Version>\n\nexport type ToString<T, Prefix extends string = string> = Multibase<Prefix> & Phantom<T>\n\nexport type { ByteView }\n"],"names":[],"mappings":"AAAA,oEAAA,EAAsE,CACtE,uCAAA,EAAyC","ignoreList":[0]}},
    {"offset": {"line": 1584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1590, "column": 0}, "map": {"version":3,"file":"cid.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/cid.ts"],"sourcesContent":["import { base32 } from './bases/base32.js'\nimport { base36 } from './bases/base36.js'\nimport { base58btc } from './bases/base58.js'\nimport { coerce } from './bytes.js'\nimport * as Digest from './hashes/digest.js'\nimport * as varint from './varint.js'\nimport type * as API from './link/interface.js'\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\nexport function format <T extends API.Link<unknown, number, number, API.Version>, Prefix extends string> (link: T, base?: API.MultibaseEncoder<Prefix>): API.ToString<T, Prefix> {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        base as API.MultibaseEncoder<'z'> ?? base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        (base ?? base32.encoder) as API.MultibaseEncoder<Prefix>\n      )\n  }\n}\n\nexport function toJSON <Link extends API.UnknownLink> (link: Link): API.LinkJSON<Link> {\n  return {\n    '/': format(link)\n  }\n}\n\nexport function fromJSON <Link extends API.UnknownLink> (json: API.LinkJSON<Link>): CID<unknown, number, number, API.Version> {\n  return CID.parse(json['/'])\n}\n\nconst cache = new WeakMap<API.UnknownLink, Map<string, string>>()\n\nfunction baseCache (cid: API.UnknownLink): Map<string, string> {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\nexport class CID<Data = unknown, Format extends number = number, Alg extends number = number, Version extends API.Version = API.Version> implements API.Link<Data, Format, Alg, Version> {\n  readonly code: Format\n  readonly version: Version\n  readonly multihash: API.MultihashDigest<Alg>\n  readonly bytes: Uint8Array\n  readonly '/': Uint8Array\n\n  /**\n   * @param version - Version of the CID\n   * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param multihash - (Multi)hash of the of the content.\n   */\n  constructor (version: Version, code: Format, multihash: API.MultihashDigest<Alg>, bytes: Uint8Array) {\n    this.code = code\n    this.version = version\n    this.multihash = multihash\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID (): this {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset (): number {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength (): number {\n    return this.bytes.byteLength\n  }\n\n  toV0 (): CID<Data, API.DAG_PB, API.SHA_256, 0> {\n    switch (this.version) {\n      case 0: {\n        return this as CID<Data, API.DAG_PB, API.SHA_256, 0>\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return (\n          CID.createV0(\n            multihash as API.MultihashDigest<API.SHA_256>\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  toV1 (): CID<Data, Format, Alg, 1> {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return this as CID<Data, Format, Alg, 1>\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  equals (other: unknown): other is CID<Data, Format, Alg, Version> {\n    return CID.equals(this, other)\n  }\n\n  static equals <Data, Format extends number, Alg extends number, Version extends API.Version>(self: API.Link<Data, Format, Alg, Version>, other: unknown): other is CID {\n    const unknown = other as { code?: unknown, version?: unknown, multihash?: unknown }\n    return (\n      unknown != null &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  toString (base?: API.MultibaseEncoder<string>): string {\n    return format(this, base)\n  }\n\n  toJSON (): API.LinkJSON<this> {\n    return { '/': format(this) }\n  }\n\n  link (): this {\n    return this\n  }\n\n  readonly [Symbol.toStringTag] = 'CID';\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] (): string {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   */\n  static asCID <Data, Format extends number, Alg extends number, Version extends API.Version, U>(input: API.Link<Data, Format, Alg, Version> | U): CID<Data, Format, Alg, Version> | null {\n    if (input == null) {\n      return null\n    }\n\n    const value = input as any\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        multihash as API.MultihashDigest<Alg>,\n        bytes ?? encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest = Digest.decode(multihash) as API.MultihashDigest<Alg>\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   * @param version - Version of the CID\n   * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param digest - (Multi)hash of the of the content.\n   */\n  static create <Data, Format extends number, Alg extends number, Version extends API.Version>(version: Version, code: Format, digest: API.MultihashDigest<Alg>): CID<Data, Format, Alg, Version> {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   */\n  static createV0 <T = unknown>(digest: API.MultihashDigest<typeof SHA_256_CODE>): CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0> {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @param code - Content encoding format code.\n   * @param digest - Multihash of the content.\n   */\n  static createV1 <Data, Code extends number, Alg extends number>(code: Code, digest: API.MultihashDigest<Alg>): CID<Data, Code, Alg, 1> {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   */\n  static decode <Data, Code extends number, Alg extends number, Version extends API.Version>(bytes: API.ByteView<API.Link<Data, Code, Alg, Version>>): CID<Data, Code, Alg, Version> {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length !== 0) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   */\n  static decodeFirst <T, C extends number, A extends number, V extends API.Version>(bytes: API.ByteView<API.Link<T, C, A, V>>): [CID<T, C, A, V>, Uint8Array] {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(digest as API.MultihashDigest<API.SHA_256>)\n        : CID.createV1(specs.codec, digest)\n    return [cid as CID<T, C, A, V>, bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   */\n  static inspectBytes <T, C extends number, A extends number, V extends API.Version>(initialBytes: API.ByteView<API.Link<T, C, A, V>>): { version: V, codec: C, multihashCode: A, digestSize: number, multihashSize: number, size: number } {\n    let offset = 0\n    const next = (): number => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = next() as V\n    let codec = DAG_PB_CODE as C\n    if (version as number === 18) {\n      // CIDv0\n      version = 0 as V\n      offset = 0\n    } else {\n      codec = next() as C\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = next() as A // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   */\n  static parse <Prefix extends string, Data, Code extends number, Alg extends number, Version extends API.Version>(source: API.ToString<API.Link<Data, Code, Alg, Version>, Prefix>, base?: API.MultibaseDecoder<Prefix>): CID<Data, Code, Alg, Version> {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\nfunction parseCIDtoBytes <Prefix extends string, Data, Code extends number, Alg extends number, Version extends API.Version> (source: API.ToString<API.Link<Data, Code, Alg, Version>, Prefix>, base?: API.MultibaseDecoder<Prefix>): [Prefix, API.ByteView<API.Link<Data, Code, Alg, Version>>] {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base ?? base58btc\n      return [\n        base58btc.prefix as Prefix,\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base ?? base58btc\n      return [base58btc.prefix as Prefix, decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base ?? base32\n      return [base32.prefix as Prefix, decoder.decode(source)]\n    }\n    case base36.prefix: {\n      const decoder = base ?? base36\n      return [base36.prefix as Prefix, decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [source[0] as Prefix, base.decode(source)]\n    }\n  }\n}\n\nfunction toStringV0 (bytes: Uint8Array, cache: Map<string, string>, base: API.MultibaseEncoder<'z'>): string {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nfunction toStringV1 <Prefix extends string> (bytes: Uint8Array, cache: Map<string, string>, base: API.MultibaseEncoder<Prefix>): string {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\nfunction encodeCID (version: API.Version, code: number, multihash: Uint8Array): Uint8Array {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1995, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2016, "column": 0}, "map": {"version":3,"file":"raw.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/codecs/raw.ts"],"sourcesContent":["import { coerce } from '../bytes.js'\nimport type { ArrayBufferView, ByteView } from './interface.js'\n\nexport const name = 'raw'\nexport const code = 0x55\n\nexport function encode (node: Uint8Array): ByteView<Uint8Array> {\n  return coerce(node)\n}\n\nexport function decode (data: ByteView<Uint8Array> | ArrayBufferView<Uint8Array>): Uint8Array {\n  return coerce(data)\n}\n"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAA;;AAG7B,MAAM,IAAI,GAAG,KAAK,CAAA;AAClB,MAAM,IAAI,GAAG,IAAI,CAAA;AAElB,SAAU,MAAM,CAAE,IAAgB;IACtC,OAAO,8NAAA,AAAM,EAAC,IAAI,CAAC,CAAA;AACrB,CAAC;AAEK,SAAU,MAAM,CAAE,IAAwD;IAC9E,4NAAO,SAAA,AAAM,EAAC,IAAI,CAAC,CAAA;AACrB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2032, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2038, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40ipld%2Bdag-pb%404.1.3/node_modules/%40ipld/dag-pb/src/pb-decode.js"],"sourcesContent":["const textDecoder = new TextDecoder()\n\n/**\n * @typedef {import('./interface.js').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface.js').RawPBNode} RawPBNode\n */\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[number, number]}\n */\nfunction decodeVarint (bytes, offset) {\n  let v = 0\n\n  for (let shift = 0; ; shift += 7) {\n    /* c8 ignore next 3 */\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow')\n    }\n    /* c8 ignore next 3 */\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data')\n    }\n\n    const b = bytes[offset++]\n    v += shift < 28 ? (b & 0x7f) << shift : (b & 0x7f) * (2 ** shift)\n    if (b < 0x80) {\n      break\n    }\n  }\n  return [v, offset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[Uint8Array, number]}\n */\nfunction decodeBytes (bytes, offset) {\n  let byteLen\n  ;[byteLen, offset] = decodeVarint(bytes, offset)\n  const postOffset = offset + byteLen\n\n  /* c8 ignore next 3 */\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length')\n  }\n  /* c8 ignore next 3 */\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data')\n  }\n\n  return [bytes.subarray(offset, postOffset), postOffset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} index\n * @returns {[number, number, number]}\n */\nfunction decodeKey (bytes, index) {\n  let wire\n  ;[wire, index] = decodeVarint(bytes, index)\n  // [wireType, fieldNum, newIndex]\n  return [wire & 0x7, wire >> 3, index]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBLink}\n */\nfunction decodeLink (bytes) {\n  /** @type {RawPBLink} */\n  const link = {}\n  const l = bytes.length\n  let index = 0\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Hash`)\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash')\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash')\n      }\n\n      [link.Hash, index] = decodeBytes(bytes, index)\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Name`)\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name')\n      }\n\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      link.Name = textDecoder.decode(byts)\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section')\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Tsize`)\n      }\n\n      [link.Tsize, index] = decodeVarint(bytes, index)\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data')\n  }\n\n  return link\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBNode}\n */\nexport function decodeNode (bytes) {\n  const l = bytes.length\n  let index = 0\n  /** @type {RawPBLink[]|void} */\n  let links = undefined // eslint-disable-line no-undef-init\n  let linksBeforeData = false\n  /** @type {Uint8Array|void} */\n  let data = undefined // eslint-disable-line no-undef-init\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${wireType}`)\n    }\n\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section')\n      }\n\n      [data, index] = decodeBytes(bytes, index)\n      if (links) {\n        linksBeforeData = true\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) { // interleaved Links/Data/Links\n        throw new Error('protobuf: (PBNode) duplicate Links section')\n      } else if (!links) {\n        links = []\n      }\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      links.push(decodeLink(byts))\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data')\n  }\n\n  /** @type {RawPBNode} */\n  const node = {}\n  if (data) {\n    node.Data = data\n  }\n  node.Links = links || []\n  return node\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2208, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40ipld%2Bdag-pb%404.1.3/node_modules/%40ipld/dag-pb/src/pb-encode.js"],"sourcesContent":["const textEncoder = new TextEncoder()\nconst maxInt32 = 2 ** 32\nconst maxUInt32 = 2 ** 31\n\n/**\n * @typedef {import('./interface.js').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface.js').RawPBNode} RawPBNode\n */\n\n// the encoders work backward from the end of the bytes array\n\n/**\n * encodeLink() is passed a slice of the parent byte array that ends where this\n * link needs to end, so it packs to the right-most part of the passed `bytes`\n *\n * @param {RawPBLink} link\n * @param {Uint8Array} bytes\n * @returns {number}\n */\nfunction encodeLink (link, bytes) {\n  let i = bytes.length\n\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative')\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding')\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1\n    bytes[i] = 0x18\n  }\n\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name)\n    i -= nameBytes.length\n    bytes.set(nameBytes, i)\n    i = encodeVarint(bytes, i, nameBytes.length) - 1\n    bytes[i] = 0x12\n  }\n\n  if (link.Hash) {\n    i -= link.Hash.length\n    bytes.set(link.Hash, i)\n    i = encodeVarint(bytes, i, link.Hash.length) - 1\n    bytes[i] = 0xa\n  }\n\n  return bytes.length - i\n}\n\n/**\n * Encodes a PBNode into a new byte array of precisely the correct size\n *\n * @param {RawPBNode} node\n * @returns {Uint8Array}\n */\nexport function encodeNode (node) {\n  const size = sizeNode(node)\n  const bytes = new Uint8Array(size)\n  let i = size\n\n  if (node.Data) {\n    i -= node.Data.length\n    bytes.set(node.Data, i)\n    i = encodeVarint(bytes, i, node.Data.length) - 1\n    bytes[i] = 0xa\n  }\n\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i))\n      i -= size\n      i = encodeVarint(bytes, i, size) - 1\n      bytes[i] = 0x12\n    }\n  }\n\n  return bytes\n}\n\n/**\n * work out exactly how many bytes this link takes up\n *\n * @param {RawPBLink} link\n * @returns\n */\nfunction sizeLink (link) {\n  let n = 0\n\n  if (link.Hash) {\n    const l = link.Hash.length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize)\n  }\n\n  return n\n}\n\n/**\n * Work out exactly how many bytes this node takes up\n *\n * @param {RawPBNode} node\n * @returns {number}\n */\nfunction sizeNode (node) {\n  let n = 0\n\n  if (node.Data) {\n    const l = node.Data.length\n    n += 1 + l + sov(l)\n  }\n\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link)\n      n += 1 + l + sov(l)\n    }\n  }\n\n  return n\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @param {number} v\n * @returns {number}\n */\nfunction encodeVarint (bytes, offset, v) {\n  offset -= sov(v)\n  const base = offset\n\n  while (v >= maxUInt32) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v /= 128\n  }\n\n  while (v >= 128) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v >>>= 7\n  }\n\n  bytes[offset] = v\n\n  return base\n}\n\n/**\n * size of varint\n *\n * @param {number} x\n * @returns {number}\n */\nfunction sov (x) {\n  if (x % 2 === 0) {\n    x++\n  }\n  return Math.floor((len64(x) + 6) / 7)\n}\n\n/**\n * golang math/bits, how many bits does it take to represent this integer?\n *\n * @param {number} x\n * @returns {number}\n */\nfunction len64 (x) {\n  let n = 0\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32)\n    n = 32\n  }\n  if (x >= (1 << 16)) {\n    x >>>= 16\n    n += 16\n  }\n  if (x >= (1 << 8)) {\n    x >>>= 8\n    n += 8\n  }\n  return n + len8tab[x]\n}\n\n// golang math/bits\nconst len8tab = [\n  0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8\n]\n"],"names":[],"mappings":"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":[0]}},
    {"offset": {"line": 2622, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2628, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40ipld%2Bdag-pb%404.1.3/node_modules/%40ipld/dag-pb/src/util.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('./interface.js').PBLink} PBLink\n * @typedef {import('./interface.js').PBNode} PBNode\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\nconst pbNodeProperties = ['Data', 'Links']\nconst pbLinkProperties = ['Hash', 'Name', 'Tsize']\n\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {PBLink} a\n * @param {PBLink} b\n * @returns {number}\n */\nfunction linkComparator (a, b) {\n  if (a === b) {\n    return 0\n  }\n\n  const abuf = a.Name ? textEncoder.encode(a.Name) : []\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : []\n\n  let x = abuf.length\n  let y = bbuf.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i]\n      y = bbuf[i]\n      break\n    }\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0\n}\n\n/**\n * @param {any} node\n * @param {string[]} properties\n * @returns {boolean}\n */\nfunction hasOnlyProperties (node, properties) {\n  return !Object.keys(node).some((p) => !properties.includes(p))\n}\n\n/**\n * Converts a CID, or a PBLink-like object to a PBLink\n *\n * @param {any} link\n * @returns {PBLink}\n */\nfunction asLink (link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link)\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n    return { Hash }\n  }\n\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  const pbl = {}\n\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash)\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash)\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash)\n        }\n      }\n    } catch (/** @type {any} */ e) {\n      throw new TypeError(`Invalid DAG-PB form: ${e.message}`)\n    }\n\n    if (cid) {\n      pbl.Hash = cid\n    }\n  }\n\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name\n  }\n\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize\n  }\n\n  return pbl\n}\n\n/**\n * @param {any} node\n * @returns {PBNode}\n */\nexport function prepare (node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node }\n  }\n\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  /** @type {PBNode} */\n  const pbn = {}\n\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data)\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  }\n\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink)\n      pbn.Links.sort(linkComparator)\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  } else {\n    pbn.Links = []\n  }\n\n  return pbn\n}\n\n/**\n * @param {PBNode} node\n */\nexport function validate (node) {\n  /*\n  type PBLink struct {\n    Hash optional Link\n    Name optional String\n    Tsize optional Int\n  }\n\n  type PBNode struct {\n    Links [PBLink]\n    Data optional Bytes\n  }\n  */\n  // @ts-ignore private property for TS\n  if (!node || typeof node !== 'object' || Array.isArray(node) || node instanceof Uint8Array || (node['/'] && node['/'] === node.bytes)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)')\n  }\n\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be bytes)')\n  }\n\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be a list)')\n  }\n\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i]\n    // @ts-ignore private property for TS\n    if (!link || typeof link !== 'object' || Array.isArray(link) || link instanceof Uint8Array || (link['/'] && link['/'] === link.bytes)) {\n      throw new TypeError('Invalid DAG-PB form (bad link)')\n    }\n\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link)')\n    }\n\n    if (link.Hash === undefined) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)')\n    }\n\n    // @ts-ignore private property for TS\n    if (link.Hash == null || !link.Hash['/'] || link.Hash['/'] !== link.Hash.bytes) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)')\n    }\n\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)')\n    }\n\n    if (link.Tsize !== undefined) {\n      if (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0) {\n        throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)')\n      }\n      if (link.Tsize < 0) {\n        throw new TypeError('Invalid DAG-PB form (link Tsize cannot be negative)')\n      }\n    }\n\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)')\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} data\n * @param {PBLink[]} [links=[]]\n * @returns {PBNode}\n */\nexport function createNode (data, links = []) {\n  return prepare({ Data: data, Links: links })\n}\n\n/**\n * @param {string} name\n * @param {number} size\n * @param {CID} cid\n * @returns {PBLink}\n */\nexport function createLink (name, size, cid) {\n  return asLink({ Hash: cid, Name: name, Tsize: size })\n}\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nexport function toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AAAA;;AAEA;;;CAGC,GAED;;;CAGC,GAED;;;CAGC,GAED,MAAM,mBAAmB;IAAC;IAAQ;CAAQ;AAC1C,MAAM,mBAAmB;IAAC;IAAQ;IAAQ;CAAQ;AAElD,MAAM,cAAc,IAAI;AAExB;;;;CAIC,GACD,SAAS,eAAgB,CAAC,EAAE,CAAC;IAC3B,IAAI,MAAM,GAAG;QACX,OAAO;IACT;IAEA,MAAM,OAAO,EAAE,IAAI,GAAG,YAAY,MAAM,CAAC,EAAE,IAAI,IAAI,EAAE;IACrD,MAAM,OAAO,EAAE,IAAI,GAAG,YAAY,MAAM,CAAC,EAAE,IAAI,IAAI,EAAE;IAErD,IAAI,IAAI,KAAK,MAAM;IACnB,IAAI,IAAI,KAAK,MAAM;IAEnB,IAAK,IAAI,IAAI,GAAG,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,IAAI,KAAK,EAAE,EAAG;QAClD,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,EAAE;YACX,IAAI,IAAI,CAAC,EAAE;YACX;QACF;IACF;IAEA,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI;AAClC;AAEA;;;;CAIC,GACD,SAAS,kBAAmB,IAAI,EAAE,UAAU;IAC1C,OAAO,CAAC,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,IAAM,CAAC,WAAW,QAAQ,CAAC;AAC7D;AAEA;;;;;CAKC,GACD,SAAS,OAAQ,IAAI;IACnB,IAAI,OAAO,KAAK,KAAK,KAAK,UAAU;QAClC,MAAM,OAAO,8NAAA,CAAA,MAAG,CAAC,KAAK,CAAC;QACvB,IAAI,CAAC,MAAM;YACT,MAAM,IAAI,UAAU;QACtB;QACA,OAAO;YAAE;QAAK;IAChB;IAEA,IAAI,OAAO,SAAS,YAAY,MAAM,OAAO,CAAC,OAAO;QACnD,MAAM,IAAI,UAAU;IACtB;IAEA,MAAM,MAAM,CAAC;IAEb,IAAI,KAAK,IAAI,EAAE;QACb,IAAI,MAAM,8NAAA,CAAA,MAAG,CAAC,KAAK,CAAC,KAAK,IAAI;QAC7B,IAAI;YACF,IAAI,CAAC,KAAK;gBACR,IAAI,OAAO,KAAK,IAAI,KAAK,UAAU;oBACjC,MAAM,8NAAA,CAAA,MAAG,CAAC,KAAK,CAAC,KAAK,IAAI;gBAC3B,OAAO,IAAI,KAAK,IAAI,YAAY,YAAY;oBAC1C,MAAM,8NAAA,CAAA,MAAG,CAAC,MAAM,CAAC,KAAK,IAAI;gBAC5B;YACF;QACF,EAAE,OAAO,gBAAgB,GAAG,GAAG;YAC7B,MAAM,IAAI,UAAU,CAAC,qBAAqB,EAAE,EAAE,OAAO,EAAE;QACzD;QAEA,IAAI,KAAK;YACP,IAAI,IAAI,GAAG;QACb;IACF;IAEA,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,MAAM,IAAI,UAAU;IACtB;IAEA,IAAI,OAAO,KAAK,IAAI,KAAK,UAAU;QACjC,IAAI,IAAI,GAAG,KAAK,IAAI;IACtB;IAEA,IAAI,OAAO,KAAK,KAAK,KAAK,UAAU;QAClC,IAAI,KAAK,GAAG,KAAK,KAAK;IACxB;IAEA,OAAO;AACT;AAMO,SAAS,QAAS,IAAI;IAC3B,IAAI,gBAAgB,cAAc,OAAO,SAAS,UAAU;QAC1D,OAAO;YAAE,MAAM;QAAK;IACtB;IAEA,IAAI,OAAO,SAAS,YAAY,MAAM,OAAO,CAAC,OAAO;QACnD,MAAM,IAAI,UAAU;IACtB;IAEA,mBAAmB,GACnB,MAAM,MAAM,CAAC;IAEb,IAAI,KAAK,IAAI,KAAK,WAAW;QAC3B,IAAI,OAAO,KAAK,IAAI,KAAK,UAAU;YACjC,IAAI,IAAI,GAAG,YAAY,MAAM,CAAC,KAAK,IAAI;QACzC,OAAO,IAAI,KAAK,IAAI,YAAY,YAAY;YAC1C,IAAI,IAAI,GAAG,KAAK,IAAI;QACtB,OAAO;YACL,MAAM,IAAI,UAAU;QACtB;IACF;IAEA,IAAI,KAAK,KAAK,KAAK,WAAW;QAC5B,IAAI,MAAM,OAAO,CAAC,KAAK,KAAK,GAAG;YAC7B,IAAI,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,CAAC;YAC3B,IAAI,KAAK,CAAC,IAAI,CAAC;QACjB,OAAO;YACL,MAAM,IAAI,UAAU;QACtB;IACF,OAAO;QACL,IAAI,KAAK,GAAG,EAAE;IAChB;IAEA,OAAO;AACT;AAKO,SAAS,SAAU,IAAI;IAC5B;;;;;;;;;;;EAWA,GACA,qCAAqC;IACrC,IAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,MAAM,OAAO,CAAC,SAAS,gBAAgB,cAAe,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,KAAK,EAAG;QACrI,MAAM,IAAI,UAAU;IACtB;IAEA,IAAI,CAAC,kBAAkB,MAAM,mBAAmB;QAC9C,MAAM,IAAI,UAAU;IACtB;IAEA,IAAI,KAAK,IAAI,KAAK,aAAa,CAAC,CAAC,KAAK,IAAI,YAAY,UAAU,GAAG;QACjE,MAAM,IAAI,UAAU;IACtB;IAEA,IAAI,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,GAAG;QAC9B,MAAM,IAAI,UAAU;IACtB;IAEA,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,CAAC,MAAM,EAAE,IAAK;QAC1C,MAAM,OAAO,KAAK,KAAK,CAAC,EAAE;QAC1B,qCAAqC;QACrC,IAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,MAAM,OAAO,CAAC,SAAS,gBAAgB,cAAe,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,KAAK,EAAG;YACrI,MAAM,IAAI,UAAU;QACtB;QAEA,IAAI,CAAC,kBAAkB,MAAM,mBAAmB;YAC9C,MAAM,IAAI,UAAU;QACtB;QAEA,IAAI,KAAK,IAAI,KAAK,WAAW;YAC3B,MAAM,IAAI,UAAU;QACtB;QAEA,qCAAqC;QACrC,IAAI,KAAK,IAAI,IAAI,QAAQ,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;YAC9E,MAAM,IAAI,UAAU;QACtB;QAEA,IAAI,KAAK,IAAI,KAAK,aAAa,OAAO,KAAK,IAAI,KAAK,UAAU;YAC5D,MAAM,IAAI,UAAU;QACtB;QAEA,IAAI,KAAK,KAAK,KAAK,WAAW;YAC5B,IAAI,OAAO,KAAK,KAAK,KAAK,YAAY,KAAK,KAAK,GAAG,MAAM,GAAG;gBAC1D,MAAM,IAAI,UAAU;YACtB;YACA,IAAI,KAAK,KAAK,GAAG,GAAG;gBAClB,MAAM,IAAI,UAAU;YACtB;QACF;QAEA,IAAI,IAAI,KAAK,eAAe,MAAM,KAAK,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG;YAC3D,MAAM,IAAI,UAAU;QACtB;IACF;AACF;AAOO,SAAS,WAAY,IAAI,EAAE,QAAQ,EAAE;IAC1C,OAAO,QAAQ;QAAE,MAAM;QAAM,OAAO;IAAM;AAC5C;AAQO,SAAS,WAAY,IAAI,EAAE,IAAI,EAAE,GAAG;IACzC,OAAO,OAAO;QAAE,MAAM;QAAK,MAAM;QAAM,OAAO;IAAK;AACrD;AAOO,SAAS,WAAY,GAAG;IAC7B,IAAI,eAAe,aAAa;QAC9B,OAAO,IAAI,WAAW,KAAK,GAAG,IAAI,UAAU;IAC9C;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 2839, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2845, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40ipld%2Bdag-pb%404.1.3/node_modules/%40ipld/dag-pb/src/index.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { decodeNode } from './pb-decode.js'\nimport { encodeNode } from './pb-encode.js'\nimport { prepare, validate, createNode, createLink, toByteView } from './util.js'\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @typedef {import('./interface.js').PBLink} PBLink\n * @typedef {import('./interface.js').PBNode} PBNode\n */\n\nexport const name = 'dag-pb'\nexport const code = 0x70\n\n/**\n * @param {PBNode} node\n * @returns {ByteView<PBNode>}\n */\nexport function encode (node) {\n  validate(node)\n\n  const pbn = {}\n  if (node.Links) {\n    pbn.Links = node.Links.map((l) => {\n      const link = {}\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes // cid -> bytes\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n  if (node.Data) {\n    pbn.Data = node.Data\n  }\n\n  return encodeNode(pbn)\n}\n\n/**\n * @param {ByteView<PBNode> | ArrayBufferView<PBNode>} bytes\n * @returns {PBNode}\n */\nexport function decode (bytes) {\n  const buf = toByteView(bytes)\n  const pbn = decodeNode(buf)\n\n  const node = {}\n\n  if (pbn.Data) {\n    node.Data = pbn.Data\n  }\n\n  if (pbn.Links) {\n    node.Links = pbn.Links.map((l) => {\n      const link = {}\n      try {\n        link.Hash = CID.decode(l.Hash)\n      } catch (e) {}\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID')\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n\n  return node\n}\n\nexport { prepare, validate, createNode, createLink }\n"],"names":[],"mappings":";;;;;;AAGA;AADA;AADA;AADA;;;;;AAoBO,MAAM,OAAO;AACb,MAAM,OAAO;AAMb,SAAS,OAAQ,IAAI;IAC1B,CAAA,GAAA,oNAAA,CAAA,WAAQ,AAAD,EAAE;IAET,MAAM,MAAM,CAAC;IACb,IAAI,KAAK,KAAK,EAAE;QACd,IAAI,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC;YAC1B,MAAM,OAAO,CAAC;YACd,IAAI,EAAE,IAAI,EAAE;gBACV,KAAK,IAAI,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe;;YAC1C;YACA,IAAI,EAAE,IAAI,KAAK,WAAW;gBACxB,KAAK,IAAI,GAAG,EAAE,IAAI;YACpB;YACA,IAAI,EAAE,KAAK,KAAK,WAAW;gBACzB,KAAK,KAAK,GAAG,EAAE,KAAK;YACtB;YACA,OAAO;QACT;IACF;IACA,IAAI,KAAK,IAAI,EAAE;QACb,IAAI,IAAI,GAAG,KAAK,IAAI;IACtB;IAEA,OAAO,CAAA,GAAA,4NAAA,CAAA,aAAU,AAAD,EAAE;AACpB;AAMO,SAAS,OAAQ,KAAK;IAC3B,MAAM,MAAM,CAAA,GAAA,oNAAA,CAAA,aAAU,AAAD,EAAE;IACvB,MAAM,MAAM,CAAA,GAAA,4NAAA,CAAA,aAAU,AAAD,EAAE;IAEvB,MAAM,OAAO,CAAC;IAEd,IAAI,IAAI,IAAI,EAAE;QACZ,KAAK,IAAI,GAAG,IAAI,IAAI;IACtB;IAEA,IAAI,IAAI,KAAK,EAAE;QACb,KAAK,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;YAC1B,MAAM,OAAO,CAAC;YACd,IAAI;gBACF,KAAK,IAAI,GAAG,8NAAA,CAAA,MAAG,CAAC,MAAM,CAAC,EAAE,IAAI;YAC/B,EAAE,OAAO,GAAG,CAAC;YACb,IAAI,CAAC,KAAK,IAAI,EAAE;gBACd,MAAM,IAAI,MAAM;YAClB;YACA,IAAI,EAAE,IAAI,KAAK,WAAW;gBACxB,KAAK,IAAI,GAAG,EAAE,IAAI;YACpB;YACA,IAAI,EAAE,KAAK,KAAK,WAAW;gBACzB,KAAK,KAAK,GAAG,EAAE,KAAK;YACtB;YACA,OAAO;QACT;IACF;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 2913, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2931, "column": 0}, "map": {"version":3,"file":"hasher.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/hashes/hasher.ts"],"sourcesContent":["import * as Digest from './digest.js'\nimport type { MultihashHasher } from './interface.js'\n\ntype Await<T> = Promise<T> | T\n\nexport function from <Name extends string, Code extends number> ({ name, code, encode }: { name: Name, code: Code, encode(input: Uint8Array): Await<Uint8Array> }): Hasher<Name, Code> {\n  return new Hasher(name, code, encode)\n}\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nexport class Hasher<Name extends string, Code extends number> implements MultihashHasher<Code> {\n  readonly name: Name\n  readonly code: Code\n  readonly encode: (input: Uint8Array) => Await<Uint8Array>\n\n  constructor (name: Name, code: Code, encode: (input: Uint8Array) => Await<Uint8Array>) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  digest (input: Uint8Array): Await<Digest.Digest<Code, number>> {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,OAAO,KAAK,MAAM,MAAM,aAAa,CAAA;;AAK/B,SAAU,IAAI,CAA6C,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAA4E;IAC/J,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAA;AACvC,CAAC;AAMK,MAAO,MAAM;IACR,IAAI,CAAM;IACV,IAAI,CAAM;IACV,MAAM,CAA0C;IAEzD,YAAa,IAAU,EAAE,IAAU,EAAE,MAAgD,CAAA;QACnF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,CAAC;IAED,MAAM,CAAE,KAAiB,EAAA;QACvB,IAAI,KAAK,YAAY,UAAU,EAAE,CAAC;YAChC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;YACjC,OAAO,MAAM,YAAY,UAAU,GAC/B,MAAM,sNAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,GAEhC,MAAM,CAAC,IAAI,EAAC,MAAM,CAAC,EAAE,AAAC,MAAM,sNAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAA;QAC7D,CAAC,MAAM,CAAC;YACN,MAAM,KAAK,CAAC,mCAAmC,CAAC,CAAA;QAChD,oBAAA,EAAsB,CACxB,CAAC;IACH,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 2958, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2964, "column": 0}, "map": {"version":3,"file":"interface.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bases/interface.ts"],"sourcesContent":["// Base encoders / decoders just base encode / decode between binary and\n// textual representation. They are unaware of multibase.\n\n/**\n * Base encoder just encodes bytes into base encoded string.\n */\nexport interface BaseEncoder {\n  /**\n   * Base encodes to a **plain** (and not a multibase) string. Unlike\n   * `encode` no multibase prefix is added.\n   */\n  baseEncode(bytes: Uint8Array): string\n}\n\n/**\n * Base decoder decodes encoded with matching base encoding into bytes.\n */\nexport interface BaseDecoder {\n  /**\n   * Decodes **plain** (and not a multibase) string. Unlike\n   * decode\n   */\n  baseDecode(text: string): Uint8Array\n}\n\n/**\n * Base codec is just dual of encoder and decoder.\n */\nexport interface BaseCodec {\n  encoder: BaseEncoder\n  decoder: BaseDecoder\n}\n\n/**\n * Multibase represents base encoded strings with a prefix first character\n * describing it's encoding.\n */\nexport type Multibase<Prefix extends string> =\n  | string\n  | string & { [0]: Prefix }\n\n/**\n * Multibase encoder for the specific base encoding encodes bytes into\n * multibase of that encoding.\n */\nexport interface MultibaseEncoder<Prefix extends string> {\n  /**\n   * Name of the encoding.\n   */\n  name: string\n  /**\n   * Prefix character for that base encoding.\n   */\n  prefix: Prefix\n  /**\n   * Encodes binary data into **multibase** string (which will have a\n   * prefix added).\n   */\n  encode(bytes: Uint8Array): Multibase<Prefix>\n}\n\n/**\n * Interface implemented by multibase decoder, that takes multibase strings\n * to bytes. It may support single encoding like base32 or multiple encodings\n * like base32, base58btc, base64. If passed multibase is incompatible it will\n * throw an exception.\n */\nexport interface MultibaseDecoder<Prefix extends string> {\n  /**\n   * Decodes **multibase** string (which must have a multibase prefix added).\n   * If prefix does not match\n   */\n  decode(multibase: Multibase<Prefix>): Uint8Array\n}\n\n/**\n * Dual of multibase encoder and decoder.\n */\nexport interface MultibaseCodec<Prefix extends string> {\n  name: string\n  prefix: Prefix\n  encoder: MultibaseEncoder<Prefix>\n  decoder: MultibaseDecoder<Prefix>\n}\n\nexport interface UnibaseDecoder<Prefix extends string> extends MultibaseDecoder<Prefix> {\n  // Reserve this property so it can be used to derive type.\n  readonly decoders?: null\n\n  readonly prefix: Prefix\n}\n\nexport interface CombobaseDecoder<Prefix extends string> extends MultibaseDecoder<Prefix> {\n  readonly decoders: Record<Prefix, UnibaseDecoder<Prefix>>\n}\n"],"names":[],"mappings":"AAAA,wEAAwE;AACxE,yDAAyD","ignoreList":[0]}},
    {"offset": {"line": 2969, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2975, "column": 0}, "map": {"version":3,"file":"interface.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/hashes/interface.ts"],"sourcesContent":["// # Multihash\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\n// Note: In the current version there is no first class multihash\n// representation (plain Uint8Array is used instead) instead there seems to be\n// a bunch of places that parse it to extract (code, digest, size). By creating\n// this first class representation we avoid reparsing and things generally fit\n// really nicely.\nexport interface MultihashDigest<Code extends number = number> {\n  /**\n   * Code of the multihash\n   */\n  code: Code\n\n  /**\n   * Raw digest (without a hashing algorithm info)\n   */\n  digest: Uint8Array\n\n  /**\n   * byte length of the `this.digest`\n   */\n  size: number\n\n  /**\n   * Binary representation of this multihash digest.\n   */\n  bytes: Uint8Array\n}\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nexport interface MultihashHasher<Code extends number = number> {\n  /**\n   * Takes binary `input` and returns it (multi) hash digest. Return value is\n   * either promise of a digest or a digest. This way general use can `await`\n   * while performance critical code may asses return value to decide whether\n   * await is needed.\n   */\n  digest(input: Uint8Array): Promise<MultihashDigest<Code>> | MultihashDigest<Code>\n\n  /**\n   * Name of the multihash\n   */\n  name: string\n\n  /**\n   * Code of the multihash\n   */\n  code: Code\n}\n\n/**\n * Sync variant of `MultihashHasher` that refines return type of the `digest`\n * to `MultihashDigest`. It is subtype of `MultihashHasher` so implementations\n * of this interface can be passed anywhere `MultihashHasher` is expected,\n * allowing consumer to either `await` or check the return type to decide\n * whether to await or proceed with return value.\n *\n * `SyncMultihashHasher` is useful in certain APIs where async hashing would be\n * impractical e.g. implementation of Hash Array Mapped Trie (HAMT).\n */\nexport interface SyncMultihashHasher<Code extends number = number> extends MultihashHasher<Code> {\n  digest(input: Uint8Array): MultihashDigest<Code>\n}\n"],"names":[],"mappings":"AAAA,cAAc","ignoreList":[0]}},
    {"offset": {"line": 2979, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2985, "column": 0}, "map": {"version":3,"file":"interface.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/codecs/interface.ts"],"sourcesContent":["import type { ArrayBufferView, ByteView } from '../block/interface.js'\n\n/**\n * IPLD encoder part of the codec.\n */\nexport interface BlockEncoder<Code extends number, T> {\n  name: string\n  code: Code\n  encode(data: T): ByteView<T>\n}\n\n/**\n * IPLD decoder part of the codec.\n */\nexport interface BlockDecoder<Code extends number, T> {\n  code: Code\n  decode(bytes: ByteView<T> | ArrayBufferView<T>): T\n}\n\n/**\n * An IPLD codec is a combination of both encoder and decoder.\n */\nexport interface BlockCodec<Code extends number, T> extends BlockEncoder<Code, T>, BlockDecoder<Code, T> {}\n\nexport type { ArrayBufferView, ByteView }\n"],"names":[],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 2988, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2994, "column": 0}, "map": {"version":3,"file":"interface.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/block/interface.ts"],"sourcesContent":["import type { CID } from '../cid.js'\nimport type { Link, Version } from '../link/interface.js'\n\n/**\n * A byte-encoded representation of some type of `Data`.\n *\n * A `ByteView` is essentially a `Uint8Array` that's been \"tagged\" with\n * a `Data` type parameter indicating the type of encoded data.\n *\n * For example, a `ByteView<{ hello: \"world\" }>` is a `Uint8Array` containing a\n * binary representation of a `{hello: \"world\"}`.\n */\nexport interface ByteView<Data> extends Uint8Array, Phantom<Data> {}\n\n/**\n * Similar to ByteView but extends ArrayBuffer.\n */\nexport interface ArrayBufferView<Data> extends ArrayBuffer, Phantom<Data> {}\n\ndeclare const Marker: unique symbol\n\n/**\n * A utility type to retain an unused type parameter `T`.\n * Similar to [phantom type parameters in Rust](https://doc.rust-lang.org/rust-by-example/generics/phantom.html).\n *\n * Capturing unused type parameters allows us to define \"nominal types,\" which\n * TypeScript does not natively support. Nominal types in turn allow us to capture\n * semantics not represented in the actual type structure, without requiring us to define\n * new classes or pay additional runtime costs.\n *\n * For a concrete example, see {@link ByteView}, which extends the `Uint8Array` type to capture\n * type information about the structure of the data encoded into the array.\n */\nexport interface Phantom<T> {\n  // This field can not be represented because field name is non-existent\n  // unique symbol. But given that field is optional any object will valid\n  // type constraint.\n  [Marker]?: T\n}\n\n/**\n * Represents an IPLD block (including its CID) that can be decoded to data of\n * type `T`.\n *\n * @template T - Logical type of the data encoded in the block\n * @template C - multicodec code corresponding to codec used to encode the block\n * @template A - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template V - CID version\n */\nexport interface Block<\n  T = unknown,\n  C extends number = number,\n  A extends number = number,\n  V extends Version = 1\n> {\n  bytes: ByteView<T>\n  cid: Link<T, C, A, V>\n}\n\nexport type BlockCursorView<T = unknown> =\n  | { value: T, remaining?: undefined }\n  | { value: CID, remaining: string }\n\nexport interface BlockView<\n  T = unknown,\n  C extends number = number,\n  A extends number = number,\n  V extends Version = 1\n> extends Block<T, C, A, V> {\n  cid: CID<T, C, A, V>\n  value: T\n\n  links(): Iterable<[string, CID]>\n  tree(): Iterable<string>\n  get(path: string): BlockCursorView<unknown>\n}\n"],"names":[],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 2997, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3003, "column": 0}, "map": {"version":3,"file":"interface.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/interface.ts"],"sourcesContent":["export * from './bases/interface.js'\nexport * from './hashes/interface.js'\nexport * from './codecs/interface.js'\nexport * from './link/interface.js'\nexport * from './block/interface.js'\n"],"names":[],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 3010, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3029, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/index.ts"],"sourcesContent":["/**\n * @packageDocumentation\n *\n * This library defines common interfaces and low level building blocks for various interrelated multiformat technologies (multicodec, multihash, multibase, and CID). They can be used to implement custom base encoders / decoders / codecs, codec encoders /decoders and multihash hashers that comply to the interface that layers above assume.\n *\n * This library provides implementations for most basics and many others can be found in linked repositories.\n *\n * ```TypeScript\n * import { CID } from 'multiformats/cid'\n * import * as json from 'multiformats/codecs/json'\n * import { sha256 } from 'multiformats/hashes/sha2'\n *\n * const bytes = json.encode({ hello: 'world' })\n *\n * const hash = await sha256.digest(bytes)\n * const cid = CID.create(1, json.code, hash)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Creating Blocks\n *\n * ```TypeScript\n * import * as Block from 'multiformats/block'\n * import * as codec from '@ipld/dag-cbor'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * const value = { hello: 'world' }\n *\n * // encode a block\n * let block = await Block.encode({ value, codec, hasher })\n *\n * block.value // { hello: 'world' }\n * block.bytes // Uint8Array\n * block.cid   // CID() w/ sha2-256 hash address and dag-cbor codec\n *\n * // you can also decode blocks from their binary state\n * block = await Block.decode({ bytes: block.bytes, codec, hasher })\n *\n * // if you have the cid you can also verify the hash on decode\n * block = await Block.create({ bytes: block.bytes, cid: block.cid, codec, hasher })\n * ```\n *\n * ## Multibase Encoders / Decoders / Codecs\n *\n * CIDs can be serialized to string representation using multibase encoders that implement [`MultibaseEncoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides quite a few implementations that can be imported:\n *\n * ```TypeScript\n * import { base64 } from \"multiformats/bases/base64\"\n * cid.toString(base64.encoder)\n * //> 'mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA'\n * ```\n *\n * Parsing CID string serialized CIDs requires multibase decoder that implements [`MultibaseDecoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides a decoder for every encoder it provides:\n *\n * ```TypeScript\n * CID.parse('mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA', base64.decoder)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * Dual of multibase encoder & decoder is defined as multibase codec and it exposes\n * them as `encoder` and `decoder` properties. For added convenience codecs also\n * implement `MultibaseEncoder` and `MultibaseDecoder` interfaces so they could be\n * used as either or both:\n *\n * ```TypeScript\n * cid.toString(base64)\n * CID.parse(cid.toString(base64), base64)\n * ```\n *\n * **Note:** CID implementation comes bundled with `base32` and `base58btc`\n * multibase codecs so that CIDs can be base serialized to (version specific)\n * default base encoding and parsed without having to supply base encoders/decoders:\n *\n * ```TypeScript\n * const v1 = CID.parse('bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea')\n * v1.toString()\n * //> 'bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea'\n *\n * const v0 = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n * v0.toString()\n * //> 'QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n'\n * v0.toV1().toString()\n * //> 'bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku'\n * ```\n *\n * ## Multicodec Encoders / Decoders / Codecs\n *\n * This library defines [`BlockEncoder`, `BlockDecoder` and `BlockCodec` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts).\n * Codec implementations should conform to the `BlockCodec` interface which implements both `BlockEncoder` and `BlockDecoder`.\n * Here is an example implementation of JSON `BlockCodec`.\n *\n * ```TypeScript\n * export const { name, code, encode, decode } = {\n *   name: 'json',\n *   code: 0x0200,\n *   encode: json => new TextEncoder().encode(JSON.stringify(json)),\n *   decode: bytes => JSON.parse(new TextDecoder().decode(bytes))\n * }\n * ```\n *\n * ## Multihash Hashers\n *\n * This library defines [`MultihashHasher` and `MultihashDigest` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/hashes/interface.ts) and convinient function for implementing them:\n *\n * ```TypeScript\n * import * as hasher from 'multiformats/hashes/hasher'\n *\n * const sha256 = hasher.from({\n *   // As per multiformats table\n *   // https://github.com/multiformats/multicodec/blob/master/table.csv#L9\n *   name: 'sha2-256',\n *   code: 0x12,\n *\n *   encode: (input) => new Uint8Array(crypto.createHash('sha256').update(input).digest())\n * })\n *\n * const hash = await sha256.digest(json.encode({ hello: 'world' }))\n * CID.create(1, json.code, hash)\n *\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Traversal\n *\n * This library contains higher-order functions for traversing graphs of data easily.\n *\n * `walk()` walks through the links in each block of a DAG calling a user-supplied loader function for each one, in depth-first order with no duplicate block visits. The loader should return a `Block` object and can be used to inspect and collect block ordering for a full DAG walk. The loader should `throw` on error, and return `null` if a block should be skipped by `walk()`.\n *\n * ```TypeScript\n * import { walk } from 'multiformats/traversal'\n * import * as Block from 'multiformats/block'\n * import * as codec from 'multiformats/codecs/json'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * // build a DAG (a single block for this simple example)\n * const value = { hello: 'world' }\n * const block = await Block.encode({ value, codec, hasher })\n * const { cid } = block\n * console.log(cid)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n *\n * // create a loader function that also collects CIDs of blocks in\n * // their traversal order\n * const load = (cid, blocks) => async (cid) => {\n *   // fetch a block using its cid\n *   // e.g.: const block = await fetchBlockByCID(cid)\n *   blocks.push(cid)\n *   return block\n * }\n *\n * // collect blocks in this DAG starting from the root `cid`\n * const blocks = []\n * await walk({ cid, load: load(cid, blocks) })\n *\n * console.log(blocks)\n * //> [CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)]\n * ```\n *\n * ## Legacy interface\n *\n * [`blockcodec-to-ipld-format`](https://github.com/ipld/js-blockcodec-to-ipld-format) converts a multiformats [`BlockCodec`](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts#L21) into an\n * [`interface-ipld-format`](https://github.com/ipld/interface-ipld-format) for use with the [`ipld`](https://github.com/ipld/ipld) package. This can help bridge IPLD codecs implemented using the structure and interfaces defined here to existing code that assumes, or requires `interface-ipld-format`. This bridge also includes the relevant TypeScript definitions.\n *\n * ## Implementations\n *\n * By default, no base encodings (other than base32 & base58btc), hash functions,\n * or codec implementations are exposed by `multiformats`, you need to\n * import the ones you need yourself.\n *\n * ### Multibase codecs\n *\n * | bases                                                         | import                      | repo                                                                                              |\n * | ------------------------------------------------------------- | --------------------------- | ------------------------------------------------------------------------------------------------- |\n * | `base16`                                                      | `multiformats/bases/base16` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base32`, `base32pad`, `base32hex`, `base32hexpad`, `base32z` | `multiformats/bases/base32` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base64`, `base64pad`, `base64url`, `base64urlpad`            | `multiformats/bases/base64` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base58btc`, `base58flick4`                                   | `multiformats/bases/base58` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n *\n * Other (less useful) bases implemented in [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) include: `base2`, `base8`, `base10`, `base36` and `base256emoji`.\n *\n * ### Multihash hashers\n *\n * | hashes                                                                                                                          | import                         | repo                                                                                                               |\n * | ------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------ |\n * | `sha2-256`, `sha2-512`                                                                                                          | `multiformats/hashes/sha2`     | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes)             |\n * | `sha3-224`, `sha3-256`, `sha3-384`,`sha3-512`, `shake-128`, `shake-256`, `keccak-224`, `keccak-256`, `keccak-384`, `keccak-512` | `@multiformats/sha3`           | [multiformats/js-sha3](https://github.com/multiformats/js-sha3)                                                    |\n * | `identity`                                                                                                                      | `multiformats/hashes/identity` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes/identity.js) |\n * | `murmur3-128`, `murmur3-32`                                                                                                     | `@multiformats/murmur3`        | [multiformats/js-murmur3](https://github.com/multiformats/js-murmur3)                                              |\n * | `blake2b-*`, `blake2s-*`                                                                                                        | `@multiformats/blake2`         | [multiformats/js-blake2](https://github.com/multiformats/js-blake2)                                                |\n *\n * ### IPLD codecs (multicodec)\n *\n * | codec      | import                     | repo                                                                                                   |\n * | ---------- | -------------------------- | ------------------------------------------------------------------------------------------------------ |\n * | `raw`      | `multiformats/codecs/raw`  | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `json`     | `multiformats/codecs/json` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `dag-cbor` | `@ipld/dag-cbor`           | [ipld/js-dag-cbor](https://github.com/ipld/js-dag-cbor)                                                |\n * | `dag-json` | `@ipld/dag-json`           | [ipld/js-dag-json](https://github.com/ipld/js-dag-json)                                                |\n * | `dag-pb`   | `@ipld/dag-pb`             | [ipld/js-dag-pb](https://github.com/ipld/js-dag-pb)                                                    |\n * | `dag-jose` | `dag-jose`                 | [ceramicnetwork/js-dag-jose](https://github.com/ceramicnetwork/js-dag-jose)                            |\n */\n\nimport * as bytes from './bytes.js'\nimport { CID } from './cid.js'\nimport * as digest from './hashes/digest.js'\nimport * as hasher from './hashes/hasher.js'\nimport * as varint from './varint.js'\n\n// This way TS will also expose all the types from module\nexport * from './interface.js'\n\nexport { CID, hasher, digest, varint, bytes }\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwMG","ignoreList":[0]}},
    {"offset": {"line": 3238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3258, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/ipld/utils.js"],"sourcesContent":["var __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nimport { createNode, decode, encode } from '@ipld/dag-pb';\nimport { CID } from 'multiformats';\nexport const chunkBuffer = function (buffer_1, _a) {\n    return __asyncGenerator(this, arguments, function* (buffer, { maxChunkSize, ignoreLastChunk = false }) {\n        var _b, e_1, _c, _d;\n        let target = Buffer.alloc(0);\n        try {\n            for (var _e = true, buffer_2 = __asyncValues(buffer), buffer_2_1; buffer_2_1 = yield __await(buffer_2.next()), _b = buffer_2_1.done, !_b; _e = true) {\n                _d = buffer_2_1.value;\n                _e = false;\n                let chunk = _d;\n                target = Buffer.concat([target, chunk]);\n                while (target.length >= maxChunkSize) {\n                    yield yield __await(target.subarray(0, maxChunkSize));\n                    target = target.subarray(maxChunkSize);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_e && !_b && (_c = buffer_2.return)) yield __await(_c.call(buffer_2));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (target.length > 0 && !ignoreLastChunk) {\n            yield yield __await(target);\n        }\n    });\n};\nexport { CID, createNode, decode as decodeNode, encode as encodeNode };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3397, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/cid/index.js"],"sourcesContent":["import { blake3Hash } from '@webbuf/blake3';\nimport { WebBuf } from '@webbuf/webbuf';\nimport * as base32 from 'multiformats/bases/base32';\nimport { CID } from 'multiformats/cid';\nimport * as raw from 'multiformats/codecs/raw';\nimport { create } from 'multiformats/hashes/digest';\nimport { encodeNode } from '../ipld/utils.js';\nexport const BLAKE3_CODE = 0x1f;\nexport const cidOfNode = (node) => {\n    const encodedNode = WebBuf.from(encodeNode(node));\n    const hash = Buffer.from(blake3Hash(encodedNode).buf);\n    return cidFromBlakeHash(hash);\n};\nexport const cidToString = (cid) => {\n    return cid.toString(base32.base32);\n};\nexport const stringToCid = (str) => {\n    return CID.parse(str, base32.base32);\n};\nexport const cidFromBlakeHash = (hash) => {\n    return CID.create(1, raw.code, create(BLAKE3_CODE, hash));\n};\nexport const blake3HashFromCid = (cid) => cid.multihash.digest;\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAKA;AAHA;;;;;;;;AAIO,MAAM,cAAc;AACpB,MAAM,YAAY,CAAC;IACtB,MAAM,cAAc,sNAAA,CAAA,SAAM,CAAC,IAAI,CAAC,CAAA,GAAA,6QAAA,CAAA,aAAU,AAAD,EAAE;IAC3C,MAAM,OAAO,OAAO,IAAI,CAAC,CAAA,GAAA,wUAAA,CAAA,aAAU,AAAD,EAAE,aAAa,GAAG;IACpD,OAAO,iBAAiB;AAC5B;AACO,MAAM,cAAc,CAAC;IACxB,OAAO,IAAI,QAAQ,CAAC,2NAAO,MAAM;AACrC;AACO,MAAM,cAAc,CAAC;IACxB,OAAO,8NAAA,CAAA,MAAG,CAAC,KAAK,CAAC,KAAK,2NAAO,MAAM;AACvC;AACO,MAAM,mBAAmB,CAAC;IAC7B,OAAO,8NAAA,CAAA,MAAG,CAAC,MAAM,CAAC,GAAG,yNAAI,IAAI,EAAE,CAAA,GAAA,2NAAA,CAAA,SAAM,AAAD,EAAE,aAAa;AACvD;AACO,MAAM,oBAAoB,CAAC,MAAQ,IAAI,SAAS,CAAC,MAAM","ignoreList":[0]}},
    {"offset": {"line": 3438, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3444, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3452, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/metadata/offchain/file.js"],"sourcesContent":["import { cidToString } from '../../index.js';\nexport const fileMetadata = (headCID, chunks, totalSize, name, mimeType, uploadOptions = {\n    compression: undefined,\n    encryption: undefined,\n}) => {\n    return {\n        type: 'file',\n        dataCid: cidToString(headCID),\n        name: name !== null && name !== void 0 ? name : undefined,\n        mimeType: mimeType !== null && mimeType !== void 0 ? mimeType : undefined,\n        totalSize,\n        totalChunks: chunks.length,\n        chunks,\n        uploadOptions,\n    };\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM,eAAe,CAAC,SAAS,QAAQ,WAAW,MAAM,UAAU,gBAAgB;IACrF,aAAa;IACb,YAAY;AAChB,CAAC;IACG,OAAO;QACH,MAAM;QACN,SAAS,CAAA,GAAA,2PAAA,CAAA,cAAW,AAAD,EAAE;QACrB,MAAM,SAAS,QAAQ,SAAS,KAAK,IAAI,OAAO;QAChD,UAAU,aAAa,QAAQ,aAAa,KAAK,IAAI,WAAW;QAChE;QACA,aAAa,OAAO,MAAM;QAC1B;QACA;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3479, "column": 0}, "map": {"version":3,"file":"as-uint8array.node.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/uint8arrays%405.1.0/node_modules/uint8arrays/src/util/as-uint8array.node.ts"],"sourcesContent":["/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array (buf: Uint8Array): Uint8Array {\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n"],"names":[],"mappings":"AAAA;;;GAGG;;;AACG,SAAU,YAAY,CAAE,GAAe;IAC3C,OAAO,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,CAAA;AACnE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3488, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3494, "column": 0}, "map": {"version":3,"file":"alloc.node.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/uint8arrays%405.1.0/node_modules/uint8arrays/src/alloc.node.ts"],"sourcesContent":["import { Buffer } from 'node:buffer'\nimport { asUint8Array } from '#util/as-uint8array'\n\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc (size: number = 0): Uint8Array {\n  return asUint8Array(Buffer.alloc(size))\n}\n\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe (size: number = 0): Uint8Array {\n  return asUint8Array(Buffer.allocUnsafe(size))\n}\n"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAA;AACpC,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAA;;;AAM5C,SAAU,KAAK,CAAE,OAAe,CAAC;IACrC,oPAAO,eAAA,AAAY,wHAAC,SAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAA;AACzC,CAAC;AAOK,SAAU,WAAW,CAAE,OAAe,CAAC;IAC3C,oPAAO,eAAA,AAAY,wHAAC,SAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAA;AAC/C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3508, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3514, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/uint8-varint%402.0.4/node_modules/uint8-varint/src/index.ts"],"sourcesContent":["/* eslint-disable no-fallthrough */\nimport { allocUnsafe } from 'uint8arrays/alloc'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst N1 = Math.pow(2, 7)\nconst N2 = Math.pow(2, 14)\nconst N3 = Math.pow(2, 21)\nconst N4 = Math.pow(2, 28)\nconst N5 = Math.pow(2, 35)\nconst N6 = Math.pow(2, 42)\nconst N7 = Math.pow(2, 49)\n\n/** Most significant bit of a byte */\nconst MSB = 0x80\n/** Rest of the bits in a byte */\nconst REST = 0x7f\n\nexport function encodingLength (value: number): number {\n  if (value < N1) {\n    return 1\n  }\n\n  if (value < N2) {\n    return 2\n  }\n\n  if (value < N3) {\n    return 3\n  }\n\n  if (value < N4) {\n    return 4\n  }\n\n  if (value < N5) {\n    return 5\n  }\n\n  if (value < N6) {\n    return 6\n  }\n\n  if (value < N7) {\n    return 7\n  }\n\n  if (Number.MAX_SAFE_INTEGER != null && value > Number.MAX_SAFE_INTEGER) {\n    throw new RangeError('Could not encode varint')\n  }\n\n  return 8\n}\n\nexport function encodeUint8Array (value: number, buf: Uint8Array, offset: number = 0): Uint8Array {\n  switch (encodingLength(value)) {\n    case 8: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 7: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 6: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 5: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 4: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 3: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 2: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 1: {\n      buf[offset++] = (value & 0xFF)\n      value >>>= 7\n      break\n    }\n    default: throw new Error('unreachable')\n  }\n  return buf\n}\n\nexport function encodeUint8ArrayList (value: number, buf: Uint8ArrayList, offset: number = 0): Uint8ArrayList {\n  switch (encodingLength(value)) {\n    case 8: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 7: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 6: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 5: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 4: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 3: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 2: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 1: {\n      buf.set(offset++, (value & 0xFF))\n      value >>>= 7\n      break\n    }\n    default: throw new Error('unreachable')\n  }\n  return buf\n}\n\nexport function decodeUint8Array (buf: Uint8Array, offset: number): number {\n  let b = buf[offset]\n  let res = 0\n\n  res += b & REST\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 1]\n  res += (b & REST) << 7\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 2]\n  res += (b & REST) << 14\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 3]\n  res += (b & REST) << 21\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 4]\n  res += (b & REST) * N4\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 5]\n  res += (b & REST) * N5\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 6]\n  res += (b & REST) * N6\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 7]\n  res += (b & REST) * N7\n  if (b < MSB) {\n    return res\n  }\n\n  throw new RangeError('Could not decode varint')\n}\n\nexport function decodeUint8ArrayList (buf: Uint8ArrayList, offset: number): number {\n  let b = buf.get(offset)\n  let res = 0\n\n  res += b & REST\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 1)\n  res += (b & REST) << 7\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 2)\n  res += (b & REST) << 14\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 3)\n  res += (b & REST) << 21\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 4)\n  res += (b & REST) * N4\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 5)\n  res += (b & REST) * N5\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 6)\n  res += (b & REST) * N6\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 7)\n  res += (b & REST) * N7\n  if (b < MSB) {\n    return res\n  }\n\n  throw new RangeError('Could not decode varint')\n}\n\nexport function encode (value: number): Uint8Array\nexport function encode (value: number, buf: Uint8Array, offset?: number): Uint8Array\nexport function encode (value: number, buf: Uint8ArrayList, offset?: number): Uint8ArrayList\nexport function encode <T extends Uint8Array | Uint8ArrayList = Uint8Array> (value: number, buf?: T, offset: number = 0): T {\n  if (buf == null) {\n    buf = allocUnsafe(encodingLength(value)) as T\n  }\n  if (buf instanceof Uint8Array) {\n    return encodeUint8Array(value, buf, offset) as T\n  } else {\n    return encodeUint8ArrayList(value, buf, offset) as T\n  }\n}\n\nexport function decode (buf: Uint8ArrayList | Uint8Array, offset: number = 0): number {\n  if (buf instanceof Uint8Array) {\n    return decodeUint8Array(buf, offset)\n  } else {\n    return decodeUint8ArrayList(buf, offset)\n  }\n}\n"],"names":[],"mappings":"AAAA,iCAAA,EAAmC;;;;;;;;;AACnC,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAA;;AAG/C,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACzB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;AAC1B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;AAC1B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;AAC1B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;AAC1B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;AAC1B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;AAE1B,mCAAA,EAAqC,CACrC,MAAM,GAAG,GAAG,IAAI,CAAA;AAChB,+BAAA,EAAiC,CACjC,MAAM,IAAI,GAAG,IAAI,CAAA;AAEX,SAAU,cAAc,CAAE,KAAa;IAC3C,IAAI,KAAK,GAAG,EAAE,EAAE,CAAC;QACf,OAAO,CAAC,CAAA;IACV,CAAC;IAED,IAAI,KAAK,GAAG,EAAE,EAAE,CAAC;QACf,OAAO,CAAC,CAAA;IACV,CAAC;IAED,IAAI,KAAK,GAAG,EAAE,EAAE,CAAC;QACf,OAAO,CAAC,CAAA;IACV,CAAC;IAED,IAAI,KAAK,GAAG,EAAE,EAAE,CAAC;QACf,OAAO,CAAC,CAAA;IACV,CAAC;IAED,IAAI,KAAK,GAAG,EAAE,EAAE,CAAC;QACf,OAAO,CAAC,CAAA;IACV,CAAC;IAED,IAAI,KAAK,GAAG,EAAE,EAAE,CAAC;QACf,OAAO,CAAC,CAAA;IACV,CAAC;IAED,IAAI,KAAK,GAAG,EAAE,EAAE,CAAC;QACf,OAAO,CAAC,CAAA;IACV,CAAC;IAED,IAAI,MAAM,CAAC,gBAAgB,IAAI,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC;QACvE,MAAM,IAAI,UAAU,CAAC,yBAAyB,CAAC,CAAA;IACjD,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC;AAEK,SAAU,gBAAgB,CAAE,KAAa,EAAE,GAAe,EAAE,SAAiB,CAAC;IAClF,OAAQ,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC;QAC9B,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAA;gBACpC,KAAK,IAAI,GAAG,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAA;gBACpC,KAAK,IAAI,GAAG,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAA;gBACpC,KAAK,IAAI,GAAG,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAA;gBACpC,KAAK,IAAI,GAAG,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAA;gBACpC,KAAK,MAAM,CAAC,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAA;gBACpC,KAAK,MAAM,CAAC,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAA;gBACpC,KAAK,MAAM,CAAC,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,AAAC,KAAK,GAAG,IAAI,CAAC,CAAA;gBAC9B,KAAK,MAAM,CAAC,CAAA;gBACZ,MAAK;YACP,CAAC;QACD,OAAO,CAAC;YAAC,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;IACzC,CAAC;IACD,OAAO,GAAG,CAAA;AACZ,CAAC;AAEK,SAAU,oBAAoB,CAAE,KAAa,EAAE,GAAmB,EAAE,SAAiB,CAAC;IAC1F,OAAQ,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC;QAC9B,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAC,CAAA;gBACvC,KAAK,IAAI,GAAG,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAC,CAAA;gBACvC,KAAK,IAAI,GAAG,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAC,CAAA;gBACvC,KAAK,IAAI,GAAG,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAC,CAAA;gBACvC,KAAK,IAAI,GAAG,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAC,CAAA;gBACvC,KAAK,MAAM,CAAC,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAC,CAAA;gBACvC,KAAK,MAAM,CAAC,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,AAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,CAAC,CAAA;gBACvC,KAAK,MAAM,CAAC,CAAA;YACd,CAAC;QACD,KAAK,CAAC,CAAC;YAAC,CAAC;gBACP,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,AAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAA;gBACjC,KAAK,MAAM,CAAC,CAAA;gBACZ,MAAK;YACP,CAAC;QACD,OAAO,CAAC;YAAC,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;IACzC,CAAC;IACD,OAAO,GAAG,CAAA;AACZ,CAAC;AAEK,SAAU,gBAAgB,CAAE,GAAe,EAAE,MAAc;IAC/D,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAA;IACnB,IAAI,GAAG,GAAG,CAAC,CAAA;IAEX,GAAG,IAAI,CAAC,GAAG,IAAI,CAAA;IACf,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACnB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACnB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;IACvB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACnB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;IACvB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACnB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;IACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACnB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;IACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACnB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;IACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACnB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;IACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,MAAM,IAAI,UAAU,CAAC,yBAAyB,CAAC,CAAA;AACjD,CAAC;AAEK,SAAU,oBAAoB,CAAE,GAAmB,EAAE,MAAc;IACvE,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;IACvB,IAAI,GAAG,GAAG,CAAC,CAAA;IAEX,GAAG,IAAI,CAAC,GAAG,IAAI,CAAA;IACf,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACvB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACvB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;IACvB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACvB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;IACvB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACvB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;IACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACvB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;IACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACvB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;IACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACvB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;IACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,MAAM,IAAI,UAAU,CAAC,yBAAyB,CAAC,CAAA;AACjD,CAAC;AAKK,SAAU,MAAM,CAAuD,KAAa,EAAE,GAAO,EAAE,SAAiB,CAAC;IACrH,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAChB,GAAG,IAAG,uOAAA,AAAW,EAAC,cAAc,CAAC,KAAK,CAAC,CAAM,CAAA;IAC/C,CAAC;IACD,IAAI,GAAG,YAAY,UAAU,EAAE,CAAC;QAC9B,OAAO,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAM,CAAA;IAClD,CAAC,MAAM,CAAC;QACN,OAAO,oBAAoB,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAM,CAAA;IACtD,CAAC;AACH,CAAC;AAEK,SAAU,MAAM,CAAE,GAAgC,EAAE,SAAiB,CAAC;IAC1E,IAAI,GAAG,YAAY,UAAU,EAAE,CAAC;QAC9B,OAAO,gBAAgB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;IACtC,CAAC,MAAM,CAAC;QACN,OAAO,oBAAoB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;IAC1C,CAAC;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3762, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3768, "column": 0}, "map": {"version":3,"file":"float.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/protons-runtime%405.5.0/node_modules/protons-runtime/src/utils/float.ts"],"sourcesContent":["const f32 = new Float32Array([-0])\nconst f8b = new Uint8Array(f32.buffer)\n\n/**\n * Writes a 32 bit float to a buffer using little endian byte order\n */\nexport function writeFloatLE (val: number, buf: Uint8Array, pos: number): void {\n  f32[0] = val\n  buf[pos] = f8b[0]\n  buf[pos + 1] = f8b[1]\n  buf[pos + 2] = f8b[2]\n  buf[pos + 3] = f8b[3]\n}\n\n/**\n * Writes a 32 bit float to a buffer using big endian byte order\n */\nexport function writeFloatBE (val: number, buf: Uint8Array, pos: number): void {\n  f32[0] = val\n  buf[pos] = f8b[3]\n  buf[pos + 1] = f8b[2]\n  buf[pos + 2] = f8b[1]\n  buf[pos + 3] = f8b[0]\n}\n\n/**\n * Reads a 32 bit float from a buffer using little endian byte order\n */\nexport function readFloatLE (buf: Uint8Array, pos: number): number {\n  f8b[0] = buf[pos]\n  f8b[1] = buf[pos + 1]\n  f8b[2] = buf[pos + 2]\n  f8b[3] = buf[pos + 3]\n  return f32[0]\n}\n\n/**\n * Reads a 32 bit float from a buffer using big endian byte order\n */\nexport function readFloatBE (buf: Uint8Array, pos: number): number {\n  f8b[3] = buf[pos]\n  f8b[2] = buf[pos + 1]\n  f8b[1] = buf[pos + 2]\n  f8b[0] = buf[pos + 3]\n  return f32[0]\n}\n\nconst f64 = new Float64Array([-0])\nconst d8b = new Uint8Array(f64.buffer)\n\n/**\n * Writes a 64 bit double to a buffer using little endian byte order\n */\nexport function writeDoubleLE (val: number, buf: Uint8Array, pos: number): void {\n  f64[0] = val\n  buf[pos] = d8b[0]\n  buf[pos + 1] = d8b[1]\n  buf[pos + 2] = d8b[2]\n  buf[pos + 3] = d8b[3]\n  buf[pos + 4] = d8b[4]\n  buf[pos + 5] = d8b[5]\n  buf[pos + 6] = d8b[6]\n  buf[pos + 7] = d8b[7]\n}\n\n/**\n * Writes a 64 bit double to a buffer using big endian byte order\n */\nexport function writeDoubleBE (val: number, buf: Uint8Array, pos: number): void {\n  f64[0] = val\n  buf[pos] = d8b[7]\n  buf[pos + 1] = d8b[6]\n  buf[pos + 2] = d8b[5]\n  buf[pos + 3] = d8b[4]\n  buf[pos + 4] = d8b[3]\n  buf[pos + 5] = d8b[2]\n  buf[pos + 6] = d8b[1]\n  buf[pos + 7] = d8b[0]\n}\n\n/**\n * Reads a 64 bit double from a buffer using little endian byte order\n */\nexport function readDoubleLE (buf: Uint8Array, pos: number): number {\n  d8b[0] = buf[pos]\n  d8b[1] = buf[pos + 1]\n  d8b[2] = buf[pos + 2]\n  d8b[3] = buf[pos + 3]\n  d8b[4] = buf[pos + 4]\n  d8b[5] = buf[pos + 5]\n  d8b[6] = buf[pos + 6]\n  d8b[7] = buf[pos + 7]\n  return f64[0]\n}\n\n/**\n * Reads a 64 bit double from a buffer using big endian byte order\n */\nexport function readDoubleBE (buf: Uint8Array, pos: number): number {\n  d8b[7] = buf[pos]\n  d8b[6] = buf[pos + 1]\n  d8b[5] = buf[pos + 2]\n  d8b[4] = buf[pos + 3]\n  d8b[3] = buf[pos + 4]\n  d8b[2] = buf[pos + 5]\n  d8b[1] = buf[pos + 6]\n  d8b[0] = buf[pos + 7]\n  return f64[0]\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3858, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3864, "column": 0}, "map": {"version":3,"file":"longbits.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/protons-runtime%405.5.0/node_modules/protons-runtime/src/utils/longbits.ts"],"sourcesContent":["// the largest BigInt we can safely downcast to a Number\nconst MAX_SAFE_NUMBER_INTEGER = BigInt(Number.MAX_SAFE_INTEGER)\nconst MIN_SAFE_NUMBER_INTEGER = BigInt(Number.MIN_SAFE_INTEGER)\n\n/**\n * Constructs new long bits.\n *\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @function Object() { [native code] }\n * @param {number} lo - Low 32 bits, unsigned\n * @param {number} hi - High 32 bits, unsigned\n */\nexport class LongBits {\n  public lo: number\n  public hi: number\n\n  constructor (lo: number, hi: number) {\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits\n     */\n    this.lo = lo | 0\n\n    /**\n     * High bits\n     */\n    this.hi = hi | 0\n  }\n\n  /**\n   * Converts this long bits to a possibly unsafe JavaScript number\n   */\n  toNumber (unsigned: boolean = false): number {\n    if (!unsigned && (this.hi >>> 31) > 0) {\n      const lo = ~this.lo + 1 >>> 0\n      let hi = ~this.hi >>> 0\n      if (lo === 0) {\n        hi = hi + 1 >>> 0\n      }\n      return -(lo + hi * 4294967296)\n    }\n    return this.lo + this.hi * 4294967296\n  }\n\n  /**\n   * Converts this long bits to a bigint\n   */\n  toBigInt (unsigned: boolean = false): bigint {\n    if (unsigned) {\n      return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n)\n    }\n\n    if ((this.hi >>> 31) !== 0) {\n      const lo = ~this.lo + 1 >>> 0\n      let hi = ~this.hi >>> 0\n      if (lo === 0) {\n        hi = hi + 1 >>> 0\n      }\n      return -(BigInt(lo) + (BigInt(hi) << 32n))\n    }\n\n    return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n)\n  }\n\n  /**\n   * Converts this long bits to a string\n   */\n  toString (unsigned: boolean = false): string {\n    return this.toBigInt(unsigned).toString()\n  }\n\n  /**\n   * Zig-zag encodes this long bits\n   */\n  zzEncode (): this {\n    const mask = this.hi >> 31\n    this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0\n    this.lo = (this.lo << 1 ^ mask) >>> 0\n    return this\n  }\n\n  /**\n   * Zig-zag decodes this long bits\n   */\n  zzDecode (): this {\n    const mask = -(this.lo & 1)\n    this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0\n    this.hi = (this.hi >>> 1 ^ mask) >>> 0\n    return this\n  }\n\n  /**\n   * Calculates the length of this longbits when encoded as a varint.\n   */\n  length (): number {\n    const part0 = this.lo\n    const part1 = (this.lo >>> 28 | this.hi << 4) >>> 0\n    const part2 = this.hi >>> 24\n    return part2 === 0\n      ? part1 === 0\n        ? part0 < 16384\n          ? part0 < 128 ? 1 : 2\n          : part0 < 2097152 ? 3 : 4\n        : part1 < 16384\n          ? part1 < 128 ? 5 : 6\n          : part1 < 2097152 ? 7 : 8\n      : part2 < 128 ? 9 : 10\n  }\n\n  /**\n   * Constructs new long bits from the specified number\n   */\n  static fromBigInt (value: bigint): LongBits {\n    if (value === 0n) {\n      return zero\n    }\n\n    if (value < MAX_SAFE_NUMBER_INTEGER && value > MIN_SAFE_NUMBER_INTEGER) {\n      return this.fromNumber(Number(value))\n    }\n\n    const negative = value < 0n\n\n    if (negative) {\n      value = -value\n    }\n\n    let hi = value >> 32n\n    let lo = value - (hi << 32n)\n\n    if (negative) {\n      hi = ~hi | 0n\n      lo = ~lo | 0n\n\n      if (++lo > TWO_32) {\n        lo = 0n\n        if (++hi > TWO_32) { hi = 0n }\n      }\n    }\n\n    return new LongBits(Number(lo), Number(hi))\n  }\n\n  /**\n   * Constructs new long bits from the specified number\n   */\n  static fromNumber (value: number): LongBits {\n    if (value === 0) { return zero }\n    const sign = value < 0\n    if (sign) { value = -value }\n    let lo = value >>> 0\n    let hi = (value - lo) / 4294967296 >>> 0\n    if (sign) {\n      hi = ~hi >>> 0\n      lo = ~lo >>> 0\n      if (++lo > 4294967295) {\n        lo = 0\n        if (++hi > 4294967295) { hi = 0 }\n      }\n    }\n    return new LongBits(lo, hi)\n  }\n\n  /**\n   * Constructs new long bits from a number, long or string\n   */\n  static from (value: bigint | number | string | { low: number, high: number }): LongBits {\n    if (typeof value === 'number') {\n      return LongBits.fromNumber(value)\n    }\n    if (typeof value === 'bigint') {\n      return LongBits.fromBigInt(value)\n    }\n    if (typeof value === 'string') {\n      return LongBits.fromBigInt(BigInt(value))\n    }\n    return value.low != null || value.high != null ? new LongBits(value.low >>> 0, value.high >>> 0) : zero\n  }\n}\n\nconst zero = new LongBits(0, 0)\nzero.toBigInt = function () { return 0n }\nzero.zzEncode = zero.zzDecode = function () { return this }\nzero.length = function () { return 1 }\n\nconst TWO_32 = 4294967296n\n"],"names":[],"mappings":"AAAA,wDAAwD;;;;AACxD,MAAM,uBAAuB,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAA;AAC/D,MAAM,uBAAuB,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAA;AAWzD,MAAO,QAAQ;IACZ,EAAE,CAAQ;IACV,EAAE,CAAQ;IAEjB,YAAa,EAAU,EAAE,EAAU,CAAA;QACjC,4FAA4F;QAC5F,0FAA0F;QAE1F;;WAEG,CACH,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;QAEhB;;WAEG,CACH,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;IAClB,CAAC;IAED;;OAEG,CACH,QAAQ,CAAE,WAAoB,KAAK,EAAA;QACjC,IAAI,CAAC,QAAQ,IAAI,AAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC;YACtC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAA;YAC7B,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAA;YACvB,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC;gBACb,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAA;YACnB,CAAC;YACD,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,UAAU,CAAC,CAAA;QAChC,CAAC;QACD,OAAO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,UAAU,CAAA;IACvC,CAAC;IAED;;OAEG,CACH,QAAQ,CAAE,WAAoB,KAAK,EAAA;QACjC,IAAI,QAAQ,EAAE,CAAC;YACb,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,CAAA;QAC/D,CAAC;QAED,IAAI,AAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,IAAK,CAAC,EAAE,CAAC;YAC3B,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAA;YAC7B,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAA;YACvB,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC;gBACb,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAA;YACnB,CAAC;YACD,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,CAAA;QAC5C,CAAC;QAED,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,CAAA;IAC/D,CAAC;IAED;;OAEG,CACH,QAAQ,CAAE,WAAoB,KAAK,EAAA;QACjC,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAA;IAC3C,CAAC;IAED;;OAEG,CACH,QAAQ,GAAA;QACN,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,CAAA;QAC1B,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAA;QACxD,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAA;QACrC,OAAO,IAAI,CAAA;IACb,CAAC;IAED;;OAEG,CACH,QAAQ,GAAA;QACN,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA;QAC3B,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAA;QACxD,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAA;QACtC,OAAO,IAAI,CAAA;IACb,CAAC;IAED;;OAEG,CACH,MAAM,GAAA;QACJ,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAA;QACrB,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,CAAA;QACnD,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,KAAK,EAAE,CAAA;QAC5B,OAAO,KAAK,KAAK,CAAC,GACd,KAAK,KAAK,CAAC,GACT,KAAK,GAAG,KAAK,GACX,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GACnB,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GACzB,KAAK,GAAG,KAAK,GACX,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GACnB,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAC3B,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;IAC1B,CAAC;IAED;;OAEG,CACH,MAAM,CAAC,UAAU,CAAE,KAAa,EAAA;QAC9B,IAAI,KAAK,KAAK,EAAE,EAAE,CAAC;YACjB,OAAO,IAAI,CAAA;QACb,CAAC;QAED,IAAI,KAAK,GAAG,uBAAuB,IAAI,KAAK,GAAG,uBAAuB,EAAE,CAAC;YACvE,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;QACvC,CAAC;QAED,MAAM,QAAQ,GAAG,KAAK,GAAG,EAAE,CAAA;QAE3B,IAAI,QAAQ,EAAE,CAAC;YACb,KAAK,GAAG,CAAC,KAAK,CAAA;QAChB,CAAC;QAED,IAAI,EAAE,GAAG,KAAK,IAAI,GAAG,CAAA;QACrB,IAAI,EAAE,GAAG,KAAK,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAA;QAE5B,IAAI,QAAQ,EAAE,CAAC;YACb,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAA;YACb,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAA;YAEb,IAAI,EAAE,EAAE,GAAG,MAAM,EAAE,CAAC;gBAClB,EAAE,GAAG,EAAE,CAAA;gBACP,IAAI,EAAE,EAAE,GAAG,MAAM,EAAE,CAAC;oBAAC,EAAE,GAAG,EAAE,CAAA;gBAAC,CAAC;YAChC,CAAC;QACH,CAAC;QAED,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAA;IAC7C,CAAC;IAED;;OAEG,CACH,MAAM,CAAC,UAAU,CAAE,KAAa,EAAA;QAC9B,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;YAAC,OAAO,IAAI,CAAA;QAAC,CAAC;QAChC,MAAM,IAAI,GAAG,KAAK,GAAG,CAAC,CAAA;QACtB,IAAI,IAAI,EAAE,CAAC;YAAC,KAAK,GAAG,CAAC,KAAK,CAAA;QAAC,CAAC;QAC5B,IAAI,EAAE,GAAG,KAAK,KAAK,CAAC,CAAA;QACpB,IAAI,EAAE,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,UAAU,KAAK,CAAC,CAAA;QACxC,IAAI,IAAI,EAAE,CAAC;YACT,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAA;YACd,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAA;YACd,IAAI,EAAE,EAAE,GAAG,UAAU,EAAE,CAAC;gBACtB,EAAE,GAAG,CAAC,CAAA;gBACN,IAAI,EAAE,EAAE,GAAG,UAAU,EAAE,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAA;gBAAC,CAAC;YACnC,CAAC;QACH,CAAC;QACD,OAAO,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;IAC7B,CAAC;IAED;;OAEG,CACH,MAAM,CAAC,IAAI,CAAE,KAA+D,EAAA;QAC1E,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,OAAO,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;QACnC,CAAC;QACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,OAAO,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;QACnC,CAAC;QACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,OAAO,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;QAC3C,CAAC;QACD,OAAO,KAAK,CAAC,GAAG,IAAI,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;IACzG,CAAC;CACF;AAED,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AAC/B,IAAI,CAAC,QAAQ,GAAG;IAAc,OAAO,EAAE,CAAA;AAAC,CAAC,CAAA;AACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG;IAAc,OAAO,IAAI,CAAA;AAAC,CAAC,CAAA;AAC3D,IAAI,CAAC,MAAM,GAAG;IAAc,OAAO,CAAC,CAAA;AAAC,CAAC,CAAA;AAEtC,MAAM,MAAM,GAAG,WAAW,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4018, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4024, "column": 0}, "map": {"version":3,"file":"utf8.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/protons-runtime%405.5.0/node_modules/protons-runtime/src/utils/utf8.ts"],"sourcesContent":["/**\n * Calculates the UTF8 byte length of a string\n */\nexport function length (string: string): number {\n  let len = 0\n  let c = 0\n  for (let i = 0; i < string.length; ++i) {\n    c = string.charCodeAt(i)\n\n    if (c < 128) {\n      len += 1\n    } else if (c < 2048) {\n      len += 2\n    } else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n      ++i\n      len += 4\n    } else {\n      len += 3\n    }\n  }\n\n  return len\n}\n\n/**\n * Reads UTF8 bytes as a string\n */\nexport function read (buffer: Uint8Array, start: number, end: number): string {\n  const len = end - start\n\n  if (len < 1) {\n    return ''\n  }\n\n  let parts: string[] | undefined\n  const chunk: number[] = []\n  let i = 0 // char offset\n  let t: number // temporary\n\n  while (start < end) {\n    t = buffer[start++]\n\n    if (t < 128) {\n      chunk[i++] = t\n    } else if (t > 191 && t < 224) {\n      chunk[i++] = (t & 31) << 6 | buffer[start++] & 63\n    } else if (t > 239 && t < 365) {\n      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000\n      chunk[i++] = 0xD800 + (t >> 10)\n      chunk[i++] = 0xDC00 + (t & 1023)\n    } else {\n      chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63\n    }\n\n    if (i > 8191) {\n      (parts ?? (parts = [])).push(String.fromCharCode.apply(String, chunk))\n      i = 0\n    }\n  }\n\n  if (parts != null) {\n    if (i > 0) {\n      parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)))\n    }\n\n    return parts.join('')\n  }\n\n  return String.fromCharCode.apply(String, chunk.slice(0, i))\n}\n\n/**\n * Writes a string as UTF8 bytes\n */\nexport function write (string: string, buffer: Uint8Array, offset: number): number {\n  const start = offset\n  let c1 // character 1\n  let c2 // character 2\n\n  for (let i = 0; i < string.length; ++i) {\n    c1 = string.charCodeAt(i)\n\n    if (c1 < 128) {\n      buffer[offset++] = c1\n    } else if (c1 < 2048) {\n      buffer[offset++] = c1 >> 6 | 192\n      buffer[offset++] = c1 & 63 | 128\n    } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n      c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF)\n      ++i\n      buffer[offset++] = c1 >> 18 | 240\n      buffer[offset++] = c1 >> 12 & 63 | 128\n      buffer[offset++] = c1 >> 6 & 63 | 128\n      buffer[offset++] = c1 & 63 | 128\n    } else {\n      buffer[offset++] = c1 >> 12 | 224\n      buffer[offset++] = c1 >> 6 & 63 | 128\n      buffer[offset++] = c1 & 63 | 128\n    }\n  }\n\n  return offset - start\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4116, "column": 0}, "map": {"version":3,"file":"reader.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/protons-runtime%405.5.0/node_modules/protons-runtime/src/utils/reader.ts"],"sourcesContent":["import { decodeUint8Array, encodingLength } from 'uint8-varint'\nimport { readFloatLE, readDoubleLE } from './float.js'\nimport { LongBits } from './longbits.js'\nimport * as utf8 from './utf8.js'\nimport type { Reader } from '../index.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\n/* istanbul ignore next */\nfunction indexOutOfRange (reader: Reader, writeLength?: number): RangeError {\n  return RangeError(`index out of range: ${reader.pos} + ${writeLength ?? 1} > ${reader.len}`)\n}\n\nfunction readFixed32End (buf: Uint8Array, end: number): number { // note that this uses `end`, not `pos`\n  return (buf[end - 4] |\n        buf[end - 3] << 8 |\n        buf[end - 2] << 16 |\n        buf[end - 1] << 24) >>> 0\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n */\nexport class Uint8ArrayReader implements Reader {\n  public buf: Uint8Array\n  public pos: number\n  public len: number\n\n  public _slice = Uint8Array.prototype.subarray\n\n  constructor (buffer: Uint8Array) {\n    /**\n     * Read buffer\n     */\n    this.buf = buffer\n\n    /**\n     * Read buffer position\n     */\n    this.pos = 0\n\n    /**\n     * Read buffer length\n     */\n    this.len = buffer.length\n  }\n\n  /**\n   * Reads a varint as an unsigned 32 bit value\n   */\n  uint32 (): number {\n    let value = 4294967295\n\n    value = (this.buf[this.pos] & 127) >>> 0; if (this.buf[this.pos++] < 128) return value\n    value = (value | (this.buf[this.pos] & 127) << 7) >>> 0; if (this.buf[this.pos++] < 128) return value\n    value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value\n    value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value\n    value = (value | (this.buf[this.pos] & 15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value\n\n    if ((this.pos += 5) > this.len) {\n      this.pos = this.len\n      throw indexOutOfRange(this, 10)\n    }\n\n    return value\n  }\n\n  /**\n   * Reads a varint as a signed 32 bit value\n   */\n  int32 (): number {\n    return this.uint32() | 0\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 32 bit value\n   */\n  sint32 (): number {\n    const value = this.uint32()\n    return value >>> 1 ^ -(value & 1) | 0\n  }\n\n  /**\n   * Reads a varint as a boolean\n   */\n  bool (): boolean {\n    return this.uint32() !== 0\n  }\n\n  /**\n   * Reads fixed 32 bits as an unsigned 32 bit integer\n   */\n  fixed32 (): number {\n    if (this.pos + 4 > this.len) { throw indexOutOfRange(this, 4) }\n\n    const res = readFixed32End(this.buf, this.pos += 4)\n\n    return res\n  }\n\n  /**\n   * Reads fixed 32 bits as a signed 32 bit integer\n   */\n  sfixed32 (): number {\n    if (this.pos + 4 > this.len) {\n      throw indexOutOfRange(this, 4)\n    }\n\n    const res = readFixed32End(this.buf, this.pos += 4) | 0\n\n    return res\n  }\n\n  /**\n   * Reads a float (32 bit) as a number\n   */\n  float (): number {\n    if (this.pos + 4 > this.len) {\n      throw indexOutOfRange(this, 4)\n    }\n\n    const value = readFloatLE(this.buf, this.pos)\n    this.pos += 4\n    return value\n  }\n\n  /**\n   * Reads a double (64 bit float) as a number\n   */\n  double (): number {\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len) { throw indexOutOfRange(this, 4) }\n\n    const value = readDoubleLE(this.buf, this.pos)\n    this.pos += 8\n    return value\n  }\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint\n   */\n  bytes (): Uint8Array {\n    const length = this.uint32()\n    const start = this.pos\n    const end = this.pos + length\n\n    /* istanbul ignore if */\n    if (end > this.len) {\n      throw indexOutOfRange(this, length)\n    }\n\n    this.pos += length\n\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n      ? new Uint8Array(0)\n      : this.buf.subarray(start, end)\n  }\n\n  /**\n   * Reads a string preceded by its byte length as a varint\n   */\n  string (): string {\n    const bytes = this.bytes()\n    return utf8.read(bytes, 0, bytes.length)\n  }\n\n  /**\n   * Skips the specified number of bytes if specified, otherwise skips a varint\n   */\n  skip (length?: number): this {\n    if (typeof length === 'number') {\n      /* istanbul ignore if */\n      if (this.pos + length > this.len) { throw indexOutOfRange(this, length) }\n      this.pos += length\n    } else {\n      do {\n        /* istanbul ignore if */\n        if (this.pos >= this.len) {\n          throw indexOutOfRange(this)\n        }\n      } while ((this.buf[this.pos++] & 128) !== 0)\n    }\n    return this\n  }\n\n  /**\n   * Skips the next element of the specified wire type\n   */\n  skipType (wireType: number): this {\n    switch (wireType) {\n      case 0:\n        this.skip()\n        break\n      case 1:\n        this.skip(8)\n        break\n      case 2:\n        this.skip(this.uint32())\n        break\n      case 3:\n        while ((wireType = this.uint32() & 7) !== 4) {\n          this.skipType(wireType)\n        }\n        break\n      case 5:\n        this.skip(4)\n        break\n\n        /* istanbul ignore next */\n      default:\n        throw Error(`invalid wire type ${wireType} at offset ${this.pos}`)\n    }\n    return this\n  }\n\n  private readLongVarint (): LongBits {\n    // tends to deopt with local vars for octet etc.\n    const bits = new LongBits(0, 0)\n    let i = 0\n    if (this.len - this.pos > 4) { // fast route (lo)\n      for (; i < 4; ++i) {\n        // 1st..4th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n      // 5th\n      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0\n      bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0\n      if (this.buf[this.pos++] < 128) { return bits }\n      i = 0\n    } else {\n      for (; i < 3; ++i) {\n        /* istanbul ignore if */\n        if (this.pos >= this.len) { throw indexOutOfRange(this) }\n        // 1st..3th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n      // 4th\n      bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0\n      return bits\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n      for (; i < 5; ++i) {\n        // 6th..10th\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n    } else {\n      for (; i < 5; ++i) {\n        if (this.pos >= this.len) {\n          throw indexOutOfRange(this)\n        }\n\n        // 6th..10th\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n    }\n\n    throw Error('invalid varint encoding')\n  }\n\n  private readFixed64 (): LongBits {\n    if (this.pos + 8 > this.len) {\n      throw indexOutOfRange(this, 8)\n    }\n\n    const lo = readFixed32End(this.buf, this.pos += 4)\n    const hi = readFixed32End(this.buf, this.pos += 4)\n\n    return new LongBits(lo, hi)\n  }\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64 (): bigint {\n    return this.readLongVarint().toBigInt()\n  }\n\n  /**\n   * Reads a varint as a signed 64 bit value returned as a possibly unsafe\n   * JavaScript number\n   */\n  int64Number (): number {\n    return this.readLongVarint().toNumber()\n  }\n\n  /**\n   * Reads a varint as a signed 64 bit value returned as a string\n   */\n  int64String (): string {\n    return this.readLongVarint().toString()\n  }\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64 (): bigint {\n    return this.readLongVarint().toBigInt(true)\n  }\n\n  /**\n   * Reads a varint as an unsigned 64 bit value returned as a possibly unsafe\n   * JavaScript number\n   */\n  uint64Number (): number {\n    const value = decodeUint8Array(this.buf, this.pos)\n    this.pos += encodingLength(value)\n    return value\n  }\n\n  /**\n   * Reads a varint as an unsigned 64 bit value returned as a string\n   */\n  uint64String (): string {\n    return this.readLongVarint().toString(true)\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64 (): bigint {\n    return this.readLongVarint().zzDecode().toBigInt()\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value returned as a\n   * possibly unsafe JavaScript number\n   */\n  sint64Number (): number {\n    return this.readLongVarint().zzDecode().toNumber()\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value returned as a\n   * string\n   */\n  sint64String (): string {\n    return this.readLongVarint().zzDecode().toString()\n  }\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64 (): bigint {\n    return this.readFixed64().toBigInt()\n  }\n\n  /**\n   * Reads fixed 64 bits returned as a possibly unsafe JavaScript number\n   */\n  fixed64Number (): number {\n    return this.readFixed64().toNumber()\n  }\n\n  /**\n   * Reads fixed 64 bits returned as a string\n   */\n  fixed64String (): string {\n    return this.readFixed64().toString()\n  }\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64 (): bigint {\n    return this.readFixed64().toBigInt()\n  }\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits returned as a possibly unsafe\n   * JavaScript number\n   */\n  sfixed64Number (): number {\n    return this.readFixed64().toNumber()\n  }\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits returned as a string\n   */\n  sfixed64String (): string {\n    return this.readFixed64().toString()\n  }\n}\n\nexport function createReader (buf: Uint8Array | Uint8ArrayList): Reader {\n  return new Uint8ArrayReader(buf instanceof Uint8Array ? buf : buf.subarray())\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4442, "column": 0}, "map": {"version":3,"file":"decode.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/protons-runtime%405.5.0/node_modules/protons-runtime/src/decode.ts"],"sourcesContent":["import { createReader } from './utils/reader.js'\nimport type { Codec, DecodeOptions } from './codec.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport function decodeMessage <T> (buf: Uint8Array | Uint8ArrayList, codec: Pick<Codec<T>, 'decode'>, opts?: DecodeOptions<T>): T {\n  const reader = createReader(buf)\n\n  return codec.decode(reader, undefined, opts)\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;;AAI1C,SAAU,aAAa,CAAM,GAAgC,EAAE,KAA+B,EAAE,IAAuB;IAC3H,MAAM,MAAM,6OAAG,eAAA,AAAY,EAAC,GAAG,CAAC,CAAA;IAEhC,OAAO,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;AAC9C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4451, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4457, "column": 0}, "map": {"version":3,"file":"base10.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bases/base10.ts"],"sourcesContent":["import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,WAAW,CAAA;;AAE1B,MAAM,MAAM,gOAAG,QAAA,AAAK,EAAC;IAC1B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,QAAQ;IACd,QAAQ,EAAE,YAAY;CACvB,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4473, "column": 0}, "map": {"version":3,"file":"base16.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bases/base16.ts"],"sourcesContent":["import { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;;AAE5B,MAAM,MAAM,gOAAG,UAAA,AAAO,EAAC;IAC5B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,QAAQ;IACd,QAAQ,EAAE,kBAAkB;IAC5B,WAAW,EAAE,CAAC;CACf,CAAC,CAAA;AAEK,MAAM,WAAW,gOAAG,UAAA,AAAO,EAAC;IACjC,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,aAAa;IACnB,QAAQ,EAAE,kBAAkB;IAC5B,WAAW,EAAE,CAAC;CACf,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4497, "column": 0}, "map": {"version":3,"file":"base2.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bases/base2.ts"],"sourcesContent":["import { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;;AAE5B,MAAM,KAAK,gOAAG,UAAA,AAAO,EAAC;IAC3B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,OAAO;IACb,QAAQ,EAAE,IAAI;IACd,WAAW,EAAE,CAAC;CACf,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4508, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4514, "column": 0}, "map": {"version":3,"file":"base256emoji.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bases/base256emoji.ts"],"sourcesContent":["import { from } from './base.js'\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars: string[] = (alphabet.reduce<string[]>((p, c, i) => { p[i] = c; return p }, ([])))\nconst alphabetCharsToBytes: number[] = (alphabet.reduce<number[]>((p, c, i) => {\n  const codePoint = c.codePointAt(0)\n  if (codePoint == null) {\n    throw new Error(`Invalid character: ${c}`)\n  }\n  p[codePoint] = i\n  return p\n}, ([])))\n\nfunction encode (data: Uint8Array): string {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\nfunction decode (str: string): Uint8Array {\n  const byts = []\n  for (const char of str) {\n    const codePoint = char.codePointAt(0)\n    if (codePoint == null) {\n      throw new Error(`Invalid character: ${char}`)\n    }\n    const byt = alphabetCharsToBytes[codePoint]\n    if (byt == null) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAA;;AAEhC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,weAAwe,CAAC,CAAA;AACrgB,MAAM,oBAAoB,GAAa,AAAC,QAAQ,CAAC,MAAM,CAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAAC,OAAO,CAAC,CAAA;AAAC,CAAC,EAAE,AAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AAC7G,MAAM,oBAAoB,GAAa,AAAC,QAAQ,CAAC,MAAM,CAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5E,MAAM,SAAS,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;IAClC,IAAI,SAAS,IAAI,IAAI,EAAE,CAAC;QACtB,MAAM,IAAI,KAAK,CAAC,CAAA,mBAAA,EAAsB,CAAC,EAAE,CAAC,CAAA;IAC5C,CAAC;IACD,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA;IAChB,OAAO,CAAC,CAAA;AACV,CAAC,EAAE,AAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AAET,SAAS,MAAM,CAAE,IAAgB;IAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QAC1B,CAAC,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;QAC5B,OAAO,CAAC,CAAA;IACV,CAAC,EAAE,EAAE,CAAC,CAAA;AACR,CAAC;AAED,SAAS,MAAM,CAAE,GAAW;IAC1B,MAAM,IAAI,GAAG,EAAE,CAAA;IACf,KAAK,MAAM,IAAI,IAAI,GAAG,CAAE,CAAC;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;QACrC,IAAI,SAAS,IAAI,IAAI,EAAE,CAAC;YACtB,MAAM,IAAI,KAAK,CAAC,CAAA,mBAAA,EAAsB,IAAI,EAAE,CAAC,CAAA;QAC/C,CAAC;QACD,MAAM,GAAG,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAA;QAC3C,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,CAAA,4BAAA,EAA+B,IAAI,EAAE,CAAC,CAAA;QACxD,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAChB,CAAC;IACD,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,CAAA;AAC7B,CAAC;AAEM,MAAM,YAAY,gOAAG,OAAA,AAAI,EAAC;IAC/B,MAAM,EAAE,IAAI;IACZ,IAAI,EAAE,cAAc;IACpB,MAAM;IACN,MAAM;CACP,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4559, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4565, "column": 0}, "map": {"version":3,"file":"base64.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bases/base64.ts"],"sourcesContent":["import { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;;AAE5B,MAAM,MAAM,gOAAG,UAAA,AAAO,EAAC;IAC5B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,QAAQ;IACd,QAAQ,EAAE,kEAAkE;IAC5E,WAAW,EAAE,CAAC;CACf,CAAC,CAAA;AAEK,MAAM,SAAS,GAAG,uOAAA,AAAO,EAAC;IAC/B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,WAAW;IACjB,QAAQ,EAAE,mEAAmE;IAC7E,WAAW,EAAE,CAAC;CACf,CAAC,CAAA;AAEK,MAAM,SAAS,GAAG,uOAAA,AAAO,EAAC;IAC/B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,WAAW;IACjB,QAAQ,EAAE,kEAAkE;IAC5E,WAAW,EAAE,CAAC;CACf,CAAC,CAAA;AAEK,MAAM,YAAY,gOAAG,UAAA,AAAO,EAAC;IAClC,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,cAAc;IACpB,QAAQ,EAAE,mEAAmE;IAC7E,WAAW,EAAE,CAAC;CACf,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4603, "column": 0}, "map": {"version":3,"file":"base8.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bases/base8.ts"],"sourcesContent":["import { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;;AAE5B,MAAM,KAAK,gOAAG,UAAA,AAAO,EAAC;IAC3B,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,OAAO;IACb,QAAQ,EAAE,UAAU;IACpB,WAAW,EAAE,CAAC;CACf,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4614, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4620, "column": 0}, "map": {"version":3,"file":"identity.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/bases/identity.ts"],"sourcesContent":["import { fromString, toString } from '../bytes.js'\nimport { from } from './base.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAA;AAClD,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAA;;;AAEzB,MAAM,QAAQ,gOAAG,OAAA,AAAI,EAAC;IAC3B,MAAM,EAAE,MAAM;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,oNAAC,WAAA,AAAQ,EAAC,GAAG,CAAC;IAC9B,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,oNAAC,aAAA,AAAU,EAAC,GAAG,CAAC;CACjC,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4633, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4639, "column": 0}, "map": {"version":3,"file":"json.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/codecs/json.ts"],"sourcesContent":["import type { ArrayBufferView, ByteView } from './interface.js'\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\nexport function encode <T> (node: T): ByteView<T> {\n  return textEncoder.encode(JSON.stringify(node))\n}\n\nexport function decode <T> (data: ByteView<T> | ArrayBufferView<T>): T {\n  return JSON.parse(textDecoder.decode(data))\n}\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAA;AACrC,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAA;AAE9B,MAAM,IAAI,GAAG,MAAM,CAAA;AACnB,MAAM,IAAI,GAAG,MAAM,CAAA;AAEpB,SAAU,MAAM,CAAM,IAAO;IACjC,OAAO,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA;AACjD,CAAC;AAEK,SAAU,MAAM,CAAM,IAAsC;IAChE,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAA;AAC7C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4655, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4661, "column": 0}, "map": {"version":3,"file":"identity.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/hashes/identity.ts"],"sourcesContent":["import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code: 0x0 = 0x0\nconst name = 'identity'\n\nconst encode: (input: Uint8Array) => Uint8Array = coerce\n\nfunction digest (input: Uint8Array): Digest.Digest<typeof code, number> {\n  return Digest.create(code, encode(input))\n}\n\nexport const identity = { code, name, encode, digest }\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAA;AACpC,OAAO,KAAK,MAAM,MAAM,aAAa,CAAA;;;AAErC,MAAM,IAAI,GAAQ,GAAG,CAAA;AACrB,MAAM,IAAI,GAAG,UAAU,CAAA;AAEvB,MAAM,MAAM,oNAAsC,SAAM,CAAA;AAExD,SAAS,MAAM,CAAE,KAAiB;IAChC,OAAO,MAAM,sNAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;AAC3C,CAAC;AAEM,MAAM,QAAQ,GAAG;IAAE,IAAI;IAAE,IAAI;IAAE,MAAM;IAAE,MAAM;AAAA,CAAE,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4686, "column": 0}, "map": {"version":3,"file":"sha2.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/hashes/sha2.ts"],"sourcesContent":["import crypto from 'crypto'\nimport { coerce } from '../bytes.js'\nimport { from } from './hasher.js'\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: (input) => coerce(crypto.createHash('sha256').update(input).digest())\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: input => coerce(crypto.createHash('sha512').update(input).digest())\n})\n"],"names":[],"mappings":";;;;AAAA,OAAO,MAAM,MAAM,QAAQ,CAAA;AAC3B,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAA;AACpC,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAA;;;;AAE3B,MAAM,MAAM,mOAAG,OAAA,AAAI,EAAC;IACzB,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,IAAI;IACV,MAAM,EAAE,CAAC,KAAK,EAAE,CAAG,CAAD,6NAAC,AAAM,wGAAC,UAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;CAC9E,CAAC,CAAA;AAEK,MAAM,MAAM,mOAAG,OAAA,AAAI,EAAC;IACzB,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,IAAI;IACV,MAAM,GAAE,KAAK,CAAC,EAAE,qNAAC,SAAA,AAAM,wGAAC,UAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;CAC5E,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4706, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4712, "column": 0}, "map": {"version":3,"file":"basics.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/multiformats%4013.3.2/node_modules/multiformats/src/basics.ts"],"sourcesContent":["import * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base2 from './bases/base2.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base8 from './bases/base8.js'\nimport * as identityBase from './bases/identity.js'\nimport * as json from './codecs/json.js'\nimport * as raw from './codecs/raw.js'\nimport * as identity from './hashes/identity.js'\nimport * as sha2 from './hashes/sha2.js'\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nexport const bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nexport const hashes = { ...sha2, ...identity }\nexport const codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes }\n"],"names":[],"mappings":";;;;;AASA,OAAO,KAAK,YAAY,MAAM,qBAAqB,CAAA;AAPnD,OAAO,KAAK,KAAK,MAAM,kBAAkB,CAAA;AAMzC,OAAO,KAAK,KAAK,MAAM,kBAAkB,CAAA;AARzC,OAAO,KAAK,MAAM,MAAM,mBAAmB,CAAA;AAC3C,OAAO,KAAK,MAAM,MAAM,mBAAmB,CAAA;AAG3C,OAAO,KAAK,MAAM,MAAM,mBAAmB,CAAA;AAC3C,OAAO,KAAK,MAAM,MAAM,mBAAmB,CAAA;AAC3C,OAAO,KAAK,MAAM,MAAM,mBAAmB,CAAA;AAC3C,OAAO,KAAK,MAAM,MAAM,mBAAmB,CAAA;AAJ3C,OAAO,KAAK,YAAY,MAAM,yBAAyB,CAAA;AAUvD,OAAO,KAAK,IAAI,MAAM,kBAAkB,CAAA;AADxC,OAAO,KAAK,QAAQ,MAAM,sBAAsB,CAAA;AADhD,OAAO,KAAK,GAAG,MAAM,iBAAiB,CAAA;AADtC,OAAO,KAAK,IAAI,MAAM,kBAAkB,CAAA;;;;;;;;;;;;;;;;AAMjC,MAAM,KAAK,GAAG;IAAE,GAAG,4NAAY;IAAE,GAAG,yNAAK;IAAE,GAAG,yNAAK;IAAE,GAAG,0NAAM;IAAE,GAAG,0NAAM;IAAE,GAAG,0NAAM;IAAE,GAAG,0NAAM;IAAE,GAAG,0NAAM;IAAE,GAAG,0NAAM;IAAE,GAAG,gOAAY;AAAA,CAAE,CAAA;AACxI,MAAM,MAAM,GAAG;IAAE,GAAG,yNAAI;IAAE,GAAG,6NAAQ;AAAA,CAAE,CAAA;AACvC,MAAM,MAAM,GAAG;SAAE,GAAG;UAAE,IAAI;AAAA,CAAE,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4797, "column": 0}, "map": {"version":3,"file":"bases.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/uint8arrays%405.1.0/node_modules/uint8arrays/src/util/bases.ts"],"sourcesContent":["import { bases } from 'multiformats/basics'\nimport type { MultibaseCodec } from 'multiformats'\nimport { allocUnsafe } from '#alloc'\n\nfunction createCodec (name: string, prefix: string, encode: (buf: Uint8Array) => string, decode: (str: string) => Uint8Array): MultibaseCodec<any> {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: {\n      decode\n    }\n  }\n}\n\nconst string = createCodec('utf8', 'u', (buf) => {\n  const decoder = new TextDecoder('utf8')\n  return 'u' + decoder.decode(buf)\n}, (str) => {\n  const encoder = new TextEncoder()\n  return encoder.encode(str.substring(1))\n})\n\nconst ascii = createCodec('ascii', 'a', (buf) => {\n  let string = 'a'\n\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i])\n  }\n  return string\n}, (str) => {\n  str = str.substring(1)\n  const buf = allocUnsafe(str.length)\n\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i)\n  }\n\n  return buf\n})\n\nexport type SupportedEncodings = 'utf8' | 'utf-8' | 'hex' | 'latin1' | 'ascii' | 'binary' | keyof typeof bases\n\nconst BASES: Record<SupportedEncodings, MultibaseCodec<any>> = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii,\n  binary: ascii,\n\n  ...bases\n}\n\nexport default BASES\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAA;AAE3C,OAAO,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAA;;;;AAEpC,SAAS,WAAW,CAAE,IAAY,EAAE,MAAc,EAAE,MAAmC,EAAE,MAAmC;IAC1H,OAAO;QACL,IAAI;QACJ,MAAM;QACN,OAAO,EAAE;YACP,IAAI;YACJ,MAAM;YACN,MAAM;SACP;QACD,OAAO,EAAE;YACP,MAAM;SACP;KACF,CAAA;AACH,CAAC;AAED,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE;IAC9C,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAA;IACvC,OAAO,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;AAClC,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;IACT,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAA;IACjC,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;AACzC,CAAC,CAAC,CAAA;AAEF,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE;IAC9C,IAAI,MAAM,GAAG,GAAG,CAAA;IAEhB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE,CAAC;QACpC,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;IACvC,CAAC;IACD,OAAO,MAAM,CAAA;AACf,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;IACT,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;IACtB,MAAM,GAAG,6NAAG,cAAA,AAAW,EAAC,GAAG,CAAC,MAAM,CAAC,CAAA;IAEnC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE,CAAC;QACpC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;IAC5B,CAAC;IAED,OAAO,GAAG,CAAA;AACZ,CAAC,CAAC,CAAA;AAIF,MAAM,KAAK,GAAoD;IAC7D,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,MAAM;IACf,GAAG,EAAE,0OAAK,CAAC,MAAM;IACjB,MAAM,EAAE,KAAK;IACb,KAAK;IACL,MAAM,EAAE,KAAK;IAEb,qOAAG,QAAK;CACT,CAAA;uCAEc,KAAK,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4851, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4857, "column": 0}, "map": {"version":3,"file":"from-string.node.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/uint8arrays%405.1.0/node_modules/uint8arrays/src/from-string.node.ts"],"sourcesContent":["import { Buffer } from 'node:buffer'\nimport bases, { type SupportedEncodings } from './util/bases.js'\nimport { asUint8Array } from '#util/as-uint8array'\n\nexport type { SupportedEncodings }\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString (string: string, encoding: SupportedEncodings = 'utf8'): Uint8Array {\n  const base = bases[encoding]\n\n  if (base == null) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return asUint8Array(Buffer.from(string, 'utf-8'))\n  }\n\n  // add multibase prefix\n  return base.decoder.decode(`${base.prefix}${string}`) // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAA;AACpC,OAAO,KAAK,EAAE,EAA2B,MAAM,iBAAiB,CAAA;AAChE,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAA;;;;AAW5C,SAAU,UAAU,CAAE,MAAc,EAAE,WAA+B,MAAM;IAC/E,MAAM,IAAI,yNAAG,UAAK,CAAC,QAAQ,CAAC,CAAA;IAE5B,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;QACjB,MAAM,IAAI,KAAK,CAAC,CAAA,sBAAA,EAAyB,QAAQ,CAAA,CAAA,CAAG,CAAC,CAAA;IACvD,CAAC;IAED,IAAI,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,OAAO,EAAE,CAAC;QAChD,QAAO,2PAAA,AAAY,wHAAC,SAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAA;IACnD,CAAC;IAED,uBAAuB;IACvB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE,CAAC,CAAA,CAAC,uEAAuE;AAC/H,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4877, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4883, "column": 0}, "map": {"version":3,"file":"pool.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/protons-runtime%405.5.0/node_modules/protons-runtime/src/utils/pool.ts"],"sourcesContent":["import { allocUnsafe } from 'uint8arrays/alloc'\n\n/**\n * A general purpose buffer pool\n */\nexport default function pool (size?: number): (size: number) => Uint8Array {\n  const SIZE = size ?? 8192\n  const MAX = SIZE >>> 1\n  let slab: Uint8Array\n  let offset = SIZE\n  return function poolAlloc (size: number) {\n    if (size < 1 || size > MAX) {\n      return allocUnsafe(size)\n    }\n\n    if (offset + size > SIZE) {\n      slab = allocUnsafe(SIZE)\n      offset = 0\n    }\n\n    const buf = slab.subarray(offset, offset += size)\n\n    if ((offset & 7) !== 0) {\n      // align to 32 bit\n      offset = (offset | 7) + 1\n    }\n\n    return buf\n  }\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAA;;AAKjC,SAAU,IAAI,CAAE,IAAa;IACzC,MAAM,IAAI,GAAG,IAAI,IAAI,IAAI,CAAA;IACzB,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,CAAA;IACtB,IAAI,IAAgB,CAAA;IACpB,IAAI,MAAM,GAAG,IAAI,CAAA;IACjB,OAAO,SAAS,SAAS,CAAE,IAAY;QACrC,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC;YAC3B,iOAAO,cAAA,AAAW,EAAC,IAAI,CAAC,CAAA;QAC1B,CAAC;QAED,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC;YACzB,IAAI,GAAG,wOAAA,AAAW,EAAC,IAAI,CAAC,CAAA;YACxB,MAAM,GAAG,CAAC,CAAA;QACZ,CAAC;QAED,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,IAAI,IAAI,CAAC,CAAA;QAEjD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;YACvB,kBAAkB;YAClB,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;QAC3B,CAAC;QAED,OAAO,GAAG,CAAA;IACZ,CAAC,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4909, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4915, "column": 0}, "map": {"version":3,"file":"writer.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/protons-runtime%405.5.0/node_modules/protons-runtime/src/utils/writer.ts"],"sourcesContent":["import { encodeUint8Array, encodingLength } from 'uint8-varint'\nimport { allocUnsafe } from 'uint8arrays/alloc'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { writeFloatLE, writeDoubleLE } from './float.js'\nimport { LongBits } from './longbits.js'\nimport pool from './pool.js'\nimport * as utf8 from './utf8.js'\nimport type { Writer } from '../index.js'\n\ninterface WriterOperation<T> {\n  (val: T, buf: Uint8Array, pos: number): any\n}\n\n/**\n * Constructs a new writer operation instance.\n *\n * @classdesc Scheduled writer operation\n */\nclass Op<T> {\n  /**\n   * Function to call\n   */\n  public fn: WriterOperation<T>\n\n  /**\n   * Value byte length\n   */\n  public len: number\n\n  /**\n   * Next operation\n   */\n  public next?: Op<any>\n\n  /**\n   * Value to write\n   */\n  public val: T\n\n  constructor (fn: WriterOperation<T>, len: number, val: T) {\n    this.fn = fn\n    this.len = len\n    this.next = undefined\n    this.val = val // type varies\n  }\n}\n\n/* istanbul ignore next */\nfunction noop (): void {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance\n */\nclass State {\n  /**\n   * Current head\n   */\n  public head: Op<any>\n\n  /**\n   * Current tail\n   */\n  public tail: Op<any>\n\n  /**\n   * Current buffer length\n   */\n  public len: number\n\n  /**\n   * Next state\n   */\n  public next?: State\n\n  constructor (writer: Uint8ArrayWriter) {\n    this.head = writer.head\n    this.tail = writer.tail\n    this.len = writer.len\n    this.next = writer.states\n  }\n}\n\nconst bufferPool = pool()\n\n/**\n * Allocates a buffer of the specified size\n */\nfunction alloc (size: number): Uint8Array {\n  if (globalThis.Buffer != null) {\n    return allocUnsafe(size)\n  }\n\n  return bufferPool(size)\n}\n\n/**\n * When a value is written, the writer calculates its byte length and puts it into a linked\n * list of operations to perform when finish() is called. This both allows us to allocate\n * buffers of the exact required size and reduces the amount of work we have to do compared\n * to first calculating over objects and then encoding over objects. In our case, the encoding\n * part is just a linked list walk calling operations with already prepared values.\n */\nclass Uint8ArrayWriter implements Writer {\n  /**\n   * Current length\n   */\n  public len: number\n\n  /**\n   * Operations head\n   */\n  public head: Op<any>\n\n  /**\n   * Operations tail\n   */\n  public tail: Op<any>\n\n  /**\n   * Linked forked states\n   */\n  public states?: any\n\n  constructor () {\n    this.len = 0\n    this.head = new Op(noop, 0, 0)\n    this.tail = this.head\n    this.states = null\n  }\n\n  /**\n   * Pushes a new operation to the queue\n   */\n  _push (fn: WriterOperation<any>, len: number, val: any): this {\n    this.tail = this.tail.next = new Op(fn, len, val)\n    this.len += len\n\n    return this\n  }\n\n  /**\n   * Writes an unsigned 32 bit value as a varint\n   */\n  uint32 (value: number): this {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n      (value = value >>> 0) <\n                128\n        ? 1\n        : value < 16384\n          ? 2\n          : value < 2097152\n            ? 3\n            : value < 268435456\n              ? 4\n              : 5,\n      value)).len\n    return this\n  }\n\n  /**\n   * Writes a signed 32 bit value as a varint`\n   */\n  int32 (value: number): this {\n    return value < 0\n      ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n      : this.uint32(value)\n  }\n\n  /**\n   * Writes a 32 bit value as a varint, zig-zag encoded\n   */\n  sint32 (value: number): this {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64 (value: bigint): this {\n    const bits = LongBits.fromBigInt(value)\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64Number (value: number): this {\n    return this._push(encodeUint8Array, encodingLength(value), value)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64String (value: string): this {\n    return this.uint64(BigInt(value))\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64 (value: bigint): this {\n    return this.uint64(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64Number (value: number): this {\n    return this.uint64Number(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64String (value: string): this {\n    return this.uint64String(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64 (value: bigint): this {\n    const bits = LongBits.fromBigInt(value).zzEncode()\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64Number (value: number): this {\n    const bits = LongBits.fromNumber(value).zzEncode()\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64String (value: string): this {\n    return this.sint64(BigInt(value))\n  }\n\n  /**\n   * Writes a boolish value as a varint\n   */\n  bool (value: boolean): this {\n    return this._push(writeByte, 1, value ? 1 : 0)\n  }\n\n  /**\n   * Writes an unsigned 32 bit value as fixed 32 bits\n   */\n  fixed32 (value: number): this {\n    return this._push(writeFixed32, 4, value >>> 0)\n  }\n\n  /**\n   * Writes a signed 32 bit value as fixed 32 bits\n   */\n  sfixed32 (value: number): this {\n    return this.fixed32(value)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64 (value: bigint): this {\n    const bits = LongBits.fromBigInt(value)\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64Number (value: number): this {\n    const bits = LongBits.fromNumber(value)\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64String (value: string): this {\n    return this.fixed64(BigInt(value))\n  }\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64 (value: bigint): this {\n    return this.fixed64(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64Number (value: number): this {\n    return this.fixed64Number(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64String (value: string): this {\n    return this.fixed64String(value)\n  }\n\n  /**\n   * Writes a float (32 bit)\n   */\n  float (value: number): this {\n    return this._push(writeFloatLE, 4, value)\n  }\n\n  /**\n   * Writes a double (64 bit float).\n   *\n   * @function\n   * @param {number} value - Value to write\n   * @returns {Writer} `this`\n   */\n  double (value: number): this {\n    return this._push(writeDoubleLE, 8, value)\n  }\n\n  /**\n   * Writes a sequence of bytes\n   */\n  bytes (value: Uint8Array): this {\n    const len = value.length >>> 0\n\n    if (len === 0) {\n      return this._push(writeByte, 1, 0)\n    }\n\n    return this.uint32(len)._push(writeBytes, len, value)\n  }\n\n  /**\n   * Writes a string\n   */\n  string (value: string): this {\n    const len = utf8.length(value)\n    return len !== 0\n      ? this.uint32(len)._push(utf8.write, len, value)\n      : this._push(writeByte, 1, 0)\n  }\n\n  /**\n   * Forks this writer's state by pushing it to a stack.\n   * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n   */\n  fork (): this {\n    this.states = new State(this)\n    this.head = this.tail = new Op(noop, 0, 0)\n    this.len = 0\n    return this\n  }\n\n  /**\n   * Resets this instance to the last state\n   */\n  reset (): this {\n    if (this.states != null) {\n      this.head = this.states.head\n      this.tail = this.states.tail\n      this.len = this.states.len\n      this.states = this.states.next\n    } else {\n      this.head = this.tail = new Op(noop, 0, 0)\n      this.len = 0\n    }\n    return this\n  }\n\n  /**\n   * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n   */\n  ldelim (): this {\n    const head = this.head\n    const tail = this.tail\n    const len = this.len\n    this.reset().uint32(len)\n    if (len !== 0) {\n      this.tail.next = head.next // skip noop\n      this.tail = tail\n      this.len += len\n    }\n    return this\n  }\n\n  /**\n   * Finishes the write operation\n   */\n  finish (): Uint8Array {\n    let head = this.head.next // skip noop\n    const buf = alloc(this.len)\n    let pos = 0\n    while (head != null) {\n      head.fn(head.val, buf, pos)\n      pos += head.len\n      head = head.next\n    }\n    // this.head = this.tail = null;\n    return buf\n  }\n}\n\nfunction writeByte (val: number, buf: Uint8Array, pos: number): void {\n  buf[pos] = val & 255\n}\n\nfunction writeVarint32 (val: number, buf: Uint8Array, pos: number): void {\n  while (val > 127) {\n    buf[pos++] = val & 127 | 128\n    val >>>= 7\n  }\n  buf[pos] = val\n}\n\n/**\n * Constructs a new varint writer operation instance.\n *\n * @classdesc Scheduled varint writer operation\n */\nclass VarintOp extends Op<number> {\n  public next?: Op<any>\n\n  constructor (len: number, val: number) {\n    super(writeVarint32, len, val)\n    this.next = undefined\n  }\n}\n\nfunction writeVarint64 (val: LongBits, buf: Uint8Array, pos: number): void {\n  while (val.hi !== 0) {\n    buf[pos++] = val.lo & 127 | 128\n    val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0\n    val.hi >>>= 7\n  }\n  while (val.lo > 127) {\n    buf[pos++] = val.lo & 127 | 128\n    val.lo = val.lo >>> 7\n  }\n  buf[pos++] = val.lo\n}\n\nfunction writeFixed32 (val: number, buf: Uint8Array, pos: number): void {\n  buf[pos] = val & 255\n  buf[pos + 1] = val >>> 8 & 255\n  buf[pos + 2] = val >>> 16 & 255\n  buf[pos + 3] = val >>> 24\n}\n\nfunction writeBytes (val: Uint8Array, buf: Uint8Array, pos: number): void {\n  buf.set(val, pos)\n}\n\nif (globalThis.Buffer != null) {\n  Uint8ArrayWriter.prototype.bytes = function (value: Uint8Array) {\n    const len = value.length >>> 0\n\n    this.uint32(len)\n\n    if (len > 0) {\n      this._push(writeBytesBuffer, len, value)\n    }\n\n    return this\n  }\n\n  Uint8ArrayWriter.prototype.string = function (value: string) {\n    const len = globalThis.Buffer.byteLength(value)\n\n    this.uint32(len)\n\n    if (len > 0) {\n      this._push(writeStringBuffer, len, value)\n    }\n\n    return this\n  }\n}\n\nfunction writeBytesBuffer (val: Uint8Array, buf: Uint8Array, pos: number): void {\n  buf.set(val, pos) // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n  // also works for plain array values\n}\n\nfunction writeStringBuffer (val: string, buf: Uint8Array, pos: number): void {\n  if (val.length < 40) {\n    // plain js is faster for short strings (probably due to redundant assertions)\n    utf8.write(val, buf, pos)\n    // @ts-expect-error buf isn't a Uint8Array?\n  } else if (buf.utf8Write != null) {\n    // @ts-expect-error buf isn't a Uint8Array?\n    buf.utf8Write(val, pos)\n  } else {\n    buf.set(uint8ArrayFromString(val), pos)\n  }\n}\n\n/**\n * Creates a new writer\n */\nexport function createWriter (): Writer {\n  return new Uint8ArrayWriter()\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5300, "column": 0}, "map": {"version":3,"file":"encode.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/protons-runtime%405.5.0/node_modules/protons-runtime/src/encode.ts"],"sourcesContent":["import { createWriter } from './utils/writer.js'\nimport type { Codec } from './codec.js'\n\nexport function encodeMessage <T> (message: Partial<T>, codec: Pick<Codec<T>, 'encode'>): Uint8Array {\n  const w = createWriter()\n\n  codec.encode(message, w, {\n    lengthDelimited: false\n  })\n\n  return w.finish()\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;;AAG1C,SAAU,aAAa,CAAM,OAAmB,EAAE,KAA+B;IACrF,MAAM,CAAC,6OAAG,eAAA,AAAY,EAAE,CAAA;IAExB,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE;QACvB,eAAe,EAAE,KAAK;KACvB,CAAC,CAAA;IAEF,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;AACnB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5312, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5318, "column": 0}, "map": {"version":3,"file":"codec.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/protons-runtime%405.5.0/node_modules/protons-runtime/src/codec.ts"],"sourcesContent":["import type { Writer, Reader } from './index.js'\n\n// https://developers.google.com/protocol-buffers/docs/encoding#structure\nexport enum CODEC_TYPES {\n  VARINT = 0,\n  BIT64,\n  LENGTH_DELIMITED,\n  START_GROUP,\n  END_GROUP,\n  BIT32\n}\n\nexport interface EncodeOptions {\n  lengthDelimited?: boolean\n  writeDefaults?: boolean\n}\n\nexport interface EncodeFunction<T> {\n  (value: Partial<T>, writer: Writer, opts?: EncodeOptions): void\n}\n\n// protobuf types that contain multiple values\ntype CollectionTypes = any[] | Map<any, any>\n\n// protobuf types that are not collections or messages\ntype PrimitiveTypes = boolean | number | string | bigint | Uint8Array\n\n// recursive array/map field length limits\ntype CollectionLimits <T> = {\n  [K in keyof T]: T[K] extends CollectionTypes ? number :\n    T[K] extends PrimitiveTypes ? never : Limits<T[K]>\n}\n\n// recursive array member array/map field length limits\ntype ArrayElementLimits <T> = {\n  [K in keyof T as `${string & K}$`]: T[K] extends Array<infer ElementType> ?\n      (ElementType extends PrimitiveTypes ? never : Limits<ElementType>) :\n      (T[K] extends PrimitiveTypes ? never : Limits<T[K]>)\n}\n\n// recursive map value array/map field length limits\ntype MapValueLimits <T> = {\n  [K in keyof T as `${string & K}$value`]: T[K] extends Map<any, infer MapValueType> ?\n      (MapValueType extends PrimitiveTypes ? never : Limits<MapValueType>) :\n      (T[K] extends PrimitiveTypes ? never : Limits<T[K]>)\n}\n\n// union of collection and array elements\ntype Limits<T> = Partial<CollectionLimits<T> & ArrayElementLimits<T> & MapValueLimits<T>>\n\nexport interface DecodeOptions<T> {\n  /**\n   * Runtime-specified limits for lengths of repeated/map fields\n   */\n  limits?: Limits<T>\n}\n\nexport interface DecodeFunction<T> {\n  (reader: Reader, length?: number, opts?: DecodeOptions<T>): T\n}\n\nexport interface Codec<T> {\n  name: string\n  type: CODEC_TYPES\n  encode: EncodeFunction<T>\n  decode: DecodeFunction<T>\n}\n\nexport function createCodec <T> (name: string, type: CODEC_TYPES, encode: EncodeFunction<T>, decode: DecodeFunction<T>): Codec<T> {\n  return {\n    name,\n    type,\n    encode,\n    decode\n  }\n}\n"],"names":[],"mappings":"AAEA,yEAAyE;;;;;AACzE,IAAY,WAOX;AAPD,CAAA,SAAY,WAAW;IACrB,WAAA,CAAA,WAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,WAAA,CAAA,WAAA,CAAA,QAAA,GAAA,EAAA,GAAA,OAAK,CAAA;IACL,WAAA,CAAA,WAAA,CAAA,mBAAA,GAAA,EAAA,GAAA,kBAAgB,CAAA;IAChB,WAAA,CAAA,WAAA,CAAA,cAAA,GAAA,EAAA,GAAA,aAAW,CAAA;IACX,WAAA,CAAA,WAAA,CAAA,YAAA,GAAA,EAAA,GAAA,WAAS,CAAA;IACT,WAAA,CAAA,WAAA,CAAA,QAAA,GAAA,EAAA,GAAA,OAAK,CAAA;AACP,CAAC,EAPW,WAAW,IAAA,CAAX,WAAW,GAAA,CAAA,CAAA,GAOtB;AA0DK,SAAU,WAAW,CAAM,IAAY,EAAE,IAAiB,EAAE,MAAyB,EAAE,MAAyB;IACpH,OAAO;QACL,IAAI;QACJ,IAAI;QACJ,MAAM;QACN,MAAM;KACP,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5340, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5346, "column": 0}, "map": {"version":3,"file":"enum.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/protons-runtime%405.5.0/node_modules/protons-runtime/src/codecs/enum.ts"],"sourcesContent":["import { createCodec, CODEC_TYPES } from '../codec.js'\nimport type { DecodeFunction, EncodeFunction, Codec } from '../codec.js'\n\nexport function enumeration <T> (v: any): Codec<T> {\n  function findValue (val: string | number): number {\n    // Use the reverse mapping to look up the enum key for the stored value\n    // https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings\n    if (v[val.toString()] == null) {\n      throw new Error('Invalid enum value')\n    }\n\n    return v[val]\n  }\n\n  const encode: EncodeFunction<number | string> = function enumEncode (val, writer) {\n    const enumValue = findValue(val)\n\n    writer.int32(enumValue)\n  }\n\n  const decode: DecodeFunction<number | string> = function enumDecode (reader) {\n    const val = reader.int32()\n\n    return findValue(val)\n  }\n\n  // @ts-expect-error yeah yeah\n  return createCodec('enum', CODEC_TYPES.VARINT, encode, decode)\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,aAAa,CAAA;;AAGhD,SAAU,WAAW,CAAM,CAAM;IACrC,SAAS,SAAS,CAAE,GAAoB;QACtC,uEAAuE;QACvE,2EAA2E;QAC3E,IAAI,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;YAC9B,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAA;QACvC,CAAC;QAED,OAAO,CAAC,CAAC,GAAG,CAAC,CAAA;IACf,CAAC;IAED,MAAM,MAAM,GAAoC,SAAS,UAAU,CAAE,GAAG,EAAE,MAAM;QAC9E,MAAM,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,CAAA;QAEhC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;IACzB,CAAC,CAAA;IAED,MAAM,MAAM,GAAoC,SAAS,UAAU,CAAE,MAAM;QACzE,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,EAAE,CAAA;QAE1B,OAAO,SAAS,CAAC,GAAG,CAAC,CAAA;IACvB,CAAC,CAAA;IAED,6BAA6B;IAC7B,uOAAO,cAAA,AAAW,EAAC,MAAM,8NAAE,cAAW,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;AAChE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5377, "column": 0}, "map": {"version":3,"file":"message.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/protons-runtime%405.5.0/node_modules/protons-runtime/src/codecs/message.ts"],"sourcesContent":["import { createCodec, CODEC_TYPES, type EncodeFunction, type DecodeFunction, type Codec } from '../codec.js'\n\nexport interface Factory<A, T> {\n  new (obj: A): T\n}\n\nexport function message <T> (encode: EncodeFunction<T>, decode: DecodeFunction<T>): Codec<T> {\n  return createCodec('message', CODEC_TYPES.LENGTH_DELIMITED, encode, decode)\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,WAAW,EAAE,WAAW,EAAwD,MAAM,aAAa,CAAA;;AAMtG,SAAU,OAAO,CAAM,MAAyB,EAAE,MAAyB;IAC/E,uOAAO,cAAA,AAAW,EAAC,SAAS,8NAAE,cAAW,CAAC,gBAAgB,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;AAC7E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5391, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/protons-runtime%405.5.0/node_modules/protons-runtime/src/index.ts"],"sourcesContent":["/**\n * @packageDocumentation\n *\n * This module contains serialization/deserialization code used when encoding/decoding protobufs.\n *\n * It should be declared as a dependency of your project:\n *\n * ```console\n * npm i protons-runtime\n * ```\n */\n\nimport type { Codec } from './codec.js'\n\nexport interface FieldDef {\n  name: string\n  codec: Codec<any>\n  optional?: true\n  repeats?: true\n  packed?: true\n}\n\nexport {\n  decodeMessage\n} from './decode.js'\n\nexport {\n  encodeMessage\n} from './encode.js'\n\nexport { enumeration } from './codecs/enum.js'\nexport { message } from './codecs/message.js'\nexport { createReader as reader } from './utils/reader.js'\nexport { createWriter as writer } from './utils/writer.js'\nexport type { Codec, EncodeOptions, DecodeOptions } from './codec.js'\n\nexport interface Writer {\n  /**\n   * Current length\n   */\n  len: number\n\n  /**\n   * Writes an unsigned 32 bit value as a varint\n   */\n  uint32(value: number): this\n\n  /**\n   * Writes a signed 32 bit value as a varint`\n   */\n  int32(value: number): this\n\n  /**\n   * Writes a 32 bit value as a varint, zig-zag encoded\n   */\n  sint32(value: number): this\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64(value: bigint): this\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64Number(value: number): this\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64String(value: string): this\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64(value: bigint): this\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64Number(value: number): this\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64String(value: string): this\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64(value: bigint): this\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64Number(value: number): this\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64String(value: string): this\n\n  /**\n   * Writes a boolish value as a varint\n   */\n  bool(value: boolean): this\n\n  /**\n   * Writes an unsigned 32 bit value as fixed 32 bits\n   */\n  fixed32(value: number): this\n\n  /**\n   * Writes a signed 32 bit value as fixed 32 bits\n   */\n  sfixed32(value: number): this\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64(value: bigint): this\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64Number(value: number): this\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64String(value: string): this\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64(value: bigint): this\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64Number(value: number): this\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64String(value: string): this\n\n  /**\n   * Writes a float (32 bit)\n   */\n  float(value: number): this\n\n  /**\n   * Writes a double (64 bit float)\n   */\n  double(value: number): this\n\n  /**\n   * Writes a sequence of bytes\n   */\n  bytes(value: Uint8Array): this\n\n  /**\n   * Writes a string\n   */\n  string(value: string): this\n\n  /**\n   * Forks this writer's state by pushing it to a stack.\n   * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n   */\n  fork(): this\n\n  /**\n   * Resets this instance to the last state.\n   */\n  reset(): this\n\n  /**\n   * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n   */\n  ldelim(): this\n\n  /**\n   * Finishes the write operation\n   */\n  finish(): Uint8Array\n}\n\nexport interface Reader {\n  /**\n   * Read buffer\n   */\n  buf: Uint8Array\n\n  /**\n   * Read buffer position\n   */\n  pos: number\n\n  /**\n   * Read buffer length\n   */\n  len: number\n\n  /**\n   * Reads a varint as an unsigned 32 bit value\n   */\n  uint32(): number\n\n  /**\n   * Reads a varint as a signed 32 bit value\n   */\n  int32(): number\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 32 bit value\n   */\n  sint32(): number\n\n  /**\n   * Reads a varint as a boolean\n   */\n  bool(): boolean\n\n  /**\n   * Reads fixed 32 bits as an unsigned 32 bit integer\n   */\n  fixed32(): number\n\n  /**\n   * Reads fixed 32 bits as a signed 32 bit integer\n   */\n  sfixed32(): number\n\n  /**\n   * Reads a float (32 bit) as a number\n   */\n  float(): number\n\n  /**\n   * Reads a double (64 bit float) as a number\n   */\n  double(): number\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint\n   */\n  bytes(): Uint8Array\n\n  /**\n   * Reads a string preceded by its byte length as a varint\n   */\n  string(): string\n\n  /**\n   * Skips the specified number of bytes if specified, otherwise skips a varints`\n   */\n  skip(length?: number): void\n\n  /**\n   * Skips the next element of the specified wire type\n   */\n  skipType(wireType: number): void\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64(): bigint\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64Number(): number\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64String(): string\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64(): bigint\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64Number(): number\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64String(): string\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64(): bigint\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64Number(): number\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64String(): string\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64(): bigint\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64Number(): number\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64String(): string\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64(): bigint\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64Number(): number\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64String(): string\n}\n\n/**\n * This will be removed in a future release\n *\n * @deprecated\n */\nexport class CodeError extends Error {\n  public code: string\n\n  constructor (message: string, code: string) {\n    super(message)\n\n    this.code = code\n  }\n}\n\n/**\n * Thrown when a repeated field has too many elements\n */\nexport class MaxLengthError extends Error {\n  /**\n   * This will be removed in a future release\n   *\n   * @deprecated use the `.name` property instead\n   */\n  public code = 'ERR_MAX_LENGTH'\n  public name = 'MaxLengthError'\n}\n\n/**\n * Thrown when a map has too many elements\n */\nexport class MaxSizeError extends Error {\n  /**\n   * This will be removed in a future release\n   *\n   * @deprecated use the `.name` property instead\n   */\n  public code = 'ERR_MAX_SIZE'\n  public name = 'MaxSizeError'\n}\n\nexport class ParseError extends Error {\n  /**\n   * This will be removed in a future release\n   *\n   * @deprecated use the `.name` property instead\n   */\n  public code = 'ERR_PARSE_ERROR'\n  public name = 'ParseError'\n}\n\nexport class NoMessagesFoundError extends Error {\n  /**\n   * This will be removed in a future release\n   *\n   * @deprecated use the `.name` property instead\n   */\n  public code = 'ERR_NO_MESSAGES_FOUND'\n  public name = 'NoMessagesFoundError'\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;GAUG;;;;;;;;;;;;;AAgVG,MAAO,SAAU,SAAQ,KAAK;IAC3B,IAAI,CAAQ;IAEnB,YAAa,OAAe,EAAE,IAAY,CAAA;QACxC,KAAK,CAAC,OAAO,CAAC,CAAA;QAEd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;IAClB,CAAC;CACF;AAKK,MAAO,cAAe,SAAQ,KAAK;IACvC;;;;OAIG,CACI,IAAI,GAAG,gBAAgB,CAAA;IACvB,IAAI,GAAG,gBAAgB,CAAA;CAC/B;AAKK,MAAO,YAAa,SAAQ,KAAK;IACrC;;;;OAIG,CACI,IAAI,GAAG,cAAc,CAAA;IACrB,IAAI,GAAG,cAAc,CAAA;CAC7B;AAEK,MAAO,UAAW,SAAQ,KAAK;IACnC;;;;OAIG,CACI,IAAI,GAAG,iBAAiB,CAAA;IACxB,IAAI,GAAG,YAAY,CAAA;CAC3B;AAEK,MAAO,oBAAqB,SAAQ,KAAK;IAC7C;;;;OAIG,CACI,IAAI,GAAG,uBAAuB,CAAA;IAC9B,IAAI,GAAG,sBAAsB,CAAA;CACrC","ignoreList":[0]}},
    {"offset": {"line": 5453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5473, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/metadata/onchain/protobuf/OnchainMetadata.js"],"sourcesContent":["/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { decodeMessage, encodeMessage, enumeration, message } from 'protons-runtime';\nexport var IPLDNodeData;\n(function (IPLDNodeData) {\n    let _codec;\n    IPLDNodeData.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.type != null && __MetadataTypeValues[obj.type] !== 0) {\n                    w.uint32(8);\n                    MetadataType.codec().encode(obj.type, w);\n                }\n                if ((obj.linkDepth != null && obj.linkDepth !== 0)) {\n                    w.uint32(16);\n                    w.int32(obj.linkDepth);\n                }\n                if (obj.size != null) {\n                    w.uint32(24);\n                    w.int64(obj.size);\n                }\n                if (obj.name != null) {\n                    w.uint32(34);\n                    w.string(obj.name);\n                }\n                if (obj.data != null) {\n                    w.uint32(42);\n                    w.bytes(obj.data);\n                }\n                if (obj.uploadOptions != null) {\n                    w.uint32(50);\n                    FileUploadOptions.codec().encode(obj.uploadOptions, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                var _a;\n                const obj = {\n                    type: MetadataType.File,\n                    linkDepth: 0\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.type = MetadataType.codec().decode(reader);\n                            break;\n                        }\n                        case 2: {\n                            obj.linkDepth = reader.int32();\n                            break;\n                        }\n                        case 3: {\n                            obj.size = reader.int64();\n                            break;\n                        }\n                        case 4: {\n                            obj.name = reader.string();\n                            break;\n                        }\n                        case 5: {\n                            obj.data = reader.bytes();\n                            break;\n                        }\n                        case 6: {\n                            obj.uploadOptions = FileUploadOptions.codec().decode(reader, reader.uint32(), {\n                                limits: (_a = opts.limits) === null || _a === void 0 ? void 0 : _a.uploadOptions\n                            });\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    IPLDNodeData.encode = (obj) => {\n        return encodeMessage(obj, IPLDNodeData.codec());\n    };\n    IPLDNodeData.decode = (buf, opts) => {\n        return decodeMessage(buf, IPLDNodeData.codec(), opts);\n    };\n})(IPLDNodeData || (IPLDNodeData = {}));\nexport var MetadataType;\n(function (MetadataType) {\n    MetadataType[\"File\"] = \"File\";\n    MetadataType[\"FileInlink\"] = \"FileInlink\";\n    MetadataType[\"FileChunk\"] = \"FileChunk\";\n    MetadataType[\"Folder\"] = \"Folder\";\n    MetadataType[\"FolderInlink\"] = \"FolderInlink\";\n    MetadataType[\"Metadata\"] = \"Metadata\";\n    MetadataType[\"MetadataInlink\"] = \"MetadataInlink\";\n    MetadataType[\"MetadataChunk\"] = \"MetadataChunk\";\n})(MetadataType || (MetadataType = {}));\nvar __MetadataTypeValues;\n(function (__MetadataTypeValues) {\n    __MetadataTypeValues[__MetadataTypeValues[\"File\"] = 0] = \"File\";\n    __MetadataTypeValues[__MetadataTypeValues[\"FileInlink\"] = 1] = \"FileInlink\";\n    __MetadataTypeValues[__MetadataTypeValues[\"FileChunk\"] = 2] = \"FileChunk\";\n    __MetadataTypeValues[__MetadataTypeValues[\"Folder\"] = 3] = \"Folder\";\n    __MetadataTypeValues[__MetadataTypeValues[\"FolderInlink\"] = 4] = \"FolderInlink\";\n    __MetadataTypeValues[__MetadataTypeValues[\"Metadata\"] = 5] = \"Metadata\";\n    __MetadataTypeValues[__MetadataTypeValues[\"MetadataInlink\"] = 6] = \"MetadataInlink\";\n    __MetadataTypeValues[__MetadataTypeValues[\"MetadataChunk\"] = 7] = \"MetadataChunk\";\n})(__MetadataTypeValues || (__MetadataTypeValues = {}));\n(function (MetadataType) {\n    MetadataType.codec = () => {\n        return enumeration(__MetadataTypeValues);\n    };\n})(MetadataType || (MetadataType = {}));\nexport var FileUploadOptions;\n(function (FileUploadOptions) {\n    let _codec;\n    FileUploadOptions.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.compression != null) {\n                    w.uint32(10);\n                    CompressionOptions.codec().encode(obj.compression, w);\n                }\n                if (obj.encryption != null) {\n                    w.uint32(18);\n                    EncryptionOptions.codec().encode(obj.encryption, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                var _a, _b;\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.compression = CompressionOptions.codec().decode(reader, reader.uint32(), {\n                                limits: (_a = opts.limits) === null || _a === void 0 ? void 0 : _a.compression\n                            });\n                            break;\n                        }\n                        case 2: {\n                            obj.encryption = EncryptionOptions.codec().decode(reader, reader.uint32(), {\n                                limits: (_b = opts.limits) === null || _b === void 0 ? void 0 : _b.encryption\n                            });\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FileUploadOptions.encode = (obj) => {\n        return encodeMessage(obj, FileUploadOptions.codec());\n    };\n    FileUploadOptions.decode = (buf, opts) => {\n        return decodeMessage(buf, FileUploadOptions.codec(), opts);\n    };\n})(FileUploadOptions || (FileUploadOptions = {}));\nexport var CompressionOptions;\n(function (CompressionOptions) {\n    let _codec;\n    CompressionOptions.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.algorithm != null && __CompressionAlgorithmValues[obj.algorithm] !== 0) {\n                    w.uint32(8);\n                    CompressionAlgorithm.codec().encode(obj.algorithm, w);\n                }\n                if (obj.level != null) {\n                    w.uint32(16);\n                    w.int32(obj.level);\n                }\n                if (obj.chunkSize != null) {\n                    w.uint32(24);\n                    w.int32(obj.chunkSize);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    algorithm: CompressionAlgorithm.ZLIB\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.algorithm = CompressionAlgorithm.codec().decode(reader);\n                            break;\n                        }\n                        case 2: {\n                            obj.level = reader.int32();\n                            break;\n                        }\n                        case 3: {\n                            obj.chunkSize = reader.int32();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    CompressionOptions.encode = (obj) => {\n        return encodeMessage(obj, CompressionOptions.codec());\n    };\n    CompressionOptions.decode = (buf, opts) => {\n        return decodeMessage(buf, CompressionOptions.codec(), opts);\n    };\n})(CompressionOptions || (CompressionOptions = {}));\nexport var EncryptionOptions;\n(function (EncryptionOptions) {\n    let _codec;\n    EncryptionOptions.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.algorithm != null && __EncryptionAlgorithmValues[obj.algorithm] !== 0) {\n                    w.uint32(8);\n                    EncryptionAlgorithm.codec().encode(obj.algorithm, w);\n                }\n                if (obj.chunkSize != null) {\n                    w.uint32(16);\n                    w.int32(obj.chunkSize);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    algorithm: EncryptionAlgorithm.AES_256_GCM\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.algorithm = EncryptionAlgorithm.codec().decode(reader);\n                            break;\n                        }\n                        case 2: {\n                            obj.chunkSize = reader.int32();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    EncryptionOptions.encode = (obj) => {\n        return encodeMessage(obj, EncryptionOptions.codec());\n    };\n    EncryptionOptions.decode = (buf, opts) => {\n        return decodeMessage(buf, EncryptionOptions.codec(), opts);\n    };\n})(EncryptionOptions || (EncryptionOptions = {}));\nexport var CompressionAlgorithm;\n(function (CompressionAlgorithm) {\n    CompressionAlgorithm[\"ZLIB\"] = \"ZLIB\";\n})(CompressionAlgorithm || (CompressionAlgorithm = {}));\nvar __CompressionAlgorithmValues;\n(function (__CompressionAlgorithmValues) {\n    __CompressionAlgorithmValues[__CompressionAlgorithmValues[\"ZLIB\"] = 0] = \"ZLIB\";\n})(__CompressionAlgorithmValues || (__CompressionAlgorithmValues = {}));\n(function (CompressionAlgorithm) {\n    CompressionAlgorithm.codec = () => {\n        return enumeration(__CompressionAlgorithmValues);\n    };\n})(CompressionAlgorithm || (CompressionAlgorithm = {}));\nexport var EncryptionAlgorithm;\n(function (EncryptionAlgorithm) {\n    EncryptionAlgorithm[\"AES_256_GCM\"] = \"AES_256_GCM\";\n})(EncryptionAlgorithm || (EncryptionAlgorithm = {}));\nvar __EncryptionAlgorithmValues;\n(function (__EncryptionAlgorithmValues) {\n    __EncryptionAlgorithmValues[__EncryptionAlgorithmValues[\"AES_256_GCM\"] = 0] = \"AES_256_GCM\";\n})(__EncryptionAlgorithmValues || (__EncryptionAlgorithmValues = {}));\n(function (EncryptionAlgorithm) {\n    EncryptionAlgorithm.codec = () => {\n        return enumeration(__EncryptionAlgorithmValues);\n    };\n})(EncryptionAlgorithm || (EncryptionAlgorithm = {}));\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5821, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5827, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/utils/metadata.js"],"sourcesContent":["export const stringifyMetadata = (metadata) => JSON.stringify(metadata, (_, v) => typeof v === 'bigint' || v instanceof BigInt ? v.toString() : v);\n"],"names":[],"mappings":";;;AAAO,MAAM,oBAAoB,CAAC,WAAa,KAAK,SAAS,CAAC,UAAU,CAAC,GAAG,IAAM,OAAO,MAAM,YAAY,aAAa,SAAS,EAAE,QAAQ,KAAK","ignoreList":[0]}},
    {"offset": {"line": 5831, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5837, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/ipld/chunker.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { cidOfNode } from '../cid/index.js';\nimport { decodeIPLDNodeData } from '../metadata/index.js';\nimport { stringifyMetadata } from '../utils/metadata.js';\nimport { fileBuilders, metadataBuilders } from './builders.js';\nimport { createFolderInlinkIpldNode, createFolderIpldNode } from './nodes.js';\nimport { chunkBuffer, encodeNode } from './utils.js';\nexport const DEFAULT_NODE_MAX_SIZE = 65535;\n// u8 -> 1 byte (may grow in the future but unlikely further than 255)\nconst NODE_TYPE_SIZE = 1;\n// u32 -> 4 bytes\nconst NODE_LINK_DEPTH_SIZE = 4;\n// u64 -> 8 bytes\nconst NODE_SIZE_SIZE = 8;\n// Limit at 255 string length (Mac Limit)\nexport const MAX_NAME_SIZE = 255;\nconst END_OF_STRING_BYTE = 1;\nconst NODE_NAME_SIZE = MAX_NAME_SIZE + END_OF_STRING_BYTE;\n// Upload options may be amplified in the future\nconst NODE_UPLOAD_OPTIONS_SIZE = 100;\n// Reserve 100 bytes for future use\nconst NODE_RESERVED_SIZE = 100;\nexport const NODE_METADATA_SIZE = NODE_TYPE_SIZE +\n    NODE_LINK_DEPTH_SIZE +\n    NODE_SIZE_SIZE +\n    NODE_NAME_SIZE +\n    NODE_RESERVED_SIZE +\n    NODE_UPLOAD_OPTIONS_SIZE;\nexport const DEFAULT_MAX_CHUNK_SIZE = DEFAULT_NODE_MAX_SIZE - NODE_METADATA_SIZE;\nexport const LINK_SIZE_IN_BYTES = 40;\nexport const DEFAULT_MAX_LINK_PER_NODE = Math.floor(DEFAULT_MAX_CHUNK_SIZE / LINK_SIZE_IN_BYTES);\nexport const processFileToIPLDFormat = (blockstore, file, totalSize, filename, { maxNodeSize = DEFAULT_NODE_MAX_SIZE, maxLinkPerNode = DEFAULT_MAX_LINK_PER_NODE, encryption = undefined, compression = undefined, } = {\n    maxNodeSize: DEFAULT_NODE_MAX_SIZE,\n    maxLinkPerNode: DEFAULT_MAX_LINK_PER_NODE,\n    encryption: undefined,\n    compression: undefined,\n}) => {\n    if (filename && filename.length > MAX_NAME_SIZE) {\n        throw new Error(`Filename is too long: ${filename.length} > ${MAX_NAME_SIZE}`);\n    }\n    return processBufferToIPLDFormat(blockstore, file, filename, totalSize, fileBuilders, {\n        maxNodeSize,\n        maxLinkPerNode,\n        encryption,\n        compression,\n    });\n};\nexport const processMetadataToIPLDFormat = (blockstore_1, metadata_1, ...args_1) => __awaiter(void 0, [blockstore_1, metadata_1, ...args_1], void 0, function* (blockstore, metadata, limits = {\n    maxNodeSize: DEFAULT_NODE_MAX_SIZE,\n    maxLinkPerNode: DEFAULT_MAX_LINK_PER_NODE,\n}) {\n    if (metadata.name && metadata.name.length > MAX_NAME_SIZE) {\n        throw new Error(`Filename is too long: ${metadata.name.length} > ${MAX_NAME_SIZE}`);\n    }\n    const buffer = Buffer.from(stringifyMetadata(metadata));\n    return processBufferToIPLDFormat(blockstore, (function () {\n        return __asyncGenerator(this, arguments, function* () {\n            yield yield __await(buffer);\n        });\n    })(), metadata.name, BigInt(buffer.byteLength), metadataBuilders, limits);\n});\nconst processBufferToIPLDFormat = (blockstore_1, buffer_1, filename_1, totalSize_1, builders_1, ...args_1) => __awaiter(void 0, [blockstore_1, buffer_1, filename_1, totalSize_1, builders_1, ...args_1], void 0, function* (blockstore, buffer, filename, totalSize, builders, { maxNodeSize: maxNodeSize = DEFAULT_NODE_MAX_SIZE, maxLinkPerNode = DEFAULT_MAX_LINK_PER_NODE, encryption = undefined, compression = undefined, } = {\n    maxNodeSize: DEFAULT_NODE_MAX_SIZE,\n    maxLinkPerNode: DEFAULT_MAX_LINK_PER_NODE,\n    encryption: undefined,\n    compression: undefined,\n}) {\n    var _a, e_1, _b, _c;\n    if (filename && filename.length > MAX_NAME_SIZE) {\n        throw new Error(`Filename is too long: ${filename.length} > ${MAX_NAME_SIZE}`);\n    }\n    const bufferChunks = chunkBuffer(buffer, { maxChunkSize: maxNodeSize - NODE_METADATA_SIZE });\n    let CIDs = [];\n    try {\n        for (var _d = true, bufferChunks_1 = __asyncValues(bufferChunks), bufferChunks_1_1; bufferChunks_1_1 = yield bufferChunks_1.next(), _a = bufferChunks_1_1.done, !_a; _d = true) {\n            _c = bufferChunks_1_1.value;\n            _d = false;\n            const chunk = _c;\n            const node = builders.chunk(chunk);\n            const cid = cidOfNode(node);\n            yield blockstore.put(cid, encodeNode(node));\n            CIDs.push(cid);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (!_d && !_a && (_b = bufferChunks_1.return)) yield _b.call(bufferChunks_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return processBufferToIPLDFormatFromChunks(blockstore, CIDs, filename, totalSize, builders, {\n        maxLinkPerNode,\n        maxNodeSize,\n        encryption,\n        compression,\n    });\n});\nexport const processBufferToIPLDFormatFromChunks = (blockstore_1, chunks_1, filename_1, totalSize_1, builders_1, ...args_1) => __awaiter(void 0, [blockstore_1, chunks_1, filename_1, totalSize_1, builders_1, ...args_1], void 0, function* (blockstore, chunks, filename, totalSize, builders, { maxNodeSize: maxNodeSize = DEFAULT_NODE_MAX_SIZE, maxLinkPerNode = DEFAULT_MAX_LINK_PER_NODE, encryption = undefined, compression = undefined, } = {\n    maxNodeSize: DEFAULT_NODE_MAX_SIZE,\n    maxLinkPerNode: DEFAULT_MAX_LINK_PER_NODE,\n    encryption: undefined,\n    compression: undefined,\n}) {\n    var _a, chunks_2, chunks_2_1;\n    var _b, e_2, _c, _d;\n    if (filename && filename.length > MAX_NAME_SIZE) {\n        throw new Error(`Filename is too long: ${filename.length} > ${MAX_NAME_SIZE}`);\n    }\n    let chunkCount = 0;\n    let CIDs = [];\n    try {\n        for (_a = true, chunks_2 = __asyncValues(chunks); chunks_2_1 = yield chunks_2.next(), _b = chunks_2_1.done, !_b; _a = true) {\n            _d = chunks_2_1.value;\n            _a = false;\n            const chunk = _d;\n            CIDs.push(chunk);\n            chunkCount++;\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (!_a && !_b && (_c = chunks_2.return)) yield _c.call(chunks_2);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    if (CIDs.length === 1) {\n        const nodeBytes = yield blockstore.get(CIDs[0]);\n        yield blockstore.delete(CIDs[0]);\n        const data = decodeIPLDNodeData(nodeBytes);\n        const singleNode = builders.single(Buffer.from(data.data), filename, {\n            compression,\n            encryption,\n        });\n        yield blockstore.put(cidOfNode(singleNode), encodeNode(singleNode));\n        const headCID = cidOfNode(singleNode);\n        return headCID;\n    }\n    let depth = 1;\n    while (CIDs.length > maxLinkPerNode) {\n        const newCIDs = [];\n        for (let i = 0; i < CIDs.length; i += maxLinkPerNode) {\n            const chunk = CIDs.slice(i, i + maxLinkPerNode);\n            const node = builders.inlink(chunk, chunk.length, depth, maxNodeSize);\n            const cid = cidOfNode(node);\n            yield blockstore.put(cid, encodeNode(node));\n            newCIDs.push(cid);\n        }\n        depth++;\n        CIDs = newCIDs;\n    }\n    const head = builders.root(CIDs, totalSize, depth, filename, maxNodeSize, {\n        compression,\n        encryption,\n    });\n    const headCID = cidOfNode(head);\n    yield blockstore.put(headCID, encodeNode(head));\n    return headCID;\n});\nexport const processFolderToIPLDFormat = (blockstore_1, children_1, name_1, size_1, ...args_1) => __awaiter(void 0, [blockstore_1, children_1, name_1, size_1, ...args_1], void 0, function* (blockstore, children, name, size, { maxLinkPerNode = DEFAULT_MAX_LINK_PER_NODE, maxNodeSize: maxNodeSize = DEFAULT_NODE_MAX_SIZE, compression = undefined, encryption = undefined, } = {\n    maxLinkPerNode: DEFAULT_MAX_LINK_PER_NODE,\n    maxNodeSize: DEFAULT_NODE_MAX_SIZE,\n    compression: undefined,\n    encryption: undefined,\n}) {\n    if (name.length > MAX_NAME_SIZE) {\n        throw new Error(`Filename is too long: ${name.length} > ${MAX_NAME_SIZE}`);\n    }\n    let cids = children;\n    let depth = 0;\n    while (cids.length > maxLinkPerNode) {\n        const newCIDs = [];\n        for (let i = 0; i < cids.length; i += maxLinkPerNode) {\n            const chunk = cids.slice(i, i + maxLinkPerNode);\n            const node = createFolderInlinkIpldNode(chunk, depth);\n            const cid = cidOfNode(node);\n            yield blockstore.put(cid, encodeNode(node));\n            newCIDs.push(cid);\n        }\n        cids = newCIDs;\n        depth++;\n    }\n    const node = createFolderIpldNode(cids, name, depth, size, maxNodeSize, {\n        compression,\n        encryption,\n    });\n    const cid = cidOfNode(node);\n    yield blockstore.put(cid, encodeNode(node));\n    return cid;\n});\n/**\n * Process chunks to IPLD format, return the last chunk if it's not full\n * @returns the last chunk if it's not full, otherwise an empty buffer\n */\nexport const processChunksToIPLDFormat = (blockstore_1, chunks_1, builders_1, ...args_1) => __awaiter(void 0, [blockstore_1, chunks_1, builders_1, ...args_1], void 0, function* (blockstore, chunks, builders, { maxChunkSize = DEFAULT_MAX_CHUNK_SIZE } = {\n    maxChunkSize: DEFAULT_MAX_CHUNK_SIZE,\n}) {\n    var _a, e_3, _b, _c;\n    const bufferChunks = chunkBuffer(chunks, {\n        maxChunkSize,\n        ignoreLastChunk: false,\n    });\n    try {\n        for (var _d = true, bufferChunks_2 = __asyncValues(bufferChunks), bufferChunks_2_1; bufferChunks_2_1 = yield bufferChunks_2.next(), _a = bufferChunks_2_1.done, !_a; _d = true) {\n            _c = bufferChunks_2_1.value;\n            _d = false;\n            const chunk = _c;\n            if (chunk.byteLength < maxChunkSize) {\n                return chunk;\n            }\n            const node = builders.chunk(chunk);\n            const cid = cidOfNode(node);\n            yield blockstore.put(cid, encodeNode(node));\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (!_d && !_a && (_b = bufferChunks_2.return)) yield _b.call(bufferChunks_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return Buffer.alloc(0);\n});\nexport const ensureNodeMaxSize = (node, maxSize = DEFAULT_NODE_MAX_SIZE) => {\n    const nodeSize = encodeNode(node).byteLength;\n    if (nodeSize > maxSize) {\n        throw new Error(`Node is too large to fit in a single chunk: ${nodeSize} > ${maxSize}`);\n    }\n    return node;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6227, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/ipld/nodes.js"],"sourcesContent":["import { encodeIPLDNodeData, MetadataType } from '../metadata/onchain/index.js';\nimport { stringifyMetadata } from '../utils/metadata.js';\nimport { DEFAULT_NODE_MAX_SIZE, ensureNodeMaxSize } from './chunker.js';\nimport { createNode } from './index.js';\n/// Creates a file chunk ipld node\nexport const createFileChunkIpldNode = (data, maxNodeSize = DEFAULT_NODE_MAX_SIZE) => ensureNodeMaxSize(createNode(encodeIPLDNodeData({\n    type: MetadataType.FileChunk,\n    size: BigInt(data.length).valueOf(),\n    linkDepth: 0,\n    data,\n}), []), maxNodeSize);\n// Creates a file ipld node\n// links: the CIDs of the file's contents\n// @todo: add the file's metadata\nexport const createChunkedFileIpldNode = (links, size, linkDepth, name, maxNodeSize = DEFAULT_NODE_MAX_SIZE, uploadOptions) => ensureNodeMaxSize(createNode(encodeIPLDNodeData({\n    type: MetadataType.File,\n    name,\n    size,\n    linkDepth,\n    uploadOptions,\n}), links.map((cid) => ({ Hash: cid }))), maxNodeSize);\n// Creates a file ipld node\n// links: the CIDs of the file's contents\nexport const createFileInlinkIpldNode = (links, size, linkDepth, maxNodeSize = DEFAULT_NODE_MAX_SIZE) => ensureNodeMaxSize(createNode(encodeIPLDNodeData({\n    type: MetadataType.FileInlink,\n    size: BigInt(size).valueOf(),\n    linkDepth,\n}), links.map((cid) => ({ Hash: cid }))), maxNodeSize);\n// Creates a file ipld node\n// links: the CIDs of the file's contents\n// @todo: add the file's metadata\nexport const createSingleFileIpldNode = (data, name, uploadOptions, maxNodeSize = DEFAULT_NODE_MAX_SIZE) => ensureNodeMaxSize(createNode(encodeIPLDNodeData({\n    type: MetadataType.File,\n    name,\n    size: BigInt(data.length).valueOf(),\n    linkDepth: 0,\n    data,\n    uploadOptions,\n}), []), maxNodeSize);\n// Creates a file ipld node\n// links: the CIDs of the file's contents\n// @todo: add the file's metadata\nexport const createMetadataInlinkIpldNode = (links, size, linkDepth, maxNodeSize = DEFAULT_NODE_MAX_SIZE) => ensureNodeMaxSize(createNode(encodeIPLDNodeData({\n    type: MetadataType.FileInlink,\n    size: BigInt(size).valueOf(),\n    linkDepth,\n}), links.map((cid) => ({ Hash: cid }))), maxNodeSize);\n// Creates a file ipld node\n// links: the CIDs of the file's contents\n// @todo: add the file's metadata\nexport const createSingleMetadataIpldNode = (data, name) => createNode(encodeIPLDNodeData({\n    type: MetadataType.Metadata,\n    name,\n    size: BigInt(data.length).valueOf(),\n    linkDepth: 0,\n    data,\n}), []);\nexport const createMetadataChunkIpldNode = (data, maxNodeSize = DEFAULT_NODE_MAX_SIZE) => ensureNodeMaxSize(createNode(encodeIPLDNodeData({\n    type: MetadataType.MetadataChunk,\n    size: BigInt(data.length).valueOf(),\n    linkDepth: 0,\n    data,\n})), maxNodeSize);\nexport const createChunkedMetadataIpldNode = (links, size, linkDepth, name, maxNodeSize = DEFAULT_NODE_MAX_SIZE) => ensureNodeMaxSize(createNode(encodeIPLDNodeData({\n    type: MetadataType.Metadata,\n    name,\n    size,\n    linkDepth,\n}), links.map((cid) => ({ Hash: cid }))), maxNodeSize);\n// Creates a folder ipld node\n// links: the CIDs of the folder's contents\n// @todo: add the folder's metadata\nexport const createFolderIpldNode = (links, name, linkDepth, size, maxNodeSize = DEFAULT_NODE_MAX_SIZE, uploadOptions) => ensureNodeMaxSize(createNode(encodeIPLDNodeData({\n    type: MetadataType.Folder,\n    name,\n    size,\n    linkDepth,\n    uploadOptions,\n}), links.map((cid) => ({ Hash: cid }))), maxNodeSize);\nexport const createFolderInlinkIpldNode = (links, linkDepth, maxNodeSize = DEFAULT_NODE_MAX_SIZE) => ensureNodeMaxSize(createNode(encodeIPLDNodeData({\n    type: MetadataType.FolderInlink,\n    linkDepth,\n}), links.map((cid) => ({ Hash: cid }))), maxNodeSize);\n/// Creates a metadata ipld node\nexport const createMetadataNode = (metadata, maxNodeSize = DEFAULT_NODE_MAX_SIZE) => {\n    const data = Buffer.from(stringifyMetadata(metadata));\n    return ensureNodeMaxSize(createNode(encodeIPLDNodeData({\n        type: MetadataType.Metadata,\n        name: metadata.name,\n        linkDepth: 0,\n        data,\n        size: BigInt(data.length).valueOf(),\n    })), maxNodeSize);\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6334, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6340, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/ipld/builders.js"],"sourcesContent":["import { createChunkedFileIpldNode, createChunkedMetadataIpldNode, createFileChunkIpldNode, createFileInlinkIpldNode, createMetadataChunkIpldNode, createMetadataInlinkIpldNode, createSingleFileIpldNode, createSingleMetadataIpldNode, } from './nodes.js';\nexport const metadataBuilders = {\n    inlink: createMetadataInlinkIpldNode,\n    chunk: createMetadataChunkIpldNode,\n    root: createChunkedMetadataIpldNode,\n    single: createSingleMetadataIpldNode,\n};\nexport const fileBuilders = {\n    inlink: createFileInlinkIpldNode,\n    chunk: createFileChunkIpldNode,\n    root: createChunkedFileIpldNode,\n    single: createSingleFileIpldNode,\n};\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mBAAmB;IAC5B,QAAQ,4PAAA,CAAA,+BAA4B;IACpC,OAAO,4PAAA,CAAA,8BAA2B;IAClC,MAAM,4PAAA,CAAA,gCAA6B;IACnC,QAAQ,4PAAA,CAAA,+BAA4B;AACxC;AACO,MAAM,eAAe;IACxB,QAAQ,4PAAA,CAAA,2BAAwB;IAChC,OAAO,4PAAA,CAAA,0BAAuB;IAC9B,MAAM,4PAAA,CAAA,4BAAyB;IAC/B,QAAQ,4PAAA,CAAA,2BAAwB;AACpC","ignoreList":[0]}},
    {"offset": {"line": 6358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 6369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6397, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/metadata/onchain/utils.js"],"sourcesContent":["import { decodeNode } from '../../ipld/index.js';\nimport { IPLDNodeData } from './index.js';\nexport const encodeIPLDNodeData = (metadata) => {\n    return IPLDNodeData.encode(metadata);\n};\nexport const decodeIPLDNodeData = (data) => {\n    const decoded = decodeNode(data);\n    if (!decoded.Data) {\n        throw new Error('Invalid data');\n    }\n    return IPLDNodeData.decode(decoded.Data);\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AADA;;;AAEO,MAAM,qBAAqB,CAAC;IAC/B,OAAO,iSAAA,CAAA,eAAY,CAAC,MAAM,CAAC;AAC/B;AACO,MAAM,qBAAqB,CAAC;IAC/B,MAAM,UAAU,CAAA,GAAA,6QAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,QAAQ,IAAI,EAAE;QACf,MAAM,IAAI,MAAM;IACpB;IACA,OAAO,iSAAA,CAAA,eAAY,CAAC,MAAM,CAAC,QAAQ,IAAI;AAC3C","ignoreList":[0]}},
    {"offset": {"line": 6417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6423, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 6426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6442, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/metadata/offchain/folder.js"],"sourcesContent":["import { cidOfNode, cidToString } from '../../cid/index.js';\nimport { IPLDNodeData, MetadataType } from '../onchain/index.js';\nexport const childrenMetadataFromNode = (node) => {\n    var _a;\n    const ipldData = IPLDNodeData.decode(node.Data);\n    if (ipldData.type !== MetadataType.File && ipldData.type !== MetadataType.Folder) {\n        throw new Error('Invalid metadata type');\n    }\n    return {\n        type: ipldData.type === MetadataType.File ? 'file' : 'folder',\n        cid: cidToString(cidOfNode(node)),\n        totalSize: (_a = ipldData.size) !== null && _a !== void 0 ? _a : BigInt(0).valueOf(),\n        name: ipldData.name,\n    };\n};\nexport const folderMetadata = (cid, children, name, uploadOptions = {}) => {\n    cid = typeof cid === 'string' ? cid : cidToString(cid);\n    return {\n        dataCid: cid,\n        totalSize: children.reduce((acc, child) => acc + child.totalSize, BigInt(0).valueOf()),\n        totalFiles: children.length,\n        children,\n        type: 'folder',\n        name: name !== null && name !== void 0 ? name : undefined,\n        uploadOptions,\n    };\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;AACO,MAAM,2BAA2B,CAAC;IACrC,IAAI;IACJ,MAAM,WAAW,iSAAA,CAAA,eAAY,CAAC,MAAM,CAAC,KAAK,IAAI;IAC9C,IAAI,SAAS,IAAI,KAAK,iSAAA,CAAA,eAAY,CAAC,IAAI,IAAI,SAAS,IAAI,KAAK,iSAAA,CAAA,eAAY,CAAC,MAAM,EAAE;QAC9E,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;QACH,MAAM,SAAS,IAAI,KAAK,iSAAA,CAAA,eAAY,CAAC,IAAI,GAAG,SAAS;QACrD,KAAK,CAAA,GAAA,2PAAA,CAAA,cAAW,AAAD,EAAE,CAAA,GAAA,2PAAA,CAAA,YAAS,AAAD,EAAE;QAC3B,WAAW,CAAC,KAAK,SAAS,IAAI,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,OAAO,GAAG,OAAO;QAClF,MAAM,SAAS,IAAI;IACvB;AACJ;AACO,MAAM,iBAAiB,CAAC,KAAK,UAAU,MAAM,gBAAgB,CAAC,CAAC;IAClE,MAAM,OAAO,QAAQ,WAAW,MAAM,CAAA,GAAA,2PAAA,CAAA,cAAW,AAAD,EAAE;IAClD,OAAO;QACH,SAAS;QACT,WAAW,SAAS,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,MAAM,SAAS,EAAE,OAAO,GAAG,OAAO;QACnF,YAAY,SAAS,MAAM;QAC3B;QACA,MAAM;QACN,MAAM,SAAS,QAAQ,SAAS,KAAK,IAAI,OAAO;QAChD;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 6476, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6482, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 6486, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6503, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 6506, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6522, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/utils/async.js"],"sourcesContent":["var __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nexport const asyncByChunk = function (iterable_1, chunkSize_1) {\n    return __asyncGenerator(this, arguments, function* (iterable, chunkSize, ignoreLastChunk = false) {\n        var _a, e_1, _b, _c;\n        let accumulated = Buffer.alloc(0);\n        try {\n            for (var _d = true, iterable_2 = __asyncValues(iterable), iterable_2_1; iterable_2_1 = yield __await(iterable_2.next()), _a = iterable_2_1.done, !_a; _d = true) {\n                _c = iterable_2_1.value;\n                _d = false;\n                const chunk = _c;\n                accumulated = Buffer.concat([accumulated, chunk]);\n                while (accumulated.length >= chunkSize) {\n                    yield yield __await(accumulated.subarray(0, chunkSize));\n                    accumulated = accumulated.subarray(chunkSize);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = iterable_2.return)) yield __await(_b.call(iterable_2));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (accumulated.length > 0 && !ignoreLastChunk) {\n            yield yield __await(accumulated);\n        }\n    });\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6632, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6638, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/fflate%400.8.2/node_modules/fflate/esm/index.mjs"],"sourcesContent":["import { createRequire } from 'module';\nvar require = createRequire('/');\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\n// Mediocre shim\nvar Worker;\nvar workerAdd = \";var __w=require('worker_threads');__w.parentPort.on('message',function(m){onmessage({data:m})}),postMessage=function(m,t){__w.parentPort.postMessage(m,t)},close=process.exit;self=global\";\ntry {\n    Worker = require('worker_threads').Worker;\n}\ncatch (e) {\n}\nvar wk = Worker ? function (c, _, msg, transfer, cb) {\n    var done = false;\n    var w = new Worker(c + workerAdd, { eval: true })\n        .on('error', function (e) { return cb(e, null); })\n        .on('message', function (m) { return cb(null, m); })\n        .on('exit', function (c) {\n        if (c && !done)\n            cb(new Error('exited with code ' + c), null);\n    });\n    w.postMessage(msg, transfer);\n    w.terminate = function () {\n        done = true;\n        return Worker.prototype.terminate.call(w);\n    };\n    return w;\n} : function (_, __, ___, ____, cb) {\n    setImmediate(function () { return cb(new Error('async operations unsupported - update to Node 12+ (or Node 10-11 with the --experimental-worker CLI flag)'), null); });\n    var NOP = function () { };\n    return {\n        terminate: NOP,\n        postMessage: NOP\n    };\n};\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9372, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9378, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/compression/index.js"],"sourcesContent":["var __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nimport { Unzlib, Zlib } from 'fflate';\nimport { CompressionAlgorithm } from '../metadata/index.js';\nimport { asyncByChunk } from '../utils/async.js';\nexport const COMPRESSION_CHUNK_SIZE = 1024 * 1024;\nexport function compressFile(file_1, _a) {\n    return __asyncGenerator(this, arguments, function* compressFile_1(file, { level = 9, chunkSize = COMPRESSION_CHUNK_SIZE, algorithm, }) {\n        var _b, e_1, _c, _d;\n        if (algorithm !== CompressionAlgorithm.ZLIB) {\n            throw new Error('Unsupported compression algorithm');\n        }\n        if (level < 0 || level > 9) {\n            throw new Error('Invalid compression level');\n        }\n        if (chunkSize <= 0) {\n            throw new Error('Invalid chunk size');\n        }\n        const zlib = new Zlib({ level });\n        const compressedChunks = [];\n        zlib.ondata = (chunk) => {\n            compressedChunks.push(Buffer.from(chunk));\n        };\n        try {\n            for (var _e = true, _f = __asyncValues(asyncByChunk(file, chunkSize)), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true) {\n                _d = _g.value;\n                _e = false;\n                const chunk = _d;\n                zlib.push(chunk, false);\n                while (compressedChunks.length > 0) {\n                    yield yield __await(compressedChunks.shift());\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        zlib.push(new Uint8Array(), true);\n        while (compressedChunks.length > 0) {\n            yield yield __await(compressedChunks.shift());\n        }\n    });\n}\nexport function decompressFile(compressedFile_1, _a) {\n    return __asyncGenerator(this, arguments, function* decompressFile_1(compressedFile, { chunkSize = COMPRESSION_CHUNK_SIZE, algorithm, level = 9, }) {\n        var _b, e_2, _c, _d;\n        if (algorithm !== CompressionAlgorithm.ZLIB) {\n            throw new Error('Unsupported compression algorithm');\n        }\n        if (chunkSize <= 0) {\n            throw new Error('Invalid chunk size');\n        }\n        if (level < 0 || level > 9) {\n            throw new Error('Invalid compression level');\n        }\n        const unzlib = new Unzlib();\n        const decompressedChunks = [];\n        unzlib.ondata = (chunk) => {\n            decompressedChunks.push(Buffer.from(chunk));\n        };\n        try {\n            for (var _e = true, _f = __asyncValues(asyncByChunk(compressedFile, chunkSize)), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true) {\n                _d = _g.value;\n                _e = false;\n                const chunk = _d;\n                unzlib.push(chunk, false);\n                while (decompressedChunks.length > 0) {\n                    yield yield __await(decompressedChunks.shift());\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        unzlib.push(new Uint8Array(), true);\n        while (decompressedChunks.length > 0) {\n            yield yield __await(decompressedChunks.shift());\n        }\n    });\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9560, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/pvtsutils%401.3.6/node_modules/pvtsutils/build/index.es.js"],"sourcesContent":["/*!\n * MIT License\n * \n * Copyright (c) 2017-2024 Peculiar Ventures, LLC\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\n\nconst ARRAY_BUFFER_NAME = \"[object ArrayBuffer]\";\nclass BufferSourceConverter {\n    static isArrayBuffer(data) {\n        return Object.prototype.toString.call(data) === ARRAY_BUFFER_NAME;\n    }\n    static toArrayBuffer(data) {\n        if (this.isArrayBuffer(data)) {\n            return data;\n        }\n        if (data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        return this.toUint8Array(data.buffer)\n            .slice(data.byteOffset, data.byteOffset + data.byteLength)\n            .buffer;\n    }\n    static toUint8Array(data) {\n        return this.toView(data, Uint8Array);\n    }\n    static toView(data, type) {\n        if (data.constructor === type) {\n            return data;\n        }\n        if (this.isArrayBuffer(data)) {\n            return new type(data);\n        }\n        if (this.isArrayBufferView(data)) {\n            return new type(data.buffer, data.byteOffset, data.byteLength);\n        }\n        throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView)'\");\n    }\n    static isBufferSource(data) {\n        return this.isArrayBufferView(data)\n            || this.isArrayBuffer(data);\n    }\n    static isArrayBufferView(data) {\n        return ArrayBuffer.isView(data)\n            || (data && this.isArrayBuffer(data.buffer));\n    }\n    static isEqual(a, b) {\n        const aView = BufferSourceConverter.toUint8Array(a);\n        const bView = BufferSourceConverter.toUint8Array(b);\n        if (aView.length !== bView.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < aView.length; i++) {\n            if (aView[i] !== bView[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static concat(...args) {\n        let buffers;\n        if (Array.isArray(args[0]) && !(args[1] instanceof Function)) {\n            buffers = args[0];\n        }\n        else if (Array.isArray(args[0]) && args[1] instanceof Function) {\n            buffers = args[0];\n        }\n        else {\n            if (args[args.length - 1] instanceof Function) {\n                buffers = args.slice(0, args.length - 1);\n            }\n            else {\n                buffers = args;\n            }\n        }\n        let size = 0;\n        for (const buffer of buffers) {\n            size += buffer.byteLength;\n        }\n        const res = new Uint8Array(size);\n        let offset = 0;\n        for (const buffer of buffers) {\n            const view = this.toUint8Array(buffer);\n            res.set(view, offset);\n            offset += view.length;\n        }\n        if (args[args.length - 1] instanceof Function) {\n            return this.toView(res, args[args.length - 1]);\n        }\n        return res.buffer;\n    }\n}\n\nconst STRING_TYPE = \"string\";\nconst HEX_REGEX = /^[0-9a-f\\s]+$/i;\nconst BASE64_REGEX = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\nconst BASE64URL_REGEX = /^[a-zA-Z0-9-_]+$/;\nclass Utf8Converter {\n    static fromString(text) {\n        const s = unescape(encodeURIComponent(text));\n        const uintArray = new Uint8Array(s.length);\n        for (let i = 0; i < s.length; i++) {\n            uintArray[i] = s.charCodeAt(i);\n        }\n        return uintArray.buffer;\n    }\n    static toString(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let encodedString = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            encodedString += String.fromCharCode(buf[i]);\n        }\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n}\nclass Utf16Converter {\n    static toString(buffer, littleEndian = false) {\n        const arrayBuffer = BufferSourceConverter.toArrayBuffer(buffer);\n        const dataView = new DataView(arrayBuffer);\n        let res = \"\";\n        for (let i = 0; i < arrayBuffer.byteLength; i += 2) {\n            const code = dataView.getUint16(i, littleEndian);\n            res += String.fromCharCode(code);\n        }\n        return res;\n    }\n    static fromString(text, littleEndian = false) {\n        const res = new ArrayBuffer(text.length * 2);\n        const dataView = new DataView(res);\n        for (let i = 0; i < text.length; i++) {\n            dataView.setUint16(i * 2, text.charCodeAt(i), littleEndian);\n        }\n        return res;\n    }\n}\nclass Convert {\n    static isHex(data) {\n        return typeof data === STRING_TYPE\n            && HEX_REGEX.test(data);\n    }\n    static isBase64(data) {\n        return typeof data === STRING_TYPE\n            && BASE64_REGEX.test(data);\n    }\n    static isBase64Url(data) {\n        return typeof data === STRING_TYPE\n            && BASE64URL_REGEX.test(data);\n    }\n    static ToString(buffer, enc = \"utf8\") {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.ToUtf8String(buf);\n            case \"binary\":\n                return this.ToBinary(buf);\n            case \"hex\":\n                return this.ToHex(buf);\n            case \"base64\":\n                return this.ToBase64(buf);\n            case \"base64url\":\n                return this.ToBase64Url(buf);\n            case \"utf16le\":\n                return Utf16Converter.toString(buf, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buf);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static FromString(str, enc = \"utf8\") {\n        if (!str) {\n            return new ArrayBuffer(0);\n        }\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.FromUtf8String(str);\n            case \"binary\":\n                return this.FromBinary(str);\n            case \"hex\":\n                return this.FromHex(str);\n            case \"base64\":\n                return this.FromBase64(str);\n            case \"base64url\":\n                return this.FromBase64Url(str);\n            case \"utf16le\":\n                return Utf16Converter.fromString(str, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(str);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static ToBase64(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        if (typeof btoa !== \"undefined\") {\n            const binary = this.ToString(buf, \"binary\");\n            return btoa(binary);\n        }\n        else {\n            return Buffer.from(buf).toString(\"base64\");\n        }\n    }\n    static FromBase64(base64) {\n        const formatted = this.formatString(base64);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64(formatted)) {\n            throw new TypeError(\"Argument 'base64Text' is not Base64 encoded\");\n        }\n        if (typeof atob !== \"undefined\") {\n            return this.FromBinary(atob(formatted));\n        }\n        else {\n            return new Uint8Array(Buffer.from(formatted, \"base64\")).buffer;\n        }\n    }\n    static FromBase64Url(base64url) {\n        const formatted = this.formatString(base64url);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64Url(formatted)) {\n            throw new TypeError(\"Argument 'base64url' is not Base64Url encoded\");\n        }\n        return this.FromBase64(this.Base64Padding(formatted.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\")));\n    }\n    static ToBase64Url(data) {\n        return this.ToBase64(data).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n    }\n    static FromUtf8String(text, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.FromBinary(text);\n            case \"utf8\":\n                return Utf8Converter.fromString(text);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(text);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.fromString(text, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static ToUtf8String(buffer, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.ToBinary(buffer);\n            case \"utf8\":\n                return Utf8Converter.toString(buffer);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buffer);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.toString(buffer, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static FromBinary(text) {\n        const stringLength = text.length;\n        const resultView = new Uint8Array(stringLength);\n        for (let i = 0; i < stringLength; i++) {\n            resultView[i] = text.charCodeAt(i);\n        }\n        return resultView.buffer;\n    }\n    static ToBinary(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let res = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            res += String.fromCharCode(buf[i]);\n        }\n        return res;\n    }\n    static ToHex(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let result = \"\";\n        const len = buf.length;\n        for (let i = 0; i < len; i++) {\n            const byte = buf[i];\n            if (byte < 16) {\n                result += \"0\";\n            }\n            result += byte.toString(16);\n        }\n        return result;\n    }\n    static FromHex(hexString) {\n        let formatted = this.formatString(hexString);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isHex(formatted)) {\n            throw new TypeError(\"Argument 'hexString' is not HEX encoded\");\n        }\n        if (formatted.length % 2) {\n            formatted = `0${formatted}`;\n        }\n        const res = new Uint8Array(formatted.length / 2);\n        for (let i = 0; i < formatted.length; i = i + 2) {\n            const c = formatted.slice(i, i + 2);\n            res[i / 2] = parseInt(c, 16);\n        }\n        return res.buffer;\n    }\n    static ToUtf16String(buffer, littleEndian = false) {\n        return Utf16Converter.toString(buffer, littleEndian);\n    }\n    static FromUtf16String(text, littleEndian = false) {\n        return Utf16Converter.fromString(text, littleEndian);\n    }\n    static Base64Padding(base64) {\n        const padCount = 4 - (base64.length % 4);\n        if (padCount < 4) {\n            for (let i = 0; i < padCount; i++) {\n                base64 += \"=\";\n            }\n        }\n        return base64;\n    }\n    static formatString(data) {\n        return (data === null || data === void 0 ? void 0 : data.replace(/[\\n\\r\\t ]/g, \"\")) || \"\";\n    }\n}\nConvert.DEFAULT_UTF8_ENCODING = \"utf8\";\n\nfunction assign(target, ...sources) {\n    const res = arguments[0];\n    for (let i = 1; i < arguments.length; i++) {\n        const obj = arguments[i];\n        for (const prop in obj) {\n            res[prop] = obj[prop];\n        }\n    }\n    return res;\n}\nfunction combine(...buf) {\n    const totalByteLength = buf.map((item) => item.byteLength).reduce((prev, cur) => prev + cur);\n    const res = new Uint8Array(totalByteLength);\n    let currentPos = 0;\n    buf.map((item) => new Uint8Array(item)).forEach((arr) => {\n        for (const item2 of arr) {\n            res[currentPos++] = item2;\n        }\n    });\n    return res.buffer;\n}\nfunction isEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport { BufferSourceConverter, Convert, assign, combine, isEqual };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9943, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9949, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/pvutils%401.1.3/node_modules/pvutils/build/utils.es.js"],"sourcesContent":["/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nfunction getUTCDate(date) {\r\n    return new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\nfunction getParametersValue(parameters, name, defaultValue) {\r\n    var _a;\r\n    if ((parameters instanceof Object) === false) {\r\n        return defaultValue;\r\n    }\r\n    return (_a = parameters[name]) !== null && _a !== void 0 ? _a : defaultValue;\r\n}\r\nfunction bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false) {\r\n    let result = \"\";\r\n    for (const item of (new Uint8Array(inputBuffer, inputOffset, inputLength))) {\r\n        const str = item.toString(16).toUpperCase();\r\n        if (str.length === 1) {\r\n            result += \"0\";\r\n        }\r\n        result += str;\r\n        if (insertSpace) {\r\n            result += \" \";\r\n        }\r\n    }\r\n    return result.trim();\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof ArrayBuffer)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction utilFromBase(inputBuffer, inputBase) {\r\n    let result = 0;\r\n    if (inputBuffer.length === 1) {\r\n        return inputBuffer[0];\r\n    }\r\n    for (let i = (inputBuffer.length - 1); i >= 0; i--) {\r\n        result += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n    }\r\n    return result;\r\n}\r\nfunction utilToBase(value, base, reserved = (-1)) {\r\n    const internalReserved = reserved;\r\n    let internalValue = value;\r\n    let result = 0;\r\n    let biggest = Math.pow(2, base);\r\n    for (let i = 1; i < 8; i++) {\r\n        if (value < biggest) {\r\n            let retBuf;\r\n            if (internalReserved < 0) {\r\n                retBuf = new ArrayBuffer(i);\r\n                result = i;\r\n            }\r\n            else {\r\n                if (internalReserved < i) {\r\n                    return (new ArrayBuffer(0));\r\n                }\r\n                retBuf = new ArrayBuffer(internalReserved);\r\n                result = internalReserved;\r\n            }\r\n            const retView = new Uint8Array(retBuf);\r\n            for (let j = (i - 1); j >= 0; j--) {\r\n                const basis = Math.pow(2, j * base);\r\n                retView[result - j - 1] = Math.floor(internalValue / basis);\r\n                internalValue -= (retView[result - j - 1]) * basis;\r\n            }\r\n            return retBuf;\r\n        }\r\n        biggest *= Math.pow(2, base);\r\n    }\r\n    return new ArrayBuffer(0);\r\n}\r\nfunction utilConcatBuf(...buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const buffer of buffers) {\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const buffer of buffers) {\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retBuf;\r\n}\r\nfunction utilConcatView(...views) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const view of views) {\r\n        outputLength += view.length;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const view of views) {\r\n        retView.set(view, prevLength);\r\n        prevLength += view.length;\r\n    }\r\n    return retView;\r\n}\r\nfunction utilDecodeTC() {\r\n    const buf = new Uint8Array(this.valueHex);\r\n    if (this.valueHex.byteLength >= 2) {\r\n        const condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n        const condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n        if (condition1 || condition2) {\r\n            this.warnings.push(\"Needlessly long format\");\r\n        }\r\n    }\r\n    const bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const bigIntView = new Uint8Array(bigIntBuffer);\r\n    for (let i = 0; i < this.valueHex.byteLength; i++) {\r\n        bigIntView[i] = 0;\r\n    }\r\n    bigIntView[0] = (buf[0] & 0x80);\r\n    const bigInt = utilFromBase(bigIntView, 8);\r\n    const smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const smallIntView = new Uint8Array(smallIntBuffer);\r\n    for (let j = 0; j < this.valueHex.byteLength; j++) {\r\n        smallIntView[j] = buf[j];\r\n    }\r\n    smallIntView[0] &= 0x7F;\r\n    const smallInt = utilFromBase(smallIntView, 8);\r\n    return (smallInt - bigInt);\r\n}\r\nfunction utilEncodeTC(value) {\r\n    const modValue = (value < 0) ? (value * (-1)) : value;\r\n    let bigInt = 128;\r\n    for (let i = 1; i < 8; i++) {\r\n        if (modValue <= bigInt) {\r\n            if (value < 0) {\r\n                const smallInt = bigInt - modValue;\r\n                const retBuf = utilToBase(smallInt, 8, i);\r\n                const retView = new Uint8Array(retBuf);\r\n                retView[0] |= 0x80;\r\n                return retBuf;\r\n            }\r\n            let retBuf = utilToBase(modValue, 8, i);\r\n            let retView = new Uint8Array(retBuf);\r\n            if (retView[0] & 0x80) {\r\n                const tempBuf = retBuf.slice(0);\r\n                const tempView = new Uint8Array(tempBuf);\r\n                retBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n                retView = new Uint8Array(retBuf);\r\n                for (let k = 0; k < tempBuf.byteLength; k++) {\r\n                    retView[k + 1] = tempView[k];\r\n                }\r\n                retView[0] = 0x00;\r\n            }\r\n            return retBuf;\r\n        }\r\n        bigInt *= Math.pow(2, 8);\r\n    }\r\n    return (new ArrayBuffer(0));\r\n}\r\nfunction isEqualBuffer(inputBuffer1, inputBuffer2) {\r\n    if (inputBuffer1.byteLength !== inputBuffer2.byteLength) {\r\n        return false;\r\n    }\r\n    const view1 = new Uint8Array(inputBuffer1);\r\n    const view2 = new Uint8Array(inputBuffer2);\r\n    for (let i = 0; i < view1.length; i++) {\r\n        if (view1[i] !== view2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction padNumber(inputNumber, fullLength) {\r\n    const str = inputNumber.toString(10);\r\n    if (fullLength < str.length) {\r\n        return \"\";\r\n    }\r\n    const dif = fullLength - str.length;\r\n    const padding = new Array(dif);\r\n    for (let i = 0; i < dif; i++) {\r\n        padding[i] = \"0\";\r\n    }\r\n    const paddingString = padding.join(\"\");\r\n    return paddingString.concat(str);\r\n}\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\nfunction toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false) {\r\n    let i = 0;\r\n    let flag1 = 0;\r\n    let flag2 = 0;\r\n    let output = \"\";\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    if (skipLeadingZeros) {\r\n        let nonZeroPosition = 0;\r\n        for (let i = 0; i < input.length; i++) {\r\n            if (input.charCodeAt(i) !== 0) {\r\n                nonZeroPosition = i;\r\n                break;\r\n            }\r\n        }\r\n        input = input.slice(nonZeroPosition);\r\n    }\r\n    while (i < input.length) {\r\n        const chr1 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag1 = 1;\r\n        }\r\n        const chr2 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag2 = 1;\r\n        }\r\n        const chr3 = input.charCodeAt(i++);\r\n        const enc1 = chr1 >> 2;\r\n        const enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n        let enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n        let enc4 = chr3 & 0x3F;\r\n        if (flag1 === 1) {\r\n            enc3 = enc4 = 64;\r\n        }\r\n        else {\r\n            if (flag2 === 1) {\r\n                enc4 = 64;\r\n            }\r\n        }\r\n        if (skipPadding) {\r\n            if (enc3 === 64) {\r\n                output += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n            }\r\n            else {\r\n                if (enc4 === 64) {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n                }\r\n                else {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction fromBase64(input, useUrlTemplate = false, cutTailZeros = false) {\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    function indexOf(toSearch) {\r\n        for (let i = 0; i < 64; i++) {\r\n            if (template.charAt(i) === toSearch)\r\n                return i;\r\n        }\r\n        return 64;\r\n    }\r\n    function test(incoming) {\r\n        return ((incoming === 64) ? 0x00 : incoming);\r\n    }\r\n    let i = 0;\r\n    let output = \"\";\r\n    while (i < input.length) {\r\n        const enc1 = indexOf(input.charAt(i++));\r\n        const enc2 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc3 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc4 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n        const chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n        const chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n        output += String.fromCharCode(chr1);\r\n        if (enc3 !== 64) {\r\n            output += String.fromCharCode(chr2);\r\n        }\r\n        if (enc4 !== 64) {\r\n            output += String.fromCharCode(chr3);\r\n        }\r\n    }\r\n    if (cutTailZeros) {\r\n        const outputLength = output.length;\r\n        let nonZeroStart = (-1);\r\n        for (let i = (outputLength - 1); i >= 0; i--) {\r\n            if (output.charCodeAt(i) !== 0) {\r\n                nonZeroStart = i;\r\n                break;\r\n            }\r\n        }\r\n        if (nonZeroStart !== (-1)) {\r\n            output = output.slice(0, nonZeroStart + 1);\r\n        }\r\n        else {\r\n            output = \"\";\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction arrayBufferToString(buffer) {\r\n    let resultString = \"\";\r\n    const view = new Uint8Array(buffer);\r\n    for (const element of view) {\r\n        resultString += String.fromCharCode(element);\r\n    }\r\n    return resultString;\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    const stringLength = str.length;\r\n    const resultBuffer = new ArrayBuffer(stringLength);\r\n    const resultView = new Uint8Array(resultBuffer);\r\n    for (let i = 0; i < stringLength; i++) {\r\n        resultView[i] = str.charCodeAt(i);\r\n    }\r\n    return resultBuffer;\r\n}\r\nconst log2 = Math.log(2);\r\nfunction nearestPowerOf2(length) {\r\n    const base = (Math.log(length) / log2);\r\n    const floor = Math.floor(base);\r\n    const round = Math.round(base);\r\n    return ((floor === round) ? floor : round);\r\n}\r\nfunction clearProps(object, propsArray) {\r\n    for (const prop of propsArray) {\r\n        delete object[prop];\r\n    }\r\n}\n\nexport { arrayBufferToString, bufferToHexCodes, checkBufferParams, clearProps, fromBase64, getParametersValue, getUTCDate, isEqualBuffer, nearestPowerOf2, padNumber, stringToArrayBuffer, toBase64, utilConcatBuf, utilConcatView, utilDecodeTC, utilEncodeTC, utilFromBase, utilToBase };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10304, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/asn1js%403.0.5/node_modules/asn1js/build/index.es.js"],"sourcesContent":["/*!\n * Copyright (c) 2014, GMO GlobalSign\n * Copyright (c) 2015-2022, Peculiar Ventures\n * All rights reserved.\n * \n * Author 2014-2019, Yury Strozhevsky\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n * \n * * Redistributions in binary form must reproduce the above copyright notice, this\n *   list of conditions and the following disclaimer in the documentation and/or\n *   other materials provided with the distribution.\n * \n * * Neither the name of the copyright holder nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nimport * as pvtsutils from 'pvtsutils';\nimport * as pvutils from 'pvutils';\n\nfunction assertBigInt() {\r\n    if (typeof BigInt === \"undefined\") {\r\n        throw new Error(\"BigInt is not defined. Your environment doesn't implement BigInt.\");\r\n    }\r\n}\r\nfunction concat(buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (let i = 0; i < buffers.length; i++) {\r\n        const buffer = buffers[i];\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retView = new Uint8Array(outputLength);\r\n    for (let i = 0; i < buffers.length; i++) {\r\n        const buffer = buffers[i];\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retView.buffer;\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof Uint8Array)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be 'Uint8Array'\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\nclass ViewWriter {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n    write(buf) {\r\n        this.items.push(buf);\r\n    }\r\n    final() {\r\n        return concat(this.items);\r\n    }\r\n}\n\nconst powers2 = [new Uint8Array([1])];\r\nconst digitsString = \"0123456789\";\r\nconst NAME = \"name\";\r\nconst VALUE_HEX_VIEW = \"valueHexView\";\r\nconst IS_HEX_ONLY = \"isHexOnly\";\r\nconst ID_BLOCK = \"idBlock\";\r\nconst TAG_CLASS = \"tagClass\";\r\nconst TAG_NUMBER = \"tagNumber\";\r\nconst IS_CONSTRUCTED = \"isConstructed\";\r\nconst FROM_BER = \"fromBER\";\r\nconst TO_BER = \"toBER\";\r\nconst LOCAL = \"local\";\r\nconst EMPTY_STRING = \"\";\r\nconst EMPTY_BUFFER = new ArrayBuffer(0);\r\nconst EMPTY_VIEW = new Uint8Array(0);\r\nconst END_OF_CONTENT_NAME = \"EndOfContent\";\r\nconst OCTET_STRING_NAME = \"OCTET STRING\";\r\nconst BIT_STRING_NAME = \"BIT STRING\";\n\nfunction HexBlock(BaseClass) {\r\n    var _a;\r\n    return _a = class Some extends BaseClass {\r\n            constructor(...args) {\r\n                var _a;\r\n                super(...args);\r\n                const params = args[0] || {};\r\n                this.isHexOnly = (_a = params.isHexOnly) !== null && _a !== void 0 ? _a : false;\r\n                this.valueHexView = params.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(params.valueHex) : EMPTY_VIEW;\r\n            }\r\n            get valueHex() {\r\n                return this.valueHexView.slice().buffer;\r\n            }\r\n            set valueHex(value) {\r\n                this.valueHexView = new Uint8Array(value);\r\n            }\r\n            fromBER(inputBuffer, inputOffset, inputLength) {\r\n                const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\r\n                if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n                    return -1;\r\n                }\r\n                const endLength = inputOffset + inputLength;\r\n                this.valueHexView = view.subarray(inputOffset, endLength);\r\n                if (!this.valueHexView.length) {\r\n                    this.warnings.push(\"Zero buffer length\");\r\n                    return inputOffset;\r\n                }\r\n                this.blockLength = inputLength;\r\n                return endLength;\r\n            }\r\n            toBER(sizeOnly = false) {\r\n                if (!this.isHexOnly) {\r\n                    this.error = \"Flag 'isHexOnly' is not set, abort\";\r\n                    return EMPTY_BUFFER;\r\n                }\r\n                if (sizeOnly) {\r\n                    return new ArrayBuffer(this.valueHexView.byteLength);\r\n                }\r\n                return (this.valueHexView.byteLength === this.valueHexView.buffer.byteLength)\r\n                    ? this.valueHexView.buffer\r\n                    : this.valueHexView.slice().buffer;\r\n            }\r\n            toJSON() {\r\n                return {\r\n                    ...super.toJSON(),\r\n                    isHexOnly: this.isHexOnly,\r\n                    valueHex: pvtsutils.Convert.ToHex(this.valueHexView),\r\n                };\r\n            }\r\n        },\r\n        _a.NAME = \"hexBlock\",\r\n        _a;\r\n}\n\nclass LocalBaseBlock {\r\n    constructor({ blockLength = 0, error = EMPTY_STRING, warnings = [], valueBeforeDecode = EMPTY_VIEW, } = {}) {\r\n        this.blockLength = blockLength;\r\n        this.error = error;\r\n        this.warnings = warnings;\r\n        this.valueBeforeDecodeView = pvtsutils.BufferSourceConverter.toUint8Array(valueBeforeDecode);\r\n    }\r\n    static blockName() {\r\n        return this.NAME;\r\n    }\r\n    get valueBeforeDecode() {\r\n        return this.valueBeforeDecodeView.slice().buffer;\r\n    }\r\n    set valueBeforeDecode(value) {\r\n        this.valueBeforeDecodeView = new Uint8Array(value);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            blockName: this.constructor.NAME,\r\n            blockLength: this.blockLength,\r\n            error: this.error,\r\n            warnings: this.warnings,\r\n            valueBeforeDecode: pvtsutils.Convert.ToHex(this.valueBeforeDecodeView),\r\n        };\r\n    }\r\n}\r\nLocalBaseBlock.NAME = \"baseBlock\";\n\nclass ValueBlock extends LocalBaseBlock {\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\r\n    }\r\n}\r\nValueBlock.NAME = \"valueBlock\";\n\nclass LocalIdentificationBlock extends HexBlock(LocalBaseBlock) {\r\n    constructor({ idBlock = {}, } = {}) {\r\n        var _a, _b, _c, _d;\r\n        super();\r\n        if (idBlock) {\r\n            this.isHexOnly = (_a = idBlock.isHexOnly) !== null && _a !== void 0 ? _a : false;\r\n            this.valueHexView = idBlock.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(idBlock.valueHex) : EMPTY_VIEW;\r\n            this.tagClass = (_b = idBlock.tagClass) !== null && _b !== void 0 ? _b : -1;\r\n            this.tagNumber = (_c = idBlock.tagNumber) !== null && _c !== void 0 ? _c : -1;\r\n            this.isConstructed = (_d = idBlock.isConstructed) !== null && _d !== void 0 ? _d : false;\r\n        }\r\n        else {\r\n            this.tagClass = -1;\r\n            this.tagNumber = -1;\r\n            this.isConstructed = false;\r\n        }\r\n    }\r\n    toBER(sizeOnly = false) {\r\n        let firstOctet = 0;\r\n        switch (this.tagClass) {\r\n            case 1:\r\n                firstOctet |= 0x00;\r\n                break;\r\n            case 2:\r\n                firstOctet |= 0x40;\r\n                break;\r\n            case 3:\r\n                firstOctet |= 0x80;\r\n                break;\r\n            case 4:\r\n                firstOctet |= 0xC0;\r\n                break;\r\n            default:\r\n                this.error = \"Unknown tag class\";\r\n                return EMPTY_BUFFER;\r\n        }\r\n        if (this.isConstructed)\r\n            firstOctet |= 0x20;\r\n        if (this.tagNumber < 31 && !this.isHexOnly) {\r\n            const retView = new Uint8Array(1);\r\n            if (!sizeOnly) {\r\n                let number = this.tagNumber;\r\n                number &= 0x1F;\r\n                firstOctet |= number;\r\n                retView[0] = firstOctet;\r\n            }\r\n            return retView.buffer;\r\n        }\r\n        if (!this.isHexOnly) {\r\n            const encodedBuf = pvutils.utilToBase(this.tagNumber, 7);\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const size = encodedBuf.byteLength;\r\n            const retView = new Uint8Array(size + 1);\r\n            retView[0] = (firstOctet | 0x1F);\r\n            if (!sizeOnly) {\r\n                for (let i = 0; i < (size - 1); i++)\r\n                    retView[i + 1] = encodedView[i] | 0x80;\r\n                retView[size] = encodedView[size - 1];\r\n            }\r\n            return retView.buffer;\r\n        }\r\n        const retView = new Uint8Array(this.valueHexView.byteLength + 1);\r\n        retView[0] = (firstOctet | 0x1F);\r\n        if (!sizeOnly) {\r\n            const curView = this.valueHexView;\r\n            for (let i = 0; i < (curView.length - 1); i++)\r\n                retView[i + 1] = curView[i] | 0x80;\r\n            retView[this.valueHexView.byteLength] = curView[curView.length - 1];\r\n        }\r\n        return retView.buffer;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        if (intBuffer.length === 0) {\r\n            this.error = \"Zero buffer length\";\r\n            return -1;\r\n        }\r\n        const tagClassMask = intBuffer[0] & 0xC0;\r\n        switch (tagClassMask) {\r\n            case 0x00:\r\n                this.tagClass = (1);\r\n                break;\r\n            case 0x40:\r\n                this.tagClass = (2);\r\n                break;\r\n            case 0x80:\r\n                this.tagClass = (3);\r\n                break;\r\n            case 0xC0:\r\n                this.tagClass = (4);\r\n                break;\r\n            default:\r\n                this.error = \"Unknown tag class\";\r\n                return -1;\r\n        }\r\n        this.isConstructed = (intBuffer[0] & 0x20) === 0x20;\r\n        this.isHexOnly = false;\r\n        const tagNumberMask = intBuffer[0] & 0x1F;\r\n        if (tagNumberMask !== 0x1F) {\r\n            this.tagNumber = (tagNumberMask);\r\n            this.blockLength = 1;\r\n        }\r\n        else {\r\n            let count = 1;\r\n            let intTagNumberBuffer = this.valueHexView = new Uint8Array(255);\r\n            let tagNumberBufferMaxLength = 255;\r\n            while (intBuffer[count] & 0x80) {\r\n                intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\r\n                count++;\r\n                if (count >= intBuffer.length) {\r\n                    this.error = \"End of input reached before message was fully decoded\";\r\n                    return -1;\r\n                }\r\n                if (count === tagNumberBufferMaxLength) {\r\n                    tagNumberBufferMaxLength += 255;\r\n                    const tempBufferView = new Uint8Array(tagNumberBufferMaxLength);\r\n                    for (let i = 0; i < intTagNumberBuffer.length; i++)\r\n                        tempBufferView[i] = intTagNumberBuffer[i];\r\n                    intTagNumberBuffer = this.valueHexView = new Uint8Array(tagNumberBufferMaxLength);\r\n                }\r\n            }\r\n            this.blockLength = (count + 1);\r\n            intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\r\n            const tempBufferView = new Uint8Array(count);\r\n            for (let i = 0; i < count; i++)\r\n                tempBufferView[i] = intTagNumberBuffer[i];\r\n            intTagNumberBuffer = this.valueHexView = new Uint8Array(count);\r\n            intTagNumberBuffer.set(tempBufferView);\r\n            if (this.blockLength <= 9)\r\n                this.tagNumber = pvutils.utilFromBase(intTagNumberBuffer, 7);\r\n            else {\r\n                this.isHexOnly = true;\r\n                this.warnings.push(\"Tag too long, represented as hex-coded\");\r\n            }\r\n        }\r\n        if (((this.tagClass === 1)) &&\r\n            (this.isConstructed)) {\r\n            switch (this.tagNumber) {\r\n                case 1:\r\n                case 2:\r\n                case 5:\r\n                case 6:\r\n                case 9:\r\n                case 13:\r\n                case 14:\r\n                case 23:\r\n                case 24:\r\n                case 31:\r\n                case 32:\r\n                case 33:\r\n                case 34:\r\n                    this.error = \"Constructed encoding used for primitive type\";\r\n                    return -1;\r\n            }\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            tagClass: this.tagClass,\r\n            tagNumber: this.tagNumber,\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalIdentificationBlock.NAME = \"identificationBlock\";\n\nclass LocalLengthBlock extends LocalBaseBlock {\r\n    constructor({ lenBlock = {}, } = {}) {\r\n        var _a, _b, _c;\r\n        super();\r\n        this.isIndefiniteForm = (_a = lenBlock.isIndefiniteForm) !== null && _a !== void 0 ? _a : false;\r\n        this.longFormUsed = (_b = lenBlock.longFormUsed) !== null && _b !== void 0 ? _b : false;\r\n        this.length = (_c = lenBlock.length) !== null && _c !== void 0 ? _c : 0;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = view.subarray(inputOffset, inputOffset + inputLength);\r\n        if (intBuffer.length === 0) {\r\n            this.error = \"Zero buffer length\";\r\n            return -1;\r\n        }\r\n        if (intBuffer[0] === 0xFF) {\r\n            this.error = \"Length block 0xFF is reserved by standard\";\r\n            return -1;\r\n        }\r\n        this.isIndefiniteForm = intBuffer[0] === 0x80;\r\n        if (this.isIndefiniteForm) {\r\n            this.blockLength = 1;\r\n            return (inputOffset + this.blockLength);\r\n        }\r\n        this.longFormUsed = !!(intBuffer[0] & 0x80);\r\n        if (this.longFormUsed === false) {\r\n            this.length = (intBuffer[0]);\r\n            this.blockLength = 1;\r\n            return (inputOffset + this.blockLength);\r\n        }\r\n        const count = intBuffer[0] & 0x7F;\r\n        if (count > 8) {\r\n            this.error = \"Too big integer\";\r\n            return -1;\r\n        }\r\n        if ((count + 1) > intBuffer.length) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        const lenOffset = inputOffset + 1;\r\n        const lengthBufferView = view.subarray(lenOffset, lenOffset + count);\r\n        if (lengthBufferView[count - 1] === 0x00)\r\n            this.warnings.push(\"Needlessly long encoded length\");\r\n        this.length = pvutils.utilFromBase(lengthBufferView, 8);\r\n        if (this.longFormUsed && (this.length <= 127))\r\n            this.warnings.push(\"Unnecessary usage of long length form\");\r\n        this.blockLength = count + 1;\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toBER(sizeOnly = false) {\r\n        let retBuf;\r\n        let retView;\r\n        if (this.length > 127)\r\n            this.longFormUsed = true;\r\n        if (this.isIndefiniteForm) {\r\n            retBuf = new ArrayBuffer(1);\r\n            if (sizeOnly === false) {\r\n                retView = new Uint8Array(retBuf);\r\n                retView[0] = 0x80;\r\n            }\r\n            return retBuf;\r\n        }\r\n        if (this.longFormUsed) {\r\n            const encodedBuf = pvutils.utilToBase(this.length, 8);\r\n            if (encodedBuf.byteLength > 127) {\r\n                this.error = \"Too big length\";\r\n                return (EMPTY_BUFFER);\r\n            }\r\n            retBuf = new ArrayBuffer(encodedBuf.byteLength + 1);\r\n            if (sizeOnly)\r\n                return retBuf;\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            retView = new Uint8Array(retBuf);\r\n            retView[0] = encodedBuf.byteLength | 0x80;\r\n            for (let i = 0; i < encodedBuf.byteLength; i++)\r\n                retView[i + 1] = encodedView[i];\r\n            return retBuf;\r\n        }\r\n        retBuf = new ArrayBuffer(1);\r\n        if (sizeOnly === false) {\r\n            retView = new Uint8Array(retBuf);\r\n            retView[0] = this.length;\r\n        }\r\n        return retBuf;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            isIndefiniteForm: this.isIndefiniteForm,\r\n            longFormUsed: this.longFormUsed,\r\n            length: this.length,\r\n        };\r\n    }\r\n}\r\nLocalLengthBlock.NAME = \"lengthBlock\";\n\nconst typeStore = {};\n\nclass BaseBlock extends LocalBaseBlock {\r\n    constructor({ name = EMPTY_STRING, optional = false, primitiveSchema, ...parameters } = {}, valueBlockType) {\r\n        super(parameters);\r\n        this.name = name;\r\n        this.optional = optional;\r\n        if (primitiveSchema) {\r\n            this.primitiveSchema = primitiveSchema;\r\n        }\r\n        this.idBlock = new LocalIdentificationBlock(parameters);\r\n        this.lenBlock = new LocalLengthBlock(parameters);\r\n        this.valueBlock = valueBlockType ? new valueBlockType(parameters) : new ValueBlock(parameters);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const _writer = writer || new ViewWriter();\r\n        if (!writer) {\r\n            prepareIndefiniteForm(this);\r\n        }\r\n        const idBlockBuf = this.idBlock.toBER(sizeOnly);\r\n        _writer.write(idBlockBuf);\r\n        if (this.lenBlock.isIndefiniteForm) {\r\n            _writer.write(new Uint8Array([0x80]).buffer);\r\n            this.valueBlock.toBER(sizeOnly, _writer);\r\n            _writer.write(new ArrayBuffer(2));\r\n        }\r\n        else {\r\n            const valueBlockBuf = this.valueBlock.toBER(sizeOnly);\r\n            this.lenBlock.length = valueBlockBuf.byteLength;\r\n            const lenBlockBuf = this.lenBlock.toBER(sizeOnly);\r\n            _writer.write(lenBlockBuf);\r\n            _writer.write(valueBlockBuf);\r\n        }\r\n        if (!writer) {\r\n            return _writer.final();\r\n        }\r\n        return EMPTY_BUFFER;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            idBlock: this.idBlock.toJSON(),\r\n            lenBlock: this.lenBlock.toJSON(),\r\n            valueBlock: this.valueBlock.toJSON(),\r\n            name: this.name,\r\n            optional: this.optional,\r\n        };\r\n        if (this.primitiveSchema)\r\n            object.primitiveSchema = this.primitiveSchema.toJSON();\r\n        return object;\r\n    }\r\n    toString(encoding = \"ascii\") {\r\n        if (encoding === \"ascii\") {\r\n            return this.onAsciiEncoding();\r\n        }\r\n        return pvtsutils.Convert.ToHex(this.toBER());\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${pvtsutils.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`;\r\n    }\r\n    isEqual(other) {\r\n        if (this === other) {\r\n            return true;\r\n        }\r\n        if (!(other instanceof this.constructor)) {\r\n            return false;\r\n        }\r\n        const thisRaw = this.toBER();\r\n        const otherRaw = other.toBER();\r\n        return pvutils.isEqualBuffer(thisRaw, otherRaw);\r\n    }\r\n}\r\nBaseBlock.NAME = \"BaseBlock\";\r\nfunction prepareIndefiniteForm(baseBlock) {\r\n    if (baseBlock instanceof typeStore.Constructed) {\r\n        for (const value of baseBlock.valueBlock.value) {\r\n            if (prepareIndefiniteForm(value)) {\r\n                baseBlock.lenBlock.isIndefiniteForm = true;\r\n            }\r\n        }\r\n    }\r\n    return !!baseBlock.lenBlock.isIndefiniteForm;\r\n}\n\nclass BaseStringBlock extends BaseBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}, stringValueBlockType) {\r\n        super(parameters, stringValueBlockType);\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.value;\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.value = value;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        this.fromBuffer(this.valueBlock.valueHexView);\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : '${this.valueBlock.value}'`;\r\n    }\r\n}\r\nBaseStringBlock.NAME = \"BaseStringBlock\";\n\nclass LocalPrimitiveValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ isHexOnly = true, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isHexOnly = isHexOnly;\r\n    }\r\n}\r\nLocalPrimitiveValueBlock.NAME = \"PrimitiveValueBlock\";\n\nvar _a$w;\r\nclass Primitive extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalPrimitiveValueBlock);\r\n        this.idBlock.isConstructed = false;\r\n    }\r\n}\r\n_a$w = Primitive;\r\n(() => {\r\n    typeStore.Primitive = _a$w;\r\n})();\r\nPrimitive.NAME = \"PRIMITIVE\";\n\nfunction localChangeType(inputObject, newType) {\r\n    if (inputObject instanceof newType) {\r\n        return inputObject;\r\n    }\r\n    const newObject = new newType();\r\n    newObject.idBlock = inputObject.idBlock;\r\n    newObject.lenBlock = inputObject.lenBlock;\r\n    newObject.warnings = inputObject.warnings;\r\n    newObject.valueBeforeDecodeView = inputObject.valueBeforeDecodeView;\r\n    return newObject;\r\n}\r\nfunction localFromBER(inputBuffer, inputOffset = 0, inputLength = inputBuffer.length) {\r\n    const incomingOffset = inputOffset;\r\n    let returnObject = new BaseBlock({}, ValueBlock);\r\n    const baseBlock = new LocalBaseBlock();\r\n    if (!checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)) {\r\n        returnObject.error = baseBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    const intBuffer = inputBuffer.subarray(inputOffset, inputOffset + inputLength);\r\n    if (!intBuffer.length) {\r\n        returnObject.error = \"Zero buffer length\";\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    let resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);\r\n    if (returnObject.idBlock.warnings.length) {\r\n        returnObject.warnings.concat(returnObject.idBlock.warnings);\r\n    }\r\n    if (resultOffset === -1) {\r\n        returnObject.error = returnObject.idBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    inputOffset = resultOffset;\r\n    inputLength -= returnObject.idBlock.blockLength;\r\n    resultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);\r\n    if (returnObject.lenBlock.warnings.length) {\r\n        returnObject.warnings.concat(returnObject.lenBlock.warnings);\r\n    }\r\n    if (resultOffset === -1) {\r\n        returnObject.error = returnObject.lenBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    inputOffset = resultOffset;\r\n    inputLength -= returnObject.lenBlock.blockLength;\r\n    if (!returnObject.idBlock.isConstructed &&\r\n        returnObject.lenBlock.isIndefiniteForm) {\r\n        returnObject.error = \"Indefinite length form used for primitive encoding form\";\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    let newASN1Type = BaseBlock;\r\n    switch (returnObject.idBlock.tagClass) {\r\n        case 1:\r\n            if ((returnObject.idBlock.tagNumber >= 37) &&\r\n                (returnObject.idBlock.isHexOnly === false)) {\r\n                returnObject.error = \"UNIVERSAL 37 and upper tags are reserved by ASN.1 standard\";\r\n                return {\r\n                    offset: -1,\r\n                    result: returnObject\r\n                };\r\n            }\r\n            switch (returnObject.idBlock.tagNumber) {\r\n                case 0:\r\n                    if ((returnObject.idBlock.isConstructed) &&\r\n                        (returnObject.lenBlock.length > 0)) {\r\n                        returnObject.error = \"Type [UNIVERSAL 0] is reserved\";\r\n                        return {\r\n                            offset: -1,\r\n                            result: returnObject\r\n                        };\r\n                    }\r\n                    newASN1Type = typeStore.EndOfContent;\r\n                    break;\r\n                case 1:\r\n                    newASN1Type = typeStore.Boolean;\r\n                    break;\r\n                case 2:\r\n                    newASN1Type = typeStore.Integer;\r\n                    break;\r\n                case 3:\r\n                    newASN1Type = typeStore.BitString;\r\n                    break;\r\n                case 4:\r\n                    newASN1Type = typeStore.OctetString;\r\n                    break;\r\n                case 5:\r\n                    newASN1Type = typeStore.Null;\r\n                    break;\r\n                case 6:\r\n                    newASN1Type = typeStore.ObjectIdentifier;\r\n                    break;\r\n                case 10:\r\n                    newASN1Type = typeStore.Enumerated;\r\n                    break;\r\n                case 12:\r\n                    newASN1Type = typeStore.Utf8String;\r\n                    break;\r\n                case 13:\r\n                    newASN1Type = typeStore.RelativeObjectIdentifier;\r\n                    break;\r\n                case 14:\r\n                    newASN1Type = typeStore.TIME;\r\n                    break;\r\n                case 15:\r\n                    returnObject.error = \"[UNIVERSAL 15] is reserved by ASN.1 standard\";\r\n                    return {\r\n                        offset: -1,\r\n                        result: returnObject\r\n                    };\r\n                case 16:\r\n                    newASN1Type = typeStore.Sequence;\r\n                    break;\r\n                case 17:\r\n                    newASN1Type = typeStore.Set;\r\n                    break;\r\n                case 18:\r\n                    newASN1Type = typeStore.NumericString;\r\n                    break;\r\n                case 19:\r\n                    newASN1Type = typeStore.PrintableString;\r\n                    break;\r\n                case 20:\r\n                    newASN1Type = typeStore.TeletexString;\r\n                    break;\r\n                case 21:\r\n                    newASN1Type = typeStore.VideotexString;\r\n                    break;\r\n                case 22:\r\n                    newASN1Type = typeStore.IA5String;\r\n                    break;\r\n                case 23:\r\n                    newASN1Type = typeStore.UTCTime;\r\n                    break;\r\n                case 24:\r\n                    newASN1Type = typeStore.GeneralizedTime;\r\n                    break;\r\n                case 25:\r\n                    newASN1Type = typeStore.GraphicString;\r\n                    break;\r\n                case 26:\r\n                    newASN1Type = typeStore.VisibleString;\r\n                    break;\r\n                case 27:\r\n                    newASN1Type = typeStore.GeneralString;\r\n                    break;\r\n                case 28:\r\n                    newASN1Type = typeStore.UniversalString;\r\n                    break;\r\n                case 29:\r\n                    newASN1Type = typeStore.CharacterString;\r\n                    break;\r\n                case 30:\r\n                    newASN1Type = typeStore.BmpString;\r\n                    break;\r\n                case 31:\r\n                    newASN1Type = typeStore.DATE;\r\n                    break;\r\n                case 32:\r\n                    newASN1Type = typeStore.TimeOfDay;\r\n                    break;\r\n                case 33:\r\n                    newASN1Type = typeStore.DateTime;\r\n                    break;\r\n                case 34:\r\n                    newASN1Type = typeStore.Duration;\r\n                    break;\r\n                default: {\r\n                    const newObject = returnObject.idBlock.isConstructed\r\n                        ? new typeStore.Constructed()\r\n                        : new typeStore.Primitive();\r\n                    newObject.idBlock = returnObject.idBlock;\r\n                    newObject.lenBlock = returnObject.lenBlock;\r\n                    newObject.warnings = returnObject.warnings;\r\n                    returnObject = newObject;\r\n                }\r\n            }\r\n            break;\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n        default: {\r\n            newASN1Type = returnObject.idBlock.isConstructed\r\n                ? typeStore.Constructed\r\n                : typeStore.Primitive;\r\n        }\r\n    }\r\n    returnObject = localChangeType(returnObject, newASN1Type);\r\n    resultOffset = returnObject.fromBER(inputBuffer, inputOffset, returnObject.lenBlock.isIndefiniteForm ? inputLength : returnObject.lenBlock.length);\r\n    returnObject.valueBeforeDecodeView = inputBuffer.subarray(incomingOffset, incomingOffset + returnObject.blockLength);\r\n    return {\r\n        offset: resultOffset,\r\n        result: returnObject\r\n    };\r\n}\r\nfunction fromBER(inputBuffer) {\r\n    if (!inputBuffer.byteLength) {\r\n        const result = new BaseBlock({}, ValueBlock);\r\n        result.error = \"Input buffer has zero length\";\r\n        return {\r\n            offset: -1,\r\n            result\r\n        };\r\n    }\r\n    return localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).slice(), 0, inputBuffer.byteLength);\r\n}\n\nfunction checkLen(indefiniteLength, length) {\r\n    if (indefiniteLength) {\r\n        return 1;\r\n    }\r\n    return length;\r\n}\r\nclass LocalConstructedValueBlock extends ValueBlock {\r\n    constructor({ value = [], isIndefiniteForm = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n        this.isIndefiniteForm = isIndefiniteForm;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        this.valueBeforeDecodeView = view.subarray(inputOffset, inputOffset + inputLength);\r\n        if (this.valueBeforeDecodeView.length === 0) {\r\n            this.warnings.push(\"Zero buffer length\");\r\n            return inputOffset;\r\n        }\r\n        let currentOffset = inputOffset;\r\n        while (checkLen(this.isIndefiniteForm, inputLength) > 0) {\r\n            const returnObject = localFromBER(view, currentOffset, inputLength);\r\n            if (returnObject.offset === -1) {\r\n                this.error = returnObject.result.error;\r\n                this.warnings.concat(returnObject.result.warnings);\r\n                return -1;\r\n            }\r\n            currentOffset = returnObject.offset;\r\n            this.blockLength += returnObject.result.blockLength;\r\n            inputLength -= returnObject.result.blockLength;\r\n            this.value.push(returnObject.result);\r\n            if (this.isIndefiniteForm && returnObject.result.constructor.NAME === END_OF_CONTENT_NAME) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.isIndefiniteForm) {\r\n            if (this.value[this.value.length - 1].constructor.NAME === END_OF_CONTENT_NAME) {\r\n                this.value.pop();\r\n            }\r\n            else {\r\n                this.warnings.push(\"No EndOfContent block encoded\");\r\n            }\r\n        }\r\n        return currentOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const _writer = writer || new ViewWriter();\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            this.value[i].toBER(sizeOnly, _writer);\r\n        }\r\n        if (!writer) {\r\n            return _writer.final();\r\n        }\r\n        return EMPTY_BUFFER;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            isIndefiniteForm: this.isIndefiniteForm,\r\n            value: [],\r\n        };\r\n        for (const value of this.value) {\r\n            object.value.push(value.toJSON());\r\n        }\r\n        return object;\r\n    }\r\n}\r\nLocalConstructedValueBlock.NAME = \"ConstructedValueBlock\";\n\nvar _a$v;\r\nclass Constructed extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalConstructedValueBlock);\r\n        this.idBlock.isConstructed = true;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    onAsciiEncoding() {\r\n        const values = [];\r\n        for (const value of this.valueBlock.value) {\r\n            values.push(value.toString(\"ascii\").split(\"\\n\").map(o => `  ${o}`).join(\"\\n\"));\r\n        }\r\n        const blockName = this.idBlock.tagClass === 3\r\n            ? `[${this.idBlock.tagNumber}]`\r\n            : this.constructor.NAME;\r\n        return values.length\r\n            ? `${blockName} :\\n${values.join(\"\\n\")}`\r\n            : `${blockName} :`;\r\n    }\r\n}\r\n_a$v = Constructed;\r\n(() => {\r\n    typeStore.Constructed = _a$v;\r\n})();\r\nConstructed.NAME = \"CONSTRUCTED\";\n\nclass LocalEndOfContentValueBlock extends ValueBlock {\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        return inputOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return EMPTY_BUFFER;\r\n    }\r\n}\r\nLocalEndOfContentValueBlock.override = \"EndOfContentValueBlock\";\n\nvar _a$u;\r\nclass EndOfContent extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalEndOfContentValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 0;\r\n    }\r\n}\r\n_a$u = EndOfContent;\r\n(() => {\r\n    typeStore.EndOfContent = _a$u;\r\n})();\r\nEndOfContent.NAME = END_OF_CONTENT_NAME;\n\nvar _a$t;\r\nclass Null extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, ValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 5;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (this.lenBlock.length > 0)\r\n            this.warnings.push(\"Non-zero length of value block for Null type\");\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        this.blockLength += inputLength;\r\n        if ((inputOffset + inputLength) > inputBuffer.byteLength) {\r\n            this.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n            return -1;\r\n        }\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const retBuf = new ArrayBuffer(2);\r\n        if (!sizeOnly) {\r\n            const retView = new Uint8Array(retBuf);\r\n            retView[0] = 0x05;\r\n            retView[1] = 0x00;\r\n        }\r\n        if (writer) {\r\n            writer.write(retBuf);\r\n        }\r\n        return retBuf;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME}`;\r\n    }\r\n}\r\n_a$t = Null;\r\n(() => {\r\n    typeStore.Null = _a$t;\r\n})();\r\nNull.NAME = \"NULL\";\n\nclass LocalBooleanValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ value, ...parameters } = {}) {\r\n        super(parameters);\r\n        if (parameters.valueHex) {\r\n            this.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(parameters.valueHex);\r\n        }\r\n        else {\r\n            this.valueHexView = new Uint8Array(1);\r\n        }\r\n        if (value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n    get value() {\r\n        for (const octet of this.valueHexView) {\r\n            if (octet > 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    set value(value) {\r\n        this.valueHexView[0] = value ? 0xFF : 0x00;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        this.valueHexView = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        if (inputLength > 1)\r\n            this.warnings.push(\"Boolean value encoded in more then 1 octet\");\r\n        this.isHexOnly = true;\r\n        pvutils.utilDecodeTC.call(this);\r\n        this.blockLength = inputLength;\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER() {\r\n        return this.valueHexView.slice();\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.value,\r\n        };\r\n    }\r\n}\r\nLocalBooleanValueBlock.NAME = \"BooleanValueBlock\";\n\nvar _a$s;\r\nclass Boolean extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalBooleanValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 1;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.value;\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.value = value;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.getValue}`;\r\n    }\r\n}\r\n_a$s = Boolean;\r\n(() => {\r\n    typeStore.Boolean = _a$s;\r\n})();\r\nBoolean.NAME = \"BOOLEAN\";\n\nclass LocalOctetStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\r\n    constructor({ isConstructed = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isConstructed = isConstructed;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = 0;\r\n        if (this.isConstructed) {\r\n            this.isHexOnly = false;\r\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\r\n            if (resultOffset === -1)\r\n                return resultOffset;\r\n            for (let i = 0; i < this.value.length; i++) {\r\n                const currentBlockName = this.value[i].constructor.NAME;\r\n                if (currentBlockName === END_OF_CONTENT_NAME) {\r\n                    if (this.isIndefiniteForm)\r\n                        break;\r\n                    else {\r\n                        this.error = \"EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only\";\r\n                        return -1;\r\n                    }\r\n                }\r\n                if (currentBlockName !== OCTET_STRING_NAME) {\r\n                    this.error = \"OCTET STRING may consists of OCTET STRINGs only\";\r\n                    return -1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.isHexOnly = true;\r\n            resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\r\n            this.blockLength = inputLength;\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        if (this.isConstructed)\r\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\r\n        return sizeOnly\r\n            ? new ArrayBuffer(this.valueHexView.byteLength)\r\n            : this.valueHexView.slice().buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalOctetStringValueBlock.NAME = \"OctetStringValueBlock\";\n\nvar _a$r;\r\nclass OctetString extends BaseBlock {\r\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\r\n        var _b, _c;\r\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\r\n        super({\r\n            idBlock: {\r\n                isConstructed: parameters.isConstructed,\r\n                ...idBlock,\r\n            },\r\n            lenBlock: {\r\n                ...lenBlock,\r\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\r\n            },\r\n            ...parameters,\r\n        }, LocalOctetStringValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 4;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        if (inputLength === 0) {\r\n            if (this.idBlock.error.length === 0)\r\n                this.blockLength += this.idBlock.blockLength;\r\n            if (this.lenBlock.error.length === 0)\r\n                this.blockLength += this.lenBlock.blockLength;\r\n            return inputOffset;\r\n        }\r\n        if (!this.valueBlock.isConstructed) {\r\n            const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\r\n            const buf = view.subarray(inputOffset, inputOffset + inputLength);\r\n            try {\r\n                if (buf.byteLength) {\r\n                    const asn = localFromBER(buf, 0, buf.byteLength);\r\n                    if (asn.offset !== -1 && asn.offset === inputLength) {\r\n                        this.valueBlock.value = [asn.result];\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\r\n    }\r\n    onAsciiEncoding() {\r\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\r\n            return Constructed.prototype.onAsciiEncoding.call(this);\r\n        }\r\n        return `${this.constructor.NAME} : ${pvtsutils.Convert.ToHex(this.valueBlock.valueHexView)}`;\r\n    }\r\n    getValue() {\r\n        if (!this.idBlock.isConstructed) {\r\n            return this.valueBlock.valueHexView.slice().buffer;\r\n        }\r\n        const array = [];\r\n        for (const content of this.valueBlock.value) {\r\n            if (content instanceof OctetString) {\r\n                array.push(content.valueBlock.valueHexView);\r\n            }\r\n        }\r\n        return pvtsutils.BufferSourceConverter.concat(array);\r\n    }\r\n}\r\n_a$r = OctetString;\r\n(() => {\r\n    typeStore.OctetString = _a$r;\r\n})();\r\nOctetString.NAME = OCTET_STRING_NAME;\n\nclass LocalBitStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\r\n    constructor({ unusedBits = 0, isConstructed = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.unusedBits = unusedBits;\r\n        this.isConstructed = isConstructed;\r\n        this.blockLength = this.valueHexView.byteLength;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (!inputLength) {\r\n            return inputOffset;\r\n        }\r\n        let resultOffset = -1;\r\n        if (this.isConstructed) {\r\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\r\n            if (resultOffset === -1)\r\n                return resultOffset;\r\n            for (const value of this.value) {\r\n                const currentBlockName = value.constructor.NAME;\r\n                if (currentBlockName === END_OF_CONTENT_NAME) {\r\n                    if (this.isIndefiniteForm)\r\n                        break;\r\n                    else {\r\n                        this.error = \"EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only\";\r\n                        return -1;\r\n                    }\r\n                }\r\n                if (currentBlockName !== BIT_STRING_NAME) {\r\n                    this.error = \"BIT STRING may consists of BIT STRINGs only\";\r\n                    return -1;\r\n                }\r\n                const valueBlock = value.valueBlock;\r\n                if ((this.unusedBits > 0) && (valueBlock.unusedBits > 0)) {\r\n                    this.error = \"Using of \\\"unused bits\\\" inside constructive BIT STRING allowed for least one only\";\r\n                    return -1;\r\n                }\r\n                this.unusedBits = valueBlock.unusedBits;\r\n            }\r\n            return resultOffset;\r\n        }\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.unusedBits = intBuffer[0];\r\n        if (this.unusedBits > 7) {\r\n            this.error = \"Unused bits for BitString must be in range 0-7\";\r\n            return -1;\r\n        }\r\n        if (!this.unusedBits) {\r\n            const buf = intBuffer.subarray(1);\r\n            try {\r\n                if (buf.byteLength) {\r\n                    const asn = localFromBER(buf, 0, buf.byteLength);\r\n                    if (asn.offset !== -1 && asn.offset === (inputLength - 1)) {\r\n                        this.value = [asn.result];\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        this.valueHexView = intBuffer.subarray(1);\r\n        this.blockLength = intBuffer.length;\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        if (this.isConstructed) {\r\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\r\n        }\r\n        if (sizeOnly) {\r\n            return new ArrayBuffer(this.valueHexView.byteLength + 1);\r\n        }\r\n        if (!this.valueHexView.byteLength) {\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(this.valueHexView.length + 1);\r\n        retView[0] = this.unusedBits;\r\n        retView.set(this.valueHexView, 1);\r\n        return retView.buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            unusedBits: this.unusedBits,\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalBitStringValueBlock.NAME = \"BitStringValueBlock\";\n\nvar _a$q;\r\nclass BitString extends BaseBlock {\r\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\r\n        var _b, _c;\r\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\r\n        super({\r\n            idBlock: {\r\n                isConstructed: parameters.isConstructed,\r\n                ...idBlock,\r\n            },\r\n            lenBlock: {\r\n                ...lenBlock,\r\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\r\n            },\r\n            ...parameters,\r\n        }, LocalBitStringValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 3;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\r\n    }\r\n    onAsciiEncoding() {\r\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\r\n            return Constructed.prototype.onAsciiEncoding.call(this);\r\n        }\r\n        else {\r\n            const bits = [];\r\n            const valueHex = this.valueBlock.valueHexView;\r\n            for (const byte of valueHex) {\r\n                bits.push(byte.toString(2).padStart(8, \"0\"));\r\n            }\r\n            const bitsStr = bits.join(\"\");\r\n            return `${this.constructor.NAME} : ${bitsStr.substring(0, bitsStr.length - this.valueBlock.unusedBits)}`;\r\n        }\r\n    }\r\n}\r\n_a$q = BitString;\r\n(() => {\r\n    typeStore.BitString = _a$q;\r\n})();\r\nBitString.NAME = BIT_STRING_NAME;\n\nvar _a$p;\r\nfunction viewAdd(first, second) {\r\n    const c = new Uint8Array([0]);\r\n    const firstView = new Uint8Array(first);\r\n    const secondView = new Uint8Array(second);\r\n    let firstViewCopy = firstView.slice(0);\r\n    const firstViewCopyLength = firstViewCopy.length - 1;\r\n    const secondViewCopy = secondView.slice(0);\r\n    const secondViewCopyLength = secondViewCopy.length - 1;\r\n    let value = 0;\r\n    const max = (secondViewCopyLength < firstViewCopyLength) ? firstViewCopyLength : secondViewCopyLength;\r\n    let counter = 0;\r\n    for (let i = max; i >= 0; i--, counter++) {\r\n        switch (true) {\r\n            case (counter < secondViewCopy.length):\r\n                value = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];\r\n                break;\r\n            default:\r\n                value = firstViewCopy[firstViewCopyLength - counter] + c[0];\r\n        }\r\n        c[0] = value / 10;\r\n        switch (true) {\r\n            case (counter >= firstViewCopy.length):\r\n                firstViewCopy = pvutils.utilConcatView(new Uint8Array([value % 10]), firstViewCopy);\r\n                break;\r\n            default:\r\n                firstViewCopy[firstViewCopyLength - counter] = value % 10;\r\n        }\r\n    }\r\n    if (c[0] > 0)\r\n        firstViewCopy = pvutils.utilConcatView(c, firstViewCopy);\r\n    return firstViewCopy;\r\n}\r\nfunction power2(n) {\r\n    if (n >= powers2.length) {\r\n        for (let p = powers2.length; p <= n; p++) {\r\n            const c = new Uint8Array([0]);\r\n            let digits = (powers2[p - 1]).slice(0);\r\n            for (let i = (digits.length - 1); i >= 0; i--) {\r\n                const newValue = new Uint8Array([(digits[i] << 1) + c[0]]);\r\n                c[0] = newValue[0] / 10;\r\n                digits[i] = newValue[0] % 10;\r\n            }\r\n            if (c[0] > 0)\r\n                digits = pvutils.utilConcatView(c, digits);\r\n            powers2.push(digits);\r\n        }\r\n    }\r\n    return powers2[n];\r\n}\r\nfunction viewSub(first, second) {\r\n    let b = 0;\r\n    const firstView = new Uint8Array(first);\r\n    const secondView = new Uint8Array(second);\r\n    const firstViewCopy = firstView.slice(0);\r\n    const firstViewCopyLength = firstViewCopy.length - 1;\r\n    const secondViewCopy = secondView.slice(0);\r\n    const secondViewCopyLength = secondViewCopy.length - 1;\r\n    let value;\r\n    let counter = 0;\r\n    for (let i = secondViewCopyLength; i >= 0; i--, counter++) {\r\n        value = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;\r\n        switch (true) {\r\n            case (value < 0):\r\n                b = 1;\r\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\r\n                break;\r\n            default:\r\n                b = 0;\r\n                firstViewCopy[firstViewCopyLength - counter] = value;\r\n        }\r\n    }\r\n    if (b > 0) {\r\n        for (let i = (firstViewCopyLength - secondViewCopyLength + 1); i >= 0; i--, counter++) {\r\n            value = firstViewCopy[firstViewCopyLength - counter] - b;\r\n            if (value < 0) {\r\n                b = 1;\r\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\r\n            }\r\n            else {\r\n                b = 0;\r\n                firstViewCopy[firstViewCopyLength - counter] = value;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return firstViewCopy.slice();\r\n}\r\nclass LocalIntegerValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ value, ...parameters } = {}) {\r\n        super(parameters);\r\n        this._valueDec = 0;\r\n        if (parameters.valueHex) {\r\n            this.setValueHex();\r\n        }\r\n        if (value !== undefined) {\r\n            this.valueDec = value;\r\n        }\r\n    }\r\n    setValueHex() {\r\n        if (this.valueHexView.length >= 4) {\r\n            this.warnings.push(\"Too big Integer for decoding, hex only\");\r\n            this.isHexOnly = true;\r\n            this._valueDec = 0;\r\n        }\r\n        else {\r\n            this.isHexOnly = false;\r\n            if (this.valueHexView.length > 0) {\r\n                this._valueDec = pvutils.utilDecodeTC.call(this);\r\n            }\r\n        }\r\n    }\r\n    set valueDec(v) {\r\n        this._valueDec = v;\r\n        this.isHexOnly = false;\r\n        this.valueHexView = new Uint8Array(pvutils.utilEncodeTC(v));\r\n    }\r\n    get valueDec() {\r\n        return this._valueDec;\r\n    }\r\n    fromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0) {\r\n        const offset = this.fromBER(inputBuffer, inputOffset, inputLength);\r\n        if (offset === -1)\r\n            return offset;\r\n        const view = this.valueHexView;\r\n        if ((view[0] === 0x00) && ((view[1] & 0x80) !== 0)) {\r\n            this.valueHexView = view.subarray(1);\r\n        }\r\n        else {\r\n            if (expectedLength !== 0) {\r\n                if (view.length < expectedLength) {\r\n                    if ((expectedLength - view.length) > 1)\r\n                        expectedLength = view.length + 1;\r\n                    this.valueHexView = view.subarray(expectedLength - view.length);\r\n                }\r\n            }\r\n        }\r\n        return offset;\r\n    }\r\n    toDER(sizeOnly = false) {\r\n        const view = this.valueHexView;\r\n        switch (true) {\r\n            case ((view[0] & 0x80) !== 0):\r\n                {\r\n                    const updatedView = new Uint8Array(this.valueHexView.length + 1);\r\n                    updatedView[0] = 0x00;\r\n                    updatedView.set(view, 1);\r\n                    this.valueHexView = updatedView;\r\n                }\r\n                break;\r\n            case ((view[0] === 0x00) && ((view[1] & 0x80) === 0)):\r\n                {\r\n                    this.valueHexView = this.valueHexView.subarray(1);\r\n                }\r\n                break;\r\n        }\r\n        return this.toBER(sizeOnly);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\r\n        if (resultOffset === -1) {\r\n            return resultOffset;\r\n        }\r\n        this.setValueHex();\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return sizeOnly\r\n            ? new ArrayBuffer(this.valueHexView.length)\r\n            : this.valueHexView.slice().buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n        };\r\n    }\r\n    toString() {\r\n        const firstBit = (this.valueHexView.length * 8) - 1;\r\n        let digits = new Uint8Array((this.valueHexView.length * 8) / 3);\r\n        let bitNumber = 0;\r\n        let currentByte;\r\n        const asn1View = this.valueHexView;\r\n        let result = \"\";\r\n        let flag = false;\r\n        for (let byteNumber = (asn1View.byteLength - 1); byteNumber >= 0; byteNumber--) {\r\n            currentByte = asn1View[byteNumber];\r\n            for (let i = 0; i < 8; i++) {\r\n                if ((currentByte & 1) === 1) {\r\n                    switch (bitNumber) {\r\n                        case firstBit:\r\n                            digits = viewSub(power2(bitNumber), digits);\r\n                            result = \"-\";\r\n                            break;\r\n                        default:\r\n                            digits = viewAdd(digits, power2(bitNumber));\r\n                    }\r\n                }\r\n                bitNumber++;\r\n                currentByte >>= 1;\r\n            }\r\n        }\r\n        for (let i = 0; i < digits.length; i++) {\r\n            if (digits[i])\r\n                flag = true;\r\n            if (flag)\r\n                result += digitsString.charAt(digits[i]);\r\n        }\r\n        if (flag === false)\r\n            result += digitsString.charAt(0);\r\n        return result;\r\n    }\r\n}\r\n_a$p = LocalIntegerValueBlock;\r\nLocalIntegerValueBlock.NAME = \"IntegerValueBlock\";\r\n(() => {\r\n    Object.defineProperty(_a$p.prototype, \"valueHex\", {\r\n        set: function (v) {\r\n            this.valueHexView = new Uint8Array(v);\r\n            this.setValueHex();\r\n        },\r\n        get: function () {\r\n            return this.valueHexView.slice().buffer;\r\n        },\r\n    });\r\n})();\n\nvar _a$o;\r\nclass Integer extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalIntegerValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 2;\r\n    }\r\n    toBigInt() {\r\n        assertBigInt();\r\n        return BigInt(this.valueBlock.toString());\r\n    }\r\n    static fromBigInt(value) {\r\n        assertBigInt();\r\n        const bigIntValue = BigInt(value);\r\n        const writer = new ViewWriter();\r\n        const hex = bigIntValue.toString(16).replace(/^-/, \"\");\r\n        const view = new Uint8Array(pvtsutils.Convert.FromHex(hex));\r\n        if (bigIntValue < 0) {\r\n            const first = new Uint8Array(view.length + (view[0] & 0x80 ? 1 : 0));\r\n            first[0] |= 0x80;\r\n            const firstInt = BigInt(`0x${pvtsutils.Convert.ToHex(first)}`);\r\n            const secondInt = firstInt + bigIntValue;\r\n            const second = pvtsutils.BufferSourceConverter.toUint8Array(pvtsutils.Convert.FromHex(secondInt.toString(16)));\r\n            second[0] |= 0x80;\r\n            writer.write(second);\r\n        }\r\n        else {\r\n            if (view[0] & 0x80) {\r\n                writer.write(new Uint8Array([0]));\r\n            }\r\n            writer.write(view);\r\n        }\r\n        const res = new Integer({\r\n            valueHex: writer.final(),\r\n        });\r\n        return res;\r\n    }\r\n    convertToDER() {\r\n        const integer = new Integer({ valueHex: this.valueBlock.valueHexView });\r\n        integer.valueBlock.toDER();\r\n        return integer;\r\n    }\r\n    convertFromDER() {\r\n        return new Integer({\r\n            valueHex: this.valueBlock.valueHexView[0] === 0\r\n                ? this.valueBlock.valueHexView.subarray(1)\r\n                : this.valueBlock.valueHexView,\r\n        });\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString()}`;\r\n    }\r\n}\r\n_a$o = Integer;\r\n(() => {\r\n    typeStore.Integer = _a$o;\r\n})();\r\nInteger.NAME = \"INTEGER\";\n\nvar _a$n;\r\nclass Enumerated extends Integer {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 10;\r\n    }\r\n}\r\n_a$n = Enumerated;\r\n(() => {\r\n    typeStore.Enumerated = _a$n;\r\n})();\r\nEnumerated.NAME = \"ENUMERATED\";\n\nclass LocalSidValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ valueDec = -1, isFirstSid = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.valueDec = valueDec;\r\n        this.isFirstSid = isFirstSid;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (!inputLength) {\r\n            return inputOffset;\r\n        }\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.valueHexView = new Uint8Array(inputLength);\r\n        for (let i = 0; i < inputLength; i++) {\r\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\r\n            this.blockLength++;\r\n            if ((intBuffer[i] & 0x80) === 0x00)\r\n                break;\r\n        }\r\n        const tempView = new Uint8Array(this.blockLength);\r\n        for (let i = 0; i < this.blockLength; i++) {\r\n            tempView[i] = this.valueHexView[i];\r\n        }\r\n        this.valueHexView = tempView;\r\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        if (this.valueHexView[0] === 0x00)\r\n            this.warnings.push(\"Needlessly long format of SID encoding\");\r\n        if (this.blockLength <= 8)\r\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\r\n        else {\r\n            this.isHexOnly = true;\r\n            this.warnings.push(\"Too big SID for decoding, hex only\");\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    set valueBigInt(value) {\r\n        assertBigInt();\r\n        let bits = BigInt(value).toString(2);\r\n        while (bits.length % 7) {\r\n            bits = \"0\" + bits;\r\n        }\r\n        const bytes = new Uint8Array(bits.length / 7);\r\n        for (let i = 0; i < bytes.length; i++) {\r\n            bytes[i] = parseInt(bits.slice(i * 7, i * 7 + 7), 2) + (i + 1 < bytes.length ? 0x80 : 0);\r\n        }\r\n        this.fromBER(bytes.buffer, 0, bytes.length);\r\n    }\r\n    toBER(sizeOnly) {\r\n        if (this.isHexOnly) {\r\n            if (sizeOnly)\r\n                return (new ArrayBuffer(this.valueHexView.byteLength));\r\n            const curView = this.valueHexView;\r\n            const retView = new Uint8Array(this.blockLength);\r\n            for (let i = 0; i < (this.blockLength - 1); i++)\r\n                retView[i] = curView[i] | 0x80;\r\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\r\n            return retView.buffer;\r\n        }\r\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\r\n        if (encodedBuf.byteLength === 0) {\r\n            this.error = \"Error during encoding SID value\";\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(encodedBuf.byteLength);\r\n        if (!sizeOnly) {\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const len = encodedBuf.byteLength - 1;\r\n            for (let i = 0; i < len; i++)\r\n                retView[i] = encodedView[i] | 0x80;\r\n            retView[len] = encodedView[len];\r\n        }\r\n        return retView;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        if (this.isHexOnly)\r\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\r\n        else {\r\n            if (this.isFirstSid) {\r\n                let sidValue = this.valueDec;\r\n                if (this.valueDec <= 39)\r\n                    result = \"0.\";\r\n                else {\r\n                    if (this.valueDec <= 79) {\r\n                        result = \"1.\";\r\n                        sidValue -= 40;\r\n                    }\r\n                    else {\r\n                        result = \"2.\";\r\n                        sidValue -= 80;\r\n                    }\r\n                }\r\n                result += sidValue.toString();\r\n            }\r\n            else\r\n                result = this.valueDec.toString();\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n            isFirstSid: this.isFirstSid,\r\n        };\r\n    }\r\n}\r\nLocalSidValueBlock.NAME = \"sidBlock\";\n\nclass LocalObjectIdentifierValueBlock extends ValueBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = [];\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = inputOffset;\r\n        while (inputLength > 0) {\r\n            const sidBlock = new LocalSidValueBlock();\r\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\r\n            if (resultOffset === -1) {\r\n                this.blockLength = 0;\r\n                this.error = sidBlock.error;\r\n                return resultOffset;\r\n            }\r\n            if (this.value.length === 0)\r\n                sidBlock.isFirstSid = true;\r\n            this.blockLength += sidBlock.blockLength;\r\n            inputLength -= sidBlock.blockLength;\r\n            this.value.push(sidBlock);\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        const retBuffers = [];\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            const valueBuf = this.value[i].toBER(sizeOnly);\r\n            if (valueBuf.byteLength === 0) {\r\n                this.error = this.value[i].error;\r\n                return EMPTY_BUFFER;\r\n            }\r\n            retBuffers.push(valueBuf);\r\n        }\r\n        return concat(retBuffers);\r\n    }\r\n    fromString(string) {\r\n        this.value = [];\r\n        let pos1 = 0;\r\n        let pos2 = 0;\r\n        let sid = \"\";\r\n        let flag = false;\r\n        do {\r\n            pos2 = string.indexOf(\".\", pos1);\r\n            if (pos2 === -1)\r\n                sid = string.substring(pos1);\r\n            else\r\n                sid = string.substring(pos1, pos2);\r\n            pos1 = pos2 + 1;\r\n            if (flag) {\r\n                const sidBlock = this.value[0];\r\n                let plus = 0;\r\n                switch (sidBlock.valueDec) {\r\n                    case 0:\r\n                        break;\r\n                    case 1:\r\n                        plus = 40;\r\n                        break;\r\n                    case 2:\r\n                        plus = 80;\r\n                        break;\r\n                    default:\r\n                        this.value = [];\r\n                        return;\r\n                }\r\n                const parsedSID = parseInt(sid, 10);\r\n                if (isNaN(parsedSID))\r\n                    return;\r\n                sidBlock.valueDec = parsedSID + plus;\r\n                flag = false;\r\n            }\r\n            else {\r\n                const sidBlock = new LocalSidValueBlock();\r\n                if (sid > Number.MAX_SAFE_INTEGER) {\r\n                    assertBigInt();\r\n                    const sidValue = BigInt(sid);\r\n                    sidBlock.valueBigInt = sidValue;\r\n                }\r\n                else {\r\n                    sidBlock.valueDec = parseInt(sid, 10);\r\n                    if (isNaN(sidBlock.valueDec))\r\n                        return;\r\n                }\r\n                if (!this.value.length) {\r\n                    sidBlock.isFirstSid = true;\r\n                    flag = true;\r\n                }\r\n                this.value.push(sidBlock);\r\n            }\r\n        } while (pos2 !== -1);\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        let isHexOnly = false;\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            isHexOnly = this.value[i].isHexOnly;\r\n            let sidStr = this.value[i].toString();\r\n            if (i !== 0)\r\n                result = `${result}.`;\r\n            if (isHexOnly) {\r\n                sidStr = `{${sidStr}}`;\r\n                if (this.value[i].isFirstSid)\r\n                    result = `2.{${sidStr} - 80}`;\r\n                else\r\n                    result += sidStr;\r\n            }\r\n            else\r\n                result += sidStr;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            value: this.toString(),\r\n            sidArray: [],\r\n        };\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            object.sidArray.push(this.value[i].toJSON());\r\n        }\r\n        return object;\r\n    }\r\n}\r\nLocalObjectIdentifierValueBlock.NAME = \"ObjectIdentifierValueBlock\";\n\nvar _a$m;\r\nclass ObjectIdentifier extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalObjectIdentifierValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 6;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.toString();\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.fromString(value);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.getValue(),\r\n        };\r\n    }\r\n}\r\n_a$m = ObjectIdentifier;\r\n(() => {\r\n    typeStore.ObjectIdentifier = _a$m;\r\n})();\r\nObjectIdentifier.NAME = \"OBJECT IDENTIFIER\";\n\nclass LocalRelativeSidValueBlock extends HexBlock(LocalBaseBlock) {\r\n    constructor({ valueDec = 0, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.valueDec = valueDec;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (inputLength === 0)\r\n            return inputOffset;\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength))\r\n            return -1;\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.valueHexView = new Uint8Array(inputLength);\r\n        for (let i = 0; i < inputLength; i++) {\r\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\r\n            this.blockLength++;\r\n            if ((intBuffer[i] & 0x80) === 0x00)\r\n                break;\r\n        }\r\n        const tempView = new Uint8Array(this.blockLength);\r\n        for (let i = 0; i < this.blockLength; i++)\r\n            tempView[i] = this.valueHexView[i];\r\n        this.valueHexView = tempView;\r\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        if (this.valueHexView[0] === 0x00)\r\n            this.warnings.push(\"Needlessly long format of SID encoding\");\r\n        if (this.blockLength <= 8)\r\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\r\n        else {\r\n            this.isHexOnly = true;\r\n            this.warnings.push(\"Too big SID for decoding, hex only\");\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toBER(sizeOnly) {\r\n        if (this.isHexOnly) {\r\n            if (sizeOnly)\r\n                return (new ArrayBuffer(this.valueHexView.byteLength));\r\n            const curView = this.valueHexView;\r\n            const retView = new Uint8Array(this.blockLength);\r\n            for (let i = 0; i < (this.blockLength - 1); i++)\r\n                retView[i] = curView[i] | 0x80;\r\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\r\n            return retView.buffer;\r\n        }\r\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\r\n        if (encodedBuf.byteLength === 0) {\r\n            this.error = \"Error during encoding SID value\";\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(encodedBuf.byteLength);\r\n        if (!sizeOnly) {\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const len = encodedBuf.byteLength - 1;\r\n            for (let i = 0; i < len; i++)\r\n                retView[i] = encodedView[i] | 0x80;\r\n            retView[len] = encodedView[len];\r\n        }\r\n        return retView.buffer;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        if (this.isHexOnly)\r\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\r\n        else {\r\n            result = this.valueDec.toString();\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n        };\r\n    }\r\n}\r\nLocalRelativeSidValueBlock.NAME = \"relativeSidBlock\";\n\nclass LocalRelativeObjectIdentifierValueBlock extends ValueBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = [];\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = inputOffset;\r\n        while (inputLength > 0) {\r\n            const sidBlock = new LocalRelativeSidValueBlock();\r\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\r\n            if (resultOffset === -1) {\r\n                this.blockLength = 0;\r\n                this.error = sidBlock.error;\r\n                return resultOffset;\r\n            }\r\n            this.blockLength += sidBlock.blockLength;\r\n            inputLength -= sidBlock.blockLength;\r\n            this.value.push(sidBlock);\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const retBuffers = [];\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            const valueBuf = this.value[i].toBER(sizeOnly);\r\n            if (valueBuf.byteLength === 0) {\r\n                this.error = this.value[i].error;\r\n                return EMPTY_BUFFER;\r\n            }\r\n            retBuffers.push(valueBuf);\r\n        }\r\n        return concat(retBuffers);\r\n    }\r\n    fromString(string) {\r\n        this.value = [];\r\n        let pos1 = 0;\r\n        let pos2 = 0;\r\n        let sid = \"\";\r\n        do {\r\n            pos2 = string.indexOf(\".\", pos1);\r\n            if (pos2 === -1)\r\n                sid = string.substring(pos1);\r\n            else\r\n                sid = string.substring(pos1, pos2);\r\n            pos1 = pos2 + 1;\r\n            const sidBlock = new LocalRelativeSidValueBlock();\r\n            sidBlock.valueDec = parseInt(sid, 10);\r\n            if (isNaN(sidBlock.valueDec))\r\n                return true;\r\n            this.value.push(sidBlock);\r\n        } while (pos2 !== -1);\r\n        return true;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        let isHexOnly = false;\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            isHexOnly = this.value[i].isHexOnly;\r\n            let sidStr = this.value[i].toString();\r\n            if (i !== 0)\r\n                result = `${result}.`;\r\n            if (isHexOnly) {\r\n                sidStr = `{${sidStr}}`;\r\n                result += sidStr;\r\n            }\r\n            else\r\n                result += sidStr;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            value: this.toString(),\r\n            sidArray: [],\r\n        };\r\n        for (let i = 0; i < this.value.length; i++)\r\n            object.sidArray.push(this.value[i].toJSON());\r\n        return object;\r\n    }\r\n}\r\nLocalRelativeObjectIdentifierValueBlock.NAME = \"RelativeObjectIdentifierValueBlock\";\n\nvar _a$l;\r\nclass RelativeObjectIdentifier extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalRelativeObjectIdentifierValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 13;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.toString();\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.fromString(value);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.getValue(),\r\n        };\r\n    }\r\n}\r\n_a$l = RelativeObjectIdentifier;\r\n(() => {\r\n    typeStore.RelativeObjectIdentifier = _a$l;\r\n})();\r\nRelativeObjectIdentifier.NAME = \"RelativeObjectIdentifier\";\n\nvar _a$k;\r\nclass Sequence extends Constructed {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 16;\r\n    }\r\n}\r\n_a$k = Sequence;\r\n(() => {\r\n    typeStore.Sequence = _a$k;\r\n})();\r\nSequence.NAME = \"SEQUENCE\";\n\nvar _a$j;\r\nclass Set extends Constructed {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 17;\r\n    }\r\n}\r\n_a$j = Set;\r\n(() => {\r\n    typeStore.Set = _a$j;\r\n})();\r\nSet.NAME = \"SET\";\n\nclass LocalStringValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isHexOnly = true;\r\n        this.value = EMPTY_STRING;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.value,\r\n        };\r\n    }\r\n}\r\nLocalStringValueBlock.NAME = \"StringValueBlock\";\n\nclass LocalSimpleStringValueBlock extends LocalStringValueBlock {\r\n}\r\nLocalSimpleStringValueBlock.NAME = \"SimpleStringValueBlock\";\n\nclass LocalSimpleStringBlock extends BaseStringBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters, LocalSimpleStringValueBlock);\r\n    }\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.value = String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\r\n    }\r\n    fromString(inputString) {\r\n        const strLen = inputString.length;\r\n        const view = this.valueBlock.valueHexView = new Uint8Array(strLen);\r\n        for (let i = 0; i < strLen; i++)\r\n            view[i] = inputString.charCodeAt(i);\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalSimpleStringBlock.NAME = \"SIMPLE STRING\";\n\nclass LocalUtf8StringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        try {\r\n            this.valueBlock.value = pvtsutils.Convert.ToUtf8String(inputBuffer);\r\n        }\r\n        catch (ex) {\r\n            this.warnings.push(`Error during \"decodeURIComponent\": ${ex}, using raw string`);\r\n            this.valueBlock.value = pvtsutils.Convert.ToBinary(inputBuffer);\r\n        }\r\n    }\r\n    fromString(inputString) {\r\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf8String(inputString));\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalUtf8StringValueBlock.NAME = \"Utf8StringValueBlock\";\n\nvar _a$i;\r\nclass Utf8String extends LocalUtf8StringValueBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 12;\r\n    }\r\n}\r\n_a$i = Utf8String;\r\n(() => {\r\n    typeStore.Utf8String = _a$i;\r\n})();\r\nUtf8String.NAME = \"UTF8String\";\n\nclass LocalBmpStringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.value = pvtsutils.Convert.ToUtf16String(inputBuffer);\r\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n    }\r\n    fromString(inputString) {\r\n        this.valueBlock.value = inputString;\r\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf16String(inputString));\r\n    }\r\n}\r\nLocalBmpStringValueBlock.NAME = \"BmpStringValueBlock\";\n\nvar _a$h;\r\nclass BmpString extends LocalBmpStringValueBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 30;\r\n    }\r\n}\r\n_a$h = BmpString;\r\n(() => {\r\n    typeStore.BmpString = _a$h;\r\n})();\r\nBmpString.NAME = \"BMPString\";\n\nclass LocalUniversalStringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        const copyBuffer = ArrayBuffer.isView(inputBuffer) ? inputBuffer.slice().buffer : inputBuffer.slice(0);\r\n        const valueView = new Uint8Array(copyBuffer);\r\n        for (let i = 0; i < valueView.length; i += 4) {\r\n            valueView[i] = valueView[i + 3];\r\n            valueView[i + 1] = valueView[i + 2];\r\n            valueView[i + 2] = 0x00;\r\n            valueView[i + 3] = 0x00;\r\n        }\r\n        this.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));\r\n    }\r\n    fromString(inputString) {\r\n        const strLength = inputString.length;\r\n        const valueHexView = this.valueBlock.valueHexView = new Uint8Array(strLength * 4);\r\n        for (let i = 0; i < strLength; i++) {\r\n            const codeBuf = pvutils.utilToBase(inputString.charCodeAt(i), 8);\r\n            const codeView = new Uint8Array(codeBuf);\r\n            if (codeView.length > 4)\r\n                continue;\r\n            const dif = 4 - codeView.length;\r\n            for (let j = (codeView.length - 1); j >= 0; j--)\r\n                valueHexView[i * 4 + j + dif] = codeView[j];\r\n        }\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalUniversalStringValueBlock.NAME = \"UniversalStringValueBlock\";\n\nvar _a$g;\r\nclass UniversalString extends LocalUniversalStringValueBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 28;\r\n    }\r\n}\r\n_a$g = UniversalString;\r\n(() => {\r\n    typeStore.UniversalString = _a$g;\r\n})();\r\nUniversalString.NAME = \"UniversalString\";\n\nvar _a$f;\r\nclass NumericString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 18;\r\n    }\r\n}\r\n_a$f = NumericString;\r\n(() => {\r\n    typeStore.NumericString = _a$f;\r\n})();\r\nNumericString.NAME = \"NumericString\";\n\nvar _a$e;\r\nclass PrintableString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 19;\r\n    }\r\n}\r\n_a$e = PrintableString;\r\n(() => {\r\n    typeStore.PrintableString = _a$e;\r\n})();\r\nPrintableString.NAME = \"PrintableString\";\n\nvar _a$d;\r\nclass TeletexString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 20;\r\n    }\r\n}\r\n_a$d = TeletexString;\r\n(() => {\r\n    typeStore.TeletexString = _a$d;\r\n})();\r\nTeletexString.NAME = \"TeletexString\";\n\nvar _a$c;\r\nclass VideotexString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 21;\r\n    }\r\n}\r\n_a$c = VideotexString;\r\n(() => {\r\n    typeStore.VideotexString = _a$c;\r\n})();\r\nVideotexString.NAME = \"VideotexString\";\n\nvar _a$b;\r\nclass IA5String extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 22;\r\n    }\r\n}\r\n_a$b = IA5String;\r\n(() => {\r\n    typeStore.IA5String = _a$b;\r\n})();\r\nIA5String.NAME = \"IA5String\";\n\nvar _a$a;\r\nclass GraphicString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 25;\r\n    }\r\n}\r\n_a$a = GraphicString;\r\n(() => {\r\n    typeStore.GraphicString = _a$a;\r\n})();\r\nGraphicString.NAME = \"GraphicString\";\n\nvar _a$9;\r\nclass VisibleString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 26;\r\n    }\r\n}\r\n_a$9 = VisibleString;\r\n(() => {\r\n    typeStore.VisibleString = _a$9;\r\n})();\r\nVisibleString.NAME = \"VisibleString\";\n\nvar _a$8;\r\nclass GeneralString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 27;\r\n    }\r\n}\r\n_a$8 = GeneralString;\r\n(() => {\r\n    typeStore.GeneralString = _a$8;\r\n})();\r\nGeneralString.NAME = \"GeneralString\";\n\nvar _a$7;\r\nclass CharacterString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 29;\r\n    }\r\n}\r\n_a$7 = CharacterString;\r\n(() => {\r\n    typeStore.CharacterString = _a$7;\r\n})();\r\nCharacterString.NAME = \"CharacterString\";\n\nvar _a$6;\r\nclass UTCTime extends VisibleString {\r\n    constructor({ value, valueDate, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.year = 0;\r\n        this.month = 0;\r\n        this.day = 0;\r\n        this.hour = 0;\r\n        this.minute = 0;\r\n        this.second = 0;\r\n        if (value) {\r\n            this.fromString(value);\r\n            this.valueBlock.valueHexView = new Uint8Array(value.length);\r\n            for (let i = 0; i < value.length; i++)\r\n                this.valueBlock.valueHexView[i] = value.charCodeAt(i);\r\n        }\r\n        if (valueDate) {\r\n            this.fromDate(valueDate);\r\n            this.valueBlock.valueHexView = new Uint8Array(this.toBuffer());\r\n        }\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 23;\r\n    }\r\n    fromBuffer(inputBuffer) {\r\n        this.fromString(String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer)));\r\n    }\r\n    toBuffer() {\r\n        const str = this.toString();\r\n        const buffer = new ArrayBuffer(str.length);\r\n        const view = new Uint8Array(buffer);\r\n        for (let i = 0; i < str.length; i++)\r\n            view[i] = str.charCodeAt(i);\r\n        return buffer;\r\n    }\r\n    fromDate(inputDate) {\r\n        this.year = inputDate.getUTCFullYear();\r\n        this.month = inputDate.getUTCMonth() + 1;\r\n        this.day = inputDate.getUTCDate();\r\n        this.hour = inputDate.getUTCHours();\r\n        this.minute = inputDate.getUTCMinutes();\r\n        this.second = inputDate.getUTCSeconds();\r\n    }\r\n    toDate() {\r\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second)));\r\n    }\r\n    fromString(inputString) {\r\n        const parser = /(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})Z/ig;\r\n        const parserArray = parser.exec(inputString);\r\n        if (parserArray === null) {\r\n            this.error = \"Wrong input string for conversion\";\r\n            return;\r\n        }\r\n        const year = parseInt(parserArray[1], 10);\r\n        if (year >= 50)\r\n            this.year = 1900 + year;\r\n        else\r\n            this.year = 2000 + year;\r\n        this.month = parseInt(parserArray[2], 10);\r\n        this.day = parseInt(parserArray[3], 10);\r\n        this.hour = parseInt(parserArray[4], 10);\r\n        this.minute = parseInt(parserArray[5], 10);\r\n        this.second = parseInt(parserArray[6], 10);\r\n    }\r\n    toString(encoding = \"iso\") {\r\n        if (encoding === \"iso\") {\r\n            const outputArray = new Array(7);\r\n            outputArray[0] = pvutils.padNumber(((this.year < 2000) ? (this.year - 1900) : (this.year - 2000)), 2);\r\n            outputArray[1] = pvutils.padNumber(this.month, 2);\r\n            outputArray[2] = pvutils.padNumber(this.day, 2);\r\n            outputArray[3] = pvutils.padNumber(this.hour, 2);\r\n            outputArray[4] = pvutils.padNumber(this.minute, 2);\r\n            outputArray[5] = pvutils.padNumber(this.second, 2);\r\n            outputArray[6] = \"Z\";\r\n            return outputArray.join(\"\");\r\n        }\r\n        return super.toString(encoding);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.toDate().toISOString()}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            year: this.year,\r\n            month: this.month,\r\n            day: this.day,\r\n            hour: this.hour,\r\n            minute: this.minute,\r\n            second: this.second,\r\n        };\r\n    }\r\n}\r\n_a$6 = UTCTime;\r\n(() => {\r\n    typeStore.UTCTime = _a$6;\r\n})();\r\nUTCTime.NAME = \"UTCTime\";\n\nvar _a$5;\r\nclass GeneralizedTime extends UTCTime {\r\n    constructor(parameters = {}) {\r\n        var _b;\r\n        super(parameters);\r\n        (_b = this.millisecond) !== null && _b !== void 0 ? _b : (this.millisecond = 0);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 24;\r\n    }\r\n    fromDate(inputDate) {\r\n        super.fromDate(inputDate);\r\n        this.millisecond = inputDate.getUTCMilliseconds();\r\n    }\r\n    toDate() {\r\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)));\r\n    }\r\n    fromString(inputString) {\r\n        let isUTC = false;\r\n        let timeString = \"\";\r\n        let dateTimeString = \"\";\r\n        let fractionPart = 0;\r\n        let parser;\r\n        let hourDifference = 0;\r\n        let minuteDifference = 0;\r\n        if (inputString[inputString.length - 1] === \"Z\") {\r\n            timeString = inputString.substring(0, inputString.length - 1);\r\n            isUTC = true;\r\n        }\r\n        else {\r\n            const number = new Number(inputString[inputString.length - 1]);\r\n            if (isNaN(number.valueOf()))\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            timeString = inputString;\r\n        }\r\n        if (isUTC) {\r\n            if (timeString.indexOf(\"+\") !== -1)\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            if (timeString.indexOf(\"-\") !== -1)\r\n                throw new Error(\"Wrong input string for conversion\");\r\n        }\r\n        else {\r\n            let multiplier = 1;\r\n            let differencePosition = timeString.indexOf(\"+\");\r\n            let differenceString = \"\";\r\n            if (differencePosition === -1) {\r\n                differencePosition = timeString.indexOf(\"-\");\r\n                multiplier = -1;\r\n            }\r\n            if (differencePosition !== -1) {\r\n                differenceString = timeString.substring(differencePosition + 1);\r\n                timeString = timeString.substring(0, differencePosition);\r\n                if ((differenceString.length !== 2) && (differenceString.length !== 4))\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                let number = parseInt(differenceString.substring(0, 2), 10);\r\n                if (isNaN(number.valueOf()))\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                hourDifference = multiplier * number;\r\n                if (differenceString.length === 4) {\r\n                    number = parseInt(differenceString.substring(2, 4), 10);\r\n                    if (isNaN(number.valueOf()))\r\n                        throw new Error(\"Wrong input string for conversion\");\r\n                    minuteDifference = multiplier * number;\r\n                }\r\n            }\r\n        }\r\n        let fractionPointPosition = timeString.indexOf(\".\");\r\n        if (fractionPointPosition === -1)\r\n            fractionPointPosition = timeString.indexOf(\",\");\r\n        if (fractionPointPosition !== -1) {\r\n            const fractionPartCheck = new Number(`0${timeString.substring(fractionPointPosition)}`);\r\n            if (isNaN(fractionPartCheck.valueOf()))\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            fractionPart = fractionPartCheck.valueOf();\r\n            dateTimeString = timeString.substring(0, fractionPointPosition);\r\n        }\r\n        else\r\n            dateTimeString = timeString;\r\n        switch (true) {\r\n            case (dateTimeString.length === 8):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1)\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                break;\r\n            case (dateTimeString.length === 10):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    let fractionResult = 60 * fractionPart;\r\n                    this.minute = Math.floor(fractionResult);\r\n                    fractionResult = 60 * (fractionResult - this.minute);\r\n                    this.second = Math.floor(fractionResult);\r\n                    fractionResult = 1000 * (fractionResult - this.second);\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            case (dateTimeString.length === 12):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    let fractionResult = 60 * fractionPart;\r\n                    this.second = Math.floor(fractionResult);\r\n                    fractionResult = 1000 * (fractionResult - this.second);\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            case (dateTimeString.length === 14):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    const fractionResult = 1000 * fractionPart;\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"Wrong input string for conversion\");\r\n        }\r\n        const parserArray = parser.exec(dateTimeString);\r\n        if (parserArray === null)\r\n            throw new Error(\"Wrong input string for conversion\");\r\n        for (let j = 1; j < parserArray.length; j++) {\r\n            switch (j) {\r\n                case 1:\r\n                    this.year = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 2:\r\n                    this.month = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 3:\r\n                    this.day = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 4:\r\n                    this.hour = parseInt(parserArray[j], 10) + hourDifference;\r\n                    break;\r\n                case 5:\r\n                    this.minute = parseInt(parserArray[j], 10) + minuteDifference;\r\n                    break;\r\n                case 6:\r\n                    this.second = parseInt(parserArray[j], 10);\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n            }\r\n        }\r\n        if (isUTC === false) {\r\n            const tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\r\n            this.year = tempDate.getUTCFullYear();\r\n            this.month = tempDate.getUTCMonth();\r\n            this.day = tempDate.getUTCDay();\r\n            this.hour = tempDate.getUTCHours();\r\n            this.minute = tempDate.getUTCMinutes();\r\n            this.second = tempDate.getUTCSeconds();\r\n            this.millisecond = tempDate.getUTCMilliseconds();\r\n        }\r\n    }\r\n    toString(encoding = \"iso\") {\r\n        if (encoding === \"iso\") {\r\n            const outputArray = [];\r\n            outputArray.push(pvutils.padNumber(this.year, 4));\r\n            outputArray.push(pvutils.padNumber(this.month, 2));\r\n            outputArray.push(pvutils.padNumber(this.day, 2));\r\n            outputArray.push(pvutils.padNumber(this.hour, 2));\r\n            outputArray.push(pvutils.padNumber(this.minute, 2));\r\n            outputArray.push(pvutils.padNumber(this.second, 2));\r\n            if (this.millisecond !== 0) {\r\n                outputArray.push(\".\");\r\n                outputArray.push(pvutils.padNumber(this.millisecond, 3));\r\n            }\r\n            outputArray.push(\"Z\");\r\n            return outputArray.join(\"\");\r\n        }\r\n        return super.toString(encoding);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            millisecond: this.millisecond,\r\n        };\r\n    }\r\n}\r\n_a$5 = GeneralizedTime;\r\n(() => {\r\n    typeStore.GeneralizedTime = _a$5;\r\n})();\r\nGeneralizedTime.NAME = \"GeneralizedTime\";\n\nvar _a$4;\r\nclass DATE extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 31;\r\n    }\r\n}\r\n_a$4 = DATE;\r\n(() => {\r\n    typeStore.DATE = _a$4;\r\n})();\r\nDATE.NAME = \"DATE\";\n\nvar _a$3;\r\nclass TimeOfDay extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 32;\r\n    }\r\n}\r\n_a$3 = TimeOfDay;\r\n(() => {\r\n    typeStore.TimeOfDay = _a$3;\r\n})();\r\nTimeOfDay.NAME = \"TimeOfDay\";\n\nvar _a$2;\r\nclass DateTime extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 33;\r\n    }\r\n}\r\n_a$2 = DateTime;\r\n(() => {\r\n    typeStore.DateTime = _a$2;\r\n})();\r\nDateTime.NAME = \"DateTime\";\n\nvar _a$1;\r\nclass Duration extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 34;\r\n    }\r\n}\r\n_a$1 = Duration;\r\n(() => {\r\n    typeStore.Duration = _a$1;\r\n})();\r\nDuration.NAME = \"Duration\";\n\nvar _a;\r\nclass TIME extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 14;\r\n    }\r\n}\r\n_a = TIME;\r\n(() => {\r\n    typeStore.TIME = _a;\r\n})();\r\nTIME.NAME = \"TIME\";\n\nclass Any {\r\n    constructor({ name = EMPTY_STRING, optional = false, } = {}) {\r\n        this.name = name;\r\n        this.optional = optional;\r\n    }\r\n}\n\nclass Choice extends Any {\r\n    constructor({ value = [], ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n    }\r\n}\n\nclass Repeated extends Any {\r\n    constructor({ value = new Any(), local = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n        this.local = local;\r\n    }\r\n}\n\nclass RawData {\r\n    constructor({ data = EMPTY_VIEW } = {}) {\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(data);\r\n    }\r\n    get data() {\r\n        return this.dataView.slice().buffer;\r\n    }\r\n    set data(value) {\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(value);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const endLength = inputOffset + inputLength;\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).subarray(inputOffset, endLength);\r\n        return endLength;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return this.dataView.slice().buffer;\r\n    }\r\n}\n\nfunction compareSchema(root, inputData, inputSchema) {\r\n    if (inputSchema instanceof Choice) {\r\n        for (let j = 0; j < inputSchema.value.length; j++) {\r\n            const result = compareSchema(root, inputData, inputSchema.value[j]);\r\n            if (result.verified) {\r\n                return {\r\n                    verified: true,\r\n                    result: root\r\n                };\r\n            }\r\n        }\r\n        {\r\n            const _result = {\r\n                verified: false,\r\n                result: {\r\n                    error: \"Wrong values for Choice type\"\r\n                },\r\n            };\r\n            if (inputSchema.hasOwnProperty(NAME))\r\n                _result.name = inputSchema.name;\r\n            return _result;\r\n        }\r\n    }\r\n    if (inputSchema instanceof Any) {\r\n        if (inputSchema.hasOwnProperty(NAME))\r\n            root[inputSchema.name] = inputData;\r\n        return {\r\n            verified: true,\r\n            result: root\r\n        };\r\n    }\r\n    if ((root instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong root object\" }\r\n        };\r\n    }\r\n    if ((inputData instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 data\" }\r\n        };\r\n    }\r\n    if ((inputSchema instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((ID_BLOCK in inputSchema) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((FROM_BER in inputSchema.idBlock) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((TO_BER in inputSchema.idBlock) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    const encodedId = inputSchema.idBlock.toBER(false);\r\n    if (encodedId.byteLength === 0) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Error encoding idBlock for ASN.1 schema\" }\r\n        };\r\n    }\r\n    const decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);\r\n    if (decodedOffset === -1) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Error decoding idBlock for ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(TAG_CLASS) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(TAG_NUMBER) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(IS_CONSTRUCTED) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (!(IS_HEX_ONLY in inputSchema.idBlock)) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isHexOnly) {\r\n        if ((VALUE_HEX_VIEW in inputSchema.idBlock) === false) {\r\n            return {\r\n                verified: false,\r\n                result: { error: \"Wrong ASN.1 schema\" }\r\n            };\r\n        }\r\n        const schemaView = inputSchema.idBlock.valueHexView;\r\n        const asn1View = inputData.idBlock.valueHexView;\r\n        if (schemaView.length !== asn1View.length) {\r\n            return {\r\n                verified: false,\r\n                result: root\r\n            };\r\n        }\r\n        for (let i = 0; i < schemaView.length; i++) {\r\n            if (schemaView[i] !== asn1View[1]) {\r\n                return {\r\n                    verified: false,\r\n                    result: root\r\n                };\r\n            }\r\n        }\r\n    }\r\n    if (inputSchema.name) {\r\n        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n        if (inputSchema.name)\r\n            root[inputSchema.name] = inputData;\r\n    }\r\n    if (inputSchema instanceof typeStore.Constructed) {\r\n        let admission = 0;\r\n        let result = {\r\n            verified: false,\r\n            result: {\r\n                error: \"Unknown error\",\r\n            }\r\n        };\r\n        let maxLength = inputSchema.valueBlock.value.length;\r\n        if (maxLength > 0) {\r\n            if (inputSchema.valueBlock.value[0] instanceof Repeated) {\r\n                maxLength = inputData.valueBlock.value.length;\r\n            }\r\n        }\r\n        if (maxLength === 0) {\r\n            return {\r\n                verified: true,\r\n                result: root\r\n            };\r\n        }\r\n        if ((inputData.valueBlock.value.length === 0) &&\r\n            (inputSchema.valueBlock.value.length !== 0)) {\r\n            let _optional = true;\r\n            for (let i = 0; i < inputSchema.valueBlock.value.length; i++)\r\n                _optional = _optional && (inputSchema.valueBlock.value[i].optional || false);\r\n            if (_optional) {\r\n                return {\r\n                    verified: true,\r\n                    result: root\r\n                };\r\n            }\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name)\r\n                    delete root[inputSchema.name];\r\n            }\r\n            root.error = \"Inconsistent object length\";\r\n            return {\r\n                verified: false,\r\n                result: root\r\n            };\r\n        }\r\n        for (let i = 0; i < maxLength; i++) {\r\n            if ((i - admission) >= inputData.valueBlock.value.length) {\r\n                if (inputSchema.valueBlock.value[i].optional === false) {\r\n                    const _result = {\r\n                        verified: false,\r\n                        result: root\r\n                    };\r\n                    root.error = \"Inconsistent length between ASN.1 data and schema\";\r\n                    if (inputSchema.name) {\r\n                        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                        if (inputSchema.name) {\r\n                            delete root[inputSchema.name];\r\n                            _result.name = inputSchema.name;\r\n                        }\r\n                    }\r\n                    return _result;\r\n                }\r\n            }\r\n            else {\r\n                if (inputSchema.valueBlock.value[0] instanceof Repeated) {\r\n                    result = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);\r\n                    if (result.verified === false) {\r\n                        if (inputSchema.valueBlock.value[0].optional)\r\n                            admission++;\r\n                        else {\r\n                            if (inputSchema.name) {\r\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                                if (inputSchema.name)\r\n                                    delete root[inputSchema.name];\r\n                            }\r\n                            return result;\r\n                        }\r\n                    }\r\n                    if ((NAME in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].name.length > 0)) {\r\n                        let arrayRoot = {};\r\n                        if ((LOCAL in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].local))\r\n                            arrayRoot = inputData;\r\n                        else\r\n                            arrayRoot = root;\r\n                        if (typeof arrayRoot[inputSchema.valueBlock.value[0].name] === \"undefined\")\r\n                            arrayRoot[inputSchema.valueBlock.value[0].name] = [];\r\n                        arrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);\r\n                    }\r\n                }\r\n                else {\r\n                    result = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);\r\n                    if (result.verified === false) {\r\n                        if (inputSchema.valueBlock.value[i].optional)\r\n                            admission++;\r\n                        else {\r\n                            if (inputSchema.name) {\r\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                                if (inputSchema.name)\r\n                                    delete root[inputSchema.name];\r\n                            }\r\n                            return result;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (result.verified === false) {\r\n            const _result = {\r\n                verified: false,\r\n                result: root\r\n            };\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name) {\r\n                    delete root[inputSchema.name];\r\n                    _result.name = inputSchema.name;\r\n                }\r\n            }\r\n            return _result;\r\n        }\r\n        return {\r\n            verified: true,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.primitiveSchema &&\r\n        (VALUE_HEX_VIEW in inputData.valueBlock)) {\r\n        const asn1 = localFromBER(inputData.valueBlock.valueHexView);\r\n        if (asn1.offset === -1) {\r\n            const _result = {\r\n                verified: false,\r\n                result: asn1.result\r\n            };\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name) {\r\n                    delete root[inputSchema.name];\r\n                    _result.name = inputSchema.name;\r\n                }\r\n            }\r\n            return _result;\r\n        }\r\n        return compareSchema(root, asn1.result, inputSchema.primitiveSchema);\r\n    }\r\n    return {\r\n        verified: true,\r\n        result: root\r\n    };\r\n}\r\nfunction verifySchema(inputBuffer, inputSchema) {\r\n    if ((inputSchema instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema type\" }\r\n        };\r\n    }\r\n    const asn1 = localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\r\n    if (asn1.offset === -1) {\r\n        return {\r\n            verified: false,\r\n            result: asn1.result\r\n        };\r\n    }\r\n    return compareSchema(asn1.result, asn1.result, inputSchema);\r\n}\n\nexport { Any, BaseBlock, BaseStringBlock, BitString, BmpString, Boolean, CharacterString, Choice, Constructed, DATE, DateTime, Duration, EndOfContent, Enumerated, GeneralString, GeneralizedTime, GraphicString, HexBlock, IA5String, Integer, Null, NumericString, ObjectIdentifier, OctetString, Primitive, PrintableString, RawData, RelativeObjectIdentifier, Repeated, Sequence, Set, TIME, TeletexString, TimeOfDay, UTCTime, UniversalString, Utf8String, ValueBlock, VideotexString, ViewWriter, VisibleString, compareSchema, fromBER, verifySchema };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13315, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/enums.js"],"sourcesContent":["export var AsnTypeTypes;\n(function (AsnTypeTypes) {\n    AsnTypeTypes[AsnTypeTypes[\"Sequence\"] = 0] = \"Sequence\";\n    AsnTypeTypes[AsnTypeTypes[\"Set\"] = 1] = \"Set\";\n    AsnTypeTypes[AsnTypeTypes[\"Choice\"] = 2] = \"Choice\";\n})(AsnTypeTypes || (AsnTypeTypes = {}));\nexport var AsnPropTypes;\n(function (AsnPropTypes) {\n    AsnPropTypes[AsnPropTypes[\"Any\"] = 1] = \"Any\";\n    AsnPropTypes[AsnPropTypes[\"Boolean\"] = 2] = \"Boolean\";\n    AsnPropTypes[AsnPropTypes[\"OctetString\"] = 3] = \"OctetString\";\n    AsnPropTypes[AsnPropTypes[\"BitString\"] = 4] = \"BitString\";\n    AsnPropTypes[AsnPropTypes[\"Integer\"] = 5] = \"Integer\";\n    AsnPropTypes[AsnPropTypes[\"Enumerated\"] = 6] = \"Enumerated\";\n    AsnPropTypes[AsnPropTypes[\"ObjectIdentifier\"] = 7] = \"ObjectIdentifier\";\n    AsnPropTypes[AsnPropTypes[\"Utf8String\"] = 8] = \"Utf8String\";\n    AsnPropTypes[AsnPropTypes[\"BmpString\"] = 9] = \"BmpString\";\n    AsnPropTypes[AsnPropTypes[\"UniversalString\"] = 10] = \"UniversalString\";\n    AsnPropTypes[AsnPropTypes[\"NumericString\"] = 11] = \"NumericString\";\n    AsnPropTypes[AsnPropTypes[\"PrintableString\"] = 12] = \"PrintableString\";\n    AsnPropTypes[AsnPropTypes[\"TeletexString\"] = 13] = \"TeletexString\";\n    AsnPropTypes[AsnPropTypes[\"VideotexString\"] = 14] = \"VideotexString\";\n    AsnPropTypes[AsnPropTypes[\"IA5String\"] = 15] = \"IA5String\";\n    AsnPropTypes[AsnPropTypes[\"GraphicString\"] = 16] = \"GraphicString\";\n    AsnPropTypes[AsnPropTypes[\"VisibleString\"] = 17] = \"VisibleString\";\n    AsnPropTypes[AsnPropTypes[\"GeneralString\"] = 18] = \"GeneralString\";\n    AsnPropTypes[AsnPropTypes[\"CharacterString\"] = 19] = \"CharacterString\";\n    AsnPropTypes[AsnPropTypes[\"UTCTime\"] = 20] = \"UTCTime\";\n    AsnPropTypes[AsnPropTypes[\"GeneralizedTime\"] = 21] = \"GeneralizedTime\";\n    AsnPropTypes[AsnPropTypes[\"DATE\"] = 22] = \"DATE\";\n    AsnPropTypes[AsnPropTypes[\"TimeOfDay\"] = 23] = \"TimeOfDay\";\n    AsnPropTypes[AsnPropTypes[\"DateTime\"] = 24] = \"DateTime\";\n    AsnPropTypes[AsnPropTypes[\"Duration\"] = 25] = \"Duration\";\n    AsnPropTypes[AsnPropTypes[\"TIME\"] = 26] = \"TIME\";\n    AsnPropTypes[AsnPropTypes[\"Null\"] = 27] = \"Null\";\n})(AsnPropTypes || (AsnPropTypes = {}));\n"],"names":[],"mappings":";;;;AAAO,IAAI;AACX,CAAC,SAAU,YAAY;IACnB,YAAY,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,GAAG;IAC7C,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,GAAG;IACxC,YAAY,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE,GAAG;AAC/C,CAAC,EAAE,gBAAgB,CAAC,eAAe,CAAC,CAAC;AAC9B,IAAI;AACX,CAAC,SAAU,YAAY;IACnB,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,GAAG;IACxC,YAAY,CAAC,YAAY,CAAC,UAAU,GAAG,EAAE,GAAG;IAC5C,YAAY,CAAC,YAAY,CAAC,cAAc,GAAG,EAAE,GAAG;IAChD,YAAY,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,GAAG;IAC9C,YAAY,CAAC,YAAY,CAAC,UAAU,GAAG,EAAE,GAAG;IAC5C,YAAY,CAAC,YAAY,CAAC,aAAa,GAAG,EAAE,GAAG;IAC/C,YAAY,CAAC,YAAY,CAAC,mBAAmB,GAAG,EAAE,GAAG;IACrD,YAAY,CAAC,YAAY,CAAC,aAAa,GAAG,EAAE,GAAG;IAC/C,YAAY,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,GAAG;IAC9C,YAAY,CAAC,YAAY,CAAC,kBAAkB,GAAG,GAAG,GAAG;IACrD,YAAY,CAAC,YAAY,CAAC,gBAAgB,GAAG,GAAG,GAAG;IACnD,YAAY,CAAC,YAAY,CAAC,kBAAkB,GAAG,GAAG,GAAG;IACrD,YAAY,CAAC,YAAY,CAAC,gBAAgB,GAAG,GAAG,GAAG;IACnD,YAAY,CAAC,YAAY,CAAC,iBAAiB,GAAG,GAAG,GAAG;IACpD,YAAY,CAAC,YAAY,CAAC,YAAY,GAAG,GAAG,GAAG;IAC/C,YAAY,CAAC,YAAY,CAAC,gBAAgB,GAAG,GAAG,GAAG;IACnD,YAAY,CAAC,YAAY,CAAC,gBAAgB,GAAG,GAAG,GAAG;IACnD,YAAY,CAAC,YAAY,CAAC,gBAAgB,GAAG,GAAG,GAAG;IACnD,YAAY,CAAC,YAAY,CAAC,kBAAkB,GAAG,GAAG,GAAG;IACrD,YAAY,CAAC,YAAY,CAAC,UAAU,GAAG,GAAG,GAAG;IAC7C,YAAY,CAAC,YAAY,CAAC,kBAAkB,GAAG,GAAG,GAAG;IACrD,YAAY,CAAC,YAAY,CAAC,OAAO,GAAG,GAAG,GAAG;IAC1C,YAAY,CAAC,YAAY,CAAC,YAAY,GAAG,GAAG,GAAG;IAC/C,YAAY,CAAC,YAAY,CAAC,WAAW,GAAG,GAAG,GAAG;IAC9C,YAAY,CAAC,YAAY,CAAC,WAAW,GAAG,GAAG,GAAG;IAC9C,YAAY,CAAC,YAAY,CAAC,OAAO,GAAG,GAAG,GAAG;IAC1C,YAAY,CAAC,YAAY,CAAC,OAAO,GAAG,GAAG,GAAG;AAC9C,CAAC,EAAE,gBAAgB,CAAC,eAAe,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13361, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/types/bit_string.js"],"sourcesContent":["import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nexport class BitString {\n    constructor(params, unusedBits = 0) {\n        this.unusedBits = 0;\n        this.value = new ArrayBuffer(0);\n        if (params) {\n            if (typeof params === \"number\") {\n                this.fromNumber(params);\n            }\n            else if (BufferSourceConverter.isBufferSource(params)) {\n                this.unusedBits = unusedBits;\n                this.value = BufferSourceConverter.toArrayBuffer(params);\n            }\n            else {\n                throw TypeError(\"Unsupported type of 'params' argument for BitString\");\n            }\n        }\n    }\n    fromASN(asn) {\n        if (!(asn instanceof asn1js.BitString)) {\n            throw new TypeError(\"Argument 'asn' is not instance of ASN.1 BitString\");\n        }\n        this.unusedBits = asn.valueBlock.unusedBits;\n        this.value = asn.valueBlock.valueHex;\n        return this;\n    }\n    toASN() {\n        return new asn1js.BitString({ unusedBits: this.unusedBits, valueHex: this.value });\n    }\n    toSchema(name) {\n        return new asn1js.BitString({ name });\n    }\n    toNumber() {\n        let res = \"\";\n        const uintArray = new Uint8Array(this.value);\n        for (const octet of uintArray) {\n            res += octet.toString(2).padStart(8, \"0\");\n        }\n        res = res.split(\"\").reverse().join(\"\");\n        if (this.unusedBits) {\n            res = res.slice(this.unusedBits).padStart(this.unusedBits, \"0\");\n        }\n        return parseInt(res, 2);\n    }\n    fromNumber(value) {\n        let bits = value.toString(2);\n        const octetSize = (bits.length + 7) >> 3;\n        this.unusedBits = (octetSize << 3) - bits.length;\n        const octets = new Uint8Array(octetSize);\n        bits = bits\n            .padStart(octetSize << 3, \"0\")\n            .split(\"\")\n            .reverse()\n            .join(\"\");\n        let index = 0;\n        while (index < octetSize) {\n            octets[index] = parseInt(bits.slice(index << 3, (index << 3) + 8), 2);\n            index++;\n        }\n        this.value = octets.buffer;\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,MAAM;IACT,YAAY,MAAM,EAAE,aAAa,CAAC,CAAE;QAChC,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,YAAY;QAC7B,IAAI,QAAQ;YACR,IAAI,OAAO,WAAW,UAAU;gBAC5B,IAAI,CAAC,UAAU,CAAC;YACpB,OACK,IAAI,yMAAA,CAAA,wBAAqB,CAAC,cAAc,CAAC,SAAS;gBACnD,IAAI,CAAC,UAAU,GAAG;gBAClB,IAAI,CAAC,KAAK,GAAG,yMAAA,CAAA,wBAAqB,CAAC,aAAa,CAAC;YACrD,OACK;gBACD,MAAM,UAAU;YACpB;QACJ;IACJ;IACA,QAAQ,GAAG,EAAE;QACT,IAAI,CAAC,CAAC,eAAe,oMAAO,SAAS,GAAG;YACpC,MAAM,IAAI,UAAU;QACxB;QACA,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,UAAU;QAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,QAAQ;QACpC,OAAO,IAAI;IACf;IACA,QAAQ;QACJ,OAAO,IAAI,oMAAO,SAAS,CAAC;YAAE,YAAY,IAAI,CAAC,UAAU;YAAE,UAAU,IAAI,CAAC,KAAK;QAAC;IACpF;IACA,SAAS,IAAI,EAAE;QACX,OAAO,IAAI,oMAAO,SAAS,CAAC;YAAE;QAAK;IACvC;IACA,WAAW;QACP,IAAI,MAAM;QACV,MAAM,YAAY,IAAI,WAAW,IAAI,CAAC,KAAK;QAC3C,KAAK,MAAM,SAAS,UAAW;YAC3B,OAAO,MAAM,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG;QACzC;QACA,MAAM,IAAI,KAAK,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC;QACnC,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE;QAC/D;QACA,OAAO,SAAS,KAAK;IACzB;IACA,WAAW,KAAK,EAAE;QACd,IAAI,OAAO,MAAM,QAAQ,CAAC;QAC1B,MAAM,YAAY,AAAC,KAAK,MAAM,GAAG,KAAM;QACvC,IAAI,CAAC,UAAU,GAAG,CAAC,aAAa,CAAC,IAAI,KAAK,MAAM;QAChD,MAAM,SAAS,IAAI,WAAW;QAC9B,OAAO,KACF,QAAQ,CAAC,aAAa,GAAG,KACzB,KAAK,CAAC,IACN,OAAO,GACP,IAAI,CAAC;QACV,IAAI,QAAQ;QACZ,MAAO,QAAQ,UAAW;YACtB,MAAM,CAAC,MAAM,GAAG,SAAS,KAAK,KAAK,CAAC,SAAS,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI;YACnE;QACJ;QACA,IAAI,CAAC,KAAK,GAAG,OAAO,MAAM;IAC9B;AACJ","ignoreList":[0]}},
    {"offset": {"line": 13428, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13434, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/types/octet_string.js"],"sourcesContent":["import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nexport class OctetString {\n    get byteLength() {\n        return this.buffer.byteLength;\n    }\n    get byteOffset() {\n        return 0;\n    }\n    constructor(param) {\n        if (typeof param === \"number\") {\n            this.buffer = new ArrayBuffer(param);\n        }\n        else {\n            if (BufferSourceConverter.isBufferSource(param)) {\n                this.buffer = BufferSourceConverter.toArrayBuffer(param);\n            }\n            else if (Array.isArray(param)) {\n                this.buffer = new Uint8Array(param);\n            }\n            else {\n                this.buffer = new ArrayBuffer(0);\n            }\n        }\n    }\n    fromASN(asn) {\n        if (!(asn instanceof asn1js.OctetString)) {\n            throw new TypeError(\"Argument 'asn' is not instance of ASN.1 OctetString\");\n        }\n        this.buffer = asn.valueBlock.valueHex;\n        return this;\n    }\n    toASN() {\n        return new asn1js.OctetString({ valueHex: this.buffer });\n    }\n    toSchema(name) {\n        return new asn1js.OctetString({ name });\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,MAAM;IACT,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU;IACjC;IACA,IAAI,aAAa;QACb,OAAO;IACX;IACA,YAAY,KAAK,CAAE;QACf,IAAI,OAAO,UAAU,UAAU;YAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY;QAClC,OACK;YACD,IAAI,yMAAA,CAAA,wBAAqB,CAAC,cAAc,CAAC,QAAQ;gBAC7C,IAAI,CAAC,MAAM,GAAG,yMAAA,CAAA,wBAAqB,CAAC,aAAa,CAAC;YACtD,OACK,IAAI,MAAM,OAAO,CAAC,QAAQ;gBAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,WAAW;YACjC,OACK;gBACD,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY;YAClC;QACJ;IACJ;IACA,QAAQ,GAAG,EAAE;QACT,IAAI,CAAC,CAAC,eAAe,oMAAO,WAAW,GAAG;YACtC,MAAM,IAAI,UAAU;QACxB;QACA,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,QAAQ;QACrC,OAAO,IAAI;IACf;IACA,QAAQ;QACJ,OAAO,IAAI,oMAAO,WAAW,CAAC;YAAE,UAAU,IAAI,CAAC,MAAM;QAAC;IAC1D;IACA,SAAS,IAAI,EAAE;QACX,OAAO,IAAI,oMAAO,WAAW,CAAC;YAAE;QAAK;IACzC;AACJ","ignoreList":[0]}},
    {"offset": {"line": 13479, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13485, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 13488, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13504, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/converters.js"],"sourcesContent":["import * as asn1js from \"asn1js\";\nimport { AsnPropTypes } from \"./enums\";\nimport { OctetString } from \"./types/index\";\nexport const AsnAnyConverter = {\n    fromASN: (value) => value instanceof asn1js.Null ? null : value.valueBeforeDecodeView,\n    toASN: (value) => {\n        if (value === null) {\n            return new asn1js.Null();\n        }\n        const schema = asn1js.fromBER(value);\n        if (schema.result.error) {\n            throw new Error(schema.result.error);\n        }\n        return schema.result;\n    },\n};\nexport const AsnIntegerConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView.byteLength >= 4\n        ? value.valueBlock.toString()\n        : value.valueBlock.valueDec,\n    toASN: (value) => new asn1js.Integer({ value: +value }),\n};\nexport const AsnEnumeratedConverter = {\n    fromASN: (value) => value.valueBlock.valueDec,\n    toASN: (value) => new asn1js.Enumerated({ value }),\n};\nexport const AsnIntegerArrayBufferConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.Integer({ valueHex: value }),\n};\nexport const AsnIntegerBigIntConverter = {\n    fromASN: (value) => value.toBigInt(),\n    toASN: (value) => asn1js.Integer.fromBigInt(value),\n};\nexport const AsnBitStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.BitString({ valueHex: value }),\n};\nexport const AsnObjectIdentifierConverter = {\n    fromASN: (value) => value.valueBlock.toString(),\n    toASN: (value) => new asn1js.ObjectIdentifier({ value }),\n};\nexport const AsnBooleanConverter = {\n    fromASN: (value) => value.valueBlock.value,\n    toASN: (value) => new asn1js.Boolean({ value }),\n};\nexport const AsnOctetStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.OctetString({ valueHex: value }),\n};\nexport const AsnConstructedOctetStringConverter = {\n    fromASN: (value) => new OctetString(value.getValue()),\n    toASN: (value) => value.toASN(),\n};\nfunction createStringConverter(Asn1Type) {\n    return {\n        fromASN: (value) => value.valueBlock.value,\n        toASN: (value) => new Asn1Type({ value }),\n    };\n}\nexport const AsnUtf8StringConverter = createStringConverter(asn1js.Utf8String);\nexport const AsnBmpStringConverter = createStringConverter(asn1js.BmpString);\nexport const AsnUniversalStringConverter = createStringConverter(asn1js.UniversalString);\nexport const AsnNumericStringConverter = createStringConverter(asn1js.NumericString);\nexport const AsnPrintableStringConverter = createStringConverter(asn1js.PrintableString);\nexport const AsnTeletexStringConverter = createStringConverter(asn1js.TeletexString);\nexport const AsnVideotexStringConverter = createStringConverter(asn1js.VideotexString);\nexport const AsnIA5StringConverter = createStringConverter(asn1js.IA5String);\nexport const AsnGraphicStringConverter = createStringConverter(asn1js.GraphicString);\nexport const AsnVisibleStringConverter = createStringConverter(asn1js.VisibleString);\nexport const AsnGeneralStringConverter = createStringConverter(asn1js.GeneralString);\nexport const AsnCharacterStringConverter = createStringConverter(asn1js.CharacterString);\nexport const AsnUTCTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1js.UTCTime({ valueDate: value }),\n};\nexport const AsnGeneralizedTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1js.GeneralizedTime({ valueDate: value }),\n};\nexport const AsnNullConverter = {\n    fromASN: () => null,\n    toASN: () => {\n        return new asn1js.Null();\n    },\n};\nexport function defaultConverter(type) {\n    switch (type) {\n        case AsnPropTypes.Any:\n            return AsnAnyConverter;\n        case AsnPropTypes.BitString:\n            return AsnBitStringConverter;\n        case AsnPropTypes.BmpString:\n            return AsnBmpStringConverter;\n        case AsnPropTypes.Boolean:\n            return AsnBooleanConverter;\n        case AsnPropTypes.CharacterString:\n            return AsnCharacterStringConverter;\n        case AsnPropTypes.Enumerated:\n            return AsnEnumeratedConverter;\n        case AsnPropTypes.GeneralString:\n            return AsnGeneralStringConverter;\n        case AsnPropTypes.GeneralizedTime:\n            return AsnGeneralizedTimeConverter;\n        case AsnPropTypes.GraphicString:\n            return AsnGraphicStringConverter;\n        case AsnPropTypes.IA5String:\n            return AsnIA5StringConverter;\n        case AsnPropTypes.Integer:\n            return AsnIntegerConverter;\n        case AsnPropTypes.Null:\n            return AsnNullConverter;\n        case AsnPropTypes.NumericString:\n            return AsnNumericStringConverter;\n        case AsnPropTypes.ObjectIdentifier:\n            return AsnObjectIdentifierConverter;\n        case AsnPropTypes.OctetString:\n            return AsnOctetStringConverter;\n        case AsnPropTypes.PrintableString:\n            return AsnPrintableStringConverter;\n        case AsnPropTypes.TeletexString:\n            return AsnTeletexStringConverter;\n        case AsnPropTypes.UTCTime:\n            return AsnUTCTimeConverter;\n        case AsnPropTypes.UniversalString:\n            return AsnUniversalStringConverter;\n        case AsnPropTypes.Utf8String:\n            return AsnUtf8StringConverter;\n        case AsnPropTypes.VideotexString:\n            return AsnVideotexStringConverter;\n        case AsnPropTypes.VisibleString:\n            return AsnVisibleStringConverter;\n        default:\n            return null;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13690, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13696, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/helper.js"],"sourcesContent":["export function isConvertible(target) {\n    if (typeof target === \"function\" && target.prototype) {\n        if (target.prototype.toASN && target.prototype.fromASN) {\n            return true;\n        }\n        else {\n            return isConvertible(target.prototype);\n        }\n    }\n    else {\n        return !!(target && typeof target === \"object\" && \"toASN\" in target && \"fromASN\" in target);\n    }\n}\nexport function isTypeOfArray(target) {\n    var _a;\n    if (target) {\n        const proto = Object.getPrototypeOf(target);\n        if (((_a = proto === null || proto === void 0 ? void 0 : proto.prototype) === null || _a === void 0 ? void 0 : _a.constructor) === Array) {\n            return true;\n        }\n        return isTypeOfArray(proto);\n    }\n    return false;\n}\nexport function isArrayEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n"],"names":[],"mappings":";;;;;AAAO,SAAS,cAAc,MAAM;IAChC,IAAI,OAAO,WAAW,cAAc,OAAO,SAAS,EAAE;QAClD,IAAI,OAAO,SAAS,CAAC,KAAK,IAAI,OAAO,SAAS,CAAC,OAAO,EAAE;YACpD,OAAO;QACX,OACK;YACD,OAAO,cAAc,OAAO,SAAS;QACzC;IACJ,OACK;QACD,OAAO,CAAC,CAAC,CAAC,UAAU,OAAO,WAAW,YAAY,WAAW,UAAU,aAAa,MAAM;IAC9F;AACJ;AACO,SAAS,cAAc,MAAM;IAChC,IAAI;IACJ,IAAI,QAAQ;QACR,MAAM,QAAQ,OAAO,cAAc,CAAC;QACpC,IAAI,CAAC,CAAC,KAAK,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,SAAS,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,WAAW,MAAM,OAAO;YACtI,OAAO;QACX;QACA,OAAO,cAAc;IACzB;IACA,OAAO;AACX;AACO,SAAS,aAAa,MAAM,EAAE,MAAM;IACvC,IAAI,CAAC,CAAC,UAAU,MAAM,GAAG;QACrB,OAAO;IACX;IACA,IAAI,OAAO,UAAU,KAAK,OAAO,UAAU,EAAE;QACzC,OAAO;IACX;IACA,MAAM,KAAK,IAAI,WAAW;IAC1B,MAAM,KAAK,IAAI,WAAW;IAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,UAAU,EAAE,IAAK;QACxC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE;YACjB,OAAO;QACX;IACJ;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 13739, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13745, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/schema.js"],"sourcesContent":["import * as asn1js from \"asn1js\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport { isConvertible } from \"./helper\";\nexport class AsnSchemaStorage {\n    constructor() {\n        this.items = new WeakMap();\n    }\n    has(target) {\n        return this.items.has(target);\n    }\n    get(target, checkSchema = false) {\n        const schema = this.items.get(target);\n        if (!schema) {\n            throw new Error(`Cannot get schema for '${target.prototype.constructor.name}' target`);\n        }\n        if (checkSchema && !schema.schema) {\n            throw new Error(`Schema '${target.prototype.constructor.name}' doesn't contain ASN.1 schema. Call 'AsnSchemaStorage.cache'.`);\n        }\n        return schema;\n    }\n    cache(target) {\n        const schema = this.get(target);\n        if (!schema.schema) {\n            schema.schema = this.create(target, true);\n        }\n    }\n    createDefault(target) {\n        const schema = {\n            type: AsnTypeTypes.Sequence,\n            items: {},\n        };\n        const parentSchema = this.findParentSchema(target);\n        if (parentSchema) {\n            Object.assign(schema, parentSchema);\n            schema.items = Object.assign({}, schema.items, parentSchema.items);\n        }\n        return schema;\n    }\n    create(target, useNames) {\n        const schema = this.items.get(target) || this.createDefault(target);\n        const asn1Value = [];\n        for (const key in schema.items) {\n            const item = schema.items[key];\n            const name = useNames ? key : \"\";\n            let asn1Item;\n            if (typeof item.type === \"number\") {\n                const Asn1TypeName = AsnPropTypes[item.type];\n                const Asn1Type = asn1js[Asn1TypeName];\n                if (!Asn1Type) {\n                    throw new Error(`Cannot get ASN1 class by name '${Asn1TypeName}'`);\n                }\n                asn1Item = new Asn1Type({ name });\n            }\n            else if (isConvertible(item.type)) {\n                const instance = new item.type();\n                asn1Item = instance.toSchema(name);\n            }\n            else if (item.optional) {\n                const itemSchema = this.get(item.type);\n                if (itemSchema.type === AsnTypeTypes.Choice) {\n                    asn1Item = new asn1js.Any({ name });\n                }\n                else {\n                    asn1Item = this.create(item.type, false);\n                    asn1Item.name = name;\n                }\n            }\n            else {\n                asn1Item = new asn1js.Any({ name });\n            }\n            const optional = !!item.optional || item.defaultValue !== undefined;\n            if (item.repeated) {\n                asn1Item.name = \"\";\n                const Container = item.repeated === \"set\" ? asn1js.Set : asn1js.Sequence;\n                asn1Item = new Container({\n                    name: \"\",\n                    value: [\n                        new asn1js.Repeated({\n                            name,\n                            value: asn1Item,\n                        }),\n                    ],\n                });\n            }\n            if (item.context !== null && item.context !== undefined) {\n                if (item.implicit) {\n                    if (typeof item.type === \"number\" || isConvertible(item.type)) {\n                        const Container = item.repeated ? asn1js.Constructed : asn1js.Primitive;\n                        asn1Value.push(new Container({\n                            name,\n                            optional,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: item.context,\n                            },\n                        }));\n                    }\n                    else {\n                        this.cache(item.type);\n                        const isRepeated = !!item.repeated;\n                        let value = !isRepeated ? this.get(item.type, true).schema : asn1Item;\n                        value =\n                            \"valueBlock\" in value\n                                ? value.valueBlock.value\n                                : value.value;\n                        asn1Value.push(new asn1js.Constructed({\n                            name: !isRepeated ? name : \"\",\n                            optional,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: item.context,\n                            },\n                            value: value,\n                        }));\n                    }\n                }\n                else {\n                    asn1Value.push(new asn1js.Constructed({\n                        optional,\n                        idBlock: {\n                            tagClass: 3,\n                            tagNumber: item.context,\n                        },\n                        value: [asn1Item],\n                    }));\n                }\n            }\n            else {\n                asn1Item.optional = optional;\n                asn1Value.push(asn1Item);\n            }\n        }\n        switch (schema.type) {\n            case AsnTypeTypes.Sequence:\n                return new asn1js.Sequence({ value: asn1Value, name: \"\" });\n            case AsnTypeTypes.Set:\n                return new asn1js.Set({ value: asn1Value, name: \"\" });\n            case AsnTypeTypes.Choice:\n                return new asn1js.Choice({ value: asn1Value, name: \"\" });\n            default:\n                throw new Error(`Unsupported ASN1 type in use`);\n        }\n    }\n    set(target, schema) {\n        this.items.set(target, schema);\n        return this;\n    }\n    findParentSchema(target) {\n        const parent = Object.getPrototypeOf(target);\n        if (parent) {\n            const schema = this.items.get(parent);\n            return schema || this.findParentSchema(parent);\n        }\n        return null;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13914, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13920, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/storage.js"],"sourcesContent":["import { AsnSchemaStorage } from \"./schema\";\nexport const schemaStorage = new AsnSchemaStorage();\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,IAAI,qPAAA,CAAA,mBAAgB","ignoreList":[0]}},
    {"offset": {"line": 13926, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13932, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/decorators.js"],"sourcesContent":["import * as converters from \"./converters\";\nimport { AsnTypeTypes } from \"./enums\";\nimport { schemaStorage } from \"./storage\";\nexport const AsnType = (options) => (target) => {\n    let schema;\n    if (!schemaStorage.has(target)) {\n        schema = schemaStorage.createDefault(target);\n        schemaStorage.set(target, schema);\n    }\n    else {\n        schema = schemaStorage.get(target);\n    }\n    Object.assign(schema, options);\n};\nexport const AsnChoiceType = () => AsnType({ type: AsnTypeTypes.Choice });\nexport const AsnSetType = (options) => AsnType({ type: AsnTypeTypes.Set, ...options });\nexport const AsnSequenceType = (options) => AsnType({ type: AsnTypeTypes.Sequence, ...options });\nexport const AsnProp = (options) => (target, propertyKey) => {\n    let schema;\n    if (!schemaStorage.has(target.constructor)) {\n        schema = schemaStorage.createDefault(target.constructor);\n        schemaStorage.set(target.constructor, schema);\n    }\n    else {\n        schema = schemaStorage.get(target.constructor);\n    }\n    const copyOptions = Object.assign({}, options);\n    if (typeof copyOptions.type === \"number\" && !copyOptions.converter) {\n        const defaultConverter = converters.defaultConverter(options.type);\n        if (!defaultConverter) {\n            throw new Error(`Cannot get default converter for property '${propertyKey}' of ${target.constructor.name}`);\n        }\n        copyOptions.converter = defaultConverter;\n    }\n    schema.items[propertyKey] = copyOptions;\n};\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;;;;AACO,MAAM,UAAU,CAAC,UAAY,CAAC;QACjC,IAAI;QACJ,IAAI,CAAC,sPAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,SAAS;YAC5B,SAAS,sPAAA,CAAA,gBAAa,CAAC,aAAa,CAAC;YACrC,sPAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,QAAQ;QAC9B,OACK;YACD,SAAS,sPAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;QAC/B;QACA,OAAO,MAAM,CAAC,QAAQ;IAC1B;AACO,MAAM,gBAAgB,IAAM,QAAQ;QAAE,MAAM,oPAAA,CAAA,eAAY,CAAC,MAAM;IAAC;AAChE,MAAM,aAAa,CAAC,UAAY,QAAQ;QAAE,MAAM,oPAAA,CAAA,eAAY,CAAC,GAAG;QAAE,GAAG,OAAO;IAAC;AAC7E,MAAM,kBAAkB,CAAC,UAAY,QAAQ;QAAE,MAAM,oPAAA,CAAA,eAAY,CAAC,QAAQ;QAAE,GAAG,OAAO;IAAC;AACvF,MAAM,UAAU,CAAC,UAAY,CAAC,QAAQ;QACzC,IAAI;QACJ,IAAI,CAAC,sPAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,OAAO,WAAW,GAAG;YACxC,SAAS,sPAAA,CAAA,gBAAa,CAAC,aAAa,CAAC,OAAO,WAAW;YACvD,sPAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,OAAO,WAAW,EAAE;QAC1C,OACK;YACD,SAAS,sPAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,OAAO,WAAW;QACjD;QACA,MAAM,cAAc,OAAO,MAAM,CAAC,CAAC,GAAG;QACtC,IAAI,OAAO,YAAY,IAAI,KAAK,YAAY,CAAC,YAAY,SAAS,EAAE;YAChE,MAAM,mBAAmB,0PAAW,gBAAgB,CAAC,QAAQ,IAAI;YACjE,IAAI,CAAC,kBAAkB;gBACnB,MAAM,IAAI,MAAM,CAAC,2CAA2C,EAAE,YAAY,KAAK,EAAE,OAAO,WAAW,CAAC,IAAI,EAAE;YAC9G;YACA,YAAY,SAAS,GAAG;QAC5B;QACA,OAAO,KAAK,CAAC,YAAY,GAAG;IAChC","ignoreList":[0]}},
    {"offset": {"line": 13984, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13990, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/errors/schema_validation.js"],"sourcesContent":["export class AsnSchemaValidationError extends Error {\n    constructor() {\n        super(...arguments);\n        this.schemas = [];\n    }\n}\n"],"names":[],"mappings":";;;AAAO,MAAM,iCAAiC;IAC1C,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,OAAO,GAAG,EAAE;IACrB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 13999, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14005, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 14007, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14022, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/parser.js"],"sourcesContent":["import * as asn1js from \"asn1js\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport * as converters from \"./converters\";\nimport { AsnSchemaValidationError } from \"./errors\";\nimport { isConvertible, isTypeOfArray } from \"./helper\";\nimport { schemaStorage } from \"./storage\";\nexport class AsnParser {\n    static parse(data, target) {\n        const asn1Parsed = asn1js.fromBER(data);\n        if (asn1Parsed.result.error) {\n            throw new Error(asn1Parsed.result.error);\n        }\n        const res = this.fromASN(asn1Parsed.result, target);\n        return res;\n    }\n    static fromASN(asn1Schema, target) {\n        var _a;\n        try {\n            if (isConvertible(target)) {\n                const value = new target();\n                return value.fromASN(asn1Schema);\n            }\n            const schema = schemaStorage.get(target);\n            schemaStorage.cache(target);\n            let targetSchema = schema.schema;\n            if (asn1Schema.constructor === asn1js.Constructed && schema.type !== AsnTypeTypes.Choice) {\n                targetSchema = new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: asn1Schema.idBlock.tagNumber,\n                    },\n                    value: schema.schema.valueBlock.value,\n                });\n                for (const key in schema.items) {\n                    delete asn1Schema[key];\n                }\n            }\n            const asn1ComparedSchema = asn1js.compareSchema({}, asn1Schema, targetSchema);\n            if (!asn1ComparedSchema.verified) {\n                throw new AsnSchemaValidationError(`Data does not match to ${target.name} ASN1 schema. ${asn1ComparedSchema.result.error}`);\n            }\n            const res = new target();\n            if (isTypeOfArray(target)) {\n                if (!(\"value\" in asn1Schema.valueBlock && Array.isArray(asn1Schema.valueBlock.value))) {\n                    throw new Error(`Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.`);\n                }\n                const itemType = schema.itemType;\n                if (typeof itemType === \"number\") {\n                    const converter = converters.defaultConverter(itemType);\n                    if (!converter) {\n                        throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n                    }\n                    return target.from(asn1Schema.valueBlock.value, (element) => converter.fromASN(element));\n                }\n                else {\n                    return target.from(asn1Schema.valueBlock.value, (element) => this.fromASN(element, itemType));\n                }\n            }\n            for (const key in schema.items) {\n                const asn1SchemaValue = asn1ComparedSchema.result[key];\n                if (!asn1SchemaValue) {\n                    continue;\n                }\n                const schemaItem = schema.items[key];\n                const schemaItemType = schemaItem.type;\n                if (typeof schemaItemType === \"number\" || isConvertible(schemaItemType)) {\n                    const converter = (_a = schemaItem.converter) !== null && _a !== void 0 ? _a : (isConvertible(schemaItemType)\n                        ? new schemaItemType()\n                        : null);\n                    if (!converter) {\n                        throw new Error(\"Converter is empty\");\n                    }\n                    if (schemaItem.repeated) {\n                        if (schemaItem.implicit) {\n                            const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n                            const newItem = new Container();\n                            newItem.valueBlock = asn1SchemaValue.valueBlock;\n                            const newItemAsn = asn1js.fromBER(newItem.toBER(false));\n                            if (newItemAsn.offset === -1) {\n                                throw new Error(`Cannot parse the child item. ${newItemAsn.result.error}`);\n                            }\n                            if (!(\"value\" in newItemAsn.result.valueBlock &&\n                                Array.isArray(newItemAsn.result.valueBlock.value))) {\n                                throw new Error(\"Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.\");\n                            }\n                            const value = newItemAsn.result.valueBlock.value;\n                            res[key] = Array.from(value, (element) => converter.fromASN(element));\n                        }\n                        else {\n                            res[key] = Array.from(asn1SchemaValue, (element) => converter.fromASN(element));\n                        }\n                    }\n                    else {\n                        let value = asn1SchemaValue;\n                        if (schemaItem.implicit) {\n                            let newItem;\n                            if (isConvertible(schemaItemType)) {\n                                newItem = new schemaItemType().toSchema(\"\");\n                            }\n                            else {\n                                const Asn1TypeName = AsnPropTypes[schemaItemType];\n                                const Asn1Type = asn1js[Asn1TypeName];\n                                if (!Asn1Type) {\n                                    throw new Error(`Cannot get '${Asn1TypeName}' class from asn1js module`);\n                                }\n                                newItem = new Asn1Type();\n                            }\n                            newItem.valueBlock = value.valueBlock;\n                            value = asn1js.fromBER(newItem.toBER(false)).result;\n                        }\n                        res[key] = converter.fromASN(value);\n                    }\n                }\n                else {\n                    if (schemaItem.repeated) {\n                        if (!Array.isArray(asn1SchemaValue)) {\n                            throw new Error(\"Cannot get list of items from the ASN.1 parsed value. ASN.1 value should be iterable.\");\n                        }\n                        res[key] = Array.from(asn1SchemaValue, (element) => this.fromASN(element, schemaItemType));\n                    }\n                    else {\n                        res[key] = this.fromASN(asn1SchemaValue, schemaItemType);\n                    }\n                }\n            }\n            return res;\n        }\n        catch (error) {\n            if (error instanceof AsnSchemaValidationError) {\n                error.schemas.push(target.name);\n            }\n            throw error;\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14163, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/serializer.js"],"sourcesContent":["import * as asn1js from \"asn1js\";\nimport * as converters from \"./converters\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport { isConvertible, isArrayEqual } from \"./helper\";\nimport { schemaStorage } from \"./storage\";\nexport class AsnSerializer {\n    static serialize(obj) {\n        if (obj instanceof asn1js.BaseBlock) {\n            return obj.toBER(false);\n        }\n        return this.toASN(obj).toBER(false);\n    }\n    static toASN(obj) {\n        if (obj && typeof obj === \"object\" && isConvertible(obj)) {\n            return obj.toASN();\n        }\n        if (!(obj && typeof obj === \"object\")) {\n            throw new TypeError(\"Parameter 1 should be type of Object.\");\n        }\n        const target = obj.constructor;\n        const schema = schemaStorage.get(target);\n        schemaStorage.cache(target);\n        let asn1Value = [];\n        if (schema.itemType) {\n            if (!Array.isArray(obj)) {\n                throw new TypeError(\"Parameter 1 should be type of Array.\");\n            }\n            if (typeof schema.itemType === \"number\") {\n                const converter = converters.defaultConverter(schema.itemType);\n                if (!converter) {\n                    throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n                }\n                asn1Value = obj.map((o) => converter.toASN(o));\n            }\n            else {\n                asn1Value = obj.map((o) => this.toAsnItem({ type: schema.itemType }, \"[]\", target, o));\n            }\n        }\n        else {\n            for (const key in schema.items) {\n                const schemaItem = schema.items[key];\n                const objProp = obj[key];\n                if (objProp === undefined ||\n                    schemaItem.defaultValue === objProp ||\n                    (typeof schemaItem.defaultValue === \"object\" &&\n                        typeof objProp === \"object\" &&\n                        isArrayEqual(this.serialize(schemaItem.defaultValue), this.serialize(objProp)))) {\n                    continue;\n                }\n                const asn1Item = AsnSerializer.toAsnItem(schemaItem, key, target, objProp);\n                if (typeof schemaItem.context === \"number\") {\n                    if (schemaItem.implicit) {\n                        if (!schemaItem.repeated &&\n                            (typeof schemaItem.type === \"number\" || isConvertible(schemaItem.type))) {\n                            const value = {};\n                            value.valueHex =\n                                asn1Item instanceof asn1js.Null\n                                    ? asn1Item.valueBeforeDecodeView\n                                    : asn1Item.valueBlock.toBER();\n                            asn1Value.push(new asn1js.Primitive({\n                                optional: schemaItem.optional,\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: schemaItem.context,\n                                },\n                                ...value,\n                            }));\n                        }\n                        else {\n                            asn1Value.push(new asn1js.Constructed({\n                                optional: schemaItem.optional,\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: schemaItem.context,\n                                },\n                                value: asn1Item.valueBlock.value,\n                            }));\n                        }\n                    }\n                    else {\n                        asn1Value.push(new asn1js.Constructed({\n                            optional: schemaItem.optional,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: schemaItem.context,\n                            },\n                            value: [asn1Item],\n                        }));\n                    }\n                }\n                else if (schemaItem.repeated) {\n                    asn1Value = asn1Value.concat(asn1Item);\n                }\n                else {\n                    asn1Value.push(asn1Item);\n                }\n            }\n        }\n        let asnSchema;\n        switch (schema.type) {\n            case AsnTypeTypes.Sequence:\n                asnSchema = new asn1js.Sequence({ value: asn1Value });\n                break;\n            case AsnTypeTypes.Set:\n                asnSchema = new asn1js.Set({ value: asn1Value });\n                break;\n            case AsnTypeTypes.Choice:\n                if (!asn1Value[0]) {\n                    throw new Error(`Schema '${target.name}' has wrong data. Choice cannot be empty.`);\n                }\n                asnSchema = asn1Value[0];\n                break;\n        }\n        return asnSchema;\n    }\n    static toAsnItem(schemaItem, key, target, objProp) {\n        let asn1Item;\n        if (typeof schemaItem.type === \"number\") {\n            const converter = schemaItem.converter;\n            if (!converter) {\n                throw new Error(`Property '${key}' doesn't have converter for type ${AsnPropTypes[schemaItem.type]} in schema '${target.name}'`);\n            }\n            if (schemaItem.repeated) {\n                if (!Array.isArray(objProp)) {\n                    throw new TypeError(\"Parameter 'objProp' should be type of Array.\");\n                }\n                const items = Array.from(objProp, (element) => converter.toASN(element));\n                const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n                asn1Item = new Container({\n                    value: items,\n                });\n            }\n            else {\n                asn1Item = converter.toASN(objProp);\n            }\n        }\n        else {\n            if (schemaItem.repeated) {\n                if (!Array.isArray(objProp)) {\n                    throw new TypeError(\"Parameter 'objProp' should be type of Array.\");\n                }\n                const items = Array.from(objProp, (element) => this.toASN(element));\n                const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n                asn1Item = new Container({\n                    value: items,\n                });\n            }\n            else {\n                asn1Item = this.toASN(objProp);\n            }\n        }\n        return asn1Item;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14322, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/objects.js"],"sourcesContent":["export class AsnArray extends Array {\n    constructor(items = []) {\n        if (typeof items === \"number\") {\n            super(items);\n        }\n        else {\n            super();\n            for (const item of items) {\n                this.push(item);\n            }\n        }\n    }\n}\n"],"names":[],"mappings":";;;AAAO,MAAM,iBAAiB;IAC1B,YAAY,QAAQ,EAAE,CAAE;QACpB,IAAI,OAAO,UAAU,UAAU;YAC3B,KAAK,CAAC;QACV,OACK;YACD,KAAK;YACL,KAAK,MAAM,QAAQ,MAAO;gBACtB,IAAI,CAAC,IAAI,CAAC;YACd;QACJ;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 14337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14343, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Basn1-schema%402.3.15/node_modules/%40peculiar/asn1-schema/build/es2015/convert.js"],"sourcesContent":["import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nimport { AsnParser } from \"./parser\";\nimport { AsnSerializer } from \"./serializer\";\nexport class AsnConvert {\n    static serialize(obj) {\n        return AsnSerializer.serialize(obj);\n    }\n    static parse(data, target) {\n        return AsnParser.parse(data, target);\n    }\n    static toString(data) {\n        const buf = BufferSourceConverter.isBufferSource(data)\n            ? BufferSourceConverter.toArrayBuffer(data)\n            : AsnConvert.serialize(data);\n        const asn = asn1js.fromBER(buf);\n        if (asn.offset === -1) {\n            throw new Error(`Cannot decode ASN.1 data. ${asn.result.error}`);\n        }\n        return asn.result.toString();\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AACO,MAAM;IACT,OAAO,UAAU,GAAG,EAAE;QAClB,OAAO,yPAAA,CAAA,gBAAa,CAAC,SAAS,CAAC;IACnC;IACA,OAAO,MAAM,IAAI,EAAE,MAAM,EAAE;QACvB,OAAO,qPAAA,CAAA,YAAS,CAAC,KAAK,CAAC,MAAM;IACjC;IACA,OAAO,SAAS,IAAI,EAAE;QAClB,MAAM,MAAM,yMAAA,CAAA,wBAAqB,CAAC,cAAc,CAAC,QAC3C,yMAAA,CAAA,wBAAqB,CAAC,aAAa,CAAC,QACpC,WAAW,SAAS,CAAC;QAC3B,MAAM,MAAM,oMAAO,OAAO,CAAC;QAC3B,IAAI,IAAI,MAAM,KAAK,CAAC,GAAG;YACnB,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,IAAI,MAAM,CAAC,KAAK,EAAE;QACnE;QACA,OAAO,IAAI,MAAM,CAAC,QAAQ;IAC9B;AACJ","ignoreList":[0]}},
    {"offset": {"line": 14370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14376, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 14386, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14409, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Bjson-schema%401.1.12/node_modules/%40peculiar/json-schema/build/index.es.js"],"sourcesContent":["/**\n * Copyright (c) 2020, Peculiar Ventures, All rights reserved.\n */\n\nclass JsonError extends Error {\r\n    constructor(message, innerError) {\r\n        super(innerError\r\n            ? `${message}. See the inner exception for more details.`\r\n            : message);\r\n        this.message = message;\r\n        this.innerError = innerError;\r\n    }\r\n}\n\nclass TransformError extends JsonError {\r\n    constructor(schema, message, innerError) {\r\n        super(message, innerError);\r\n        this.schema = schema;\r\n    }\r\n}\n\nclass ParserError extends TransformError {\r\n    constructor(schema, message, innerError) {\r\n        super(schema, `JSON doesn't match to '${schema.target.name}' schema. ${message}`, innerError);\r\n    }\r\n}\n\nclass ValidationError extends JsonError {\r\n}\n\nclass SerializerError extends JsonError {\r\n    constructor(schemaName, message, innerError) {\r\n        super(`Cannot serialize by '${schemaName}' schema. ${message}`, innerError);\r\n        this.schemaName = schemaName;\r\n    }\r\n}\n\nclass KeyError extends ParserError {\r\n    constructor(schema, keys, errors = {}) {\r\n        super(schema, \"Some keys doesn't match to schema\");\r\n        this.keys = keys;\r\n        this.errors = errors;\r\n    }\r\n}\n\nvar JsonPropTypes;\r\n(function (JsonPropTypes) {\r\n    JsonPropTypes[JsonPropTypes[\"Any\"] = 0] = \"Any\";\r\n    JsonPropTypes[JsonPropTypes[\"Boolean\"] = 1] = \"Boolean\";\r\n    JsonPropTypes[JsonPropTypes[\"Number\"] = 2] = \"Number\";\r\n    JsonPropTypes[JsonPropTypes[\"String\"] = 3] = \"String\";\r\n})(JsonPropTypes || (JsonPropTypes = {}));\n\nfunction checkType(value, type) {\r\n    switch (type) {\r\n        case JsonPropTypes.Boolean:\r\n            return typeof value === \"boolean\";\r\n        case JsonPropTypes.Number:\r\n            return typeof value === \"number\";\r\n        case JsonPropTypes.String:\r\n            return typeof value === \"string\";\r\n    }\r\n    return true;\r\n}\r\nfunction throwIfTypeIsWrong(value, type) {\r\n    if (!checkType(value, type)) {\r\n        throw new TypeError(`Value must be ${JsonPropTypes[type]}`);\r\n    }\r\n}\r\nfunction isConvertible(target) {\r\n    if (target && target.prototype) {\r\n        if (target.prototype.toJSON && target.prototype.fromJSON) {\r\n            return true;\r\n        }\r\n        else {\r\n            return isConvertible(target.prototype);\r\n        }\r\n    }\r\n    else {\r\n        return !!(target && target.toJSON && target.fromJSON);\r\n    }\r\n}\n\nclass JsonSchemaStorage {\r\n    constructor() {\r\n        this.items = new Map();\r\n    }\r\n    has(target) {\r\n        return this.items.has(target) || !!this.findParentSchema(target);\r\n    }\r\n    get(target) {\r\n        const schema = this.items.get(target) || this.findParentSchema(target);\r\n        if (!schema) {\r\n            throw new Error(\"Cannot get schema for current target\");\r\n        }\r\n        return schema;\r\n    }\r\n    create(target) {\r\n        const schema = { names: {} };\r\n        const parentSchema = this.findParentSchema(target);\r\n        if (parentSchema) {\r\n            Object.assign(schema, parentSchema);\r\n            schema.names = {};\r\n            for (const name in parentSchema.names) {\r\n                schema.names[name] = Object.assign({}, parentSchema.names[name]);\r\n            }\r\n        }\r\n        schema.target = target;\r\n        return schema;\r\n    }\r\n    set(target, schema) {\r\n        this.items.set(target, schema);\r\n        return this;\r\n    }\r\n    findParentSchema(target) {\r\n        const parent = target.__proto__;\r\n        if (parent) {\r\n            const schema = this.items.get(parent);\r\n            return schema || this.findParentSchema(parent);\r\n        }\r\n        return null;\r\n    }\r\n}\n\nconst DEFAULT_SCHEMA = \"default\";\r\nconst schemaStorage = new JsonSchemaStorage();\n\nclass PatternValidation {\r\n    constructor(pattern) {\r\n        this.pattern = new RegExp(pattern);\r\n    }\r\n    validate(value) {\r\n        const pattern = new RegExp(this.pattern.source, this.pattern.flags);\r\n        if (typeof value !== \"string\") {\r\n            throw new ValidationError(\"Incoming value must be string\");\r\n        }\r\n        if (!pattern.exec(value)) {\r\n            throw new ValidationError(`Value doesn't match to pattern '${pattern.toString()}'`);\r\n        }\r\n    }\r\n}\n\nclass InclusiveValidation {\r\n    constructor(min = Number.MIN_VALUE, max = Number.MAX_VALUE) {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    validate(value) {\r\n        throwIfTypeIsWrong(value, JsonPropTypes.Number);\r\n        if (!(this.min <= value && value <= this.max)) {\r\n            const min = this.min === Number.MIN_VALUE ? \"MIN\" : this.min;\r\n            const max = this.max === Number.MAX_VALUE ? \"MAX\" : this.max;\r\n            throw new ValidationError(`Value doesn't match to diapason [${min},${max}]`);\r\n        }\r\n    }\r\n}\n\nclass ExclusiveValidation {\r\n    constructor(min = Number.MIN_VALUE, max = Number.MAX_VALUE) {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    validate(value) {\r\n        throwIfTypeIsWrong(value, JsonPropTypes.Number);\r\n        if (!(this.min < value && value < this.max)) {\r\n            const min = this.min === Number.MIN_VALUE ? \"MIN\" : this.min;\r\n            const max = this.max === Number.MAX_VALUE ? \"MAX\" : this.max;\r\n            throw new ValidationError(`Value doesn't match to diapason (${min},${max})`);\r\n        }\r\n    }\r\n}\n\nclass LengthValidation {\r\n    constructor(length, minLength, maxLength) {\r\n        this.length = length;\r\n        this.minLength = minLength;\r\n        this.maxLength = maxLength;\r\n    }\r\n    validate(value) {\r\n        if (this.length !== undefined) {\r\n            if (value.length !== this.length) {\r\n                throw new ValidationError(`Value length must be exactly ${this.length}.`);\r\n            }\r\n            return;\r\n        }\r\n        if (this.minLength !== undefined) {\r\n            if (value.length < this.minLength) {\r\n                throw new ValidationError(`Value length must be more than ${this.minLength}.`);\r\n            }\r\n        }\r\n        if (this.maxLength !== undefined) {\r\n            if (value.length > this.maxLength) {\r\n                throw new ValidationError(`Value length must be less than ${this.maxLength}.`);\r\n            }\r\n        }\r\n    }\r\n}\n\nclass EnumerationValidation {\r\n    constructor(enumeration) {\r\n        this.enumeration = enumeration;\r\n    }\r\n    validate(value) {\r\n        throwIfTypeIsWrong(value, JsonPropTypes.String);\r\n        if (!this.enumeration.includes(value)) {\r\n            throw new ValidationError(`Value must be one of ${this.enumeration.map((v) => `'${v}'`).join(\", \")}`);\r\n        }\r\n    }\r\n}\n\nclass JsonTransform {\r\n    static checkValues(data, schemaItem) {\r\n        const values = Array.isArray(data) ? data : [data];\r\n        for (const value of values) {\r\n            for (const validation of schemaItem.validations) {\r\n                if (validation instanceof LengthValidation && schemaItem.repeated) {\r\n                    validation.validate(data);\r\n                }\r\n                else {\r\n                    validation.validate(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static checkTypes(value, schemaItem) {\r\n        if (schemaItem.repeated && !Array.isArray(value)) {\r\n            throw new TypeError(\"Value must be Array\");\r\n        }\r\n        if (typeof schemaItem.type === \"number\") {\r\n            const values = Array.isArray(value) ? value : [value];\r\n            for (const v of values) {\r\n                throwIfTypeIsWrong(v, schemaItem.type);\r\n            }\r\n        }\r\n    }\r\n    static getSchemaByName(schema, name = DEFAULT_SCHEMA) {\r\n        return { ...schema.names[DEFAULT_SCHEMA], ...schema.names[name] };\r\n    }\r\n}\n\nclass JsonSerializer extends JsonTransform {\r\n    static serialize(obj, options, replacer, space) {\r\n        const json = this.toJSON(obj, options);\r\n        return JSON.stringify(json, replacer, space);\r\n    }\r\n    static toJSON(obj, options = {}) {\r\n        let res;\r\n        let targetSchema = options.targetSchema;\r\n        const schemaName = options.schemaName || DEFAULT_SCHEMA;\r\n        if (isConvertible(obj)) {\r\n            return obj.toJSON();\r\n        }\r\n        if (Array.isArray(obj)) {\r\n            res = [];\r\n            for (const item of obj) {\r\n                res.push(this.toJSON(item, options));\r\n            }\r\n        }\r\n        else if (typeof obj === \"object\") {\r\n            if (targetSchema && !schemaStorage.has(targetSchema)) {\r\n                throw new JsonError(\"Cannot get schema for `targetSchema` param\");\r\n            }\r\n            targetSchema = (targetSchema || obj.constructor);\r\n            if (schemaStorage.has(targetSchema)) {\r\n                const schema = schemaStorage.get(targetSchema);\r\n                res = {};\r\n                const namedSchema = this.getSchemaByName(schema, schemaName);\r\n                for (const key in namedSchema) {\r\n                    try {\r\n                        const item = namedSchema[key];\r\n                        const objItem = obj[key];\r\n                        let value;\r\n                        if ((item.optional && objItem === undefined)\r\n                            || (item.defaultValue !== undefined && objItem === item.defaultValue)) {\r\n                            continue;\r\n                        }\r\n                        if (!item.optional && objItem === undefined) {\r\n                            throw new SerializerError(targetSchema.name, `Property '${key}' is required.`);\r\n                        }\r\n                        if (typeof item.type === \"number\") {\r\n                            if (item.converter) {\r\n                                if (item.repeated) {\r\n                                    value = objItem.map((el) => item.converter.toJSON(el, obj));\r\n                                }\r\n                                else {\r\n                                    value = item.converter.toJSON(objItem, obj);\r\n                                }\r\n                            }\r\n                            else {\r\n                                value = objItem;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (item.repeated) {\r\n                                value = objItem.map((el) => this.toJSON(el, { schemaName }));\r\n                            }\r\n                            else {\r\n                                value = this.toJSON(objItem, { schemaName });\r\n                            }\r\n                        }\r\n                        this.checkTypes(value, item);\r\n                        this.checkValues(value, item);\r\n                        res[item.name || key] = value;\r\n                    }\r\n                    catch (e) {\r\n                        if (e instanceof SerializerError) {\r\n                            throw e;\r\n                        }\r\n                        else {\r\n                            throw new SerializerError(schema.target.name, `Property '${key}' is wrong. ${e.message}`, e);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                res = {};\r\n                for (const key in obj) {\r\n                    res[key] = this.toJSON(obj[key], { schemaName });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            res = obj;\r\n        }\r\n        return res;\r\n    }\r\n}\n\nclass JsonParser extends JsonTransform {\r\n    static parse(data, options) {\r\n        const obj = JSON.parse(data);\r\n        return this.fromJSON(obj, options);\r\n    }\r\n    static fromJSON(target, options) {\r\n        const targetSchema = options.targetSchema;\r\n        const schemaName = options.schemaName || DEFAULT_SCHEMA;\r\n        const obj = new targetSchema();\r\n        if (isConvertible(obj)) {\r\n            return obj.fromJSON(target);\r\n        }\r\n        const schema = schemaStorage.get(targetSchema);\r\n        const namedSchema = this.getSchemaByName(schema, schemaName);\r\n        const keyErrors = {};\r\n        if (options.strictProperty && !Array.isArray(target)) {\r\n            JsonParser.checkStrictProperty(target, namedSchema, schema);\r\n        }\r\n        for (const key in namedSchema) {\r\n            try {\r\n                const item = namedSchema[key];\r\n                const name = item.name || key;\r\n                const value = target[name];\r\n                if (value === undefined && (item.optional || item.defaultValue !== undefined)) {\r\n                    continue;\r\n                }\r\n                if (!item.optional && value === undefined) {\r\n                    throw new ParserError(schema, `Property '${name}' is required.`);\r\n                }\r\n                this.checkTypes(value, item);\r\n                this.checkValues(value, item);\r\n                if (typeof (item.type) === \"number\") {\r\n                    if (item.converter) {\r\n                        if (item.repeated) {\r\n                            obj[key] = value.map((el) => item.converter.fromJSON(el, obj));\r\n                        }\r\n                        else {\r\n                            obj[key] = item.converter.fromJSON(value, obj);\r\n                        }\r\n                    }\r\n                    else {\r\n                        obj[key] = value;\r\n                    }\r\n                }\r\n                else {\r\n                    const newOptions = {\r\n                        ...options,\r\n                        targetSchema: item.type,\r\n                        schemaName,\r\n                    };\r\n                    if (item.repeated) {\r\n                        obj[key] = value.map((el) => this.fromJSON(el, newOptions));\r\n                    }\r\n                    else {\r\n                        obj[key] = this.fromJSON(value, newOptions);\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                if (!(e instanceof ParserError)) {\r\n                    e = new ParserError(schema, `Property '${key}' is wrong. ${e.message}`, e);\r\n                }\r\n                if (options.strictAllKeys) {\r\n                    keyErrors[key] = e;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        const keys = Object.keys(keyErrors);\r\n        if (keys.length) {\r\n            throw new KeyError(schema, keys, keyErrors);\r\n        }\r\n        return obj;\r\n    }\r\n    static checkStrictProperty(target, namedSchema, schema) {\r\n        const jsonProps = Object.keys(target);\r\n        const schemaProps = Object.keys(namedSchema);\r\n        const keys = [];\r\n        for (const key of jsonProps) {\r\n            if (schemaProps.indexOf(key) === -1) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        if (keys.length) {\r\n            throw new KeyError(schema, keys);\r\n        }\r\n    }\r\n}\n\nfunction getValidations(item) {\r\n    const validations = [];\r\n    if (item.pattern) {\r\n        validations.push(new PatternValidation(item.pattern));\r\n    }\r\n    if (item.type === JsonPropTypes.Number || item.type === JsonPropTypes.Any) {\r\n        if (item.minInclusive !== undefined || item.maxInclusive !== undefined) {\r\n            validations.push(new InclusiveValidation(item.minInclusive, item.maxInclusive));\r\n        }\r\n        if (item.minExclusive !== undefined || item.maxExclusive !== undefined) {\r\n            validations.push(new ExclusiveValidation(item.minExclusive, item.maxExclusive));\r\n        }\r\n        if (item.enumeration !== undefined) {\r\n            validations.push(new EnumerationValidation(item.enumeration));\r\n        }\r\n    }\r\n    if (item.type === JsonPropTypes.String || item.repeated || item.type === JsonPropTypes.Any) {\r\n        if (item.length !== undefined || item.minLength !== undefined || item.maxLength !== undefined) {\r\n            validations.push(new LengthValidation(item.length, item.minLength, item.maxLength));\r\n        }\r\n    }\r\n    return validations;\r\n}\r\nconst JsonProp = (options = {}) => (target, propertyKey) => {\r\n    const errorMessage = `Cannot set type for ${propertyKey} property of ${target.constructor.name} schema`;\r\n    let schema;\r\n    if (!schemaStorage.has(target.constructor)) {\r\n        schema = schemaStorage.create(target.constructor);\r\n        schemaStorage.set(target.constructor, schema);\r\n    }\r\n    else {\r\n        schema = schemaStorage.get(target.constructor);\r\n        if (schema.target !== target.constructor) {\r\n            schema = schemaStorage.create(target.constructor);\r\n            schemaStorage.set(target.constructor, schema);\r\n        }\r\n    }\r\n    const defaultSchema = {\r\n        type: JsonPropTypes.Any,\r\n        validations: [],\r\n    };\r\n    const copyOptions = Object.assign(defaultSchema, options);\r\n    copyOptions.validations = getValidations(copyOptions);\r\n    if (typeof copyOptions.type !== \"number\") {\r\n        if (!schemaStorage.has(copyOptions.type) && !isConvertible(copyOptions.type)) {\r\n            throw new Error(`${errorMessage}. Assigning type doesn't have schema.`);\r\n        }\r\n    }\r\n    let schemaNames;\r\n    if (Array.isArray(options.schema)) {\r\n        schemaNames = options.schema;\r\n    }\r\n    else {\r\n        schemaNames = [options.schema || DEFAULT_SCHEMA];\r\n    }\r\n    for (const schemaName of schemaNames) {\r\n        if (!schema.names[schemaName]) {\r\n            schema.names[schemaName] = {};\r\n        }\r\n        const namedSchema = schema.names[schemaName];\r\n        namedSchema[propertyKey] = copyOptions;\r\n    }\r\n};\n\nexport { JsonError, JsonParser, JsonProp, JsonPropTypes, JsonSerializer, KeyError, ParserError, SerializerError, TransformError, ValidationError };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14878, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14884, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/tslib%402.8.1/node_modules/tslib/tslib.es6.mjs"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15478, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15484, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/webcrypto-core%401.8.1/node_modules/webcrypto-core/build/webcrypto-core.es.js"],"sourcesContent":["/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nimport { Convert, BufferSourceConverter, combine } from 'pvtsutils';\nexport { BufferSourceConverter } from 'pvtsutils';\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnIntegerConverter, AsnSerializer, AsnConvert } from '@peculiar/asn1-schema';\nimport { __decorate } from 'tslib';\nimport { JsonProp, JsonPropTypes } from '@peculiar/json-schema';\nimport * as asn1 from 'asn1js';\n\nclass CryptoError extends Error {\n}\n\nclass AlgorithmError extends CryptoError {\n}\n\nclass UnsupportedOperationError extends CryptoError {\n    constructor(methodName) {\n        super(`Unsupported operation: ${methodName ? `${methodName}` : \"\"}`);\n    }\n}\n\nclass OperationError extends CryptoError {\n}\n\nclass RequiredPropertyError extends CryptoError {\n    constructor(propName) {\n        super(`${propName}: Missing required property`);\n    }\n}\n\nclass PemConverter {\n    static toArrayBuffer(pem) {\n        const base64 = pem\n            .replace(/-{5}(BEGIN|END) .*-{5}/g, \"\")\n            .replace(\"\\r\", \"\")\n            .replace(\"\\n\", \"\");\n        return Convert.FromBase64(base64);\n    }\n    static toUint8Array(pem) {\n        const bytes = this.toArrayBuffer(pem);\n        return new Uint8Array(bytes);\n    }\n    static fromBufferSource(buffer, tag) {\n        const base64 = Convert.ToBase64(buffer);\n        let sliced;\n        let offset = 0;\n        const rows = [];\n        while (offset < base64.length) {\n            sliced = base64.slice(offset, offset + 64);\n            if (sliced.length) {\n                rows.push(sliced);\n            }\n            else {\n                break;\n            }\n            offset += 64;\n        }\n        const upperCaseTag = tag.toUpperCase();\n        return `-----BEGIN ${upperCaseTag}-----\\n${rows.join(\"\\n\")}\\n-----END ${upperCaseTag}-----`;\n    }\n    static isPEM(data) {\n        return /-----BEGIN .+-----[A-Za-z0-9+/+=\\s\\n]+-----END .+-----/i.test(data);\n    }\n    static getTagName(pem) {\n        if (!this.isPEM(pem)) {\n            throw new Error(\"Bad parameter. Incoming data is not right PEM\");\n        }\n        const res = /-----BEGIN (.+)-----/.exec(pem);\n        if (!res) {\n            throw new Error(\"Cannot get tag from PEM\");\n        }\n        return res[1];\n    }\n    static hasTagName(pem, tagName) {\n        const tag = this.getTagName(pem);\n        return tagName.toLowerCase() === tag.toLowerCase();\n    }\n    static isCertificate(pem) {\n        return this.hasTagName(pem, \"certificate\");\n    }\n    static isCertificateRequest(pem) {\n        return this.hasTagName(pem, \"certificate request\");\n    }\n    static isCRL(pem) {\n        return this.hasTagName(pem, \"x509 crl\");\n    }\n    static isPublicKey(pem) {\n        return this.hasTagName(pem, \"public key\");\n    }\n}\n\nfunction isJWK(data) {\n    return typeof data === \"object\" && \"kty\" in data;\n}\n\nclass ProviderCrypto {\n    async digest(...args) {\n        this.checkDigest.apply(this, args);\n        return this.onDigest.apply(this, args);\n    }\n    checkDigest(algorithm, _data) {\n        this.checkAlgorithmName(algorithm);\n    }\n    async onDigest(_algorithm, _data) {\n        throw new UnsupportedOperationError(\"digest\");\n    }\n    async generateKey(...args) {\n        this.checkGenerateKey.apply(this, args);\n        return this.onGenerateKey.apply(this, args);\n    }\n    checkGenerateKey(algorithm, _extractable, keyUsages, ..._args) {\n        this.checkAlgorithmName(algorithm);\n        this.checkGenerateKeyParams(algorithm);\n        if (!(keyUsages && keyUsages.length)) {\n            throw new TypeError(`Usages cannot be empty when creating a key.`);\n        }\n        let allowedUsages;\n        if (Array.isArray(this.usages)) {\n            allowedUsages = this.usages;\n        }\n        else {\n            allowedUsages = this.usages.privateKey.concat(this.usages.publicKey);\n        }\n        this.checkKeyUsages(keyUsages, allowedUsages);\n    }\n    checkGenerateKeyParams(_algorithm) {\n    }\n    async onGenerateKey(_algorithm, _extractable, _keyUsages, ..._args) {\n        throw new UnsupportedOperationError(\"generateKey\");\n    }\n    async sign(...args) {\n        this.checkSign.apply(this, args);\n        return this.onSign.apply(this, args);\n    }\n    checkSign(algorithm, key, _data, ..._args) {\n        this.checkAlgorithmName(algorithm);\n        this.checkAlgorithmParams(algorithm);\n        this.checkCryptoKey(key, \"sign\");\n    }\n    async onSign(_algorithm, _key, _data, ..._args) {\n        throw new UnsupportedOperationError(\"sign\");\n    }\n    async verify(...args) {\n        this.checkVerify.apply(this, args);\n        return this.onVerify.apply(this, args);\n    }\n    checkVerify(algorithm, key, _signature, _data, ..._args) {\n        this.checkAlgorithmName(algorithm);\n        this.checkAlgorithmParams(algorithm);\n        this.checkCryptoKey(key, \"verify\");\n    }\n    async onVerify(_algorithm, _key, _signature, _data, ..._args) {\n        throw new UnsupportedOperationError(\"verify\");\n    }\n    async encrypt(...args) {\n        this.checkEncrypt.apply(this, args);\n        return this.onEncrypt.apply(this, args);\n    }\n    checkEncrypt(algorithm, key, _data, options = {}, ..._args) {\n        this.checkAlgorithmName(algorithm);\n        this.checkAlgorithmParams(algorithm);\n        this.checkCryptoKey(key, options.keyUsage ? \"encrypt\" : void 0);\n    }\n    async onEncrypt(_algorithm, _key, _data, ..._args) {\n        throw new UnsupportedOperationError(\"encrypt\");\n    }\n    async decrypt(...args) {\n        this.checkDecrypt.apply(this, args);\n        return this.onDecrypt.apply(this, args);\n    }\n    checkDecrypt(algorithm, key, _data, options = {}, ..._args) {\n        this.checkAlgorithmName(algorithm);\n        this.checkAlgorithmParams(algorithm);\n        this.checkCryptoKey(key, options.keyUsage ? \"decrypt\" : void 0);\n    }\n    async onDecrypt(_algorithm, _key, _data, ..._args) {\n        throw new UnsupportedOperationError(\"decrypt\");\n    }\n    async deriveBits(...args) {\n        this.checkDeriveBits.apply(this, args);\n        return this.onDeriveBits.apply(this, args);\n    }\n    checkDeriveBits(algorithm, baseKey, length, options = {}, ..._args) {\n        this.checkAlgorithmName(algorithm);\n        this.checkAlgorithmParams(algorithm);\n        this.checkCryptoKey(baseKey, options.keyUsage ? \"deriveBits\" : void 0);\n        if (length % 8 !== 0) {\n            throw new OperationError(\"length: Is not multiple of 8\");\n        }\n    }\n    async onDeriveBits(_algorithm, _baseKey, _length, ..._args) {\n        throw new UnsupportedOperationError(\"deriveBits\");\n    }\n    async exportKey(...args) {\n        this.checkExportKey.apply(this, args);\n        return this.onExportKey.apply(this, args);\n    }\n    checkExportKey(format, key, ..._args) {\n        this.checkKeyFormat(format);\n        this.checkCryptoKey(key);\n        if (!key.extractable) {\n            throw new CryptoError(\"key: Is not extractable\");\n        }\n    }\n    async onExportKey(_format, _key, ..._args) {\n        throw new UnsupportedOperationError(\"exportKey\");\n    }\n    async importKey(...args) {\n        this.checkImportKey.apply(this, args);\n        return this.onImportKey.apply(this, args);\n    }\n    checkImportKey(format, keyData, algorithm, _extractable, keyUsages, ..._args) {\n        this.checkKeyFormat(format);\n        this.checkKeyData(format, keyData);\n        this.checkAlgorithmName(algorithm);\n        this.checkImportParams(algorithm);\n        if (Array.isArray(this.usages)) {\n            this.checkKeyUsages(keyUsages, this.usages);\n        }\n    }\n    async onImportKey(_format, _keyData, _algorithm, _extractable, _keyUsages, ..._args) {\n        throw new UnsupportedOperationError(\"importKey\");\n    }\n    checkAlgorithmName(algorithm) {\n        if (algorithm.name.toLowerCase() !== this.name.toLowerCase()) {\n            throw new AlgorithmError(\"Unrecognized name\");\n        }\n    }\n    checkAlgorithmParams(_algorithm) {\n    }\n    checkDerivedKeyParams(_algorithm) {\n    }\n    checkKeyUsages(usages, allowed) {\n        for (const usage of usages) {\n            if (allowed.indexOf(usage) === -1) {\n                throw new TypeError(\"Cannot create a key using the specified key usages\");\n            }\n        }\n    }\n    checkCryptoKey(key, keyUsage) {\n        this.checkAlgorithmName(key.algorithm);\n        if (keyUsage && key.usages.indexOf(keyUsage) === -1) {\n            throw new CryptoError(`key does not match that of operation`);\n        }\n    }\n    checkRequiredProperty(data, propName) {\n        if (!(propName in data)) {\n            throw new RequiredPropertyError(propName);\n        }\n    }\n    checkHashAlgorithm(algorithm, hashAlgorithms) {\n        for (const item of hashAlgorithms) {\n            if (item.toLowerCase() === algorithm.name.toLowerCase()) {\n                return;\n            }\n        }\n        throw new OperationError(`hash: Must be one of ${hashAlgorithms.join(\", \")}`);\n    }\n    checkImportParams(_algorithm) {\n    }\n    checkKeyFormat(format) {\n        switch (format) {\n            case \"raw\":\n            case \"pkcs8\":\n            case \"spki\":\n            case \"jwk\":\n                break;\n            default:\n                throw new TypeError(\"format: Is invalid value. Must be 'jwk', 'raw', 'spki', or 'pkcs8'\");\n        }\n    }\n    checkKeyData(format, keyData) {\n        if (!keyData) {\n            throw new TypeError(\"keyData: Cannot be empty on empty on key importing\");\n        }\n        if (format === \"jwk\") {\n            if (!isJWK(keyData)) {\n                throw new TypeError(\"keyData: Is not JsonWebToken\");\n            }\n        }\n        else if (!BufferSourceConverter.isBufferSource(keyData)) {\n            throw new TypeError(\"keyData: Is not ArrayBufferView or ArrayBuffer\");\n        }\n    }\n    prepareData(data) {\n        return BufferSourceConverter.toArrayBuffer(data);\n    }\n}\n\nclass AesProvider extends ProviderCrypto {\n    checkGenerateKeyParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"length\");\n        if (typeof algorithm.length !== \"number\") {\n            throw new TypeError(\"length: Is not of type Number\");\n        }\n        switch (algorithm.length) {\n            case 128:\n            case 192:\n            case 256:\n                break;\n            default:\n                throw new TypeError(\"length: Must be 128, 192, or 256\");\n        }\n    }\n    checkDerivedKeyParams(algorithm) {\n        this.checkGenerateKeyParams(algorithm);\n    }\n}\n\nclass AesCbcProvider extends AesProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"AES-CBC\";\n        this.usages = [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"iv\");\n        if (!(algorithm.iv instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.iv))) {\n            throw new TypeError(\"iv: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n        if (algorithm.iv.byteLength !== 16) {\n            throw new TypeError(\"iv: Must have length 16 bytes\");\n        }\n    }\n}\n\nclass AesCmacProvider extends AesProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"AES-CMAC\";\n        this.usages = [\"sign\", \"verify\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"length\");\n        if (typeof algorithm.length !== \"number\") {\n            throw new TypeError(\"length: Is not a Number\");\n        }\n        if (algorithm.length < 1) {\n            throw new OperationError(\"length: Must be more than 0\");\n        }\n    }\n}\n\nclass AesCtrProvider extends AesProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"AES-CTR\";\n        this.usages = [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"counter\");\n        if (!(algorithm.counter instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.counter))) {\n            throw new TypeError(\"counter: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n        if (algorithm.counter.byteLength !== 16) {\n            throw new TypeError(\"iv: Must have length 16 bytes\");\n        }\n        this.checkRequiredProperty(algorithm, \"length\");\n        if (typeof algorithm.length !== \"number\") {\n            throw new TypeError(\"length: Is not a Number\");\n        }\n        if (algorithm.length < 1) {\n            throw new OperationError(\"length: Must be more than 0\");\n        }\n    }\n}\n\nclass AesEcbProvider extends AesProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"AES-ECB\";\n        this.usages = [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"];\n    }\n}\n\nclass AesGcmProvider extends AesProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"AES-GCM\";\n        this.usages = [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        var _a;\n        this.checkRequiredProperty(algorithm, \"iv\");\n        if (!(algorithm.iv instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.iv))) {\n            throw new TypeError(\"iv: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n        if (algorithm.iv.byteLength < 1) {\n            throw new OperationError(\"iv: Must have length more than 0 and less than 2^64 - 1\");\n        }\n        (_a = algorithm.tagLength) !== null && _a !== void 0 ? _a : (algorithm.tagLength = 128);\n        switch (algorithm.tagLength) {\n            case 32:\n            case 64:\n            case 96:\n            case 104:\n            case 112:\n            case 120:\n            case 128:\n                break;\n            default:\n                throw new OperationError(\"tagLength: Must be one of 32, 64, 96, 104, 112, 120 or 128\");\n        }\n    }\n}\n\nclass AesKwProvider extends AesProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"AES-KW\";\n        this.usages = [\"wrapKey\", \"unwrapKey\"];\n    }\n}\n\nclass DesProvider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.usages = [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        if (this.ivSize) {\n            this.checkRequiredProperty(algorithm, \"iv\");\n            if (!(algorithm.iv instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.iv))) {\n                throw new TypeError(\"iv: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n            }\n            if (algorithm.iv.byteLength !== this.ivSize) {\n                throw new TypeError(`iv: Must have length ${this.ivSize} bytes`);\n            }\n        }\n    }\n    checkGenerateKeyParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"length\");\n        if (typeof algorithm.length !== \"number\") {\n            throw new TypeError(\"length: Is not of type Number\");\n        }\n        if (algorithm.length !== this.keySizeBits) {\n            throw new OperationError(`algorithm.length: Must be ${this.keySizeBits}`);\n        }\n    }\n    checkDerivedKeyParams(algorithm) {\n        this.checkGenerateKeyParams(algorithm);\n    }\n}\n\nclass RsaProvider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.hashAlgorithms = [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"];\n    }\n    checkGenerateKeyParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n        this.checkRequiredProperty(algorithm, \"publicExponent\");\n        if (!(algorithm.publicExponent && algorithm.publicExponent instanceof Uint8Array)) {\n            throw new TypeError(\"publicExponent: Missing or not a Uint8Array\");\n        }\n        const publicExponent = Convert.ToBase64(algorithm.publicExponent);\n        if (!(publicExponent === \"Aw==\" || publicExponent === \"AQAB\")) {\n            throw new TypeError(\"publicExponent: Must be [3] or [1,0,1]\");\n        }\n        this.checkRequiredProperty(algorithm, \"modulusLength\");\n        if (algorithm.modulusLength % 8\n            || algorithm.modulusLength < 256\n            || algorithm.modulusLength > 16384) {\n            throw new TypeError(\"The modulus length must be a multiple of 8 bits and >= 256 and <= 16384\");\n        }\n    }\n    checkImportParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n    }\n}\n\nclass RsaSsaProvider extends RsaProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"RSASSA-PKCS1-v1_5\";\n        this.usages = {\n            privateKey: [\"sign\"],\n            publicKey: [\"verify\"],\n        };\n    }\n}\n\nclass RsaPssProvider extends RsaProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"RSA-PSS\";\n        this.usages = {\n            privateKey: [\"sign\"],\n            publicKey: [\"verify\"],\n        };\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"saltLength\");\n        if (typeof algorithm.saltLength !== \"number\") {\n            throw new TypeError(\"saltLength: Is not a Number\");\n        }\n        if (algorithm.saltLength < 0) {\n            throw new RangeError(\"saltLength: Must be positive number\");\n        }\n    }\n}\n\nclass RsaOaepProvider extends RsaProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"RSA-OAEP\";\n        this.usages = {\n            privateKey: [\"decrypt\", \"unwrapKey\"],\n            publicKey: [\"encrypt\", \"wrapKey\"],\n        };\n    }\n    checkAlgorithmParams(algorithm) {\n        if (algorithm.label\n            && !(algorithm.label instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.label))) {\n            throw new TypeError(\"label: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n    }\n}\n\nclass EllipticProvider extends ProviderCrypto {\n    checkGenerateKeyParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"namedCurve\");\n        this.checkNamedCurve(algorithm.namedCurve);\n    }\n    checkNamedCurve(namedCurve) {\n        for (const item of this.namedCurves) {\n            if (item.toLowerCase() === namedCurve.toLowerCase()) {\n                return;\n            }\n        }\n        throw new OperationError(`namedCurve: Must be one of ${this.namedCurves.join(\", \")}`);\n    }\n}\n\nclass EcdsaProvider extends EllipticProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"ECDSA\";\n        this.hashAlgorithms = [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"];\n        this.usages = {\n            privateKey: [\"sign\"],\n            publicKey: [\"verify\"],\n        };\n        this.namedCurves = [\"P-256\", \"P-384\", \"P-521\", \"K-256\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n    }\n}\n\nconst KEY_TYPES = [\"secret\", \"private\", \"public\"];\nclass CryptoKey {\n    static create(algorithm, type, extractable, usages) {\n        const key = new this();\n        key.algorithm = algorithm;\n        key.type = type;\n        key.extractable = extractable;\n        key.usages = usages;\n        return key;\n    }\n    static isKeyType(data) {\n        return KEY_TYPES.indexOf(data) !== -1;\n    }\n    get [Symbol.toStringTag]() {\n        return \"CryptoKey\";\n    }\n}\n\nclass EcdhProvider extends EllipticProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"ECDH\";\n        this.usages = {\n            privateKey: [\"deriveBits\", \"deriveKey\"],\n            publicKey: [],\n        };\n        this.namedCurves = [\"P-256\", \"P-384\", \"P-521\", \"K-256\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"public\");\n        if (!(algorithm.public instanceof CryptoKey)) {\n            throw new TypeError(\"public: Is not a CryptoKey\");\n        }\n        if (algorithm.public.type !== \"public\") {\n            throw new OperationError(\"public: Is not a public key\");\n        }\n        if (algorithm.public.algorithm.name !== this.name) {\n            throw new OperationError(`public: Is not ${this.name} key`);\n        }\n    }\n}\n\nclass EcdhEsProvider extends EcdhProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"ECDH-ES\";\n        this.namedCurves = [\"X25519\", \"X448\"];\n    }\n}\n\nclass EdDsaProvider extends EllipticProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"EdDSA\";\n        this.usages = {\n            privateKey: [\"sign\"],\n            publicKey: [\"verify\"],\n        };\n        this.namedCurves = [\"Ed25519\", \"Ed448\"];\n    }\n}\n\nlet ObjectIdentifier = class ObjectIdentifier {\n    constructor(value) {\n        if (value) {\n            this.value = value;\n        }\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ObjectIdentifier.prototype, \"value\", void 0);\nObjectIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ObjectIdentifier);\n\nclass AlgorithmIdentifier {\n    constructor(params) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.ObjectIdentifier,\n    })\n], AlgorithmIdentifier.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Any,\n        optional: true,\n    })\n], AlgorithmIdentifier.prototype, \"parameters\", void 0);\n\nclass PrivateKeyInfo {\n    constructor() {\n        this.version = 0;\n        this.privateKeyAlgorithm = new AlgorithmIdentifier();\n        this.privateKey = new ArrayBuffer(0);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], PrivateKeyInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], PrivateKeyInfo.prototype, \"privateKeyAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], PrivateKeyInfo.prototype, \"privateKey\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, optional: true })\n], PrivateKeyInfo.prototype, \"attributes\", void 0);\n\nclass PublicKeyInfo {\n    constructor() {\n        this.publicKeyAlgorithm = new AlgorithmIdentifier();\n        this.publicKey = new ArrayBuffer(0);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], PublicKeyInfo.prototype, \"publicKeyAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], PublicKeyInfo.prototype, \"publicKey\", void 0);\n\nconst JsonBase64UrlArrayBufferConverter = {\n    fromJSON: (value) => Convert.FromBase64Url(value),\n    toJSON: (value) => Convert.ToBase64Url(new Uint8Array(value)),\n};\n\nconst AsnIntegerArrayBufferConverter = {\n    fromASN: (value) => {\n        const valueHex = value.valueBlock.valueHex;\n        return !(new Uint8Array(valueHex)[0])\n            ? value.valueBlock.valueHex.slice(1)\n            : value.valueBlock.valueHex;\n    },\n    toASN: (value) => {\n        const valueHex = new Uint8Array(value)[0] > 127\n            ? combine(new Uint8Array([0]).buffer, value)\n            : value;\n        return new asn1.Integer({ valueHex });\n    },\n};\n\nvar index$3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AsnIntegerArrayBufferConverter: AsnIntegerArrayBufferConverter,\n  JsonBase64UrlArrayBufferConverter: JsonBase64UrlArrayBufferConverter\n});\n\nclass RsaPrivateKey {\n    constructor() {\n        this.version = 0;\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n        this.privateExponent = new ArrayBuffer(0);\n        this.prime1 = new ArrayBuffer(0);\n        this.prime2 = new ArrayBuffer(0);\n        this.exponent1 = new ArrayBuffer(0);\n        this.exponent2 = new ArrayBuffer(0);\n        this.coefficient = new ArrayBuffer(0);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerConverter })\n], RsaPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"n\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"e\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"publicExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"d\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"privateExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"p\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"prime1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"q\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"prime2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"dp\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"exponent1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"dq\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"exponent2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"qi\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPrivateKey.prototype, \"coefficient\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, optional: true })\n], RsaPrivateKey.prototype, \"otherPrimeInfos\", void 0);\n\nclass RsaPublicKey {\n    constructor() {\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"n\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPublicKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter }),\n    JsonProp({ name: \"e\", converter: JsonBase64UrlArrayBufferConverter })\n], RsaPublicKey.prototype, \"publicExponent\", void 0);\n\nlet EcPublicKey = class EcPublicKey {\n    constructor(value) {\n        this.value = new ArrayBuffer(0);\n        if (value) {\n            this.value = value;\n        }\n    }\n    toJSON() {\n        let bytes = new Uint8Array(this.value);\n        if (bytes[0] !== 0x04) {\n            throw new CryptoError(\"Wrong ECPoint. Current version supports only Uncompressed (0x04) point\");\n        }\n        bytes = new Uint8Array(this.value.slice(1));\n        const size = bytes.length / 2;\n        const offset = 0;\n        const json = {\n            x: Convert.ToBase64Url(bytes.buffer.slice(offset, offset + size)),\n            y: Convert.ToBase64Url(bytes.buffer.slice(offset + size, offset + size + size)),\n        };\n        return json;\n    }\n    fromJSON(json) {\n        if (!(\"x\" in json)) {\n            throw new Error(\"x: Missing required property\");\n        }\n        if (!(\"y\" in json)) {\n            throw new Error(\"y: Missing required property\");\n        }\n        const x = Convert.FromBase64Url(json.x);\n        const y = Convert.FromBase64Url(json.y);\n        const value = combine(new Uint8Array([0x04]).buffer, x, y);\n        this.value = new Uint8Array(value).buffer;\n        return this;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], EcPublicKey.prototype, \"value\", void 0);\nEcPublicKey = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EcPublicKey);\n\nclass EcPrivateKey {\n    constructor() {\n        this.version = 1;\n        this.privateKey = new ArrayBuffer(0);\n    }\n    fromJSON(json) {\n        if (!(\"d\" in json)) {\n            throw new Error(\"d: Missing required property\");\n        }\n        this.privateKey = Convert.FromBase64Url(json.d);\n        if (\"x\" in json) {\n            const publicKey = new EcPublicKey();\n            publicKey.fromJSON(json);\n            const asn = AsnSerializer.toASN(publicKey);\n            if (\"valueHex\" in asn.valueBlock) {\n                this.publicKey = asn.valueBlock.valueHex;\n            }\n        }\n        return this;\n    }\n    toJSON() {\n        const jwk = {};\n        jwk.d = Convert.ToBase64Url(this.privateKey);\n        if (this.publicKey) {\n            Object.assign(jwk, new EcPublicKey(this.publicKey).toJSON());\n        }\n        return jwk;\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerConverter })\n], EcPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], EcPrivateKey.prototype, \"privateKey\", void 0);\n__decorate([\n    AsnProp({ context: 0, type: AsnPropTypes.Any, optional: true })\n], EcPrivateKey.prototype, \"parameters\", void 0);\n__decorate([\n    AsnProp({ context: 1, type: AsnPropTypes.BitString, optional: true })\n], EcPrivateKey.prototype, \"publicKey\", void 0);\n\nconst AsnIntegerWithoutPaddingConverter = {\n    fromASN: (value) => {\n        const bytes = new Uint8Array(value.valueBlock.valueHex);\n        return (bytes[0] === 0)\n            ? bytes.buffer.slice(1)\n            : bytes.buffer;\n    },\n    toASN: (value) => {\n        const bytes = new Uint8Array(value);\n        if (bytes[0] > 127) {\n            const newValue = new Uint8Array(bytes.length + 1);\n            newValue.set(bytes, 1);\n            return new asn1.Integer({ valueHex: newValue.buffer });\n        }\n        return new asn1.Integer({ valueHex: value });\n    },\n};\n\nvar index$2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AsnIntegerWithoutPaddingConverter: AsnIntegerWithoutPaddingConverter\n});\n\nclass EcUtils {\n    static decodePoint(data, pointSize) {\n        const view = BufferSourceConverter.toUint8Array(data);\n        if ((view.length === 0) || (view[0] !== 4)) {\n            throw new Error(\"Only uncompressed point format supported\");\n        }\n        const n = (view.length - 1) / 2;\n        if (n !== (Math.ceil(pointSize / 8))) {\n            throw new Error(\"Point does not match field size\");\n        }\n        const xb = view.slice(1, n + 1);\n        const yb = view.slice(n + 1, n + 1 + n);\n        return { x: xb, y: yb };\n    }\n    static encodePoint(point, pointSize) {\n        const size = Math.ceil(pointSize / 8);\n        if (point.x.byteLength !== size || point.y.byteLength !== size) {\n            throw new Error(\"X,Y coordinates don't match point size criteria\");\n        }\n        const x = BufferSourceConverter.toUint8Array(point.x);\n        const y = BufferSourceConverter.toUint8Array(point.y);\n        const res = new Uint8Array(size * 2 + 1);\n        res[0] = 4;\n        res.set(x, 1);\n        res.set(y, size + 1);\n        return res;\n    }\n    static getSize(pointSize) {\n        return Math.ceil(pointSize / 8);\n    }\n    static encodeSignature(signature, pointSize) {\n        const size = this.getSize(pointSize);\n        const r = BufferSourceConverter.toUint8Array(signature.r);\n        const s = BufferSourceConverter.toUint8Array(signature.s);\n        const res = new Uint8Array(size * 2);\n        res.set(this.padStart(r, size));\n        res.set(this.padStart(s, size), size);\n        return res;\n    }\n    static decodeSignature(data, pointSize) {\n        const size = this.getSize(pointSize);\n        const view = BufferSourceConverter.toUint8Array(data);\n        if (view.length !== (size * 2)) {\n            throw new Error(\"Incorrect size of the signature\");\n        }\n        const r = view.slice(0, size);\n        const s = view.slice(size);\n        return {\n            r: this.trimStart(r),\n            s: this.trimStart(s),\n        };\n    }\n    static trimStart(data) {\n        let i = 0;\n        while ((i < data.length - 1) && (data[i] === 0)) {\n            i++;\n        }\n        if (i === 0) {\n            return data;\n        }\n        return data.slice(i, data.length);\n    }\n    static padStart(data, size) {\n        if (size === data.length) {\n            return data;\n        }\n        const res = new Uint8Array(size);\n        res.set(data, size - data.length);\n        return res;\n    }\n}\n\nclass EcDsaSignature {\n    constructor() {\n        this.r = new ArrayBuffer(0);\n        this.s = new ArrayBuffer(0);\n    }\n    static fromWebCryptoSignature(value) {\n        const pointSize = value.byteLength / 2;\n        const point = EcUtils.decodeSignature(value, pointSize * 8);\n        const ecSignature = new EcDsaSignature();\n        ecSignature.r = BufferSourceConverter.toArrayBuffer(point.r);\n        ecSignature.s = BufferSourceConverter.toArrayBuffer(point.s);\n        return ecSignature;\n    }\n    toWebCryptoSignature(pointSize) {\n        if (!pointSize) {\n            const maxPointLength = Math.max(this.r.byteLength, this.s.byteLength);\n            if (maxPointLength <= 32) {\n                pointSize = 256;\n            }\n            else if (maxPointLength <= 48) {\n                pointSize = 384;\n            }\n            else {\n                pointSize = 521;\n            }\n        }\n        const signature = EcUtils.encodeSignature(this, pointSize);\n        return signature.buffer;\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerWithoutPaddingConverter })\n], EcDsaSignature.prototype, \"r\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerWithoutPaddingConverter })\n], EcDsaSignature.prototype, \"s\", void 0);\n\nclass OneAsymmetricKey extends PrivateKeyInfo {\n}\n__decorate([\n    AsnProp({ context: 1, implicit: true, type: AsnPropTypes.BitString, optional: true })\n], OneAsymmetricKey.prototype, \"publicKey\", void 0);\n\nlet EdPrivateKey = class EdPrivateKey {\n    constructor() {\n        this.value = new ArrayBuffer(0);\n    }\n    fromJSON(json) {\n        if (!json.d) {\n            throw new Error(\"d: Missing required property\");\n        }\n        this.value = Convert.FromBase64Url(json.d);\n        return this;\n    }\n    toJSON() {\n        const jwk = {\n            d: Convert.ToBase64Url(this.value),\n        };\n        return jwk;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], EdPrivateKey.prototype, \"value\", void 0);\nEdPrivateKey = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EdPrivateKey);\n\nlet EdPublicKey = class EdPublicKey {\n    constructor(value) {\n        this.value = new ArrayBuffer(0);\n        if (value) {\n            this.value = value;\n        }\n    }\n    toJSON() {\n        const json = {\n            x: Convert.ToBase64Url(this.value),\n        };\n        return json;\n    }\n    fromJSON(json) {\n        if (!(\"x\" in json)) {\n            throw new Error(\"x: Missing required property\");\n        }\n        this.value = Convert.FromBase64Url(json.x);\n        return this;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], EdPublicKey.prototype, \"value\", void 0);\nEdPublicKey = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EdPublicKey);\n\nlet CurvePrivateKey = class CurvePrivateKey {\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString }),\n    JsonProp({ type: JsonPropTypes.String, converter: JsonBase64UrlArrayBufferConverter })\n], CurvePrivateKey.prototype, \"d\", void 0);\nCurvePrivateKey = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CurvePrivateKey);\n\nconst idSecp256r1 = \"1.2.840.10045.3.1.7\";\nconst idEllipticCurve = \"1.3.132.0\";\nconst idSecp384r1 = `${idEllipticCurve}.34`;\nconst idSecp521r1 = `${idEllipticCurve}.35`;\nconst idSecp256k1 = `${idEllipticCurve}.10`;\nconst idVersionOne = \"1.3.36.3.3.2.8.1.1\";\nconst idBrainpoolP160r1 = `${idVersionOne}.1`;\nconst idBrainpoolP160t1 = `${idVersionOne}.2`;\nconst idBrainpoolP192r1 = `${idVersionOne}.3`;\nconst idBrainpoolP192t1 = `${idVersionOne}.4`;\nconst idBrainpoolP224r1 = `${idVersionOne}.5`;\nconst idBrainpoolP224t1 = `${idVersionOne}.6`;\nconst idBrainpoolP256r1 = `${idVersionOne}.7`;\nconst idBrainpoolP256t1 = `${idVersionOne}.8`;\nconst idBrainpoolP320r1 = `${idVersionOne}.9`;\nconst idBrainpoolP320t1 = `${idVersionOne}.10`;\nconst idBrainpoolP384r1 = `${idVersionOne}.11`;\nconst idBrainpoolP384t1 = `${idVersionOne}.12`;\nconst idBrainpoolP512r1 = `${idVersionOne}.13`;\nconst idBrainpoolP512t1 = `${idVersionOne}.14`;\nconst idX25519 = \"1.3.101.110\";\nconst idX448 = \"1.3.101.111\";\nconst idEd25519 = \"1.3.101.112\";\nconst idEd448 = \"1.3.101.113\";\n\nvar index$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AlgorithmIdentifier: AlgorithmIdentifier,\n  get CurvePrivateKey () { return CurvePrivateKey; },\n  EcDsaSignature: EcDsaSignature,\n  EcPrivateKey: EcPrivateKey,\n  get EcPublicKey () { return EcPublicKey; },\n  get EdPrivateKey () { return EdPrivateKey; },\n  get EdPublicKey () { return EdPublicKey; },\n  get ObjectIdentifier () { return ObjectIdentifier; },\n  OneAsymmetricKey: OneAsymmetricKey,\n  PrivateKeyInfo: PrivateKeyInfo,\n  PublicKeyInfo: PublicKeyInfo,\n  RsaPrivateKey: RsaPrivateKey,\n  RsaPublicKey: RsaPublicKey,\n  converters: index$2,\n  idBrainpoolP160r1: idBrainpoolP160r1,\n  idBrainpoolP160t1: idBrainpoolP160t1,\n  idBrainpoolP192r1: idBrainpoolP192r1,\n  idBrainpoolP192t1: idBrainpoolP192t1,\n  idBrainpoolP224r1: idBrainpoolP224r1,\n  idBrainpoolP224t1: idBrainpoolP224t1,\n  idBrainpoolP256r1: idBrainpoolP256r1,\n  idBrainpoolP256t1: idBrainpoolP256t1,\n  idBrainpoolP320r1: idBrainpoolP320r1,\n  idBrainpoolP320t1: idBrainpoolP320t1,\n  idBrainpoolP384r1: idBrainpoolP384r1,\n  idBrainpoolP384t1: idBrainpoolP384t1,\n  idBrainpoolP512r1: idBrainpoolP512r1,\n  idBrainpoolP512t1: idBrainpoolP512t1,\n  idEd25519: idEd25519,\n  idEd448: idEd448,\n  idEllipticCurve: idEllipticCurve,\n  idSecp256k1: idSecp256k1,\n  idSecp256r1: idSecp256r1,\n  idSecp384r1: idSecp384r1,\n  idSecp521r1: idSecp521r1,\n  idVersionOne: idVersionOne,\n  idX25519: idX25519,\n  idX448: idX448\n});\n\nclass EcCurves {\n    constructor() { }\n    static register(item) {\n        const oid = new ObjectIdentifier();\n        oid.value = item.id;\n        const raw = AsnConvert.serialize(oid);\n        this.items.push({\n            ...item,\n            raw,\n        });\n        this.names.push(item.name);\n    }\n    static find(nameOrId) {\n        nameOrId = nameOrId.toUpperCase();\n        for (const item of this.items) {\n            if (item.name.toUpperCase() === nameOrId || item.id.toUpperCase() === nameOrId) {\n                return item;\n            }\n        }\n        return null;\n    }\n    static get(nameOrId) {\n        const res = this.find(nameOrId);\n        if (!res) {\n            throw new Error(`Unsupported EC named curve '${nameOrId}'`);\n        }\n        return res;\n    }\n}\nEcCurves.items = [];\nEcCurves.names = [];\nEcCurves.register({ name: \"P-256\", id: idSecp256r1, size: 256 });\nEcCurves.register({ name: \"P-384\", id: idSecp384r1, size: 384 });\nEcCurves.register({ name: \"P-521\", id: idSecp521r1, size: 521 });\nEcCurves.register({ name: \"K-256\", id: idSecp256k1, size: 256 });\nEcCurves.register({ name: \"brainpoolP160r1\", id: idBrainpoolP160r1, size: 160 });\nEcCurves.register({ name: \"brainpoolP160t1\", id: idBrainpoolP160t1, size: 160 });\nEcCurves.register({ name: \"brainpoolP192r1\", id: idBrainpoolP192r1, size: 192 });\nEcCurves.register({ name: \"brainpoolP192t1\", id: idBrainpoolP192t1, size: 192 });\nEcCurves.register({ name: \"brainpoolP224r1\", id: idBrainpoolP224r1, size: 224 });\nEcCurves.register({ name: \"brainpoolP224t1\", id: idBrainpoolP224t1, size: 224 });\nEcCurves.register({ name: \"brainpoolP256r1\", id: idBrainpoolP256r1, size: 256 });\nEcCurves.register({ name: \"brainpoolP256t1\", id: idBrainpoolP256t1, size: 256 });\nEcCurves.register({ name: \"brainpoolP320r1\", id: idBrainpoolP320r1, size: 320 });\nEcCurves.register({ name: \"brainpoolP320t1\", id: idBrainpoolP320t1, size: 320 });\nEcCurves.register({ name: \"brainpoolP384r1\", id: idBrainpoolP384r1, size: 384 });\nEcCurves.register({ name: \"brainpoolP384t1\", id: idBrainpoolP384t1, size: 384 });\nEcCurves.register({ name: \"brainpoolP512r1\", id: idBrainpoolP512r1, size: 512 });\nEcCurves.register({ name: \"brainpoolP512t1\", id: idBrainpoolP512t1, size: 512 });\n\nclass X25519Provider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"X25519\";\n        this.usages = {\n            privateKey: [\"deriveKey\", \"deriveBits\"],\n            publicKey: [],\n        };\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"public\");\n    }\n}\n\nclass Ed25519Provider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"Ed25519\";\n        this.usages = {\n            privateKey: [\"sign\"],\n            publicKey: [\"verify\"],\n        };\n    }\n}\n\nclass HmacProvider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"HMAC\";\n        this.hashAlgorithms = [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"];\n        this.usages = [\"sign\", \"verify\"];\n    }\n    getDefaultLength(algName) {\n        switch (algName.toUpperCase()) {\n            case \"SHA-1\":\n            case \"SHA-256\":\n            case \"SHA-384\":\n            case \"SHA-512\":\n                return 512;\n            default:\n                throw new Error(`Unknown algorithm name '${algName}'`);\n        }\n    }\n    checkGenerateKeyParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n        if (\"length\" in algorithm) {\n            if (typeof algorithm.length !== \"number\") {\n                throw new TypeError(\"length: Is not a Number\");\n            }\n            if (algorithm.length < 1) {\n                throw new RangeError(\"length: Number is out of range\");\n            }\n        }\n    }\n    checkImportParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n    }\n}\n\nclass Pbkdf2Provider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"PBKDF2\";\n        this.hashAlgorithms = [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"];\n        this.usages = [\"deriveBits\", \"deriveKey\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n        this.checkRequiredProperty(algorithm, \"salt\");\n        if (!(algorithm.salt instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.salt))) {\n            throw new TypeError(\"salt: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n        this.checkRequiredProperty(algorithm, \"iterations\");\n        if (typeof algorithm.iterations !== \"number\") {\n            throw new TypeError(\"iterations: Is not a Number\");\n        }\n        if (algorithm.iterations < 1) {\n            throw new TypeError(\"iterations: Is less than 1\");\n        }\n    }\n    checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args) {\n        super.checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args);\n        if (extractable) {\n            throw new SyntaxError(\"extractable: Must be 'false'\");\n        }\n    }\n}\n\nclass HkdfProvider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"HKDF\";\n        this.hashAlgorithms = [\"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\"];\n        this.usages = [\"deriveKey\", \"deriveBits\"];\n    }\n    checkAlgorithmParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"hash\");\n        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);\n        this.checkRequiredProperty(algorithm, \"salt\");\n        if (!BufferSourceConverter.isBufferSource(algorithm.salt)) {\n            throw new TypeError(\"salt: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n        this.checkRequiredProperty(algorithm, \"info\");\n        if (!BufferSourceConverter.isBufferSource(algorithm.info)) {\n            throw new TypeError(\"salt: Is not of type '(ArrayBuffer or ArrayBufferView)'\");\n        }\n    }\n    checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args) {\n        super.checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args);\n        if (extractable) {\n            throw new SyntaxError(\"extractable: Must be 'false'\");\n        }\n    }\n}\n\nclass ShakeProvider extends ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.usages = [];\n        this.defaultLength = 0;\n    }\n    digest(...args) {\n        args[0] = { length: this.defaultLength, ...args[0] };\n        return super.digest.apply(this, args);\n    }\n    checkDigest(algorithm, data) {\n        super.checkDigest(algorithm, data);\n        const length = algorithm.length || 0;\n        if (typeof length !== \"number\") {\n            throw new TypeError(\"length: Is not a Number\");\n        }\n        if (length < 0) {\n            throw new TypeError(\"length: Is negative\");\n        }\n    }\n}\n\nclass Shake128Provider extends ShakeProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"shake128\";\n        this.defaultLength = 16;\n    }\n}\n\nclass Shake256Provider extends ShakeProvider {\n    constructor() {\n        super(...arguments);\n        this.name = \"shake256\";\n        this.defaultLength = 32;\n    }\n}\n\nclass Crypto {\n    get [Symbol.toStringTag]() {\n        return \"Crypto\";\n    }\n    randomUUID() {\n        const b = this.getRandomValues(new Uint8Array(16));\n        b[6] = (b[6] & 0x0f) | 0x40;\n        b[8] = (b[8] & 0x3f) | 0x80;\n        const uuid = Convert.ToHex(b).toLowerCase();\n        return `${uuid.substring(0, 8)}-${uuid.substring(8, 12)}-${uuid.substring(12, 16)}-${uuid.substring(16, 20)}-${uuid.substring(20)}`;\n    }\n}\n\nclass ProviderStorage {\n    constructor() {\n        this.items = {};\n    }\n    get(algorithmName) {\n        return this.items[algorithmName.toLowerCase()] || null;\n    }\n    set(provider) {\n        this.items[provider.name.toLowerCase()] = provider;\n    }\n    removeAt(algorithmName) {\n        const provider = this.get(algorithmName.toLowerCase());\n        if (provider) {\n            delete this.items[algorithmName];\n        }\n        return provider;\n    }\n    has(name) {\n        return !!this.get(name);\n    }\n    get length() {\n        return Object.keys(this.items).length;\n    }\n    get algorithms() {\n        const algorithms = [];\n        for (const key in this.items) {\n            const provider = this.items[key];\n            algorithms.push(provider.name);\n        }\n        return algorithms.sort();\n    }\n}\n\nconst keyFormatMap = {\n    \"jwk\": [\"private\", \"public\", \"secret\"],\n    \"pkcs8\": [\"private\"],\n    \"spki\": [\"public\"],\n    \"raw\": [\"secret\", \"public\"]\n};\nconst sourceBufferKeyFormats = [\"pkcs8\", \"spki\", \"raw\"];\nclass SubtleCrypto {\n    constructor() {\n        this.providers = new ProviderStorage();\n    }\n    static isHashedAlgorithm(data) {\n        return data\n            && typeof data === \"object\"\n            && \"name\" in data\n            && \"hash\" in data\n            ? true\n            : false;\n    }\n    get [Symbol.toStringTag]() {\n        return \"SubtleCrypto\";\n    }\n    async digest(...args) {\n        this.checkRequiredArguments(args, 2, \"digest\");\n        const [algorithm, data, ...params] = args;\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(data);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.digest(preparedAlgorithm, preparedData, ...params);\n        return result;\n    }\n    async generateKey(...args) {\n        this.checkRequiredArguments(args, 3, \"generateKey\");\n        const [algorithm, extractable, keyUsages, ...params] = args;\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.generateKey({ ...preparedAlgorithm, name: provider.name }, extractable, keyUsages, ...params);\n        return result;\n    }\n    async sign(...args) {\n        this.checkRequiredArguments(args, 3, \"sign\");\n        const [algorithm, key, data, ...params] = args;\n        this.checkCryptoKey(key);\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(data);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.sign({ ...preparedAlgorithm, name: provider.name }, key, preparedData, ...params);\n        return result;\n    }\n    async verify(...args) {\n        this.checkRequiredArguments(args, 4, \"verify\");\n        const [algorithm, key, signature, data, ...params] = args;\n        this.checkCryptoKey(key);\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(data);\n        const preparedSignature = BufferSourceConverter.toArrayBuffer(signature);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.verify({ ...preparedAlgorithm, name: provider.name }, key, preparedSignature, preparedData, ...params);\n        return result;\n    }\n    async encrypt(...args) {\n        this.checkRequiredArguments(args, 3, \"encrypt\");\n        const [algorithm, key, data, ...params] = args;\n        this.checkCryptoKey(key);\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(data);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.encrypt({ ...preparedAlgorithm, name: provider.name }, key, preparedData, { keyUsage: true }, ...params);\n        return result;\n    }\n    async decrypt(...args) {\n        this.checkRequiredArguments(args, 3, \"decrypt\");\n        const [algorithm, key, data, ...params] = args;\n        this.checkCryptoKey(key);\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(data);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.decrypt({ ...preparedAlgorithm, name: provider.name }, key, preparedData, { keyUsage: true }, ...params);\n        return result;\n    }\n    async deriveBits(...args) {\n        this.checkRequiredArguments(args, 3, \"deriveBits\");\n        const [algorithm, baseKey, length, ...params] = args;\n        this.checkCryptoKey(baseKey);\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        const result = await provider.deriveBits({ ...preparedAlgorithm, name: provider.name }, baseKey, length, { keyUsage: true }, ...params);\n        return result;\n    }\n    async deriveKey(...args) {\n        this.checkRequiredArguments(args, 5, \"deriveKey\");\n        const [algorithm, baseKey, derivedKeyType, extractable, keyUsages, ...params] = args;\n        const preparedDerivedKeyType = this.prepareAlgorithm(derivedKeyType);\n        const importProvider = this.getProvider(preparedDerivedKeyType.name);\n        importProvider.checkDerivedKeyParams(preparedDerivedKeyType);\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        provider.checkCryptoKey(baseKey, \"deriveKey\");\n        const derivedBits = await provider.deriveBits({ ...preparedAlgorithm, name: provider.name }, baseKey, derivedKeyType.length || 512, { keyUsage: false }, ...params);\n        return this.importKey(\"raw\", derivedBits, derivedKeyType, extractable, keyUsages, ...params);\n    }\n    async exportKey(...args) {\n        this.checkRequiredArguments(args, 2, \"exportKey\");\n        const [format, key, ...params] = args;\n        this.checkCryptoKey(key);\n        if (!keyFormatMap[format]) {\n            throw new TypeError(\"Invalid keyFormat argument\");\n        }\n        if (!keyFormatMap[format].includes(key.type)) {\n            throw new DOMException(\"The key is not of the expected type\");\n        }\n        const provider = this.getProvider(key.algorithm.name);\n        const result = await provider.exportKey(format, key, ...params);\n        return result;\n    }\n    async importKey(...args) {\n        this.checkRequiredArguments(args, 5, \"importKey\");\n        const [format, keyData, algorithm, extractable, keyUsages, ...params] = args;\n        const preparedAlgorithm = this.prepareAlgorithm(algorithm);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        if (format === \"jwk\") {\n            if (typeof keyData !== \"object\" || !keyData.kty) {\n                throw new TypeError(\"Key data must be an object for JWK import\");\n            }\n        }\n        else if (sourceBufferKeyFormats.includes(format)) {\n            if (!BufferSourceConverter.isBufferSource(keyData)) {\n                throw new TypeError(\"Key data must be a BufferSource for non-JWK formats\");\n            }\n        }\n        else {\n            throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView or JsonWebKey)'\");\n        }\n        return provider.importKey(format, keyData, { ...preparedAlgorithm, name: provider.name }, extractable, keyUsages, ...params);\n    }\n    async wrapKey(format, key, wrappingKey, wrapAlgorithm, ...args) {\n        let keyData = await this.exportKey(format, key, ...args);\n        if (format === \"jwk\") {\n            const json = JSON.stringify(keyData);\n            keyData = Convert.FromUtf8String(json);\n        }\n        const preparedAlgorithm = this.prepareAlgorithm(wrapAlgorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(keyData);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        return provider.encrypt({ ...preparedAlgorithm, name: provider.name }, wrappingKey, preparedData, { keyUsage: false }, ...args);\n    }\n    async unwrapKey(format, wrappedKey, unwrappingKey, unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages, ...args) {\n        const preparedAlgorithm = this.prepareAlgorithm(unwrapAlgorithm);\n        const preparedData = BufferSourceConverter.toArrayBuffer(wrappedKey);\n        const provider = this.getProvider(preparedAlgorithm.name);\n        let keyData = await provider.decrypt({ ...preparedAlgorithm, name: provider.name }, unwrappingKey, preparedData, { keyUsage: false }, ...args);\n        if (format === \"jwk\") {\n            try {\n                keyData = JSON.parse(Convert.ToUtf8String(keyData));\n            }\n            catch (e) {\n                const error = new TypeError(\"wrappedKey: Is not a JSON\");\n                error.internal = e;\n                throw error;\n            }\n        }\n        return this.importKey(format, keyData, unwrappedKeyAlgorithm, extractable, keyUsages, ...args);\n    }\n    checkRequiredArguments(args, size, methodName) {\n        if (args.length < size) {\n            throw new TypeError(`Failed to execute '${methodName}' on 'SubtleCrypto': ${size} arguments required, but only ${args.length} present`);\n        }\n    }\n    prepareAlgorithm(algorithm) {\n        if (typeof algorithm === \"string\") {\n            return {\n                name: algorithm,\n            };\n        }\n        if (SubtleCrypto.isHashedAlgorithm(algorithm)) {\n            const preparedAlgorithm = { ...algorithm };\n            preparedAlgorithm.hash = this.prepareAlgorithm(algorithm.hash);\n            return preparedAlgorithm;\n        }\n        return { ...algorithm };\n    }\n    getProvider(name) {\n        const provider = this.providers.get(name);\n        if (!provider) {\n            throw new AlgorithmError(\"Unrecognized name\");\n        }\n        return provider;\n    }\n    checkCryptoKey(key) {\n        if (!(key instanceof CryptoKey)) {\n            throw new TypeError(`Key is not of type 'CryptoKey'`);\n        }\n    }\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  converters: index$3\n});\n\nconst REQUIRED_FIELDS = [\"crv\", \"e\", \"k\", \"kty\", \"n\", \"x\", \"y\"];\nclass JwkUtils {\n    static async thumbprint(hash, jwk, crypto) {\n        const data = this.format(jwk, true);\n        return crypto.subtle.digest(hash, Convert.FromBinary(JSON.stringify(data)));\n    }\n    static format(jwk, remove = false) {\n        let res = Object.entries(jwk);\n        if (remove) {\n            res = res.filter(o => REQUIRED_FIELDS.includes(o[0]));\n        }\n        res = res.sort(([keyA], [keyB]) => keyA > keyB ? 1 : keyA < keyB ? -1 : 0);\n        return Object.fromEntries(res);\n    }\n}\n\nexport { AesCbcProvider, AesCmacProvider, AesCtrProvider, AesEcbProvider, AesGcmProvider, AesKwProvider, AesProvider, AlgorithmError, Crypto, CryptoError, CryptoKey, DesProvider, EcCurves, EcUtils, EcdhEsProvider, EcdhProvider, EcdsaProvider, Ed25519Provider, EdDsaProvider, EllipticProvider, HkdfProvider, HmacProvider, JwkUtils, OperationError, Pbkdf2Provider, PemConverter, ProviderCrypto, ProviderStorage, RequiredPropertyError, RsaOaepProvider, RsaProvider, RsaPssProvider, RsaSsaProvider, Shake128Provider, Shake256Provider, ShakeProvider, SubtleCrypto, UnsupportedOperationError, X25519Provider, index$1 as asn1, isJWK, index as json };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17573, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40peculiar%2Bwebcrypto%401.5.0/node_modules/%40peculiar/webcrypto/build/webcrypto.es.js"],"sourcesContent":["/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nimport * as core from 'webcrypto-core';\nimport { BufferSourceConverter as BufferSourceConverter$1 } from 'webcrypto-core';\nexport { CryptoKey } from 'webcrypto-core';\nimport { Buffer as Buffer$1 } from 'buffer';\nimport crypto from 'crypto';\nimport * as process from 'process';\nimport { __decorate } from 'tslib';\nimport { JsonProp, JsonPropTypes, JsonSerializer, JsonParser } from '@peculiar/json-schema';\nimport { Convert, BufferSourceConverter } from 'pvtsutils';\nimport { AsnParser, AsnSerializer, AsnConvert } from '@peculiar/asn1-schema';\n\nconst JsonBase64UrlConverter = {\n    fromJSON: (value) => Buffer$1.from(Convert.FromBase64Url(value)),\n    toJSON: (value) => Convert.ToBase64Url(value),\n};\n\nclass CryptoKey extends core.CryptoKey {\n    constructor() {\n        super(...arguments);\n        this.data = Buffer$1.alloc(0);\n        this.algorithm = { name: \"\" };\n        this.extractable = false;\n        this.type = \"secret\";\n        this.usages = [];\n        this.kty = \"oct\";\n        this.alg = \"\";\n    }\n}\n__decorate([\n    JsonProp({ name: \"ext\", type: JsonPropTypes.Boolean, optional: true })\n], CryptoKey.prototype, \"extractable\", void 0);\n__decorate([\n    JsonProp({ name: \"key_ops\", type: JsonPropTypes.String, repeated: true, optional: true })\n], CryptoKey.prototype, \"usages\", void 0);\n__decorate([\n    JsonProp({ type: JsonPropTypes.String })\n], CryptoKey.prototype, \"kty\", void 0);\n__decorate([\n    JsonProp({ type: JsonPropTypes.String, optional: true })\n], CryptoKey.prototype, \"alg\", void 0);\n\nclass SymmetricKey extends CryptoKey {\n    constructor() {\n        super(...arguments);\n        this.kty = \"oct\";\n        this.type = \"secret\";\n    }\n}\n\nclass AsymmetricKey extends CryptoKey {\n}\n\nclass AesCryptoKey extends SymmetricKey {\n    get alg() {\n        switch (this.algorithm.name.toUpperCase()) {\n            case \"AES-CBC\":\n                return `A${this.algorithm.length}CBC`;\n            case \"AES-CTR\":\n                return `A${this.algorithm.length}CTR`;\n            case \"AES-GCM\":\n                return `A${this.algorithm.length}GCM`;\n            case \"AES-KW\":\n                return `A${this.algorithm.length}KW`;\n            case \"AES-CMAC\":\n                return `A${this.algorithm.length}CMAC`;\n            case \"AES-ECB\":\n                return `A${this.algorithm.length}ECB`;\n            default:\n                throw new core.AlgorithmError(\"Unsupported algorithm name\");\n        }\n    }\n    set alg(value) {\n    }\n}\n__decorate([\n    JsonProp({ name: \"k\", converter: JsonBase64UrlConverter })\n], AesCryptoKey.prototype, \"data\", void 0);\n\nclass AesCrypto {\n    static async generateKey(algorithm, extractable, keyUsages) {\n        const key = new AesCryptoKey();\n        key.algorithm = algorithm;\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        key.data = crypto.randomBytes(algorithm.length >> 3);\n        return key;\n    }\n    static async exportKey(format, key) {\n        if (!(key instanceof AesCryptoKey)) {\n            throw new Error(\"key: Is not AesCryptoKey\");\n        }\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                return JsonSerializer.toJSON(key);\n            case \"raw\":\n                return new Uint8Array(key.data).buffer;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk' or 'raw'\");\n        }\n    }\n    static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        let key;\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                key = JsonParser.fromJSON(keyData, { targetSchema: AesCryptoKey });\n                break;\n            case \"raw\":\n                key = new AesCryptoKey();\n                key.data = Buffer$1.from(keyData);\n                break;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk' or 'raw'\");\n        }\n        key.algorithm = algorithm;\n        key.algorithm.length = key.data.length << 3;\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        switch (key.algorithm.length) {\n            case 128:\n            case 192:\n            case 256:\n                break;\n            default:\n                throw new core.OperationError(\"keyData: Is wrong key length\");\n        }\n        return key;\n    }\n    static async encrypt(algorithm, key, data) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"AES-CBC\":\n                return this.encryptAesCBC(algorithm, key, Buffer$1.from(data));\n            case \"AES-CTR\":\n                return this.encryptAesCTR(algorithm, key, Buffer$1.from(data));\n            case \"AES-GCM\":\n                return this.encryptAesGCM(algorithm, key, Buffer$1.from(data));\n            case \"AES-KW\":\n                return this.encryptAesKW(algorithm, key, Buffer$1.from(data));\n            case \"AES-ECB\":\n                return this.encryptAesECB(algorithm, key, Buffer$1.from(data));\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async decrypt(algorithm, key, data) {\n        if (!(key instanceof AesCryptoKey)) {\n            throw new Error(\"key: Is not AesCryptoKey\");\n        }\n        switch (algorithm.name.toUpperCase()) {\n            case \"AES-CBC\":\n                return this.decryptAesCBC(algorithm, key, Buffer$1.from(data));\n            case \"AES-CTR\":\n                return this.decryptAesCTR(algorithm, key, Buffer$1.from(data));\n            case \"AES-GCM\":\n                return this.decryptAesGCM(algorithm, key, Buffer$1.from(data));\n            case \"AES-KW\":\n                return this.decryptAesKW(algorithm, key, Buffer$1.from(data));\n            case \"AES-ECB\":\n                return this.decryptAesECB(algorithm, key, Buffer$1.from(data));\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async encryptAesCBC(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`aes-${key.algorithm.length}-cbc`, key.data, new Uint8Array(algorithm.iv));\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final()]);\n        const res = new Uint8Array(enc).buffer;\n        return res;\n    }\n    static async decryptAesCBC(algorithm, key, data) {\n        const decipher = crypto.createDecipheriv(`aes-${key.algorithm.length}-cbc`, key.data, new Uint8Array(algorithm.iv));\n        let dec = decipher.update(data);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n    static async encryptAesCTR(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`aes-${key.algorithm.length}-ctr`, key.data, Buffer$1.from(algorithm.counter));\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final()]);\n        const res = new Uint8Array(enc).buffer;\n        return res;\n    }\n    static async decryptAesCTR(algorithm, key, data) {\n        const decipher = crypto.createDecipheriv(`aes-${key.algorithm.length}-ctr`, key.data, new Uint8Array(algorithm.counter));\n        let dec = decipher.update(data);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n    static async encryptAesGCM(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`aes-${key.algorithm.length}-gcm`, key.data, Buffer$1.from(algorithm.iv), {\n            authTagLength: (algorithm.tagLength || 128) >> 3,\n        });\n        if (algorithm.additionalData) {\n            cipher.setAAD(Buffer$1.from(algorithm.additionalData));\n        }\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final(), cipher.getAuthTag()]);\n        const res = new Uint8Array(enc).buffer;\n        return res;\n    }\n    static async decryptAesGCM(algorithm, key, data) {\n        const tagLength = (algorithm.tagLength || 128) >> 3;\n        const decipher = crypto.createDecipheriv(`aes-${key.algorithm.length}-gcm`, key.data, new Uint8Array(algorithm.iv), {\n            authTagLength: tagLength,\n        });\n        const enc = data.slice(0, data.length - tagLength);\n        const tag = data.slice(data.length - tagLength);\n        if (algorithm.additionalData) {\n            decipher.setAAD(Buffer$1.from(algorithm.additionalData));\n        }\n        decipher.setAuthTag(tag);\n        let dec = decipher.update(enc);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n    static async encryptAesKW(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`id-aes${key.algorithm.length}-wrap`, key.data, this.AES_KW_IV);\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final()]);\n        return new Uint8Array(enc).buffer;\n    }\n    static async decryptAesKW(algorithm, key, data) {\n        const decipher = crypto.createDecipheriv(`id-aes${key.algorithm.length}-wrap`, key.data, this.AES_KW_IV);\n        let dec = decipher.update(data);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n    static async encryptAesECB(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`aes-${key.algorithm.length}-ecb`, key.data, new Uint8Array(0));\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final()]);\n        const res = new Uint8Array(enc).buffer;\n        return res;\n    }\n    static async decryptAesECB(algorithm, key, data) {\n        const decipher = crypto.createDecipheriv(`aes-${key.algorithm.length}-ecb`, key.data, new Uint8Array(0));\n        let dec = decipher.update(data);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n}\nAesCrypto.AES_KW_IV = Buffer$1.from(\"A6A6A6A6A6A6A6A6\", \"hex\");\n\nconst keyStorage = new WeakMap();\nfunction getCryptoKey(key) {\n    const res = keyStorage.get(key);\n    if (!res) {\n        throw new core.OperationError(\"Cannot get CryptoKey from secure storage\");\n    }\n    return res;\n}\nfunction setCryptoKey(value) {\n    const key = core.CryptoKey.create(value.algorithm, value.type, value.extractable, value.usages);\n    Object.freeze(key);\n    keyStorage.set(key, value);\n    return key;\n}\n\nclass AesCbcProvider extends core.AesCbcProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await AesCrypto.generateKey({\n            name: this.name,\n            length: algorithm.length,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return AesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n            throw new TypeError(\"key: Is not a AesCryptoKey\");\n        }\n    }\n}\n\nconst zero = Buffer$1.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nconst rb = Buffer$1.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 135]);\nconst blockSize = 16;\nfunction bitShiftLeft(buffer) {\n    const shifted = Buffer$1.alloc(buffer.length);\n    const last = buffer.length - 1;\n    for (let index = 0; index < last; index++) {\n        shifted[index] = buffer[index] << 1;\n        if (buffer[index + 1] & 0x80) {\n            shifted[index] += 0x01;\n        }\n    }\n    shifted[last] = buffer[last] << 1;\n    return shifted;\n}\nfunction xor(a, b) {\n    const length = Math.min(a.length, b.length);\n    const output = Buffer$1.alloc(length);\n    for (let index = 0; index < length; index++) {\n        output[index] = a[index] ^ b[index];\n    }\n    return output;\n}\nfunction aes(key, message) {\n    const cipher = crypto.createCipheriv(`aes${key.length << 3}`, key, zero);\n    const result = cipher.update(message);\n    cipher.final();\n    return result;\n}\nfunction getMessageBlock(message, blockIndex) {\n    const block = Buffer$1.alloc(blockSize);\n    const start = blockIndex * blockSize;\n    const end = start + blockSize;\n    message.copy(block, 0, start, end);\n    return block;\n}\nfunction getPaddedMessageBlock(message, blockIndex) {\n    const block = Buffer$1.alloc(blockSize);\n    const start = blockIndex * blockSize;\n    const end = message.length;\n    block.fill(0);\n    message.copy(block, 0, start, end);\n    block[end - start] = 0x80;\n    return block;\n}\nfunction generateSubkeys(key) {\n    const l = aes(key, zero);\n    let subkey1 = bitShiftLeft(l);\n    if (l[0] & 0x80) {\n        subkey1 = xor(subkey1, rb);\n    }\n    let subkey2 = bitShiftLeft(subkey1);\n    if (subkey1[0] & 0x80) {\n        subkey2 = xor(subkey2, rb);\n    }\n    return { subkey1, subkey2 };\n}\nfunction aesCmac(key, message) {\n    const subkeys = generateSubkeys(key);\n    let blockCount = Math.ceil(message.length / blockSize);\n    let lastBlockCompleteFlag;\n    let lastBlock;\n    if (blockCount === 0) {\n        blockCount = 1;\n        lastBlockCompleteFlag = false;\n    }\n    else {\n        lastBlockCompleteFlag = (message.length % blockSize === 0);\n    }\n    const lastBlockIndex = blockCount - 1;\n    if (lastBlockCompleteFlag) {\n        lastBlock = xor(getMessageBlock(message, lastBlockIndex), subkeys.subkey1);\n    }\n    else {\n        lastBlock = xor(getPaddedMessageBlock(message, lastBlockIndex), subkeys.subkey2);\n    }\n    let x = zero;\n    let y;\n    for (let index = 0; index < lastBlockIndex; index++) {\n        y = xor(x, getMessageBlock(message, index));\n        x = aes(key, y);\n    }\n    y = xor(lastBlock, x);\n    return aes(key, y);\n}\nclass AesCmacProvider extends core.AesCmacProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await AesCrypto.generateKey({\n            name: this.name,\n            length: algorithm.length,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onSign(algorithm, key, data) {\n        const result = aesCmac(getCryptoKey(key).data, Buffer$1.from(data));\n        return new Uint8Array(result).buffer;\n    }\n    async onVerify(algorithm, key, signature, data) {\n        const signature2 = await this.sign(algorithm, key, data);\n        return Buffer$1.from(signature).compare(Buffer$1.from(signature2)) === 0;\n    }\n    async onExportKey(format, key) {\n        return AesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n        return setCryptoKey(res);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n            throw new TypeError(\"key: Is not a AesCryptoKey\");\n        }\n    }\n}\n\nclass AesCtrProvider extends core.AesCtrProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await AesCrypto.generateKey({\n            name: this.name,\n            length: algorithm.length,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return AesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n        return setCryptoKey(res);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n            throw new TypeError(\"key: Is not a AesCryptoKey\");\n        }\n    }\n}\n\nclass AesGcmProvider extends core.AesGcmProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await AesCrypto.generateKey({\n            name: this.name,\n            length: algorithm.length,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return AesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n        return setCryptoKey(res);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n            throw new TypeError(\"key: Is not a AesCryptoKey\");\n        }\n    }\n}\n\nclass AesKwProvider extends core.AesKwProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const res = await AesCrypto.generateKey({\n            name: this.name,\n            length: algorithm.length,\n        }, extractable, keyUsages);\n        return setCryptoKey(res);\n    }\n    async onExportKey(format, key) {\n        return AesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n        return setCryptoKey(res);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n            throw new TypeError(\"key: Is not a AesCryptoKey\");\n        }\n    }\n}\n\nclass AesEcbProvider extends core.AesEcbProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await AesCrypto.generateKey({\n            name: this.name,\n            length: algorithm.length,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return AesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const res = await AesCrypto.importKey(format, keyData, { name: algorithm.name }, extractable, keyUsages);\n        return setCryptoKey(res);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {\n            throw new TypeError(\"key: Is not a AesCryptoKey\");\n        }\n    }\n}\n\nclass DesCryptoKey extends SymmetricKey {\n    get alg() {\n        switch (this.algorithm.name.toUpperCase()) {\n            case \"DES-CBC\":\n                return `DES-CBC`;\n            case \"DES-EDE3-CBC\":\n                return `3DES-CBC`;\n            default:\n                throw new core.AlgorithmError(\"Unsupported algorithm name\");\n        }\n    }\n    set alg(value) {\n    }\n}\n__decorate([\n    JsonProp({ name: \"k\", converter: JsonBase64UrlConverter })\n], DesCryptoKey.prototype, \"data\", void 0);\n\nclass DesCrypto {\n    static async generateKey(algorithm, extractable, keyUsages) {\n        const key = new DesCryptoKey();\n        key.algorithm = algorithm;\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        key.data = crypto.randomBytes(algorithm.length >> 3);\n        return key;\n    }\n    static async exportKey(format, key) {\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                return JsonSerializer.toJSON(key);\n            case \"raw\":\n                return new Uint8Array(key.data).buffer;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk' or 'raw'\");\n        }\n    }\n    static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        let key;\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                key = JsonParser.fromJSON(keyData, { targetSchema: DesCryptoKey });\n                break;\n            case \"raw\":\n                key = new DesCryptoKey();\n                key.data = Buffer$1.from(keyData);\n                break;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk' or 'raw'\");\n        }\n        key.algorithm = algorithm;\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n    static async encrypt(algorithm, key, data) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"DES-CBC\":\n                return this.encryptDesCBC(algorithm, key, Buffer$1.from(data));\n            case \"DES-EDE3-CBC\":\n                return this.encryptDesEDE3CBC(algorithm, key, Buffer$1.from(data));\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async decrypt(algorithm, key, data) {\n        if (!(key instanceof DesCryptoKey)) {\n            throw new Error(\"key: Is not DesCryptoKey\");\n        }\n        switch (algorithm.name.toUpperCase()) {\n            case \"DES-CBC\":\n                return this.decryptDesCBC(algorithm, key, Buffer$1.from(data));\n            case \"DES-EDE3-CBC\":\n                return this.decryptDesEDE3CBC(algorithm, key, Buffer$1.from(data));\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async encryptDesCBC(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`des-cbc`, key.data, new Uint8Array(algorithm.iv));\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final()]);\n        const res = new Uint8Array(enc).buffer;\n        return res;\n    }\n    static async decryptDesCBC(algorithm, key, data) {\n        const decipher = crypto.createDecipheriv(`des-cbc`, key.data, new Uint8Array(algorithm.iv));\n        let dec = decipher.update(data);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n    static async encryptDesEDE3CBC(algorithm, key, data) {\n        const cipher = crypto.createCipheriv(`des-ede3-cbc`, key.data, Buffer$1.from(algorithm.iv));\n        let enc = cipher.update(data);\n        enc = Buffer$1.concat([enc, cipher.final()]);\n        const res = new Uint8Array(enc).buffer;\n        return res;\n    }\n    static async decryptDesEDE3CBC(algorithm, key, data) {\n        const decipher = crypto.createDecipheriv(`des-ede3-cbc`, key.data, new Uint8Array(algorithm.iv));\n        let dec = decipher.update(data);\n        dec = Buffer$1.concat([dec, decipher.final()]);\n        return new Uint8Array(dec).buffer;\n    }\n}\n\nclass DesCbcProvider extends core.DesProvider {\n    constructor() {\n        super(...arguments);\n        this.keySizeBits = 64;\n        this.ivSize = 8;\n        this.name = \"DES-CBC\";\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await DesCrypto.generateKey({\n            name: this.name,\n            length: this.keySizeBits,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return DesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return DesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return DesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await DesCrypto.importKey(format, keyData, { name: this.name, length: this.keySizeBits }, extractable, keyUsages);\n        if (key.data.length !== (this.keySizeBits >> 3)) {\n            throw new core.OperationError(\"keyData: Wrong key size\");\n        }\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof DesCryptoKey)) {\n            throw new TypeError(\"key: Is not a DesCryptoKey\");\n        }\n    }\n}\n\nclass DesEde3CbcProvider extends core.DesProvider {\n    constructor() {\n        super(...arguments);\n        this.keySizeBits = 192;\n        this.ivSize = 8;\n        this.name = \"DES-EDE3-CBC\";\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const key = await DesCrypto.generateKey({\n            name: this.name,\n            length: this.keySizeBits,\n        }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    async onEncrypt(algorithm, key, data) {\n        return DesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onDecrypt(algorithm, key, data) {\n        return DesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return DesCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await DesCrypto.importKey(format, keyData, { name: this.name, length: this.keySizeBits }, extractable, keyUsages);\n        if (key.data.length !== (this.keySizeBits >> 3)) {\n            throw new core.OperationError(\"keyData: Wrong key size\");\n        }\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof DesCryptoKey)) {\n            throw new TypeError(\"key: Is not a DesCryptoKey\");\n        }\n    }\n}\n\nfunction getJwkAlgorithm(algorithm) {\n    switch (algorithm.name.toUpperCase()) {\n        case \"RSA-OAEP\": {\n            const mdSize = /(\\d+)$/.exec(algorithm.hash.name)[1];\n            return `RSA-OAEP${mdSize !== \"1\" ? `-${mdSize}` : \"\"}`;\n        }\n        case \"RSASSA-PKCS1-V1_5\":\n            return `RS${/(\\d+)$/.exec(algorithm.hash.name)[1]}`;\n        case \"RSA-PSS\":\n            return `PS${/(\\d+)$/.exec(algorithm.hash.name)[1]}`;\n        case \"RSA-PKCS1\":\n            return `RS1`;\n        default:\n            throw new core.OperationError(\"algorithm: Is not recognized\");\n    }\n}\n\nclass RsaPrivateKey extends AsymmetricKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"private\";\n    }\n    getKey() {\n        const keyInfo = AsnParser.parse(this.data, core.asn1.PrivateKeyInfo);\n        return AsnParser.parse(keyInfo.privateKey, core.asn1.RsaPrivateKey);\n    }\n    toJSON() {\n        const key = this.getKey();\n        const json = {\n            kty: \"RSA\",\n            alg: getJwkAlgorithm(this.algorithm),\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n        return Object.assign(json, JsonSerializer.toJSON(key));\n    }\n    fromJSON(json) {\n        const key = JsonParser.fromJSON(json, { targetSchema: core.asn1.RsaPrivateKey });\n        const keyInfo = new core.asn1.PrivateKeyInfo();\n        keyInfo.privateKeyAlgorithm.algorithm = \"1.2.840.113549.1.1.1\";\n        keyInfo.privateKeyAlgorithm.parameters = null;\n        keyInfo.privateKey = AsnSerializer.serialize(key);\n        this.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n    }\n}\n\nclass RsaPublicKey extends AsymmetricKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"public\";\n    }\n    getKey() {\n        const keyInfo = AsnParser.parse(this.data, core.asn1.PublicKeyInfo);\n        return AsnParser.parse(keyInfo.publicKey, core.asn1.RsaPublicKey);\n    }\n    toJSON() {\n        const key = this.getKey();\n        const json = {\n            kty: \"RSA\",\n            alg: getJwkAlgorithm(this.algorithm),\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n        return Object.assign(json, JsonSerializer.toJSON(key));\n    }\n    fromJSON(json) {\n        const key = JsonParser.fromJSON(json, { targetSchema: core.asn1.RsaPublicKey });\n        const keyInfo = new core.asn1.PublicKeyInfo();\n        keyInfo.publicKeyAlgorithm.algorithm = \"1.2.840.113549.1.1.1\";\n        keyInfo.publicKeyAlgorithm.parameters = null;\n        keyInfo.publicKey = AsnSerializer.serialize(key);\n        this.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n    }\n}\n\nclass RsaCrypto {\n    static async generateKey(algorithm, extractable, keyUsages) {\n        const privateKey = new RsaPrivateKey();\n        privateKey.algorithm = algorithm;\n        privateKey.extractable = extractable;\n        privateKey.usages = keyUsages.filter((usage) => this.privateKeyUsages.indexOf(usage) !== -1);\n        const publicKey = new RsaPublicKey();\n        publicKey.algorithm = algorithm;\n        publicKey.extractable = true;\n        publicKey.usages = keyUsages.filter((usage) => this.publicKeyUsages.indexOf(usage) !== -1);\n        const publicExponent = Buffer$1.concat([\n            Buffer$1.alloc(4 - algorithm.publicExponent.byteLength, 0),\n            Buffer$1.from(algorithm.publicExponent),\n        ]).readInt32BE(0);\n        const keys = crypto.generateKeyPairSync(\"rsa\", {\n            modulusLength: algorithm.modulusLength,\n            publicExponent,\n            publicKeyEncoding: {\n                format: \"der\",\n                type: \"spki\",\n            },\n            privateKeyEncoding: {\n                format: \"der\",\n                type: \"pkcs8\",\n            },\n        });\n        privateKey.data = keys.privateKey;\n        publicKey.data = keys.publicKey;\n        const res = {\n            privateKey,\n            publicKey,\n        };\n        return res;\n    }\n    static async exportKey(format, key) {\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                return JsonSerializer.toJSON(key);\n            case \"pkcs8\":\n            case \"spki\":\n                return new Uint8Array(key.data).buffer;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk', 'pkcs8' or 'spki'\");\n        }\n    }\n    static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        switch (format.toLowerCase()) {\n            case \"jwk\": {\n                const jwk = keyData;\n                if (jwk.d) {\n                    const asnKey = JsonParser.fromJSON(keyData, { targetSchema: core.asn1.RsaPrivateKey });\n                    return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n                }\n                else {\n                    const asnKey = JsonParser.fromJSON(keyData, { targetSchema: core.asn1.RsaPublicKey });\n                    return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n                }\n            }\n            case \"spki\": {\n                const keyInfo = AsnParser.parse(new Uint8Array(keyData), core.asn1.PublicKeyInfo);\n                const asnKey = AsnParser.parse(keyInfo.publicKey, core.asn1.RsaPublicKey);\n                return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n            }\n            case \"pkcs8\": {\n                const keyInfo = AsnParser.parse(new Uint8Array(keyData), core.asn1.PrivateKeyInfo);\n                const asnKey = AsnParser.parse(keyInfo.privateKey, core.asn1.RsaPrivateKey);\n                return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n            }\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk', 'pkcs8' or 'spki'\");\n        }\n    }\n    static async sign(algorithm, key, data) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"RSA-PSS\":\n            case \"RSASSA-PKCS1-V1_5\":\n                return this.signRsa(algorithm, key, data);\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async verify(algorithm, key, signature, data) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"RSA-PSS\":\n            case \"RSASSA-PKCS1-V1_5\":\n                return this.verifySSA(algorithm, key, data, signature);\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async encrypt(algorithm, key, data) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"RSA-OAEP\":\n                return this.encryptOAEP(algorithm, key, data);\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static async decrypt(algorithm, key, data) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"RSA-OAEP\":\n                return this.decryptOAEP(algorithm, key, data);\n            default:\n                throw new core.OperationError(\"algorithm: Is not recognized\");\n        }\n    }\n    static importPrivateKey(asnKey, algorithm, extractable, keyUsages) {\n        const keyInfo = new core.asn1.PrivateKeyInfo();\n        keyInfo.privateKeyAlgorithm.algorithm = \"1.2.840.113549.1.1.1\";\n        keyInfo.privateKeyAlgorithm.parameters = null;\n        keyInfo.privateKey = AsnSerializer.serialize(asnKey);\n        const key = new RsaPrivateKey();\n        key.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        key.algorithm = Object.assign({}, algorithm);\n        key.algorithm.publicExponent = new Uint8Array(asnKey.publicExponent);\n        key.algorithm.modulusLength = asnKey.modulus.byteLength << 3;\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n    static importPublicKey(asnKey, algorithm, extractable, keyUsages) {\n        const keyInfo = new core.asn1.PublicKeyInfo();\n        keyInfo.publicKeyAlgorithm.algorithm = \"1.2.840.113549.1.1.1\";\n        keyInfo.publicKeyAlgorithm.parameters = null;\n        keyInfo.publicKey = AsnSerializer.serialize(asnKey);\n        const key = new RsaPublicKey();\n        key.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        key.algorithm = Object.assign({}, algorithm);\n        key.algorithm.publicExponent = new Uint8Array(asnKey.publicExponent);\n        key.algorithm.modulusLength = asnKey.modulus.byteLength << 3;\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n    static getCryptoAlgorithm(alg) {\n        switch (alg.hash.name.toUpperCase()) {\n            case \"SHA-1\":\n                return \"RSA-SHA1\";\n            case \"SHA-256\":\n                return \"RSA-SHA256\";\n            case \"SHA-384\":\n                return \"RSA-SHA384\";\n            case \"SHA-512\":\n                return \"RSA-SHA512\";\n            case \"SHA3-256\":\n                return \"RSA-SHA3-256\";\n            case \"SHA3-384\":\n                return \"RSA-SHA3-384\";\n            case \"SHA3-512\":\n                return \"RSA-SHA3-512\";\n            default:\n                throw new core.OperationError(\"algorithm.hash: Is not recognized\");\n        }\n    }\n    static signRsa(algorithm, key, data) {\n        const cryptoAlg = this.getCryptoAlgorithm(key.algorithm);\n        const signer = crypto.createSign(cryptoAlg);\n        signer.update(Buffer$1.from(data));\n        if (!key.pem) {\n            key.pem = `-----BEGIN PRIVATE KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PRIVATE KEY-----`;\n        }\n        const options = {\n            key: key.pem,\n        };\n        if (algorithm.name.toUpperCase() === \"RSA-PSS\") {\n            options.padding = crypto.constants.RSA_PKCS1_PSS_PADDING;\n            options.saltLength = algorithm.saltLength;\n        }\n        const signature = signer.sign(options);\n        return new Uint8Array(signature).buffer;\n    }\n    static verifySSA(algorithm, key, data, signature) {\n        const cryptoAlg = this.getCryptoAlgorithm(key.algorithm);\n        const signer = crypto.createVerify(cryptoAlg);\n        signer.update(Buffer$1.from(data));\n        if (!key.pem) {\n            key.pem = `-----BEGIN PUBLIC KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PUBLIC KEY-----`;\n        }\n        const options = {\n            key: key.pem,\n        };\n        if (algorithm.name.toUpperCase() === \"RSA-PSS\") {\n            options.padding = crypto.constants.RSA_PKCS1_PSS_PADDING;\n            options.saltLength = algorithm.saltLength;\n        }\n        const ok = signer.verify(options, signature);\n        return ok;\n    }\n    static encryptOAEP(algorithm, key, data) {\n        const options = {\n            key: `-----BEGIN PUBLIC KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PUBLIC KEY-----`,\n            padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,\n        };\n        if (algorithm.label) ;\n        return new Uint8Array(crypto.publicEncrypt(options, data)).buffer;\n    }\n    static decryptOAEP(algorithm, key, data) {\n        const options = {\n            key: `-----BEGIN PRIVATE KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PRIVATE KEY-----`,\n            padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,\n        };\n        if (algorithm.label) ;\n        return new Uint8Array(crypto.privateDecrypt(options, data)).buffer;\n    }\n}\nRsaCrypto.publicKeyUsages = [\"verify\", \"encrypt\", \"wrapKey\"];\nRsaCrypto.privateKeyUsages = [\"sign\", \"decrypt\", \"unwrapKey\"];\n\nclass RsaSsaProvider extends core.RsaSsaProvider {\n    constructor() {\n        super(...arguments);\n        this.hashAlgorithms = [\n            \"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\",\n            \"shake128\", \"shake256\",\n            \"SHA3-256\", \"SHA3-384\", \"SHA3-512\"\n        ];\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await RsaCrypto.generateKey({\n            ...algorithm,\n            name: this.name,\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onSign(algorithm, key, data) {\n        return RsaCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onVerify(algorithm, key, signature, data) {\n        return RsaCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return RsaCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await RsaCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        const internalKey = getCryptoKey(key);\n        if (!(internalKey instanceof RsaPrivateKey || internalKey instanceof RsaPublicKey)) {\n            throw new TypeError(\"key: Is not RSA CryptoKey\");\n        }\n    }\n}\n\nclass RsaPssProvider extends core.RsaPssProvider {\n    constructor() {\n        super(...arguments);\n        this.hashAlgorithms = [\n            \"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\",\n            \"shake128\", \"shake256\",\n            \"SHA3-256\", \"SHA3-384\", \"SHA3-512\"\n        ];\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await RsaCrypto.generateKey({\n            ...algorithm,\n            name: this.name,\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onSign(algorithm, key, data) {\n        return RsaCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onVerify(algorithm, key, signature, data) {\n        return RsaCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return RsaCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await RsaCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        const internalKey = getCryptoKey(key);\n        if (!(internalKey instanceof RsaPrivateKey || internalKey instanceof RsaPublicKey)) {\n            throw new TypeError(\"key: Is not RSA CryptoKey\");\n        }\n    }\n}\n\nclass ShaCrypto {\n    static size(algorithm) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"SHA-1\":\n                return 160;\n            case \"SHA-256\":\n            case \"SHA3-256\":\n                return 256;\n            case \"SHA-384\":\n            case \"SHA3-384\":\n                return 384;\n            case \"SHA-512\":\n            case \"SHA3-512\":\n                return 512;\n            default:\n                throw new Error(\"Unrecognized name\");\n        }\n    }\n    static getAlgorithmName(algorithm) {\n        switch (algorithm.name.toUpperCase()) {\n            case \"SHA-1\":\n                return \"sha1\";\n            case \"SHA-256\":\n                return \"sha256\";\n            case \"SHA-384\":\n                return \"sha384\";\n            case \"SHA-512\":\n                return \"sha512\";\n            case \"SHA3-256\":\n                return \"sha3-256\";\n            case \"SHA3-384\":\n                return \"sha3-384\";\n            case \"SHA3-512\":\n                return \"sha3-512\";\n            default:\n                throw new Error(\"Unrecognized name\");\n        }\n    }\n    static digest(algorithm, data) {\n        const hashAlg = this.getAlgorithmName(algorithm);\n        const hash = crypto.createHash(hashAlg)\n            .update(Buffer$1.from(data)).digest();\n        return new Uint8Array(hash).buffer;\n    }\n}\n\nclass RsaOaepProvider extends core.RsaOaepProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await RsaCrypto.generateKey({\n            ...algorithm,\n            name: this.name,\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onEncrypt(algorithm, key, data) {\n        const internalKey = getCryptoKey(key);\n        const dataView = new Uint8Array(data);\n        const keySize = Math.ceil(internalKey.algorithm.modulusLength >> 3);\n        const hashSize = ShaCrypto.size(internalKey.algorithm.hash) >> 3;\n        const dataLength = dataView.byteLength;\n        const psLength = keySize - dataLength - 2 * hashSize - 2;\n        if (dataLength > keySize - 2 * hashSize - 2) {\n            throw new Error(\"Data too large\");\n        }\n        const message = new Uint8Array(keySize);\n        const seed = message.subarray(1, hashSize + 1);\n        const dataBlock = message.subarray(hashSize + 1);\n        dataBlock.set(dataView, hashSize + psLength + 1);\n        const labelHash = crypto.createHash(internalKey.algorithm.hash.name.replace(\"-\", \"\"))\n            .update(core.BufferSourceConverter.toUint8Array(algorithm.label || new Uint8Array(0)))\n            .digest();\n        dataBlock.set(labelHash, 0);\n        dataBlock[hashSize + psLength] = 1;\n        crypto.randomFillSync(seed);\n        const dataBlockMask = this.mgf1(internalKey.algorithm.hash, seed, dataBlock.length);\n        for (let i = 0; i < dataBlock.length; i++) {\n            dataBlock[i] ^= dataBlockMask[i];\n        }\n        const seedMask = this.mgf1(internalKey.algorithm.hash, dataBlock, seed.length);\n        for (let i = 0; i < seed.length; i++) {\n            seed[i] ^= seedMask[i];\n        }\n        if (!internalKey.pem) {\n            internalKey.pem = `-----BEGIN PUBLIC KEY-----\\n${internalKey.data.toString(\"base64\")}\\n-----END PUBLIC KEY-----`;\n        }\n        const pkcs0 = crypto.publicEncrypt({\n            key: internalKey.pem,\n            padding: crypto.constants.RSA_NO_PADDING,\n        }, Buffer$1.from(message));\n        return new Uint8Array(pkcs0).buffer;\n    }\n    async onDecrypt(algorithm, key, data) {\n        const internalKey = getCryptoKey(key);\n        const keySize = Math.ceil(internalKey.algorithm.modulusLength >> 3);\n        const hashSize = ShaCrypto.size(internalKey.algorithm.hash) >> 3;\n        const dataLength = data.byteLength;\n        if (dataLength !== keySize) {\n            throw new Error(\"Bad data\");\n        }\n        if (!internalKey.pem) {\n            internalKey.pem = `-----BEGIN PRIVATE KEY-----\\n${internalKey.data.toString(\"base64\")}\\n-----END PRIVATE KEY-----`;\n        }\n        let pkcs0 = crypto.privateDecrypt({\n            key: internalKey.pem,\n            padding: crypto.constants.RSA_NO_PADDING,\n        }, Buffer$1.from(data));\n        const z = pkcs0[0];\n        const seed = pkcs0.subarray(1, hashSize + 1);\n        const dataBlock = pkcs0.subarray(hashSize + 1);\n        if (z !== 0) {\n            throw new Error(\"Decryption failed\");\n        }\n        const seedMask = this.mgf1(internalKey.algorithm.hash, dataBlock, seed.length);\n        for (let i = 0; i < seed.length; i++) {\n            seed[i] ^= seedMask[i];\n        }\n        const dataBlockMask = this.mgf1(internalKey.algorithm.hash, seed, dataBlock.length);\n        for (let i = 0; i < dataBlock.length; i++) {\n            dataBlock[i] ^= dataBlockMask[i];\n        }\n        const labelHash = crypto.createHash(internalKey.algorithm.hash.name.replace(\"-\", \"\"))\n            .update(core.BufferSourceConverter.toUint8Array(algorithm.label || new Uint8Array(0)))\n            .digest();\n        for (let i = 0; i < hashSize; i++) {\n            if (labelHash[i] !== dataBlock[i]) {\n                throw new Error(\"Decryption failed\");\n            }\n        }\n        let psEnd = hashSize;\n        for (; psEnd < dataBlock.length; psEnd++) {\n            const psz = dataBlock[psEnd];\n            if (psz === 1) {\n                break;\n            }\n            if (psz !== 0) {\n                throw new Error(\"Decryption failed\");\n            }\n        }\n        if (psEnd === dataBlock.length) {\n            throw new Error(\"Decryption failed\");\n        }\n        pkcs0 = dataBlock.subarray(psEnd + 1);\n        return new Uint8Array(pkcs0).buffer;\n    }\n    async onExportKey(format, key) {\n        return RsaCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await RsaCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        const internalKey = getCryptoKey(key);\n        if (!(internalKey instanceof RsaPrivateKey || internalKey instanceof RsaPublicKey)) {\n            throw new TypeError(\"key: Is not RSA CryptoKey\");\n        }\n    }\n    mgf1(algorithm, seed, length = 0) {\n        const hashSize = ShaCrypto.size(algorithm) >> 3;\n        const mask = new Uint8Array(length);\n        const counter = new Uint8Array(4);\n        const chunks = Math.ceil(length / hashSize);\n        for (let i = 0; i < chunks; i++) {\n            counter[0] = i >>> 24;\n            counter[1] = (i >>> 16) & 255;\n            counter[2] = (i >>> 8) & 255;\n            counter[3] = i & 255;\n            const submask = mask.subarray(i * hashSize);\n            let chunk = crypto.createHash(algorithm.name.replace(\"-\", \"\"))\n                .update(seed)\n                .update(counter)\n                .digest();\n            if (chunk.length > submask.length) {\n                chunk = chunk.subarray(0, submask.length);\n            }\n            submask.set(chunk);\n        }\n        return mask;\n    }\n}\n\nclass RsaEsProvider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"RSAES-PKCS1-v1_5\";\n        this.usages = {\n            publicKey: [\"encrypt\", \"wrapKey\"],\n            privateKey: [\"decrypt\", \"unwrapKey\"],\n        };\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await RsaCrypto.generateKey({\n            ...algorithm,\n            name: this.name,\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    checkGenerateKeyParams(algorithm) {\n        this.checkRequiredProperty(algorithm, \"publicExponent\");\n        if (!(algorithm.publicExponent && algorithm.publicExponent instanceof Uint8Array)) {\n            throw new TypeError(\"publicExponent: Missing or not a Uint8Array\");\n        }\n        const publicExponent = Convert.ToBase64(algorithm.publicExponent);\n        if (!(publicExponent === \"Aw==\" || publicExponent === \"AQAB\")) {\n            throw new TypeError(\"publicExponent: Must be [3] or [1,0,1]\");\n        }\n        this.checkRequiredProperty(algorithm, \"modulusLength\");\n        switch (algorithm.modulusLength) {\n            case 1024:\n            case 2048:\n            case 4096:\n                break;\n            default:\n                throw new TypeError(\"modulusLength: Must be 1024, 2048, or 4096\");\n        }\n    }\n    async onEncrypt(algorithm, key, data) {\n        const options = this.toCryptoOptions(key);\n        const enc = crypto.publicEncrypt(options, new Uint8Array(data));\n        return new Uint8Array(enc).buffer;\n    }\n    async onDecrypt(algorithm, key, data) {\n        const options = this.toCryptoOptions(key);\n        const dec = crypto.privateDecrypt(options, new Uint8Array(data));\n        return new Uint8Array(dec).buffer;\n    }\n    async onExportKey(format, key) {\n        return RsaCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await RsaCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        const internalKey = getCryptoKey(key);\n        if (!(internalKey instanceof RsaPrivateKey || internalKey instanceof RsaPublicKey)) {\n            throw new TypeError(\"key: Is not RSA CryptoKey\");\n        }\n    }\n    toCryptoOptions(key) {\n        const type = key.type.toUpperCase();\n        return {\n            key: `-----BEGIN ${type} KEY-----\\n${getCryptoKey(key).data.toString(\"base64\")}\\n-----END ${type} KEY-----`,\n            padding: crypto.constants.RSA_PKCS1_PADDING,\n        };\n    }\n}\n\nconst namedOIDs = {\n    \"1.2.840.10045.3.1.7\": \"P-256\",\n    \"P-256\": \"1.2.840.10045.3.1.7\",\n    \"1.3.132.0.34\": \"P-384\",\n    \"P-384\": \"1.3.132.0.34\",\n    \"1.3.132.0.35\": \"P-521\",\n    \"P-521\": \"1.3.132.0.35\",\n    \"1.3.132.0.10\": \"K-256\",\n    \"K-256\": \"1.3.132.0.10\",\n    \"brainpoolP160r1\": \"1.3.36.3.3.2.8.1.1.1\",\n    \"1.3.36.3.3.2.8.1.1.1\": \"brainpoolP160r1\",\n    \"brainpoolP160t1\": \"1.3.36.3.3.2.8.1.1.2\",\n    \"1.3.36.3.3.2.8.1.1.2\": \"brainpoolP160t1\",\n    \"brainpoolP192r1\": \"1.3.36.3.3.2.8.1.1.3\",\n    \"1.3.36.3.3.2.8.1.1.3\": \"brainpoolP192r1\",\n    \"brainpoolP192t1\": \"1.3.36.3.3.2.8.1.1.4\",\n    \"1.3.36.3.3.2.8.1.1.4\": \"brainpoolP192t1\",\n    \"brainpoolP224r1\": \"1.3.36.3.3.2.8.1.1.5\",\n    \"1.3.36.3.3.2.8.1.1.5\": \"brainpoolP224r1\",\n    \"brainpoolP224t1\": \"1.3.36.3.3.2.8.1.1.6\",\n    \"1.3.36.3.3.2.8.1.1.6\": \"brainpoolP224t1\",\n    \"brainpoolP256r1\": \"1.3.36.3.3.2.8.1.1.7\",\n    \"1.3.36.3.3.2.8.1.1.7\": \"brainpoolP256r1\",\n    \"brainpoolP256t1\": \"1.3.36.3.3.2.8.1.1.8\",\n    \"1.3.36.3.3.2.8.1.1.8\": \"brainpoolP256t1\",\n    \"brainpoolP320r1\": \"1.3.36.3.3.2.8.1.1.9\",\n    \"1.3.36.3.3.2.8.1.1.9\": \"brainpoolP320r1\",\n    \"brainpoolP320t1\": \"1.3.36.3.3.2.8.1.1.10\",\n    \"1.3.36.3.3.2.8.1.1.10\": \"brainpoolP320t1\",\n    \"brainpoolP384r1\": \"1.3.36.3.3.2.8.1.1.11\",\n    \"1.3.36.3.3.2.8.1.1.11\": \"brainpoolP384r1\",\n    \"brainpoolP384t1\": \"1.3.36.3.3.2.8.1.1.12\",\n    \"1.3.36.3.3.2.8.1.1.12\": \"brainpoolP384t1\",\n    \"brainpoolP512r1\": \"1.3.36.3.3.2.8.1.1.13\",\n    \"1.3.36.3.3.2.8.1.1.13\": \"brainpoolP512r1\",\n    \"brainpoolP512t1\": \"1.3.36.3.3.2.8.1.1.14\",\n    \"1.3.36.3.3.2.8.1.1.14\": \"brainpoolP512t1\",\n};\nfunction getOidByNamedCurve$1(namedCurve) {\n    const oid = namedOIDs[namedCurve];\n    if (!oid) {\n        throw new core.OperationError(`Cannot convert WebCrypto named curve '${namedCurve}' to OID`);\n    }\n    return oid;\n}\n\nclass EcPrivateKey extends AsymmetricKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"private\";\n    }\n    getKey() {\n        const keyInfo = AsnParser.parse(this.data, core.asn1.PrivateKeyInfo);\n        return AsnParser.parse(keyInfo.privateKey, core.asn1.EcPrivateKey);\n    }\n    toJSON() {\n        const key = this.getKey();\n        const json = {\n            kty: \"EC\",\n            crv: this.algorithm.namedCurve,\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n        return Object.assign(json, JsonSerializer.toJSON(key));\n    }\n    fromJSON(json) {\n        if (!json.crv) {\n            throw new core.OperationError(`Cannot get named curve from JWK. Property 'crv' is required`);\n        }\n        const keyInfo = new core.asn1.PrivateKeyInfo();\n        keyInfo.privateKeyAlgorithm.algorithm = \"1.2.840.10045.2.1\";\n        keyInfo.privateKeyAlgorithm.parameters = AsnSerializer.serialize(new core.asn1.ObjectIdentifier(getOidByNamedCurve$1(json.crv)));\n        const key = JsonParser.fromJSON(json, { targetSchema: core.asn1.EcPrivateKey });\n        keyInfo.privateKey = AsnSerializer.serialize(key);\n        this.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        return this;\n    }\n}\n\nclass EcPublicKey extends AsymmetricKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"public\";\n    }\n    getKey() {\n        const keyInfo = AsnParser.parse(this.data, core.asn1.PublicKeyInfo);\n        return new core.asn1.EcPublicKey(keyInfo.publicKey);\n    }\n    toJSON() {\n        const key = this.getKey();\n        const json = {\n            kty: \"EC\",\n            crv: this.algorithm.namedCurve,\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n        return Object.assign(json, JsonSerializer.toJSON(key));\n    }\n    fromJSON(json) {\n        if (!json.crv) {\n            throw new core.OperationError(`Cannot get named curve from JWK. Property 'crv' is required`);\n        }\n        const key = JsonParser.fromJSON(json, { targetSchema: core.asn1.EcPublicKey });\n        const keyInfo = new core.asn1.PublicKeyInfo();\n        keyInfo.publicKeyAlgorithm.algorithm = \"1.2.840.10045.2.1\";\n        keyInfo.publicKeyAlgorithm.parameters = AsnSerializer.serialize(new core.asn1.ObjectIdentifier(getOidByNamedCurve$1(json.crv)));\n        keyInfo.publicKey = AsnSerializer.toASN(key).valueHex;\n        this.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        return this;\n    }\n}\n\nclass Sha1Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA-1\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass Sha256Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA-256\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass Sha384Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA-384\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass Sha512Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA-512\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass Sha3256Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA3-256\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass Sha3384Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA3-384\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass Sha3512Provider extends core.ProviderCrypto {\n    constructor() {\n        super(...arguments);\n        this.name = \"SHA3-512\";\n        this.usages = [];\n    }\n    async onDigest(algorithm, data) {\n        return ShaCrypto.digest(algorithm, data);\n    }\n}\n\nclass EcCrypto {\n    static async generateKey(algorithm, extractable, keyUsages) {\n        const privateKey = new EcPrivateKey();\n        privateKey.algorithm = algorithm;\n        privateKey.extractable = extractable;\n        privateKey.usages = keyUsages.filter((usage) => this.privateKeyUsages.indexOf(usage) !== -1);\n        const publicKey = new EcPublicKey();\n        publicKey.algorithm = algorithm;\n        publicKey.extractable = true;\n        publicKey.usages = keyUsages.filter((usage) => this.publicKeyUsages.indexOf(usage) !== -1);\n        const keys = crypto.generateKeyPairSync(\"ec\", {\n            namedCurve: this.getOpenSSLNamedCurve(algorithm.namedCurve),\n            publicKeyEncoding: {\n                format: \"der\",\n                type: \"spki\",\n            },\n            privateKeyEncoding: {\n                format: \"der\",\n                type: \"pkcs8\",\n            },\n        });\n        privateKey.data = keys.privateKey;\n        publicKey.data = keys.publicKey;\n        const res = {\n            privateKey,\n            publicKey,\n        };\n        return res;\n    }\n    static async sign(algorithm, key, data) {\n        const cryptoAlg = ShaCrypto.getAlgorithmName(algorithm.hash);\n        const signer = crypto.createSign(cryptoAlg);\n        signer.update(Buffer$1.from(data));\n        if (!key.pem) {\n            key.pem = `-----BEGIN PRIVATE KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PRIVATE KEY-----`;\n        }\n        const options = {\n            key: key.pem,\n        };\n        const signature = signer.sign(options);\n        const ecSignature = AsnParser.parse(signature, core.asn1.EcDsaSignature);\n        const signatureRaw = core.EcUtils.encodeSignature(ecSignature, core.EcCurves.get(key.algorithm.namedCurve).size);\n        return signatureRaw.buffer;\n    }\n    static async verify(algorithm, key, signature, data) {\n        const cryptoAlg = ShaCrypto.getAlgorithmName(algorithm.hash);\n        const signer = crypto.createVerify(cryptoAlg);\n        signer.update(Buffer$1.from(data));\n        if (!key.pem) {\n            key.pem = `-----BEGIN PUBLIC KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PUBLIC KEY-----`;\n        }\n        const options = {\n            key: key.pem,\n        };\n        const ecSignature = new core.asn1.EcDsaSignature();\n        const namedCurve = core.EcCurves.get(key.algorithm.namedCurve);\n        const signaturePoint = core.EcUtils.decodeSignature(signature, namedCurve.size);\n        ecSignature.r = BufferSourceConverter.toArrayBuffer(signaturePoint.r);\n        ecSignature.s = BufferSourceConverter.toArrayBuffer(signaturePoint.s);\n        const ecSignatureRaw = Buffer$1.from(AsnSerializer.serialize(ecSignature));\n        const ok = signer.verify(options, ecSignatureRaw);\n        return ok;\n    }\n    static async deriveBits(algorithm, baseKey, length) {\n        const cryptoAlg = this.getOpenSSLNamedCurve(baseKey.algorithm.namedCurve);\n        const ecdh = crypto.createECDH(cryptoAlg);\n        const asnPrivateKey = AsnParser.parse(baseKey.data, core.asn1.PrivateKeyInfo);\n        const asnEcPrivateKey = AsnParser.parse(asnPrivateKey.privateKey, core.asn1.EcPrivateKey);\n        ecdh.setPrivateKey(Buffer$1.from(asnEcPrivateKey.privateKey));\n        const asnPublicKey = AsnParser.parse(algorithm.public.data, core.asn1.PublicKeyInfo);\n        const bits = ecdh.computeSecret(Buffer$1.from(asnPublicKey.publicKey));\n        if (length === null) {\n            return bits;\n        }\n        return new Uint8Array(bits).buffer.slice(0, length >> 3);\n    }\n    static async exportKey(format, key) {\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                return JsonSerializer.toJSON(key);\n            case \"pkcs8\":\n            case \"spki\":\n                return new Uint8Array(key.data).buffer;\n            case \"raw\": {\n                const publicKeyInfo = AsnParser.parse(key.data, core.asn1.PublicKeyInfo);\n                return publicKeyInfo.publicKey;\n            }\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk', 'raw', pkcs8' or 'spki'\");\n        }\n    }\n    static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        switch (format.toLowerCase()) {\n            case \"jwk\": {\n                const jwk = keyData;\n                if (jwk.d) {\n                    const asnKey = JsonParser.fromJSON(keyData, { targetSchema: core.asn1.EcPrivateKey });\n                    return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n                }\n                else {\n                    const asnKey = JsonParser.fromJSON(keyData, { targetSchema: core.asn1.EcPublicKey });\n                    return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n                }\n            }\n            case \"raw\": {\n                const asnKey = new core.asn1.EcPublicKey(keyData);\n                return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n            }\n            case \"spki\": {\n                const keyInfo = AsnParser.parse(new Uint8Array(keyData), core.asn1.PublicKeyInfo);\n                const asnKey = new core.asn1.EcPublicKey(keyInfo.publicKey);\n                this.assertKeyParameters(keyInfo.publicKeyAlgorithm.parameters, algorithm.namedCurve);\n                return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);\n            }\n            case \"pkcs8\": {\n                const keyInfo = AsnParser.parse(new Uint8Array(keyData), core.asn1.PrivateKeyInfo);\n                const asnKey = AsnParser.parse(keyInfo.privateKey, core.asn1.EcPrivateKey);\n                this.assertKeyParameters(keyInfo.privateKeyAlgorithm.parameters, algorithm.namedCurve);\n                return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n            }\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk', 'raw', 'pkcs8' or 'spki'\");\n        }\n    }\n    static assertKeyParameters(parameters, namedCurve) {\n        if (!parameters) {\n            throw new core.CryptoError(\"Key info doesn't have required parameters\");\n        }\n        let namedCurveIdentifier = \"\";\n        try {\n            namedCurveIdentifier = AsnParser.parse(parameters, core.asn1.ObjectIdentifier).value;\n        }\n        catch (e) {\n            throw new core.CryptoError(\"Cannot read key info parameters\");\n        }\n        if (getOidByNamedCurve$1(namedCurve) !== namedCurveIdentifier) {\n            throw new core.CryptoError(\"Key info parameter doesn't match to named curve\");\n        }\n    }\n    static async importPrivateKey(asnKey, algorithm, extractable, keyUsages) {\n        const keyInfo = new core.asn1.PrivateKeyInfo();\n        keyInfo.privateKeyAlgorithm.algorithm = \"1.2.840.10045.2.1\";\n        keyInfo.privateKeyAlgorithm.parameters = AsnSerializer.serialize(new core.asn1.ObjectIdentifier(getOidByNamedCurve$1(algorithm.namedCurve)));\n        keyInfo.privateKey = AsnSerializer.serialize(asnKey);\n        const key = new EcPrivateKey();\n        key.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        key.algorithm = Object.assign({}, algorithm);\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n    static async importPublicKey(asnKey, algorithm, extractable, keyUsages) {\n        const keyInfo = new core.asn1.PublicKeyInfo();\n        keyInfo.publicKeyAlgorithm.algorithm = \"1.2.840.10045.2.1\";\n        const namedCurve = getOidByNamedCurve$1(algorithm.namedCurve);\n        keyInfo.publicKeyAlgorithm.parameters = AsnSerializer.serialize(new core.asn1.ObjectIdentifier(namedCurve));\n        keyInfo.publicKey = asnKey.value;\n        const key = new EcPublicKey();\n        key.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        key.algorithm = Object.assign({}, algorithm);\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n    static getOpenSSLNamedCurve(curve) {\n        switch (curve.toUpperCase()) {\n            case \"P-256\":\n                return \"prime256v1\";\n            case \"K-256\":\n                return \"secp256k1\";\n            case \"P-384\":\n                return \"secp384r1\";\n            case \"P-521\":\n                return \"secp521r1\";\n            default:\n                return curve;\n        }\n    }\n}\nEcCrypto.publicKeyUsages = [\"verify\"];\nEcCrypto.privateKeyUsages = [\"sign\", \"deriveKey\", \"deriveBits\"];\n\nclass EcdsaProvider extends core.EcdsaProvider {\n    constructor() {\n        super(...arguments);\n        this.namedCurves = core.EcCurves.names;\n        this.hashAlgorithms = [\n            \"SHA-1\", \"SHA-256\", \"SHA-384\", \"SHA-512\",\n            \"shake128\", \"shake256\",\n            \"SHA3-256\", \"SHA3-384\", \"SHA3-512\"\n        ];\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await EcCrypto.generateKey({\n            ...algorithm,\n            name: this.name,\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onSign(algorithm, key, data) {\n        return EcCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onVerify(algorithm, key, signature, data) {\n        return EcCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return EcCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await EcCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        const internalKey = getCryptoKey(key);\n        if (!(internalKey instanceof EcPrivateKey || internalKey instanceof EcPublicKey)) {\n            throw new TypeError(\"key: Is not EC CryptoKey\");\n        }\n    }\n}\n\nclass EcdhProvider extends core.EcdhProvider {\n    constructor() {\n        super(...arguments);\n        this.namedCurves = core.EcCurves.names;\n    }\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await EcCrypto.generateKey({\n            ...algorithm,\n            name: this.name,\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onExportKey(format, key) {\n        return EcCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await EcCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        const internalKey = getCryptoKey(key);\n        if (!(internalKey instanceof EcPrivateKey || internalKey instanceof EcPublicKey)) {\n            throw new TypeError(\"key: Is not EC CryptoKey\");\n        }\n    }\n    async onDeriveBits(algorithm, baseKey, length) {\n        const bits = await EcCrypto.deriveBits({ ...algorithm, public: getCryptoKey(algorithm.public) }, getCryptoKey(baseKey), length);\n        return bits;\n    }\n}\n\nconst edOIDs = {\n    [core.asn1.idEd448]: \"Ed448\",\n    \"ed448\": core.asn1.idEd448,\n    [core.asn1.idX448]: \"X448\",\n    \"x448\": core.asn1.idX448,\n    [core.asn1.idEd25519]: \"Ed25519\",\n    \"ed25519\": core.asn1.idEd25519,\n    [core.asn1.idX25519]: \"X25519\",\n    \"x25519\": core.asn1.idX25519,\n};\nfunction getOidByNamedCurve(namedCurve) {\n    const oid = edOIDs[namedCurve.toLowerCase()];\n    if (!oid) {\n        throw new core.OperationError(`Cannot convert WebCrypto named curve '${namedCurve}' to OID`);\n    }\n    return oid;\n}\n\nclass EdPrivateKey extends AsymmetricKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"private\";\n    }\n    getKey() {\n        const keyInfo = AsnParser.parse(this.data, core.asn1.PrivateKeyInfo);\n        return AsnParser.parse(keyInfo.privateKey, core.asn1.CurvePrivateKey);\n    }\n    toJSON() {\n        const key = this.getKey();\n        const json = {\n            kty: \"OKP\",\n            crv: this.algorithm.namedCurve,\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n        return Object.assign(json, JsonSerializer.toJSON(key));\n    }\n    fromJSON(json) {\n        if (!json.crv) {\n            throw new core.OperationError(`Cannot get named curve from JWK. Property 'crv' is required`);\n        }\n        const keyInfo = new core.asn1.PrivateKeyInfo();\n        keyInfo.privateKeyAlgorithm.algorithm = getOidByNamedCurve(json.crv);\n        const key = JsonParser.fromJSON(json, { targetSchema: core.asn1.CurvePrivateKey });\n        keyInfo.privateKey = AsnSerializer.serialize(key);\n        this.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        return this;\n    }\n}\n\nclass EdPublicKey extends AsymmetricKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"public\";\n    }\n    getKey() {\n        const keyInfo = AsnParser.parse(this.data, core.asn1.PublicKeyInfo);\n        return keyInfo.publicKey;\n    }\n    toJSON() {\n        const key = this.getKey();\n        const json = {\n            kty: \"OKP\",\n            crv: this.algorithm.namedCurve,\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n        return Object.assign(json, {\n            x: Convert.ToBase64Url(key)\n        });\n    }\n    fromJSON(json) {\n        if (!json.crv) {\n            throw new core.OperationError(`Cannot get named curve from JWK. Property 'crv' is required`);\n        }\n        if (!json.x) {\n            throw new core.OperationError(`Cannot get property from JWK. Property 'x' is required`);\n        }\n        const keyInfo = new core.asn1.PublicKeyInfo();\n        keyInfo.publicKeyAlgorithm.algorithm = getOidByNamedCurve(json.crv);\n        keyInfo.publicKey = Convert.FromBase64Url(json.x);\n        this.data = Buffer$1.from(AsnSerializer.serialize(keyInfo));\n        return this;\n    }\n}\n\nclass EdCrypto {\n    static async generateKey(algorithm, extractable, keyUsages) {\n        const privateKey = new EdPrivateKey();\n        privateKey.algorithm = algorithm;\n        privateKey.extractable = extractable;\n        privateKey.usages = keyUsages.filter((usage) => this.privateKeyUsages.indexOf(usage) !== -1);\n        const publicKey = new EdPublicKey();\n        publicKey.algorithm = algorithm;\n        publicKey.extractable = true;\n        publicKey.usages = keyUsages.filter((usage) => this.publicKeyUsages.indexOf(usage) !== -1);\n        const type = algorithm.namedCurve.toLowerCase();\n        const keys = crypto.generateKeyPairSync(type, {\n            publicKeyEncoding: {\n                format: \"der\",\n                type: \"spki\",\n            },\n            privateKeyEncoding: {\n                format: \"der\",\n                type: \"pkcs8\",\n            },\n        });\n        privateKey.data = keys.privateKey;\n        publicKey.data = keys.publicKey;\n        const res = {\n            privateKey,\n            publicKey,\n        };\n        return res;\n    }\n    static async sign(algorithm, key, data) {\n        if (!key.pem) {\n            key.pem = `-----BEGIN PRIVATE KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PRIVATE KEY-----`;\n        }\n        const options = {\n            key: key.pem,\n        };\n        const signature = crypto.sign(null, Buffer$1.from(data), options);\n        return core.BufferSourceConverter.toArrayBuffer(signature);\n    }\n    static async verify(algorithm, key, signature, data) {\n        if (!key.pem) {\n            key.pem = `-----BEGIN PUBLIC KEY-----\\n${key.data.toString(\"base64\")}\\n-----END PUBLIC KEY-----`;\n        }\n        const options = {\n            key: key.pem,\n        };\n        const ok = crypto.verify(null, Buffer$1.from(data), options, Buffer$1.from(signature));\n        return ok;\n    }\n    static async deriveBits(algorithm, baseKey, length) {\n        const publicKey = crypto.createPublicKey({\n            key: algorithm.public.data,\n            format: \"der\",\n            type: \"spki\",\n        });\n        const privateKey = crypto.createPrivateKey({\n            key: baseKey.data,\n            format: \"der\",\n            type: \"pkcs8\",\n        });\n        const bits = crypto.diffieHellman({\n            publicKey,\n            privateKey,\n        });\n        return new Uint8Array(bits).buffer.slice(0, length >> 3);\n    }\n    static async exportKey(format, key) {\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                return JsonSerializer.toJSON(key);\n            case \"pkcs8\":\n            case \"spki\":\n                return new Uint8Array(key.data).buffer;\n            case \"raw\": {\n                const publicKeyInfo = AsnParser.parse(key.data, core.asn1.PublicKeyInfo);\n                return publicKeyInfo.publicKey;\n            }\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk', 'raw', pkcs8' or 'spki'\");\n        }\n    }\n    static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        switch (format.toLowerCase()) {\n            case \"jwk\": {\n                const jwk = keyData;\n                if (jwk.d) {\n                    const asnKey = JsonParser.fromJSON(keyData, { targetSchema: core.asn1.CurvePrivateKey });\n                    return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n                }\n                else {\n                    if (!jwk.x) {\n                        throw new TypeError(\"keyData: Cannot get required 'x' filed\");\n                    }\n                    return this.importPublicKey(Convert.FromBase64Url(jwk.x), algorithm, extractable, keyUsages);\n                }\n            }\n            case \"raw\": {\n                return this.importPublicKey(keyData, algorithm, extractable, keyUsages);\n            }\n            case \"spki\": {\n                const keyInfo = AsnParser.parse(new Uint8Array(keyData), core.asn1.PublicKeyInfo);\n                return this.importPublicKey(keyInfo.publicKey, algorithm, extractable, keyUsages);\n            }\n            case \"pkcs8\": {\n                const keyInfo = AsnParser.parse(new Uint8Array(keyData), core.asn1.PrivateKeyInfo);\n                const asnKey = AsnParser.parse(keyInfo.privateKey, core.asn1.CurvePrivateKey);\n                return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);\n            }\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk', 'raw', 'pkcs8' or 'spki'\");\n        }\n    }\n    static importPrivateKey(asnKey, algorithm, extractable, keyUsages) {\n        const key = new EdPrivateKey();\n        key.fromJSON({\n            crv: algorithm.namedCurve,\n            d: Convert.ToBase64Url(asnKey.d),\n        });\n        key.algorithm = Object.assign({}, algorithm);\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n    static async importPublicKey(asnKey, algorithm, extractable, keyUsages) {\n        const key = new EdPublicKey();\n        key.fromJSON({\n            crv: algorithm.namedCurve,\n            x: Convert.ToBase64Url(asnKey),\n        });\n        key.algorithm = Object.assign({}, algorithm);\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return key;\n    }\n}\nEdCrypto.publicKeyUsages = [\"verify\"];\nEdCrypto.privateKeyUsages = [\"sign\", \"deriveKey\", \"deriveBits\"];\n\nclass EdDsaProvider extends core.EdDsaProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await EdCrypto.generateKey({\n            name: this.name,\n            namedCurve: algorithm.namedCurve.replace(/^ed/i, \"Ed\"),\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onSign(algorithm, key, data) {\n        return EdCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));\n    }\n    async onVerify(algorithm, key, signature, data) {\n        return EdCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        return EdCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await EdCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n}\n\nclass EcdhEsProvider extends core.EcdhEsProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await EdCrypto.generateKey({\n            name: this.name,\n            namedCurve: algorithm.namedCurve.toUpperCase(),\n        }, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onDeriveBits(algorithm, baseKey, length) {\n        const bits = await EdCrypto.deriveBits({ ...algorithm, public: getCryptoKey(algorithm.public) }, getCryptoKey(baseKey), length);\n        return bits;\n    }\n    async onExportKey(format, key) {\n        return EdCrypto.exportKey(format, getCryptoKey(key));\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await EdCrypto.importKey(format, keyData, { ...algorithm, name: this.name }, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n}\n\nclass Ed25519CryptoKey extends CryptoKey {\n    constructor(algorithm, extractable, usages, data) {\n        super();\n        this.algorithm = algorithm;\n        this.extractable = extractable;\n        this.usages = usages;\n        this.data = Buffer.from(data);\n    }\n    toJWK() {\n        return {\n            kty: \"OKP\",\n            crv: this.algorithm.name,\n            key_ops: this.usages,\n            ext: this.extractable,\n        };\n    }\n}\n\nclass Ed25519PrivateKey extends Ed25519CryptoKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"private\";\n    }\n    toJWK() {\n        const pubJwk = crypto.createPublicKey({\n            key: this.data,\n            format: \"pem\",\n        }).export({ format: \"jwk\" });\n        const raw = core.PemConverter.toUint8Array(this.data.toString());\n        const pkcs8 = AsnConvert.parse(raw, core.asn1.PrivateKeyInfo);\n        const d = AsnConvert.parse(pkcs8.privateKey, core.asn1.EdPrivateKey).value;\n        return {\n            ...super.toJWK(),\n            ...pubJwk,\n            d: Buffer.from(new Uint8Array(d)).toString(\"base64url\"),\n        };\n    }\n}\n\nclass Ed25519PublicKey extends Ed25519CryptoKey {\n    constructor() {\n        super(...arguments);\n        this.type = \"public\";\n    }\n    toJWK() {\n        const jwk = crypto.createPublicKey({\n            key: this.data,\n            format: \"pem\",\n        }).export({ format: \"jwk\" });\n        return {\n            ...super.toJWK(),\n            ...jwk,\n        };\n    }\n}\n\nclass Ed25519Crypto {\n    static async generateKey(algorithm, extractable, keyUsages) {\n        const type = algorithm.name.toLowerCase();\n        const keys = crypto.generateKeyPairSync(type, {\n            publicKeyEncoding: {\n                format: \"pem\",\n                type: \"spki\",\n            },\n            privateKeyEncoding: {\n                format: \"pem\",\n                type: \"pkcs8\",\n            },\n        });\n        const keyAlg = {\n            name: type === \"ed25519\" ? \"Ed25519\" : \"X25519\",\n        };\n        const privateKeyUsages = keyUsages.filter((usage) => this.privateKeyUsages.includes(usage));\n        const publicKeyUsages = keyUsages.filter((usage) => this.publicKeyUsages.includes(usage));\n        return {\n            privateKey: new Ed25519PrivateKey(keyAlg, extractable, privateKeyUsages, keys.privateKey),\n            publicKey: new Ed25519PublicKey(keyAlg, true, publicKeyUsages, keys.publicKey),\n        };\n    }\n    static async sign(algorithm, key, data) {\n        const signature = crypto.sign(null, Buffer.from(data), key.data);\n        return core.BufferSourceConverter.toArrayBuffer(signature);\n    }\n    static async verify(algorithm, key, signature, data) {\n        return crypto.verify(null, Buffer.from(data), key.data, signature);\n    }\n    static async exportKey(format, key) {\n        switch (format) {\n            case \"jwk\":\n                return key.toJWK();\n            case \"pkcs8\": {\n                return core.PemConverter.toArrayBuffer(key.data.toString());\n            }\n            case \"spki\": {\n                return core.PemConverter.toArrayBuffer(key.data.toString());\n            }\n            case \"raw\": {\n                const jwk = key.toJWK();\n                return Convert.FromBase64Url(jwk.x);\n            }\n            default:\n                return Promise.reject(new core.OperationError(\"format: Must be 'jwk', 'raw', pkcs8' or 'spki'\"));\n        }\n    }\n    static async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        switch (format) {\n            case \"jwk\": {\n                const jwk = keyData;\n                if (jwk.d) {\n                    const privateData = new core.asn1.EdPrivateKey();\n                    privateData.value = core.BufferSourceConverter.toArrayBuffer(Buffer.from(jwk.d, \"base64url\"));\n                    const pkcs8 = new core.asn1.PrivateKeyInfo();\n                    pkcs8.privateKeyAlgorithm.algorithm = algorithm.name.toLowerCase() === \"ed25519\"\n                        ? core.asn1.idEd25519\n                        : core.asn1.idX25519;\n                    pkcs8.privateKey = AsnConvert.serialize(privateData);\n                    const raw = AsnConvert.serialize(pkcs8);\n                    const pem = core.PemConverter.fromBufferSource(raw, \"PRIVATE KEY\");\n                    return new Ed25519PrivateKey(algorithm, extractable, keyUsages, pem);\n                }\n                else if (jwk.x) {\n                    const pubKey = crypto.createPublicKey({\n                        format: \"jwk\",\n                        key: jwk,\n                    });\n                    const pem = pubKey.export({ format: \"pem\", type: \"spki\" });\n                    return new Ed25519PublicKey(algorithm, extractable, keyUsages, pem);\n                }\n                else {\n                    throw new core.OperationError(\"keyData: Cannot import JWK. 'd' or 'x' must be presented\");\n                }\n            }\n            case \"pkcs8\": {\n                const pem = core.PemConverter.fromBufferSource(keyData, \"PRIVATE KEY\");\n                return new Ed25519PrivateKey(algorithm, extractable, keyUsages, pem);\n            }\n            case \"spki\": {\n                const pem = core.PemConverter.fromBufferSource(keyData, \"PUBLIC KEY\");\n                return new Ed25519PublicKey(algorithm, extractable, keyUsages, pem);\n            }\n            case \"raw\": {\n                const raw = keyData;\n                const key = crypto.createPublicKey({\n                    format: \"jwk\",\n                    key: {\n                        kty: \"OKP\",\n                        crv: algorithm.name.toLowerCase() === \"ed25519\" ? \"Ed25519\" : \"X25519\",\n                        x: Convert.ToBase64Url(raw),\n                    },\n                });\n                const pem = key.export({ format: \"pem\", type: \"spki\" });\n                return new Ed25519PublicKey(algorithm, extractable, keyUsages, pem);\n            }\n            default:\n                return Promise.reject(new core.OperationError(\"format: Must be 'jwk', 'raw', pkcs8' or 'spki'\"));\n        }\n    }\n}\nEd25519Crypto.privateKeyUsages = [\"sign\", \"deriveBits\", \"deriveKey\"];\nEd25519Crypto.publicKeyUsages = [\"verify\"];\n\nclass Ed25519Provider extends core.Ed25519Provider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await Ed25519Crypto.generateKey(algorithm, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onSign(algorithm, key, data) {\n        const internalKey = getCryptoKey(key);\n        const signature = Ed25519Crypto.sign(algorithm, internalKey, new Uint8Array(data));\n        return signature;\n    }\n    onVerify(algorithm, key, signature, data) {\n        const internalKey = getCryptoKey(key);\n        return Ed25519Crypto.verify(algorithm, internalKey, new Uint8Array(signature), new Uint8Array(data));\n    }\n    async onExportKey(format, key) {\n        const internalKey = getCryptoKey(key);\n        return Ed25519Crypto.exportKey(format, internalKey);\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const internalKey = await Ed25519Crypto.importKey(format, keyData, algorithm, extractable, keyUsages);\n        return setCryptoKey(internalKey);\n    }\n}\n\nclass X25519Provider extends core.X25519Provider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const keys = await Ed25519Crypto.generateKey(algorithm, extractable, keyUsages);\n        return {\n            privateKey: setCryptoKey(keys.privateKey),\n            publicKey: setCryptoKey(keys.publicKey),\n        };\n    }\n    async onDeriveBits(algorithm, baseKey, length) {\n        const internalBaseKey = getCryptoKey(baseKey);\n        const internalPublicKey = getCryptoKey(algorithm.public);\n        const publicKey = crypto.createPublicKey({\n            key: internalPublicKey.data.toString(),\n            format: \"pem\",\n            type: \"spki\",\n        });\n        const privateKey = crypto.createPrivateKey({\n            key: internalBaseKey.data.toString(),\n            format: \"pem\",\n            type: \"pkcs8\",\n        });\n        const bits = crypto.diffieHellman({\n            publicKey,\n            privateKey,\n        });\n        return new Uint8Array(bits).buffer.slice(0, length >> 3);\n    }\n    async onExportKey(format, key) {\n        const internalKey = getCryptoKey(key);\n        return Ed25519Crypto.exportKey(format, internalKey);\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        const key = await Ed25519Crypto.importKey(format, keyData, algorithm, extractable, keyUsages);\n        return setCryptoKey(key);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof Ed25519CryptoKey)) {\n            throw new TypeError(\"key: Is not a Ed25519CryptoKey\");\n        }\n    }\n}\n\nclass PbkdfCryptoKey extends CryptoKey {\n}\n\nclass Pbkdf2Provider extends core.Pbkdf2Provider {\n    async onDeriveBits(algorithm, baseKey, length) {\n        return new Promise((resolve, reject) => {\n            const salt = core.BufferSourceConverter.toArrayBuffer(algorithm.salt);\n            const hash = algorithm.hash.name.replace(\"-\", \"\");\n            crypto.pbkdf2(getCryptoKey(baseKey).data, Buffer$1.from(salt), algorithm.iterations, length >> 3, hash, (err, derivedBits) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(new Uint8Array(derivedBits).buffer);\n                }\n            });\n        });\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        if (format === \"raw\") {\n            const key = new PbkdfCryptoKey();\n            key.data = Buffer$1.from(keyData);\n            key.algorithm = { name: this.name };\n            key.extractable = false;\n            key.usages = keyUsages;\n            return setCryptoKey(key);\n        }\n        throw new core.OperationError(\"format: Must be 'raw'\");\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof PbkdfCryptoKey)) {\n            throw new TypeError(\"key: Is not PBKDF CryptoKey\");\n        }\n    }\n}\n\nclass HmacCryptoKey extends CryptoKey {\n    get alg() {\n        const hash = this.algorithm.hash.name.toUpperCase();\n        return `HS${hash.replace(\"SHA-\", \"\")}`;\n    }\n    set alg(value) {\n    }\n}\n__decorate([\n    JsonProp({ name: \"k\", converter: JsonBase64UrlConverter })\n], HmacCryptoKey.prototype, \"data\", void 0);\n\nclass HmacProvider extends core.HmacProvider {\n    async onGenerateKey(algorithm, extractable, keyUsages) {\n        const length = (algorithm.length || this.getDefaultLength(algorithm.hash.name)) >> 3 << 3;\n        const key = new HmacCryptoKey();\n        key.algorithm = {\n            ...algorithm,\n            length,\n            name: this.name,\n        };\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        key.data = crypto.randomBytes(length >> 3);\n        return setCryptoKey(key);\n    }\n    async onSign(algorithm, key, data) {\n        const cryptoAlg = ShaCrypto.getAlgorithmName(key.algorithm.hash);\n        const hmac = crypto.createHmac(cryptoAlg, getCryptoKey(key).data)\n            .update(Buffer$1.from(data)).digest();\n        return new Uint8Array(hmac).buffer;\n    }\n    async onVerify(algorithm, key, signature, data) {\n        const cryptoAlg = ShaCrypto.getAlgorithmName(key.algorithm.hash);\n        const hmac = crypto.createHmac(cryptoAlg, getCryptoKey(key).data)\n            .update(Buffer$1.from(data)).digest();\n        return hmac.compare(Buffer$1.from(signature)) === 0;\n    }\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        let key;\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                key = JsonParser.fromJSON(keyData, { targetSchema: HmacCryptoKey });\n                break;\n            case \"raw\":\n                key = new HmacCryptoKey();\n                key.data = Buffer$1.from(keyData);\n                break;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk' or 'raw'\");\n        }\n        key.algorithm = {\n            hash: { name: algorithm.hash.name },\n            name: this.name,\n            length: key.data.length << 3,\n        };\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return setCryptoKey(key);\n    }\n    async onExportKey(format, key) {\n        switch (format.toLowerCase()) {\n            case \"jwk\":\n                return JsonSerializer.toJSON(getCryptoKey(key));\n            case \"raw\":\n                return new Uint8Array(getCryptoKey(key).data).buffer;\n            default:\n                throw new core.OperationError(\"format: Must be 'jwk' or 'raw'\");\n        }\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof HmacCryptoKey)) {\n            throw new TypeError(\"key: Is not HMAC CryptoKey\");\n        }\n    }\n}\n\nclass HkdfCryptoKey extends CryptoKey {\n}\n\nclass HkdfProvider extends core.HkdfProvider {\n    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {\n        if (format.toLowerCase() !== \"raw\") {\n            throw new core.OperationError(\"Operation not supported\");\n        }\n        const key = new HkdfCryptoKey();\n        key.data = Buffer$1.from(keyData);\n        key.algorithm = { name: this.name };\n        key.extractable = extractable;\n        key.usages = keyUsages;\n        return setCryptoKey(key);\n    }\n    async onDeriveBits(params, baseKey, length) {\n        const hash = params.hash.name.replace(\"-\", \"\");\n        const hashLength = crypto.createHash(hash).digest().length;\n        const byteLength = length / 8;\n        const info = BufferSourceConverter$1.toUint8Array(params.info);\n        const PRK = crypto.createHmac(hash, BufferSourceConverter$1.toUint8Array(params.salt))\n            .update(BufferSourceConverter$1.toUint8Array(getCryptoKey(baseKey).data))\n            .digest();\n        const blocks = [Buffer$1.alloc(0)];\n        const blockCount = Math.ceil(byteLength / hashLength) + 1;\n        for (let i = 1; i < blockCount; ++i) {\n            blocks.push(crypto.createHmac(hash, PRK)\n                .update(Buffer$1.concat([blocks[i - 1], info, Buffer$1.from([i])]))\n                .digest());\n        }\n        return Buffer$1.concat(blocks).slice(0, byteLength);\n    }\n    checkCryptoKey(key, keyUsage) {\n        super.checkCryptoKey(key, keyUsage);\n        if (!(getCryptoKey(key) instanceof HkdfCryptoKey)) {\n            throw new TypeError(\"key: Is not HKDF CryptoKey\");\n        }\n    }\n}\n\nclass ShakeCrypto {\n    static digest(algorithm, data) {\n        const hash = crypto.createHash(algorithm.name.toLowerCase(), { outputLength: algorithm.length })\n            .update(Buffer$1.from(data)).digest();\n        return new Uint8Array(hash).buffer;\n    }\n}\n\nclass Shake128Provider extends core.Shake128Provider {\n    async onDigest(algorithm, data) {\n        return ShakeCrypto.digest(algorithm, data);\n    }\n}\n\nclass Shake256Provider extends core.Shake256Provider {\n    async onDigest(algorithm, data) {\n        return ShakeCrypto.digest(algorithm, data);\n    }\n}\n\nclass SubtleCrypto extends core.SubtleCrypto {\n    constructor() {\n        var _a;\n        super();\n        this.providers.set(new AesCbcProvider());\n        this.providers.set(new AesCtrProvider());\n        this.providers.set(new AesGcmProvider());\n        this.providers.set(new AesCmacProvider());\n        this.providers.set(new AesKwProvider());\n        this.providers.set(new AesEcbProvider());\n        const ciphers = crypto.getCiphers();\n        if (ciphers.includes(\"des-cbc\")) {\n            this.providers.set(new DesCbcProvider());\n        }\n        this.providers.set(new DesEde3CbcProvider());\n        this.providers.set(new RsaSsaProvider());\n        this.providers.set(new RsaPssProvider());\n        this.providers.set(new RsaOaepProvider());\n        this.providers.set(new RsaEsProvider());\n        this.providers.set(new EcdsaProvider());\n        this.providers.set(new EcdhProvider());\n        this.providers.set(new Sha1Provider());\n        this.providers.set(new Sha256Provider());\n        this.providers.set(new Sha384Provider());\n        this.providers.set(new Sha512Provider());\n        this.providers.set(new Pbkdf2Provider());\n        this.providers.set(new HmacProvider());\n        this.providers.set(new HkdfProvider());\n        const nodeMajorVersion = (_a = /^v(\\d+)/.exec(process.version)) === null || _a === void 0 ? void 0 : _a[1];\n        if (nodeMajorVersion && parseInt(nodeMajorVersion, 10) >= 12) {\n            this.providers.set(new Shake128Provider());\n            this.providers.set(new Shake256Provider());\n        }\n        const hashes = crypto.getHashes();\n        if (hashes.includes(\"sha3-256\")) {\n            this.providers.set(new Sha3256Provider());\n        }\n        if (hashes.includes(\"sha3-384\")) {\n            this.providers.set(new Sha3384Provider());\n        }\n        if (hashes.includes(\"sha3-512\")) {\n            this.providers.set(new Sha3512Provider());\n        }\n        if (nodeMajorVersion && parseInt(nodeMajorVersion, 10) >= 14) {\n            this.providers.set(new EdDsaProvider());\n            this.providers.set(new EcdhEsProvider());\n            this.providers.set(new Ed25519Provider());\n            this.providers.set(new X25519Provider());\n        }\n    }\n}\n\nclass Crypto extends core.Crypto {\n    constructor() {\n        super(...arguments);\n        this.subtle = new SubtleCrypto();\n    }\n    getRandomValues(array) {\n        if (!ArrayBuffer.isView(array)) {\n            throw new TypeError(\"Failed to execute 'getRandomValues' on 'Crypto': parameter 1 is not of type 'ArrayBufferView'\");\n        }\n        const buffer = Buffer$1.from(array.buffer, array.byteOffset, array.byteLength);\n        crypto.randomFillSync(buffer);\n        return array;\n    }\n}\n\nexport { Crypto };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20311, "column": 0}, "map": {"version":3,"sources":["file:///home/abubakrjimoh/Desktop/Coding%20Stuffs/hackathon/secret-network/memeAi_coin_creator/ai-meme-coin-creator/node_modules/.pnpm/%40autonomys%2Bauto-dag-data%401.3.1/node_modules/%40autonomys/auto-dag-data/dist/encryption/index.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nimport { Crypto } from '@peculiar/webcrypto';\nimport { EncryptionAlgorithm } from '../metadata/index.js';\nimport { asyncByChunk } from '../utils/async.js';\nexport const crypto = typeof window === 'undefined' ? new Crypto() : window.crypto;\nexport const ENCRYPTING_CHUNK_SIZE = 1024 * 1024;\nconst IV_SIZE = 16;\nconst TAG_SIZE = 16;\nconst ENCRYPTED_CHUNK_SIZE = ENCRYPTING_CHUNK_SIZE + IV_SIZE + TAG_SIZE;\nconst SALT_SIZE = 32;\nexport const getKeyFromPassword = (_a) => __awaiter(void 0, [_a], void 0, function* ({ password, salt }) {\n    const encoder = new TextEncoder();\n    const saltHash = typeof salt === 'string' ? yield crypto.subtle.digest('SHA-256', encoder.encode(salt)) : salt;\n    const keyMaterial = yield crypto.subtle.importKey('raw', encoder.encode(password), 'PBKDF2', false, ['deriveBits', 'deriveKey']);\n    return crypto.subtle.deriveKey({\n        name: 'PBKDF2',\n        salt: saltHash,\n        iterations: 100000,\n        hash: 'SHA-256',\n    }, keyMaterial, { name: 'AES-GCM', length: 256 }, false, ['encrypt', 'decrypt']);\n});\nexport const encryptFile = function (file_1, password_1, _a) {\n    return __asyncGenerator(this, arguments, function* (file, password, { chunkSize = ENCRYPTING_CHUNK_SIZE, algorithm }) {\n        var _b, e_1, _c, _d;\n        if (algorithm !== EncryptionAlgorithm.AES_256_GCM) {\n            throw new Error('Unsupported encryption algorithm');\n        }\n        const salt = crypto.getRandomValues(Buffer.alloc(SALT_SIZE));\n        const key = yield __await(getKeyFromPassword({ password, salt }));\n        yield yield __await(salt);\n        try {\n            for (var _e = true, _f = __asyncValues(asyncByChunk(file, chunkSize)), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true) {\n                _d = _g.value;\n                _e = false;\n                const chunk = _d;\n                const iv = crypto.getRandomValues(new Uint8Array(IV_SIZE));\n                const encrypted = yield __await(crypto.subtle.encrypt({ name: 'AES-GCM', iv }, key, chunk));\n                yield yield __await(Buffer.concat([Buffer.from(iv), Buffer.from(encrypted)]));\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    });\n};\nexport const decryptFile = function (file_1, password_1, _a) {\n    return __asyncGenerator(this, arguments, function* (file, password, { chunkSize = ENCRYPTED_CHUNK_SIZE, algorithm }) {\n        var _b, e_2, _c, _d;\n        if (algorithm !== EncryptionAlgorithm.AES_256_GCM) {\n            throw new Error('Unsupported encryption algorithm');\n        }\n        let key = undefined;\n        let chunks = Buffer.alloc(0);\n        try {\n            for (var _e = true, file_2 = __asyncValues(file), file_2_1; file_2_1 = yield __await(file_2.next()), _b = file_2_1.done, !_b; _e = true) {\n                _d = file_2_1.value;\n                _e = false;\n                const bufferSlice = _d;\n                chunks = Buffer.concat([chunks, bufferSlice]);\n                if (chunks.length >= SALT_SIZE && !key) {\n                    const salt = chunks.subarray(0, SALT_SIZE);\n                    key = yield __await(getKeyFromPassword({ password, salt }));\n                    chunks = chunks.subarray(SALT_SIZE);\n                }\n                while (key && chunks.length >= chunkSize) {\n                    const iv = chunks.subarray(0, IV_SIZE);\n                    const encryptedChunk = chunks.subarray(IV_SIZE, chunkSize);\n                    const decrypted = yield __await(crypto.subtle.decrypt({ name: 'AES-GCM', iv }, key, encryptedChunk));\n                    chunks = chunks.subarray(chunkSize);\n                    yield yield __await(Buffer.from(decrypted));\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (!_e && !_b && (_c = file_2.return)) yield __await(_c.call(file_2));\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        if (key && chunks.length > 0) {\n            const iv = chunks.subarray(0, IV_SIZE);\n            const chunk = chunks.subarray(IV_SIZE, chunkSize);\n            const decrypted = yield __await(crypto.subtle.decrypt({ name: 'AES-GCM', iv }, key, chunk));\n            yield yield __await(Buffer.from(decrypted));\n        }\n    });\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20552, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20558, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 20564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}