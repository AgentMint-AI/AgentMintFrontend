module.exports = {

"[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "__wbg_set_wasm": (()=>__wbg_set_wasm),
    "__wbindgen_string_new": (()=>__wbindgen_string_new),
    "blake3_hash": (()=>blake3_hash),
    "blake3_mac": (()=>blake3_mac),
    "double_blake3_hash": (()=>double_blake3_hash)
});
let wasm;
function __wbg_set_wasm(val) {
    wasm = val;
}
const lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;
let cachedTextDecoder = new lTextDecoder('utf-8', {
    ignoreBOM: true,
    fatal: true
});
cachedTextDecoder.decode();
let cachedUint8ArrayMemory0 = null;
function getUint8ArrayMemory0() {
    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {
        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);
    }
    return cachedUint8ArrayMemory0;
}
function getStringFromWasm0(ptr, len) {
    ptr = ptr >>> 0;
    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));
}
const heap = new Array(128).fill(undefined);
heap.push(undefined, null, true, false);
let heap_next = heap.length;
function addHeapObject(obj) {
    if (heap_next === heap.length) heap.push(heap.length + 1);
    const idx = heap_next;
    heap_next = heap[idx];
    heap[idx] = obj;
    return idx;
}
let WASM_VECTOR_LEN = 0;
function passArray8ToWasm0(arg, malloc) {
    const ptr = malloc(arg.length * 1, 1) >>> 0;
    getUint8ArrayMemory0().set(arg, ptr / 1);
    WASM_VECTOR_LEN = arg.length;
    return ptr;
}
let cachedDataViewMemory0 = null;
function getDataViewMemory0() {
    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer) {
        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);
    }
    return cachedDataViewMemory0;
}
function getObject(idx) {
    return heap[idx];
}
function dropObject(idx) {
    if (idx < 132) return;
    heap[idx] = heap_next;
    heap_next = idx;
}
function takeObject(idx) {
    const ret = getObject(idx);
    dropObject(idx);
    return ret;
}
function getArrayU8FromWasm0(ptr, len) {
    ptr = ptr >>> 0;
    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);
}
function blake3_hash(data) {
    try {
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);
        const len0 = WASM_VECTOR_LEN;
        wasm.blake3_hash(retptr, ptr0, len0);
        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);
        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);
        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);
        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);
        if (r3) {
            throw takeObject(r2);
        }
        var v2 = getArrayU8FromWasm0(r0, r1).slice();
        wasm.__wbindgen_free(r0, r1 * 1, 1);
        return v2;
    } finally{
        wasm.__wbindgen_add_to_stack_pointer(16);
    }
}
function double_blake3_hash(data) {
    try {
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);
        const len0 = WASM_VECTOR_LEN;
        wasm.double_blake3_hash(retptr, ptr0, len0);
        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);
        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);
        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);
        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);
        if (r3) {
            throw takeObject(r2);
        }
        var v2 = getArrayU8FromWasm0(r0, r1).slice();
        wasm.__wbindgen_free(r0, r1 * 1, 1);
        return v2;
    } finally{
        wasm.__wbindgen_add_to_stack_pointer(16);
    }
}
function blake3_mac(key, data) {
    try {
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        const ptr0 = passArray8ToWasm0(key, wasm.__wbindgen_malloc);
        const len0 = WASM_VECTOR_LEN;
        const ptr1 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);
        const len1 = WASM_VECTOR_LEN;
        wasm.blake3_mac(retptr, ptr0, len0, ptr1, len1);
        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);
        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);
        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);
        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);
        if (r3) {
            throw takeObject(r2);
        }
        var v3 = getArrayU8FromWasm0(r0, r1).slice();
        wasm.__wbindgen_free(r0, r1 * 1, 1);
        return v3;
    } finally{
        wasm.__wbindgen_add_to_stack_pointer(16);
    }
}
function __wbindgen_string_new(arg0, arg1) {
    const ret = getStringFromWasm0(arg0, arg1);
    return addHeapObject(ret);
}
;
}}),
"[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.wasm.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "wasm": (()=>wasm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.js [app-route] (ecmascript)");
;
const wasmBase64 = "";
const wasmBinary = Uint8Array.from(atob(wasmBase64), (c)=>c.charCodeAt(0));
const wasmModule = new WebAssembly.Module(wasmBinary);
const importObject = {
    './webbuf_blake3_bg.js': __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__
};
const wasm = new WebAssembly.Instance(wasmModule, importObject).exports;
;
}}),
"[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3_bg$2e$wasm$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.wasm.js [app-route] (ecmascript)");
;
;
;
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__wbg_set_wasm"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3_bg$2e$wasm$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["wasm"]);
}}),
"[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3_bg$2e$wasm$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.wasm.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf_bg.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "__wbg_set_wasm": (()=>__wbg_set_wasm),
    "__wbindgen_string_new": (()=>__wbindgen_string_new),
    "decode_base64": (()=>decode_base64),
    "decode_base64_strip_whitespace": (()=>decode_base64_strip_whitespace),
    "decode_hex": (()=>decode_hex),
    "encode_base64": (()=>encode_base64),
    "encode_hex": (()=>encode_hex)
});
let wasm;
function __wbg_set_wasm(val) {
    wasm = val;
}
const lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;
let cachedTextDecoder = new lTextDecoder('utf-8', {
    ignoreBOM: true,
    fatal: true
});
cachedTextDecoder.decode();
let cachedUint8ArrayMemory0 = null;
function getUint8ArrayMemory0() {
    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {
        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);
    }
    return cachedUint8ArrayMemory0;
}
function getStringFromWasm0(ptr, len) {
    ptr = ptr >>> 0;
    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));
}
const heap = new Array(128).fill(undefined);
heap.push(undefined, null, true, false);
let heap_next = heap.length;
function addHeapObject(obj) {
    if (heap_next === heap.length) heap.push(heap.length + 1);
    const idx = heap_next;
    heap_next = heap[idx];
    heap[idx] = obj;
    return idx;
}
let WASM_VECTOR_LEN = 0;
function passArray8ToWasm0(arg, malloc) {
    const ptr = malloc(arg.length * 1, 1) >>> 0;
    getUint8ArrayMemory0().set(arg, ptr / 1);
    WASM_VECTOR_LEN = arg.length;
    return ptr;
}
let cachedDataViewMemory0 = null;
function getDataViewMemory0() {
    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer) {
        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);
    }
    return cachedDataViewMemory0;
}
function encode_base64(data) {
    let deferred2_0;
    let deferred2_1;
    try {
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);
        const len0 = WASM_VECTOR_LEN;
        wasm.encode_base64(retptr, ptr0, len0);
        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);
        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);
        deferred2_0 = r0;
        deferred2_1 = r1;
        return getStringFromWasm0(r0, r1);
    } finally{
        wasm.__wbindgen_add_to_stack_pointer(16);
        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);
    }
}
const lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;
let cachedTextEncoder = new lTextEncoder('utf-8');
const encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function(arg, view) {
    return cachedTextEncoder.encodeInto(arg, view);
} : function(arg, view) {
    const buf = cachedTextEncoder.encode(arg);
    view.set(buf);
    return {
        read: arg.length,
        written: buf.length
    };
};
function passStringToWasm0(arg, malloc, realloc) {
    if (realloc === undefined) {
        const buf = cachedTextEncoder.encode(arg);
        const ptr = malloc(buf.length, 1) >>> 0;
        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);
        WASM_VECTOR_LEN = buf.length;
        return ptr;
    }
    let len = arg.length;
    let ptr = malloc(len, 1) >>> 0;
    const mem = getUint8ArrayMemory0();
    let offset = 0;
    for(; offset < len; offset++){
        const code = arg.charCodeAt(offset);
        if (code > 0x7F) break;
        mem[ptr + offset] = code;
    }
    if (offset !== len) {
        if (offset !== 0) {
            arg = arg.slice(offset);
        }
        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;
        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);
        const ret = encodeString(arg, view);
        offset += ret.written;
        ptr = realloc(ptr, len, offset, 1) >>> 0;
    }
    WASM_VECTOR_LEN = offset;
    return ptr;
}
function getObject(idx) {
    return heap[idx];
}
function dropObject(idx) {
    if (idx < 132) return;
    heap[idx] = heap_next;
    heap_next = idx;
}
function takeObject(idx) {
    const ret = getObject(idx);
    dropObject(idx);
    return ret;
}
function getArrayU8FromWasm0(ptr, len) {
    ptr = ptr >>> 0;
    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);
}
function decode_base64_strip_whitespace(encoded) {
    try {
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        const ptr0 = passStringToWasm0(encoded, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
        const len0 = WASM_VECTOR_LEN;
        wasm.decode_base64_strip_whitespace(retptr, ptr0, len0);
        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);
        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);
        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);
        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);
        if (r3) {
            throw takeObject(r2);
        }
        var v2 = getArrayU8FromWasm0(r0, r1).slice();
        wasm.__wbindgen_free(r0, r1 * 1, 1);
        return v2;
    } finally{
        wasm.__wbindgen_add_to_stack_pointer(16);
    }
}
function decode_base64(encoded) {
    try {
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        const ptr0 = passStringToWasm0(encoded, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
        const len0 = WASM_VECTOR_LEN;
        wasm.decode_base64(retptr, ptr0, len0);
        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);
        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);
        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);
        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);
        if (r3) {
            throw takeObject(r2);
        }
        var v2 = getArrayU8FromWasm0(r0, r1).slice();
        wasm.__wbindgen_free(r0, r1 * 1, 1);
        return v2;
    } finally{
        wasm.__wbindgen_add_to_stack_pointer(16);
    }
}
function encode_hex(data) {
    let deferred2_0;
    let deferred2_1;
    try {
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);
        const len0 = WASM_VECTOR_LEN;
        wasm.encode_hex(retptr, ptr0, len0);
        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);
        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);
        deferred2_0 = r0;
        deferred2_1 = r1;
        return getStringFromWasm0(r0, r1);
    } finally{
        wasm.__wbindgen_add_to_stack_pointer(16);
        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);
    }
}
function decode_hex(encoded) {
    try {
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        const ptr0 = passStringToWasm0(encoded, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
        const len0 = WASM_VECTOR_LEN;
        wasm.decode_hex(retptr, ptr0, len0);
        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);
        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);
        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);
        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);
        if (r3) {
            throw takeObject(r2);
        }
        var v2 = getArrayU8FromWasm0(r0, r1).slice();
        wasm.__wbindgen_free(r0, r1 * 1, 1);
        return v2;
    } finally{
        wasm.__wbindgen_add_to_stack_pointer(16);
    }
}
function __wbindgen_string_new(arg0, arg1) {
    const ret = getStringFromWasm0(arg0, arg1);
    return addHeapObject(ret);
}
;
}}),
"[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf_bg.wasm.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "wasm": (()=>wasm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf_bg.js [app-route] (ecmascript)");
;
const wasmBase64 = "";
const wasmBinary = Uint8Array.from(atob(wasmBase64), (c)=>c.charCodeAt(0));
const wasmModule = new WebAssembly.Module(wasmBinary);
const importObject = {
    './webbuf_bg.js': __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__
};
const wasm = new WebAssembly.Instance(wasmModule, importObject).exports;
;
}}),
"[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf_bg.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$wasm$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf_bg.wasm.js [app-route] (ecmascript)");
;
;
;
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__wbg_set_wasm"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$wasm$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["wasm"]);
}}),
"[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$wasm$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf_bg.wasm.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf_bg.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/webbuf.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "WebBuf": (()=>WebBuf)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/rs-webbuf-inline-base64/webbuf_bg.js [app-route] (ecmascript)");
;
function verifyOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) {
        throw new Error("offset is not uint");
    }
    if (offset + ext > length) {
        throw new Error("Trying to access beyond buffer length");
    }
}
class WebBuf extends Uint8Array {
    static concat(list) {
        const size = list.reduce((acc, buf)=>acc + buf.length, 0);
        const result = new WebBuf(size);
        let offset = 0;
        for (const buf of list){
            result.set(buf, offset);
            offset += buf.length;
        }
        return result;
    }
    static alloc(size, fill = 0) {
        const buf = new WebBuf(size);
        if (fill !== 0) {
            buf.fill(fill);
        }
        return buf;
    }
    fill(value, start = 0, end = this.length) {
        for(let i = start; i < end; i++){
            this[i] = value;
        }
        return this;
    }
    // Override slice method to return WebBuf instead of Uint8Array
    slice(start, end) {
        const slicedArray = super.slice(start, end); // Create a slice using Uint8Array's slice method
        return new WebBuf(slicedArray.buffer, slicedArray.byteOffset, slicedArray.byteLength); // Return a WebBuf instead
    }
    subarray(start, end) {
        const subArray = super.subarray(start, end);
        return new WebBuf(subArray.buffer, subArray.byteOffset, subArray.byteLength);
    }
    /**
     * Reverse the buffer in place
     * @returns webbuf
     */ reverse() {
        super.reverse();
        return this;
    }
    clone() {
        return new WebBuf(this);
    }
    toReverse() {
        const cloned = new WebBuf(this);
        cloned.reverse();
        return cloned;
    }
    copy(target, targetStart = 0, sourceStart = 0, sourceEnd = this.length) {
        if (sourceStart >= sourceEnd) {
            return 0;
        }
        if (targetStart >= target.length) {
            throw new Error("targetStart out of bounds");
        }
        if (sourceEnd > this.length) {
            throw new Error("sourceEnd out of bounds");
        }
        if (targetStart + sourceEnd - sourceStart > target.length) {
            throw new Error("source is too large");
        }
        target.set(this.subarray(sourceStart, sourceEnd), targetStart);
        return sourceEnd - sourceStart;
    }
    /**
     * Return a WebBuf that is a view of the same data as the input Uint8Array
     *
     * @param buffer
     * @returns WebBuf
     */ static view(buffer) {
        return new WebBuf(buffer.buffer, buffer.byteOffset, buffer.byteLength);
    }
    /**
     * Create a new WebBuf from a Uint8Array (copy)
     * @param buffer
     * @returns webbuf
     */ static fromUint8Array(buffer) {
        return new WebBuf(buffer);
    }
    static fromArray(array) {
        return new WebBuf(array);
    }
    static fromUtf8(str) {
        const encoder = new TextEncoder();
        return new WebBuf(encoder.encode(str));
    }
    static fromString(str, encoding = "utf8") {
        if (encoding === "hex") {
            return WebBuf.fromHex(str);
        }
        if (encoding === "base64") {
            return WebBuf.fromBase64(str);
        }
        if (encoding === "utf8") {
            return WebBuf.fromUtf8(str);
        }
        return WebBuf.fromUtf8(str);
    }
    // we use wasm for big data, because small data is faster in js
    // experiments show wasm is always faster
    static FROM_BASE64_ALGO_THRESHOLD = 10;
    // experiments show wasm is always faster
    static TO_BASE64_ALGO_THRESHOLD = 10;
    // experimentally derived for optimal performance
    static FROM_HEX_ALGO_THRESHOLD = 1_000;
    // experiments show wasm is always faster
    static TO_HEX_ALGO_THRESHOLD = 10;
    static fromHexPureJs(hex) {
        const result = new WebBuf(hex.length / 2);
        for(let i = 0; i < hex.length; i += 2){
            result[i / 2] = Number.parseInt(hex.slice(i, i + 2), 16);
        }
        return result;
    }
    static fromHexWasm(hex) {
        const uint8array = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decode_hex"])(hex);
        return new WebBuf(uint8array.buffer, uint8array.byteOffset, uint8array.byteLength);
    }
    static fromHex(hex) {
        if (hex.length % 2 !== 0) {
            throw new Error("Invalid hex string");
        }
        if (hex.length < WebBuf.FROM_HEX_ALGO_THRESHOLD) {
            return WebBuf.fromHexPureJs(hex);
        }
        return WebBuf.fromHexWasm(hex);
    }
    toHexPureJs() {
        return Array.from(this).map((byte)=>byte.toString(16).padStart(2, "0")).join("");
    }
    toHexWasm() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encode_hex"])(this);
    }
    toHex() {
        // disabled: experiments show this is not faster, even for small buffers
        // if (this.length < WebBuf.TO_HEX_ALGO_THRESHOLD) {
        //   return this.toHexPureJs();
        // }
        return this.toHexWasm();
    }
    static fromBase64PureJs(b64, stripWhitespace = false) {
        const uint8array = new Uint8Array(atob(stripWhitespace ? b64.replace(/\s+/g, "") : b64).split("").map((c)=>c.charCodeAt(0)));
        return new WebBuf(uint8array.buffer, uint8array.byteOffset, uint8array.byteLength);
    }
    static fromBase64Wasm(b64, stripWhitespace = false) {
        const uint8array = stripWhitespace ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decode_base64_strip_whitespace"])(b64) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decode_base64"])(b64);
        return new WebBuf(uint8array.buffer, uint8array.byteOffset, uint8array.byteLength);
    }
    /**
     * Convert a base64 string to a Uint8Array. Tolerant of whitespace, but
     * throws if the string has invalid characters.
     *
     * @param b64
     * @returns Uint8Array
     * @throws {Error} if the input string is not valid base64
     */ static fromBase64(b64, stripWhitespace = false) {
        // disabled: experiments show this is not faster, even for small buffers
        // if (b64.length < WebBuf.FROM_BASE64_ALGO_THRESHOLD) {
        //   return WebBuf.fromBase64PureJs(b64, stripWhitespace);
        // }
        return WebBuf.fromBase64Wasm(b64, stripWhitespace);
    }
    toBase64PureJs() {
        return btoa(String.fromCharCode(...new Uint8Array(this)));
    }
    toBase64Wasm() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$rs$2d$webbuf$2d$inline$2d$base64$2f$webbuf_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encode_base64"])(this);
    }
    toBase64() {
        // disabled: experiments show this is not faster, even for small buffers
        // if (this.length < WebBuf.TO_BASE64_ALGO_THRESHOLD) {
        //   return this.toBase64PureJs();
        // }
        return this.toBase64Wasm();
    }
    /**
     * Override Uint8Array.from to return a WebBuf
     *
     * @param source An array-like or iterable object to convert to WebBuf
     * @param mapFn Optional map function to call on every element of the array
     * @param thisArg Optional value to use as `this` when executing `mapFn`
     * @returns WebBuf
     */ static from(source, mapFn, // biome-ignore lint:
    thisArg) {
        if (typeof mapFn === "string") {
            if (typeof source !== "string") {
                throw new TypeError("Invalid mapFn");
            }
            if (mapFn === "hex") {
                return WebBuf.fromHex(source);
            }
            if (mapFn === "base64") {
                return WebBuf.fromBase64(source);
            }
            if (mapFn === "utf8") {
                return WebBuf.fromUtf8(source);
            }
            throw new TypeError("Invalid mapFn");
        }
        if (typeof source === "string") {
            return WebBuf.fromUtf8(source);
        }
        if (source instanceof Uint8Array) {
            return WebBuf.view(source);
        }
        const sourceArray = Array.from(source);
        // biome-ignore lint:
        const uint8Array = super.from(sourceArray, mapFn, thisArg);
        return new WebBuf(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);
    }
    toUtf8() {
        const decoder = new TextDecoder();
        return decoder.decode(this);
    }
    toString(encoding) {
        if (encoding === "hex") {
            return this.toHex();
        }
        if (encoding === "base64") {
            return this.toBase64();
        }
        if (encoding === "utf8") {
            const decoder = new TextDecoder();
            return decoder.decode(this);
        }
        return this.toUtf8();
    }
    inspect() {
        return `<WebBuf ${this.toHex().slice(0, 40) + (this.length > 40 ? "..." : "")}>`;
    }
    toArray() {
        return Array.from(this);
    }
    compare(other) {
        const len = Math.min(this.length, other.length);
        for(let i = 0; i < len; i++){
            if (this[i] !== other[i]) {
                return this[i] < other[i] ? -1 : 1;
            }
        }
        if (this.length < other.length) {
            return -1;
        }
        if (this.length > other.length) {
            return 1;
        }
        return 0;
    }
    static compare(buf1, buf2) {
        return buf1.compare(buf2);
    }
    equals(other) {
        return this.compare(other) === 0;
    }
    write(buf, offset = 0) {
        verifyOffset(offset, buf.length, this.length);
        this.set(buf, offset);
        return buf.length;
    }
    read(offset, ext) {
        verifyOffset(offset, ext, this.length);
        return this.subarray(offset, offset + ext);
    }
}
}}),
"[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
}}),
"[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/webbuf.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26/node_modules/@webbuf/fixedbuf/dist/fixedbuf.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FixedBuf": (()=>FixedBuf)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/webbuf.js [app-route] (ecmascript)");
;
class FixedBuf {
    _buf;
    _size;
    constructor(size, buf){
        if (buf.length !== size) {
            throw new Error("invalid size error");
        }
        this._buf = buf;
        this._size = size;
    }
    get buf() {
        return this._buf;
    }
    static fromBuf(size, buf) {
        return new FixedBuf(size, buf);
    }
    static alloc(size, fill) {
        const buf = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["WebBuf"].alloc(size, fill);
        return FixedBuf.fromBuf(size, buf);
    }
    static fromHex(size, hex) {
        const buf = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["WebBuf"].from(hex, "hex");
        return FixedBuf.fromBuf(size, buf);
    }
    toHex() {
        return this._buf.toString("hex");
    }
    static fromBase64(size, base64) {
        try {
            const buf = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["WebBuf"].from(base64, "base64");
            return FixedBuf.fromBuf(size, buf);
        } catch (err) {
            throw new Error("invalid encoding");
        }
    }
    toBase64() {
        return this._buf.toString("base64");
    }
    static fromRandom(size) {
        const buf = crypto.getRandomValues(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["WebBuf"].alloc(size));
        return FixedBuf.fromBuf(size, buf);
    }
    clone() {
        return FixedBuf.fromBuf(this._size, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["WebBuf"].from(this._buf));
    }
    toReverse() {
        const cloneedReverse = this._buf.toReverse();
        return FixedBuf.fromBuf(this._size, cloneedReverse);
    }
}
}}),
"[project]/node_modules/.pnpm/@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26/node_modules/@webbuf/fixedbuf/dist/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
}}),
"[project]/node_modules/.pnpm/@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26/node_modules/@webbuf/fixedbuf/dist/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$fixedbuf$2f$dist$2f$fixedbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26/node_modules/@webbuf/fixedbuf/dist/fixedbuf.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$fixedbuf$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26/node_modules/@webbuf/fixedbuf/dist/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "blake3Hash": (()=>blake3Hash),
    "blake3Mac": (()=>blake3Mac),
    "doubleBlake3Hash": (()=>doubleBlake3Hash)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$fixedbuf$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26/node_modules/@webbuf/fixedbuf/dist/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$fixedbuf$2f$dist$2f$fixedbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26/node_modules/@webbuf/fixedbuf/dist/fixedbuf.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/webbuf.js [app-route] (ecmascript)");
;
;
;
function blake3Hash(buf) {
    const hash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["blake3_hash"])(buf);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$fixedbuf$2f$dist$2f$fixedbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["FixedBuf"].fromBuf(32, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["WebBuf"].fromUint8Array(hash));
}
function doubleBlake3Hash(buf) {
    const hash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["double_blake3_hash"])(buf);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$fixedbuf$2f$dist$2f$fixedbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["FixedBuf"].fromBuf(32, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["WebBuf"].fromUint8Array(hash));
}
function blake3Mac(key, message) {
    const mac = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$rs$2d$webbuf_blake3$2d$inline$2d$base64$2f$webbuf_blake3_bg$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["blake3_mac"])(key.buf, message);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$fixedbuf$2f$dist$2f$fixedbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["FixedBuf"].fromBuf(32, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["WebBuf"].fromUint8Array(mac));
}
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bytes.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "coerce": (()=>coerce),
    "empty": (()=>empty),
    "equals": (()=>equals),
    "fromHex": (()=>fromHex),
    "fromString": (()=>fromString),
    "isBinary": (()=>isBinary),
    "toHex": (()=>toHex),
    "toString": (()=>toString)
});
const empty = new Uint8Array(0);
function toHex(d) {
    return d.reduce((hex, byte)=>hex + byte.toString(16).padStart(2, '0'), '');
}
function fromHex(hex) {
    const hexes = hex.match(/../g);
    return hexes != null ? new Uint8Array(hexes.map((b)=>parseInt(b, 16))) : empty;
}
function equals(aa, bb) {
    if (aa === bb) return true;
    if (aa.byteLength !== bb.byteLength) {
        return false;
    }
    for(let ii = 0; ii < aa.byteLength; ii++){
        if (aa[ii] !== bb[ii]) {
            return false;
        }
    }
    return true;
}
function coerce(o) {
    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o;
    if (o instanceof ArrayBuffer) return new Uint8Array(o);
    if (ArrayBuffer.isView(o)) {
        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);
    }
    throw new Error('Unknown type, must be binary type');
}
function isBinary(o) {
    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);
}
function fromString(str) {
    return new TextEncoder().encode(str);
}
function toString(b) {
    return new TextDecoder().decode(b);
} //# sourceMappingURL=bytes.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/vendor/base-x.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/* eslint-disable */ // base-x encoding / decoding
// Copyright (c) 2018 base-x contributors
// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)
// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.
/**
 * @param {string} ALPHABET
 * @param {any} name
 */ __turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
function base(ALPHABET, name) {
    if (ALPHABET.length >= 255) {
        throw new TypeError('Alphabet too long');
    }
    var BASE_MAP = new Uint8Array(256);
    for(var j = 0; j < BASE_MAP.length; j++){
        BASE_MAP[j] = 255;
    }
    for(var i = 0; i < ALPHABET.length; i++){
        var x = ALPHABET.charAt(i);
        var xc = x.charCodeAt(0);
        if (BASE_MAP[xc] !== 255) {
            throw new TypeError(x + ' is ambiguous');
        }
        BASE_MAP[xc] = i;
    }
    var BASE = ALPHABET.length;
    var LEADER = ALPHABET.charAt(0);
    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up
    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up
    /**
     * @param {any[] | Iterable<number>} source
     */ function encode(source) {
        // @ts-ignore
        if (source instanceof Uint8Array) ;
        else if (ArrayBuffer.isView(source)) {
            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
        } else if (Array.isArray(source)) {
            source = Uint8Array.from(source);
        }
        if (!(source instanceof Uint8Array)) {
            throw new TypeError('Expected Uint8Array');
        }
        if (source.length === 0) {
            return '';
        }
        // Skip & count leading zeroes.
        var zeroes = 0;
        var length = 0;
        var pbegin = 0;
        var pend = source.length;
        while(pbegin !== pend && source[pbegin] === 0){
            pbegin++;
            zeroes++;
        }
        // Allocate enough space in big-endian base58 representation.
        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
        var b58 = new Uint8Array(size);
        // Process the bytes.
        while(pbegin !== pend){
            var carry = source[pbegin];
            // Apply "b58 = b58 * 256 + ch".
            var i = 0;
            for(var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++){
                carry += 256 * b58[it1] >>> 0;
                b58[it1] = carry % BASE >>> 0;
                carry = carry / BASE >>> 0;
            }
            if (carry !== 0) {
                throw new Error('Non-zero carry');
            }
            length = i;
            pbegin++;
        }
        // Skip leading zeroes in base58 result.
        var it2 = size - length;
        while(it2 !== size && b58[it2] === 0){
            it2++;
        }
        // Translate the result into a string.
        var str = LEADER.repeat(zeroes);
        for(; it2 < size; ++it2){
            str += ALPHABET.charAt(b58[it2]);
        }
        return str;
    }
    /**
     * @param {string | string[]} source
     */ function decodeUnsafe(source) {
        if (typeof source !== 'string') {
            throw new TypeError('Expected String');
        }
        if (source.length === 0) {
            return new Uint8Array();
        }
        var psz = 0;
        // Skip leading spaces.
        if (source[psz] === ' ') {
            return;
        }
        // Skip and count leading '1's.
        var zeroes = 0;
        var length = 0;
        while(source[psz] === LEADER){
            zeroes++;
            psz++;
        }
        // Allocate enough space in big-endian base256 representation.
        var size = (source.length - psz) * FACTOR + 1 >>> 0; // log(58) / log(256), rounded up.
        var b256 = new Uint8Array(size);
        // Process the characters.
        while(source[psz]){
            // Decode character
            var carry = BASE_MAP[source.charCodeAt(psz)];
            // Invalid character
            if (carry === 255) {
                return;
            }
            var i = 0;
            for(var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++){
                carry += BASE * b256[it3] >>> 0;
                b256[it3] = carry % 256 >>> 0;
                carry = carry / 256 >>> 0;
            }
            if (carry !== 0) {
                throw new Error('Non-zero carry');
            }
            length = i;
            psz++;
        }
        // Skip trailing spaces.
        if (source[psz] === ' ') {
            return;
        }
        // Skip leading zeroes in b256.
        var it4 = size - length;
        while(it4 !== size && b256[it4] === 0){
            it4++;
        }
        var vch = new Uint8Array(zeroes + (size - it4));
        var j = zeroes;
        while(it4 !== size){
            vch[j++] = b256[it4++];
        }
        return vch;
    }
    /**
     * @param {string | string[]} string
     */ function decode(string) {
        var buffer = decodeUnsafe(string);
        if (buffer) {
            return buffer;
        }
        throw new Error(`Non-${name} character`);
    }
    return {
        encode: encode,
        decodeUnsafe: decodeUnsafe,
        decode: decode
    };
}
var src = base;
var _brrp__multiformats_scope_baseX = src;
const __TURBOPACK__default__export__ = _brrp__multiformats_scope_baseX;
 //# sourceMappingURL=base-x.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Codec": (()=>Codec),
    "baseX": (()=>baseX),
    "from": (()=>from),
    "or": (()=>or),
    "rfc4648": (()=>rfc4648)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bytes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$vendor$2f$base$2d$x$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/vendor/base-x.js [app-route] (ecmascript)");
;
;
/**
 * Class represents both BaseEncoder and MultibaseEncoder meaning it
 * can be used to encode to multibase or base encode without multibase
 * prefix.
 */ class Encoder {
    name;
    prefix;
    baseEncode;
    constructor(name, prefix, baseEncode){
        this.name = name;
        this.prefix = prefix;
        this.baseEncode = baseEncode;
    }
    encode(bytes) {
        if (bytes instanceof Uint8Array) {
            return `${this.prefix}${this.baseEncode(bytes)}`;
        } else {
            throw Error('Unknown type, must be binary type');
        }
    }
}
/**
 * Class represents both BaseDecoder and MultibaseDecoder so it could be used
 * to decode multibases (with matching prefix) or just base decode strings
 * with corresponding base encoding.
 */ class Decoder {
    name;
    prefix;
    baseDecode;
    prefixCodePoint;
    constructor(name, prefix, baseDecode){
        this.name = name;
        this.prefix = prefix;
        const prefixCodePoint = prefix.codePointAt(0);
        /* c8 ignore next 3 */ if (prefixCodePoint === undefined) {
            throw new Error('Invalid prefix character');
        }
        this.prefixCodePoint = prefixCodePoint;
        this.baseDecode = baseDecode;
    }
    decode(text) {
        if (typeof text === 'string') {
            if (text.codePointAt(0) !== this.prefixCodePoint) {
                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
            }
            return this.baseDecode(text.slice(this.prefix.length));
        } else {
            throw Error('Can only multibase decode strings');
        }
    }
    or(decoder) {
        return or(this, decoder);
    }
}
class ComposedDecoder {
    decoders;
    constructor(decoders){
        this.decoders = decoders;
    }
    or(decoder) {
        return or(this, decoder);
    }
    decode(input) {
        const prefix = input[0];
        const decoder = this.decoders[prefix];
        if (decoder != null) {
            return decoder.decode(input);
        } else {
            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
        }
    }
}
function or(left, right) {
    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
    return new ComposedDecoder({
        ...left.decoders ?? {
            [left.prefix]: left
        },
        ...right.decoders ?? {
            [right.prefix]: right
        }
    });
}
class Codec {
    name;
    prefix;
    baseEncode;
    baseDecode;
    encoder;
    decoder;
    constructor(name, prefix, baseEncode, baseDecode){
        this.name = name;
        this.prefix = prefix;
        this.baseEncode = baseEncode;
        this.baseDecode = baseDecode;
        this.encoder = new Encoder(name, prefix, baseEncode);
        this.decoder = new Decoder(name, prefix, baseDecode);
    }
    encode(input) {
        return this.encoder.encode(input);
    }
    decode(input) {
        return this.decoder.decode(input);
    }
}
function from({ name, prefix, encode, decode }) {
    return new Codec(name, prefix, encode, decode);
}
function baseX({ name, prefix, alphabet }) {
    const { encode, decode } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$vendor$2f$base$2d$x$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(alphabet, name);
    return from({
        prefix,
        name,
        encode,
        decode: (text)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["coerce"])(decode(text))
    });
}
function decode(string, alphabet, bitsPerChar, name) {
    // Build the character lookup table:
    const codes = {};
    for(let i = 0; i < alphabet.length; ++i){
        codes[alphabet[i]] = i;
    }
    // Count the padding bytes:
    let end = string.length;
    while(string[end - 1] === '='){
        --end;
    }
    // Allocate the output:
    const out = new Uint8Array(end * bitsPerChar / 8 | 0);
    // Parse the data:
    let bits = 0; // Number of bits currently in the buffer
    let buffer = 0; // Bits waiting to be written out, MSB first
    let written = 0; // Next byte to write
    for(let i = 0; i < end; ++i){
        // Read one character from the string:
        const value = codes[string[i]];
        if (value === undefined) {
            throw new SyntaxError(`Non-${name} character`);
        }
        // Append the bits to the buffer:
        buffer = buffer << bitsPerChar | value;
        bits += bitsPerChar;
        // Write out some bits if the buffer has a byte's worth:
        if (bits >= 8) {
            bits -= 8;
            out[written++] = 0xff & buffer >> bits;
        }
    }
    // Verify that we have received just enough bits:
    if (bits >= bitsPerChar || (0xff & buffer << 8 - bits) !== 0) {
        throw new SyntaxError('Unexpected end of data');
    }
    return out;
}
function encode(data, alphabet, bitsPerChar) {
    const pad = alphabet[alphabet.length - 1] === '=';
    const mask = (1 << bitsPerChar) - 1;
    let out = '';
    let bits = 0; // Number of bits currently in the buffer
    let buffer = 0; // Bits waiting to be written out, MSB first
    for(let i = 0; i < data.length; ++i){
        // Slurp data into the buffer:
        buffer = buffer << 8 | data[i];
        bits += 8;
        // Write out as much as we can:
        while(bits > bitsPerChar){
            bits -= bitsPerChar;
            out += alphabet[mask & buffer >> bits];
        }
    }
    // Partial character:
    if (bits !== 0) {
        out += alphabet[mask & buffer << bitsPerChar - bits];
    }
    // Add padding characters until we hit a byte boundary:
    if (pad) {
        while((out.length * bitsPerChar & 7) !== 0){
            out += '=';
        }
    }
    return out;
}
function rfc4648({ name, prefix, bitsPerChar, alphabet }) {
    return from({
        prefix,
        name,
        encode (input) {
            return encode(input, alphabet, bitsPerChar);
        },
        decode (input) {
            return decode(input, alphabet, bitsPerChar, name);
        }
    });
} //# sourceMappingURL=base.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base32.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "base32": (()=>base32),
    "base32hex": (()=>base32hex),
    "base32hexpad": (()=>base32hexpad),
    "base32hexpadupper": (()=>base32hexpadupper),
    "base32hexupper": (()=>base32hexupper),
    "base32pad": (()=>base32pad),
    "base32padupper": (()=>base32padupper),
    "base32upper": (()=>base32upper),
    "base32z": (()=>base32z)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base.js [app-route] (ecmascript)");
;
const base32 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'b',
    name: 'base32',
    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',
    bitsPerChar: 5
});
const base32upper = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'B',
    name: 'base32upper',
    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bitsPerChar: 5
});
const base32pad = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'c',
    name: 'base32pad',
    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',
    bitsPerChar: 5
});
const base32padupper = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'C',
    name: 'base32padupper',
    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',
    bitsPerChar: 5
});
const base32hex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'v',
    name: 'base32hex',
    alphabet: '0123456789abcdefghijklmnopqrstuv',
    bitsPerChar: 5
});
const base32hexupper = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'V',
    name: 'base32hexupper',
    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',
    bitsPerChar: 5
});
const base32hexpad = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 't',
    name: 'base32hexpad',
    alphabet: '0123456789abcdefghijklmnopqrstuv=',
    bitsPerChar: 5
});
const base32hexpadupper = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'T',
    name: 'base32hexpadupper',
    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',
    bitsPerChar: 5
});
const base32z = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'h',
    name: 'base32z',
    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',
    bitsPerChar: 5
}); //# sourceMappingURL=base32.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base36.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "base36": (()=>base36),
    "base36upper": (()=>base36upper)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base.js [app-route] (ecmascript)");
;
const base36 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["baseX"])({
    prefix: 'k',
    name: 'base36',
    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'
});
const base36upper = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["baseX"])({
    prefix: 'K',
    name: 'base36upper',
    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
}); //# sourceMappingURL=base36.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base58.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "base58btc": (()=>base58btc),
    "base58flickr": (()=>base58flickr)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base.js [app-route] (ecmascript)");
;
const base58btc = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["baseX"])({
    name: 'base58btc',
    prefix: 'z',
    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'
});
const base58flickr = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["baseX"])({
    name: 'base58flickr',
    prefix: 'Z',
    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'
}); //# sourceMappingURL=base58.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/vendor/varint.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/* eslint-disable */ __turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var encode_1 = encode;
var MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);
/**
 * @param {number} num
 * @param {number[]} out
 * @param {number} offset
 */ function encode(num, out, offset) {
    out = out || [];
    offset = offset || 0;
    var oldOffset = offset;
    while(num >= INT){
        out[offset++] = num & 0xFF | MSB;
        num /= 128;
    }
    while(num & MSBALL){
        out[offset++] = num & 0xFF | MSB;
        num >>>= 7;
    }
    out[offset] = num | 0;
    // @ts-ignore
    encode.bytes = offset - oldOffset + 1;
    return out;
}
var decode = read;
var MSB$1 = 0x80, REST$1 = 0x7F;
/**
 * @param {string | any[]} buf
 * @param {number} offset
 */ function read(buf, offset) {
    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;
    do {
        if (counter >= l) {
            // @ts-ignore
            read.bytes = 0;
            throw new RangeError('Could not decode varint');
        }
        b = buf[counter++];
        res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);
        shift += 7;
    }while (b >= MSB$1)
    // @ts-ignore
    read.bytes = counter - offset;
    return res;
}
var N1 = Math.pow(2, 7);
var N2 = Math.pow(2, 14);
var N3 = Math.pow(2, 21);
var N4 = Math.pow(2, 28);
var N5 = Math.pow(2, 35);
var N6 = Math.pow(2, 42);
var N7 = Math.pow(2, 49);
var N8 = Math.pow(2, 56);
var N9 = Math.pow(2, 63);
var length = function(/** @type {number} */ value) {
    return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
};
var varint = {
    encode: encode_1,
    decode: decode,
    encodingLength: length
};
var _brrp_varint = varint;
const __TURBOPACK__default__export__ = _brrp_varint;
 //# sourceMappingURL=varint.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/varint.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decode": (()=>decode),
    "encodeTo": (()=>encodeTo),
    "encodingLength": (()=>encodingLength)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$vendor$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/vendor/varint.js [app-route] (ecmascript)");
;
function decode(data, offset = 0) {
    const code = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$vendor$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].decode(data, offset);
    return [
        code,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$vendor$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].decode.bytes
    ];
}
function encodeTo(int, target, offset = 0) {
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$vendor$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].encode(int, target, offset);
    return target;
}
function encodingLength(int) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$vendor$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].encodingLength(int);
} //# sourceMappingURL=varint.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/digest.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Digest": (()=>Digest),
    "create": (()=>create),
    "decode": (()=>decode),
    "equals": (()=>equals),
    "hasCode": (()=>hasCode)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bytes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/varint.js [app-route] (ecmascript)");
;
;
function create(code, digest) {
    const size = digest.byteLength;
    const sizeOffset = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.encodingLength(code);
    const digestOffset = sizeOffset + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.encodingLength(size);
    const bytes = new Uint8Array(digestOffset + size);
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.encodeTo(code, bytes, 0);
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.encodeTo(size, bytes, sizeOffset);
    bytes.set(digest, digestOffset);
    return new Digest(code, size, digest, bytes);
}
function decode(multihash) {
    const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["coerce"])(multihash);
    const [code, sizeOffset] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.decode(bytes);
    const [size, digestOffset] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.decode(bytes.subarray(sizeOffset));
    const digest = bytes.subarray(sizeOffset + digestOffset);
    if (digest.byteLength !== size) {
        throw new Error('Incorrect length');
    }
    return new Digest(code, size, digest, bytes);
}
function equals(a, b) {
    if (a === b) {
        return true;
    } else {
        const data = b;
        return a.code === data.code && a.size === data.size && data.bytes instanceof Uint8Array && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["equals"])(a.bytes, data.bytes);
    }
}
class Digest {
    code;
    size;
    digest;
    bytes;
    /**
     * Creates a multihash digest.
     */ constructor(code, size, digest, bytes){
        this.code = code;
        this.size = size;
        this.digest = digest;
        this.bytes = bytes;
    }
}
function hasCode(digest, code) {
    return digest.code === code;
} //# sourceMappingURL=digest.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/link/interface.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/* eslint-disable @typescript-eslint/no-unnecessary-type-constraint */ /* eslint-disable no-use-before-define */ __turbopack_esm__({});
;
 //# sourceMappingURL=interface.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CID": (()=>CID),
    "format": (()=>format),
    "fromJSON": (()=>fromJSON),
    "toJSON": (()=>toJSON)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base58.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base32$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base32.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/digest.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bytes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/varint.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base36$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base36.js [app-route] (ecmascript)");
;
;
;
;
;
;
;
function format(link, base) {
    const { bytes, version } = link;
    switch(version){
        case 0:
            return toStringV0(bytes, baseCache(link), base ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base58btc"].encoder);
        default:
            return toStringV1(bytes, baseCache(link), base ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base32$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base32"].encoder);
    }
}
function toJSON(link) {
    return {
        '/': format(link)
    };
}
function fromJSON(json) {
    return CID.parse(json['/']);
}
const cache = new WeakMap();
function baseCache(cid) {
    const baseCache = cache.get(cid);
    if (baseCache == null) {
        const baseCache = new Map();
        cache.set(cid, baseCache);
        return baseCache;
    }
    return baseCache;
}
class CID {
    code;
    version;
    multihash;
    bytes;
    '/';
    /**
     * @param version - Version of the CID
     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv
     * @param multihash - (Multi)hash of the of the content.
     */ constructor(version, code, multihash, bytes){
        this.code = code;
        this.version = version;
        this.multihash = multihash;
        this.bytes = bytes;
        // flag to serializers that this is a CID and
        // should be treated specially
        this['/'] = bytes;
    }
    /**
     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`
     * please either use `CID.asCID(cid)` or switch to new signalling mechanism
     *
     * @deprecated
     */ get asCID() {
        return this;
    }
    // ArrayBufferView
    get byteOffset() {
        return this.bytes.byteOffset;
    }
    // ArrayBufferView
    get byteLength() {
        return this.bytes.byteLength;
    }
    toV0() {
        switch(this.version){
            case 0:
                {
                    return this;
                }
            case 1:
                {
                    const { code, multihash } = this;
                    if (code !== DAG_PB_CODE) {
                        throw new Error('Cannot convert a non dag-pb CID to CIDv0');
                    }
                    // sha2-256
                    if (multihash.code !== SHA_256_CODE) {
                        throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');
                    }
                    return CID.createV0(multihash);
                }
            default:
                {
                    throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
                }
        }
    }
    toV1() {
        switch(this.version){
            case 0:
                {
                    const { code, digest } = this.multihash;
                    const multihash = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.create(code, digest);
                    return CID.createV1(this.code, multihash);
                }
            case 1:
                {
                    return this;
                }
            default:
                {
                    throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);
                }
        }
    }
    equals(other) {
        return CID.equals(this, other);
    }
    static equals(self, other) {
        const unknown = other;
        return unknown != null && self.code === unknown.code && self.version === unknown.version && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.equals(self.multihash, unknown.multihash);
    }
    toString(base) {
        return format(this, base);
    }
    toJSON() {
        return {
            '/': format(this)
        };
    }
    link() {
        return this;
    }
    [Symbol.toStringTag] = 'CID';
    // Legacy
    [Symbol.for('nodejs.util.inspect.custom')]() {
        return `CID(${this.toString()})`;
    }
    /**
     * Takes any input `value` and returns a `CID` instance if it was
     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`
     * it will return value back. If `value` is not instance of this CID
     * class, but is compatible CID it will return new instance of this
     * `CID` class. Otherwise returns null.
     *
     * This allows two different incompatible versions of CID library to
     * co-exist and interop as long as binary interface is compatible.
     */ static asCID(input) {
        if (input == null) {
            return null;
        }
        const value = input;
        if (value instanceof CID) {
            // If value is instance of CID then we're all set.
            return value;
        } else if (value['/'] != null && value['/'] === value.bytes || value.asCID === value) {
            // If value isn't instance of this CID class but `this.asCID === this` or
            // `value['/'] === value.bytes` is true it is CID instance coming from a
            // different implementation (diff version or duplicate). In that case we
            // rebase it to this `CID` implementation so caller is guaranteed to get
            // instance with expected API.
            const { version, code, multihash, bytes } = value;
            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));
        } else if (value[cidSymbol] === true) {
            // If value is a CID from older implementation that used to be tagged via
            // symbol we still rebase it to the this `CID` implementation by
            // delegating that to a constructor.
            const { version, multihash, code } = value;
            const digest = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.decode(multihash);
            return CID.create(version, code, digest);
        } else {
            // Otherwise value is not a CID (or an incompatible version of it) in
            // which case we return `null`.
            return null;
        }
    }
    /**
     * @param version - Version of the CID
     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv
     * @param digest - (Multi)hash of the of the content.
     */ static create(version, code, digest) {
        if (typeof code !== 'number') {
            throw new Error('String codecs are no longer supported');
        }
        if (!(digest.bytes instanceof Uint8Array)) {
            throw new Error('Invalid digest');
        }
        switch(version){
            case 0:
                {
                    if (code !== DAG_PB_CODE) {
                        throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);
                    } else {
                        return new CID(version, code, digest, digest.bytes);
                    }
                }
            case 1:
                {
                    const bytes = encodeCID(version, code, digest.bytes);
                    return new CID(version, code, digest, bytes);
                }
            default:
                {
                    throw new Error('Invalid version');
                }
        }
    }
    /**
     * Simplified version of `create` for CIDv0.
     */ static createV0(digest) {
        return CID.create(0, DAG_PB_CODE, digest);
    }
    /**
     * Simplified version of `create` for CIDv1.
     *
     * @param code - Content encoding format code.
     * @param digest - Multihash of the content.
     */ static createV1(code, digest) {
        return CID.create(1, code, digest);
    }
    /**
     * Decoded a CID from its binary representation. The byte array must contain
     * only the CID with no additional bytes.
     *
     * An error will be thrown if the bytes provided do not contain a valid
     * binary representation of a CID.
     */ static decode(bytes) {
        const [cid, remainder] = CID.decodeFirst(bytes);
        if (remainder.length !== 0) {
            throw new Error('Incorrect length');
        }
        return cid;
    }
    /**
     * Decoded a CID from its binary representation at the beginning of a byte
     * array.
     *
     * Returns an array with the first element containing the CID and the second
     * element containing the remainder of the original byte array. The remainder
     * will be a zero-length byte array if the provided bytes only contained a
     * binary CID representation.
     */ static decodeFirst(bytes) {
        const specs = CID.inspectBytes(bytes);
        const prefixSize = specs.size - specs.multihashSize;
        const multihashBytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["coerce"])(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
        if (multihashBytes.byteLength !== specs.multihashSize) {
            throw new Error('Incorrect length');
        }
        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
        const digest = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
        const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);
        return [
            cid,
            bytes.subarray(specs.size)
        ];
    }
    /**
     * Inspect the initial bytes of a CID to determine its properties.
     *
     * Involves decoding up to 4 varints. Typically this will require only 4 to 6
     * bytes but for larger multicodec code values and larger multihash digest
     * lengths these varints can be quite large. It is recommended that at least
     * 10 bytes be made available in the `initialBytes` argument for a complete
     * inspection.
     */ static inspectBytes(initialBytes) {
        let offset = 0;
        const next = ()=>{
            const [i, length] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.decode(initialBytes.subarray(offset));
            offset += length;
            return i;
        };
        let version = next();
        let codec = DAG_PB_CODE;
        if (version === 18) {
            // CIDv0
            version = 0;
            offset = 0;
        } else {
            codec = next();
        }
        if (version !== 0 && version !== 1) {
            throw new RangeError(`Invalid CID version ${version}`);
        }
        const prefixSize = offset;
        const multihashCode = next(); // multihash code
        const digestSize = next(); // multihash length
        const size = offset + digestSize;
        const multihashSize = size - prefixSize;
        return {
            version,
            codec,
            multihashCode,
            digestSize,
            multihashSize,
            size
        };
    }
    /**
     * Takes cid in a string representation and creates an instance. If `base`
     * decoder is not provided will use a default from the configuration. It will
     * throw an error if encoding of the CID is not compatible with supplied (or
     * a default decoder).
     */ static parse(source, base) {
        const [prefix, bytes] = parseCIDtoBytes(source, base);
        const cid = CID.decode(bytes);
        if (cid.version === 0 && source[0] !== 'Q') {
            throw Error('Version 0 CID string must not include multibase prefix');
        }
        // Cache string representation to avoid computing it on `this.toString()`
        baseCache(cid).set(prefix, source);
        return cid;
    }
}
function parseCIDtoBytes(source, base) {
    switch(source[0]){
        // CIDv0 is parsed differently
        case 'Q':
            {
                const decoder = base ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base58btc"];
                return [
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base58btc"].prefix,
                    decoder.decode(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base58btc"].prefix}${source}`)
                ];
            }
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base58btc"].prefix:
            {
                const decoder = base ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base58btc"];
                return [
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base58btc"].prefix,
                    decoder.decode(source)
                ];
            }
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base32$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base32"].prefix:
            {
                const decoder = base ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base32$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base32"];
                return [
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base32$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base32"].prefix,
                    decoder.decode(source)
                ];
            }
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base36$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base36"].prefix:
            {
                const decoder = base ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base36$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base36"];
                return [
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base36$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base36"].prefix,
                    decoder.decode(source)
                ];
            }
        default:
            {
                if (base == null) {
                    throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');
                }
                return [
                    source[0],
                    base.decode(source)
                ];
            }
    }
}
function toStringV0(bytes, cache, base) {
    const { prefix } = base;
    if (prefix !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["base58btc"].prefix) {
        throw Error(`Cannot string encode V0 in ${base.name} encoding`);
    }
    const cid = cache.get(prefix);
    if (cid == null) {
        const cid = base.encode(bytes).slice(1);
        cache.set(prefix, cid);
        return cid;
    } else {
        return cid;
    }
}
function toStringV1(bytes, cache, base) {
    const { prefix } = base;
    const cid = cache.get(prefix);
    if (cid == null) {
        const cid = base.encode(bytes);
        cache.set(prefix, cid);
        return cid;
    } else {
        return cid;
    }
}
const DAG_PB_CODE = 0x70;
const SHA_256_CODE = 0x12;
function encodeCID(version, code, multihash) {
    const codeOffset = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.encodingLength(version);
    const hashOffset = codeOffset + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.encodingLength(code);
    const bytes = new Uint8Array(hashOffset + multihash.byteLength);
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.encodeTo(version, bytes, 0);
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.encodeTo(code, bytes, codeOffset);
    bytes.set(multihash, hashOffset);
    return bytes;
}
const cidSymbol = Symbol.for('@ipld/js-cid/CID'); //# sourceMappingURL=cid.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base32$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base32.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base36$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base36.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base58.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bytes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/digest.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/varint.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$link$2f$interface$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/link/interface.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/codecs/raw.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "code": (()=>code),
    "decode": (()=>decode),
    "encode": (()=>encode),
    "name": (()=>name)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bytes.js [app-route] (ecmascript)");
;
const name = 'raw';
const code = 0x55;
function encode(node) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["coerce"])(node);
}
function decode(data) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["coerce"])(data);
} //# sourceMappingURL=raw.js.map
}}),
"[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-decode.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decodeNode": (()=>decodeNode)
});
const textDecoder = new TextDecoder();
/**
 * @typedef {import('./interface.js').RawPBLink} RawPBLink
 */ /**
 * @typedef {import('./interface.js').RawPBNode} RawPBNode
 */ /**
 * @param {Uint8Array} bytes
 * @param {number} offset
 * @returns {[number, number]}
 */ function decodeVarint(bytes, offset) {
    let v = 0;
    for(let shift = 0;; shift += 7){
        /* c8 ignore next 3 */ if (shift >= 64) {
            throw new Error('protobuf: varint overflow');
        }
        /* c8 ignore next 3 */ if (offset >= bytes.length) {
            throw new Error('protobuf: unexpected end of data');
        }
        const b = bytes[offset++];
        v += shift < 28 ? (b & 0x7f) << shift : (b & 0x7f) * 2 ** shift;
        if (b < 0x80) {
            break;
        }
    }
    return [
        v,
        offset
    ];
}
/**
 * @param {Uint8Array} bytes
 * @param {number} offset
 * @returns {[Uint8Array, number]}
 */ function decodeBytes(bytes, offset) {
    let byteLen;
    [byteLen, offset] = decodeVarint(bytes, offset);
    const postOffset = offset + byteLen;
    /* c8 ignore next 3 */ if (byteLen < 0 || postOffset < 0) {
        throw new Error('protobuf: invalid length');
    }
    /* c8 ignore next 3 */ if (postOffset > bytes.length) {
        throw new Error('protobuf: unexpected end of data');
    }
    return [
        bytes.subarray(offset, postOffset),
        postOffset
    ];
}
/**
 * @param {Uint8Array} bytes
 * @param {number} index
 * @returns {[number, number, number]}
 */ function decodeKey(bytes, index) {
    let wire;
    [wire, index] = decodeVarint(bytes, index);
    // [wireType, fieldNum, newIndex]
    return [
        wire & 0x7,
        wire >> 3,
        index
    ];
}
/**
 * @param {Uint8Array} bytes
 * @returns {RawPBLink}
 */ function decodeLink(bytes) {
    /** @type {RawPBLink} */ const link = {};
    const l = bytes.length;
    let index = 0;
    while(index < l){
        let wireType, fieldNum;
        [wireType, fieldNum, index] = decodeKey(bytes, index);
        if (fieldNum === 1) {
            if (link.Hash) {
                throw new Error('protobuf: (PBLink) duplicate Hash section');
            }
            if (wireType !== 2) {
                throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Hash`);
            }
            if (link.Name !== undefined) {
                throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');
            }
            if (link.Tsize !== undefined) {
                throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');
            }
            [link.Hash, index] = decodeBytes(bytes, index);
        } else if (fieldNum === 2) {
            if (link.Name !== undefined) {
                throw new Error('protobuf: (PBLink) duplicate Name section');
            }
            if (wireType !== 2) {
                throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Name`);
            }
            if (link.Tsize !== undefined) {
                throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');
            }
            let byts;
            [byts, index] = decodeBytes(bytes, index);
            link.Name = textDecoder.decode(byts);
        } else if (fieldNum === 3) {
            if (link.Tsize !== undefined) {
                throw new Error('protobuf: (PBLink) duplicate Tsize section');
            }
            if (wireType !== 0) {
                throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Tsize`);
            }
            [link.Tsize, index] = decodeVarint(bytes, index);
        } else {
            throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${fieldNum}`);
        }
    }
    /* c8 ignore next 3 */ if (index > l) {
        throw new Error('protobuf: (PBLink) unexpected end of data');
    }
    return link;
}
function decodeNode(bytes) {
    const l = bytes.length;
    let index = 0;
    /** @type {RawPBLink[]|void} */ let links = undefined // eslint-disable-line no-undef-init
    ;
    let linksBeforeData = false;
    /** @type {Uint8Array|void} */ let data = undefined // eslint-disable-line no-undef-init
    ;
    while(index < l){
        let wireType, fieldNum;
        [wireType, fieldNum, index] = decodeKey(bytes, index);
        if (wireType !== 2) {
            throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${wireType}`);
        }
        if (fieldNum === 1) {
            if (data) {
                throw new Error('protobuf: (PBNode) duplicate Data section');
            }
            [data, index] = decodeBytes(bytes, index);
            if (links) {
                linksBeforeData = true;
            }
        } else if (fieldNum === 2) {
            if (linksBeforeData) {
                throw new Error('protobuf: (PBNode) duplicate Links section');
            } else if (!links) {
                links = [];
            }
            let byts;
            [byts, index] = decodeBytes(bytes, index);
            links.push(decodeLink(byts));
        } else {
            throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${fieldNum}`);
        }
    }
    /* c8 ignore next 3 */ if (index > l) {
        throw new Error('protobuf: (PBNode) unexpected end of data');
    }
    /** @type {RawPBNode} */ const node = {};
    if (data) {
        node.Data = data;
    }
    node.Links = links || [];
    return node;
}
}}),
"[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-encode.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "encodeNode": (()=>encodeNode)
});
const textEncoder = new TextEncoder();
const maxInt32 = 2 ** 32;
const maxUInt32 = 2 ** 31;
/**
 * @typedef {import('./interface.js').RawPBLink} RawPBLink
 */ /**
 * @typedef {import('./interface.js').RawPBNode} RawPBNode
 */ // the encoders work backward from the end of the bytes array
/**
 * encodeLink() is passed a slice of the parent byte array that ends where this
 * link needs to end, so it packs to the right-most part of the passed `bytes`
 *
 * @param {RawPBLink} link
 * @param {Uint8Array} bytes
 * @returns {number}
 */ function encodeLink(link, bytes) {
    let i = bytes.length;
    if (typeof link.Tsize === 'number') {
        if (link.Tsize < 0) {
            throw new Error('Tsize cannot be negative');
        }
        if (!Number.isSafeInteger(link.Tsize)) {
            throw new Error('Tsize too large for encoding');
        }
        i = encodeVarint(bytes, i, link.Tsize) - 1;
        bytes[i] = 0x18;
    }
    if (typeof link.Name === 'string') {
        const nameBytes = textEncoder.encode(link.Name);
        i -= nameBytes.length;
        bytes.set(nameBytes, i);
        i = encodeVarint(bytes, i, nameBytes.length) - 1;
        bytes[i] = 0x12;
    }
    if (link.Hash) {
        i -= link.Hash.length;
        bytes.set(link.Hash, i);
        i = encodeVarint(bytes, i, link.Hash.length) - 1;
        bytes[i] = 0xa;
    }
    return bytes.length - i;
}
function encodeNode(node) {
    const size = sizeNode(node);
    const bytes = new Uint8Array(size);
    let i = size;
    if (node.Data) {
        i -= node.Data.length;
        bytes.set(node.Data, i);
        i = encodeVarint(bytes, i, node.Data.length) - 1;
        bytes[i] = 0xa;
    }
    if (node.Links) {
        for(let index = node.Links.length - 1; index >= 0; index--){
            const size = encodeLink(node.Links[index], bytes.subarray(0, i));
            i -= size;
            i = encodeVarint(bytes, i, size) - 1;
            bytes[i] = 0x12;
        }
    }
    return bytes;
}
/**
 * work out exactly how many bytes this link takes up
 *
 * @param {RawPBLink} link
 * @returns
 */ function sizeLink(link) {
    let n = 0;
    if (link.Hash) {
        const l = link.Hash.length;
        n += 1 + l + sov(l);
    }
    if (typeof link.Name === 'string') {
        const l = textEncoder.encode(link.Name).length;
        n += 1 + l + sov(l);
    }
    if (typeof link.Tsize === 'number') {
        n += 1 + sov(link.Tsize);
    }
    return n;
}
/**
 * Work out exactly how many bytes this node takes up
 *
 * @param {RawPBNode} node
 * @returns {number}
 */ function sizeNode(node) {
    let n = 0;
    if (node.Data) {
        const l = node.Data.length;
        n += 1 + l + sov(l);
    }
    if (node.Links) {
        for (const link of node.Links){
            const l = sizeLink(link);
            n += 1 + l + sov(l);
        }
    }
    return n;
}
/**
 * @param {Uint8Array} bytes
 * @param {number} offset
 * @param {number} v
 * @returns {number}
 */ function encodeVarint(bytes, offset, v) {
    offset -= sov(v);
    const base = offset;
    while(v >= maxUInt32){
        bytes[offset++] = v & 0x7f | 0x80;
        v /= 128;
    }
    while(v >= 128){
        bytes[offset++] = v & 0x7f | 0x80;
        v >>>= 7;
    }
    bytes[offset] = v;
    return base;
}
/**
 * size of varint
 *
 * @param {number} x
 * @returns {number}
 */ function sov(x) {
    if (x % 2 === 0) {
        x++;
    }
    return Math.floor((len64(x) + 6) / 7);
}
/**
 * golang math/bits, how many bits does it take to represent this integer?
 *
 * @param {number} x
 * @returns {number}
 */ function len64(x) {
    let n = 0;
    if (x >= maxInt32) {
        x = Math.floor(x / maxInt32);
        n = 32;
    }
    if (x >= 1 << 16) {
        x >>>= 16;
        n += 16;
    }
    if (x >= 1 << 8) {
        x >>>= 8;
        n += 8;
    }
    return n + len8tab[x];
}
// golang math/bits
const len8tab = [
    0,
    1,
    2,
    2,
    3,
    3,
    3,
    3,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    6,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8,
    8
];
}}),
"[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/util.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createLink": (()=>createLink),
    "createNode": (()=>createNode),
    "prepare": (()=>prepare),
    "toByteView": (()=>toByteView),
    "validate": (()=>validate)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js [app-route] (ecmascript) <locals>");
;
/**
 * @typedef {import('./interface.js').PBLink} PBLink
 * @typedef {import('./interface.js').PBNode} PBNode
 */ /**
 * @template T
 * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView
 */ /**
 * @template T
 * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView
 */ const pbNodeProperties = [
    'Data',
    'Links'
];
const pbLinkProperties = [
    'Hash',
    'Name',
    'Tsize'
];
const textEncoder = new TextEncoder();
/**
 * @param {PBLink} a
 * @param {PBLink} b
 * @returns {number}
 */ function linkComparator(a, b) {
    if (a === b) {
        return 0;
    }
    const abuf = a.Name ? textEncoder.encode(a.Name) : [];
    const bbuf = b.Name ? textEncoder.encode(b.Name) : [];
    let x = abuf.length;
    let y = bbuf.length;
    for(let i = 0, len = Math.min(x, y); i < len; ++i){
        if (abuf[i] !== bbuf[i]) {
            x = abuf[i];
            y = bbuf[i];
            break;
        }
    }
    return x < y ? -1 : y < x ? 1 : 0;
}
/**
 * @param {any} node
 * @param {string[]} properties
 * @returns {boolean}
 */ function hasOnlyProperties(node, properties) {
    return !Object.keys(node).some((p)=>!properties.includes(p));
}
/**
 * Converts a CID, or a PBLink-like object to a PBLink
 *
 * @param {any} link
 * @returns {PBLink}
 */ function asLink(link) {
    if (typeof link.asCID === 'object') {
        const Hash = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].asCID(link);
        if (!Hash) {
            throw new TypeError('Invalid DAG-PB form');
        }
        return {
            Hash
        };
    }
    if (typeof link !== 'object' || Array.isArray(link)) {
        throw new TypeError('Invalid DAG-PB form');
    }
    const pbl = {};
    if (link.Hash) {
        let cid = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].asCID(link.Hash);
        try {
            if (!cid) {
                if (typeof link.Hash === 'string') {
                    cid = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(link.Hash);
                } else if (link.Hash instanceof Uint8Array) {
                    cid = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].decode(link.Hash);
                }
            }
        } catch (/** @type {any} */ e) {
            throw new TypeError(`Invalid DAG-PB form: ${e.message}`);
        }
        if (cid) {
            pbl.Hash = cid;
        }
    }
    if (!pbl.Hash) {
        throw new TypeError('Invalid DAG-PB form');
    }
    if (typeof link.Name === 'string') {
        pbl.Name = link.Name;
    }
    if (typeof link.Tsize === 'number') {
        pbl.Tsize = link.Tsize;
    }
    return pbl;
}
function prepare(node) {
    if (node instanceof Uint8Array || typeof node === 'string') {
        node = {
            Data: node
        };
    }
    if (typeof node !== 'object' || Array.isArray(node)) {
        throw new TypeError('Invalid DAG-PB form');
    }
    /** @type {PBNode} */ const pbn = {};
    if (node.Data !== undefined) {
        if (typeof node.Data === 'string') {
            pbn.Data = textEncoder.encode(node.Data);
        } else if (node.Data instanceof Uint8Array) {
            pbn.Data = node.Data;
        } else {
            throw new TypeError('Invalid DAG-PB form');
        }
    }
    if (node.Links !== undefined) {
        if (Array.isArray(node.Links)) {
            pbn.Links = node.Links.map(asLink);
            pbn.Links.sort(linkComparator);
        } else {
            throw new TypeError('Invalid DAG-PB form');
        }
    } else {
        pbn.Links = [];
    }
    return pbn;
}
function validate(node) {
    /*
  type PBLink struct {
    Hash optional Link
    Name optional String
    Tsize optional Int
  }

  type PBNode struct {
    Links [PBLink]
    Data optional Bytes
  }
  */ // @ts-ignore private property for TS
    if (!node || typeof node !== 'object' || Array.isArray(node) || node instanceof Uint8Array || node['/'] && node['/'] === node.bytes) {
        throw new TypeError('Invalid DAG-PB form');
    }
    if (!hasOnlyProperties(node, pbNodeProperties)) {
        throw new TypeError('Invalid DAG-PB form (extraneous properties)');
    }
    if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {
        throw new TypeError('Invalid DAG-PB form (Data must be bytes)');
    }
    if (!Array.isArray(node.Links)) {
        throw new TypeError('Invalid DAG-PB form (Links must be a list)');
    }
    for(let i = 0; i < node.Links.length; i++){
        const link = node.Links[i];
        // @ts-ignore private property for TS
        if (!link || typeof link !== 'object' || Array.isArray(link) || link instanceof Uint8Array || link['/'] && link['/'] === link.bytes) {
            throw new TypeError('Invalid DAG-PB form (bad link)');
        }
        if (!hasOnlyProperties(link, pbLinkProperties)) {
            throw new TypeError('Invalid DAG-PB form (extraneous properties on link)');
        }
        if (link.Hash === undefined) {
            throw new TypeError('Invalid DAG-PB form (link must have a Hash)');
        }
        // @ts-ignore private property for TS
        if (link.Hash == null || !link.Hash['/'] || link.Hash['/'] !== link.Hash.bytes) {
            throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');
        }
        if (link.Name !== undefined && typeof link.Name !== 'string') {
            throw new TypeError('Invalid DAG-PB form (link Name must be a string)');
        }
        if (link.Tsize !== undefined) {
            if (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0) {
                throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');
            }
            if (link.Tsize < 0) {
                throw new TypeError('Invalid DAG-PB form (link Tsize cannot be negative)');
            }
        }
        if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {
            throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');
        }
    }
}
function createNode(data, links = []) {
    return prepare({
        Data: data,
        Links: links
    });
}
function createLink(name, size, cid) {
    return asLink({
        Hash: cid,
        Name: name,
        Tsize: size
    });
}
function toByteView(buf) {
    if (buf instanceof ArrayBuffer) {
        return new Uint8Array(buf, 0, buf.byteLength);
    }
    return buf;
}
}}),
"[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "code": (()=>code),
    "decode": (()=>decode),
    "encode": (()=>encode),
    "name": (()=>name)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/util.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$pb$2d$encode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-encode.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$pb$2d$decode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-decode.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js [app-route] (ecmascript) <locals>");
;
;
;
;
const name = 'dag-pb';
const code = 0x70;
function encode(node) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["validate"])(node);
    const pbn = {};
    if (node.Links) {
        pbn.Links = node.Links.map((l)=>{
            const link = {};
            if (l.Hash) {
                link.Hash = l.Hash.bytes // cid -> bytes
                ;
            }
            if (l.Name !== undefined) {
                link.Name = l.Name;
            }
            if (l.Tsize !== undefined) {
                link.Tsize = l.Tsize;
            }
            return link;
        });
    }
    if (node.Data) {
        pbn.Data = node.Data;
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$pb$2d$encode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeNode"])(pbn);
}
function decode(bytes) {
    const buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["toByteView"])(bytes);
    const pbn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$pb$2d$decode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeNode"])(buf);
    const node = {};
    if (pbn.Data) {
        node.Data = pbn.Data;
    }
    if (pbn.Links) {
        node.Links = pbn.Links.map((l)=>{
            const link = {};
            try {
                link.Hash = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].decode(l.Hash);
            } catch (e) {}
            if (!link.Hash) {
                throw new Error('Invalid Hash field found in link, expected CID');
            }
            if (l.Name !== undefined) {
                link.Name = l.Name;
            }
            if (l.Tsize !== undefined) {
                link.Tsize = l.Tsize;
            }
            return link;
        });
    }
    return node;
}
;
}}),
"[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$pb$2d$decode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-decode.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$pb$2d$encode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-encode.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/util.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/hasher.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Hasher": (()=>Hasher),
    "from": (()=>from)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/digest.js [app-route] (ecmascript)");
;
function from({ name, code, encode }) {
    return new Hasher(name, code, encode);
}
class Hasher {
    name;
    code;
    encode;
    constructor(name, code, encode){
        this.name = name;
        this.code = code;
        this.encode = encode;
    }
    digest(input) {
        if (input instanceof Uint8Array) {
            const result = this.encode(input);
            return result instanceof Uint8Array ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.create(this.code, result) : result.then((digest)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.create(this.code, digest));
        } else {
            throw Error('Unknown type, must be binary type');
        /* c8 ignore next 1 */ }
    }
} //# sourceMappingURL=hasher.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/interface.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// Base encoders / decoders just base encode / decode between binary and
// textual representation. They are unaware of multibase.
__turbopack_esm__({});
;
 //# sourceMappingURL=interface.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/interface.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// # Multihash
__turbopack_esm__({});
;
 //# sourceMappingURL=interface.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/codecs/interface.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
 //# sourceMappingURL=interface.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/block/interface.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
 //# sourceMappingURL=interface.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/interface.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
;
;
 //# sourceMappingURL=interface.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/interface.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$interface$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/interface.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$interface$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/interface.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$codecs$2f$interface$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/codecs/interface.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$link$2f$interface$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/link/interface.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$block$2f$interface$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/block/interface.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$interface$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/interface.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * @packageDocumentation
 *
 * This library defines common interfaces and low level building blocks for various interrelated multiformat technologies (multicodec, multihash, multibase, and CID). They can be used to implement custom base encoders / decoders / codecs, codec encoders /decoders and multihash hashers that comply to the interface that layers above assume.
 *
 * This library provides implementations for most basics and many others can be found in linked repositories.
 *
 * ```TypeScript
 * import { CID } from 'multiformats/cid'
 * import * as json from 'multiformats/codecs/json'
 * import { sha256 } from 'multiformats/hashes/sha2'
 *
 * const bytes = json.encode({ hello: 'world' })
 *
 * const hash = await sha256.digest(bytes)
 * const cid = CID.create(1, json.code, hash)
 * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)
 * ```
 *
 * ## Creating Blocks
 *
 * ```TypeScript
 * import * as Block from 'multiformats/block'
 * import * as codec from '@ipld/dag-cbor'
 * import { sha256 as hasher } from 'multiformats/hashes/sha2'
 *
 * const value = { hello: 'world' }
 *
 * // encode a block
 * let block = await Block.encode({ value, codec, hasher })
 *
 * block.value // { hello: 'world' }
 * block.bytes // Uint8Array
 * block.cid   // CID() w/ sha2-256 hash address and dag-cbor codec
 *
 * // you can also decode blocks from their binary state
 * block = await Block.decode({ bytes: block.bytes, codec, hasher })
 *
 * // if you have the cid you can also verify the hash on decode
 * block = await Block.create({ bytes: block.bytes, cid: block.cid, codec, hasher })
 * ```
 *
 * ## Multibase Encoders / Decoders / Codecs
 *
 * CIDs can be serialized to string representation using multibase encoders that implement [`MultibaseEncoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides quite a few implementations that can be imported:
 *
 * ```TypeScript
 * import { base64 } from "multiformats/bases/base64"
 * cid.toString(base64.encoder)
 * //> 'mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA'
 * ```
 *
 * Parsing CID string serialized CIDs requires multibase decoder that implements [`MultibaseDecoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides a decoder for every encoder it provides:
 *
 * ```TypeScript
 * CID.parse('mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA', base64.decoder)
 * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)
 * ```
 *
 * Dual of multibase encoder & decoder is defined as multibase codec and it exposes
 * them as `encoder` and `decoder` properties. For added convenience codecs also
 * implement `MultibaseEncoder` and `MultibaseDecoder` interfaces so they could be
 * used as either or both:
 *
 * ```TypeScript
 * cid.toString(base64)
 * CID.parse(cid.toString(base64), base64)
 * ```
 *
 * **Note:** CID implementation comes bundled with `base32` and `base58btc`
 * multibase codecs so that CIDs can be base serialized to (version specific)
 * default base encoding and parsed without having to supply base encoders/decoders:
 *
 * ```TypeScript
 * const v1 = CID.parse('bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea')
 * v1.toString()
 * //> 'bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea'
 *
 * const v0 = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')
 * v0.toString()
 * //> 'QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n'
 * v0.toV1().toString()
 * //> 'bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku'
 * ```
 *
 * ## Multicodec Encoders / Decoders / Codecs
 *
 * This library defines [`BlockEncoder`, `BlockDecoder` and `BlockCodec` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts).
 * Codec implementations should conform to the `BlockCodec` interface which implements both `BlockEncoder` and `BlockDecoder`.
 * Here is an example implementation of JSON `BlockCodec`.
 *
 * ```TypeScript
 * export const { name, code, encode, decode } = {
 *   name: 'json',
 *   code: 0x0200,
 *   encode: json => new TextEncoder().encode(JSON.stringify(json)),
 *   decode: bytes => JSON.parse(new TextDecoder().decode(bytes))
 * }
 * ```
 *
 * ## Multihash Hashers
 *
 * This library defines [`MultihashHasher` and `MultihashDigest` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/hashes/interface.ts) and convinient function for implementing them:
 *
 * ```TypeScript
 * import * as hasher from 'multiformats/hashes/hasher'
 *
 * const sha256 = hasher.from({
 *   // As per multiformats table
 *   // https://github.com/multiformats/multicodec/blob/master/table.csv#L9
 *   name: 'sha2-256',
 *   code: 0x12,
 *
 *   encode: (input) => new Uint8Array(crypto.createHash('sha256').update(input).digest())
 * })
 *
 * const hash = await sha256.digest(json.encode({ hello: 'world' }))
 * CID.create(1, json.code, hash)
 *
 * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)
 * ```
 *
 * ## Traversal
 *
 * This library contains higher-order functions for traversing graphs of data easily.
 *
 * `walk()` walks through the links in each block of a DAG calling a user-supplied loader function for each one, in depth-first order with no duplicate block visits. The loader should return a `Block` object and can be used to inspect and collect block ordering for a full DAG walk. The loader should `throw` on error, and return `null` if a block should be skipped by `walk()`.
 *
 * ```TypeScript
 * import { walk } from 'multiformats/traversal'
 * import * as Block from 'multiformats/block'
 * import * as codec from 'multiformats/codecs/json'
 * import { sha256 as hasher } from 'multiformats/hashes/sha2'
 *
 * // build a DAG (a single block for this simple example)
 * const value = { hello: 'world' }
 * const block = await Block.encode({ value, codec, hasher })
 * const { cid } = block
 * console.log(cid)
 * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)
 *
 * // create a loader function that also collects CIDs of blocks in
 * // their traversal order
 * const load = (cid, blocks) => async (cid) => {
 *   // fetch a block using its cid
 *   // e.g.: const block = await fetchBlockByCID(cid)
 *   blocks.push(cid)
 *   return block
 * }
 *
 * // collect blocks in this DAG starting from the root `cid`
 * const blocks = []
 * await walk({ cid, load: load(cid, blocks) })
 *
 * console.log(blocks)
 * //> [CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)]
 * ```
 *
 * ## Legacy interface
 *
 * [`blockcodec-to-ipld-format`](https://github.com/ipld/js-blockcodec-to-ipld-format) converts a multiformats [`BlockCodec`](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts#L21) into an
 * [`interface-ipld-format`](https://github.com/ipld/interface-ipld-format) for use with the [`ipld`](https://github.com/ipld/ipld) package. This can help bridge IPLD codecs implemented using the structure and interfaces defined here to existing code that assumes, or requires `interface-ipld-format`. This bridge also includes the relevant TypeScript definitions.
 *
 * ## Implementations
 *
 * By default, no base encodings (other than base32 & base58btc), hash functions,
 * or codec implementations are exposed by `multiformats`, you need to
 * import the ones you need yourself.
 *
 * ### Multibase codecs
 *
 * | bases                                                         | import                      | repo                                                                                              |
 * | ------------------------------------------------------------- | --------------------------- | ------------------------------------------------------------------------------------------------- |
 * | `base16`                                                      | `multiformats/bases/base16` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |
 * | `base32`, `base32pad`, `base32hex`, `base32hexpad`, `base32z` | `multiformats/bases/base32` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |
 * | `base64`, `base64pad`, `base64url`, `base64urlpad`            | `multiformats/bases/base64` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |
 * | `base58btc`, `base58flick4`                                   | `multiformats/bases/base58` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |
 *
 * Other (less useful) bases implemented in [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) include: `base2`, `base8`, `base10`, `base36` and `base256emoji`.
 *
 * ### Multihash hashers
 *
 * | hashes                                                                                                                          | import                         | repo                                                                                                               |
 * | ------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------ |
 * | `sha2-256`, `sha2-512`                                                                                                          | `multiformats/hashes/sha2`     | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes)             |
 * | `sha3-224`, `sha3-256`, `sha3-384`,`sha3-512`, `shake-128`, `shake-256`, `keccak-224`, `keccak-256`, `keccak-384`, `keccak-512` | `@multiformats/sha3`           | [multiformats/js-sha3](https://github.com/multiformats/js-sha3)                                                    |
 * | `identity`                                                                                                                      | `multiformats/hashes/identity` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes/identity.js) |
 * | `murmur3-128`, `murmur3-32`                                                                                                     | `@multiformats/murmur3`        | [multiformats/js-murmur3](https://github.com/multiformats/js-murmur3)                                              |
 * | `blake2b-*`, `blake2s-*`                                                                                                        | `@multiformats/blake2`         | [multiformats/js-blake2](https://github.com/multiformats/js-blake2)                                                |
 *
 * ### IPLD codecs (multicodec)
 *
 * | codec      | import                     | repo                                                                                                   |
 * | ---------- | -------------------------- | ------------------------------------------------------------------------------------------------------ |
 * | `raw`      | `multiformats/codecs/raw`  | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |
 * | `json`     | `multiformats/codecs/json` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |
 * | `dag-cbor` | `@ipld/dag-cbor`           | [ipld/js-dag-cbor](https://github.com/ipld/js-dag-cbor)                                                |
 * | `dag-json` | `@ipld/dag-json`           | [ipld/js-dag-json](https://github.com/ipld/js-dag-json)                                                |
 * | `dag-pb`   | `@ipld/dag-pb`             | [ipld/js-dag-pb](https://github.com/ipld/js-dag-pb)                                                    |
 * | `dag-jose` | `dag-jose`                 | [ceramicnetwork/js-dag-jose](https://github.com/ceramicnetwork/js-dag-jose)                            |
 */ __turbopack_esm__({});
;
;
;
;
;
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bytes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/digest.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$hasher$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/hasher.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$varint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/varint.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$interface$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/interface.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "chunkBuffer": (()=>chunkBuffer)
});
var __asyncValues = this && this.__asyncValues || function(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
};
var __await = this && this.__await || function(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
};
var __asyncGenerator = this && this.__asyncGenerator || function(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function awaitReturn(f) {
        return function(v) {
            return Promise.resolve(v).then(f, reject);
        };
    }
    function verb(n, f) {
        if (g[n]) {
            i[n] = function(v) {
                return new Promise(function(a, b) {
                    q.push([
                        n,
                        v,
                        a,
                        b
                    ]) > 1 || resume(n, v);
                });
            };
            if (f) i[n] = f(i[n]);
        }
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
};
;
;
const chunkBuffer = function(buffer_1, _a) {
    return __asyncGenerator(this, arguments, function*(buffer, { maxChunkSize, ignoreLastChunk = false }) {
        var _b, e_1, _c, _d;
        let target = Buffer.alloc(0);
        try {
            for(var _e = true, buffer_2 = __asyncValues(buffer), buffer_2_1; buffer_2_1 = yield __await(buffer_2.next()), _b = buffer_2_1.done, !_b; _e = true){
                _d = buffer_2_1.value;
                _e = false;
                let chunk = _d;
                target = Buffer.concat([
                    target,
                    chunk
                ]);
                while(target.length >= maxChunkSize){
                    yield yield __await(target.subarray(0, maxChunkSize));
                    target = target.subarray(maxChunkSize);
                }
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (!_e && !_b && (_c = buffer_2.return)) yield __await(_c.call(buffer_2));
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        if (target.length > 0 && !ignoreLastChunk) {
            yield yield __await(target);
        }
    });
};
;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js [app-route] (ecmascript) <locals> <export encode as encodeNode>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "encodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["encode"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/cid/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BLAKE3_CODE": (()=>BLAKE3_CODE),
    "blake3HashFromCid": (()=>blake3HashFromCid),
    "cidFromBlakeHash": (()=>cidFromBlakeHash),
    "cidOfNode": (()=>cidOfNode),
    "cidToString": (()=>cidToString),
    "stringToCid": (()=>stringToCid)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base32$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base32.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$codecs$2f$raw$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/codecs/raw.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/digest.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/webbuf.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__encode__as__encodeNode$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js [app-route] (ecmascript) <locals> <export encode as encodeNode>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js [app-route] (ecmascript) <locals>");
;
;
;
;
;
;
;
const BLAKE3_CODE = 0x1f;
const cidOfNode = (node)=>{
    const encodedNode = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$webbuf$2f$dist$2f$webbuf$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["WebBuf"].from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__encode__as__encodeNode$3e$__["encodeNode"])(node));
    const hash = Buffer.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$webbuf$2b$blake3$40$3$2e$0$2e$26_$40$webbuf$2b$fixedbuf$40$3$2e$0$2e$26_$40$webbuf$2b$webbuf$40$3$2e$0$2e$26_$5f40$webbuf$2b$webbuf$40$3$2e$0$2e$26$2f$node_modules$2f40$webbuf$2f$blake3$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["blake3Hash"])(encodedNode).buf);
    return cidFromBlakeHash(hash);
};
const cidToString = (cid)=>{
    return cid.toString(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base32$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.base32);
};
const stringToCid = (str)=>{
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(str, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base32$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.base32);
};
const cidFromBlakeHash = (hash)=>{
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].create(1, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$codecs$2f$raw$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.code, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["create"])(BLAKE3_CODE, hash));
};
const blake3HashFromCid = (cid)=>cid.multihash.digest;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/base.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/file.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "fileMetadata": (()=>fileMetadata)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/cid/index.js [app-route] (ecmascript)");
;
const fileMetadata = (headCID, chunks, totalSize, name, mimeType, uploadOptions = {
    compression: undefined,
    encryption: undefined
})=>{
    return {
        type: 'file',
        dataCid: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidToString"])(headCID),
        name: name !== null && name !== void 0 ? name : undefined,
        mimeType: mimeType !== null && mimeType !== void 0 ? mimeType : undefined,
        totalSize,
        totalChunks: chunks.length,
        chunks,
        uploadOptions
    };
};
}}),
"[project]/node_modules/.pnpm/uint8arrays@5.1.0/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * To guarantee Uint8Array semantics, convert nodejs Buffers
 * into vanilla Uint8Arrays
 */ __turbopack_esm__({
    "asUint8Array": (()=>asUint8Array)
});
function asUint8Array(buf) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
} //# sourceMappingURL=as-uint8array.node.js.map
}}),
"[project]/node_modules/.pnpm/uint8arrays@5.1.0/node_modules/uint8arrays/dist/src/alloc.node.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "alloc": (()=>alloc),
    "allocUnsafe": (()=>allocUnsafe)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$buffer__$5b$external$5d$__$28$node$3a$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/node:buffer [external] (node:buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$util$2f$as$2d$uint8array$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/uint8arrays@5.1.0/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js [app-route] (ecmascript)");
;
;
function alloc(size = 0) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$util$2f$as$2d$uint8array$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["asUint8Array"])(__TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$buffer__$5b$external$5d$__$28$node$3a$buffer$2c$__cjs$29$__["Buffer"].alloc(size));
}
function allocUnsafe(size = 0) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$util$2f$as$2d$uint8array$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["asUint8Array"])(__TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$buffer__$5b$external$5d$__$28$node$3a$buffer$2c$__cjs$29$__["Buffer"].allocUnsafe(size));
} //# sourceMappingURL=alloc.node.js.map
}}),
"[project]/node_modules/.pnpm/uint8-varint@2.0.4/node_modules/uint8-varint/dist/src/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/* eslint-disable no-fallthrough */ __turbopack_esm__({
    "decode": (()=>decode),
    "decodeUint8Array": (()=>decodeUint8Array),
    "decodeUint8ArrayList": (()=>decodeUint8ArrayList),
    "encode": (()=>encode),
    "encodeUint8Array": (()=>encodeUint8Array),
    "encodeUint8ArrayList": (()=>encodeUint8ArrayList),
    "encodingLength": (()=>encodingLength)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$alloc$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/uint8arrays@5.1.0/node_modules/uint8arrays/dist/src/alloc.node.js [app-route] (ecmascript)");
;
const N1 = Math.pow(2, 7);
const N2 = Math.pow(2, 14);
const N3 = Math.pow(2, 21);
const N4 = Math.pow(2, 28);
const N5 = Math.pow(2, 35);
const N6 = Math.pow(2, 42);
const N7 = Math.pow(2, 49);
/** Most significant bit of a byte */ const MSB = 0x80;
/** Rest of the bits in a byte */ const REST = 0x7f;
function encodingLength(value) {
    if (value < N1) {
        return 1;
    }
    if (value < N2) {
        return 2;
    }
    if (value < N3) {
        return 3;
    }
    if (value < N4) {
        return 4;
    }
    if (value < N5) {
        return 5;
    }
    if (value < N6) {
        return 6;
    }
    if (value < N7) {
        return 7;
    }
    if (Number.MAX_SAFE_INTEGER != null && value > Number.MAX_SAFE_INTEGER) {
        throw new RangeError('Could not encode varint');
    }
    return 8;
}
function encodeUint8Array(value, buf, offset = 0) {
    switch(encodingLength(value)){
        case 8:
            {
                buf[offset++] = value & 0xFF | MSB;
                value /= 128;
            }
        case 7:
            {
                buf[offset++] = value & 0xFF | MSB;
                value /= 128;
            }
        case 6:
            {
                buf[offset++] = value & 0xFF | MSB;
                value /= 128;
            }
        case 5:
            {
                buf[offset++] = value & 0xFF | MSB;
                value /= 128;
            }
        case 4:
            {
                buf[offset++] = value & 0xFF | MSB;
                value >>>= 7;
            }
        case 3:
            {
                buf[offset++] = value & 0xFF | MSB;
                value >>>= 7;
            }
        case 2:
            {
                buf[offset++] = value & 0xFF | MSB;
                value >>>= 7;
            }
        case 1:
            {
                buf[offset++] = value & 0xFF;
                value >>>= 7;
                break;
            }
        default:
            throw new Error('unreachable');
    }
    return buf;
}
function encodeUint8ArrayList(value, buf, offset = 0) {
    switch(encodingLength(value)){
        case 8:
            {
                buf.set(offset++, value & 0xFF | MSB);
                value /= 128;
            }
        case 7:
            {
                buf.set(offset++, value & 0xFF | MSB);
                value /= 128;
            }
        case 6:
            {
                buf.set(offset++, value & 0xFF | MSB);
                value /= 128;
            }
        case 5:
            {
                buf.set(offset++, value & 0xFF | MSB);
                value /= 128;
            }
        case 4:
            {
                buf.set(offset++, value & 0xFF | MSB);
                value >>>= 7;
            }
        case 3:
            {
                buf.set(offset++, value & 0xFF | MSB);
                value >>>= 7;
            }
        case 2:
            {
                buf.set(offset++, value & 0xFF | MSB);
                value >>>= 7;
            }
        case 1:
            {
                buf.set(offset++, value & 0xFF);
                value >>>= 7;
                break;
            }
        default:
            throw new Error('unreachable');
    }
    return buf;
}
function decodeUint8Array(buf, offset) {
    let b = buf[offset];
    let res = 0;
    res += b & REST;
    if (b < MSB) {
        return res;
    }
    b = buf[offset + 1];
    res += (b & REST) << 7;
    if (b < MSB) {
        return res;
    }
    b = buf[offset + 2];
    res += (b & REST) << 14;
    if (b < MSB) {
        return res;
    }
    b = buf[offset + 3];
    res += (b & REST) << 21;
    if (b < MSB) {
        return res;
    }
    b = buf[offset + 4];
    res += (b & REST) * N4;
    if (b < MSB) {
        return res;
    }
    b = buf[offset + 5];
    res += (b & REST) * N5;
    if (b < MSB) {
        return res;
    }
    b = buf[offset + 6];
    res += (b & REST) * N6;
    if (b < MSB) {
        return res;
    }
    b = buf[offset + 7];
    res += (b & REST) * N7;
    if (b < MSB) {
        return res;
    }
    throw new RangeError('Could not decode varint');
}
function decodeUint8ArrayList(buf, offset) {
    let b = buf.get(offset);
    let res = 0;
    res += b & REST;
    if (b < MSB) {
        return res;
    }
    b = buf.get(offset + 1);
    res += (b & REST) << 7;
    if (b < MSB) {
        return res;
    }
    b = buf.get(offset + 2);
    res += (b & REST) << 14;
    if (b < MSB) {
        return res;
    }
    b = buf.get(offset + 3);
    res += (b & REST) << 21;
    if (b < MSB) {
        return res;
    }
    b = buf.get(offset + 4);
    res += (b & REST) * N4;
    if (b < MSB) {
        return res;
    }
    b = buf.get(offset + 5);
    res += (b & REST) * N5;
    if (b < MSB) {
        return res;
    }
    b = buf.get(offset + 6);
    res += (b & REST) * N6;
    if (b < MSB) {
        return res;
    }
    b = buf.get(offset + 7);
    res += (b & REST) * N7;
    if (b < MSB) {
        return res;
    }
    throw new RangeError('Could not decode varint');
}
function encode(value, buf, offset = 0) {
    if (buf == null) {
        buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$alloc$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["allocUnsafe"])(encodingLength(value));
    }
    if (buf instanceof Uint8Array) {
        return encodeUint8Array(value, buf, offset);
    } else {
        return encodeUint8ArrayList(value, buf, offset);
    }
}
function decode(buf, offset = 0) {
    if (buf instanceof Uint8Array) {
        return decodeUint8Array(buf, offset);
    } else {
        return decodeUint8ArrayList(buf, offset);
    }
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/float.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "readDoubleBE": (()=>readDoubleBE),
    "readDoubleLE": (()=>readDoubleLE),
    "readFloatBE": (()=>readFloatBE),
    "readFloatLE": (()=>readFloatLE),
    "writeDoubleBE": (()=>writeDoubleBE),
    "writeDoubleLE": (()=>writeDoubleLE),
    "writeFloatBE": (()=>writeFloatBE),
    "writeFloatLE": (()=>writeFloatLE)
});
const f32 = new Float32Array([
    -0
]);
const f8b = new Uint8Array(f32.buffer);
function writeFloatLE(val, buf, pos) {
    f32[0] = val;
    buf[pos] = f8b[0];
    buf[pos + 1] = f8b[1];
    buf[pos + 2] = f8b[2];
    buf[pos + 3] = f8b[3];
}
function writeFloatBE(val, buf, pos) {
    f32[0] = val;
    buf[pos] = f8b[3];
    buf[pos + 1] = f8b[2];
    buf[pos + 2] = f8b[1];
    buf[pos + 3] = f8b[0];
}
function readFloatLE(buf, pos) {
    f8b[0] = buf[pos];
    f8b[1] = buf[pos + 1];
    f8b[2] = buf[pos + 2];
    f8b[3] = buf[pos + 3];
    return f32[0];
}
function readFloatBE(buf, pos) {
    f8b[3] = buf[pos];
    f8b[2] = buf[pos + 1];
    f8b[1] = buf[pos + 2];
    f8b[0] = buf[pos + 3];
    return f32[0];
}
const f64 = new Float64Array([
    -0
]);
const d8b = new Uint8Array(f64.buffer);
function writeDoubleLE(val, buf, pos) {
    f64[0] = val;
    buf[pos] = d8b[0];
    buf[pos + 1] = d8b[1];
    buf[pos + 2] = d8b[2];
    buf[pos + 3] = d8b[3];
    buf[pos + 4] = d8b[4];
    buf[pos + 5] = d8b[5];
    buf[pos + 6] = d8b[6];
    buf[pos + 7] = d8b[7];
}
function writeDoubleBE(val, buf, pos) {
    f64[0] = val;
    buf[pos] = d8b[7];
    buf[pos + 1] = d8b[6];
    buf[pos + 2] = d8b[5];
    buf[pos + 3] = d8b[4];
    buf[pos + 4] = d8b[3];
    buf[pos + 5] = d8b[2];
    buf[pos + 6] = d8b[1];
    buf[pos + 7] = d8b[0];
}
function readDoubleLE(buf, pos) {
    d8b[0] = buf[pos];
    d8b[1] = buf[pos + 1];
    d8b[2] = buf[pos + 2];
    d8b[3] = buf[pos + 3];
    d8b[4] = buf[pos + 4];
    d8b[5] = buf[pos + 5];
    d8b[6] = buf[pos + 6];
    d8b[7] = buf[pos + 7];
    return f64[0];
}
function readDoubleBE(buf, pos) {
    d8b[7] = buf[pos];
    d8b[6] = buf[pos + 1];
    d8b[5] = buf[pos + 2];
    d8b[4] = buf[pos + 3];
    d8b[3] = buf[pos + 4];
    d8b[2] = buf[pos + 5];
    d8b[1] = buf[pos + 6];
    d8b[0] = buf[pos + 7];
    return f64[0];
} //# sourceMappingURL=float.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/longbits.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// the largest BigInt we can safely downcast to a Number
__turbopack_esm__({
    "LongBits": (()=>LongBits)
});
const MAX_SAFE_NUMBER_INTEGER = BigInt(Number.MAX_SAFE_INTEGER);
const MIN_SAFE_NUMBER_INTEGER = BigInt(Number.MIN_SAFE_INTEGER);
class LongBits {
    lo;
    hi;
    constructor(lo, hi){
        // note that the casts below are theoretically unnecessary as of today, but older statically
        // generated converter code might still call the ctor with signed 32bits. kept for compat.
        /**
         * Low bits
         */ this.lo = lo | 0;
        /**
         * High bits
         */ this.hi = hi | 0;
    }
    /**
     * Converts this long bits to a possibly unsafe JavaScript number
     */ toNumber(unsigned = false) {
        if (!unsigned && this.hi >>> 31 > 0) {
            const lo = ~this.lo + 1 >>> 0;
            let hi = ~this.hi >>> 0;
            if (lo === 0) {
                hi = hi + 1 >>> 0;
            }
            return -(lo + hi * 4294967296);
        }
        return this.lo + this.hi * 4294967296;
    }
    /**
     * Converts this long bits to a bigint
     */ toBigInt(unsigned = false) {
        if (unsigned) {
            return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n);
        }
        if (this.hi >>> 31 !== 0) {
            const lo = ~this.lo + 1 >>> 0;
            let hi = ~this.hi >>> 0;
            if (lo === 0) {
                hi = hi + 1 >>> 0;
            }
            return -(BigInt(lo) + (BigInt(hi) << 32n));
        }
        return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n);
    }
    /**
     * Converts this long bits to a string
     */ toString(unsigned = false) {
        return this.toBigInt(unsigned).toString();
    }
    /**
     * Zig-zag encodes this long bits
     */ zzEncode() {
        const mask = this.hi >> 31;
        this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;
        this.lo = (this.lo << 1 ^ mask) >>> 0;
        return this;
    }
    /**
     * Zig-zag decodes this long bits
     */ zzDecode() {
        const mask = -(this.lo & 1);
        this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;
        this.hi = (this.hi >>> 1 ^ mask) >>> 0;
        return this;
    }
    /**
     * Calculates the length of this longbits when encoded as a varint.
     */ length() {
        const part0 = this.lo;
        const part1 = (this.lo >>> 28 | this.hi << 4) >>> 0;
        const part2 = this.hi >>> 24;
        return part2 === 0 ? part1 === 0 ? part0 < 16384 ? part0 < 128 ? 1 : 2 : part0 < 2097152 ? 3 : 4 : part1 < 16384 ? part1 < 128 ? 5 : 6 : part1 < 2097152 ? 7 : 8 : part2 < 128 ? 9 : 10;
    }
    /**
     * Constructs new long bits from the specified number
     */ static fromBigInt(value) {
        if (value === 0n) {
            return zero;
        }
        if (value < MAX_SAFE_NUMBER_INTEGER && value > MIN_SAFE_NUMBER_INTEGER) {
            return this.fromNumber(Number(value));
        }
        const negative = value < 0n;
        if (negative) {
            value = -value;
        }
        let hi = value >> 32n;
        let lo = value - (hi << 32n);
        if (negative) {
            hi = ~hi | 0n;
            lo = ~lo | 0n;
            if (++lo > TWO_32) {
                lo = 0n;
                if (++hi > TWO_32) {
                    hi = 0n;
                }
            }
        }
        return new LongBits(Number(lo), Number(hi));
    }
    /**
     * Constructs new long bits from the specified number
     */ static fromNumber(value) {
        if (value === 0) {
            return zero;
        }
        const sign = value < 0;
        if (sign) {
            value = -value;
        }
        let lo = value >>> 0;
        let hi = (value - lo) / 4294967296 >>> 0;
        if (sign) {
            hi = ~hi >>> 0;
            lo = ~lo >>> 0;
            if (++lo > 4294967295) {
                lo = 0;
                if (++hi > 4294967295) {
                    hi = 0;
                }
            }
        }
        return new LongBits(lo, hi);
    }
    /**
     * Constructs new long bits from a number, long or string
     */ static from(value) {
        if (typeof value === 'number') {
            return LongBits.fromNumber(value);
        }
        if (typeof value === 'bigint') {
            return LongBits.fromBigInt(value);
        }
        if (typeof value === 'string') {
            return LongBits.fromBigInt(BigInt(value));
        }
        return value.low != null || value.high != null ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;
    }
}
const zero = new LongBits(0, 0);
zero.toBigInt = function() {
    return 0n;
};
zero.zzEncode = zero.zzDecode = function() {
    return this;
};
zero.length = function() {
    return 1;
};
const TWO_32 = 4294967296n; //# sourceMappingURL=longbits.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/utf8.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * Calculates the UTF8 byte length of a string
 */ __turbopack_esm__({
    "length": (()=>length),
    "read": (()=>read),
    "write": (()=>write)
});
function length(string) {
    let len = 0;
    let c = 0;
    for(let i = 0; i < string.length; ++i){
        c = string.charCodeAt(i);
        if (c < 128) {
            len += 1;
        } else if (c < 2048) {
            len += 2;
        } else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {
            ++i;
            len += 4;
        } else {
            len += 3;
        }
    }
    return len;
}
function read(buffer, start, end) {
    const len = end - start;
    if (len < 1) {
        return '';
    }
    let parts;
    const chunk = [];
    let i = 0; // char offset
    let t; // temporary
    while(start < end){
        t = buffer[start++];
        if (t < 128) {
            chunk[i++] = t;
        } else if (t > 191 && t < 224) {
            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;
        } else if (t > 239 && t < 365) {
            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;
            chunk[i++] = 0xD800 + (t >> 10);
            chunk[i++] = 0xDC00 + (t & 1023);
        } else {
            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;
        }
        if (i > 8191) {
            (parts ?? (parts = [])).push(String.fromCharCode.apply(String, chunk));
            i = 0;
        }
    }
    if (parts != null) {
        if (i > 0) {
            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
        }
        return parts.join('');
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i));
}
function write(string, buffer, offset) {
    const start = offset;
    let c1; // character 1
    let c2; // character 2
    for(let i = 0; i < string.length; ++i){
        c1 = string.charCodeAt(i);
        if (c1 < 128) {
            buffer[offset++] = c1;
        } else if (c1 < 2048) {
            buffer[offset++] = c1 >> 6 | 192;
            buffer[offset++] = c1 & 63 | 128;
        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {
            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);
            ++i;
            buffer[offset++] = c1 >> 18 | 240;
            buffer[offset++] = c1 >> 12 & 63 | 128;
            buffer[offset++] = c1 >> 6 & 63 | 128;
            buffer[offset++] = c1 & 63 | 128;
        } else {
            buffer[offset++] = c1 >> 12 | 224;
            buffer[offset++] = c1 >> 6 & 63 | 128;
            buffer[offset++] = c1 & 63 | 128;
        }
    }
    return offset - start;
} //# sourceMappingURL=utf8.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/reader.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "Uint8ArrayReader": (()=>Uint8ArrayReader),
    "createReader": (()=>createReader)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8$2d$varint$40$2$2e$0$2e$4$2f$node_modules$2f$uint8$2d$varint$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/uint8-varint@2.0.4/node_modules/uint8-varint/dist/src/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$float$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/float.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$longbits$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/longbits.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$utf8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/utf8.js [app-route] (ecmascript)");
;
;
;
;
/* istanbul ignore next */ function indexOutOfRange(reader, writeLength) {
    return RangeError(`index out of range: ${reader.pos} + ${writeLength ?? 1} > ${reader.len}`);
}
function readFixed32End(buf, end) {
    return (buf[end - 4] | buf[end - 3] << 8 | buf[end - 2] << 16 | buf[end - 1] << 24) >>> 0;
}
class Uint8ArrayReader {
    buf;
    pos;
    len;
    _slice = Uint8Array.prototype.subarray;
    constructor(buffer){
        /**
         * Read buffer
         */ this.buf = buffer;
        /**
         * Read buffer position
         */ this.pos = 0;
        /**
         * Read buffer length
         */ this.len = buffer.length;
    }
    /**
     * Reads a varint as an unsigned 32 bit value
     */ uint32() {
        let value = 4294967295;
        value = (this.buf[this.pos] & 127) >>> 0;
        if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) << 7) >>> 0;
        if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0;
        if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0;
        if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 15) << 28) >>> 0;
        if (this.buf[this.pos++] < 128) return value;
        if ((this.pos += 5) > this.len) {
            this.pos = this.len;
            throw indexOutOfRange(this, 10);
        }
        return value;
    }
    /**
     * Reads a varint as a signed 32 bit value
     */ int32() {
        return this.uint32() | 0;
    }
    /**
     * Reads a zig-zag encoded varint as a signed 32 bit value
     */ sint32() {
        const value = this.uint32();
        return value >>> 1 ^ -(value & 1) | 0;
    }
    /**
     * Reads a varint as a boolean
     */ bool() {
        return this.uint32() !== 0;
    }
    /**
     * Reads fixed 32 bits as an unsigned 32 bit integer
     */ fixed32() {
        if (this.pos + 4 > this.len) {
            throw indexOutOfRange(this, 4);
        }
        const res = readFixed32End(this.buf, this.pos += 4);
        return res;
    }
    /**
     * Reads fixed 32 bits as a signed 32 bit integer
     */ sfixed32() {
        if (this.pos + 4 > this.len) {
            throw indexOutOfRange(this, 4);
        }
        const res = readFixed32End(this.buf, this.pos += 4) | 0;
        return res;
    }
    /**
     * Reads a float (32 bit) as a number
     */ float() {
        if (this.pos + 4 > this.len) {
            throw indexOutOfRange(this, 4);
        }
        const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$float$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["readFloatLE"])(this.buf, this.pos);
        this.pos += 4;
        return value;
    }
    /**
     * Reads a double (64 bit float) as a number
     */ double() {
        /* istanbul ignore if */ if (this.pos + 8 > this.len) {
            throw indexOutOfRange(this, 4);
        }
        const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$float$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["readDoubleLE"])(this.buf, this.pos);
        this.pos += 8;
        return value;
    }
    /**
     * Reads a sequence of bytes preceded by its length as a varint
     */ bytes() {
        const length = this.uint32();
        const start = this.pos;
        const end = this.pos + length;
        /* istanbul ignore if */ if (end > this.len) {
            throw indexOutOfRange(this, length);
        }
        this.pos += length;
        return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1
         ? new Uint8Array(0) : this.buf.subarray(start, end);
    }
    /**
     * Reads a string preceded by its byte length as a varint
     */ string() {
        const bytes = this.bytes();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$utf8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.read(bytes, 0, bytes.length);
    }
    /**
     * Skips the specified number of bytes if specified, otherwise skips a varint
     */ skip(length) {
        if (typeof length === 'number') {
            /* istanbul ignore if */ if (this.pos + length > this.len) {
                throw indexOutOfRange(this, length);
            }
            this.pos += length;
        } else {
            do {
                /* istanbul ignore if */ if (this.pos >= this.len) {
                    throw indexOutOfRange(this);
                }
            }while ((this.buf[this.pos++] & 128) !== 0)
        }
        return this;
    }
    /**
     * Skips the next element of the specified wire type
     */ skipType(wireType) {
        switch(wireType){
            case 0:
                this.skip();
                break;
            case 1:
                this.skip(8);
                break;
            case 2:
                this.skip(this.uint32());
                break;
            case 3:
                while((wireType = this.uint32() & 7) !== 4){
                    this.skipType(wireType);
                }
                break;
            case 5:
                this.skip(4);
                break;
            /* istanbul ignore next */ default:
                throw Error(`invalid wire type ${wireType} at offset ${this.pos}`);
        }
        return this;
    }
    readLongVarint() {
        // tends to deopt with local vars for octet etc.
        const bits = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$longbits$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LongBits"](0, 0);
        let i = 0;
        if (this.len - this.pos > 4) {
            for(; i < 4; ++i){
                // 1st..4th
                bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
                if (this.buf[this.pos++] < 128) {
                    return bits;
                }
            }
            // 5th
            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;
            bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0;
            if (this.buf[this.pos++] < 128) {
                return bits;
            }
            i = 0;
        } else {
            for(; i < 3; ++i){
                /* istanbul ignore if */ if (this.pos >= this.len) {
                    throw indexOutOfRange(this);
                }
                // 1st..3th
                bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
                if (this.buf[this.pos++] < 128) {
                    return bits;
                }
            }
            // 4th
            bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;
            return bits;
        }
        if (this.len - this.pos > 4) {
            for(; i < 5; ++i){
                // 6th..10th
                bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
                if (this.buf[this.pos++] < 128) {
                    return bits;
                }
            }
        } else {
            for(; i < 5; ++i){
                if (this.pos >= this.len) {
                    throw indexOutOfRange(this);
                }
                // 6th..10th
                bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
                if (this.buf[this.pos++] < 128) {
                    return bits;
                }
            }
        }
        throw Error('invalid varint encoding');
    }
    readFixed64() {
        if (this.pos + 8 > this.len) {
            throw indexOutOfRange(this, 8);
        }
        const lo = readFixed32End(this.buf, this.pos += 4);
        const hi = readFixed32End(this.buf, this.pos += 4);
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$longbits$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LongBits"](lo, hi);
    }
    /**
     * Reads a varint as a signed 64 bit value
     */ int64() {
        return this.readLongVarint().toBigInt();
    }
    /**
     * Reads a varint as a signed 64 bit value returned as a possibly unsafe
     * JavaScript number
     */ int64Number() {
        return this.readLongVarint().toNumber();
    }
    /**
     * Reads a varint as a signed 64 bit value returned as a string
     */ int64String() {
        return this.readLongVarint().toString();
    }
    /**
     * Reads a varint as an unsigned 64 bit value
     */ uint64() {
        return this.readLongVarint().toBigInt(true);
    }
    /**
     * Reads a varint as an unsigned 64 bit value returned as a possibly unsafe
     * JavaScript number
     */ uint64Number() {
        const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8$2d$varint$40$2$2e$0$2e$4$2f$node_modules$2f$uint8$2d$varint$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeUint8Array"])(this.buf, this.pos);
        this.pos += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8$2d$varint$40$2$2e$0$2e$4$2f$node_modules$2f$uint8$2d$varint$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodingLength"])(value);
        return value;
    }
    /**
     * Reads a varint as an unsigned 64 bit value returned as a string
     */ uint64String() {
        return this.readLongVarint().toString(true);
    }
    /**
     * Reads a zig-zag encoded varint as a signed 64 bit value
     */ sint64() {
        return this.readLongVarint().zzDecode().toBigInt();
    }
    /**
     * Reads a zig-zag encoded varint as a signed 64 bit value returned as a
     * possibly unsafe JavaScript number
     */ sint64Number() {
        return this.readLongVarint().zzDecode().toNumber();
    }
    /**
     * Reads a zig-zag encoded varint as a signed 64 bit value returned as a
     * string
     */ sint64String() {
        return this.readLongVarint().zzDecode().toString();
    }
    /**
     * Reads fixed 64 bits
     */ fixed64() {
        return this.readFixed64().toBigInt();
    }
    /**
     * Reads fixed 64 bits returned as a possibly unsafe JavaScript number
     */ fixed64Number() {
        return this.readFixed64().toNumber();
    }
    /**
     * Reads fixed 64 bits returned as a string
     */ fixed64String() {
        return this.readFixed64().toString();
    }
    /**
     * Reads zig-zag encoded fixed 64 bits
     */ sfixed64() {
        return this.readFixed64().toBigInt();
    }
    /**
     * Reads zig-zag encoded fixed 64 bits returned as a possibly unsafe
     * JavaScript number
     */ sfixed64Number() {
        return this.readFixed64().toNumber();
    }
    /**
     * Reads zig-zag encoded fixed 64 bits returned as a string
     */ sfixed64String() {
        return this.readFixed64().toString();
    }
}
function createReader(buf) {
    return new Uint8ArrayReader(buf instanceof Uint8Array ? buf : buf.subarray());
} //# sourceMappingURL=reader.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/decode.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decodeMessage": (()=>decodeMessage)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$reader$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/reader.js [app-route] (ecmascript)");
;
function decodeMessage(buf, codec, opts) {
    const reader = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$reader$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createReader"])(buf);
    return codec.decode(reader, undefined, opts);
} //# sourceMappingURL=decode.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base10.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "base10": (()=>base10)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base.js [app-route] (ecmascript)");
;
const base10 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["baseX"])({
    prefix: '9',
    name: 'base10',
    alphabet: '0123456789'
}); //# sourceMappingURL=base10.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base16.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "base16": (()=>base16),
    "base16upper": (()=>base16upper)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base.js [app-route] (ecmascript)");
;
const base16 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'f',
    name: 'base16',
    alphabet: '0123456789abcdef',
    bitsPerChar: 4
});
const base16upper = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'F',
    name: 'base16upper',
    alphabet: '0123456789ABCDEF',
    bitsPerChar: 4
}); //# sourceMappingURL=base16.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base2.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "base2": (()=>base2)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base.js [app-route] (ecmascript)");
;
const base2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: '0',
    name: 'base2',
    alphabet: '01',
    bitsPerChar: 1
}); //# sourceMappingURL=base2.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base256emoji.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "base256emoji": (()=>base256emoji)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base.js [app-route] (ecmascript)");
;
const alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂');
const alphabetBytesToChars = alphabet.reduce((p, c, i)=>{
    p[i] = c;
    return p;
}, []);
const alphabetCharsToBytes = alphabet.reduce((p, c, i)=>{
    const codePoint = c.codePointAt(0);
    if (codePoint == null) {
        throw new Error(`Invalid character: ${c}`);
    }
    p[codePoint] = i;
    return p;
}, []);
function encode(data) {
    return data.reduce((p, c)=>{
        p += alphabetBytesToChars[c];
        return p;
    }, '');
}
function decode(str) {
    const byts = [];
    for (const char of str){
        const codePoint = char.codePointAt(0);
        if (codePoint == null) {
            throw new Error(`Invalid character: ${char}`);
        }
        const byt = alphabetCharsToBytes[codePoint];
        if (byt == null) {
            throw new Error(`Non-base256emoji character: ${char}`);
        }
        byts.push(byt);
    }
    return new Uint8Array(byts);
}
const base256emoji = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["from"])({
    prefix: '🚀',
    name: 'base256emoji',
    encode,
    decode
}); //# sourceMappingURL=base256emoji.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base64.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "base64": (()=>base64),
    "base64pad": (()=>base64pad),
    "base64url": (()=>base64url),
    "base64urlpad": (()=>base64urlpad)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base.js [app-route] (ecmascript)");
;
const base64 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'm',
    name: 'base64',
    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
    bitsPerChar: 6
});
const base64pad = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'M',
    name: 'base64pad',
    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
    bitsPerChar: 6
});
const base64url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'u',
    name: 'base64url',
    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',
    bitsPerChar: 6
});
const base64urlpad = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: 'U',
    name: 'base64urlpad',
    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',
    bitsPerChar: 6
}); //# sourceMappingURL=base64.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base8.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "base8": (()=>base8)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base.js [app-route] (ecmascript)");
;
const base8 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rfc4648"])({
    prefix: '7',
    name: 'base8',
    alphabet: '01234567',
    bitsPerChar: 3
}); //# sourceMappingURL=base8.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/identity.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "identity": (()=>identity)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bytes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base.js [app-route] (ecmascript)");
;
;
const identity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["from"])({
    prefix: '\x00',
    name: 'identity',
    encode: (buf)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["toString"])(buf),
    decode: (str)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fromString"])(str)
}); //# sourceMappingURL=identity.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/codecs/json.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "code": (()=>code),
    "decode": (()=>decode),
    "encode": (()=>encode),
    "name": (()=>name)
});
const textEncoder = new TextEncoder();
const textDecoder = new TextDecoder();
const name = 'json';
const code = 0x0200;
function encode(node) {
    return textEncoder.encode(JSON.stringify(node));
}
function decode(data) {
    return JSON.parse(textDecoder.decode(data));
} //# sourceMappingURL=json.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/identity.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "identity": (()=>identity)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bytes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/digest.js [app-route] (ecmascript)");
;
;
const code = 0x0;
const name = 'identity';
const encode = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["coerce"];
function digest(input) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$digest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.create(code, encode(input));
}
const identity = {
    code,
    name,
    encode,
    digest
}; //# sourceMappingURL=identity.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/sha2.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "sha256": (()=>sha256),
    "sha512": (()=>sha512)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__ = __turbopack_import__("[externals]/crypto [external] (crypto, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bytes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$hasher$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/hasher.js [app-route] (ecmascript)");
;
;
;
const sha256 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$hasher$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["from"])({
    name: 'sha2-256',
    code: 0x12,
    encode: (input)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["coerce"])(__TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHash('sha256').update(input).digest())
});
const sha512 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$hasher$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["from"])({
    name: 'sha2-512',
    code: 0x13,
    encode: (input)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["coerce"])(__TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHash('sha512').update(input).digest())
}); //# sourceMappingURL=sha2.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/basics.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "bases": (()=>bases),
    "codecs": (()=>codecs),
    "hashes": (()=>hashes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$identity$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/identity.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base2$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base2.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base8.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base10$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base10.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base16$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base16.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base32$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base32.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base36$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base36.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base58.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base64.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base256emoji$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base256emoji.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$sha2$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/sha2.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$identity$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/identity.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$codecs$2f$raw$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/codecs/raw.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$codecs$2f$json$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/codecs/json.js [app-route] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const bases = {
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$identity$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__,
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base2$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__,
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__,
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base10$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__,
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base16$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__,
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base32$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__,
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base36$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__,
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__,
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__,
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base256emoji$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__
};
const hashes = {
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$sha2$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__,
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$identity$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__
};
const codecs = {
    raw: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$codecs$2f$raw$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__,
    json: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$codecs$2f$json$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__
};
;
 //# sourceMappingURL=basics.js.map
}}),
"[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/basics.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base10$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base10.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base16$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base16.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base2$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base2.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base256emoji$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base256emoji.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base32$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base32.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base36$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base36.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base58$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base58.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base64.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$base8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/base8.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$bases$2f$identity$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/bases/identity.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$codecs$2f$json$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/codecs/json.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$codecs$2f$raw$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/codecs/raw.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$identity$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/identity.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$hashes$2f$sha2$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/hashes/sha2.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$basics$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/basics.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/uint8arrays@5.1.0/node_modules/uint8arrays/dist/src/util/bases.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$basics$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/basics.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$alloc$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/uint8arrays@5.1.0/node_modules/uint8arrays/dist/src/alloc.node.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$basics$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/basics.js [app-route] (ecmascript) <locals>");
;
;
function createCodec(name, prefix, encode, decode) {
    return {
        name,
        prefix,
        encoder: {
            name,
            prefix,
            encode
        },
        decoder: {
            decode
        }
    };
}
const string = createCodec('utf8', 'u', (buf)=>{
    const decoder = new TextDecoder('utf8');
    return 'u' + decoder.decode(buf);
}, (str)=>{
    const encoder = new TextEncoder();
    return encoder.encode(str.substring(1));
});
const ascii = createCodec('ascii', 'a', (buf)=>{
    let string = 'a';
    for(let i = 0; i < buf.length; i++){
        string += String.fromCharCode(buf[i]);
    }
    return string;
}, (str)=>{
    str = str.substring(1);
    const buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$alloc$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["allocUnsafe"])(str.length);
    for(let i = 0; i < str.length; i++){
        buf[i] = str.charCodeAt(i);
    }
    return buf;
});
const BASES = {
    utf8: string,
    'utf-8': string,
    hex: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$basics$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bases"].base16,
    latin1: ascii,
    ascii,
    binary: ascii,
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$basics$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bases"]
};
const __TURBOPACK__default__export__ = BASES;
 //# sourceMappingURL=bases.js.map
}}),
"[project]/node_modules/.pnpm/uint8arrays@5.1.0/node_modules/uint8arrays/dist/src/from-string.node.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "fromString": (()=>fromString)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$buffer__$5b$external$5d$__$28$node$3a$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/node:buffer [external] (node:buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$util$2f$bases$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/uint8arrays@5.1.0/node_modules/uint8arrays/dist/src/util/bases.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$util$2f$as$2d$uint8array$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/uint8arrays@5.1.0/node_modules/uint8arrays/dist/src/util/as-uint8array.node.js [app-route] (ecmascript)");
;
;
;
function fromString(string, encoding = 'utf8') {
    const base = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$util$2f$bases$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"][encoding];
    if (base == null) {
        throw new Error(`Unsupported encoding "${encoding}"`);
    }
    if (encoding === 'utf8' || encoding === 'utf-8') {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$util$2f$as$2d$uint8array$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["asUint8Array"])(__TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$buffer__$5b$external$5d$__$28$node$3a$buffer$2c$__cjs$29$__["Buffer"].from(string, 'utf-8'));
    }
    // add multibase prefix
    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions
} //# sourceMappingURL=from-string.node.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/pool.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>pool)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$alloc$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/uint8arrays@5.1.0/node_modules/uint8arrays/dist/src/alloc.node.js [app-route] (ecmascript)");
;
function pool(size) {
    const SIZE = size ?? 8192;
    const MAX = SIZE >>> 1;
    let slab;
    let offset = SIZE;
    return function poolAlloc(size) {
        if (size < 1 || size > MAX) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$alloc$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["allocUnsafe"])(size);
        }
        if (offset + size > SIZE) {
            slab = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$alloc$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["allocUnsafe"])(SIZE);
            offset = 0;
        }
        const buf = slab.subarray(offset, offset += size);
        if ((offset & 7) !== 0) {
            // align to 32 bit
            offset = (offset | 7) + 1;
        }
        return buf;
    };
} //# sourceMappingURL=pool.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/writer.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createWriter": (()=>createWriter)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8$2d$varint$40$2$2e$0$2e$4$2f$node_modules$2f$uint8$2d$varint$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/uint8-varint@2.0.4/node_modules/uint8-varint/dist/src/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$alloc$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/uint8arrays@5.1.0/node_modules/uint8arrays/dist/src/alloc.node.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$from$2d$string$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/uint8arrays@5.1.0/node_modules/uint8arrays/dist/src/from-string.node.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$float$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/float.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$longbits$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/longbits.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$pool$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/pool.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$utf8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/utf8.js [app-route] (ecmascript)");
;
;
;
;
;
;
;
/**
 * Constructs a new writer operation instance.
 *
 * @classdesc Scheduled writer operation
 */ class Op {
    /**
     * Function to call
     */ fn;
    /**
     * Value byte length
     */ len;
    /**
     * Next operation
     */ next;
    /**
     * Value to write
     */ val;
    constructor(fn, len, val){
        this.fn = fn;
        this.len = len;
        this.next = undefined;
        this.val = val; // type varies
    }
}
/* istanbul ignore next */ function noop() {} // eslint-disable-line no-empty-function
/**
 * Constructs a new writer state instance
 */ class State {
    /**
     * Current head
     */ head;
    /**
     * Current tail
     */ tail;
    /**
     * Current buffer length
     */ len;
    /**
     * Next state
     */ next;
    constructor(writer){
        this.head = writer.head;
        this.tail = writer.tail;
        this.len = writer.len;
        this.next = writer.states;
    }
}
const bufferPool = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$pool$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])();
/**
 * Allocates a buffer of the specified size
 */ function alloc(size) {
    if (globalThis.Buffer != null) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$alloc$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["allocUnsafe"])(size);
    }
    return bufferPool(size);
}
/**
 * When a value is written, the writer calculates its byte length and puts it into a linked
 * list of operations to perform when finish() is called. This both allows us to allocate
 * buffers of the exact required size and reduces the amount of work we have to do compared
 * to first calculating over objects and then encoding over objects. In our case, the encoding
 * part is just a linked list walk calling operations with already prepared values.
 */ class Uint8ArrayWriter {
    /**
     * Current length
     */ len;
    /**
     * Operations head
     */ head;
    /**
     * Operations tail
     */ tail;
    /**
     * Linked forked states
     */ states;
    constructor(){
        this.len = 0;
        this.head = new Op(noop, 0, 0);
        this.tail = this.head;
        this.states = null;
    }
    /**
     * Pushes a new operation to the queue
     */ _push(fn, len, val) {
        this.tail = this.tail.next = new Op(fn, len, val);
        this.len += len;
        return this;
    }
    /**
     * Writes an unsigned 32 bit value as a varint
     */ uint32(value) {
        // here, the call to this.push has been inlined and a varint specific Op subclass is used.
        // uint32 is by far the most frequently used operation and benefits significantly from this.
        this.len += (this.tail = this.tail.next = new VarintOp((value = value >>> 0) < 128 ? 1 : value < 16384 ? 2 : value < 2097152 ? 3 : value < 268435456 ? 4 : 5, value)).len;
        return this;
    }
    /**
     * Writes a signed 32 bit value as a varint`
     */ int32(value) {
        return value < 0 ? this._push(writeVarint64, 10, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$longbits$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LongBits"].fromNumber(value)) // 10 bytes per spec
         : this.uint32(value);
    }
    /**
     * Writes a 32 bit value as a varint, zig-zag encoded
     */ sint32(value) {
        return this.uint32((value << 1 ^ value >> 31) >>> 0);
    }
    /**
     * Writes an unsigned 64 bit value as a varint
     */ uint64(value) {
        const bits = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$longbits$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LongBits"].fromBigInt(value);
        return this._push(writeVarint64, bits.length(), bits);
    }
    /**
     * Writes an unsigned 64 bit value as a varint
     */ uint64Number(value) {
        return this._push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8$2d$varint$40$2$2e$0$2e$4$2f$node_modules$2f$uint8$2d$varint$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeUint8Array"], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8$2d$varint$40$2$2e$0$2e$4$2f$node_modules$2f$uint8$2d$varint$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodingLength"])(value), value);
    }
    /**
     * Writes an unsigned 64 bit value as a varint
     */ uint64String(value) {
        return this.uint64(BigInt(value));
    }
    /**
     * Writes a signed 64 bit value as a varint
     */ int64(value) {
        return this.uint64(value);
    }
    /**
     * Writes a signed 64 bit value as a varint
     */ int64Number(value) {
        return this.uint64Number(value);
    }
    /**
     * Writes a signed 64 bit value as a varint
     */ int64String(value) {
        return this.uint64String(value);
    }
    /**
     * Writes a signed 64 bit value as a varint, zig-zag encoded
     */ sint64(value) {
        const bits = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$longbits$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LongBits"].fromBigInt(value).zzEncode();
        return this._push(writeVarint64, bits.length(), bits);
    }
    /**
     * Writes a signed 64 bit value as a varint, zig-zag encoded
     */ sint64Number(value) {
        const bits = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$longbits$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LongBits"].fromNumber(value).zzEncode();
        return this._push(writeVarint64, bits.length(), bits);
    }
    /**
     * Writes a signed 64 bit value as a varint, zig-zag encoded
     */ sint64String(value) {
        return this.sint64(BigInt(value));
    }
    /**
     * Writes a boolish value as a varint
     */ bool(value) {
        return this._push(writeByte, 1, value ? 1 : 0);
    }
    /**
     * Writes an unsigned 32 bit value as fixed 32 bits
     */ fixed32(value) {
        return this._push(writeFixed32, 4, value >>> 0);
    }
    /**
     * Writes a signed 32 bit value as fixed 32 bits
     */ sfixed32(value) {
        return this.fixed32(value);
    }
    /**
     * Writes an unsigned 64 bit value as fixed 64 bits
     */ fixed64(value) {
        const bits = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$longbits$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LongBits"].fromBigInt(value);
        return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);
    }
    /**
     * Writes an unsigned 64 bit value as fixed 64 bits
     */ fixed64Number(value) {
        const bits = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$longbits$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LongBits"].fromNumber(value);
        return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);
    }
    /**
     * Writes an unsigned 64 bit value as fixed 64 bits
     */ fixed64String(value) {
        return this.fixed64(BigInt(value));
    }
    /**
     * Writes a signed 64 bit value as fixed 64 bits
     */ sfixed64(value) {
        return this.fixed64(value);
    }
    /**
     * Writes a signed 64 bit value as fixed 64 bits
     */ sfixed64Number(value) {
        return this.fixed64Number(value);
    }
    /**
     * Writes a signed 64 bit value as fixed 64 bits
     */ sfixed64String(value) {
        return this.fixed64String(value);
    }
    /**
     * Writes a float (32 bit)
     */ float(value) {
        return this._push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$float$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["writeFloatLE"], 4, value);
    }
    /**
     * Writes a double (64 bit float).
     *
     * @function
     * @param {number} value - Value to write
     * @returns {Writer} `this`
     */ double(value) {
        return this._push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$float$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["writeDoubleLE"], 8, value);
    }
    /**
     * Writes a sequence of bytes
     */ bytes(value) {
        const len = value.length >>> 0;
        if (len === 0) {
            return this._push(writeByte, 1, 0);
        }
        return this.uint32(len)._push(writeBytes, len, value);
    }
    /**
     * Writes a string
     */ string(value) {
        const len = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$utf8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.length(value);
        return len !== 0 ? this.uint32(len)._push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$utf8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.write, len, value) : this._push(writeByte, 1, 0);
    }
    /**
     * Forks this writer's state by pushing it to a stack.
     * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.
     */ fork() {
        this.states = new State(this);
        this.head = this.tail = new Op(noop, 0, 0);
        this.len = 0;
        return this;
    }
    /**
     * Resets this instance to the last state
     */ reset() {
        if (this.states != null) {
            this.head = this.states.head;
            this.tail = this.states.tail;
            this.len = this.states.len;
            this.states = this.states.next;
        } else {
            this.head = this.tail = new Op(noop, 0, 0);
            this.len = 0;
        }
        return this;
    }
    /**
     * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.
     */ ldelim() {
        const head = this.head;
        const tail = this.tail;
        const len = this.len;
        this.reset().uint32(len);
        if (len !== 0) {
            this.tail.next = head.next; // skip noop
            this.tail = tail;
            this.len += len;
        }
        return this;
    }
    /**
     * Finishes the write operation
     */ finish() {
        let head = this.head.next; // skip noop
        const buf = alloc(this.len);
        let pos = 0;
        while(head != null){
            head.fn(head.val, buf, pos);
            pos += head.len;
            head = head.next;
        }
        // this.head = this.tail = null;
        return buf;
    }
}
function writeByte(val, buf, pos) {
    buf[pos] = val & 255;
}
function writeVarint32(val, buf, pos) {
    while(val > 127){
        buf[pos++] = val & 127 | 128;
        val >>>= 7;
    }
    buf[pos] = val;
}
/**
 * Constructs a new varint writer operation instance.
 *
 * @classdesc Scheduled varint writer operation
 */ class VarintOp extends Op {
    next;
    constructor(len, val){
        super(writeVarint32, len, val);
        this.next = undefined;
    }
}
function writeVarint64(val, buf, pos) {
    while(val.hi !== 0){
        buf[pos++] = val.lo & 127 | 128;
        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;
        val.hi >>>= 7;
    }
    while(val.lo > 127){
        buf[pos++] = val.lo & 127 | 128;
        val.lo = val.lo >>> 7;
    }
    buf[pos++] = val.lo;
}
function writeFixed32(val, buf, pos) {
    buf[pos] = val & 255;
    buf[pos + 1] = val >>> 8 & 255;
    buf[pos + 2] = val >>> 16 & 255;
    buf[pos + 3] = val >>> 24;
}
function writeBytes(val, buf, pos) {
    buf.set(val, pos);
}
if (globalThis.Buffer != null) {
    Uint8ArrayWriter.prototype.bytes = function(value) {
        const len = value.length >>> 0;
        this.uint32(len);
        if (len > 0) {
            this._push(writeBytesBuffer, len, value);
        }
        return this;
    };
    Uint8ArrayWriter.prototype.string = function(value) {
        const len = globalThis.Buffer.byteLength(value);
        this.uint32(len);
        if (len > 0) {
            this._push(writeStringBuffer, len, value);
        }
        return this;
    };
}
function writeBytesBuffer(val, buf, pos) {
    buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)
// also works for plain array values
}
function writeStringBuffer(val, buf, pos) {
    if (val.length < 40) {
        // plain js is faster for short strings (probably due to redundant assertions)
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$utf8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.write(val, buf, pos);
    // @ts-expect-error buf isn't a Uint8Array?
    } else if (buf.utf8Write != null) {
        // @ts-expect-error buf isn't a Uint8Array?
        buf.utf8Write(val, pos);
    } else {
        buf.set((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$uint8arrays$40$5$2e$1$2e$0$2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$from$2d$string$2e$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fromString"])(val), pos);
    }
}
function createWriter() {
    return new Uint8ArrayWriter();
} //# sourceMappingURL=writer.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/encode.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "encodeMessage": (()=>encodeMessage)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$writer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/writer.js [app-route] (ecmascript)");
;
function encodeMessage(message, codec) {
    const w = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$writer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createWriter"])();
    codec.encode(message, w, {
        lengthDelimited: false
    });
    return w.finish();
} //# sourceMappingURL=encode.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/codec.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// https://developers.google.com/protocol-buffers/docs/encoding#structure
__turbopack_esm__({
    "CODEC_TYPES": (()=>CODEC_TYPES),
    "createCodec": (()=>createCodec)
});
var CODEC_TYPES;
(function(CODEC_TYPES) {
    CODEC_TYPES[CODEC_TYPES["VARINT"] = 0] = "VARINT";
    CODEC_TYPES[CODEC_TYPES["BIT64"] = 1] = "BIT64";
    CODEC_TYPES[CODEC_TYPES["LENGTH_DELIMITED"] = 2] = "LENGTH_DELIMITED";
    CODEC_TYPES[CODEC_TYPES["START_GROUP"] = 3] = "START_GROUP";
    CODEC_TYPES[CODEC_TYPES["END_GROUP"] = 4] = "END_GROUP";
    CODEC_TYPES[CODEC_TYPES["BIT32"] = 5] = "BIT32";
})(CODEC_TYPES || (CODEC_TYPES = {}));
function createCodec(name, type, encode, decode) {
    return {
        name,
        type,
        encode,
        decode
    };
} //# sourceMappingURL=codec.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/codecs/enum.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "enumeration": (()=>enumeration)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codec$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/codec.js [app-route] (ecmascript)");
;
function enumeration(v) {
    function findValue(val) {
        // Use the reverse mapping to look up the enum key for the stored value
        // https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings
        if (v[val.toString()] == null) {
            throw new Error('Invalid enum value');
        }
        return v[val];
    }
    const encode = function enumEncode(val, writer) {
        const enumValue = findValue(val);
        writer.int32(enumValue);
    };
    const decode = function enumDecode(reader) {
        const val = reader.int32();
        return findValue(val);
    };
    // @ts-expect-error yeah yeah
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codec$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createCodec"])('enum', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codec$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CODEC_TYPES"].VARINT, encode, decode);
} //# sourceMappingURL=enum.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/codecs/message.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "message": (()=>message)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codec$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/codec.js [app-route] (ecmascript)");
;
function message(encode, decode) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codec$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createCodec"])('message', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codec$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CODEC_TYPES"].LENGTH_DELIMITED, encode, decode);
} //# sourceMappingURL=message.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * @packageDocumentation
 *
 * This module contains serialization/deserialization code used when encoding/decoding protobufs.
 *
 * It should be declared as a dependency of your project:
 *
 * ```console
 * npm i protons-runtime
 * ```
 */ __turbopack_esm__({
    "CodeError": (()=>CodeError),
    "MaxLengthError": (()=>MaxLengthError),
    "MaxSizeError": (()=>MaxSizeError),
    "NoMessagesFoundError": (()=>NoMessagesFoundError),
    "ParseError": (()=>ParseError)
});
;
;
;
;
;
;
class CodeError extends Error {
    code;
    constructor(message, code){
        super(message);
        this.code = code;
    }
}
class MaxLengthError extends Error {
    /**
     * This will be removed in a future release
     *
     * @deprecated use the `.name` property instead
     */ code = 'ERR_MAX_LENGTH';
    name = 'MaxLengthError';
}
class MaxSizeError extends Error {
    /**
     * This will be removed in a future release
     *
     * @deprecated use the `.name` property instead
     */ code = 'ERR_MAX_SIZE';
    name = 'MaxSizeError';
}
class ParseError extends Error {
    /**
     * This will be removed in a future release
     *
     * @deprecated use the `.name` property instead
     */ code = 'ERR_PARSE_ERROR';
    name = 'ParseError';
}
class NoMessagesFoundError extends Error {
    /**
     * This will be removed in a future release
     *
     * @deprecated use the `.name` property instead
     */ code = 'ERR_NO_MESSAGES_FOUND';
    name = 'NoMessagesFoundError';
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$decode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/decode.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$encode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/encode.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codecs$2f$enum$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/codecs/enum.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codecs$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/codecs/message.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$reader$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/reader.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$utils$2f$writer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/utils/writer.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/protobuf/OnchainMetadata.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ __turbopack_esm__({
    "CompressionAlgorithm": (()=>CompressionAlgorithm),
    "CompressionOptions": (()=>CompressionOptions),
    "EncryptionAlgorithm": (()=>EncryptionAlgorithm),
    "EncryptionOptions": (()=>EncryptionOptions),
    "FileUploadOptions": (()=>FileUploadOptions),
    "IPLDNodeData": (()=>IPLDNodeData),
    "MetadataType": (()=>MetadataType)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codecs$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/codecs/message.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$encode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/encode.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$decode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/decode.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codecs$2f$enum$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/protons-runtime@5.5.0/node_modules/protons-runtime/dist/src/codecs/enum.js [app-route] (ecmascript)");
;
var IPLDNodeData;
(function(IPLDNodeData) {
    let _codec;
    IPLDNodeData.codec = ()=>{
        if (_codec == null) {
            _codec = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codecs$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["message"])((obj, w, opts = {})=>{
                if (opts.lengthDelimited !== false) {
                    w.fork();
                }
                if (obj.type != null && __MetadataTypeValues[obj.type] !== 0) {
                    w.uint32(8);
                    MetadataType.codec().encode(obj.type, w);
                }
                if (obj.linkDepth != null && obj.linkDepth !== 0) {
                    w.uint32(16);
                    w.int32(obj.linkDepth);
                }
                if (obj.size != null) {
                    w.uint32(24);
                    w.int64(obj.size);
                }
                if (obj.name != null) {
                    w.uint32(34);
                    w.string(obj.name);
                }
                if (obj.data != null) {
                    w.uint32(42);
                    w.bytes(obj.data);
                }
                if (obj.uploadOptions != null) {
                    w.uint32(50);
                    FileUploadOptions.codec().encode(obj.uploadOptions, w);
                }
                if (opts.lengthDelimited !== false) {
                    w.ldelim();
                }
            }, (reader, length, opts = {})=>{
                var _a;
                const obj = {
                    type: MetadataType.File,
                    linkDepth: 0
                };
                const end = length == null ? reader.len : reader.pos + length;
                while(reader.pos < end){
                    const tag = reader.uint32();
                    switch(tag >>> 3){
                        case 1:
                            {
                                obj.type = MetadataType.codec().decode(reader);
                                break;
                            }
                        case 2:
                            {
                                obj.linkDepth = reader.int32();
                                break;
                            }
                        case 3:
                            {
                                obj.size = reader.int64();
                                break;
                            }
                        case 4:
                            {
                                obj.name = reader.string();
                                break;
                            }
                        case 5:
                            {
                                obj.data = reader.bytes();
                                break;
                            }
                        case 6:
                            {
                                obj.uploadOptions = FileUploadOptions.codec().decode(reader, reader.uint32(), {
                                    limits: (_a = opts.limits) === null || _a === void 0 ? void 0 : _a.uploadOptions
                                });
                                break;
                            }
                        default:
                            {
                                reader.skipType(tag & 7);
                                break;
                            }
                    }
                }
                return obj;
            });
        }
        return _codec;
    };
    IPLDNodeData.encode = (obj)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$encode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeMessage"])(obj, IPLDNodeData.codec());
    };
    IPLDNodeData.decode = (buf, opts)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$decode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeMessage"])(buf, IPLDNodeData.codec(), opts);
    };
})(IPLDNodeData || (IPLDNodeData = {}));
var MetadataType;
(function(MetadataType) {
    MetadataType["File"] = "File";
    MetadataType["FileInlink"] = "FileInlink";
    MetadataType["FileChunk"] = "FileChunk";
    MetadataType["Folder"] = "Folder";
    MetadataType["FolderInlink"] = "FolderInlink";
    MetadataType["Metadata"] = "Metadata";
    MetadataType["MetadataInlink"] = "MetadataInlink";
    MetadataType["MetadataChunk"] = "MetadataChunk";
})(MetadataType || (MetadataType = {}));
var __MetadataTypeValues;
(function(__MetadataTypeValues) {
    __MetadataTypeValues[__MetadataTypeValues["File"] = 0] = "File";
    __MetadataTypeValues[__MetadataTypeValues["FileInlink"] = 1] = "FileInlink";
    __MetadataTypeValues[__MetadataTypeValues["FileChunk"] = 2] = "FileChunk";
    __MetadataTypeValues[__MetadataTypeValues["Folder"] = 3] = "Folder";
    __MetadataTypeValues[__MetadataTypeValues["FolderInlink"] = 4] = "FolderInlink";
    __MetadataTypeValues[__MetadataTypeValues["Metadata"] = 5] = "Metadata";
    __MetadataTypeValues[__MetadataTypeValues["MetadataInlink"] = 6] = "MetadataInlink";
    __MetadataTypeValues[__MetadataTypeValues["MetadataChunk"] = 7] = "MetadataChunk";
})(__MetadataTypeValues || (__MetadataTypeValues = {}));
(function(MetadataType) {
    MetadataType.codec = ()=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codecs$2f$enum$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["enumeration"])(__MetadataTypeValues);
    };
})(MetadataType || (MetadataType = {}));
var FileUploadOptions;
(function(FileUploadOptions) {
    let _codec;
    FileUploadOptions.codec = ()=>{
        if (_codec == null) {
            _codec = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codecs$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["message"])((obj, w, opts = {})=>{
                if (opts.lengthDelimited !== false) {
                    w.fork();
                }
                if (obj.compression != null) {
                    w.uint32(10);
                    CompressionOptions.codec().encode(obj.compression, w);
                }
                if (obj.encryption != null) {
                    w.uint32(18);
                    EncryptionOptions.codec().encode(obj.encryption, w);
                }
                if (opts.lengthDelimited !== false) {
                    w.ldelim();
                }
            }, (reader, length, opts = {})=>{
                var _a, _b;
                const obj = {};
                const end = length == null ? reader.len : reader.pos + length;
                while(reader.pos < end){
                    const tag = reader.uint32();
                    switch(tag >>> 3){
                        case 1:
                            {
                                obj.compression = CompressionOptions.codec().decode(reader, reader.uint32(), {
                                    limits: (_a = opts.limits) === null || _a === void 0 ? void 0 : _a.compression
                                });
                                break;
                            }
                        case 2:
                            {
                                obj.encryption = EncryptionOptions.codec().decode(reader, reader.uint32(), {
                                    limits: (_b = opts.limits) === null || _b === void 0 ? void 0 : _b.encryption
                                });
                                break;
                            }
                        default:
                            {
                                reader.skipType(tag & 7);
                                break;
                            }
                    }
                }
                return obj;
            });
        }
        return _codec;
    };
    FileUploadOptions.encode = (obj)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$encode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeMessage"])(obj, FileUploadOptions.codec());
    };
    FileUploadOptions.decode = (buf, opts)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$decode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeMessage"])(buf, FileUploadOptions.codec(), opts);
    };
})(FileUploadOptions || (FileUploadOptions = {}));
var CompressionOptions;
(function(CompressionOptions) {
    let _codec;
    CompressionOptions.codec = ()=>{
        if (_codec == null) {
            _codec = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codecs$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["message"])((obj, w, opts = {})=>{
                if (opts.lengthDelimited !== false) {
                    w.fork();
                }
                if (obj.algorithm != null && __CompressionAlgorithmValues[obj.algorithm] !== 0) {
                    w.uint32(8);
                    CompressionAlgorithm.codec().encode(obj.algorithm, w);
                }
                if (obj.level != null) {
                    w.uint32(16);
                    w.int32(obj.level);
                }
                if (obj.chunkSize != null) {
                    w.uint32(24);
                    w.int32(obj.chunkSize);
                }
                if (opts.lengthDelimited !== false) {
                    w.ldelim();
                }
            }, (reader, length, opts = {})=>{
                const obj = {
                    algorithm: CompressionAlgorithm.ZLIB
                };
                const end = length == null ? reader.len : reader.pos + length;
                while(reader.pos < end){
                    const tag = reader.uint32();
                    switch(tag >>> 3){
                        case 1:
                            {
                                obj.algorithm = CompressionAlgorithm.codec().decode(reader);
                                break;
                            }
                        case 2:
                            {
                                obj.level = reader.int32();
                                break;
                            }
                        case 3:
                            {
                                obj.chunkSize = reader.int32();
                                break;
                            }
                        default:
                            {
                                reader.skipType(tag & 7);
                                break;
                            }
                    }
                }
                return obj;
            });
        }
        return _codec;
    };
    CompressionOptions.encode = (obj)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$encode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeMessage"])(obj, CompressionOptions.codec());
    };
    CompressionOptions.decode = (buf, opts)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$decode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeMessage"])(buf, CompressionOptions.codec(), opts);
    };
})(CompressionOptions || (CompressionOptions = {}));
var EncryptionOptions;
(function(EncryptionOptions) {
    let _codec;
    EncryptionOptions.codec = ()=>{
        if (_codec == null) {
            _codec = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codecs$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["message"])((obj, w, opts = {})=>{
                if (opts.lengthDelimited !== false) {
                    w.fork();
                }
                if (obj.algorithm != null && __EncryptionAlgorithmValues[obj.algorithm] !== 0) {
                    w.uint32(8);
                    EncryptionAlgorithm.codec().encode(obj.algorithm, w);
                }
                if (obj.chunkSize != null) {
                    w.uint32(16);
                    w.int32(obj.chunkSize);
                }
                if (opts.lengthDelimited !== false) {
                    w.ldelim();
                }
            }, (reader, length, opts = {})=>{
                const obj = {
                    algorithm: EncryptionAlgorithm.AES_256_GCM
                };
                const end = length == null ? reader.len : reader.pos + length;
                while(reader.pos < end){
                    const tag = reader.uint32();
                    switch(tag >>> 3){
                        case 1:
                            {
                                obj.algorithm = EncryptionAlgorithm.codec().decode(reader);
                                break;
                            }
                        case 2:
                            {
                                obj.chunkSize = reader.int32();
                                break;
                            }
                        default:
                            {
                                reader.skipType(tag & 7);
                                break;
                            }
                    }
                }
                return obj;
            });
        }
        return _codec;
    };
    EncryptionOptions.encode = (obj)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$encode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeMessage"])(obj, EncryptionOptions.codec());
    };
    EncryptionOptions.decode = (buf, opts)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$decode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeMessage"])(buf, EncryptionOptions.codec(), opts);
    };
})(EncryptionOptions || (EncryptionOptions = {}));
var CompressionAlgorithm;
(function(CompressionAlgorithm) {
    CompressionAlgorithm["ZLIB"] = "ZLIB";
})(CompressionAlgorithm || (CompressionAlgorithm = {}));
var __CompressionAlgorithmValues;
(function(__CompressionAlgorithmValues) {
    __CompressionAlgorithmValues[__CompressionAlgorithmValues["ZLIB"] = 0] = "ZLIB";
})(__CompressionAlgorithmValues || (__CompressionAlgorithmValues = {}));
(function(CompressionAlgorithm) {
    CompressionAlgorithm.codec = ()=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codecs$2f$enum$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["enumeration"])(__CompressionAlgorithmValues);
    };
})(CompressionAlgorithm || (CompressionAlgorithm = {}));
var EncryptionAlgorithm;
(function(EncryptionAlgorithm) {
    EncryptionAlgorithm["AES_256_GCM"] = "AES_256_GCM";
})(EncryptionAlgorithm || (EncryptionAlgorithm = {}));
var __EncryptionAlgorithmValues;
(function(__EncryptionAlgorithmValues) {
    __EncryptionAlgorithmValues[__EncryptionAlgorithmValues["AES_256_GCM"] = 0] = "AES_256_GCM";
})(__EncryptionAlgorithmValues || (__EncryptionAlgorithmValues = {}));
(function(EncryptionAlgorithm) {
    EncryptionAlgorithm.codec = ()=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$protons$2d$runtime$40$5$2e$5$2e$0$2f$node_modules$2f$protons$2d$runtime$2f$dist$2f$src$2f$codecs$2f$enum$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["enumeration"])(__EncryptionAlgorithmValues);
    };
})(EncryptionAlgorithm || (EncryptionAlgorithm = {}));
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/utils/metadata.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "stringifyMetadata": (()=>stringifyMetadata)
});
const stringifyMetadata = (metadata)=>JSON.stringify(metadata, (_, v)=>typeof v === 'bigint' || v instanceof BigInt ? v.toString() : v);
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/chunker.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "DEFAULT_MAX_CHUNK_SIZE": (()=>DEFAULT_MAX_CHUNK_SIZE),
    "DEFAULT_MAX_LINK_PER_NODE": (()=>DEFAULT_MAX_LINK_PER_NODE),
    "DEFAULT_NODE_MAX_SIZE": (()=>DEFAULT_NODE_MAX_SIZE),
    "LINK_SIZE_IN_BYTES": (()=>LINK_SIZE_IN_BYTES),
    "MAX_NAME_SIZE": (()=>MAX_NAME_SIZE),
    "NODE_METADATA_SIZE": (()=>NODE_METADATA_SIZE),
    "ensureNodeMaxSize": (()=>ensureNodeMaxSize),
    "processBufferToIPLDFormatFromChunks": (()=>processBufferToIPLDFormatFromChunks),
    "processChunksToIPLDFormat": (()=>processChunksToIPLDFormat),
    "processFileToIPLDFormat": (()=>processFileToIPLDFormat),
    "processFolderToIPLDFormat": (()=>processFolderToIPLDFormat),
    "processMetadataToIPLDFormat": (()=>processMetadataToIPLDFormat)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/cid/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$utils$2f$metadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/utils/metadata.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$builders$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/builders.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/nodes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__encode__as__encodeNode$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js [app-route] (ecmascript) <locals> <export encode as encodeNode>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/utils.js [app-route] (ecmascript)");
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __await = this && this.__await || function(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
};
var __asyncGenerator = this && this.__asyncGenerator || function(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function awaitReturn(f) {
        return function(v) {
            return Promise.resolve(v).then(f, reject);
        };
    }
    function verb(n, f) {
        if (g[n]) {
            i[n] = function(v) {
                return new Promise(function(a, b) {
                    q.push([
                        n,
                        v,
                        a,
                        b
                    ]) > 1 || resume(n, v);
                });
            };
            if (f) i[n] = f(i[n]);
        }
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
};
var __asyncValues = this && this.__asyncValues || function(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
};
;
;
;
;
;
;
const DEFAULT_NODE_MAX_SIZE = 65535;
// u8 -> 1 byte (may grow in the future but unlikely further than 255)
const NODE_TYPE_SIZE = 1;
// u32 -> 4 bytes
const NODE_LINK_DEPTH_SIZE = 4;
// u64 -> 8 bytes
const NODE_SIZE_SIZE = 8;
const MAX_NAME_SIZE = 255;
const END_OF_STRING_BYTE = 1;
const NODE_NAME_SIZE = MAX_NAME_SIZE + END_OF_STRING_BYTE;
// Upload options may be amplified in the future
const NODE_UPLOAD_OPTIONS_SIZE = 100;
// Reserve 100 bytes for future use
const NODE_RESERVED_SIZE = 100;
const NODE_METADATA_SIZE = NODE_TYPE_SIZE + NODE_LINK_DEPTH_SIZE + NODE_SIZE_SIZE + NODE_NAME_SIZE + NODE_RESERVED_SIZE + NODE_UPLOAD_OPTIONS_SIZE;
const DEFAULT_MAX_CHUNK_SIZE = DEFAULT_NODE_MAX_SIZE - NODE_METADATA_SIZE;
const LINK_SIZE_IN_BYTES = 40;
const DEFAULT_MAX_LINK_PER_NODE = Math.floor(DEFAULT_MAX_CHUNK_SIZE / LINK_SIZE_IN_BYTES);
const processFileToIPLDFormat = (blockstore, file, totalSize, filename, { maxNodeSize = DEFAULT_NODE_MAX_SIZE, maxLinkPerNode = DEFAULT_MAX_LINK_PER_NODE, encryption = undefined, compression = undefined } = {
    maxNodeSize: DEFAULT_NODE_MAX_SIZE,
    maxLinkPerNode: DEFAULT_MAX_LINK_PER_NODE,
    encryption: undefined,
    compression: undefined
})=>{
    if (filename && filename.length > MAX_NAME_SIZE) {
        throw new Error(`Filename is too long: ${filename.length} > ${MAX_NAME_SIZE}`);
    }
    return processBufferToIPLDFormat(blockstore, file, filename, totalSize, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$builders$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fileBuilders"], {
        maxNodeSize,
        maxLinkPerNode,
        encryption,
        compression
    });
};
const processMetadataToIPLDFormat = (blockstore_1, metadata_1, ...args_1)=>__awaiter(void 0, [
        blockstore_1,
        metadata_1,
        ...args_1
    ], void 0, function*(blockstore, metadata, limits = {
        maxNodeSize: DEFAULT_NODE_MAX_SIZE,
        maxLinkPerNode: DEFAULT_MAX_LINK_PER_NODE
    }) {
        if (metadata.name && metadata.name.length > MAX_NAME_SIZE) {
            throw new Error(`Filename is too long: ${metadata.name.length} > ${MAX_NAME_SIZE}`);
        }
        const buffer = Buffer.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$utils$2f$metadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringifyMetadata"])(metadata));
        return processBufferToIPLDFormat(blockstore, function() {
            return __asyncGenerator(this, arguments, function*() {
                yield yield __await(buffer);
            });
        }(), metadata.name, BigInt(buffer.byteLength), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$builders$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["metadataBuilders"], limits);
    });
const processBufferToIPLDFormat = (blockstore_1, buffer_1, filename_1, totalSize_1, builders_1, ...args_1)=>__awaiter(void 0, [
        blockstore_1,
        buffer_1,
        filename_1,
        totalSize_1,
        builders_1,
        ...args_1
    ], void 0, function*(blockstore, buffer, filename, totalSize, builders, { maxNodeSize: maxNodeSize = DEFAULT_NODE_MAX_SIZE, maxLinkPerNode = DEFAULT_MAX_LINK_PER_NODE, encryption = undefined, compression = undefined } = {
        maxNodeSize: DEFAULT_NODE_MAX_SIZE,
        maxLinkPerNode: DEFAULT_MAX_LINK_PER_NODE,
        encryption: undefined,
        compression: undefined
    }) {
        var _a, e_1, _b, _c;
        if (filename && filename.length > MAX_NAME_SIZE) {
            throw new Error(`Filename is too long: ${filename.length} > ${MAX_NAME_SIZE}`);
        }
        const bufferChunks = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["chunkBuffer"])(buffer, {
            maxChunkSize: maxNodeSize - NODE_METADATA_SIZE
        });
        let CIDs = [];
        try {
            for(var _d = true, bufferChunks_1 = __asyncValues(bufferChunks), bufferChunks_1_1; bufferChunks_1_1 = yield bufferChunks_1.next(), _a = bufferChunks_1_1.done, !_a; _d = true){
                _c = bufferChunks_1_1.value;
                _d = false;
                const chunk = _c;
                const node = builders.chunk(chunk);
                const cid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidOfNode"])(node);
                yield blockstore.put(cid, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__encode__as__encodeNode$3e$__["encodeNode"])(node));
                CIDs.push(cid);
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (!_d && !_a && (_b = bufferChunks_1.return)) yield _b.call(bufferChunks_1);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        return processBufferToIPLDFormatFromChunks(blockstore, CIDs, filename, totalSize, builders, {
            maxLinkPerNode,
            maxNodeSize,
            encryption,
            compression
        });
    });
const processBufferToIPLDFormatFromChunks = (blockstore_1, chunks_1, filename_1, totalSize_1, builders_1, ...args_1)=>__awaiter(void 0, [
        blockstore_1,
        chunks_1,
        filename_1,
        totalSize_1,
        builders_1,
        ...args_1
    ], void 0, function*(blockstore, chunks, filename, totalSize, builders, { maxNodeSize: maxNodeSize = DEFAULT_NODE_MAX_SIZE, maxLinkPerNode = DEFAULT_MAX_LINK_PER_NODE, encryption = undefined, compression = undefined } = {
        maxNodeSize: DEFAULT_NODE_MAX_SIZE,
        maxLinkPerNode: DEFAULT_MAX_LINK_PER_NODE,
        encryption: undefined,
        compression: undefined
    }) {
        var _a, chunks_2, chunks_2_1;
        var _b, e_2, _c, _d;
        if (filename && filename.length > MAX_NAME_SIZE) {
            throw new Error(`Filename is too long: ${filename.length} > ${MAX_NAME_SIZE}`);
        }
        let chunkCount = 0;
        let CIDs = [];
        try {
            for(_a = true, chunks_2 = __asyncValues(chunks); chunks_2_1 = yield chunks_2.next(), _b = chunks_2_1.done, !_b; _a = true){
                _d = chunks_2_1.value;
                _a = false;
                const chunk = _d;
                CIDs.push(chunk);
                chunkCount++;
            }
        } catch (e_2_1) {
            e_2 = {
                error: e_2_1
            };
        } finally{
            try {
                if (!_a && !_b && (_c = chunks_2.return)) yield _c.call(chunks_2);
            } finally{
                if (e_2) throw e_2.error;
            }
        }
        if (CIDs.length === 1) {
            const nodeBytes = yield blockstore.get(CIDs[0]);
            yield blockstore.delete(CIDs[0]);
            const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeIPLDNodeData"])(nodeBytes);
            const singleNode = builders.single(Buffer.from(data.data), filename, {
                compression,
                encryption
            });
            yield blockstore.put((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidOfNode"])(singleNode), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__encode__as__encodeNode$3e$__["encodeNode"])(singleNode));
            const headCID = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidOfNode"])(singleNode);
            return headCID;
        }
        let depth = 1;
        while(CIDs.length > maxLinkPerNode){
            const newCIDs = [];
            for(let i = 0; i < CIDs.length; i += maxLinkPerNode){
                const chunk = CIDs.slice(i, i + maxLinkPerNode);
                const node = builders.inlink(chunk, chunk.length, depth, maxNodeSize);
                const cid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidOfNode"])(node);
                yield blockstore.put(cid, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__encode__as__encodeNode$3e$__["encodeNode"])(node));
                newCIDs.push(cid);
            }
            depth++;
            CIDs = newCIDs;
        }
        const head = builders.root(CIDs, totalSize, depth, filename, maxNodeSize, {
            compression,
            encryption
        });
        const headCID = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidOfNode"])(head);
        yield blockstore.put(headCID, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__encode__as__encodeNode$3e$__["encodeNode"])(head));
        return headCID;
    });
const processFolderToIPLDFormat = (blockstore_1, children_1, name_1, size_1, ...args_1)=>__awaiter(void 0, [
        blockstore_1,
        children_1,
        name_1,
        size_1,
        ...args_1
    ], void 0, function*(blockstore, children, name, size, { maxLinkPerNode = DEFAULT_MAX_LINK_PER_NODE, maxNodeSize: maxNodeSize = DEFAULT_NODE_MAX_SIZE, compression = undefined, encryption = undefined } = {
        maxLinkPerNode: DEFAULT_MAX_LINK_PER_NODE,
        maxNodeSize: DEFAULT_NODE_MAX_SIZE,
        compression: undefined,
        encryption: undefined
    }) {
        if (name.length > MAX_NAME_SIZE) {
            throw new Error(`Filename is too long: ${name.length} > ${MAX_NAME_SIZE}`);
        }
        let cids = children;
        let depth = 0;
        while(cids.length > maxLinkPerNode){
            const newCIDs = [];
            for(let i = 0; i < cids.length; i += maxLinkPerNode){
                const chunk = cids.slice(i, i + maxLinkPerNode);
                const node = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createFolderInlinkIpldNode"])(chunk, depth);
                const cid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidOfNode"])(node);
                yield blockstore.put(cid, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__encode__as__encodeNode$3e$__["encodeNode"])(node));
                newCIDs.push(cid);
            }
            cids = newCIDs;
            depth++;
        }
        const node = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createFolderIpldNode"])(cids, name, depth, size, maxNodeSize, {
            compression,
            encryption
        });
        const cid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidOfNode"])(node);
        yield blockstore.put(cid, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__encode__as__encodeNode$3e$__["encodeNode"])(node));
        return cid;
    });
const processChunksToIPLDFormat = (blockstore_1, chunks_1, builders_1, ...args_1)=>__awaiter(void 0, [
        blockstore_1,
        chunks_1,
        builders_1,
        ...args_1
    ], void 0, function*(blockstore, chunks, builders, { maxChunkSize = DEFAULT_MAX_CHUNK_SIZE } = {
        maxChunkSize: DEFAULT_MAX_CHUNK_SIZE
    }) {
        var _a, e_3, _b, _c;
        const bufferChunks = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["chunkBuffer"])(chunks, {
            maxChunkSize,
            ignoreLastChunk: false
        });
        try {
            for(var _d = true, bufferChunks_2 = __asyncValues(bufferChunks), bufferChunks_2_1; bufferChunks_2_1 = yield bufferChunks_2.next(), _a = bufferChunks_2_1.done, !_a; _d = true){
                _c = bufferChunks_2_1.value;
                _d = false;
                const chunk = _c;
                if (chunk.byteLength < maxChunkSize) {
                    return chunk;
                }
                const node = builders.chunk(chunk);
                const cid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidOfNode"])(node);
                yield blockstore.put(cid, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__encode__as__encodeNode$3e$__["encodeNode"])(node));
            }
        } catch (e_3_1) {
            e_3 = {
                error: e_3_1
            };
        } finally{
            try {
                if (!_d && !_a && (_b = bufferChunks_2.return)) yield _b.call(bufferChunks_2);
            } finally{
                if (e_3) throw e_3.error;
            }
        }
        return Buffer.alloc(0);
    });
const ensureNodeMaxSize = (node, maxSize = DEFAULT_NODE_MAX_SIZE)=>{
    const nodeSize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__encode__as__encodeNode$3e$__["encodeNode"])(node).byteLength;
    if (nodeSize > maxSize) {
        throw new Error(`Node is too large to fit in a single chunk: ${nodeSize} > ${maxSize}`);
    }
    return node;
};
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/nodes.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createChunkedFileIpldNode": (()=>createChunkedFileIpldNode),
    "createChunkedMetadataIpldNode": (()=>createChunkedMetadataIpldNode),
    "createFileChunkIpldNode": (()=>createFileChunkIpldNode),
    "createFileInlinkIpldNode": (()=>createFileInlinkIpldNode),
    "createFolderInlinkIpldNode": (()=>createFolderInlinkIpldNode),
    "createFolderIpldNode": (()=>createFolderIpldNode),
    "createMetadataChunkIpldNode": (()=>createMetadataChunkIpldNode),
    "createMetadataInlinkIpldNode": (()=>createMetadataInlinkIpldNode),
    "createMetadataNode": (()=>createMetadataNode),
    "createSingleFileIpldNode": (()=>createSingleFileIpldNode),
    "createSingleMetadataIpldNode": (()=>createSingleMetadataIpldNode)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$utils$2f$metadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/utils/metadata.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/chunker.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/util.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/utils.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/protobuf/OnchainMetadata.js [app-route] (ecmascript)");
;
;
;
;
const createFileChunkIpldNode = (data, maxNodeSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_NODE_MAX_SIZE"])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ensureNodeMaxSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].FileChunk,
        size: BigInt(data.length).valueOf(),
        linkDepth: 0,
        data
    }), []), maxNodeSize);
const createChunkedFileIpldNode = (links, size, linkDepth, name, maxNodeSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_NODE_MAX_SIZE"], uploadOptions)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ensureNodeMaxSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].File,
        name,
        size,
        linkDepth,
        uploadOptions
    }), links.map((cid)=>({
            Hash: cid
        }))), maxNodeSize);
const createFileInlinkIpldNode = (links, size, linkDepth, maxNodeSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_NODE_MAX_SIZE"])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ensureNodeMaxSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].FileInlink,
        size: BigInt(size).valueOf(),
        linkDepth
    }), links.map((cid)=>({
            Hash: cid
        }))), maxNodeSize);
const createSingleFileIpldNode = (data, name, uploadOptions, maxNodeSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_NODE_MAX_SIZE"])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ensureNodeMaxSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].File,
        name,
        size: BigInt(data.length).valueOf(),
        linkDepth: 0,
        data,
        uploadOptions
    }), []), maxNodeSize);
const createMetadataInlinkIpldNode = (links, size, linkDepth, maxNodeSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_NODE_MAX_SIZE"])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ensureNodeMaxSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].FileInlink,
        size: BigInt(size).valueOf(),
        linkDepth
    }), links.map((cid)=>({
            Hash: cid
        }))), maxNodeSize);
const createSingleMetadataIpldNode = (data, name)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].Metadata,
        name,
        size: BigInt(data.length).valueOf(),
        linkDepth: 0,
        data
    }), []);
const createMetadataChunkIpldNode = (data, maxNodeSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_NODE_MAX_SIZE"])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ensureNodeMaxSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].MetadataChunk,
        size: BigInt(data.length).valueOf(),
        linkDepth: 0,
        data
    })), maxNodeSize);
const createChunkedMetadataIpldNode = (links, size, linkDepth, name, maxNodeSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_NODE_MAX_SIZE"])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ensureNodeMaxSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].Metadata,
        name,
        size,
        linkDepth
    }), links.map((cid)=>({
            Hash: cid
        }))), maxNodeSize);
const createFolderIpldNode = (links, name, linkDepth, size, maxNodeSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_NODE_MAX_SIZE"], uploadOptions)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ensureNodeMaxSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].Folder,
        name,
        size,
        linkDepth,
        uploadOptions
    }), links.map((cid)=>({
            Hash: cid
        }))), maxNodeSize);
const createFolderInlinkIpldNode = (links, linkDepth, maxNodeSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_NODE_MAX_SIZE"])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ensureNodeMaxSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].FolderInlink,
        linkDepth
    }), links.map((cid)=>({
            Hash: cid
        }))), maxNodeSize);
const createMetadataNode = (metadata, maxNodeSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_NODE_MAX_SIZE"])=>{
    const data = Buffer.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$utils$2f$metadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringifyMetadata"])(metadata));
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ensureNodeMaxSize"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].Metadata,
        name: metadata.name,
        linkDepth: 0,
        data,
        size: BigInt(data.length).valueOf()
    })), maxNodeSize);
};
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/builders.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "fileBuilders": (()=>fileBuilders),
    "metadataBuilders": (()=>metadataBuilders)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/nodes.js [app-route] (ecmascript)");
;
const metadataBuilders = {
    inlink: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createMetadataInlinkIpldNode"],
    chunk: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createMetadataChunkIpldNode"],
    root: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createChunkedMetadataIpldNode"],
    single: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createSingleMetadataIpldNode"]
};
const fileBuilders = {
    inlink: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createFileInlinkIpldNode"],
    chunk: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createFileChunkIpldNode"],
    root: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createChunkedFileIpldNode"],
    single: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createSingleFileIpldNode"]
};
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$builders$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/builders.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/chunker.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/nodes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js [app-route] (ecmascript) <locals> <export decode as decodeNode>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["decode"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/utils.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decodeIPLDNodeData": (()=>decodeIPLDNodeData),
    "encodeIPLDNodeData": (()=>encodeIPLDNodeData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/protobuf/OnchainMetadata.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__decode__as__decodeNode$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js [app-route] (ecmascript) <locals> <export decode as decodeNode>");
;
;
const encodeIPLDNodeData = (metadata)=>{
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["IPLDNodeData"].encode(metadata);
};
const decodeIPLDNodeData = (data)=>{
    const decoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__$3c$export__decode__as__decodeNode$3e$__["decodeNode"])(data);
    if (!decoded.Data) {
        throw new Error('Invalid data');
    }
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["IPLDNodeData"].decode(decoded.Data);
};
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/protobuf/OnchainMetadata.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/utils.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/folder.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "childrenMetadataFromNode": (()=>childrenMetadataFromNode),
    "folderMetadata": (()=>folderMetadata)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/cid/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/protobuf/OnchainMetadata.js [app-route] (ecmascript)");
;
;
const childrenMetadataFromNode = (node)=>{
    var _a;
    const ipldData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["IPLDNodeData"].decode(node.Data);
    if (ipldData.type !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].File && ipldData.type !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].Folder) {
        throw new Error('Invalid metadata type');
    }
    return {
        type: ipldData.type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"].File ? 'file' : 'folder',
        cid: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidToString"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidOfNode"])(node)),
        totalSize: (_a = ipldData.size) !== null && _a !== void 0 ? _a : BigInt(0).valueOf(),
        name: ipldData.name
    };
};
const folderMetadata = (cid, children, name, uploadOptions = {})=>{
    cid = typeof cid === 'string' ? cid : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidToString"])(cid);
    return {
        dataCid: cid,
        totalSize: children.reduce((acc, child)=>acc + child.totalSize, BigInt(0).valueOf()),
        totalFiles: children.length,
        children,
        type: 'folder',
        name: name !== null && name !== void 0 ? name : undefined,
        uploadOptions
    };
};
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/base.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$file$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/file.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$folder$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/folder.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/utils/async.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "asyncByChunk": (()=>asyncByChunk)
});
var __asyncValues = this && this.__asyncValues || function(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
};
var __await = this && this.__await || function(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
};
var __asyncGenerator = this && this.__asyncGenerator || function(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function awaitReturn(f) {
        return function(v) {
            return Promise.resolve(v).then(f, reject);
        };
    }
    function verb(n, f) {
        if (g[n]) {
            i[n] = function(v) {
                return new Promise(function(a, b) {
                    q.push([
                        n,
                        v,
                        a,
                        b
                    ]) > 1 || resume(n, v);
                });
            };
            if (f) i[n] = f(i[n]);
        }
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
};
const asyncByChunk = function(iterable_1, chunkSize_1) {
    return __asyncGenerator(this, arguments, function*(iterable, chunkSize, ignoreLastChunk = false) {
        var _a, e_1, _b, _c;
        let accumulated = Buffer.alloc(0);
        try {
            for(var _d = true, iterable_2 = __asyncValues(iterable), iterable_2_1; iterable_2_1 = yield __await(iterable_2.next()), _a = iterable_2_1.done, !_a; _d = true){
                _c = iterable_2_1.value;
                _d = false;
                const chunk = _c;
                accumulated = Buffer.concat([
                    accumulated,
                    chunk
                ]);
                while(accumulated.length >= chunkSize){
                    yield yield __await(accumulated.subarray(0, chunkSize));
                    accumulated = accumulated.subarray(chunkSize);
                }
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (!_d && !_a && (_b = iterable_2.return)) yield __await(_b.call(iterable_2));
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        if (accumulated.length > 0 && !ignoreLastChunk) {
            yield yield __await(accumulated);
        }
    });
};
}}),
"[project]/node_modules/.pnpm/fflate@0.8.2/node_modules/fflate/esm/index.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AsyncCompress": (()=>AsyncGzip),
    "AsyncDecompress": (()=>AsyncDecompress),
    "AsyncDeflate": (()=>AsyncDeflate),
    "AsyncGunzip": (()=>AsyncGunzip),
    "AsyncGzip": (()=>AsyncGzip),
    "AsyncInflate": (()=>AsyncInflate),
    "AsyncUnzipInflate": (()=>AsyncUnzipInflate),
    "AsyncUnzlib": (()=>AsyncUnzlib),
    "AsyncZipDeflate": (()=>AsyncZipDeflate),
    "AsyncZlib": (()=>AsyncZlib),
    "Compress": (()=>Gzip),
    "DecodeUTF8": (()=>DecodeUTF8),
    "Decompress": (()=>Decompress),
    "Deflate": (()=>Deflate),
    "EncodeUTF8": (()=>EncodeUTF8),
    "FlateErrorCode": (()=>FlateErrorCode),
    "Gunzip": (()=>Gunzip),
    "Gzip": (()=>Gzip),
    "Inflate": (()=>Inflate),
    "Unzip": (()=>Unzip),
    "UnzipInflate": (()=>UnzipInflate),
    "UnzipPassThrough": (()=>UnzipPassThrough),
    "Unzlib": (()=>Unzlib),
    "Zip": (()=>Zip),
    "ZipDeflate": (()=>ZipDeflate),
    "ZipPassThrough": (()=>ZipPassThrough),
    "Zlib": (()=>Zlib),
    "compress": (()=>gzip),
    "compressSync": (()=>gzipSync),
    "decompress": (()=>decompress),
    "decompressSync": (()=>decompressSync),
    "deflate": (()=>deflate),
    "deflateSync": (()=>deflateSync),
    "gunzip": (()=>gunzip),
    "gunzipSync": (()=>gunzipSync),
    "gzip": (()=>gzip),
    "gzipSync": (()=>gzipSync),
    "inflate": (()=>inflate),
    "inflateSync": (()=>inflateSync),
    "strFromU8": (()=>strFromU8),
    "strToU8": (()=>strToU8),
    "unzip": (()=>unzip),
    "unzipSync": (()=>unzipSync),
    "unzlib": (()=>unzlib),
    "unzlibSync": (()=>unzlibSync),
    "zip": (()=>zip),
    "zipSync": (()=>zipSync),
    "zlib": (()=>zlib),
    "zlibSync": (()=>zlibSync)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$module__$5b$external$5d$__$28$module$2c$__cjs$29$__ = __turbopack_import__("[externals]/module [external] (module, cjs)");
;
var require = (0, __TURBOPACK__imported__module__$5b$externals$5d2f$module__$5b$external$5d$__$28$module$2c$__cjs$29$__["createRequire"])('/');
// DEFLATE is a complex format; to read this code, you should probably check the RFC first:
// https://tools.ietf.org/html/rfc1951
// You may also wish to take a look at the guide I made about this program:
// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad
// Some of the following code is similar to that of UZIP.js:
// https://github.com/photopea/UZIP.js
// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.
// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint
// is better for memory in most engines (I *think*).
// Mediocre shim
var Worker;
var workerAdd = ";var __w=require('worker_threads');__w.parentPort.on('message',function(m){onmessage({data:m})}),postMessage=function(m,t){__w.parentPort.postMessage(m,t)},close=process.exit;self=global";
try {
    Worker = require('worker_threads').Worker;
} catch (e) {}
var wk = Worker ? function(c, _, msg, transfer, cb) {
    var done = false;
    var w = new Worker(c + workerAdd, {
        eval: true
    }).on('error', function(e) {
        return cb(e, null);
    }).on('message', function(m) {
        return cb(null, m);
    }).on('exit', function(c) {
        if (c && !done) cb(new Error('exited with code ' + c), null);
    });
    w.postMessage(msg, transfer);
    w.terminate = function() {
        done = true;
        return Worker.prototype.terminate.call(w);
    };
    return w;
} : function(_, __, ___, ____, cb) {
    setImmediate(function() {
        return cb(new Error('async operations unsupported - update to Node 12+ (or Node 10-11 with the --experimental-worker CLI flag)'), null);
    });
    var NOP = function() {};
    return {
        terminate: NOP,
        postMessage: NOP
    };
};
// aliases for shorter compressed code (most minifers don't do this)
var u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;
// fixed length extra bits
var fleb = new u8([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    4,
    4,
    4,
    4,
    5,
    5,
    5,
    5,
    0,
    /* unused */ 0,
    0,
    /* impossible */ 0
]);
// fixed distance extra bits
var fdeb = new u8([
    0,
    0,
    0,
    0,
    1,
    1,
    2,
    2,
    3,
    3,
    4,
    4,
    5,
    5,
    6,
    6,
    7,
    7,
    8,
    8,
    9,
    9,
    10,
    10,
    11,
    11,
    12,
    12,
    13,
    13,
    /* unused */ 0,
    0
]);
// code length index map
var clim = new u8([
    16,
    17,
    18,
    0,
    8,
    7,
    9,
    6,
    10,
    5,
    11,
    4,
    12,
    3,
    13,
    2,
    14,
    1,
    15
]);
// get base, reverse index map from extra bits
var freb = function(eb, start) {
    var b = new u16(31);
    for(var i = 0; i < 31; ++i){
        b[i] = start += 1 << eb[i - 1];
    }
    // numbers here are at max 18 bits
    var r = new i32(b[30]);
    for(var i = 1; i < 30; ++i){
        for(var j = b[i]; j < b[i + 1]; ++j){
            r[j] = j - b[i] << 5 | i;
        }
    }
    return {
        b: b,
        r: r
    };
};
var _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;
// we can ignore the fact that the other numbers are wrong; they never happen anyway
fl[28] = 258, revfl[258] = 28;
var _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;
// map of value to reverse (assuming 16 bits)
var rev = new u16(32768);
for(var i = 0; i < 32768; ++i){
    // reverse table algorithm from SO
    var x = (i & 0xAAAA) >> 1 | (i & 0x5555) << 1;
    x = (x & 0xCCCC) >> 2 | (x & 0x3333) << 2;
    x = (x & 0xF0F0) >> 4 | (x & 0x0F0F) << 4;
    rev[i] = ((x & 0xFF00) >> 8 | (x & 0x00FF) << 8) >> 1;
}
// create huffman tree from u8 "map": index -> code length for code index
// mb (max bits) must be at most 15
// TODO: optimize/split up?
var hMap = function(cd, mb, r) {
    var s = cd.length;
    // index
    var i = 0;
    // u16 "map": index -> # of codes with bit length = index
    var l = new u16(mb);
    // length of cd must be 288 (total # of codes)
    for(; i < s; ++i){
        if (cd[i]) ++l[cd[i] - 1];
    }
    // u16 "map": index -> minimum code for bit length = index
    var le = new u16(mb);
    for(i = 1; i < mb; ++i){
        le[i] = le[i - 1] + l[i - 1] << 1;
    }
    var co;
    if (r) {
        // u16 "map": index -> number of actual bits, symbol for code
        co = new u16(1 << mb);
        // bits to remove for reverser
        var rvb = 15 - mb;
        for(i = 0; i < s; ++i){
            // ignore 0 lengths
            if (cd[i]) {
                // num encoding both symbol and bits read
                var sv = i << 4 | cd[i];
                // free bits
                var r_1 = mb - cd[i];
                // start value
                var v = le[cd[i] - 1]++ << r_1;
                // m is end value
                for(var m = v | (1 << r_1) - 1; v <= m; ++v){
                    // every 16 bit value starting with the code yields the same result
                    co[rev[v] >> rvb] = sv;
                }
            }
        }
    } else {
        co = new u16(s);
        for(i = 0; i < s; ++i){
            if (cd[i]) {
                co[i] = rev[le[cd[i] - 1]++] >> 15 - cd[i];
            }
        }
    }
    return co;
};
// fixed length tree
var flt = new u8(288);
for(var i = 0; i < 144; ++i)flt[i] = 8;
for(var i = 144; i < 256; ++i)flt[i] = 9;
for(var i = 256; i < 280; ++i)flt[i] = 7;
for(var i = 280; i < 288; ++i)flt[i] = 8;
// fixed distance tree
var fdt = new u8(32);
for(var i = 0; i < 32; ++i)fdt[i] = 5;
// fixed length map
var flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);
// fixed distance map
var fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);
// find max of array
var max = function(a) {
    var m = a[0];
    for(var i = 1; i < a.length; ++i){
        if (a[i] > m) m = a[i];
    }
    return m;
};
// read d, starting at bit p and mask with m
var bits = function(d, p, m) {
    var o = p / 8 | 0;
    return (d[o] | d[o + 1] << 8) >> (p & 7) & m;
};
// read d, starting at bit p continuing for at least 16 bits
var bits16 = function(d, p) {
    var o = p / 8 | 0;
    return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (p & 7);
};
// get end of byte
var shft = function(p) {
    return (p + 7) / 8 | 0;
};
// typed array slice - allows garbage collector to free original reference,
// while being more compatible than .slice
var slc = function(v, s, e) {
    if (s == null || s < 0) s = 0;
    if (e == null || e > v.length) e = v.length;
    // can't use .constructor in case user-supplied
    return new u8(v.subarray(s, e));
};
var FlateErrorCode = {
    UnexpectedEOF: 0,
    InvalidBlockType: 1,
    InvalidLengthLiteral: 2,
    InvalidDistance: 3,
    StreamFinished: 4,
    NoStreamHandler: 5,
    InvalidHeader: 6,
    NoCallback: 7,
    InvalidUTF8: 8,
    ExtraFieldTooLong: 9,
    InvalidDate: 10,
    FilenameTooLong: 11,
    StreamFinishing: 12,
    InvalidZipData: 13,
    UnknownCompressionMethod: 14
};
// error codes
var ec = [
    'unexpected EOF',
    'invalid block type',
    'invalid length/literal',
    'invalid distance',
    'stream finished',
    'no stream handler',
    ,
    'no callback',
    'invalid UTF-8 data',
    'extra field too long',
    'date not in range 1980-2099',
    'filename too long',
    'stream finishing',
    'invalid zip data'
];
;
var err = function(ind, msg, nt) {
    var e = new Error(msg || ec[ind]);
    e.code = ind;
    if (Error.captureStackTrace) Error.captureStackTrace(e, err);
    if (!nt) throw e;
    return e;
};
// expands raw DEFLATE data
var inflt = function(dat, st, buf, dict) {
    // source length       dict length
    var sl = dat.length, dl = dict ? dict.length : 0;
    if (!sl || st.f && !st.l) return buf || new u8(0);
    var noBuf = !buf;
    // have to estimate size
    var resize = noBuf || st.i != 2;
    // no state
    var noSt = st.i;
    // Assumes roughly 33% compression ratio average
    if (noBuf) buf = new u8(sl * 3);
    // ensure buffer can fit at least l elements
    var cbuf = function(l) {
        var bl = buf.length;
        // need to increase size to fit
        if (l > bl) {
            // Double or set to necessary, whichever is greater
            var nbuf = new u8(Math.max(bl * 2, l));
            nbuf.set(buf);
            buf = nbuf;
        }
    };
    //  last chunk         bitpos           bytes
    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;
    // total bits
    var tbts = sl * 8;
    do {
        if (!lm) {
            // BFINAL - this is only 1 when last chunk is next
            final = bits(dat, pos, 1);
            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman
            var type = bits(dat, pos + 1, 3);
            pos += 3;
            if (!type) {
                // go to end of byte boundary
                var s = shft(pos) + 4, l = dat[s - 4] | dat[s - 3] << 8, t = s + l;
                if (t > sl) {
                    if (noSt) err(0);
                    break;
                }
                // ensure size
                if (resize) cbuf(bt + l);
                // Copy over uncompressed data
                buf.set(dat.subarray(s, t), bt);
                // Get new bitpos, update byte count
                st.b = bt += l, st.p = pos = t * 8, st.f = final;
                continue;
            } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;
            else if (type == 2) {
                //  literal                            lengths
                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;
                var tl = hLit + bits(dat, pos + 5, 31) + 1;
                pos += 14;
                // length+distance tree
                var ldt = new u8(tl);
                // code length tree
                var clt = new u8(19);
                for(var i = 0; i < hcLen; ++i){
                    // use index map to get real code
                    clt[clim[i]] = bits(dat, pos + i * 3, 7);
                }
                pos += hcLen * 3;
                // code lengths bits
                var clb = max(clt), clbmsk = (1 << clb) - 1;
                // code lengths map
                var clm = hMap(clt, clb, 1);
                for(var i = 0; i < tl;){
                    var r = clm[bits(dat, pos, clbmsk)];
                    // bits read
                    pos += r & 15;
                    // symbol
                    var s = r >> 4;
                    // code length to copy
                    if (s < 16) {
                        ldt[i++] = s;
                    } else {
                        //  copy   count
                        var c = 0, n = 0;
                        if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];
                        else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;
                        else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;
                        while(n--)ldt[i++] = c;
                    }
                }
                //    length tree                 distance tree
                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);
                // max length bits
                lbt = max(lt);
                // max dist bits
                dbt = max(dt);
                lm = hMap(lt, lbt, 1);
                dm = hMap(dt, dbt, 1);
            } else err(1);
            if (pos > tbts) {
                if (noSt) err(0);
                break;
            }
        }
        // Make sure the buffer can hold this + the largest possible addition
        // Maximum chunk size (practically, theoretically infinite) is 2^17
        if (resize) cbuf(bt + 131072);
        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;
        var lpos = pos;
        for(;; lpos = pos){
            // bits read, code
            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;
            pos += c & 15;
            if (pos > tbts) {
                if (noSt) err(0);
                break;
            }
            if (!c) err(2);
            if (sym < 256) buf[bt++] = sym;
            else if (sym == 256) {
                lpos = pos, lm = null;
                break;
            } else {
                var add = sym - 254;
                // no extra bits needed if less
                if (sym > 264) {
                    // index
                    var i = sym - 257, b = fleb[i];
                    add = bits(dat, pos, (1 << b) - 1) + fl[i];
                    pos += b;
                }
                // dist
                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;
                if (!d) err(3);
                pos += d & 15;
                var dt = fd[dsym];
                if (dsym > 3) {
                    var b = fdeb[dsym];
                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;
                }
                if (pos > tbts) {
                    if (noSt) err(0);
                    break;
                }
                if (resize) cbuf(bt + 131072);
                var end = bt + add;
                if (bt < dt) {
                    var shift = dl - dt, dend = Math.min(dt, end);
                    if (shift + bt < 0) err(3);
                    for(; bt < dend; ++bt)buf[bt] = dict[shift + bt];
                }
                for(; bt < end; ++bt)buf[bt] = buf[bt - dt];
            }
        }
        st.l = lm, st.p = lpos, st.b = bt, st.f = final;
        if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;
    }while (!final)
    // don't reallocate for streams or user buffers
    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);
};
// starting at p, write the minimum number of bits that can hold v to d
var wbits = function(d, p, v) {
    v <<= p & 7;
    var o = p / 8 | 0;
    d[o] |= v;
    d[o + 1] |= v >> 8;
};
// starting at p, write the minimum number of bits (>8) that can hold v to d
var wbits16 = function(d, p, v) {
    v <<= p & 7;
    var o = p / 8 | 0;
    d[o] |= v;
    d[o + 1] |= v >> 8;
    d[o + 2] |= v >> 16;
};
// creates code lengths from a frequency table
var hTree = function(d, mb) {
    // Need extra info to make a tree
    var t = [];
    for(var i = 0; i < d.length; ++i){
        if (d[i]) t.push({
            s: i,
            f: d[i]
        });
    }
    var s = t.length;
    var t2 = t.slice();
    if (!s) return {
        t: et,
        l: 0
    };
    if (s == 1) {
        var v = new u8(t[0].s + 1);
        v[t[0].s] = 1;
        return {
            t: v,
            l: 1
        };
    }
    t.sort(function(a, b) {
        return a.f - b.f;
    });
    // after i2 reaches last ind, will be stopped
    // freq must be greater than largest possible number of symbols
    t.push({
        s: -1,
        f: 25001
    });
    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;
    t[0] = {
        s: -1,
        f: l.f + r.f,
        l: l,
        r: r
    };
    // efficient algorithm from UZIP.js
    // i0 is lookbehind, i2 is lookahead - after processing two low-freq
    // symbols that combined have high freq, will start processing i2 (high-freq,
    // non-composite) symbols instead
    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/
    while(i1 != s - 1){
        l = t[t[i0].f < t[i2].f ? i0++ : i2++];
        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];
        t[i1++] = {
            s: -1,
            f: l.f + r.f,
            l: l,
            r: r
        };
    }
    var maxSym = t2[0].s;
    for(var i = 1; i < s; ++i){
        if (t2[i].s > maxSym) maxSym = t2[i].s;
    }
    // code lengths
    var tr = new u16(maxSym + 1);
    // max bits in tree
    var mbt = ln(t[i1 - 1], tr, 0);
    if (mbt > mb) {
        // more algorithms from UZIP.js
        // TODO: find out how this code works (debt)
        //  ind    debt
        var i = 0, dt = 0;
        //    left            cost
        var lft = mbt - mb, cst = 1 << lft;
        t2.sort(function(a, b) {
            return tr[b.s] - tr[a.s] || a.f - b.f;
        });
        for(; i < s; ++i){
            var i2_1 = t2[i].s;
            if (tr[i2_1] > mb) {
                dt += cst - (1 << mbt - tr[i2_1]);
                tr[i2_1] = mb;
            } else break;
        }
        dt >>= lft;
        while(dt > 0){
            var i2_2 = t2[i].s;
            if (tr[i2_2] < mb) dt -= 1 << mb - tr[i2_2]++ - 1;
            else ++i;
        }
        for(; i >= 0 && dt; --i){
            var i2_3 = t2[i].s;
            if (tr[i2_3] == mb) {
                --tr[i2_3];
                ++dt;
            }
        }
        mbt = mb;
    }
    return {
        t: new u8(tr),
        l: mbt
    };
};
// get the max length and assign length codes
var ln = function(n, l, d) {
    return n.s == -1 ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1)) : l[n.s] = d;
};
// length codes generation
var lc = function(c) {
    var s = c.length;
    // Note that the semicolon was intentional
    while(s && !c[--s]);
    var cl = new u16(++s);
    //  ind      num         streak
    var cli = 0, cln = c[0], cls = 1;
    var w = function(v) {
        cl[cli++] = v;
    };
    for(var i = 1; i <= s; ++i){
        if (c[i] == cln && i != s) ++cls;
        else {
            if (!cln && cls > 2) {
                for(; cls > 138; cls -= 138)w(32754);
                if (cls > 2) {
                    w(cls > 10 ? cls - 11 << 5 | 28690 : cls - 3 << 5 | 12305);
                    cls = 0;
                }
            } else if (cls > 3) {
                w(cln), --cls;
                for(; cls > 6; cls -= 6)w(8304);
                if (cls > 2) w(cls - 3 << 5 | 8208), cls = 0;
            }
            while(cls--)w(cln);
            cls = 1;
            cln = c[i];
        }
    }
    return {
        c: cl.subarray(0, cli),
        n: s
    };
};
// calculate the length of output from tree, code lengths
var clen = function(cf, cl) {
    var l = 0;
    for(var i = 0; i < cl.length; ++i)l += cf[i] * cl[i];
    return l;
};
// writes a fixed block
// returns the new bit pos
var wfblk = function(out, pos, dat) {
    // no need to write 00 as type: TypedArray defaults to 0
    var s = dat.length;
    var o = shft(pos + 2);
    out[o] = s & 255;
    out[o + 1] = s >> 8;
    out[o + 2] = out[o] ^ 255;
    out[o + 3] = out[o + 1] ^ 255;
    for(var i = 0; i < s; ++i)out[o + i + 4] = dat[i];
    return (o + 4 + s) * 8;
};
// writes a block
var wblk = function(dat, out, final, syms, lf, df, eb, li, bs, bl, p) {
    wbits(out, p++, final);
    ++lf[256];
    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;
    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;
    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;
    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;
    var lcfreq = new u16(19);
    for(var i = 0; i < lclt.length; ++i)++lcfreq[lclt[i] & 31];
    for(var i = 0; i < lcdt.length; ++i)++lcfreq[lcdt[i] & 31];
    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;
    var nlcc = 19;
    for(; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);
    var flen = bl + 5 << 3;
    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;
    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];
    if (bs >= 0 && flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));
    var lm, ll, dm, dl;
    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;
    if (dtlen < ftlen) {
        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;
        var llm = hMap(lct, mlcb, 0);
        wbits(out, p, nlc - 257);
        wbits(out, p + 5, ndc - 1);
        wbits(out, p + 10, nlcc - 4);
        p += 14;
        for(var i = 0; i < nlcc; ++i)wbits(out, p + 3 * i, lct[clim[i]]);
        p += 3 * nlcc;
        var lcts = [
            lclt,
            lcdt
        ];
        for(var it = 0; it < 2; ++it){
            var clct = lcts[it];
            for(var i = 0; i < clct.length; ++i){
                var len = clct[i] & 31;
                wbits(out, p, llm[len]), p += lct[len];
                if (len > 15) wbits(out, p, clct[i] >> 5 & 127), p += clct[i] >> 12;
            }
        }
    } else {
        lm = flm, ll = flt, dm = fdm, dl = fdt;
    }
    for(var i = 0; i < li; ++i){
        var sym = syms[i];
        if (sym > 255) {
            var len = sym >> 18 & 31;
            wbits16(out, p, lm[len + 257]), p += ll[len + 257];
            if (len > 7) wbits(out, p, sym >> 23 & 31), p += fleb[len];
            var dst = sym & 31;
            wbits16(out, p, dm[dst]), p += dl[dst];
            if (dst > 3) wbits16(out, p, sym >> 5 & 8191), p += fdeb[dst];
        } else {
            wbits16(out, p, lm[sym]), p += ll[sym];
        }
    }
    wbits16(out, p, lm[256]);
    return p + ll[256];
};
// deflate options (nice << 13) | chain
var deo = /*#__PURE__*/ new i32([
    65540,
    131080,
    131088,
    131104,
    262176,
    1048704,
    1048832,
    2114560,
    2117632
]);
// empty
var et = /*#__PURE__*/ new u8(0);
// compresses data into a raw DEFLATE buffer
var dflt = function(dat, lvl, plvl, pre, post, st) {
    var s = st.z || dat.length;
    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);
    // writing to this writes to the output buffer
    var w = o.subarray(pre, o.length - post);
    var lst = st.l;
    var pos = (st.r || 0) & 7;
    if (lvl) {
        if (pos) w[0] = st.r >> 3;
        var opt = deo[lvl - 1];
        var n = opt >> 13, c = opt & 8191;
        var msk_1 = (1 << plvl) - 1;
        //    prev 2-byte val map    curr 2-byte val map
        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);
        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;
        var hsh = function(i) {
            return (dat[i] ^ dat[i + 1] << bs1_1 ^ dat[i + 2] << bs2_1) & msk_1;
        };
        // 24576 is an arbitrary number of maximum symbols per block
        // 424 buffer for last block
        var syms = new i32(25000);
        // length/literal freq   distance freq
        var lf = new u16(288), df = new u16(32);
        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos
        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;
        for(; i + 2 < s; ++i){
            // hash value
            var hv = hsh(i);
            // index mod 32768    previous index mod
            var imod = i & 32767, pimod = head[hv];
            prev[imod] = pimod;
            head[hv] = imod;
            // We always should modify head and prev, but only add symbols if
            // this data is not yet processed ("wait" for wait index)
            if (wi <= i) {
                // bytes remaining
                var rem = s - i;
                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {
                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);
                    li = lc_1 = eb = 0, bs = i;
                    for(var j = 0; j < 286; ++j)lf[j] = 0;
                    for(var j = 0; j < 30; ++j)df[j] = 0;
                }
                //  len    dist   chain
                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;
                if (rem > 2 && hv == hsh(i - dif)) {
                    var maxn = Math.min(n, rem) - 1;
                    var maxd = Math.min(32767, i);
                    // max possible length
                    // not capped at dif because decompressors implement "rolling" index population
                    var ml = Math.min(258, rem);
                    while(dif <= maxd && --ch_1 && imod != pimod){
                        if (dat[i + l] == dat[i + l - dif]) {
                            var nl = 0;
                            for(; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl);
                            if (nl > l) {
                                l = nl, d = dif;
                                // break out early when we reach "nice" (we are satisfied enough)
                                if (nl > maxn) break;
                                // now, find the rarest 2-byte sequence within this
                                // length of literals and search for that instead.
                                // Much faster than just using the start
                                var mmd = Math.min(dif, nl - 2);
                                var md = 0;
                                for(var j = 0; j < mmd; ++j){
                                    var ti = i - dif + j & 32767;
                                    var pti = prev[ti];
                                    var cd = ti - pti & 32767;
                                    if (cd > md) md = cd, pimod = ti;
                                }
                            }
                        }
                        // check the previous match
                        imod = pimod, pimod = prev[imod];
                        dif += imod - pimod & 32767;
                    }
                }
                // d will be nonzero only when a match was found
                if (d) {
                    // store both dist and len data in one int32
                    // Make sure this is recognized as a len/dist with 28th bit (2^28)
                    syms[li++] = 268435456 | revfl[l] << 18 | revfd[d];
                    var lin = revfl[l] & 31, din = revfd[d] & 31;
                    eb += fleb[lin] + fdeb[din];
                    ++lf[257 + lin];
                    ++df[din];
                    wi = i + l;
                    ++lc_1;
                } else {
                    syms[li++] = dat[i];
                    ++lf[dat[i]];
                }
            }
        }
        for(i = Math.max(i, wi); i < s; ++i){
            syms[li++] = dat[i];
            ++lf[dat[i]];
        }
        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);
        if (!lst) {
            st.r = pos & 7 | w[pos / 8 | 0] << 3;
            // shft(pos) now 1 less if pos & 7 != 0
            pos -= 7;
            st.h = head, st.p = prev, st.i = i, st.w = wi;
        }
    } else {
        for(var i = st.w || 0; i < s + lst; i += 65535){
            // end
            var e = i + 65535;
            if (e >= s) {
                // write final block
                w[pos / 8 | 0] = lst;
                e = s;
            }
            pos = wfblk(w, pos + 1, dat.subarray(i, e));
        }
        st.i = s;
    }
    return slc(o, 0, pre + shft(pos) + post);
};
// CRC32 table
var crct = /*#__PURE__*/ function() {
    var t = new Int32Array(256);
    for(var i = 0; i < 256; ++i){
        var c = i, k = 9;
        while(--k)c = (c & 1 && -306674912) ^ c >>> 1;
        t[i] = c;
    }
    return t;
}();
// CRC32
var crc = function() {
    var c = -1;
    return {
        p: function(d) {
            // closures have awful performance
            var cr = c;
            for(var i = 0; i < d.length; ++i)cr = crct[cr & 255 ^ d[i]] ^ cr >>> 8;
            c = cr;
        },
        d: function() {
            return ~c;
        }
    };
};
// Adler32
var adler = function() {
    var a = 1, b = 0;
    return {
        p: function(d) {
            // closures have awful performance
            var n = a, m = b;
            var l = d.length | 0;
            for(var i = 0; i != l;){
                var e = Math.min(i + 2655, l);
                for(; i < e; ++i)m += n += d[i];
                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);
            }
            a = n, b = m;
        },
        d: function() {
            a %= 65521, b %= 65521;
            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | b >> 8;
        }
    };
};
;
// deflate with opts
var dopt = function(dat, opt, pre, post, st) {
    if (!st) {
        st = {
            l: 1
        };
        if (opt.dictionary) {
            var dict = opt.dictionary.subarray(-32768);
            var newDat = new u8(dict.length + dat.length);
            newDat.set(dict);
            newDat.set(dat, dict.length);
            dat = newDat;
            st.w = dict.length;
        }
    }
    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20 : 12 + opt.mem, pre, post, st);
};
// Walmart object spread
var mrg = function(a, b) {
    var o = {};
    for(var k in a)o[k] = a[k];
    for(var k in b)o[k] = b[k];
    return o;
};
// worker clone
// This is possibly the craziest part of the entire codebase, despite how simple it may seem.
// The only parameter to this function is a closure that returns an array of variables outside of the function scope.
// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.
// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).
// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.
// This took me three weeks to figure out how to do.
var wcln = function(fn, fnStr, td) {
    var dt = fn();
    var st = fn.toString();
    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\s+/g, '').split(',');
    for(var i = 0; i < dt.length; ++i){
        var v = dt[i], k = ks[i];
        if (typeof v == 'function') {
            fnStr += ';' + k + '=';
            var st_1 = v.toString();
            if (v.prototype) {
                // for global objects
                if (st_1.indexOf('[native code]') != -1) {
                    var spInd = st_1.indexOf(' ', 8) + 1;
                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));
                } else {
                    fnStr += st_1;
                    for(var t in v.prototype)fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();
                }
            } else fnStr += st_1;
        } else td[k] = v;
    }
    return fnStr;
};
var ch = [];
// clone bufs
var cbfs = function(v) {
    var tl = [];
    for(var k in v){
        if (v[k].buffer) {
            tl.push((v[k] = new v[k].constructor(v[k])).buffer);
        }
    }
    return tl;
};
// use a worker to execute code
var wrkr = function(fns, init, id, cb) {
    if (!ch[id]) {
        var fnStr = '', td_1 = {}, m = fns.length - 1;
        for(var i = 0; i < m; ++i)fnStr = wcln(fns[i], fnStr, td_1);
        ch[id] = {
            c: wcln(fns[m], fnStr, td_1),
            e: td_1
        };
    }
    var td = mrg({}, ch[id].e);
    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);
};
// base async inflate fn
var bInflt = function() {
    return [
        u8,
        u16,
        i32,
        fleb,
        fdeb,
        clim,
        fl,
        fd,
        flrm,
        fdrm,
        rev,
        ec,
        hMap,
        max,
        bits,
        bits16,
        shft,
        slc,
        err,
        inflt,
        inflateSync,
        pbf,
        gopt
    ];
};
var bDflt = function() {
    return [
        u8,
        u16,
        i32,
        fleb,
        fdeb,
        clim,
        revfl,
        revfd,
        flm,
        flt,
        fdm,
        fdt,
        rev,
        deo,
        et,
        hMap,
        wbits,
        wbits16,
        hTree,
        ln,
        lc,
        clen,
        wfblk,
        wblk,
        shft,
        slc,
        dflt,
        dopt,
        deflateSync,
        pbf
    ];
};
// gzip extra
var gze = function() {
    return [
        gzh,
        gzhl,
        wbytes,
        crc,
        crct
    ];
};
// gunzip extra
var guze = function() {
    return [
        gzs,
        gzl
    ];
};
// zlib extra
var zle = function() {
    return [
        zlh,
        wbytes,
        adler
    ];
};
// unzlib extra
var zule = function() {
    return [
        zls
    ];
};
// post buf
var pbf = function(msg) {
    return postMessage(msg, [
        msg.buffer
    ]);
};
// get opts
var gopt = function(o) {
    return o && {
        out: o.size && new u8(o.size),
        dictionary: o.dictionary
    };
};
// async helper
var cbify = function(dat, opts, fns, init, id, cb) {
    var w = wrkr(fns, init, id, function(err, dat) {
        w.terminate();
        cb(err, dat);
    });
    w.postMessage([
        dat,
        opts
    ], opts.consume ? [
        dat.buffer
    ] : []);
    return function() {
        w.terminate();
    };
};
// auto stream
var astrm = function(strm) {
    strm.ondata = function(dat, final) {
        return postMessage([
            dat,
            final
        ], [
            dat.buffer
        ]);
    };
    return function(ev) {
        if (ev.data.length) {
            strm.push(ev.data[0], ev.data[1]);
            postMessage([
                ev.data[0].length
            ]);
        } else strm.flush();
    };
};
// async stream attach
var astrmify = function(fns, strm, opts, init, id, flush, ext) {
    var t;
    var w = wrkr(fns, init, id, function(err, dat) {
        if (err) w.terminate(), strm.ondata.call(strm, err);
        else if (!Array.isArray(dat)) ext(dat);
        else if (dat.length == 1) {
            strm.queuedSize -= dat[0];
            if (strm.ondrain) strm.ondrain(dat[0]);
        } else {
            if (dat[1]) w.terminate();
            strm.ondata.call(strm, err, dat[0], dat[1]);
        }
    });
    w.postMessage(opts);
    strm.queuedSize = 0;
    strm.push = function(d, f) {
        if (!strm.ondata) err(5);
        if (t) strm.ondata(err(4, 0, 1), null, !!f);
        strm.queuedSize += d.length;
        w.postMessage([
            d,
            t = f
        ], [
            d.buffer
        ]);
    };
    strm.terminate = function() {
        w.terminate();
    };
    if (flush) {
        strm.flush = function() {
            w.postMessage([]);
        };
    }
};
// read 2 bytes
var b2 = function(d, b) {
    return d[b] | d[b + 1] << 8;
};
// read 4 bytes
var b4 = function(d, b) {
    return (d[b] | d[b + 1] << 8 | d[b + 2] << 16 | d[b + 3] << 24) >>> 0;
};
var b8 = function(d, b) {
    return b4(d, b) + b4(d, b + 4) * 4294967296;
};
// write bytes
var wbytes = function(d, b, v) {
    for(; v; ++b)d[b] = v, v >>>= 8;
};
// gzip header
var gzh = function(c, o) {
    var fn = o.filename;
    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix
    if (o.mtime != 0) wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));
    if (fn) {
        c[3] = 8;
        for(var i = 0; i <= fn.length; ++i)c[i + 10] = fn.charCodeAt(i);
    }
};
// gzip footer: -8 to -4 = CRC, -4 to -0 is length
// gzip start
var gzs = function(d) {
    if (d[0] != 31 || d[1] != 139 || d[2] != 8) err(6, 'invalid gzip data');
    var flg = d[3];
    var st = 10;
    if (flg & 4) st += (d[10] | d[11] << 8) + 2;
    for(var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++]);
    return st + (flg & 2);
};
// gzip length
var gzl = function(d) {
    var l = d.length;
    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;
};
// gzip header length
var gzhl = function(o) {
    return 10 + (o.filename ? o.filename.length + 1 : 0);
};
// zlib header
var zlh = function(c, o) {
    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;
    c[0] = 120, c[1] = fl << 6 | (o.dictionary && 32);
    c[1] |= 31 - (c[0] << 8 | c[1]) % 31;
    if (o.dictionary) {
        var h = adler();
        h.p(o.dictionary);
        wbytes(c, 2, h.d());
    }
};
// zlib start
var zls = function(d, dict) {
    if ((d[0] & 15) != 8 || d[0] >> 4 > 7 || (d[0] << 8 | d[1]) % 31) err(6, 'invalid zlib data');
    if ((d[1] >> 5 & 1) == +!dict) err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');
    return (d[1] >> 3 & 4) + 2;
};
function StrmOpt(opts, cb) {
    if (typeof opts == 'function') cb = opts, opts = {};
    this.ondata = cb;
    return opts;
}
/**
 * Streaming DEFLATE compression
 */ var Deflate = function() {
    function Deflate(opts, cb) {
        if (typeof opts == 'function') cb = opts, opts = {};
        this.ondata = cb;
        this.o = opts || {};
        this.s = {
            l: 0,
            i: 32768,
            w: 32768,
            z: 32768
        };
        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev
        // 98304 = 32768 (lookback) + 65536 (common chunk size)
        this.b = new u8(98304);
        if (this.o.dictionary) {
            var dict = this.o.dictionary.subarray(-32768);
            this.b.set(dict, 32768 - dict.length);
            this.s.i = 32768 - dict.length;
        }
    }
    Deflate.prototype.p = function(c, f) {
        this.ondata(dopt(c, this.o, 0, 0, this.s), f);
    };
    /**
     * Pushes a chunk to be deflated
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Deflate.prototype.push = function(chunk, final) {
        if (!this.ondata) err(5);
        if (this.s.l) err(4);
        var endLen = chunk.length + this.s.z;
        if (endLen > this.b.length) {
            if (endLen > 2 * this.b.length - 32768) {
                var newBuf = new u8(endLen & -32768);
                newBuf.set(this.b.subarray(0, this.s.z));
                this.b = newBuf;
            }
            var split = this.b.length - this.s.z;
            this.b.set(chunk.subarray(0, split), this.s.z);
            this.s.z = this.b.length;
            this.p(this.b, false);
            this.b.set(this.b.subarray(-32768));
            this.b.set(chunk.subarray(split), 32768);
            this.s.z = chunk.length - split + 32768;
            this.s.i = 32766, this.s.w = 32768;
        } else {
            this.b.set(chunk, this.s.z);
            this.s.z += chunk.length;
        }
        this.s.l = final & 1;
        if (this.s.z > this.s.w + 8191 || final) {
            this.p(this.b, final || false);
            this.s.w = this.s.i, this.s.i -= 2;
        }
    };
    /**
     * Flushes buffered uncompressed data. Useful to immediately retrieve the
     * deflated output for small inputs.
     */ Deflate.prototype.flush = function() {
        if (!this.ondata) err(5);
        if (this.s.l) err(4);
        this.p(this.b, false);
        this.s.w = this.s.i, this.s.i -= 2;
    };
    return Deflate;
}();
;
/**
 * Asynchronous streaming DEFLATE compression
 */ var AsyncDeflate = function() {
    function AsyncDeflate(opts, cb) {
        astrmify([
            bDflt,
            function() {
                return [
                    astrm,
                    Deflate
                ];
            }
        ], this, StrmOpt.call(this, opts, cb), function(ev) {
            var strm = new Deflate(ev.data);
            onmessage = astrm(strm);
        }, 6, 1);
    }
    return AsyncDeflate;
}();
;
function deflate(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') err(7);
    return cbify(data, opts, [
        bDflt
    ], function(ev) {
        return pbf(deflateSync(ev.data[0], ev.data[1]));
    }, 0, cb);
}
function deflateSync(data, opts) {
    return dopt(data, opts || {}, 0, 0);
}
/**
 * Streaming DEFLATE decompression
 */ var Inflate = function() {
    function Inflate(opts, cb) {
        // no StrmOpt here to avoid adding to workerizer
        if (typeof opts == 'function') cb = opts, opts = {};
        this.ondata = cb;
        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);
        this.s = {
            i: 0,
            b: dict ? dict.length : 0
        };
        this.o = new u8(32768);
        this.p = new u8(0);
        if (dict) this.o.set(dict);
    }
    Inflate.prototype.e = function(c) {
        if (!this.ondata) err(5);
        if (this.d) err(4);
        if (!this.p.length) this.p = c;
        else if (c.length) {
            var n = new u8(this.p.length + c.length);
            n.set(this.p), n.set(c, this.p.length), this.p = n;
        }
    };
    Inflate.prototype.c = function(final) {
        this.s.i = +(this.d = final || false);
        var bts = this.s.b;
        var dt = inflt(this.p, this.s, this.o);
        this.ondata(slc(dt, bts, this.s.b), this.d);
        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;
        this.p = slc(this.p, this.s.p / 8 | 0), this.s.p &= 7;
    };
    /**
     * Pushes a chunk to be inflated
     * @param chunk The chunk to push
     * @param final Whether this is the final chunk
     */ Inflate.prototype.push = function(chunk, final) {
        this.e(chunk), this.c(final);
    };
    return Inflate;
}();
;
/**
 * Asynchronous streaming DEFLATE decompression
 */ var AsyncInflate = function() {
    function AsyncInflate(opts, cb) {
        astrmify([
            bInflt,
            function() {
                return [
                    astrm,
                    Inflate
                ];
            }
        ], this, StrmOpt.call(this, opts, cb), function(ev) {
            var strm = new Inflate(ev.data);
            onmessage = astrm(strm);
        }, 7, 0);
    }
    return AsyncInflate;
}();
;
function inflate(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') err(7);
    return cbify(data, opts, [
        bInflt
    ], function(ev) {
        return pbf(inflateSync(ev.data[0], gopt(ev.data[1])));
    }, 1, cb);
}
function inflateSync(data, opts) {
    return inflt(data, {
        i: 2
    }, opts && opts.out, opts && opts.dictionary);
}
// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.
/**
 * Streaming GZIP compression
 */ var Gzip = function() {
    function Gzip(opts, cb) {
        this.c = crc();
        this.l = 0;
        this.v = 1;
        Deflate.call(this, opts, cb);
    }
    /**
     * Pushes a chunk to be GZIPped
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Gzip.prototype.push = function(chunk, final) {
        this.c.p(chunk);
        this.l += chunk.length;
        Deflate.prototype.push.call(this, chunk, final);
    };
    Gzip.prototype.p = function(c, f) {
        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);
        if (this.v) gzh(raw, this.o), this.v = 0;
        if (f) wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);
        this.ondata(raw, f);
    };
    /**
     * Flushes buffered uncompressed data. Useful to immediately retrieve the
     * GZIPped output for small inputs.
     */ Gzip.prototype.flush = function() {
        Deflate.prototype.flush.call(this);
    };
    return Gzip;
}();
;
/**
 * Asynchronous streaming GZIP compression
 */ var AsyncGzip = function() {
    function AsyncGzip(opts, cb) {
        astrmify([
            bDflt,
            gze,
            function() {
                return [
                    astrm,
                    Deflate,
                    Gzip
                ];
            }
        ], this, StrmOpt.call(this, opts, cb), function(ev) {
            var strm = new Gzip(ev.data);
            onmessage = astrm(strm);
        }, 8, 1);
    }
    return AsyncGzip;
}();
;
function gzip(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') err(7);
    return cbify(data, opts, [
        bDflt,
        gze,
        function() {
            return [
                gzipSync
            ];
        }
    ], function(ev) {
        return pbf(gzipSync(ev.data[0], ev.data[1]));
    }, 2, cb);
}
function gzipSync(data, opts) {
    if (!opts) opts = {};
    var c = crc(), l = data.length;
    c.p(data);
    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;
    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;
}
/**
 * Streaming single or multi-member GZIP decompression
 */ var Gunzip = function() {
    function Gunzip(opts, cb) {
        this.v = 1;
        this.r = 0;
        Inflate.call(this, opts, cb);
    }
    /**
     * Pushes a chunk to be GUNZIPped
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Gunzip.prototype.push = function(chunk, final) {
        Inflate.prototype.e.call(this, chunk);
        this.r += chunk.length;
        if (this.v) {
            var p = this.p.subarray(this.v - 1);
            var s = p.length > 3 ? gzs(p) : 4;
            if (s > p.length) {
                if (!final) return;
            } else if (this.v > 1 && this.onmember) {
                this.onmember(this.r - p.length);
            }
            this.p = p.subarray(s), this.v = 0;
        }
        // necessary to prevent TS from using the closure value
        // This allows for workerization to function correctly
        Inflate.prototype.c.call(this, final);
        // process concatenated GZIP
        if (this.s.f && !this.s.l && !final) {
            this.v = shft(this.s.p) + 9;
            this.s = {
                i: 0
            };
            this.o = new u8(0);
            this.push(new u8(0), final);
        }
    };
    return Gunzip;
}();
;
/**
 * Asynchronous streaming single or multi-member GZIP decompression
 */ var AsyncGunzip = function() {
    function AsyncGunzip(opts, cb) {
        var _this = this;
        astrmify([
            bInflt,
            guze,
            function() {
                return [
                    astrm,
                    Inflate,
                    Gunzip
                ];
            }
        ], this, StrmOpt.call(this, opts, cb), function(ev) {
            var strm = new Gunzip(ev.data);
            strm.onmember = function(offset) {
                return postMessage(offset);
            };
            onmessage = astrm(strm);
        }, 9, 0, function(offset) {
            return _this.onmember && _this.onmember(offset);
        });
    }
    return AsyncGunzip;
}();
;
function gunzip(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') err(7);
    return cbify(data, opts, [
        bInflt,
        guze,
        function() {
            return [
                gunzipSync
            ];
        }
    ], function(ev) {
        return pbf(gunzipSync(ev.data[0], ev.data[1]));
    }, 3, cb);
}
function gunzipSync(data, opts) {
    var st = gzs(data);
    if (st + 8 > data.length) err(6, 'invalid gzip data');
    return inflt(data.subarray(st, -8), {
        i: 2
    }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);
}
/**
 * Streaming Zlib compression
 */ var Zlib = function() {
    function Zlib(opts, cb) {
        this.c = adler();
        this.v = 1;
        Deflate.call(this, opts, cb);
    }
    /**
     * Pushes a chunk to be zlibbed
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Zlib.prototype.push = function(chunk, final) {
        this.c.p(chunk);
        Deflate.prototype.push.call(this, chunk, final);
    };
    Zlib.prototype.p = function(c, f) {
        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);
        if (this.v) zlh(raw, this.o), this.v = 0;
        if (f) wbytes(raw, raw.length - 4, this.c.d());
        this.ondata(raw, f);
    };
    /**
     * Flushes buffered uncompressed data. Useful to immediately retrieve the
     * zlibbed output for small inputs.
     */ Zlib.prototype.flush = function() {
        Deflate.prototype.flush.call(this);
    };
    return Zlib;
}();
;
/**
 * Asynchronous streaming Zlib compression
 */ var AsyncZlib = function() {
    function AsyncZlib(opts, cb) {
        astrmify([
            bDflt,
            zle,
            function() {
                return [
                    astrm,
                    Deflate,
                    Zlib
                ];
            }
        ], this, StrmOpt.call(this, opts, cb), function(ev) {
            var strm = new Zlib(ev.data);
            onmessage = astrm(strm);
        }, 10, 1);
    }
    return AsyncZlib;
}();
;
function zlib(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') err(7);
    return cbify(data, opts, [
        bDflt,
        zle,
        function() {
            return [
                zlibSync
            ];
        }
    ], function(ev) {
        return pbf(zlibSync(ev.data[0], ev.data[1]));
    }, 4, cb);
}
function zlibSync(data, opts) {
    if (!opts) opts = {};
    var a = adler();
    a.p(data);
    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);
    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;
}
/**
 * Streaming Zlib decompression
 */ var Unzlib = function() {
    function Unzlib(opts, cb) {
        Inflate.call(this, opts, cb);
        this.v = opts && opts.dictionary ? 2 : 1;
    }
    /**
     * Pushes a chunk to be unzlibbed
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Unzlib.prototype.push = function(chunk, final) {
        Inflate.prototype.e.call(this, chunk);
        if (this.v) {
            if (this.p.length < 6 && !final) return;
            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;
        }
        if (final) {
            if (this.p.length < 4) err(6, 'invalid zlib data');
            this.p = this.p.subarray(0, -4);
        }
        // necessary to prevent TS from using the closure value
        // This allows for workerization to function correctly
        Inflate.prototype.c.call(this, final);
    };
    return Unzlib;
}();
;
/**
 * Asynchronous streaming Zlib decompression
 */ var AsyncUnzlib = function() {
    function AsyncUnzlib(opts, cb) {
        astrmify([
            bInflt,
            zule,
            function() {
                return [
                    astrm,
                    Inflate,
                    Unzlib
                ];
            }
        ], this, StrmOpt.call(this, opts, cb), function(ev) {
            var strm = new Unzlib(ev.data);
            onmessage = astrm(strm);
        }, 11, 0);
    }
    return AsyncUnzlib;
}();
;
function unzlib(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') err(7);
    return cbify(data, opts, [
        bInflt,
        zule,
        function() {
            return [
                unzlibSync
            ];
        }
    ], function(ev) {
        return pbf(unzlibSync(ev.data[0], gopt(ev.data[1])));
    }, 5, cb);
}
function unzlibSync(data, opts) {
    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), {
        i: 2
    }, opts && opts.out, opts && opts.dictionary);
}
;
;
/**
 * Streaming GZIP, Zlib, or raw DEFLATE decompression
 */ var Decompress = function() {
    function Decompress(opts, cb) {
        this.o = StrmOpt.call(this, opts, cb) || {};
        this.G = Gunzip;
        this.I = Inflate;
        this.Z = Unzlib;
    }
    // init substream
    // overriden by AsyncDecompress
    Decompress.prototype.i = function() {
        var _this = this;
        this.s.ondata = function(dat, final) {
            _this.ondata(dat, final);
        };
    };
    /**
     * Pushes a chunk to be decompressed
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Decompress.prototype.push = function(chunk, final) {
        if (!this.ondata) err(5);
        if (!this.s) {
            if (this.p && this.p.length) {
                var n = new u8(this.p.length + chunk.length);
                n.set(this.p), n.set(chunk, this.p.length);
            } else this.p = chunk;
            if (this.p.length > 2) {
                this.s = this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8 ? new this.G(this.o) : (this.p[0] & 15) != 8 || this.p[0] >> 4 > 7 || (this.p[0] << 8 | this.p[1]) % 31 ? new this.I(this.o) : new this.Z(this.o);
                this.i();
                this.s.push(this.p, final);
                this.p = null;
            }
        } else this.s.push(chunk, final);
    };
    return Decompress;
}();
;
/**
 * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression
 */ var AsyncDecompress = function() {
    function AsyncDecompress(opts, cb) {
        Decompress.call(this, opts, cb);
        this.queuedSize = 0;
        this.G = AsyncGunzip;
        this.I = AsyncInflate;
        this.Z = AsyncUnzlib;
    }
    AsyncDecompress.prototype.i = function() {
        var _this = this;
        this.s.ondata = function(err, dat, final) {
            _this.ondata(err, dat, final);
        };
        this.s.ondrain = function(size) {
            _this.queuedSize -= size;
            if (_this.ondrain) _this.ondrain(size);
        };
    };
    /**
     * Pushes a chunk to be decompressed
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ AsyncDecompress.prototype.push = function(chunk, final) {
        this.queuedSize += chunk.length;
        Decompress.prototype.push.call(this, chunk, final);
    };
    return AsyncDecompress;
}();
;
function decompress(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') err(7);
    return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzip(data, opts, cb) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflate(data, opts, cb) : unzlib(data, opts, cb);
}
function decompressSync(data, opts) {
    return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzipSync(data, opts) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflateSync(data, opts) : unzlibSync(data, opts);
}
// flatten a directory structure
var fltn = function(d, p, t, o) {
    for(var k in d){
        var val = d[k], n = p + k, op = o;
        if (Array.isArray(val)) op = mrg(o, val[1]), val = val[0];
        if (val instanceof u8) t[n] = [
            val,
            op
        ];
        else {
            t[n += '/'] = [
                new u8(0),
                op
            ];
            fltn(val, n, t, o);
        }
    }
};
// text encoder
var te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();
// text decoder
var td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();
// text decoder stream
var tds = 0;
try {
    td.decode(et, {
        stream: true
    });
    tds = 1;
} catch (e) {}
// decode UTF8
var dutf8 = function(d) {
    for(var r = '', i = 0;;){
        var c = d[i++];
        var eb = (c > 127) + (c > 223) + (c > 239);
        if (i + eb > d.length) return {
            s: r,
            r: slc(d, i - 1)
        };
        if (!eb) r += String.fromCharCode(c);
        else if (eb == 3) {
            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | d[i++] & 63) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);
        } else if (eb & 1) r += String.fromCharCode((c & 31) << 6 | d[i++] & 63);
        else r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | d[i++] & 63);
    }
};
/**
 * Streaming UTF-8 decoding
 */ var DecodeUTF8 = function() {
    /**
     * Creates a UTF-8 decoding stream
     * @param cb The callback to call whenever data is decoded
     */ function DecodeUTF8(cb) {
        this.ondata = cb;
        if (tds) this.t = new TextDecoder();
        else this.p = et;
    }
    /**
     * Pushes a chunk to be decoded from UTF-8 binary
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ DecodeUTF8.prototype.push = function(chunk, final) {
        if (!this.ondata) err(5);
        final = !!final;
        if (this.t) {
            this.ondata(this.t.decode(chunk, {
                stream: true
            }), final);
            if (final) {
                if (this.t.decode().length) err(8);
                this.t = null;
            }
            return;
        }
        if (!this.p) err(4);
        var dat = new u8(this.p.length + chunk.length);
        dat.set(this.p);
        dat.set(chunk, this.p.length);
        var _a = dutf8(dat), s = _a.s, r = _a.r;
        if (final) {
            if (r.length) err(8);
            this.p = null;
        } else this.p = r;
        this.ondata(s, final);
    };
    return DecodeUTF8;
}();
;
/**
 * Streaming UTF-8 encoding
 */ var EncodeUTF8 = function() {
    /**
     * Creates a UTF-8 decoding stream
     * @param cb The callback to call whenever data is encoded
     */ function EncodeUTF8(cb) {
        this.ondata = cb;
    }
    /**
     * Pushes a chunk to be encoded to UTF-8
     * @param chunk The string data to push
     * @param final Whether this is the last chunk
     */ EncodeUTF8.prototype.push = function(chunk, final) {
        if (!this.ondata) err(5);
        if (this.d) err(4);
        this.ondata(strToU8(chunk), this.d = final || false);
    };
    return EncodeUTF8;
}();
;
function strToU8(str, latin1) {
    if (latin1) {
        var ar_1 = new u8(str.length);
        for(var i = 0; i < str.length; ++i)ar_1[i] = str.charCodeAt(i);
        return ar_1;
    }
    if (te) return te.encode(str);
    var l = str.length;
    var ar = new u8(str.length + (str.length >> 1));
    var ai = 0;
    var w = function(v) {
        ar[ai++] = v;
    };
    for(var i = 0; i < l; ++i){
        if (ai + 5 > ar.length) {
            var n = new u8(ai + 8 + (l - i << 1));
            n.set(ar);
            ar = n;
        }
        var c = str.charCodeAt(i);
        if (c < 128 || latin1) w(c);
        else if (c < 2048) w(192 | c >> 6), w(128 | c & 63);
        else if (c > 55295 && c < 57344) c = 65536 + (c & 1023 << 10) | str.charCodeAt(++i) & 1023, w(240 | c >> 18), w(128 | c >> 12 & 63), w(128 | c >> 6 & 63), w(128 | c & 63);
        else w(224 | c >> 12), w(128 | c >> 6 & 63), w(128 | c & 63);
    }
    return slc(ar, 0, ai);
}
function strFromU8(dat, latin1) {
    if (latin1) {
        var r = '';
        for(var i = 0; i < dat.length; i += 16384)r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));
        return r;
    } else if (td) {
        return td.decode(dat);
    } else {
        var _a = dutf8(dat), s = _a.s, r = _a.r;
        if (r.length) err(8);
        return s;
    }
}
;
// deflate bit flag
var dbf = function(l) {
    return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0;
};
// skip local zip header
var slzh = function(d, b) {
    return b + 30 + b2(d, b + 26) + b2(d, b + 28);
};
// read zip header
var zh = function(d, b, z) {
    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);
    var _a = z && bs == 4294967295 ? z64e(d, es) : [
        bs,
        b4(d, b + 24),
        b4(d, b + 42)
    ], sc = _a[0], su = _a[1], off = _a[2];
    return [
        b2(d, b + 10),
        sc,
        su,
        fn,
        es + b2(d, b + 30) + b2(d, b + 32),
        off
    ];
};
// read zip64 extra field
var z64e = function(d, b) {
    for(; b2(d, b) != 1; b += 4 + b2(d, b + 2));
    return [
        b8(d, b + 12),
        b8(d, b + 4),
        b8(d, b + 20)
    ];
};
// extra field length
var exfl = function(ex) {
    var le = 0;
    if (ex) {
        for(var k in ex){
            var l = ex[k].length;
            if (l > 65535) err(9);
            le += l + 4;
        }
    }
    return le;
};
// write zip header
var wzh = function(d, b, f, fn, u, c, ce, co) {
    var fl = fn.length, ex = f.extra, col = co && co.length;
    var exl = exfl(ex);
    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;
    if (ce != null) d[b++] = 20, d[b++] = f.os;
    d[b] = 20, b += 2; // spec compliance? what's that?
    d[b++] = f.flag << 1 | (c < 0 && 8), d[b++] = u && 8;
    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;
    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;
    if (y < 0 || y > 119) err(10);
    wbytes(d, b, y << 25 | dt.getMonth() + 1 << 21 | dt.getDate() << 16 | dt.getHours() << 11 | dt.getMinutes() << 5 | dt.getSeconds() >> 1), b += 4;
    if (c != -1) {
        wbytes(d, b, f.crc);
        wbytes(d, b + 4, c < 0 ? -c - 2 : c);
        wbytes(d, b + 8, f.size);
    }
    wbytes(d, b + 12, fl);
    wbytes(d, b + 14, exl), b += 16;
    if (ce != null) {
        wbytes(d, b, col);
        wbytes(d, b + 6, f.attrs);
        wbytes(d, b + 10, ce), b += 14;
    }
    d.set(fn, b);
    b += fl;
    if (exl) {
        for(var k in ex){
            var exf = ex[k], l = exf.length;
            wbytes(d, b, +k);
            wbytes(d, b + 2, l);
            d.set(exf, b + 4), b += 4 + l;
        }
    }
    if (col) d.set(co, b), b += col;
    return b;
};
// write zip footer (end of central directory)
var wzf = function(o, b, c, d, e) {
    wbytes(o, b, 0x6054B50); // skip disk
    wbytes(o, b + 8, c);
    wbytes(o, b + 10, c);
    wbytes(o, b + 12, d);
    wbytes(o, b + 16, e);
};
/**
 * A pass-through stream to keep data uncompressed in a ZIP archive.
 */ var ZipPassThrough = function() {
    /**
     * Creates a pass-through stream that can be added to ZIP archives
     * @param filename The filename to associate with this data stream
     */ function ZipPassThrough(filename) {
        this.filename = filename;
        this.c = crc();
        this.size = 0;
        this.compression = 0;
    }
    /**
     * Processes a chunk and pushes to the output stream. You can override this
     * method in a subclass for custom behavior, but by default this passes
     * the data through. You must call this.ondata(err, chunk, final) at some
     * point in this method.
     * @param chunk The chunk to process
     * @param final Whether this is the last chunk
     */ ZipPassThrough.prototype.process = function(chunk, final) {
        this.ondata(null, chunk, final);
    };
    /**
     * Pushes a chunk to be added. If you are subclassing this with a custom
     * compression algorithm, note that you must push data from the source
     * file only, pre-compression.
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ ZipPassThrough.prototype.push = function(chunk, final) {
        if (!this.ondata) err(5);
        this.c.p(chunk);
        this.size += chunk.length;
        if (final) this.crc = this.c.d();
        this.process(chunk, final || false);
    };
    return ZipPassThrough;
}();
;
// I don't extend because TypeScript extension adds 1kB of runtime bloat
/**
 * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate
 * for better performance
 */ var ZipDeflate = function() {
    /**
     * Creates a DEFLATE stream that can be added to ZIP archives
     * @param filename The filename to associate with this data stream
     * @param opts The compression options
     */ function ZipDeflate(filename, opts) {
        var _this = this;
        if (!opts) opts = {};
        ZipPassThrough.call(this, filename);
        this.d = new Deflate(opts, function(dat, final) {
            _this.ondata(null, dat, final);
        });
        this.compression = 8;
        this.flag = dbf(opts.level);
    }
    ZipDeflate.prototype.process = function(chunk, final) {
        try {
            this.d.push(chunk, final);
        } catch (e) {
            this.ondata(e, null, final);
        }
    };
    /**
     * Pushes a chunk to be deflated
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ ZipDeflate.prototype.push = function(chunk, final) {
        ZipPassThrough.prototype.push.call(this, chunk, final);
    };
    return ZipDeflate;
}();
;
/**
 * Asynchronous streaming DEFLATE compression for ZIP archives
 */ var AsyncZipDeflate = function() {
    /**
     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives
     * @param filename The filename to associate with this data stream
     * @param opts The compression options
     */ function AsyncZipDeflate(filename, opts) {
        var _this = this;
        if (!opts) opts = {};
        ZipPassThrough.call(this, filename);
        this.d = new AsyncDeflate(opts, function(err, dat, final) {
            _this.ondata(err, dat, final);
        });
        this.compression = 8;
        this.flag = dbf(opts.level);
        this.terminate = this.d.terminate;
    }
    AsyncZipDeflate.prototype.process = function(chunk, final) {
        this.d.push(chunk, final);
    };
    /**
     * Pushes a chunk to be deflated
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ AsyncZipDeflate.prototype.push = function(chunk, final) {
        ZipPassThrough.prototype.push.call(this, chunk, final);
    };
    return AsyncZipDeflate;
}();
;
// TODO: Better tree shaking
/**
 * A zippable archive to which files can incrementally be added
 */ var Zip = function() {
    /**
     * Creates an empty ZIP archive to which files can be added
     * @param cb The callback to call whenever data for the generated ZIP archive
     *           is available
     */ function Zip(cb) {
        this.ondata = cb;
        this.u = [];
        this.d = 1;
    }
    /**
     * Adds a file to the ZIP archive
     * @param file The file stream to add
     */ Zip.prototype.add = function(file) {
        var _this = this;
        if (!this.ondata) err(5);
        // finishing or finished
        if (this.d & 2) this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);
        else {
            var f = strToU8(file.filename), fl_1 = f.length;
            var com = file.comment, o = com && strToU8(com);
            var u = fl_1 != file.filename.length || o && com.length != o.length;
            var hl_1 = fl_1 + exfl(file.extra) + 30;
            if (fl_1 > 65535) this.ondata(err(11, 0, 1), null, false);
            var header = new u8(hl_1);
            wzh(header, 0, file, f, u, -1);
            var chks_1 = [
                header
            ];
            var pAll_1 = function() {
                for(var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++){
                    var chk = chks_2[_i];
                    _this.ondata(null, chk, false);
                }
                chks_1 = [];
            };
            var tr_1 = this.d;
            this.d = 0;
            var ind_1 = this.u.length;
            var uf_1 = mrg(file, {
                f: f,
                u: u,
                o: o,
                t: function() {
                    if (file.terminate) file.terminate();
                },
                r: function() {
                    pAll_1();
                    if (tr_1) {
                        var nxt = _this.u[ind_1 + 1];
                        if (nxt) nxt.r();
                        else _this.d = 1;
                    }
                    tr_1 = 1;
                }
            });
            var cl_1 = 0;
            file.ondata = function(err, dat, final) {
                if (err) {
                    _this.ondata(err, dat, final);
                    _this.terminate();
                } else {
                    cl_1 += dat.length;
                    chks_1.push(dat);
                    if (final) {
                        var dd = new u8(16);
                        wbytes(dd, 0, 0x8074B50);
                        wbytes(dd, 4, file.crc);
                        wbytes(dd, 8, cl_1);
                        wbytes(dd, 12, file.size);
                        chks_1.push(dd);
                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;
                        if (tr_1) uf_1.r();
                        tr_1 = 1;
                    } else if (tr_1) pAll_1();
                }
            };
            this.u.push(uf_1);
        }
    };
    /**
     * Ends the process of adding files and prepares to emit the final chunks.
     * This *must* be called after adding all desired files for the resulting
     * ZIP file to work properly.
     */ Zip.prototype.end = function() {
        var _this = this;
        if (this.d & 2) {
            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);
            return;
        }
        if (this.d) this.e();
        else this.u.push({
            r: function() {
                if (!(_this.d & 1)) return;
                _this.u.splice(-1, 1);
                _this.e();
            },
            t: function() {}
        });
        this.d = 3;
    };
    Zip.prototype.e = function() {
        var bt = 0, l = 0, tl = 0;
        for(var _i = 0, _a = this.u; _i < _a.length; _i++){
            var f = _a[_i];
            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);
        }
        var out = new u8(tl + 22);
        for(var _b = 0, _c = this.u; _b < _c.length; _b++){
            var f = _c[_b];
            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);
            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;
        }
        wzf(out, bt, this.u.length, tl, l);
        this.ondata(null, out, true);
        this.d = 2;
    };
    /**
     * A method to terminate any internal workers used by the stream. Subsequent
     * calls to add() will fail.
     */ Zip.prototype.terminate = function() {
        for(var _i = 0, _a = this.u; _i < _a.length; _i++){
            var f = _a[_i];
            f.t();
        }
        this.d = 2;
    };
    return Zip;
}();
;
function zip(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') err(7);
    var r = {};
    fltn(data, '', r, opts);
    var k = Object.keys(r);
    var lft = k.length, o = 0, tot = 0;
    var slft = lft, files = new Array(lft);
    var term = [];
    var tAll = function() {
        for(var i = 0; i < term.length; ++i)term[i]();
    };
    var cbd = function(a, b) {
        mt(function() {
            cb(a, b);
        });
    };
    mt(function() {
        cbd = cb;
    });
    var cbf = function() {
        var out = new u8(tot + 22), oe = o, cdl = tot - o;
        tot = 0;
        for(var i = 0; i < slft; ++i){
            var f = files[i];
            try {
                var l = f.c.length;
                wzh(out, tot, f, f.f, f.u, l);
                var badd = 30 + f.f.length + exfl(f.extra);
                var loc = tot + badd;
                out.set(f.c, loc);
                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;
            } catch (e) {
                return cbd(e, null);
            }
        }
        wzf(out, o, files.length, cdl, oe);
        cbd(null, out);
    };
    if (!lft) cbf();
    var _loop_1 = function(i) {
        var fn = k[i];
        var _a = r[fn], file = _a[0], p = _a[1];
        var c = crc(), size = file.length;
        c.p(file);
        var f = strToU8(fn), s = f.length;
        var com = p.comment, m = com && strToU8(com), ms = m && m.length;
        var exl = exfl(p.extra);
        var compression = p.level == 0 ? 0 : 8;
        var cbl = function(e, d) {
            if (e) {
                tAll();
                cbd(e, null);
            } else {
                var l = d.length;
                files[i] = mrg(p, {
                    size: size,
                    crc: c.d(),
                    c: d,
                    f: f,
                    m: m,
                    u: s != fn.length || m && com.length != ms,
                    compression: compression
                });
                o += 30 + s + exl + l;
                tot += 76 + 2 * (s + exl) + (ms || 0) + l;
                if (!--lft) cbf();
            }
        };
        if (s > 65535) cbl(err(11, 0, 1), null);
        if (!compression) cbl(null, file);
        else if (size < 160000) {
            try {
                cbl(null, deflateSync(file, p));
            } catch (e) {
                cbl(e, null);
            }
        } else term.push(deflate(file, p, cbl));
    };
    // Cannot use lft because it can decrease
    for(var i = 0; i < slft; ++i){
        _loop_1(i);
    }
    return tAll;
}
function zipSync(data, opts) {
    if (!opts) opts = {};
    var r = {};
    var files = [];
    fltn(data, '', r, opts);
    var o = 0;
    var tot = 0;
    for(var fn in r){
        var _a = r[fn], file = _a[0], p = _a[1];
        var compression = p.level == 0 ? 0 : 8;
        var f = strToU8(fn), s = f.length;
        var com = p.comment, m = com && strToU8(com), ms = m && m.length;
        var exl = exfl(p.extra);
        if (s > 65535) err(11);
        var d = compression ? deflateSync(file, p) : file, l = d.length;
        var c = crc();
        c.p(file);
        files.push(mrg(p, {
            size: file.length,
            crc: c.d(),
            c: d,
            f: f,
            m: m,
            u: s != fn.length || m && com.length != ms,
            o: o,
            compression: compression
        }));
        o += 30 + s + exl + l;
        tot += 76 + 2 * (s + exl) + (ms || 0) + l;
    }
    var out = new u8(tot + 22), oe = o, cdl = tot - o;
    for(var i = 0; i < files.length; ++i){
        var f = files[i];
        wzh(out, f.o, f, f.f, f.u, f.c.length);
        var badd = 30 + f.f.length + exfl(f.extra);
        out.set(f.c, f.o + badd);
        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);
    }
    wzf(out, o, files.length, cdl, oe);
    return out;
}
/**
 * Streaming pass-through decompression for ZIP archives
 */ var UnzipPassThrough = function() {
    function UnzipPassThrough() {}
    UnzipPassThrough.prototype.push = function(data, final) {
        this.ondata(null, data, final);
    };
    UnzipPassThrough.compression = 0;
    return UnzipPassThrough;
}();
;
/**
 * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for
 * better performance.
 */ var UnzipInflate = function() {
    /**
     * Creates a DEFLATE decompression that can be used in ZIP archives
     */ function UnzipInflate() {
        var _this = this;
        this.i = new Inflate(function(dat, final) {
            _this.ondata(null, dat, final);
        });
    }
    UnzipInflate.prototype.push = function(data, final) {
        try {
            this.i.push(data, final);
        } catch (e) {
            this.ondata(e, null, final);
        }
    };
    UnzipInflate.compression = 8;
    return UnzipInflate;
}();
;
/**
 * Asynchronous streaming DEFLATE decompression for ZIP archives
 */ var AsyncUnzipInflate = function() {
    /**
     * Creates a DEFLATE decompression that can be used in ZIP archives
     */ function AsyncUnzipInflate(_, sz) {
        var _this = this;
        if (sz < 320000) {
            this.i = new Inflate(function(dat, final) {
                _this.ondata(null, dat, final);
            });
        } else {
            this.i = new AsyncInflate(function(err, dat, final) {
                _this.ondata(err, dat, final);
            });
            this.terminate = this.i.terminate;
        }
    }
    AsyncUnzipInflate.prototype.push = function(data, final) {
        if (this.i.terminate) data = slc(data, 0);
        this.i.push(data, final);
    };
    AsyncUnzipInflate.compression = 8;
    return AsyncUnzipInflate;
}();
;
/**
 * A ZIP archive decompression stream that emits files as they are discovered
 */ var Unzip = function() {
    /**
     * Creates a ZIP decompression stream
     * @param cb The callback to call whenever a file in the ZIP archive is found
     */ function Unzip(cb) {
        this.onfile = cb;
        this.k = [];
        this.o = {
            0: UnzipPassThrough
        };
        this.p = et;
    }
    /**
     * Pushes a chunk to be unzipped
     * @param chunk The chunk to push
     * @param final Whether this is the last chunk
     */ Unzip.prototype.push = function(chunk, final) {
        var _this = this;
        if (!this.onfile) err(5);
        if (!this.p) err(4);
        if (this.c > 0) {
            var len = Math.min(this.c, chunk.length);
            var toAdd = chunk.subarray(0, len);
            this.c -= len;
            if (this.d) this.d.push(toAdd, !this.c);
            else this.k[0].push(toAdd);
            chunk = chunk.subarray(len);
            if (chunk.length) return this.push(chunk, final);
        } else {
            var f = 0, i = 0, is = void 0, buf = void 0;
            if (!this.p.length) buf = chunk;
            else if (!chunk.length) buf = this.p;
            else {
                buf = new u8(this.p.length + chunk.length);
                buf.set(this.p), buf.set(chunk, this.p.length);
            }
            var l = buf.length, oc = this.c, add = oc && this.d;
            var _loop_2 = function() {
                var _a;
                var sig = b4(buf, i);
                if (sig == 0x4034B50) {
                    f = 1, is = i;
                    this_1.d = null;
                    this_1.c = 0;
                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);
                    if (l > i + 30 + fnl + es) {
                        var chks_3 = [];
                        this_1.k.unshift(chks_3);
                        f = 2;
                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);
                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);
                        if (sc_1 == 4294967295) {
                            _a = dd ? [
                                -2
                            ] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];
                        } else if (dd) sc_1 = -1;
                        i += es;
                        this_1.c = sc_1;
                        var d_1;
                        var file_1 = {
                            name: fn_1,
                            compression: cmp_1,
                            start: function() {
                                if (!file_1.ondata) err(5);
                                if (!sc_1) file_1.ondata(null, et, true);
                                else {
                                    var ctr = _this.o[cmp_1];
                                    if (!ctr) file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);
                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);
                                    d_1.ondata = function(err, dat, final) {
                                        file_1.ondata(err, dat, final);
                                    };
                                    for(var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++){
                                        var dat = chks_4[_i];
                                        d_1.push(dat, false);
                                    }
                                    if (_this.k[0] == chks_3 && _this.c) _this.d = d_1;
                                    else d_1.push(et, true);
                                }
                            },
                            terminate: function() {
                                if (d_1 && d_1.terminate) d_1.terminate();
                            }
                        };
                        if (sc_1 >= 0) file_1.size = sc_1, file_1.originalSize = su_1;
                        this_1.onfile(file_1);
                    }
                    return "break";
                } else if (oc) {
                    if (sig == 0x8074B50) {
                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;
                        return "break";
                    } else if (sig == 0x2014B50) {
                        is = i -= 4, f = 3, this_1.c = 0;
                        return "break";
                    }
                }
            };
            var this_1 = this;
            for(; i < l - 4; ++i){
                var state_1 = _loop_2();
                if (state_1 === "break") break;
            }
            this.p = et;
            if (oc < 0) {
                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);
                if (add) add.push(dat, !!f);
                else this.k[+(f == 2)].push(dat);
            }
            if (f & 2) return this.push(buf.subarray(i), final);
            this.p = buf.subarray(i);
        }
        if (final) {
            if (this.c) err(13);
            this.p = null;
        }
    };
    /**
     * Registers a decoder with the stream, allowing for files compressed with
     * the compression type provided to be expanded correctly
     * @param decoder The decoder constructor
     */ Unzip.prototype.register = function(decoder) {
        this.o[decoder.compression] = decoder;
    };
    return Unzip;
}();
;
var mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function(fn) {
    fn();
};
function unzip(data, opts, cb) {
    if (!cb) cb = opts, opts = {};
    if (typeof cb != 'function') err(7);
    var term = [];
    var tAll = function() {
        for(var i = 0; i < term.length; ++i)term[i]();
    };
    var files = {};
    var cbd = function(a, b) {
        mt(function() {
            cb(a, b);
        });
    };
    mt(function() {
        cbd = cb;
    });
    var e = data.length - 22;
    for(; b4(data, e) != 0x6054B50; --e){
        if (!e || data.length - e > 65558) {
            cbd(err(13, 0, 1), null);
            return tAll;
        }
    }
    ;
    var lft = b2(data, e + 8);
    if (lft) {
        var c = lft;
        var o = b4(data, e + 16);
        var z = o == 4294967295 || c == 65535;
        if (z) {
            var ze = b4(data, e - 12);
            z = b4(data, ze) == 0x6064B50;
            if (z) {
                c = lft = b4(data, ze + 32);
                o = b4(data, ze + 48);
            }
        }
        var fltr = opts && opts.filter;
        var _loop_3 = function(i) {
            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);
            o = no;
            var cbl = function(e, d) {
                if (e) {
                    tAll();
                    cbd(e, null);
                } else {
                    if (d) files[fn] = d;
                    if (!--lft) cbd(null, files);
                }
            };
            if (!fltr || fltr({
                name: fn,
                size: sc,
                originalSize: su,
                compression: c_1
            })) {
                if (!c_1) cbl(null, slc(data, b, b + sc));
                else if (c_1 == 8) {
                    var infl = data.subarray(b, b + sc);
                    // Synchronously decompress under 512KB, or barely-compressed data
                    if (su < 524288 || sc > 0.8 * su) {
                        try {
                            cbl(null, inflateSync(infl, {
                                out: new u8(su)
                            }));
                        } catch (e) {
                            cbl(e, null);
                        }
                    } else term.push(inflate(infl, {
                        size: su
                    }, cbl));
                } else cbl(err(14, 'unknown compression type ' + c_1, 1), null);
            } else cbl(null, null);
        };
        for(var i = 0; i < c; ++i){
            _loop_3(i);
        }
    } else cbd(null, {});
    return tAll;
}
function unzipSync(data, opts) {
    var files = {};
    var e = data.length - 22;
    for(; b4(data, e) != 0x6054B50; --e){
        if (!e || data.length - e > 65558) err(13);
    }
    ;
    var c = b2(data, e + 8);
    if (!c) return {};
    var o = b4(data, e + 16);
    var z = o == 4294967295 || c == 65535;
    if (z) {
        var ze = b4(data, e - 12);
        z = b4(data, ze) == 0x6064B50;
        if (z) {
            c = b4(data, ze + 32);
            o = b4(data, ze + 48);
        }
    }
    var fltr = opts && opts.filter;
    for(var i = 0; i < c; ++i){
        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);
        o = no;
        if (!fltr || fltr({
            name: fn,
            size: sc,
            originalSize: su,
            compression: c_2
        })) {
            if (!c_2) files[fn] = slc(data, b, b + sc);
            else if (c_2 == 8) files[fn] = inflateSync(data.subarray(b, b + sc), {
                out: new u8(su)
            });
            else err(14, 'unknown compression type ' + c_2);
        }
    }
    return files;
}
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/compression/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "COMPRESSION_CHUNK_SIZE": (()=>COMPRESSION_CHUNK_SIZE),
    "compressFile": (()=>compressFile),
    "decompressFile": (()=>decompressFile)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$utils$2f$async$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/utils/async.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/protobuf/OnchainMetadata.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$fflate$40$0$2e$8$2e$2$2f$node_modules$2f$fflate$2f$esm$2f$index$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/fflate@0.8.2/node_modules/fflate/esm/index.mjs [app-route] (ecmascript)");
var __asyncValues = this && this.__asyncValues || function(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
};
var __await = this && this.__await || function(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
};
var __asyncGenerator = this && this.__asyncGenerator || function(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function awaitReturn(f) {
        return function(v) {
            return Promise.resolve(v).then(f, reject);
        };
    }
    function verb(n, f) {
        if (g[n]) {
            i[n] = function(v) {
                return new Promise(function(a, b) {
                    q.push([
                        n,
                        v,
                        a,
                        b
                    ]) > 1 || resume(n, v);
                });
            };
            if (f) i[n] = f(i[n]);
        }
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
};
;
;
;
const COMPRESSION_CHUNK_SIZE = 1024 * 1024;
function compressFile(file_1, _a) {
    return __asyncGenerator(this, arguments, function* compressFile_1(file, { level = 9, chunkSize = COMPRESSION_CHUNK_SIZE, algorithm }) {
        var _b, e_1, _c, _d;
        if (algorithm !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CompressionAlgorithm"].ZLIB) {
            throw new Error('Unsupported compression algorithm');
        }
        if (level < 0 || level > 9) {
            throw new Error('Invalid compression level');
        }
        if (chunkSize <= 0) {
            throw new Error('Invalid chunk size');
        }
        const zlib = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$fflate$40$0$2e$8$2e$2$2f$node_modules$2f$fflate$2f$esm$2f$index$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Zlib"]({
            level
        });
        const compressedChunks = [];
        zlib.ondata = (chunk)=>{
            compressedChunks.push(Buffer.from(chunk));
        };
        try {
            for(var _e = true, _f = __asyncValues((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$utils$2f$async$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["asyncByChunk"])(file, chunkSize)), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true){
                _d = _g.value;
                _e = false;
                const chunk = _d;
                zlib.push(chunk, false);
                while(compressedChunks.length > 0){
                    yield yield __await(compressedChunks.shift());
                }
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        zlib.push(new Uint8Array(), true);
        while(compressedChunks.length > 0){
            yield yield __await(compressedChunks.shift());
        }
    });
}
function decompressFile(compressedFile_1, _a) {
    return __asyncGenerator(this, arguments, function* decompressFile_1(compressedFile, { chunkSize = COMPRESSION_CHUNK_SIZE, algorithm, level = 9 }) {
        var _b, e_2, _c, _d;
        if (algorithm !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CompressionAlgorithm"].ZLIB) {
            throw new Error('Unsupported compression algorithm');
        }
        if (chunkSize <= 0) {
            throw new Error('Invalid chunk size');
        }
        if (level < 0 || level > 9) {
            throw new Error('Invalid compression level');
        }
        const unzlib = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$fflate$40$0$2e$8$2e$2$2f$node_modules$2f$fflate$2f$esm$2f$index$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Unzlib"]();
        const decompressedChunks = [];
        unzlib.ondata = (chunk)=>{
            decompressedChunks.push(Buffer.from(chunk));
        };
        try {
            for(var _e = true, _f = __asyncValues((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$utils$2f$async$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["asyncByChunk"])(compressedFile, chunkSize)), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true){
                _d = _g.value;
                _e = false;
                const chunk = _d;
                unzlib.push(chunk, false);
                while(decompressedChunks.length > 0){
                    yield yield __await(decompressedChunks.shift());
                }
            }
        } catch (e_2_1) {
            e_2 = {
                error: e_2_1
            };
        } finally{
            try {
                if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));
            } finally{
                if (e_2) throw e_2.error;
            }
        }
        unzlib.push(new Uint8Array(), true);
        while(decompressedChunks.length > 0){
            yield yield __await(decompressedChunks.shift());
        }
    });
}
}}),
"[project]/node_modules/.pnpm/pvtsutils@1.3.6/node_modules/pvtsutils/build/index.es.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/*!
 * MIT License
 * 
 * Copyright (c) 2017-2024 Peculiar Ventures, LLC
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
 */ __turbopack_esm__({
    "BufferSourceConverter": (()=>BufferSourceConverter),
    "Convert": (()=>Convert),
    "assign": (()=>assign),
    "combine": (()=>combine),
    "isEqual": (()=>isEqual)
});
const ARRAY_BUFFER_NAME = "[object ArrayBuffer]";
class BufferSourceConverter {
    static isArrayBuffer(data) {
        return Object.prototype.toString.call(data) === ARRAY_BUFFER_NAME;
    }
    static toArrayBuffer(data) {
        if (this.isArrayBuffer(data)) {
            return data;
        }
        if (data.byteLength === data.buffer.byteLength) {
            return data.buffer;
        }
        if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {
            return data.buffer;
        }
        return this.toUint8Array(data.buffer).slice(data.byteOffset, data.byteOffset + data.byteLength).buffer;
    }
    static toUint8Array(data) {
        return this.toView(data, Uint8Array);
    }
    static toView(data, type) {
        if (data.constructor === type) {
            return data;
        }
        if (this.isArrayBuffer(data)) {
            return new type(data);
        }
        if (this.isArrayBufferView(data)) {
            return new type(data.buffer, data.byteOffset, data.byteLength);
        }
        throw new TypeError("The provided value is not of type '(ArrayBuffer or ArrayBufferView)'");
    }
    static isBufferSource(data) {
        return this.isArrayBufferView(data) || this.isArrayBuffer(data);
    }
    static isArrayBufferView(data) {
        return ArrayBuffer.isView(data) || data && this.isArrayBuffer(data.buffer);
    }
    static isEqual(a, b) {
        const aView = BufferSourceConverter.toUint8Array(a);
        const bView = BufferSourceConverter.toUint8Array(b);
        if (aView.length !== bView.byteLength) {
            return false;
        }
        for(let i = 0; i < aView.length; i++){
            if (aView[i] !== bView[i]) {
                return false;
            }
        }
        return true;
    }
    static concat(...args) {
        let buffers;
        if (Array.isArray(args[0]) && !(args[1] instanceof Function)) {
            buffers = args[0];
        } else if (Array.isArray(args[0]) && args[1] instanceof Function) {
            buffers = args[0];
        } else {
            if (args[args.length - 1] instanceof Function) {
                buffers = args.slice(0, args.length - 1);
            } else {
                buffers = args;
            }
        }
        let size = 0;
        for (const buffer of buffers){
            size += buffer.byteLength;
        }
        const res = new Uint8Array(size);
        let offset = 0;
        for (const buffer of buffers){
            const view = this.toUint8Array(buffer);
            res.set(view, offset);
            offset += view.length;
        }
        if (args[args.length - 1] instanceof Function) {
            return this.toView(res, args[args.length - 1]);
        }
        return res.buffer;
    }
}
const STRING_TYPE = "string";
const HEX_REGEX = /^[0-9a-f\s]+$/i;
const BASE64_REGEX = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;
const BASE64URL_REGEX = /^[a-zA-Z0-9-_]+$/;
class Utf8Converter {
    static fromString(text) {
        const s = unescape(encodeURIComponent(text));
        const uintArray = new Uint8Array(s.length);
        for(let i = 0; i < s.length; i++){
            uintArray[i] = s.charCodeAt(i);
        }
        return uintArray.buffer;
    }
    static toString(buffer) {
        const buf = BufferSourceConverter.toUint8Array(buffer);
        let encodedString = "";
        for(let i = 0; i < buf.length; i++){
            encodedString += String.fromCharCode(buf[i]);
        }
        const decodedString = decodeURIComponent(escape(encodedString));
        return decodedString;
    }
}
class Utf16Converter {
    static toString(buffer, littleEndian = false) {
        const arrayBuffer = BufferSourceConverter.toArrayBuffer(buffer);
        const dataView = new DataView(arrayBuffer);
        let res = "";
        for(let i = 0; i < arrayBuffer.byteLength; i += 2){
            const code = dataView.getUint16(i, littleEndian);
            res += String.fromCharCode(code);
        }
        return res;
    }
    static fromString(text, littleEndian = false) {
        const res = new ArrayBuffer(text.length * 2);
        const dataView = new DataView(res);
        for(let i = 0; i < text.length; i++){
            dataView.setUint16(i * 2, text.charCodeAt(i), littleEndian);
        }
        return res;
    }
}
class Convert {
    static isHex(data) {
        return typeof data === STRING_TYPE && HEX_REGEX.test(data);
    }
    static isBase64(data) {
        return typeof data === STRING_TYPE && BASE64_REGEX.test(data);
    }
    static isBase64Url(data) {
        return typeof data === STRING_TYPE && BASE64URL_REGEX.test(data);
    }
    static ToString(buffer, enc = "utf8") {
        const buf = BufferSourceConverter.toUint8Array(buffer);
        switch(enc.toLowerCase()){
            case "utf8":
                return this.ToUtf8String(buf);
            case "binary":
                return this.ToBinary(buf);
            case "hex":
                return this.ToHex(buf);
            case "base64":
                return this.ToBase64(buf);
            case "base64url":
                return this.ToBase64Url(buf);
            case "utf16le":
                return Utf16Converter.toString(buf, true);
            case "utf16":
            case "utf16be":
                return Utf16Converter.toString(buf);
            default:
                throw new Error(`Unknown type of encoding '${enc}'`);
        }
    }
    static FromString(str, enc = "utf8") {
        if (!str) {
            return new ArrayBuffer(0);
        }
        switch(enc.toLowerCase()){
            case "utf8":
                return this.FromUtf8String(str);
            case "binary":
                return this.FromBinary(str);
            case "hex":
                return this.FromHex(str);
            case "base64":
                return this.FromBase64(str);
            case "base64url":
                return this.FromBase64Url(str);
            case "utf16le":
                return Utf16Converter.fromString(str, true);
            case "utf16":
            case "utf16be":
                return Utf16Converter.fromString(str);
            default:
                throw new Error(`Unknown type of encoding '${enc}'`);
        }
    }
    static ToBase64(buffer) {
        const buf = BufferSourceConverter.toUint8Array(buffer);
        if (typeof btoa !== "undefined") {
            const binary = this.ToString(buf, "binary");
            return btoa(binary);
        } else {
            return Buffer.from(buf).toString("base64");
        }
    }
    static FromBase64(base64) {
        const formatted = this.formatString(base64);
        if (!formatted) {
            return new ArrayBuffer(0);
        }
        if (!Convert.isBase64(formatted)) {
            throw new TypeError("Argument 'base64Text' is not Base64 encoded");
        }
        if (typeof atob !== "undefined") {
            return this.FromBinary(atob(formatted));
        } else {
            return new Uint8Array(Buffer.from(formatted, "base64")).buffer;
        }
    }
    static FromBase64Url(base64url) {
        const formatted = this.formatString(base64url);
        if (!formatted) {
            return new ArrayBuffer(0);
        }
        if (!Convert.isBase64Url(formatted)) {
            throw new TypeError("Argument 'base64url' is not Base64Url encoded");
        }
        return this.FromBase64(this.Base64Padding(formatted.replace(/\-/g, "+").replace(/\_/g, "/")));
    }
    static ToBase64Url(data) {
        return this.ToBase64(data).replace(/\+/g, "-").replace(/\//g, "_").replace(/\=/g, "");
    }
    static FromUtf8String(text, encoding = Convert.DEFAULT_UTF8_ENCODING) {
        switch(encoding){
            case "ascii":
                return this.FromBinary(text);
            case "utf8":
                return Utf8Converter.fromString(text);
            case "utf16":
            case "utf16be":
                return Utf16Converter.fromString(text);
            case "utf16le":
            case "usc2":
                return Utf16Converter.fromString(text, true);
            default:
                throw new Error(`Unknown type of encoding '${encoding}'`);
        }
    }
    static ToUtf8String(buffer, encoding = Convert.DEFAULT_UTF8_ENCODING) {
        switch(encoding){
            case "ascii":
                return this.ToBinary(buffer);
            case "utf8":
                return Utf8Converter.toString(buffer);
            case "utf16":
            case "utf16be":
                return Utf16Converter.toString(buffer);
            case "utf16le":
            case "usc2":
                return Utf16Converter.toString(buffer, true);
            default:
                throw new Error(`Unknown type of encoding '${encoding}'`);
        }
    }
    static FromBinary(text) {
        const stringLength = text.length;
        const resultView = new Uint8Array(stringLength);
        for(let i = 0; i < stringLength; i++){
            resultView[i] = text.charCodeAt(i);
        }
        return resultView.buffer;
    }
    static ToBinary(buffer) {
        const buf = BufferSourceConverter.toUint8Array(buffer);
        let res = "";
        for(let i = 0; i < buf.length; i++){
            res += String.fromCharCode(buf[i]);
        }
        return res;
    }
    static ToHex(buffer) {
        const buf = BufferSourceConverter.toUint8Array(buffer);
        let result = "";
        const len = buf.length;
        for(let i = 0; i < len; i++){
            const byte = buf[i];
            if (byte < 16) {
                result += "0";
            }
            result += byte.toString(16);
        }
        return result;
    }
    static FromHex(hexString) {
        let formatted = this.formatString(hexString);
        if (!formatted) {
            return new ArrayBuffer(0);
        }
        if (!Convert.isHex(formatted)) {
            throw new TypeError("Argument 'hexString' is not HEX encoded");
        }
        if (formatted.length % 2) {
            formatted = `0${formatted}`;
        }
        const res = new Uint8Array(formatted.length / 2);
        for(let i = 0; i < formatted.length; i = i + 2){
            const c = formatted.slice(i, i + 2);
            res[i / 2] = parseInt(c, 16);
        }
        return res.buffer;
    }
    static ToUtf16String(buffer, littleEndian = false) {
        return Utf16Converter.toString(buffer, littleEndian);
    }
    static FromUtf16String(text, littleEndian = false) {
        return Utf16Converter.fromString(text, littleEndian);
    }
    static Base64Padding(base64) {
        const padCount = 4 - base64.length % 4;
        if (padCount < 4) {
            for(let i = 0; i < padCount; i++){
                base64 += "=";
            }
        }
        return base64;
    }
    static formatString(data) {
        return (data === null || data === void 0 ? void 0 : data.replace(/[\n\r\t ]/g, "")) || "";
    }
}
Convert.DEFAULT_UTF8_ENCODING = "utf8";
function assign(target, ...sources) {
    const res = arguments[0];
    for(let i = 1; i < arguments.length; i++){
        const obj = arguments[i];
        for(const prop in obj){
            res[prop] = obj[prop];
        }
    }
    return res;
}
function combine(...buf) {
    const totalByteLength = buf.map((item)=>item.byteLength).reduce((prev, cur)=>prev + cur);
    const res = new Uint8Array(totalByteLength);
    let currentPos = 0;
    buf.map((item)=>new Uint8Array(item)).forEach((arr)=>{
        for (const item2 of arr){
            res[currentPos++] = item2;
        }
    });
    return res.buffer;
}
function isEqual(bytes1, bytes2) {
    if (!(bytes1 && bytes2)) {
        return false;
    }
    if (bytes1.byteLength !== bytes2.byteLength) {
        return false;
    }
    const b1 = new Uint8Array(bytes1);
    const b2 = new Uint8Array(bytes2);
    for(let i = 0; i < bytes1.byteLength; i++){
        if (b1[i] !== b2[i]) {
            return false;
        }
    }
    return true;
}
;
}}),
"[project]/node_modules/.pnpm/pvutils@1.1.3/node_modules/pvutils/build/utils.es.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/*!
 Copyright (c) Peculiar Ventures, LLC
*/ __turbopack_esm__({
    "arrayBufferToString": (()=>arrayBufferToString),
    "bufferToHexCodes": (()=>bufferToHexCodes),
    "checkBufferParams": (()=>checkBufferParams),
    "clearProps": (()=>clearProps),
    "fromBase64": (()=>fromBase64),
    "getParametersValue": (()=>getParametersValue),
    "getUTCDate": (()=>getUTCDate),
    "isEqualBuffer": (()=>isEqualBuffer),
    "nearestPowerOf2": (()=>nearestPowerOf2),
    "padNumber": (()=>padNumber),
    "stringToArrayBuffer": (()=>stringToArrayBuffer),
    "toBase64": (()=>toBase64),
    "utilConcatBuf": (()=>utilConcatBuf),
    "utilConcatView": (()=>utilConcatView),
    "utilDecodeTC": (()=>utilDecodeTC),
    "utilEncodeTC": (()=>utilEncodeTC),
    "utilFromBase": (()=>utilFromBase),
    "utilToBase": (()=>utilToBase)
});
function getUTCDate(date) {
    return new Date(date.getTime() + date.getTimezoneOffset() * 60000);
}
function getParametersValue(parameters, name, defaultValue) {
    var _a;
    if (parameters instanceof Object === false) {
        return defaultValue;
    }
    return (_a = parameters[name]) !== null && _a !== void 0 ? _a : defaultValue;
}
function bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = inputBuffer.byteLength - inputOffset, insertSpace = false) {
    let result = "";
    for (const item of new Uint8Array(inputBuffer, inputOffset, inputLength)){
        const str = item.toString(16).toUpperCase();
        if (str.length === 1) {
            result += "0";
        }
        result += str;
        if (insertSpace) {
            result += " ";
        }
    }
    return result.trim();
}
function checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {
    if (!(inputBuffer instanceof ArrayBuffer)) {
        baseBlock.error = "Wrong parameter: inputBuffer must be \"ArrayBuffer\"";
        return false;
    }
    if (!inputBuffer.byteLength) {
        baseBlock.error = "Wrong parameter: inputBuffer has zero length";
        return false;
    }
    if (inputOffset < 0) {
        baseBlock.error = "Wrong parameter: inputOffset less than zero";
        return false;
    }
    if (inputLength < 0) {
        baseBlock.error = "Wrong parameter: inputLength less than zero";
        return false;
    }
    if (inputBuffer.byteLength - inputOffset - inputLength < 0) {
        baseBlock.error = "End of input reached before message was fully decoded (inconsistent offset and length values)";
        return false;
    }
    return true;
}
function utilFromBase(inputBuffer, inputBase) {
    let result = 0;
    if (inputBuffer.length === 1) {
        return inputBuffer[0];
    }
    for(let i = inputBuffer.length - 1; i >= 0; i--){
        result += inputBuffer[inputBuffer.length - 1 - i] * Math.pow(2, inputBase * i);
    }
    return result;
}
function utilToBase(value, base, reserved = -1) {
    const internalReserved = reserved;
    let internalValue = value;
    let result = 0;
    let biggest = Math.pow(2, base);
    for(let i = 1; i < 8; i++){
        if (value < biggest) {
            let retBuf;
            if (internalReserved < 0) {
                retBuf = new ArrayBuffer(i);
                result = i;
            } else {
                if (internalReserved < i) {
                    return new ArrayBuffer(0);
                }
                retBuf = new ArrayBuffer(internalReserved);
                result = internalReserved;
            }
            const retView = new Uint8Array(retBuf);
            for(let j = i - 1; j >= 0; j--){
                const basis = Math.pow(2, j * base);
                retView[result - j - 1] = Math.floor(internalValue / basis);
                internalValue -= retView[result - j - 1] * basis;
            }
            return retBuf;
        }
        biggest *= Math.pow(2, base);
    }
    return new ArrayBuffer(0);
}
function utilConcatBuf(...buffers) {
    let outputLength = 0;
    let prevLength = 0;
    for (const buffer of buffers){
        outputLength += buffer.byteLength;
    }
    const retBuf = new ArrayBuffer(outputLength);
    const retView = new Uint8Array(retBuf);
    for (const buffer of buffers){
        retView.set(new Uint8Array(buffer), prevLength);
        prevLength += buffer.byteLength;
    }
    return retBuf;
}
function utilConcatView(...views) {
    let outputLength = 0;
    let prevLength = 0;
    for (const view of views){
        outputLength += view.length;
    }
    const retBuf = new ArrayBuffer(outputLength);
    const retView = new Uint8Array(retBuf);
    for (const view of views){
        retView.set(view, prevLength);
        prevLength += view.length;
    }
    return retView;
}
function utilDecodeTC() {
    const buf = new Uint8Array(this.valueHex);
    if (this.valueHex.byteLength >= 2) {
        const condition1 = buf[0] === 0xFF && buf[1] & 0x80;
        const condition2 = buf[0] === 0x00 && (buf[1] & 0x80) === 0x00;
        if (condition1 || condition2) {
            this.warnings.push("Needlessly long format");
        }
    }
    const bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);
    const bigIntView = new Uint8Array(bigIntBuffer);
    for(let i = 0; i < this.valueHex.byteLength; i++){
        bigIntView[i] = 0;
    }
    bigIntView[0] = buf[0] & 0x80;
    const bigInt = utilFromBase(bigIntView, 8);
    const smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);
    const smallIntView = new Uint8Array(smallIntBuffer);
    for(let j = 0; j < this.valueHex.byteLength; j++){
        smallIntView[j] = buf[j];
    }
    smallIntView[0] &= 0x7F;
    const smallInt = utilFromBase(smallIntView, 8);
    return smallInt - bigInt;
}
function utilEncodeTC(value) {
    const modValue = value < 0 ? value * -1 : value;
    let bigInt = 128;
    for(let i = 1; i < 8; i++){
        if (modValue <= bigInt) {
            if (value < 0) {
                const smallInt = bigInt - modValue;
                const retBuf = utilToBase(smallInt, 8, i);
                const retView = new Uint8Array(retBuf);
                retView[0] |= 0x80;
                return retBuf;
            }
            let retBuf = utilToBase(modValue, 8, i);
            let retView = new Uint8Array(retBuf);
            if (retView[0] & 0x80) {
                const tempBuf = retBuf.slice(0);
                const tempView = new Uint8Array(tempBuf);
                retBuf = new ArrayBuffer(retBuf.byteLength + 1);
                retView = new Uint8Array(retBuf);
                for(let k = 0; k < tempBuf.byteLength; k++){
                    retView[k + 1] = tempView[k];
                }
                retView[0] = 0x00;
            }
            return retBuf;
        }
        bigInt *= Math.pow(2, 8);
    }
    return new ArrayBuffer(0);
}
function isEqualBuffer(inputBuffer1, inputBuffer2) {
    if (inputBuffer1.byteLength !== inputBuffer2.byteLength) {
        return false;
    }
    const view1 = new Uint8Array(inputBuffer1);
    const view2 = new Uint8Array(inputBuffer2);
    for(let i = 0; i < view1.length; i++){
        if (view1[i] !== view2[i]) {
            return false;
        }
    }
    return true;
}
function padNumber(inputNumber, fullLength) {
    const str = inputNumber.toString(10);
    if (fullLength < str.length) {
        return "";
    }
    const dif = fullLength - str.length;
    const padding = new Array(dif);
    for(let i = 0; i < dif; i++){
        padding[i] = "0";
    }
    const paddingString = padding.join("");
    return paddingString.concat(str);
}
const base64Template = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
const base64UrlTemplate = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=";
function toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false) {
    let i = 0;
    let flag1 = 0;
    let flag2 = 0;
    let output = "";
    const template = useUrlTemplate ? base64UrlTemplate : base64Template;
    if (skipLeadingZeros) {
        let nonZeroPosition = 0;
        for(let i = 0; i < input.length; i++){
            if (input.charCodeAt(i) !== 0) {
                nonZeroPosition = i;
                break;
            }
        }
        input = input.slice(nonZeroPosition);
    }
    while(i < input.length){
        const chr1 = input.charCodeAt(i++);
        if (i >= input.length) {
            flag1 = 1;
        }
        const chr2 = input.charCodeAt(i++);
        if (i >= input.length) {
            flag2 = 1;
        }
        const chr3 = input.charCodeAt(i++);
        const enc1 = chr1 >> 2;
        const enc2 = (chr1 & 0x03) << 4 | chr2 >> 4;
        let enc3 = (chr2 & 0x0F) << 2 | chr3 >> 6;
        let enc4 = chr3 & 0x3F;
        if (flag1 === 1) {
            enc3 = enc4 = 64;
        } else {
            if (flag2 === 1) {
                enc4 = 64;
            }
        }
        if (skipPadding) {
            if (enc3 === 64) {
                output += `${template.charAt(enc1)}${template.charAt(enc2)}`;
            } else {
                if (enc4 === 64) {
                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;
                } else {
                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;
                }
            }
        } else {
            output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;
        }
    }
    return output;
}
function fromBase64(input, useUrlTemplate = false, cutTailZeros = false) {
    const template = useUrlTemplate ? base64UrlTemplate : base64Template;
    function indexOf(toSearch) {
        for(let i = 0; i < 64; i++){
            if (template.charAt(i) === toSearch) return i;
        }
        return 64;
    }
    function test(incoming) {
        return incoming === 64 ? 0x00 : incoming;
    }
    let i = 0;
    let output = "";
    while(i < input.length){
        const enc1 = indexOf(input.charAt(i++));
        const enc2 = i >= input.length ? 0x00 : indexOf(input.charAt(i++));
        const enc3 = i >= input.length ? 0x00 : indexOf(input.charAt(i++));
        const enc4 = i >= input.length ? 0x00 : indexOf(input.charAt(i++));
        const chr1 = test(enc1) << 2 | test(enc2) >> 4;
        const chr2 = (test(enc2) & 0x0F) << 4 | test(enc3) >> 2;
        const chr3 = (test(enc3) & 0x03) << 6 | test(enc4);
        output += String.fromCharCode(chr1);
        if (enc3 !== 64) {
            output += String.fromCharCode(chr2);
        }
        if (enc4 !== 64) {
            output += String.fromCharCode(chr3);
        }
    }
    if (cutTailZeros) {
        const outputLength = output.length;
        let nonZeroStart = -1;
        for(let i = outputLength - 1; i >= 0; i--){
            if (output.charCodeAt(i) !== 0) {
                nonZeroStart = i;
                break;
            }
        }
        if (nonZeroStart !== -1) {
            output = output.slice(0, nonZeroStart + 1);
        } else {
            output = "";
        }
    }
    return output;
}
function arrayBufferToString(buffer) {
    let resultString = "";
    const view = new Uint8Array(buffer);
    for (const element of view){
        resultString += String.fromCharCode(element);
    }
    return resultString;
}
function stringToArrayBuffer(str) {
    const stringLength = str.length;
    const resultBuffer = new ArrayBuffer(stringLength);
    const resultView = new Uint8Array(resultBuffer);
    for(let i = 0; i < stringLength; i++){
        resultView[i] = str.charCodeAt(i);
    }
    return resultBuffer;
}
const log2 = Math.log(2);
function nearestPowerOf2(length) {
    const base = Math.log(length) / log2;
    const floor = Math.floor(base);
    const round = Math.round(base);
    return floor === round ? floor : round;
}
function clearProps(object, propsArray) {
    for (const prop of propsArray){
        delete object[prop];
    }
}
;
}}),
"[project]/node_modules/.pnpm/asn1js@3.0.5/node_modules/asn1js/build/index.es.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/*!
 * Copyright (c) 2014, GMO GlobalSign
 * Copyright (c) 2015-2022, Peculiar Ventures
 * All rights reserved.
 * 
 * Author 2014-2019, Yury Strozhevsky
 * 
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 * 
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 * 
 * * Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */ __turbopack_esm__({
    "Any": (()=>Any),
    "BaseBlock": (()=>BaseBlock),
    "BaseStringBlock": (()=>BaseStringBlock),
    "BitString": (()=>BitString),
    "BmpString": (()=>BmpString),
    "Boolean": (()=>Boolean),
    "CharacterString": (()=>CharacterString),
    "Choice": (()=>Choice),
    "Constructed": (()=>Constructed),
    "DATE": (()=>DATE),
    "DateTime": (()=>DateTime),
    "Duration": (()=>Duration),
    "EndOfContent": (()=>EndOfContent),
    "Enumerated": (()=>Enumerated),
    "GeneralString": (()=>GeneralString),
    "GeneralizedTime": (()=>GeneralizedTime),
    "GraphicString": (()=>GraphicString),
    "HexBlock": (()=>HexBlock),
    "IA5String": (()=>IA5String),
    "Integer": (()=>Integer),
    "Null": (()=>Null),
    "NumericString": (()=>NumericString),
    "ObjectIdentifier": (()=>ObjectIdentifier),
    "OctetString": (()=>OctetString),
    "Primitive": (()=>Primitive),
    "PrintableString": (()=>PrintableString),
    "RawData": (()=>RawData),
    "RelativeObjectIdentifier": (()=>RelativeObjectIdentifier),
    "Repeated": (()=>Repeated),
    "Sequence": (()=>Sequence),
    "Set": (()=>Set),
    "TIME": (()=>TIME),
    "TeletexString": (()=>TeletexString),
    "TimeOfDay": (()=>TimeOfDay),
    "UTCTime": (()=>UTCTime),
    "UniversalString": (()=>UniversalString),
    "Utf8String": (()=>Utf8String),
    "ValueBlock": (()=>ValueBlock),
    "VideotexString": (()=>VideotexString),
    "ViewWriter": (()=>ViewWriter),
    "VisibleString": (()=>VisibleString),
    "compareSchema": (()=>compareSchema),
    "fromBER": (()=>fromBER),
    "verifySchema": (()=>verifySchema)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/pvtsutils@1.3.6/node_modules/pvtsutils/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/pvutils@1.1.3/node_modules/pvutils/build/utils.es.js [app-route] (ecmascript)");
;
;
function assertBigInt() {
    if (typeof BigInt === "undefined") {
        throw new Error("BigInt is not defined. Your environment doesn't implement BigInt.");
    }
}
function concat(buffers) {
    let outputLength = 0;
    let prevLength = 0;
    for(let i = 0; i < buffers.length; i++){
        const buffer = buffers[i];
        outputLength += buffer.byteLength;
    }
    const retView = new Uint8Array(outputLength);
    for(let i = 0; i < buffers.length; i++){
        const buffer = buffers[i];
        retView.set(new Uint8Array(buffer), prevLength);
        prevLength += buffer.byteLength;
    }
    return retView.buffer;
}
function checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {
    if (!(inputBuffer instanceof Uint8Array)) {
        baseBlock.error = "Wrong parameter: inputBuffer must be 'Uint8Array'";
        return false;
    }
    if (!inputBuffer.byteLength) {
        baseBlock.error = "Wrong parameter: inputBuffer has zero length";
        return false;
    }
    if (inputOffset < 0) {
        baseBlock.error = "Wrong parameter: inputOffset less than zero";
        return false;
    }
    if (inputLength < 0) {
        baseBlock.error = "Wrong parameter: inputLength less than zero";
        return false;
    }
    if (inputBuffer.byteLength - inputOffset - inputLength < 0) {
        baseBlock.error = "End of input reached before message was fully decoded (inconsistent offset and length values)";
        return false;
    }
    return true;
}
class ViewWriter {
    constructor(){
        this.items = [];
    }
    write(buf) {
        this.items.push(buf);
    }
    final() {
        return concat(this.items);
    }
}
const powers2 = [
    new Uint8Array([
        1
    ])
];
const digitsString = "0123456789";
const NAME = "name";
const VALUE_HEX_VIEW = "valueHexView";
const IS_HEX_ONLY = "isHexOnly";
const ID_BLOCK = "idBlock";
const TAG_CLASS = "tagClass";
const TAG_NUMBER = "tagNumber";
const IS_CONSTRUCTED = "isConstructed";
const FROM_BER = "fromBER";
const TO_BER = "toBER";
const LOCAL = "local";
const EMPTY_STRING = "";
const EMPTY_BUFFER = new ArrayBuffer(0);
const EMPTY_VIEW = new Uint8Array(0);
const END_OF_CONTENT_NAME = "EndOfContent";
const OCTET_STRING_NAME = "OCTET STRING";
const BIT_STRING_NAME = "BIT STRING";
function HexBlock(BaseClass) {
    var _a;
    return _a = class Some extends BaseClass {
        constructor(...args){
            var _a;
            super(...args);
            const params = args[0] || {};
            this.isHexOnly = (_a = params.isHexOnly) !== null && _a !== void 0 ? _a : false;
            this.valueHexView = params.valueHex ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(params.valueHex) : EMPTY_VIEW;
        }
        get valueHex() {
            return this.valueHexView.slice().buffer;
        }
        set valueHex(value) {
            this.valueHexView = new Uint8Array(value);
        }
        fromBER(inputBuffer, inputOffset, inputLength) {
            const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;
            if (!checkBufferParams(this, view, inputOffset, inputLength)) {
                return -1;
            }
            const endLength = inputOffset + inputLength;
            this.valueHexView = view.subarray(inputOffset, endLength);
            if (!this.valueHexView.length) {
                this.warnings.push("Zero buffer length");
                return inputOffset;
            }
            this.blockLength = inputLength;
            return endLength;
        }
        toBER(sizeOnly = false) {
            if (!this.isHexOnly) {
                this.error = "Flag 'isHexOnly' is not set, abort";
                return EMPTY_BUFFER;
            }
            if (sizeOnly) {
                return new ArrayBuffer(this.valueHexView.byteLength);
            }
            return this.valueHexView.byteLength === this.valueHexView.buffer.byteLength ? this.valueHexView.buffer : this.valueHexView.slice().buffer;
        }
        toJSON() {
            return {
                ...super.toJSON(),
                isHexOnly: this.isHexOnly,
                valueHex: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.ToHex(this.valueHexView)
            };
        }
    }, _a.NAME = "hexBlock", _a;
}
class LocalBaseBlock {
    constructor({ blockLength = 0, error = EMPTY_STRING, warnings = [], valueBeforeDecode = EMPTY_VIEW } = {}){
        this.blockLength = blockLength;
        this.error = error;
        this.warnings = warnings;
        this.valueBeforeDecodeView = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(valueBeforeDecode);
    }
    static blockName() {
        return this.NAME;
    }
    get valueBeforeDecode() {
        return this.valueBeforeDecodeView.slice().buffer;
    }
    set valueBeforeDecode(value) {
        this.valueBeforeDecodeView = new Uint8Array(value);
    }
    toJSON() {
        return {
            blockName: this.constructor.NAME,
            blockLength: this.blockLength,
            error: this.error,
            warnings: this.warnings,
            valueBeforeDecode: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.ToHex(this.valueBeforeDecodeView)
        };
    }
}
LocalBaseBlock.NAME = "baseBlock";
class ValueBlock extends LocalBaseBlock {
    fromBER(inputBuffer, inputOffset, inputLength) {
        throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'");
    }
    toBER(sizeOnly, writer) {
        throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'");
    }
}
ValueBlock.NAME = "valueBlock";
class LocalIdentificationBlock extends HexBlock(LocalBaseBlock) {
    constructor({ idBlock = {} } = {}){
        var _a, _b, _c, _d;
        super();
        if (idBlock) {
            this.isHexOnly = (_a = idBlock.isHexOnly) !== null && _a !== void 0 ? _a : false;
            this.valueHexView = idBlock.valueHex ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(idBlock.valueHex) : EMPTY_VIEW;
            this.tagClass = (_b = idBlock.tagClass) !== null && _b !== void 0 ? _b : -1;
            this.tagNumber = (_c = idBlock.tagNumber) !== null && _c !== void 0 ? _c : -1;
            this.isConstructed = (_d = idBlock.isConstructed) !== null && _d !== void 0 ? _d : false;
        } else {
            this.tagClass = -1;
            this.tagNumber = -1;
            this.isConstructed = false;
        }
    }
    toBER(sizeOnly = false) {
        let firstOctet = 0;
        switch(this.tagClass){
            case 1:
                firstOctet |= 0x00;
                break;
            case 2:
                firstOctet |= 0x40;
                break;
            case 3:
                firstOctet |= 0x80;
                break;
            case 4:
                firstOctet |= 0xC0;
                break;
            default:
                this.error = "Unknown tag class";
                return EMPTY_BUFFER;
        }
        if (this.isConstructed) firstOctet |= 0x20;
        if (this.tagNumber < 31 && !this.isHexOnly) {
            const retView = new Uint8Array(1);
            if (!sizeOnly) {
                let number = this.tagNumber;
                number &= 0x1F;
                firstOctet |= number;
                retView[0] = firstOctet;
            }
            return retView.buffer;
        }
        if (!this.isHexOnly) {
            const encodedBuf = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilToBase(this.tagNumber, 7);
            const encodedView = new Uint8Array(encodedBuf);
            const size = encodedBuf.byteLength;
            const retView = new Uint8Array(size + 1);
            retView[0] = firstOctet | 0x1F;
            if (!sizeOnly) {
                for(let i = 0; i < size - 1; i++)retView[i + 1] = encodedView[i] | 0x80;
                retView[size] = encodedView[size - 1];
            }
            return retView.buffer;
        }
        const retView = new Uint8Array(this.valueHexView.byteLength + 1);
        retView[0] = firstOctet | 0x1F;
        if (!sizeOnly) {
            const curView = this.valueHexView;
            for(let i = 0; i < curView.length - 1; i++)retView[i + 1] = curView[i] | 0x80;
            retView[this.valueHexView.byteLength] = curView[curView.length - 1];
        }
        return retView.buffer;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        const inputView = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer);
        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {
            return -1;
        }
        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);
        if (intBuffer.length === 0) {
            this.error = "Zero buffer length";
            return -1;
        }
        const tagClassMask = intBuffer[0] & 0xC0;
        switch(tagClassMask){
            case 0x00:
                this.tagClass = 1;
                break;
            case 0x40:
                this.tagClass = 2;
                break;
            case 0x80:
                this.tagClass = 3;
                break;
            case 0xC0:
                this.tagClass = 4;
                break;
            default:
                this.error = "Unknown tag class";
                return -1;
        }
        this.isConstructed = (intBuffer[0] & 0x20) === 0x20;
        this.isHexOnly = false;
        const tagNumberMask = intBuffer[0] & 0x1F;
        if (tagNumberMask !== 0x1F) {
            this.tagNumber = tagNumberMask;
            this.blockLength = 1;
        } else {
            let count = 1;
            let intTagNumberBuffer = this.valueHexView = new Uint8Array(255);
            let tagNumberBufferMaxLength = 255;
            while(intBuffer[count] & 0x80){
                intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;
                count++;
                if (count >= intBuffer.length) {
                    this.error = "End of input reached before message was fully decoded";
                    return -1;
                }
                if (count === tagNumberBufferMaxLength) {
                    tagNumberBufferMaxLength += 255;
                    const tempBufferView = new Uint8Array(tagNumberBufferMaxLength);
                    for(let i = 0; i < intTagNumberBuffer.length; i++)tempBufferView[i] = intTagNumberBuffer[i];
                    intTagNumberBuffer = this.valueHexView = new Uint8Array(tagNumberBufferMaxLength);
                }
            }
            this.blockLength = count + 1;
            intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;
            const tempBufferView = new Uint8Array(count);
            for(let i = 0; i < count; i++)tempBufferView[i] = intTagNumberBuffer[i];
            intTagNumberBuffer = this.valueHexView = new Uint8Array(count);
            intTagNumberBuffer.set(tempBufferView);
            if (this.blockLength <= 9) this.tagNumber = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilFromBase(intTagNumberBuffer, 7);
            else {
                this.isHexOnly = true;
                this.warnings.push("Tag too long, represented as hex-coded");
            }
        }
        if (this.tagClass === 1 && this.isConstructed) {
            switch(this.tagNumber){
                case 1:
                case 2:
                case 5:
                case 6:
                case 9:
                case 13:
                case 14:
                case 23:
                case 24:
                case 31:
                case 32:
                case 33:
                case 34:
                    this.error = "Constructed encoding used for primitive type";
                    return -1;
            }
        }
        return inputOffset + this.blockLength;
    }
    toJSON() {
        return {
            ...super.toJSON(),
            tagClass: this.tagClass,
            tagNumber: this.tagNumber,
            isConstructed: this.isConstructed
        };
    }
}
LocalIdentificationBlock.NAME = "identificationBlock";
class LocalLengthBlock extends LocalBaseBlock {
    constructor({ lenBlock = {} } = {}){
        var _a, _b, _c;
        super();
        this.isIndefiniteForm = (_a = lenBlock.isIndefiniteForm) !== null && _a !== void 0 ? _a : false;
        this.longFormUsed = (_b = lenBlock.longFormUsed) !== null && _b !== void 0 ? _b : false;
        this.length = (_c = lenBlock.length) !== null && _c !== void 0 ? _c : 0;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        const view = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer);
        if (!checkBufferParams(this, view, inputOffset, inputLength)) {
            return -1;
        }
        const intBuffer = view.subarray(inputOffset, inputOffset + inputLength);
        if (intBuffer.length === 0) {
            this.error = "Zero buffer length";
            return -1;
        }
        if (intBuffer[0] === 0xFF) {
            this.error = "Length block 0xFF is reserved by standard";
            return -1;
        }
        this.isIndefiniteForm = intBuffer[0] === 0x80;
        if (this.isIndefiniteForm) {
            this.blockLength = 1;
            return inputOffset + this.blockLength;
        }
        this.longFormUsed = !!(intBuffer[0] & 0x80);
        if (this.longFormUsed === false) {
            this.length = intBuffer[0];
            this.blockLength = 1;
            return inputOffset + this.blockLength;
        }
        const count = intBuffer[0] & 0x7F;
        if (count > 8) {
            this.error = "Too big integer";
            return -1;
        }
        if (count + 1 > intBuffer.length) {
            this.error = "End of input reached before message was fully decoded";
            return -1;
        }
        const lenOffset = inputOffset + 1;
        const lengthBufferView = view.subarray(lenOffset, lenOffset + count);
        if (lengthBufferView[count - 1] === 0x00) this.warnings.push("Needlessly long encoded length");
        this.length = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilFromBase(lengthBufferView, 8);
        if (this.longFormUsed && this.length <= 127) this.warnings.push("Unnecessary usage of long length form");
        this.blockLength = count + 1;
        return inputOffset + this.blockLength;
    }
    toBER(sizeOnly = false) {
        let retBuf;
        let retView;
        if (this.length > 127) this.longFormUsed = true;
        if (this.isIndefiniteForm) {
            retBuf = new ArrayBuffer(1);
            if (sizeOnly === false) {
                retView = new Uint8Array(retBuf);
                retView[0] = 0x80;
            }
            return retBuf;
        }
        if (this.longFormUsed) {
            const encodedBuf = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilToBase(this.length, 8);
            if (encodedBuf.byteLength > 127) {
                this.error = "Too big length";
                return EMPTY_BUFFER;
            }
            retBuf = new ArrayBuffer(encodedBuf.byteLength + 1);
            if (sizeOnly) return retBuf;
            const encodedView = new Uint8Array(encodedBuf);
            retView = new Uint8Array(retBuf);
            retView[0] = encodedBuf.byteLength | 0x80;
            for(let i = 0; i < encodedBuf.byteLength; i++)retView[i + 1] = encodedView[i];
            return retBuf;
        }
        retBuf = new ArrayBuffer(1);
        if (sizeOnly === false) {
            retView = new Uint8Array(retBuf);
            retView[0] = this.length;
        }
        return retBuf;
    }
    toJSON() {
        return {
            ...super.toJSON(),
            isIndefiniteForm: this.isIndefiniteForm,
            longFormUsed: this.longFormUsed,
            length: this.length
        };
    }
}
LocalLengthBlock.NAME = "lengthBlock";
const typeStore = {};
class BaseBlock extends LocalBaseBlock {
    constructor({ name = EMPTY_STRING, optional = false, primitiveSchema, ...parameters } = {}, valueBlockType){
        super(parameters);
        this.name = name;
        this.optional = optional;
        if (primitiveSchema) {
            this.primitiveSchema = primitiveSchema;
        }
        this.idBlock = new LocalIdentificationBlock(parameters);
        this.lenBlock = new LocalLengthBlock(parameters);
        this.valueBlock = valueBlockType ? new valueBlockType(parameters) : new ValueBlock(parameters);
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, this.lenBlock.isIndefiniteForm ? inputLength : this.lenBlock.length);
        if (resultOffset === -1) {
            this.error = this.valueBlock.error;
            return resultOffset;
        }
        if (!this.idBlock.error.length) this.blockLength += this.idBlock.blockLength;
        if (!this.lenBlock.error.length) this.blockLength += this.lenBlock.blockLength;
        if (!this.valueBlock.error.length) this.blockLength += this.valueBlock.blockLength;
        return resultOffset;
    }
    toBER(sizeOnly, writer) {
        const _writer = writer || new ViewWriter();
        if (!writer) {
            prepareIndefiniteForm(this);
        }
        const idBlockBuf = this.idBlock.toBER(sizeOnly);
        _writer.write(idBlockBuf);
        if (this.lenBlock.isIndefiniteForm) {
            _writer.write(new Uint8Array([
                0x80
            ]).buffer);
            this.valueBlock.toBER(sizeOnly, _writer);
            _writer.write(new ArrayBuffer(2));
        } else {
            const valueBlockBuf = this.valueBlock.toBER(sizeOnly);
            this.lenBlock.length = valueBlockBuf.byteLength;
            const lenBlockBuf = this.lenBlock.toBER(sizeOnly);
            _writer.write(lenBlockBuf);
            _writer.write(valueBlockBuf);
        }
        if (!writer) {
            return _writer.final();
        }
        return EMPTY_BUFFER;
    }
    toJSON() {
        const object = {
            ...super.toJSON(),
            idBlock: this.idBlock.toJSON(),
            lenBlock: this.lenBlock.toJSON(),
            valueBlock: this.valueBlock.toJSON(),
            name: this.name,
            optional: this.optional
        };
        if (this.primitiveSchema) object.primitiveSchema = this.primitiveSchema.toJSON();
        return object;
    }
    toString(encoding = "ascii") {
        if (encoding === "ascii") {
            return this.onAsciiEncoding();
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.ToHex(this.toBER());
    }
    onAsciiEncoding() {
        return `${this.constructor.NAME} : ${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`;
    }
    isEqual(other) {
        if (this === other) {
            return true;
        }
        if (!(other instanceof this.constructor)) {
            return false;
        }
        const thisRaw = this.toBER();
        const otherRaw = other.toBER();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.isEqualBuffer(thisRaw, otherRaw);
    }
}
BaseBlock.NAME = "BaseBlock";
function prepareIndefiniteForm(baseBlock) {
    if (baseBlock instanceof typeStore.Constructed) {
        for (const value of baseBlock.valueBlock.value){
            if (prepareIndefiniteForm(value)) {
                baseBlock.lenBlock.isIndefiniteForm = true;
            }
        }
    }
    return !!baseBlock.lenBlock.isIndefiniteForm;
}
class BaseStringBlock extends BaseBlock {
    constructor({ value = EMPTY_STRING, ...parameters } = {}, stringValueBlockType){
        super(parameters, stringValueBlockType);
        if (value) {
            this.fromString(value);
        }
    }
    getValue() {
        return this.valueBlock.value;
    }
    setValue(value) {
        this.valueBlock.value = value;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, this.lenBlock.isIndefiniteForm ? inputLength : this.lenBlock.length);
        if (resultOffset === -1) {
            this.error = this.valueBlock.error;
            return resultOffset;
        }
        this.fromBuffer(this.valueBlock.valueHexView);
        if (!this.idBlock.error.length) this.blockLength += this.idBlock.blockLength;
        if (!this.lenBlock.error.length) this.blockLength += this.lenBlock.blockLength;
        if (!this.valueBlock.error.length) this.blockLength += this.valueBlock.blockLength;
        return resultOffset;
    }
    onAsciiEncoding() {
        return `${this.constructor.NAME} : '${this.valueBlock.value}'`;
    }
}
BaseStringBlock.NAME = "BaseStringBlock";
class LocalPrimitiveValueBlock extends HexBlock(ValueBlock) {
    constructor({ isHexOnly = true, ...parameters } = {}){
        super(parameters);
        this.isHexOnly = isHexOnly;
    }
}
LocalPrimitiveValueBlock.NAME = "PrimitiveValueBlock";
var _a$w;
class Primitive extends BaseBlock {
    constructor(parameters = {}){
        super(parameters, LocalPrimitiveValueBlock);
        this.idBlock.isConstructed = false;
    }
}
_a$w = Primitive;
(()=>{
    typeStore.Primitive = _a$w;
})();
Primitive.NAME = "PRIMITIVE";
function localChangeType(inputObject, newType) {
    if (inputObject instanceof newType) {
        return inputObject;
    }
    const newObject = new newType();
    newObject.idBlock = inputObject.idBlock;
    newObject.lenBlock = inputObject.lenBlock;
    newObject.warnings = inputObject.warnings;
    newObject.valueBeforeDecodeView = inputObject.valueBeforeDecodeView;
    return newObject;
}
function localFromBER(inputBuffer, inputOffset = 0, inputLength = inputBuffer.length) {
    const incomingOffset = inputOffset;
    let returnObject = new BaseBlock({}, ValueBlock);
    const baseBlock = new LocalBaseBlock();
    if (!checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)) {
        returnObject.error = baseBlock.error;
        return {
            offset: -1,
            result: returnObject
        };
    }
    const intBuffer = inputBuffer.subarray(inputOffset, inputOffset + inputLength);
    if (!intBuffer.length) {
        returnObject.error = "Zero buffer length";
        return {
            offset: -1,
            result: returnObject
        };
    }
    let resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);
    if (returnObject.idBlock.warnings.length) {
        returnObject.warnings.concat(returnObject.idBlock.warnings);
    }
    if (resultOffset === -1) {
        returnObject.error = returnObject.idBlock.error;
        return {
            offset: -1,
            result: returnObject
        };
    }
    inputOffset = resultOffset;
    inputLength -= returnObject.idBlock.blockLength;
    resultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);
    if (returnObject.lenBlock.warnings.length) {
        returnObject.warnings.concat(returnObject.lenBlock.warnings);
    }
    if (resultOffset === -1) {
        returnObject.error = returnObject.lenBlock.error;
        return {
            offset: -1,
            result: returnObject
        };
    }
    inputOffset = resultOffset;
    inputLength -= returnObject.lenBlock.blockLength;
    if (!returnObject.idBlock.isConstructed && returnObject.lenBlock.isIndefiniteForm) {
        returnObject.error = "Indefinite length form used for primitive encoding form";
        return {
            offset: -1,
            result: returnObject
        };
    }
    let newASN1Type = BaseBlock;
    switch(returnObject.idBlock.tagClass){
        case 1:
            if (returnObject.idBlock.tagNumber >= 37 && returnObject.idBlock.isHexOnly === false) {
                returnObject.error = "UNIVERSAL 37 and upper tags are reserved by ASN.1 standard";
                return {
                    offset: -1,
                    result: returnObject
                };
            }
            switch(returnObject.idBlock.tagNumber){
                case 0:
                    if (returnObject.idBlock.isConstructed && returnObject.lenBlock.length > 0) {
                        returnObject.error = "Type [UNIVERSAL 0] is reserved";
                        return {
                            offset: -1,
                            result: returnObject
                        };
                    }
                    newASN1Type = typeStore.EndOfContent;
                    break;
                case 1:
                    newASN1Type = typeStore.Boolean;
                    break;
                case 2:
                    newASN1Type = typeStore.Integer;
                    break;
                case 3:
                    newASN1Type = typeStore.BitString;
                    break;
                case 4:
                    newASN1Type = typeStore.OctetString;
                    break;
                case 5:
                    newASN1Type = typeStore.Null;
                    break;
                case 6:
                    newASN1Type = typeStore.ObjectIdentifier;
                    break;
                case 10:
                    newASN1Type = typeStore.Enumerated;
                    break;
                case 12:
                    newASN1Type = typeStore.Utf8String;
                    break;
                case 13:
                    newASN1Type = typeStore.RelativeObjectIdentifier;
                    break;
                case 14:
                    newASN1Type = typeStore.TIME;
                    break;
                case 15:
                    returnObject.error = "[UNIVERSAL 15] is reserved by ASN.1 standard";
                    return {
                        offset: -1,
                        result: returnObject
                    };
                case 16:
                    newASN1Type = typeStore.Sequence;
                    break;
                case 17:
                    newASN1Type = typeStore.Set;
                    break;
                case 18:
                    newASN1Type = typeStore.NumericString;
                    break;
                case 19:
                    newASN1Type = typeStore.PrintableString;
                    break;
                case 20:
                    newASN1Type = typeStore.TeletexString;
                    break;
                case 21:
                    newASN1Type = typeStore.VideotexString;
                    break;
                case 22:
                    newASN1Type = typeStore.IA5String;
                    break;
                case 23:
                    newASN1Type = typeStore.UTCTime;
                    break;
                case 24:
                    newASN1Type = typeStore.GeneralizedTime;
                    break;
                case 25:
                    newASN1Type = typeStore.GraphicString;
                    break;
                case 26:
                    newASN1Type = typeStore.VisibleString;
                    break;
                case 27:
                    newASN1Type = typeStore.GeneralString;
                    break;
                case 28:
                    newASN1Type = typeStore.UniversalString;
                    break;
                case 29:
                    newASN1Type = typeStore.CharacterString;
                    break;
                case 30:
                    newASN1Type = typeStore.BmpString;
                    break;
                case 31:
                    newASN1Type = typeStore.DATE;
                    break;
                case 32:
                    newASN1Type = typeStore.TimeOfDay;
                    break;
                case 33:
                    newASN1Type = typeStore.DateTime;
                    break;
                case 34:
                    newASN1Type = typeStore.Duration;
                    break;
                default:
                    {
                        const newObject = returnObject.idBlock.isConstructed ? new typeStore.Constructed() : new typeStore.Primitive();
                        newObject.idBlock = returnObject.idBlock;
                        newObject.lenBlock = returnObject.lenBlock;
                        newObject.warnings = returnObject.warnings;
                        returnObject = newObject;
                    }
            }
            break;
        case 2:
        case 3:
        case 4:
        default:
            {
                newASN1Type = returnObject.idBlock.isConstructed ? typeStore.Constructed : typeStore.Primitive;
            }
    }
    returnObject = localChangeType(returnObject, newASN1Type);
    resultOffset = returnObject.fromBER(inputBuffer, inputOffset, returnObject.lenBlock.isIndefiniteForm ? inputLength : returnObject.lenBlock.length);
    returnObject.valueBeforeDecodeView = inputBuffer.subarray(incomingOffset, incomingOffset + returnObject.blockLength);
    return {
        offset: resultOffset,
        result: returnObject
    };
}
function fromBER(inputBuffer) {
    if (!inputBuffer.byteLength) {
        const result = new BaseBlock({}, ValueBlock);
        result.error = "Input buffer has zero length";
        return {
            offset: -1,
            result
        };
    }
    return localFromBER(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer).slice(), 0, inputBuffer.byteLength);
}
function checkLen(indefiniteLength, length) {
    if (indefiniteLength) {
        return 1;
    }
    return length;
}
class LocalConstructedValueBlock extends ValueBlock {
    constructor({ value = [], isIndefiniteForm = false, ...parameters } = {}){
        super(parameters);
        this.value = value;
        this.isIndefiniteForm = isIndefiniteForm;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        const view = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer);
        if (!checkBufferParams(this, view, inputOffset, inputLength)) {
            return -1;
        }
        this.valueBeforeDecodeView = view.subarray(inputOffset, inputOffset + inputLength);
        if (this.valueBeforeDecodeView.length === 0) {
            this.warnings.push("Zero buffer length");
            return inputOffset;
        }
        let currentOffset = inputOffset;
        while(checkLen(this.isIndefiniteForm, inputLength) > 0){
            const returnObject = localFromBER(view, currentOffset, inputLength);
            if (returnObject.offset === -1) {
                this.error = returnObject.result.error;
                this.warnings.concat(returnObject.result.warnings);
                return -1;
            }
            currentOffset = returnObject.offset;
            this.blockLength += returnObject.result.blockLength;
            inputLength -= returnObject.result.blockLength;
            this.value.push(returnObject.result);
            if (this.isIndefiniteForm && returnObject.result.constructor.NAME === END_OF_CONTENT_NAME) {
                break;
            }
        }
        if (this.isIndefiniteForm) {
            if (this.value[this.value.length - 1].constructor.NAME === END_OF_CONTENT_NAME) {
                this.value.pop();
            } else {
                this.warnings.push("No EndOfContent block encoded");
            }
        }
        return currentOffset;
    }
    toBER(sizeOnly, writer) {
        const _writer = writer || new ViewWriter();
        for(let i = 0; i < this.value.length; i++){
            this.value[i].toBER(sizeOnly, _writer);
        }
        if (!writer) {
            return _writer.final();
        }
        return EMPTY_BUFFER;
    }
    toJSON() {
        const object = {
            ...super.toJSON(),
            isIndefiniteForm: this.isIndefiniteForm,
            value: []
        };
        for (const value of this.value){
            object.value.push(value.toJSON());
        }
        return object;
    }
}
LocalConstructedValueBlock.NAME = "ConstructedValueBlock";
var _a$v;
class Constructed extends BaseBlock {
    constructor(parameters = {}){
        super(parameters, LocalConstructedValueBlock);
        this.idBlock.isConstructed = true;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;
        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, this.lenBlock.isIndefiniteForm ? inputLength : this.lenBlock.length);
        if (resultOffset === -1) {
            this.error = this.valueBlock.error;
            return resultOffset;
        }
        if (!this.idBlock.error.length) this.blockLength += this.idBlock.blockLength;
        if (!this.lenBlock.error.length) this.blockLength += this.lenBlock.blockLength;
        if (!this.valueBlock.error.length) this.blockLength += this.valueBlock.blockLength;
        return resultOffset;
    }
    onAsciiEncoding() {
        const values = [];
        for (const value of this.valueBlock.value){
            values.push(value.toString("ascii").split("\n").map((o)=>`  ${o}`).join("\n"));
        }
        const blockName = this.idBlock.tagClass === 3 ? `[${this.idBlock.tagNumber}]` : this.constructor.NAME;
        return values.length ? `${blockName} :\n${values.join("\n")}` : `${blockName} :`;
    }
}
_a$v = Constructed;
(()=>{
    typeStore.Constructed = _a$v;
})();
Constructed.NAME = "CONSTRUCTED";
class LocalEndOfContentValueBlock extends ValueBlock {
    fromBER(inputBuffer, inputOffset, inputLength) {
        return inputOffset;
    }
    toBER(sizeOnly) {
        return EMPTY_BUFFER;
    }
}
LocalEndOfContentValueBlock.override = "EndOfContentValueBlock";
var _a$u;
class EndOfContent extends BaseBlock {
    constructor(parameters = {}){
        super(parameters, LocalEndOfContentValueBlock);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 0;
    }
}
_a$u = EndOfContent;
(()=>{
    typeStore.EndOfContent = _a$u;
})();
EndOfContent.NAME = END_OF_CONTENT_NAME;
var _a$t;
class Null extends BaseBlock {
    constructor(parameters = {}){
        super(parameters, ValueBlock);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 5;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        if (this.lenBlock.length > 0) this.warnings.push("Non-zero length of value block for Null type");
        if (!this.idBlock.error.length) this.blockLength += this.idBlock.blockLength;
        if (!this.lenBlock.error.length) this.blockLength += this.lenBlock.blockLength;
        this.blockLength += inputLength;
        if (inputOffset + inputLength > inputBuffer.byteLength) {
            this.error = "End of input reached before message was fully decoded (inconsistent offset and length values)";
            return -1;
        }
        return inputOffset + inputLength;
    }
    toBER(sizeOnly, writer) {
        const retBuf = new ArrayBuffer(2);
        if (!sizeOnly) {
            const retView = new Uint8Array(retBuf);
            retView[0] = 0x05;
            retView[1] = 0x00;
        }
        if (writer) {
            writer.write(retBuf);
        }
        return retBuf;
    }
    onAsciiEncoding() {
        return `${this.constructor.NAME}`;
    }
}
_a$t = Null;
(()=>{
    typeStore.Null = _a$t;
})();
Null.NAME = "NULL";
class LocalBooleanValueBlock extends HexBlock(ValueBlock) {
    constructor({ value, ...parameters } = {}){
        super(parameters);
        if (parameters.valueHex) {
            this.valueHexView = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(parameters.valueHex);
        } else {
            this.valueHexView = new Uint8Array(1);
        }
        if (value) {
            this.value = value;
        }
    }
    get value() {
        for (const octet of this.valueHexView){
            if (octet > 0) {
                return true;
            }
        }
        return false;
    }
    set value(value) {
        this.valueHexView[0] = value ? 0xFF : 0x00;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        const inputView = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer);
        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {
            return -1;
        }
        this.valueHexView = inputView.subarray(inputOffset, inputOffset + inputLength);
        if (inputLength > 1) this.warnings.push("Boolean value encoded in more then 1 octet");
        this.isHexOnly = true;
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilDecodeTC.call(this);
        this.blockLength = inputLength;
        return inputOffset + inputLength;
    }
    toBER() {
        return this.valueHexView.slice();
    }
    toJSON() {
        return {
            ...super.toJSON(),
            value: this.value
        };
    }
}
LocalBooleanValueBlock.NAME = "BooleanValueBlock";
var _a$s;
class Boolean extends BaseBlock {
    constructor(parameters = {}){
        super(parameters, LocalBooleanValueBlock);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 1;
    }
    getValue() {
        return this.valueBlock.value;
    }
    setValue(value) {
        this.valueBlock.value = value;
    }
    onAsciiEncoding() {
        return `${this.constructor.NAME} : ${this.getValue}`;
    }
}
_a$s = Boolean;
(()=>{
    typeStore.Boolean = _a$s;
})();
Boolean.NAME = "BOOLEAN";
class LocalOctetStringValueBlock extends HexBlock(LocalConstructedValueBlock) {
    constructor({ isConstructed = false, ...parameters } = {}){
        super(parameters);
        this.isConstructed = isConstructed;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        let resultOffset = 0;
        if (this.isConstructed) {
            this.isHexOnly = false;
            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);
            if (resultOffset === -1) return resultOffset;
            for(let i = 0; i < this.value.length; i++){
                const currentBlockName = this.value[i].constructor.NAME;
                if (currentBlockName === END_OF_CONTENT_NAME) {
                    if (this.isIndefiniteForm) break;
                    else {
                        this.error = "EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only";
                        return -1;
                    }
                }
                if (currentBlockName !== OCTET_STRING_NAME) {
                    this.error = "OCTET STRING may consists of OCTET STRINGs only";
                    return -1;
                }
            }
        } else {
            this.isHexOnly = true;
            resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);
            this.blockLength = inputLength;
        }
        return resultOffset;
    }
    toBER(sizeOnly, writer) {
        if (this.isConstructed) return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);
        return sizeOnly ? new ArrayBuffer(this.valueHexView.byteLength) : this.valueHexView.slice().buffer;
    }
    toJSON() {
        return {
            ...super.toJSON(),
            isConstructed: this.isConstructed
        };
    }
}
LocalOctetStringValueBlock.NAME = "OctetStringValueBlock";
var _a$r;
class OctetString extends BaseBlock {
    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}){
        var _b, _c;
        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length);
        super({
            idBlock: {
                isConstructed: parameters.isConstructed,
                ...idBlock
            },
            lenBlock: {
                ...lenBlock,
                isIndefiniteForm: !!parameters.isIndefiniteForm
            },
            ...parameters
        }, LocalOctetStringValueBlock);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 4;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        this.valueBlock.isConstructed = this.idBlock.isConstructed;
        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;
        if (inputLength === 0) {
            if (this.idBlock.error.length === 0) this.blockLength += this.idBlock.blockLength;
            if (this.lenBlock.error.length === 0) this.blockLength += this.lenBlock.blockLength;
            return inputOffset;
        }
        if (!this.valueBlock.isConstructed) {
            const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;
            const buf = view.subarray(inputOffset, inputOffset + inputLength);
            try {
                if (buf.byteLength) {
                    const asn = localFromBER(buf, 0, buf.byteLength);
                    if (asn.offset !== -1 && asn.offset === inputLength) {
                        this.valueBlock.value = [
                            asn.result
                        ];
                    }
                }
            } catch (e) {}
        }
        return super.fromBER(inputBuffer, inputOffset, inputLength);
    }
    onAsciiEncoding() {
        if (this.valueBlock.isConstructed || this.valueBlock.value && this.valueBlock.value.length) {
            return Constructed.prototype.onAsciiEncoding.call(this);
        }
        return `${this.constructor.NAME} : ${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.ToHex(this.valueBlock.valueHexView)}`;
    }
    getValue() {
        if (!this.idBlock.isConstructed) {
            return this.valueBlock.valueHexView.slice().buffer;
        }
        const array = [];
        for (const content of this.valueBlock.value){
            if (content instanceof OctetString) {
                array.push(content.valueBlock.valueHexView);
            }
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.concat(array);
    }
}
_a$r = OctetString;
(()=>{
    typeStore.OctetString = _a$r;
})();
OctetString.NAME = OCTET_STRING_NAME;
class LocalBitStringValueBlock extends HexBlock(LocalConstructedValueBlock) {
    constructor({ unusedBits = 0, isConstructed = false, ...parameters } = {}){
        super(parameters);
        this.unusedBits = unusedBits;
        this.isConstructed = isConstructed;
        this.blockLength = this.valueHexView.byteLength;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        if (!inputLength) {
            return inputOffset;
        }
        let resultOffset = -1;
        if (this.isConstructed) {
            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);
            if (resultOffset === -1) return resultOffset;
            for (const value of this.value){
                const currentBlockName = value.constructor.NAME;
                if (currentBlockName === END_OF_CONTENT_NAME) {
                    if (this.isIndefiniteForm) break;
                    else {
                        this.error = "EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only";
                        return -1;
                    }
                }
                if (currentBlockName !== BIT_STRING_NAME) {
                    this.error = "BIT STRING may consists of BIT STRINGs only";
                    return -1;
                }
                const valueBlock = value.valueBlock;
                if (this.unusedBits > 0 && valueBlock.unusedBits > 0) {
                    this.error = "Using of \"unused bits\" inside constructive BIT STRING allowed for least one only";
                    return -1;
                }
                this.unusedBits = valueBlock.unusedBits;
            }
            return resultOffset;
        }
        const inputView = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer);
        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {
            return -1;
        }
        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);
        this.unusedBits = intBuffer[0];
        if (this.unusedBits > 7) {
            this.error = "Unused bits for BitString must be in range 0-7";
            return -1;
        }
        if (!this.unusedBits) {
            const buf = intBuffer.subarray(1);
            try {
                if (buf.byteLength) {
                    const asn = localFromBER(buf, 0, buf.byteLength);
                    if (asn.offset !== -1 && asn.offset === inputLength - 1) {
                        this.value = [
                            asn.result
                        ];
                    }
                }
            } catch (e) {}
        }
        this.valueHexView = intBuffer.subarray(1);
        this.blockLength = intBuffer.length;
        return inputOffset + inputLength;
    }
    toBER(sizeOnly, writer) {
        if (this.isConstructed) {
            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);
        }
        if (sizeOnly) {
            return new ArrayBuffer(this.valueHexView.byteLength + 1);
        }
        if (!this.valueHexView.byteLength) {
            return EMPTY_BUFFER;
        }
        const retView = new Uint8Array(this.valueHexView.length + 1);
        retView[0] = this.unusedBits;
        retView.set(this.valueHexView, 1);
        return retView.buffer;
    }
    toJSON() {
        return {
            ...super.toJSON(),
            unusedBits: this.unusedBits,
            isConstructed: this.isConstructed
        };
    }
}
LocalBitStringValueBlock.NAME = "BitStringValueBlock";
var _a$q;
class BitString extends BaseBlock {
    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}){
        var _b, _c;
        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length);
        super({
            idBlock: {
                isConstructed: parameters.isConstructed,
                ...idBlock
            },
            lenBlock: {
                ...lenBlock,
                isIndefiniteForm: !!parameters.isIndefiniteForm
            },
            ...parameters
        }, LocalBitStringValueBlock);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 3;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        this.valueBlock.isConstructed = this.idBlock.isConstructed;
        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;
        return super.fromBER(inputBuffer, inputOffset, inputLength);
    }
    onAsciiEncoding() {
        if (this.valueBlock.isConstructed || this.valueBlock.value && this.valueBlock.value.length) {
            return Constructed.prototype.onAsciiEncoding.call(this);
        } else {
            const bits = [];
            const valueHex = this.valueBlock.valueHexView;
            for (const byte of valueHex){
                bits.push(byte.toString(2).padStart(8, "0"));
            }
            const bitsStr = bits.join("");
            return `${this.constructor.NAME} : ${bitsStr.substring(0, bitsStr.length - this.valueBlock.unusedBits)}`;
        }
    }
}
_a$q = BitString;
(()=>{
    typeStore.BitString = _a$q;
})();
BitString.NAME = BIT_STRING_NAME;
var _a$p;
function viewAdd(first, second) {
    const c = new Uint8Array([
        0
    ]);
    const firstView = new Uint8Array(first);
    const secondView = new Uint8Array(second);
    let firstViewCopy = firstView.slice(0);
    const firstViewCopyLength = firstViewCopy.length - 1;
    const secondViewCopy = secondView.slice(0);
    const secondViewCopyLength = secondViewCopy.length - 1;
    let value = 0;
    const max = secondViewCopyLength < firstViewCopyLength ? firstViewCopyLength : secondViewCopyLength;
    let counter = 0;
    for(let i = max; i >= 0; i--, counter++){
        switch(true){
            case counter < secondViewCopy.length:
                value = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];
                break;
            default:
                value = firstViewCopy[firstViewCopyLength - counter] + c[0];
        }
        c[0] = value / 10;
        switch(true){
            case counter >= firstViewCopy.length:
                firstViewCopy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilConcatView(new Uint8Array([
                    value % 10
                ]), firstViewCopy);
                break;
            default:
                firstViewCopy[firstViewCopyLength - counter] = value % 10;
        }
    }
    if (c[0] > 0) firstViewCopy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilConcatView(c, firstViewCopy);
    return firstViewCopy;
}
function power2(n) {
    if (n >= powers2.length) {
        for(let p = powers2.length; p <= n; p++){
            const c = new Uint8Array([
                0
            ]);
            let digits = powers2[p - 1].slice(0);
            for(let i = digits.length - 1; i >= 0; i--){
                const newValue = new Uint8Array([
                    (digits[i] << 1) + c[0]
                ]);
                c[0] = newValue[0] / 10;
                digits[i] = newValue[0] % 10;
            }
            if (c[0] > 0) digits = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilConcatView(c, digits);
            powers2.push(digits);
        }
    }
    return powers2[n];
}
function viewSub(first, second) {
    let b = 0;
    const firstView = new Uint8Array(first);
    const secondView = new Uint8Array(second);
    const firstViewCopy = firstView.slice(0);
    const firstViewCopyLength = firstViewCopy.length - 1;
    const secondViewCopy = secondView.slice(0);
    const secondViewCopyLength = secondViewCopy.length - 1;
    let value;
    let counter = 0;
    for(let i = secondViewCopyLength; i >= 0; i--, counter++){
        value = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;
        switch(true){
            case value < 0:
                b = 1;
                firstViewCopy[firstViewCopyLength - counter] = value + 10;
                break;
            default:
                b = 0;
                firstViewCopy[firstViewCopyLength - counter] = value;
        }
    }
    if (b > 0) {
        for(let i = firstViewCopyLength - secondViewCopyLength + 1; i >= 0; i--, counter++){
            value = firstViewCopy[firstViewCopyLength - counter] - b;
            if (value < 0) {
                b = 1;
                firstViewCopy[firstViewCopyLength - counter] = value + 10;
            } else {
                b = 0;
                firstViewCopy[firstViewCopyLength - counter] = value;
                break;
            }
        }
    }
    return firstViewCopy.slice();
}
class LocalIntegerValueBlock extends HexBlock(ValueBlock) {
    constructor({ value, ...parameters } = {}){
        super(parameters);
        this._valueDec = 0;
        if (parameters.valueHex) {
            this.setValueHex();
        }
        if (value !== undefined) {
            this.valueDec = value;
        }
    }
    setValueHex() {
        if (this.valueHexView.length >= 4) {
            this.warnings.push("Too big Integer for decoding, hex only");
            this.isHexOnly = true;
            this._valueDec = 0;
        } else {
            this.isHexOnly = false;
            if (this.valueHexView.length > 0) {
                this._valueDec = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilDecodeTC.call(this);
            }
        }
    }
    set valueDec(v) {
        this._valueDec = v;
        this.isHexOnly = false;
        this.valueHexView = new Uint8Array(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilEncodeTC(v));
    }
    get valueDec() {
        return this._valueDec;
    }
    fromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0) {
        const offset = this.fromBER(inputBuffer, inputOffset, inputLength);
        if (offset === -1) return offset;
        const view = this.valueHexView;
        if (view[0] === 0x00 && (view[1] & 0x80) !== 0) {
            this.valueHexView = view.subarray(1);
        } else {
            if (expectedLength !== 0) {
                if (view.length < expectedLength) {
                    if (expectedLength - view.length > 1) expectedLength = view.length + 1;
                    this.valueHexView = view.subarray(expectedLength - view.length);
                }
            }
        }
        return offset;
    }
    toDER(sizeOnly = false) {
        const view = this.valueHexView;
        switch(true){
            case (view[0] & 0x80) !== 0:
                {
                    const updatedView = new Uint8Array(this.valueHexView.length + 1);
                    updatedView[0] = 0x00;
                    updatedView.set(view, 1);
                    this.valueHexView = updatedView;
                }
                break;
            case view[0] === 0x00 && (view[1] & 0x80) === 0:
                {
                    this.valueHexView = this.valueHexView.subarray(1);
                }
                break;
        }
        return this.toBER(sizeOnly);
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        const resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);
        if (resultOffset === -1) {
            return resultOffset;
        }
        this.setValueHex();
        return resultOffset;
    }
    toBER(sizeOnly) {
        return sizeOnly ? new ArrayBuffer(this.valueHexView.length) : this.valueHexView.slice().buffer;
    }
    toJSON() {
        return {
            ...super.toJSON(),
            valueDec: this.valueDec
        };
    }
    toString() {
        const firstBit = this.valueHexView.length * 8 - 1;
        let digits = new Uint8Array(this.valueHexView.length * 8 / 3);
        let bitNumber = 0;
        let currentByte;
        const asn1View = this.valueHexView;
        let result = "";
        let flag = false;
        for(let byteNumber = asn1View.byteLength - 1; byteNumber >= 0; byteNumber--){
            currentByte = asn1View[byteNumber];
            for(let i = 0; i < 8; i++){
                if ((currentByte & 1) === 1) {
                    switch(bitNumber){
                        case firstBit:
                            digits = viewSub(power2(bitNumber), digits);
                            result = "-";
                            break;
                        default:
                            digits = viewAdd(digits, power2(bitNumber));
                    }
                }
                bitNumber++;
                currentByte >>= 1;
            }
        }
        for(let i = 0; i < digits.length; i++){
            if (digits[i]) flag = true;
            if (flag) result += digitsString.charAt(digits[i]);
        }
        if (flag === false) result += digitsString.charAt(0);
        return result;
    }
}
_a$p = LocalIntegerValueBlock;
LocalIntegerValueBlock.NAME = "IntegerValueBlock";
(()=>{
    Object.defineProperty(_a$p.prototype, "valueHex", {
        set: function(v) {
            this.valueHexView = new Uint8Array(v);
            this.setValueHex();
        },
        get: function() {
            return this.valueHexView.slice().buffer;
        }
    });
})();
var _a$o;
class Integer extends BaseBlock {
    constructor(parameters = {}){
        super(parameters, LocalIntegerValueBlock);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 2;
    }
    toBigInt() {
        assertBigInt();
        return BigInt(this.valueBlock.toString());
    }
    static fromBigInt(value) {
        assertBigInt();
        const bigIntValue = BigInt(value);
        const writer = new ViewWriter();
        const hex = bigIntValue.toString(16).replace(/^-/, "");
        const view = new Uint8Array(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.FromHex(hex));
        if (bigIntValue < 0) {
            const first = new Uint8Array(view.length + (view[0] & 0x80 ? 1 : 0));
            first[0] |= 0x80;
            const firstInt = BigInt(`0x${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.ToHex(first)}`);
            const secondInt = firstInt + bigIntValue;
            const second = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.FromHex(secondInt.toString(16)));
            second[0] |= 0x80;
            writer.write(second);
        } else {
            if (view[0] & 0x80) {
                writer.write(new Uint8Array([
                    0
                ]));
            }
            writer.write(view);
        }
        const res = new Integer({
            valueHex: writer.final()
        });
        return res;
    }
    convertToDER() {
        const integer = new Integer({
            valueHex: this.valueBlock.valueHexView
        });
        integer.valueBlock.toDER();
        return integer;
    }
    convertFromDER() {
        return new Integer({
            valueHex: this.valueBlock.valueHexView[0] === 0 ? this.valueBlock.valueHexView.subarray(1) : this.valueBlock.valueHexView
        });
    }
    onAsciiEncoding() {
        return `${this.constructor.NAME} : ${this.valueBlock.toString()}`;
    }
}
_a$o = Integer;
(()=>{
    typeStore.Integer = _a$o;
})();
Integer.NAME = "INTEGER";
var _a$n;
class Enumerated extends Integer {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 10;
    }
}
_a$n = Enumerated;
(()=>{
    typeStore.Enumerated = _a$n;
})();
Enumerated.NAME = "ENUMERATED";
class LocalSidValueBlock extends HexBlock(ValueBlock) {
    constructor({ valueDec = -1, isFirstSid = false, ...parameters } = {}){
        super(parameters);
        this.valueDec = valueDec;
        this.isFirstSid = isFirstSid;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        if (!inputLength) {
            return inputOffset;
        }
        const inputView = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer);
        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {
            return -1;
        }
        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);
        this.valueHexView = new Uint8Array(inputLength);
        for(let i = 0; i < inputLength; i++){
            this.valueHexView[i] = intBuffer[i] & 0x7F;
            this.blockLength++;
            if ((intBuffer[i] & 0x80) === 0x00) break;
        }
        const tempView = new Uint8Array(this.blockLength);
        for(let i = 0; i < this.blockLength; i++){
            tempView[i] = this.valueHexView[i];
        }
        this.valueHexView = tempView;
        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {
            this.error = "End of input reached before message was fully decoded";
            return -1;
        }
        if (this.valueHexView[0] === 0x00) this.warnings.push("Needlessly long format of SID encoding");
        if (this.blockLength <= 8) this.valueDec = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilFromBase(this.valueHexView, 7);
        else {
            this.isHexOnly = true;
            this.warnings.push("Too big SID for decoding, hex only");
        }
        return inputOffset + this.blockLength;
    }
    set valueBigInt(value) {
        assertBigInt();
        let bits = BigInt(value).toString(2);
        while(bits.length % 7){
            bits = "0" + bits;
        }
        const bytes = new Uint8Array(bits.length / 7);
        for(let i = 0; i < bytes.length; i++){
            bytes[i] = parseInt(bits.slice(i * 7, i * 7 + 7), 2) + (i + 1 < bytes.length ? 0x80 : 0);
        }
        this.fromBER(bytes.buffer, 0, bytes.length);
    }
    toBER(sizeOnly) {
        if (this.isHexOnly) {
            if (sizeOnly) return new ArrayBuffer(this.valueHexView.byteLength);
            const curView = this.valueHexView;
            const retView = new Uint8Array(this.blockLength);
            for(let i = 0; i < this.blockLength - 1; i++)retView[i] = curView[i] | 0x80;
            retView[this.blockLength - 1] = curView[this.blockLength - 1];
            return retView.buffer;
        }
        const encodedBuf = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilToBase(this.valueDec, 7);
        if (encodedBuf.byteLength === 0) {
            this.error = "Error during encoding SID value";
            return EMPTY_BUFFER;
        }
        const retView = new Uint8Array(encodedBuf.byteLength);
        if (!sizeOnly) {
            const encodedView = new Uint8Array(encodedBuf);
            const len = encodedBuf.byteLength - 1;
            for(let i = 0; i < len; i++)retView[i] = encodedView[i] | 0x80;
            retView[len] = encodedView[len];
        }
        return retView;
    }
    toString() {
        let result = "";
        if (this.isHexOnly) result = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.ToHex(this.valueHexView);
        else {
            if (this.isFirstSid) {
                let sidValue = this.valueDec;
                if (this.valueDec <= 39) result = "0.";
                else {
                    if (this.valueDec <= 79) {
                        result = "1.";
                        sidValue -= 40;
                    } else {
                        result = "2.";
                        sidValue -= 80;
                    }
                }
                result += sidValue.toString();
            } else result = this.valueDec.toString();
        }
        return result;
    }
    toJSON() {
        return {
            ...super.toJSON(),
            valueDec: this.valueDec,
            isFirstSid: this.isFirstSid
        };
    }
}
LocalSidValueBlock.NAME = "sidBlock";
class LocalObjectIdentifierValueBlock extends ValueBlock {
    constructor({ value = EMPTY_STRING, ...parameters } = {}){
        super(parameters);
        this.value = [];
        if (value) {
            this.fromString(value);
        }
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        let resultOffset = inputOffset;
        while(inputLength > 0){
            const sidBlock = new LocalSidValueBlock();
            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);
            if (resultOffset === -1) {
                this.blockLength = 0;
                this.error = sidBlock.error;
                return resultOffset;
            }
            if (this.value.length === 0) sidBlock.isFirstSid = true;
            this.blockLength += sidBlock.blockLength;
            inputLength -= sidBlock.blockLength;
            this.value.push(sidBlock);
        }
        return resultOffset;
    }
    toBER(sizeOnly) {
        const retBuffers = [];
        for(let i = 0; i < this.value.length; i++){
            const valueBuf = this.value[i].toBER(sizeOnly);
            if (valueBuf.byteLength === 0) {
                this.error = this.value[i].error;
                return EMPTY_BUFFER;
            }
            retBuffers.push(valueBuf);
        }
        return concat(retBuffers);
    }
    fromString(string) {
        this.value = [];
        let pos1 = 0;
        let pos2 = 0;
        let sid = "";
        let flag = false;
        do {
            pos2 = string.indexOf(".", pos1);
            if (pos2 === -1) sid = string.substring(pos1);
            else sid = string.substring(pos1, pos2);
            pos1 = pos2 + 1;
            if (flag) {
                const sidBlock = this.value[0];
                let plus = 0;
                switch(sidBlock.valueDec){
                    case 0:
                        break;
                    case 1:
                        plus = 40;
                        break;
                    case 2:
                        plus = 80;
                        break;
                    default:
                        this.value = [];
                        return;
                }
                const parsedSID = parseInt(sid, 10);
                if (isNaN(parsedSID)) return;
                sidBlock.valueDec = parsedSID + plus;
                flag = false;
            } else {
                const sidBlock = new LocalSidValueBlock();
                if (sid > Number.MAX_SAFE_INTEGER) {
                    assertBigInt();
                    const sidValue = BigInt(sid);
                    sidBlock.valueBigInt = sidValue;
                } else {
                    sidBlock.valueDec = parseInt(sid, 10);
                    if (isNaN(sidBlock.valueDec)) return;
                }
                if (!this.value.length) {
                    sidBlock.isFirstSid = true;
                    flag = true;
                }
                this.value.push(sidBlock);
            }
        }while (pos2 !== -1)
    }
    toString() {
        let result = "";
        let isHexOnly = false;
        for(let i = 0; i < this.value.length; i++){
            isHexOnly = this.value[i].isHexOnly;
            let sidStr = this.value[i].toString();
            if (i !== 0) result = `${result}.`;
            if (isHexOnly) {
                sidStr = `{${sidStr}}`;
                if (this.value[i].isFirstSid) result = `2.{${sidStr} - 80}`;
                else result += sidStr;
            } else result += sidStr;
        }
        return result;
    }
    toJSON() {
        const object = {
            ...super.toJSON(),
            value: this.toString(),
            sidArray: []
        };
        for(let i = 0; i < this.value.length; i++){
            object.sidArray.push(this.value[i].toJSON());
        }
        return object;
    }
}
LocalObjectIdentifierValueBlock.NAME = "ObjectIdentifierValueBlock";
var _a$m;
class ObjectIdentifier extends BaseBlock {
    constructor(parameters = {}){
        super(parameters, LocalObjectIdentifierValueBlock);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 6;
    }
    getValue() {
        return this.valueBlock.toString();
    }
    setValue(value) {
        this.valueBlock.fromString(value);
    }
    onAsciiEncoding() {
        return `${this.constructor.NAME} : ${this.valueBlock.toString() || "empty"}`;
    }
    toJSON() {
        return {
            ...super.toJSON(),
            value: this.getValue()
        };
    }
}
_a$m = ObjectIdentifier;
(()=>{
    typeStore.ObjectIdentifier = _a$m;
})();
ObjectIdentifier.NAME = "OBJECT IDENTIFIER";
class LocalRelativeSidValueBlock extends HexBlock(LocalBaseBlock) {
    constructor({ valueDec = 0, ...parameters } = {}){
        super(parameters);
        this.valueDec = valueDec;
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        if (inputLength === 0) return inputOffset;
        const inputView = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer);
        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) return -1;
        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);
        this.valueHexView = new Uint8Array(inputLength);
        for(let i = 0; i < inputLength; i++){
            this.valueHexView[i] = intBuffer[i] & 0x7F;
            this.blockLength++;
            if ((intBuffer[i] & 0x80) === 0x00) break;
        }
        const tempView = new Uint8Array(this.blockLength);
        for(let i = 0; i < this.blockLength; i++)tempView[i] = this.valueHexView[i];
        this.valueHexView = tempView;
        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {
            this.error = "End of input reached before message was fully decoded";
            return -1;
        }
        if (this.valueHexView[0] === 0x00) this.warnings.push("Needlessly long format of SID encoding");
        if (this.blockLength <= 8) this.valueDec = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilFromBase(this.valueHexView, 7);
        else {
            this.isHexOnly = true;
            this.warnings.push("Too big SID for decoding, hex only");
        }
        return inputOffset + this.blockLength;
    }
    toBER(sizeOnly) {
        if (this.isHexOnly) {
            if (sizeOnly) return new ArrayBuffer(this.valueHexView.byteLength);
            const curView = this.valueHexView;
            const retView = new Uint8Array(this.blockLength);
            for(let i = 0; i < this.blockLength - 1; i++)retView[i] = curView[i] | 0x80;
            retView[this.blockLength - 1] = curView[this.blockLength - 1];
            return retView.buffer;
        }
        const encodedBuf = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilToBase(this.valueDec, 7);
        if (encodedBuf.byteLength === 0) {
            this.error = "Error during encoding SID value";
            return EMPTY_BUFFER;
        }
        const retView = new Uint8Array(encodedBuf.byteLength);
        if (!sizeOnly) {
            const encodedView = new Uint8Array(encodedBuf);
            const len = encodedBuf.byteLength - 1;
            for(let i = 0; i < len; i++)retView[i] = encodedView[i] | 0x80;
            retView[len] = encodedView[len];
        }
        return retView.buffer;
    }
    toString() {
        let result = "";
        if (this.isHexOnly) result = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.ToHex(this.valueHexView);
        else {
            result = this.valueDec.toString();
        }
        return result;
    }
    toJSON() {
        return {
            ...super.toJSON(),
            valueDec: this.valueDec
        };
    }
}
LocalRelativeSidValueBlock.NAME = "relativeSidBlock";
class LocalRelativeObjectIdentifierValueBlock extends ValueBlock {
    constructor({ value = EMPTY_STRING, ...parameters } = {}){
        super(parameters);
        this.value = [];
        if (value) {
            this.fromString(value);
        }
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        let resultOffset = inputOffset;
        while(inputLength > 0){
            const sidBlock = new LocalRelativeSidValueBlock();
            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);
            if (resultOffset === -1) {
                this.blockLength = 0;
                this.error = sidBlock.error;
                return resultOffset;
            }
            this.blockLength += sidBlock.blockLength;
            inputLength -= sidBlock.blockLength;
            this.value.push(sidBlock);
        }
        return resultOffset;
    }
    toBER(sizeOnly, writer) {
        const retBuffers = [];
        for(let i = 0; i < this.value.length; i++){
            const valueBuf = this.value[i].toBER(sizeOnly);
            if (valueBuf.byteLength === 0) {
                this.error = this.value[i].error;
                return EMPTY_BUFFER;
            }
            retBuffers.push(valueBuf);
        }
        return concat(retBuffers);
    }
    fromString(string) {
        this.value = [];
        let pos1 = 0;
        let pos2 = 0;
        let sid = "";
        do {
            pos2 = string.indexOf(".", pos1);
            if (pos2 === -1) sid = string.substring(pos1);
            else sid = string.substring(pos1, pos2);
            pos1 = pos2 + 1;
            const sidBlock = new LocalRelativeSidValueBlock();
            sidBlock.valueDec = parseInt(sid, 10);
            if (isNaN(sidBlock.valueDec)) return true;
            this.value.push(sidBlock);
        }while (pos2 !== -1)
        return true;
    }
    toString() {
        let result = "";
        let isHexOnly = false;
        for(let i = 0; i < this.value.length; i++){
            isHexOnly = this.value[i].isHexOnly;
            let sidStr = this.value[i].toString();
            if (i !== 0) result = `${result}.`;
            if (isHexOnly) {
                sidStr = `{${sidStr}}`;
                result += sidStr;
            } else result += sidStr;
        }
        return result;
    }
    toJSON() {
        const object = {
            ...super.toJSON(),
            value: this.toString(),
            sidArray: []
        };
        for(let i = 0; i < this.value.length; i++)object.sidArray.push(this.value[i].toJSON());
        return object;
    }
}
LocalRelativeObjectIdentifierValueBlock.NAME = "RelativeObjectIdentifierValueBlock";
var _a$l;
class RelativeObjectIdentifier extends BaseBlock {
    constructor(parameters = {}){
        super(parameters, LocalRelativeObjectIdentifierValueBlock);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 13;
    }
    getValue() {
        return this.valueBlock.toString();
    }
    setValue(value) {
        this.valueBlock.fromString(value);
    }
    onAsciiEncoding() {
        return `${this.constructor.NAME} : ${this.valueBlock.toString() || "empty"}`;
    }
    toJSON() {
        return {
            ...super.toJSON(),
            value: this.getValue()
        };
    }
}
_a$l = RelativeObjectIdentifier;
(()=>{
    typeStore.RelativeObjectIdentifier = _a$l;
})();
RelativeObjectIdentifier.NAME = "RelativeObjectIdentifier";
var _a$k;
class Sequence extends Constructed {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 16;
    }
}
_a$k = Sequence;
(()=>{
    typeStore.Sequence = _a$k;
})();
Sequence.NAME = "SEQUENCE";
var _a$j;
class Set extends Constructed {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 17;
    }
}
_a$j = Set;
(()=>{
    typeStore.Set = _a$j;
})();
Set.NAME = "SET";
class LocalStringValueBlock extends HexBlock(ValueBlock) {
    constructor({ ...parameters } = {}){
        super(parameters);
        this.isHexOnly = true;
        this.value = EMPTY_STRING;
    }
    toJSON() {
        return {
            ...super.toJSON(),
            value: this.value
        };
    }
}
LocalStringValueBlock.NAME = "StringValueBlock";
class LocalSimpleStringValueBlock extends LocalStringValueBlock {
}
LocalSimpleStringValueBlock.NAME = "SimpleStringValueBlock";
class LocalSimpleStringBlock extends BaseStringBlock {
    constructor({ ...parameters } = {}){
        super(parameters, LocalSimpleStringValueBlock);
    }
    fromBuffer(inputBuffer) {
        this.valueBlock.value = String.fromCharCode.apply(null, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer));
    }
    fromString(inputString) {
        const strLen = inputString.length;
        const view = this.valueBlock.valueHexView = new Uint8Array(strLen);
        for(let i = 0; i < strLen; i++)view[i] = inputString.charCodeAt(i);
        this.valueBlock.value = inputString;
    }
}
LocalSimpleStringBlock.NAME = "SIMPLE STRING";
class LocalUtf8StringValueBlock extends LocalSimpleStringBlock {
    fromBuffer(inputBuffer) {
        this.valueBlock.valueHexView = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer);
        try {
            this.valueBlock.value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.ToUtf8String(inputBuffer);
        } catch (ex) {
            this.warnings.push(`Error during "decodeURIComponent": ${ex}, using raw string`);
            this.valueBlock.value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.ToBinary(inputBuffer);
        }
    }
    fromString(inputString) {
        this.valueBlock.valueHexView = new Uint8Array(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.FromUtf8String(inputString));
        this.valueBlock.value = inputString;
    }
}
LocalUtf8StringValueBlock.NAME = "Utf8StringValueBlock";
var _a$i;
class Utf8String extends LocalUtf8StringValueBlock {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 12;
    }
}
_a$i = Utf8String;
(()=>{
    typeStore.Utf8String = _a$i;
})();
Utf8String.NAME = "UTF8String";
class LocalBmpStringValueBlock extends LocalSimpleStringBlock {
    fromBuffer(inputBuffer) {
        this.valueBlock.value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.ToUtf16String(inputBuffer);
        this.valueBlock.valueHexView = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer);
    }
    fromString(inputString) {
        this.valueBlock.value = inputString;
        this.valueBlock.valueHexView = new Uint8Array(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Convert.FromUtf16String(inputString));
    }
}
LocalBmpStringValueBlock.NAME = "BmpStringValueBlock";
var _a$h;
class BmpString extends LocalBmpStringValueBlock {
    constructor({ ...parameters } = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 30;
    }
}
_a$h = BmpString;
(()=>{
    typeStore.BmpString = _a$h;
})();
BmpString.NAME = "BMPString";
class LocalUniversalStringValueBlock extends LocalSimpleStringBlock {
    fromBuffer(inputBuffer) {
        const copyBuffer = ArrayBuffer.isView(inputBuffer) ? inputBuffer.slice().buffer : inputBuffer.slice(0);
        const valueView = new Uint8Array(copyBuffer);
        for(let i = 0; i < valueView.length; i += 4){
            valueView[i] = valueView[i + 3];
            valueView[i + 1] = valueView[i + 2];
            valueView[i + 2] = 0x00;
            valueView[i + 3] = 0x00;
        }
        this.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));
    }
    fromString(inputString) {
        const strLength = inputString.length;
        const valueHexView = this.valueBlock.valueHexView = new Uint8Array(strLength * 4);
        for(let i = 0; i < strLength; i++){
            const codeBuf = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.utilToBase(inputString.charCodeAt(i), 8);
            const codeView = new Uint8Array(codeBuf);
            if (codeView.length > 4) continue;
            const dif = 4 - codeView.length;
            for(let j = codeView.length - 1; j >= 0; j--)valueHexView[i * 4 + j + dif] = codeView[j];
        }
        this.valueBlock.value = inputString;
    }
}
LocalUniversalStringValueBlock.NAME = "UniversalStringValueBlock";
var _a$g;
class UniversalString extends LocalUniversalStringValueBlock {
    constructor({ ...parameters } = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 28;
    }
}
_a$g = UniversalString;
(()=>{
    typeStore.UniversalString = _a$g;
})();
UniversalString.NAME = "UniversalString";
var _a$f;
class NumericString extends LocalSimpleStringBlock {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 18;
    }
}
_a$f = NumericString;
(()=>{
    typeStore.NumericString = _a$f;
})();
NumericString.NAME = "NumericString";
var _a$e;
class PrintableString extends LocalSimpleStringBlock {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 19;
    }
}
_a$e = PrintableString;
(()=>{
    typeStore.PrintableString = _a$e;
})();
PrintableString.NAME = "PrintableString";
var _a$d;
class TeletexString extends LocalSimpleStringBlock {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 20;
    }
}
_a$d = TeletexString;
(()=>{
    typeStore.TeletexString = _a$d;
})();
TeletexString.NAME = "TeletexString";
var _a$c;
class VideotexString extends LocalSimpleStringBlock {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 21;
    }
}
_a$c = VideotexString;
(()=>{
    typeStore.VideotexString = _a$c;
})();
VideotexString.NAME = "VideotexString";
var _a$b;
class IA5String extends LocalSimpleStringBlock {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 22;
    }
}
_a$b = IA5String;
(()=>{
    typeStore.IA5String = _a$b;
})();
IA5String.NAME = "IA5String";
var _a$a;
class GraphicString extends LocalSimpleStringBlock {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 25;
    }
}
_a$a = GraphicString;
(()=>{
    typeStore.GraphicString = _a$a;
})();
GraphicString.NAME = "GraphicString";
var _a$9;
class VisibleString extends LocalSimpleStringBlock {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 26;
    }
}
_a$9 = VisibleString;
(()=>{
    typeStore.VisibleString = _a$9;
})();
VisibleString.NAME = "VisibleString";
var _a$8;
class GeneralString extends LocalSimpleStringBlock {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 27;
    }
}
_a$8 = GeneralString;
(()=>{
    typeStore.GeneralString = _a$8;
})();
GeneralString.NAME = "GeneralString";
var _a$7;
class CharacterString extends LocalSimpleStringBlock {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 29;
    }
}
_a$7 = CharacterString;
(()=>{
    typeStore.CharacterString = _a$7;
})();
CharacterString.NAME = "CharacterString";
var _a$6;
class UTCTime extends VisibleString {
    constructor({ value, valueDate, ...parameters } = {}){
        super(parameters);
        this.year = 0;
        this.month = 0;
        this.day = 0;
        this.hour = 0;
        this.minute = 0;
        this.second = 0;
        if (value) {
            this.fromString(value);
            this.valueBlock.valueHexView = new Uint8Array(value.length);
            for(let i = 0; i < value.length; i++)this.valueBlock.valueHexView[i] = value.charCodeAt(i);
        }
        if (valueDate) {
            this.fromDate(valueDate);
            this.valueBlock.valueHexView = new Uint8Array(this.toBuffer());
        }
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 23;
    }
    fromBuffer(inputBuffer) {
        this.fromString(String.fromCharCode.apply(null, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer)));
    }
    toBuffer() {
        const str = this.toString();
        const buffer = new ArrayBuffer(str.length);
        const view = new Uint8Array(buffer);
        for(let i = 0; i < str.length; i++)view[i] = str.charCodeAt(i);
        return buffer;
    }
    fromDate(inputDate) {
        this.year = inputDate.getUTCFullYear();
        this.month = inputDate.getUTCMonth() + 1;
        this.day = inputDate.getUTCDate();
        this.hour = inputDate.getUTCHours();
        this.minute = inputDate.getUTCMinutes();
        this.second = inputDate.getUTCSeconds();
    }
    toDate() {
        return new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second));
    }
    fromString(inputString) {
        const parser = /(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/ig;
        const parserArray = parser.exec(inputString);
        if (parserArray === null) {
            this.error = "Wrong input string for conversion";
            return;
        }
        const year = parseInt(parserArray[1], 10);
        if (year >= 50) this.year = 1900 + year;
        else this.year = 2000 + year;
        this.month = parseInt(parserArray[2], 10);
        this.day = parseInt(parserArray[3], 10);
        this.hour = parseInt(parserArray[4], 10);
        this.minute = parseInt(parserArray[5], 10);
        this.second = parseInt(parserArray[6], 10);
    }
    toString(encoding = "iso") {
        if (encoding === "iso") {
            const outputArray = new Array(7);
            outputArray[0] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.year < 2000 ? this.year - 1900 : this.year - 2000, 2);
            outputArray[1] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.month, 2);
            outputArray[2] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.day, 2);
            outputArray[3] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.hour, 2);
            outputArray[4] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.minute, 2);
            outputArray[5] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.second, 2);
            outputArray[6] = "Z";
            return outputArray.join("");
        }
        return super.toString(encoding);
    }
    onAsciiEncoding() {
        return `${this.constructor.NAME} : ${this.toDate().toISOString()}`;
    }
    toJSON() {
        return {
            ...super.toJSON(),
            year: this.year,
            month: this.month,
            day: this.day,
            hour: this.hour,
            minute: this.minute,
            second: this.second
        };
    }
}
_a$6 = UTCTime;
(()=>{
    typeStore.UTCTime = _a$6;
})();
UTCTime.NAME = "UTCTime";
var _a$5;
class GeneralizedTime extends UTCTime {
    constructor(parameters = {}){
        var _b;
        super(parameters);
        (_b = this.millisecond) !== null && _b !== void 0 ? _b : this.millisecond = 0;
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 24;
    }
    fromDate(inputDate) {
        super.fromDate(inputDate);
        this.millisecond = inputDate.getUTCMilliseconds();
    }
    toDate() {
        return new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond));
    }
    fromString(inputString) {
        let isUTC = false;
        let timeString = "";
        let dateTimeString = "";
        let fractionPart = 0;
        let parser;
        let hourDifference = 0;
        let minuteDifference = 0;
        if (inputString[inputString.length - 1] === "Z") {
            timeString = inputString.substring(0, inputString.length - 1);
            isUTC = true;
        } else {
            const number = new Number(inputString[inputString.length - 1]);
            if (isNaN(number.valueOf())) throw new Error("Wrong input string for conversion");
            timeString = inputString;
        }
        if (isUTC) {
            if (timeString.indexOf("+") !== -1) throw new Error("Wrong input string for conversion");
            if (timeString.indexOf("-") !== -1) throw new Error("Wrong input string for conversion");
        } else {
            let multiplier = 1;
            let differencePosition = timeString.indexOf("+");
            let differenceString = "";
            if (differencePosition === -1) {
                differencePosition = timeString.indexOf("-");
                multiplier = -1;
            }
            if (differencePosition !== -1) {
                differenceString = timeString.substring(differencePosition + 1);
                timeString = timeString.substring(0, differencePosition);
                if (differenceString.length !== 2 && differenceString.length !== 4) throw new Error("Wrong input string for conversion");
                let number = parseInt(differenceString.substring(0, 2), 10);
                if (isNaN(number.valueOf())) throw new Error("Wrong input string for conversion");
                hourDifference = multiplier * number;
                if (differenceString.length === 4) {
                    number = parseInt(differenceString.substring(2, 4), 10);
                    if (isNaN(number.valueOf())) throw new Error("Wrong input string for conversion");
                    minuteDifference = multiplier * number;
                }
            }
        }
        let fractionPointPosition = timeString.indexOf(".");
        if (fractionPointPosition === -1) fractionPointPosition = timeString.indexOf(",");
        if (fractionPointPosition !== -1) {
            const fractionPartCheck = new Number(`0${timeString.substring(fractionPointPosition)}`);
            if (isNaN(fractionPartCheck.valueOf())) throw new Error("Wrong input string for conversion");
            fractionPart = fractionPartCheck.valueOf();
            dateTimeString = timeString.substring(0, fractionPointPosition);
        } else dateTimeString = timeString;
        switch(true){
            case dateTimeString.length === 8:
                parser = /(\d{4})(\d{2})(\d{2})/ig;
                if (fractionPointPosition !== -1) throw new Error("Wrong input string for conversion");
                break;
            case dateTimeString.length === 10:
                parser = /(\d{4})(\d{2})(\d{2})(\d{2})/ig;
                if (fractionPointPosition !== -1) {
                    let fractionResult = 60 * fractionPart;
                    this.minute = Math.floor(fractionResult);
                    fractionResult = 60 * (fractionResult - this.minute);
                    this.second = Math.floor(fractionResult);
                    fractionResult = 1000 * (fractionResult - this.second);
                    this.millisecond = Math.floor(fractionResult);
                }
                break;
            case dateTimeString.length === 12:
                parser = /(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/ig;
                if (fractionPointPosition !== -1) {
                    let fractionResult = 60 * fractionPart;
                    this.second = Math.floor(fractionResult);
                    fractionResult = 1000 * (fractionResult - this.second);
                    this.millisecond = Math.floor(fractionResult);
                }
                break;
            case dateTimeString.length === 14:
                parser = /(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/ig;
                if (fractionPointPosition !== -1) {
                    const fractionResult = 1000 * fractionPart;
                    this.millisecond = Math.floor(fractionResult);
                }
                break;
            default:
                throw new Error("Wrong input string for conversion");
        }
        const parserArray = parser.exec(dateTimeString);
        if (parserArray === null) throw new Error("Wrong input string for conversion");
        for(let j = 1; j < parserArray.length; j++){
            switch(j){
                case 1:
                    this.year = parseInt(parserArray[j], 10);
                    break;
                case 2:
                    this.month = parseInt(parserArray[j], 10);
                    break;
                case 3:
                    this.day = parseInt(parserArray[j], 10);
                    break;
                case 4:
                    this.hour = parseInt(parserArray[j], 10) + hourDifference;
                    break;
                case 5:
                    this.minute = parseInt(parserArray[j], 10) + minuteDifference;
                    break;
                case 6:
                    this.second = parseInt(parserArray[j], 10);
                    break;
                default:
                    throw new Error("Wrong input string for conversion");
            }
        }
        if (isUTC === false) {
            const tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);
            this.year = tempDate.getUTCFullYear();
            this.month = tempDate.getUTCMonth();
            this.day = tempDate.getUTCDay();
            this.hour = tempDate.getUTCHours();
            this.minute = tempDate.getUTCMinutes();
            this.second = tempDate.getUTCSeconds();
            this.millisecond = tempDate.getUTCMilliseconds();
        }
    }
    toString(encoding = "iso") {
        if (encoding === "iso") {
            const outputArray = [];
            outputArray.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.year, 4));
            outputArray.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.month, 2));
            outputArray.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.day, 2));
            outputArray.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.hour, 2));
            outputArray.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.minute, 2));
            outputArray.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.second, 2));
            if (this.millisecond !== 0) {
                outputArray.push(".");
                outputArray.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvutils$40$1$2e$1$2e$3$2f$node_modules$2f$pvutils$2f$build$2f$utils$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.padNumber(this.millisecond, 3));
            }
            outputArray.push("Z");
            return outputArray.join("");
        }
        return super.toString(encoding);
    }
    toJSON() {
        return {
            ...super.toJSON(),
            millisecond: this.millisecond
        };
    }
}
_a$5 = GeneralizedTime;
(()=>{
    typeStore.GeneralizedTime = _a$5;
})();
GeneralizedTime.NAME = "GeneralizedTime";
var _a$4;
class DATE extends Utf8String {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 31;
    }
}
_a$4 = DATE;
(()=>{
    typeStore.DATE = _a$4;
})();
DATE.NAME = "DATE";
var _a$3;
class TimeOfDay extends Utf8String {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 32;
    }
}
_a$3 = TimeOfDay;
(()=>{
    typeStore.TimeOfDay = _a$3;
})();
TimeOfDay.NAME = "TimeOfDay";
var _a$2;
class DateTime extends Utf8String {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 33;
    }
}
_a$2 = DateTime;
(()=>{
    typeStore.DateTime = _a$2;
})();
DateTime.NAME = "DateTime";
var _a$1;
class Duration extends Utf8String {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 34;
    }
}
_a$1 = Duration;
(()=>{
    typeStore.Duration = _a$1;
})();
Duration.NAME = "Duration";
var _a;
class TIME extends Utf8String {
    constructor(parameters = {}){
        super(parameters);
        this.idBlock.tagClass = 1;
        this.idBlock.tagNumber = 14;
    }
}
_a = TIME;
(()=>{
    typeStore.TIME = _a;
})();
TIME.NAME = "TIME";
class Any {
    constructor({ name = EMPTY_STRING, optional = false } = {}){
        this.name = name;
        this.optional = optional;
    }
}
class Choice extends Any {
    constructor({ value = [], ...parameters } = {}){
        super(parameters);
        this.value = value;
    }
}
class Repeated extends Any {
    constructor({ value = new Any(), local = false, ...parameters } = {}){
        super(parameters);
        this.value = value;
        this.local = local;
    }
}
class RawData {
    constructor({ data = EMPTY_VIEW } = {}){
        this.dataView = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(data);
    }
    get data() {
        return this.dataView.slice().buffer;
    }
    set data(value) {
        this.dataView = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(value);
    }
    fromBER(inputBuffer, inputOffset, inputLength) {
        const endLength = inputOffset + inputLength;
        this.dataView = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer).subarray(inputOffset, endLength);
        return endLength;
    }
    toBER(sizeOnly) {
        return this.dataView.slice().buffer;
    }
}
function compareSchema(root, inputData, inputSchema) {
    if (inputSchema instanceof Choice) {
        for(let j = 0; j < inputSchema.value.length; j++){
            const result = compareSchema(root, inputData, inputSchema.value[j]);
            if (result.verified) {
                return {
                    verified: true,
                    result: root
                };
            }
        }
        {
            const _result = {
                verified: false,
                result: {
                    error: "Wrong values for Choice type"
                }
            };
            if (inputSchema.hasOwnProperty(NAME)) _result.name = inputSchema.name;
            return _result;
        }
    }
    if (inputSchema instanceof Any) {
        if (inputSchema.hasOwnProperty(NAME)) root[inputSchema.name] = inputData;
        return {
            verified: true,
            result: root
        };
    }
    if (root instanceof Object === false) {
        return {
            verified: false,
            result: {
                error: "Wrong root object"
            }
        };
    }
    if (inputData instanceof Object === false) {
        return {
            verified: false,
            result: {
                error: "Wrong ASN.1 data"
            }
        };
    }
    if (inputSchema instanceof Object === false) {
        return {
            verified: false,
            result: {
                error: "Wrong ASN.1 schema"
            }
        };
    }
    if (ID_BLOCK in inputSchema === false) {
        return {
            verified: false,
            result: {
                error: "Wrong ASN.1 schema"
            }
        };
    }
    if (FROM_BER in inputSchema.idBlock === false) {
        return {
            verified: false,
            result: {
                error: "Wrong ASN.1 schema"
            }
        };
    }
    if (TO_BER in inputSchema.idBlock === false) {
        return {
            verified: false,
            result: {
                error: "Wrong ASN.1 schema"
            }
        };
    }
    const encodedId = inputSchema.idBlock.toBER(false);
    if (encodedId.byteLength === 0) {
        return {
            verified: false,
            result: {
                error: "Error encoding idBlock for ASN.1 schema"
            }
        };
    }
    const decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);
    if (decodedOffset === -1) {
        return {
            verified: false,
            result: {
                error: "Error decoding idBlock for ASN.1 schema"
            }
        };
    }
    if (inputSchema.idBlock.hasOwnProperty(TAG_CLASS) === false) {
        return {
            verified: false,
            result: {
                error: "Wrong ASN.1 schema"
            }
        };
    }
    if (inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass) {
        return {
            verified: false,
            result: root
        };
    }
    if (inputSchema.idBlock.hasOwnProperty(TAG_NUMBER) === false) {
        return {
            verified: false,
            result: {
                error: "Wrong ASN.1 schema"
            }
        };
    }
    if (inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber) {
        return {
            verified: false,
            result: root
        };
    }
    if (inputSchema.idBlock.hasOwnProperty(IS_CONSTRUCTED) === false) {
        return {
            verified: false,
            result: {
                error: "Wrong ASN.1 schema"
            }
        };
    }
    if (inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed) {
        return {
            verified: false,
            result: root
        };
    }
    if (!(IS_HEX_ONLY in inputSchema.idBlock)) {
        return {
            verified: false,
            result: {
                error: "Wrong ASN.1 schema"
            }
        };
    }
    if (inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly) {
        return {
            verified: false,
            result: root
        };
    }
    if (inputSchema.idBlock.isHexOnly) {
        if (VALUE_HEX_VIEW in inputSchema.idBlock === false) {
            return {
                verified: false,
                result: {
                    error: "Wrong ASN.1 schema"
                }
            };
        }
        const schemaView = inputSchema.idBlock.valueHexView;
        const asn1View = inputData.idBlock.valueHexView;
        if (schemaView.length !== asn1View.length) {
            return {
                verified: false,
                result: root
            };
        }
        for(let i = 0; i < schemaView.length; i++){
            if (schemaView[i] !== asn1View[1]) {
                return {
                    verified: false,
                    result: root
                };
            }
        }
    }
    if (inputSchema.name) {
        inputSchema.name = inputSchema.name.replace(/^\s+|\s+$/g, EMPTY_STRING);
        if (inputSchema.name) root[inputSchema.name] = inputData;
    }
    if (inputSchema instanceof typeStore.Constructed) {
        let admission = 0;
        let result = {
            verified: false,
            result: {
                error: "Unknown error"
            }
        };
        let maxLength = inputSchema.valueBlock.value.length;
        if (maxLength > 0) {
            if (inputSchema.valueBlock.value[0] instanceof Repeated) {
                maxLength = inputData.valueBlock.value.length;
            }
        }
        if (maxLength === 0) {
            return {
                verified: true,
                result: root
            };
        }
        if (inputData.valueBlock.value.length === 0 && inputSchema.valueBlock.value.length !== 0) {
            let _optional = true;
            for(let i = 0; i < inputSchema.valueBlock.value.length; i++)_optional = _optional && (inputSchema.valueBlock.value[i].optional || false);
            if (_optional) {
                return {
                    verified: true,
                    result: root
                };
            }
            if (inputSchema.name) {
                inputSchema.name = inputSchema.name.replace(/^\s+|\s+$/g, EMPTY_STRING);
                if (inputSchema.name) delete root[inputSchema.name];
            }
            root.error = "Inconsistent object length";
            return {
                verified: false,
                result: root
            };
        }
        for(let i = 0; i < maxLength; i++){
            if (i - admission >= inputData.valueBlock.value.length) {
                if (inputSchema.valueBlock.value[i].optional === false) {
                    const _result = {
                        verified: false,
                        result: root
                    };
                    root.error = "Inconsistent length between ASN.1 data and schema";
                    if (inputSchema.name) {
                        inputSchema.name = inputSchema.name.replace(/^\s+|\s+$/g, EMPTY_STRING);
                        if (inputSchema.name) {
                            delete root[inputSchema.name];
                            _result.name = inputSchema.name;
                        }
                    }
                    return _result;
                }
            } else {
                if (inputSchema.valueBlock.value[0] instanceof Repeated) {
                    result = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);
                    if (result.verified === false) {
                        if (inputSchema.valueBlock.value[0].optional) admission++;
                        else {
                            if (inputSchema.name) {
                                inputSchema.name = inputSchema.name.replace(/^\s+|\s+$/g, EMPTY_STRING);
                                if (inputSchema.name) delete root[inputSchema.name];
                            }
                            return result;
                        }
                    }
                    if (NAME in inputSchema.valueBlock.value[0] && inputSchema.valueBlock.value[0].name.length > 0) {
                        let arrayRoot = {};
                        if (LOCAL in inputSchema.valueBlock.value[0] && inputSchema.valueBlock.value[0].local) arrayRoot = inputData;
                        else arrayRoot = root;
                        if (typeof arrayRoot[inputSchema.valueBlock.value[0].name] === "undefined") arrayRoot[inputSchema.valueBlock.value[0].name] = [];
                        arrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);
                    }
                } else {
                    result = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);
                    if (result.verified === false) {
                        if (inputSchema.valueBlock.value[i].optional) admission++;
                        else {
                            if (inputSchema.name) {
                                inputSchema.name = inputSchema.name.replace(/^\s+|\s+$/g, EMPTY_STRING);
                                if (inputSchema.name) delete root[inputSchema.name];
                            }
                            return result;
                        }
                    }
                }
            }
        }
        if (result.verified === false) {
            const _result = {
                verified: false,
                result: root
            };
            if (inputSchema.name) {
                inputSchema.name = inputSchema.name.replace(/^\s+|\s+$/g, EMPTY_STRING);
                if (inputSchema.name) {
                    delete root[inputSchema.name];
                    _result.name = inputSchema.name;
                }
            }
            return _result;
        }
        return {
            verified: true,
            result: root
        };
    }
    if (inputSchema.primitiveSchema && VALUE_HEX_VIEW in inputData.valueBlock) {
        const asn1 = localFromBER(inputData.valueBlock.valueHexView);
        if (asn1.offset === -1) {
            const _result = {
                verified: false,
                result: asn1.result
            };
            if (inputSchema.name) {
                inputSchema.name = inputSchema.name.replace(/^\s+|\s+$/g, EMPTY_STRING);
                if (inputSchema.name) {
                    delete root[inputSchema.name];
                    _result.name = inputSchema.name;
                }
            }
            return _result;
        }
        return compareSchema(root, asn1.result, inputSchema.primitiveSchema);
    }
    return {
        verified: true,
        result: root
    };
}
function verifySchema(inputBuffer, inputSchema) {
    if (inputSchema instanceof Object === false) {
        return {
            verified: false,
            result: {
                error: "Wrong ASN.1 schema type"
            }
        };
    }
    const asn1 = localFromBER(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(inputBuffer));
    if (asn1.offset === -1) {
        return {
            verified: false,
            result: asn1.result
        };
    }
    return compareSchema(asn1.result, asn1.result, inputSchema);
}
;
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/enums.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AsnPropTypes": (()=>AsnPropTypes),
    "AsnTypeTypes": (()=>AsnTypeTypes)
});
var AsnTypeTypes;
(function(AsnTypeTypes) {
    AsnTypeTypes[AsnTypeTypes["Sequence"] = 0] = "Sequence";
    AsnTypeTypes[AsnTypeTypes["Set"] = 1] = "Set";
    AsnTypeTypes[AsnTypeTypes["Choice"] = 2] = "Choice";
})(AsnTypeTypes || (AsnTypeTypes = {}));
var AsnPropTypes;
(function(AsnPropTypes) {
    AsnPropTypes[AsnPropTypes["Any"] = 1] = "Any";
    AsnPropTypes[AsnPropTypes["Boolean"] = 2] = "Boolean";
    AsnPropTypes[AsnPropTypes["OctetString"] = 3] = "OctetString";
    AsnPropTypes[AsnPropTypes["BitString"] = 4] = "BitString";
    AsnPropTypes[AsnPropTypes["Integer"] = 5] = "Integer";
    AsnPropTypes[AsnPropTypes["Enumerated"] = 6] = "Enumerated";
    AsnPropTypes[AsnPropTypes["ObjectIdentifier"] = 7] = "ObjectIdentifier";
    AsnPropTypes[AsnPropTypes["Utf8String"] = 8] = "Utf8String";
    AsnPropTypes[AsnPropTypes["BmpString"] = 9] = "BmpString";
    AsnPropTypes[AsnPropTypes["UniversalString"] = 10] = "UniversalString";
    AsnPropTypes[AsnPropTypes["NumericString"] = 11] = "NumericString";
    AsnPropTypes[AsnPropTypes["PrintableString"] = 12] = "PrintableString";
    AsnPropTypes[AsnPropTypes["TeletexString"] = 13] = "TeletexString";
    AsnPropTypes[AsnPropTypes["VideotexString"] = 14] = "VideotexString";
    AsnPropTypes[AsnPropTypes["IA5String"] = 15] = "IA5String";
    AsnPropTypes[AsnPropTypes["GraphicString"] = 16] = "GraphicString";
    AsnPropTypes[AsnPropTypes["VisibleString"] = 17] = "VisibleString";
    AsnPropTypes[AsnPropTypes["GeneralString"] = 18] = "GeneralString";
    AsnPropTypes[AsnPropTypes["CharacterString"] = 19] = "CharacterString";
    AsnPropTypes[AsnPropTypes["UTCTime"] = 20] = "UTCTime";
    AsnPropTypes[AsnPropTypes["GeneralizedTime"] = 21] = "GeneralizedTime";
    AsnPropTypes[AsnPropTypes["DATE"] = 22] = "DATE";
    AsnPropTypes[AsnPropTypes["TimeOfDay"] = 23] = "TimeOfDay";
    AsnPropTypes[AsnPropTypes["DateTime"] = 24] = "DateTime";
    AsnPropTypes[AsnPropTypes["Duration"] = 25] = "Duration";
    AsnPropTypes[AsnPropTypes["TIME"] = 26] = "TIME";
    AsnPropTypes[AsnPropTypes["Null"] = 27] = "Null";
})(AsnPropTypes || (AsnPropTypes = {}));
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/types/bit_string.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BitString": (()=>BitString)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/asn1js@3.0.5/node_modules/asn1js/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/pvtsutils@1.3.6/node_modules/pvtsutils/build/index.es.js [app-route] (ecmascript)");
;
;
class BitString {
    constructor(params, unusedBits = 0){
        this.unusedBits = 0;
        this.value = new ArrayBuffer(0);
        if (params) {
            if (typeof params === "number") {
                this.fromNumber(params);
            } else if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].isBufferSource(params)) {
                this.unusedBits = unusedBits;
                this.value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(params);
            } else {
                throw TypeError("Unsupported type of 'params' argument for BitString");
            }
        }
    }
    fromASN(asn) {
        if (!(asn instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BitString)) {
            throw new TypeError("Argument 'asn' is not instance of ASN.1 BitString");
        }
        this.unusedBits = asn.valueBlock.unusedBits;
        this.value = asn.valueBlock.valueHex;
        return this;
    }
    toASN() {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BitString({
            unusedBits: this.unusedBits,
            valueHex: this.value
        });
    }
    toSchema(name) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BitString({
            name
        });
    }
    toNumber() {
        let res = "";
        const uintArray = new Uint8Array(this.value);
        for (const octet of uintArray){
            res += octet.toString(2).padStart(8, "0");
        }
        res = res.split("").reverse().join("");
        if (this.unusedBits) {
            res = res.slice(this.unusedBits).padStart(this.unusedBits, "0");
        }
        return parseInt(res, 2);
    }
    fromNumber(value) {
        let bits = value.toString(2);
        const octetSize = bits.length + 7 >> 3;
        this.unusedBits = (octetSize << 3) - bits.length;
        const octets = new Uint8Array(octetSize);
        bits = bits.padStart(octetSize << 3, "0").split("").reverse().join("");
        let index = 0;
        while(index < octetSize){
            octets[index] = parseInt(bits.slice(index << 3, (index << 3) + 8), 2);
            index++;
        }
        this.value = octets.buffer;
    }
}
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/types/octet_string.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "OctetString": (()=>OctetString)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/asn1js@3.0.5/node_modules/asn1js/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/pvtsutils@1.3.6/node_modules/pvtsutils/build/index.es.js [app-route] (ecmascript)");
;
;
class OctetString {
    get byteLength() {
        return this.buffer.byteLength;
    }
    get byteOffset() {
        return 0;
    }
    constructor(param){
        if (typeof param === "number") {
            this.buffer = new ArrayBuffer(param);
        } else {
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].isBufferSource(param)) {
                this.buffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(param);
            } else if (Array.isArray(param)) {
                this.buffer = new Uint8Array(param);
            } else {
                this.buffer = new ArrayBuffer(0);
            }
        }
    }
    fromASN(asn) {
        if (!(asn instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OctetString)) {
            throw new TypeError("Argument 'asn' is not instance of ASN.1 OctetString");
        }
        this.buffer = asn.valueBlock.valueHex;
        return this;
    }
    toASN() {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OctetString({
            valueHex: this.buffer
        });
    }
    toSchema(name) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OctetString({
            name
        });
    }
}
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/types/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/types/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$types$2f$bit_string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/types/bit_string.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$types$2f$octet_string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/types/octet_string.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$types$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/types/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/converters.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AsnAnyConverter": (()=>AsnAnyConverter),
    "AsnBitStringConverter": (()=>AsnBitStringConverter),
    "AsnBmpStringConverter": (()=>AsnBmpStringConverter),
    "AsnBooleanConverter": (()=>AsnBooleanConverter),
    "AsnCharacterStringConverter": (()=>AsnCharacterStringConverter),
    "AsnConstructedOctetStringConverter": (()=>AsnConstructedOctetStringConverter),
    "AsnEnumeratedConverter": (()=>AsnEnumeratedConverter),
    "AsnGeneralStringConverter": (()=>AsnGeneralStringConverter),
    "AsnGeneralizedTimeConverter": (()=>AsnGeneralizedTimeConverter),
    "AsnGraphicStringConverter": (()=>AsnGraphicStringConverter),
    "AsnIA5StringConverter": (()=>AsnIA5StringConverter),
    "AsnIntegerArrayBufferConverter": (()=>AsnIntegerArrayBufferConverter),
    "AsnIntegerBigIntConverter": (()=>AsnIntegerBigIntConverter),
    "AsnIntegerConverter": (()=>AsnIntegerConverter),
    "AsnNullConverter": (()=>AsnNullConverter),
    "AsnNumericStringConverter": (()=>AsnNumericStringConverter),
    "AsnObjectIdentifierConverter": (()=>AsnObjectIdentifierConverter),
    "AsnOctetStringConverter": (()=>AsnOctetStringConverter),
    "AsnPrintableStringConverter": (()=>AsnPrintableStringConverter),
    "AsnTeletexStringConverter": (()=>AsnTeletexStringConverter),
    "AsnUTCTimeConverter": (()=>AsnUTCTimeConverter),
    "AsnUniversalStringConverter": (()=>AsnUniversalStringConverter),
    "AsnUtf8StringConverter": (()=>AsnUtf8StringConverter),
    "AsnVideotexStringConverter": (()=>AsnVideotexStringConverter),
    "AsnVisibleStringConverter": (()=>AsnVisibleStringConverter),
    "defaultConverter": (()=>defaultConverter)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/asn1js@3.0.5/node_modules/asn1js/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/enums.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$types$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/types/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$types$2f$octet_string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/types/octet_string.js [app-route] (ecmascript)");
;
;
;
const AsnAnyConverter = {
    fromASN: (value)=>value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Null ? null : value.valueBeforeDecodeView,
    toASN: (value)=>{
        if (value === null) {
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Null();
        }
        const schema = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.fromBER(value);
        if (schema.result.error) {
            throw new Error(schema.result.error);
        }
        return schema.result;
    }
};
const AsnIntegerConverter = {
    fromASN: (value)=>value.valueBlock.valueHexView.byteLength >= 4 ? value.valueBlock.toString() : value.valueBlock.valueDec,
    toASN: (value)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Integer({
            value: +value
        })
};
const AsnEnumeratedConverter = {
    fromASN: (value)=>value.valueBlock.valueDec,
    toASN: (value)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Enumerated({
            value
        })
};
const AsnIntegerArrayBufferConverter = {
    fromASN: (value)=>value.valueBlock.valueHexView,
    toASN: (value)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Integer({
            valueHex: value
        })
};
const AsnIntegerBigIntConverter = {
    fromASN: (value)=>value.toBigInt(),
    toASN: (value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Integer.fromBigInt(value)
};
const AsnBitStringConverter = {
    fromASN: (value)=>value.valueBlock.valueHexView,
    toASN: (value)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BitString({
            valueHex: value
        })
};
const AsnObjectIdentifierConverter = {
    fromASN: (value)=>value.valueBlock.toString(),
    toASN: (value)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.ObjectIdentifier({
            value
        })
};
const AsnBooleanConverter = {
    fromASN: (value)=>value.valueBlock.value,
    toASN: (value)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Boolean({
            value
        })
};
const AsnOctetStringConverter = {
    fromASN: (value)=>value.valueBlock.valueHexView,
    toASN: (value)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OctetString({
            valueHex: value
        })
};
const AsnConstructedOctetStringConverter = {
    fromASN: (value)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$types$2f$octet_string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["OctetString"](value.getValue()),
    toASN: (value)=>value.toASN()
};
function createStringConverter(Asn1Type) {
    return {
        fromASN: (value)=>value.valueBlock.value,
        toASN: (value)=>new Asn1Type({
                value
            })
    };
}
const AsnUtf8StringConverter = createStringConverter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Utf8String);
const AsnBmpStringConverter = createStringConverter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BmpString);
const AsnUniversalStringConverter = createStringConverter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.UniversalString);
const AsnNumericStringConverter = createStringConverter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.NumericString);
const AsnPrintableStringConverter = createStringConverter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.PrintableString);
const AsnTeletexStringConverter = createStringConverter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.TeletexString);
const AsnVideotexStringConverter = createStringConverter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.VideotexString);
const AsnIA5StringConverter = createStringConverter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.IA5String);
const AsnGraphicStringConverter = createStringConverter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.GraphicString);
const AsnVisibleStringConverter = createStringConverter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.VisibleString);
const AsnGeneralStringConverter = createStringConverter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.GeneralString);
const AsnCharacterStringConverter = createStringConverter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.CharacterString);
const AsnUTCTimeConverter = {
    fromASN: (value)=>value.toDate(),
    toASN: (value)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.UTCTime({
            valueDate: value
        })
};
const AsnGeneralizedTimeConverter = {
    fromASN: (value)=>value.toDate(),
    toASN: (value)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.GeneralizedTime({
            valueDate: value
        })
};
const AsnNullConverter = {
    fromASN: ()=>null,
    toASN: ()=>{
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Null();
    }
};
function defaultConverter(type) {
    switch(type){
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Any:
            return AsnAnyConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].BitString:
            return AsnBitStringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].BmpString:
            return AsnBmpStringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Boolean:
            return AsnBooleanConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].CharacterString:
            return AsnCharacterStringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Enumerated:
            return AsnEnumeratedConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].GeneralString:
            return AsnGeneralStringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].GeneralizedTime:
            return AsnGeneralizedTimeConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].GraphicString:
            return AsnGraphicStringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].IA5String:
            return AsnIA5StringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer:
            return AsnIntegerConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Null:
            return AsnNullConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].NumericString:
            return AsnNumericStringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].ObjectIdentifier:
            return AsnObjectIdentifierConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].OctetString:
            return AsnOctetStringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].PrintableString:
            return AsnPrintableStringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].TeletexString:
            return AsnTeletexStringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].UTCTime:
            return AsnUTCTimeConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].UniversalString:
            return AsnUniversalStringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Utf8String:
            return AsnUtf8StringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].VideotexString:
            return AsnVideotexStringConverter;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].VisibleString:
            return AsnVisibleStringConverter;
        default:
            return null;
    }
}
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/helper.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "isArrayEqual": (()=>isArrayEqual),
    "isConvertible": (()=>isConvertible),
    "isTypeOfArray": (()=>isTypeOfArray)
});
function isConvertible(target) {
    if (typeof target === "function" && target.prototype) {
        if (target.prototype.toASN && target.prototype.fromASN) {
            return true;
        } else {
            return isConvertible(target.prototype);
        }
    } else {
        return !!(target && typeof target === "object" && "toASN" in target && "fromASN" in target);
    }
}
function isTypeOfArray(target) {
    var _a;
    if (target) {
        const proto = Object.getPrototypeOf(target);
        if (((_a = proto === null || proto === void 0 ? void 0 : proto.prototype) === null || _a === void 0 ? void 0 : _a.constructor) === Array) {
            return true;
        }
        return isTypeOfArray(proto);
    }
    return false;
}
function isArrayEqual(bytes1, bytes2) {
    if (!(bytes1 && bytes2)) {
        return false;
    }
    if (bytes1.byteLength !== bytes2.byteLength) {
        return false;
    }
    const b1 = new Uint8Array(bytes1);
    const b2 = new Uint8Array(bytes2);
    for(let i = 0; i < bytes1.byteLength; i++){
        if (b1[i] !== b2[i]) {
            return false;
        }
    }
    return true;
}
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/schema.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AsnSchemaStorage": (()=>AsnSchemaStorage)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/asn1js@3.0.5/node_modules/asn1js/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/enums.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/helper.js [app-route] (ecmascript)");
;
;
;
class AsnSchemaStorage {
    constructor(){
        this.items = new WeakMap();
    }
    has(target) {
        return this.items.has(target);
    }
    get(target, checkSchema = false) {
        const schema = this.items.get(target);
        if (!schema) {
            throw new Error(`Cannot get schema for '${target.prototype.constructor.name}' target`);
        }
        if (checkSchema && !schema.schema) {
            throw new Error(`Schema '${target.prototype.constructor.name}' doesn't contain ASN.1 schema. Call 'AsnSchemaStorage.cache'.`);
        }
        return schema;
    }
    cache(target) {
        const schema = this.get(target);
        if (!schema.schema) {
            schema.schema = this.create(target, true);
        }
    }
    createDefault(target) {
        const schema = {
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Sequence,
            items: {}
        };
        const parentSchema = this.findParentSchema(target);
        if (parentSchema) {
            Object.assign(schema, parentSchema);
            schema.items = Object.assign({}, schema.items, parentSchema.items);
        }
        return schema;
    }
    create(target, useNames) {
        const schema = this.items.get(target) || this.createDefault(target);
        const asn1Value = [];
        for(const key in schema.items){
            const item = schema.items[key];
            const name = useNames ? key : "";
            let asn1Item;
            if (typeof item.type === "number") {
                const Asn1TypeName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"][item.type];
                const Asn1Type = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[Asn1TypeName];
                if (!Asn1Type) {
                    throw new Error(`Cannot get ASN1 class by name '${Asn1TypeName}'`);
                }
                asn1Item = new Asn1Type({
                    name
                });
            } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isConvertible"])(item.type)) {
                const instance = new item.type();
                asn1Item = instance.toSchema(name);
            } else if (item.optional) {
                const itemSchema = this.get(item.type);
                if (itemSchema.type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Choice) {
                    asn1Item = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Any({
                        name
                    });
                } else {
                    asn1Item = this.create(item.type, false);
                    asn1Item.name = name;
                }
            } else {
                asn1Item = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Any({
                    name
                });
            }
            const optional = !!item.optional || item.defaultValue !== undefined;
            if (item.repeated) {
                asn1Item.name = "";
                const Container = item.repeated === "set" ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Set : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Sequence;
                asn1Item = new Container({
                    name: "",
                    value: [
                        new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Repeated({
                            name,
                            value: asn1Item
                        })
                    ]
                });
            }
            if (item.context !== null && item.context !== undefined) {
                if (item.implicit) {
                    if (typeof item.type === "number" || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isConvertible"])(item.type)) {
                        const Container = item.repeated ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Constructed : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Primitive;
                        asn1Value.push(new Container({
                            name,
                            optional,
                            idBlock: {
                                tagClass: 3,
                                tagNumber: item.context
                            }
                        }));
                    } else {
                        this.cache(item.type);
                        const isRepeated = !!item.repeated;
                        let value = !isRepeated ? this.get(item.type, true).schema : asn1Item;
                        value = "valueBlock" in value ? value.valueBlock.value : value.value;
                        asn1Value.push(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Constructed({
                            name: !isRepeated ? name : "",
                            optional,
                            idBlock: {
                                tagClass: 3,
                                tagNumber: item.context
                            },
                            value: value
                        }));
                    }
                } else {
                    asn1Value.push(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Constructed({
                        optional,
                        idBlock: {
                            tagClass: 3,
                            tagNumber: item.context
                        },
                        value: [
                            asn1Item
                        ]
                    }));
                }
            } else {
                asn1Item.optional = optional;
                asn1Value.push(asn1Item);
            }
        }
        switch(schema.type){
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Sequence:
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Sequence({
                    value: asn1Value,
                    name: ""
                });
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Set:
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Set({
                    value: asn1Value,
                    name: ""
                });
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Choice:
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Choice({
                    value: asn1Value,
                    name: ""
                });
            default:
                throw new Error(`Unsupported ASN1 type in use`);
        }
    }
    set(target, schema) {
        this.items.set(target, schema);
        return this;
    }
    findParentSchema(target) {
        const parent = Object.getPrototypeOf(target);
        if (parent) {
            const schema = this.items.get(parent);
            return schema || this.findParentSchema(parent);
        }
        return null;
    }
}
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/storage.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "schemaStorage": (()=>schemaStorage)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$schema$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/schema.js [app-route] (ecmascript)");
;
const schemaStorage = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$schema$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSchemaStorage"]();
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/decorators.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AsnChoiceType": (()=>AsnChoiceType),
    "AsnProp": (()=>AsnProp),
    "AsnSequenceType": (()=>AsnSequenceType),
    "AsnSetType": (()=>AsnSetType),
    "AsnType": (()=>AsnType)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$converters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/converters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/enums.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/storage.js [app-route] (ecmascript)");
;
;
;
const AsnType = (options)=>(target)=>{
        let schema;
        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["schemaStorage"].has(target)) {
            schema = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["schemaStorage"].createDefault(target);
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["schemaStorage"].set(target, schema);
        } else {
            schema = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["schemaStorage"].get(target);
        }
        Object.assign(schema, options);
    };
const AsnChoiceType = ()=>AsnType({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Choice
    });
const AsnSetType = (options)=>AsnType({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Set,
        ...options
    });
const AsnSequenceType = (options)=>AsnType({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Sequence,
        ...options
    });
const AsnProp = (options)=>(target, propertyKey)=>{
        let schema;
        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["schemaStorage"].has(target.constructor)) {
            schema = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["schemaStorage"].createDefault(target.constructor);
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["schemaStorage"].set(target.constructor, schema);
        } else {
            schema = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["schemaStorage"].get(target.constructor);
        }
        const copyOptions = Object.assign({}, options);
        if (typeof copyOptions.type === "number" && !copyOptions.converter) {
            const defaultConverter = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$converters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.defaultConverter(options.type);
            if (!defaultConverter) {
                throw new Error(`Cannot get default converter for property '${propertyKey}' of ${target.constructor.name}`);
            }
            copyOptions.converter = defaultConverter;
        }
        schema.items[propertyKey] = copyOptions;
    };
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/errors/schema_validation.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AsnSchemaValidationError": (()=>AsnSchemaValidationError)
});
class AsnSchemaValidationError extends Error {
    constructor(){
        super(...arguments);
        this.schemas = [];
    }
}
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/errors/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/errors/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$errors$2f$schema_validation$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/errors/schema_validation.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$errors$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/errors/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/parser.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AsnParser": (()=>AsnParser)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/asn1js@3.0.5/node_modules/asn1js/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/enums.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$converters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/converters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$errors$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/errors/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/helper.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/storage.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$errors$2f$schema_validation$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/errors/schema_validation.js [app-route] (ecmascript)");
;
;
;
;
;
;
class AsnParser {
    static parse(data, target) {
        const asn1Parsed = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.fromBER(data);
        if (asn1Parsed.result.error) {
            throw new Error(asn1Parsed.result.error);
        }
        const res = this.fromASN(asn1Parsed.result, target);
        return res;
    }
    static fromASN(asn1Schema, target) {
        var _a;
        try {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isConvertible"])(target)) {
                const value = new target();
                return value.fromASN(asn1Schema);
            }
            const schema = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["schemaStorage"].get(target);
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["schemaStorage"].cache(target);
            let targetSchema = schema.schema;
            if (asn1Schema.constructor === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Constructed && schema.type !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Choice) {
                targetSchema = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Constructed({
                    idBlock: {
                        tagClass: 3,
                        tagNumber: asn1Schema.idBlock.tagNumber
                    },
                    value: schema.schema.valueBlock.value
                });
                for(const key in schema.items){
                    delete asn1Schema[key];
                }
            }
            const asn1ComparedSchema = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.compareSchema({}, asn1Schema, targetSchema);
            if (!asn1ComparedSchema.verified) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$errors$2f$schema_validation$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSchemaValidationError"](`Data does not match to ${target.name} ASN1 schema. ${asn1ComparedSchema.result.error}`);
            }
            const res = new target();
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isTypeOfArray"])(target)) {
                if (!("value" in asn1Schema.valueBlock && Array.isArray(asn1Schema.valueBlock.value))) {
                    throw new Error(`Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.`);
                }
                const itemType = schema.itemType;
                if (typeof itemType === "number") {
                    const converter = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$converters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.defaultConverter(itemType);
                    if (!converter) {
                        throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);
                    }
                    return target.from(asn1Schema.valueBlock.value, (element)=>converter.fromASN(element));
                } else {
                    return target.from(asn1Schema.valueBlock.value, (element)=>this.fromASN(element, itemType));
                }
            }
            for(const key in schema.items){
                const asn1SchemaValue = asn1ComparedSchema.result[key];
                if (!asn1SchemaValue) {
                    continue;
                }
                const schemaItem = schema.items[key];
                const schemaItemType = schemaItem.type;
                if (typeof schemaItemType === "number" || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isConvertible"])(schemaItemType)) {
                    const converter = (_a = schemaItem.converter) !== null && _a !== void 0 ? _a : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isConvertible"])(schemaItemType) ? new schemaItemType() : null;
                    if (!converter) {
                        throw new Error("Converter is empty");
                    }
                    if (schemaItem.repeated) {
                        if (schemaItem.implicit) {
                            const Container = schemaItem.repeated === "sequence" ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Sequence : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Set;
                            const newItem = new Container();
                            newItem.valueBlock = asn1SchemaValue.valueBlock;
                            const newItemAsn = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.fromBER(newItem.toBER(false));
                            if (newItemAsn.offset === -1) {
                                throw new Error(`Cannot parse the child item. ${newItemAsn.result.error}`);
                            }
                            if (!("value" in newItemAsn.result.valueBlock && Array.isArray(newItemAsn.result.valueBlock.value))) {
                                throw new Error("Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.");
                            }
                            const value = newItemAsn.result.valueBlock.value;
                            res[key] = Array.from(value, (element)=>converter.fromASN(element));
                        } else {
                            res[key] = Array.from(asn1SchemaValue, (element)=>converter.fromASN(element));
                        }
                    } else {
                        let value = asn1SchemaValue;
                        if (schemaItem.implicit) {
                            let newItem;
                            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isConvertible"])(schemaItemType)) {
                                newItem = new schemaItemType().toSchema("");
                            } else {
                                const Asn1TypeName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"][schemaItemType];
                                const Asn1Type = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__[Asn1TypeName];
                                if (!Asn1Type) {
                                    throw new Error(`Cannot get '${Asn1TypeName}' class from asn1js module`);
                                }
                                newItem = new Asn1Type();
                            }
                            newItem.valueBlock = value.valueBlock;
                            value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.fromBER(newItem.toBER(false)).result;
                        }
                        res[key] = converter.fromASN(value);
                    }
                } else {
                    if (schemaItem.repeated) {
                        if (!Array.isArray(asn1SchemaValue)) {
                            throw new Error("Cannot get list of items from the ASN.1 parsed value. ASN.1 value should be iterable.");
                        }
                        res[key] = Array.from(asn1SchemaValue, (element)=>this.fromASN(element, schemaItemType));
                    } else {
                        res[key] = this.fromASN(asn1SchemaValue, schemaItemType);
                    }
                }
            }
            return res;
        } catch (error) {
            if (error instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$errors$2f$schema_validation$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSchemaValidationError"]) {
                error.schemas.push(target.name);
            }
            throw error;
        }
    }
}
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/serializer.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AsnSerializer": (()=>AsnSerializer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/asn1js@3.0.5/node_modules/asn1js/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$converters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/converters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/enums.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/helper.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/storage.js [app-route] (ecmascript)");
;
;
;
;
;
class AsnSerializer {
    static serialize(obj) {
        if (obj instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BaseBlock) {
            return obj.toBER(false);
        }
        return this.toASN(obj).toBER(false);
    }
    static toASN(obj) {
        if (obj && typeof obj === "object" && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isConvertible"])(obj)) {
            return obj.toASN();
        }
        if (!(obj && typeof obj === "object")) {
            throw new TypeError("Parameter 1 should be type of Object.");
        }
        const target = obj.constructor;
        const schema = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["schemaStorage"].get(target);
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$storage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["schemaStorage"].cache(target);
        let asn1Value = [];
        if (schema.itemType) {
            if (!Array.isArray(obj)) {
                throw new TypeError("Parameter 1 should be type of Array.");
            }
            if (typeof schema.itemType === "number") {
                const converter = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$converters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.defaultConverter(schema.itemType);
                if (!converter) {
                    throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);
                }
                asn1Value = obj.map((o)=>converter.toASN(o));
            } else {
                asn1Value = obj.map((o)=>this.toAsnItem({
                        type: schema.itemType
                    }, "[]", target, o));
            }
        } else {
            for(const key in schema.items){
                const schemaItem = schema.items[key];
                const objProp = obj[key];
                if (objProp === undefined || schemaItem.defaultValue === objProp || typeof schemaItem.defaultValue === "object" && typeof objProp === "object" && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isArrayEqual"])(this.serialize(schemaItem.defaultValue), this.serialize(objProp))) {
                    continue;
                }
                const asn1Item = AsnSerializer.toAsnItem(schemaItem, key, target, objProp);
                if (typeof schemaItem.context === "number") {
                    if (schemaItem.implicit) {
                        if (!schemaItem.repeated && (typeof schemaItem.type === "number" || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$helper$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isConvertible"])(schemaItem.type))) {
                            const value = {};
                            value.valueHex = asn1Item instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Null ? asn1Item.valueBeforeDecodeView : asn1Item.valueBlock.toBER();
                            asn1Value.push(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Primitive({
                                optional: schemaItem.optional,
                                idBlock: {
                                    tagClass: 3,
                                    tagNumber: schemaItem.context
                                },
                                ...value
                            }));
                        } else {
                            asn1Value.push(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Constructed({
                                optional: schemaItem.optional,
                                idBlock: {
                                    tagClass: 3,
                                    tagNumber: schemaItem.context
                                },
                                value: asn1Item.valueBlock.value
                            }));
                        }
                    } else {
                        asn1Value.push(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Constructed({
                            optional: schemaItem.optional,
                            idBlock: {
                                tagClass: 3,
                                tagNumber: schemaItem.context
                            },
                            value: [
                                asn1Item
                            ]
                        }));
                    }
                } else if (schemaItem.repeated) {
                    asn1Value = asn1Value.concat(asn1Item);
                } else {
                    asn1Value.push(asn1Item);
                }
            }
        }
        let asnSchema;
        switch(schema.type){
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Sequence:
                asnSchema = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Sequence({
                    value: asn1Value
                });
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Set:
                asnSchema = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Set({
                    value: asn1Value
                });
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Choice:
                if (!asn1Value[0]) {
                    throw new Error(`Schema '${target.name}' has wrong data. Choice cannot be empty.`);
                }
                asnSchema = asn1Value[0];
                break;
        }
        return asnSchema;
    }
    static toAsnItem(schemaItem, key, target, objProp) {
        let asn1Item;
        if (typeof schemaItem.type === "number") {
            const converter = schemaItem.converter;
            if (!converter) {
                throw new Error(`Property '${key}' doesn't have converter for type ${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"][schemaItem.type]} in schema '${target.name}'`);
            }
            if (schemaItem.repeated) {
                if (!Array.isArray(objProp)) {
                    throw new TypeError("Parameter 'objProp' should be type of Array.");
                }
                const items = Array.from(objProp, (element)=>converter.toASN(element));
                const Container = schemaItem.repeated === "sequence" ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Sequence : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Set;
                asn1Item = new Container({
                    value: items
                });
            } else {
                asn1Item = converter.toASN(objProp);
            }
        } else {
            if (schemaItem.repeated) {
                if (!Array.isArray(objProp)) {
                    throw new TypeError("Parameter 'objProp' should be type of Array.");
                }
                const items = Array.from(objProp, (element)=>this.toASN(element));
                const Container = schemaItem.repeated === "sequence" ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Sequence : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Set;
                asn1Item = new Container({
                    value: items
                });
            } else {
                asn1Item = this.toASN(objProp);
            }
        }
        return asn1Item;
    }
}
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/objects.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AsnArray": (()=>AsnArray)
});
class AsnArray extends Array {
    constructor(items = []){
        if (typeof items === "number") {
            super(items);
        } else {
            super();
            for (const item of items){
                this.push(item);
            }
        }
    }
}
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/convert.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AsnConvert": (()=>AsnConvert)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/asn1js@3.0.5/node_modules/asn1js/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/pvtsutils@1.3.6/node_modules/pvtsutils/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/parser.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/serializer.js [app-route] (ecmascript)");
;
;
;
;
class AsnConvert {
    static serialize(obj) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(obj);
    }
    static parse(data, target) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(data, target);
    }
    static toString(data) {
        const buf = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].isBufferSource(data) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(data) : AsnConvert.serialize(data);
        const asn = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.fromBER(buf);
        if (asn.offset === -1) {
            throw new Error(`Cannot decode ASN.1 data. ${asn.result.error}`);
        }
        return asn.result.toString();
    }
}
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
;
;
;
;
;
;
}}),
"[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$converters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/converters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$types$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/types/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/decorators.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/enums.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/parser.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/serializer.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$errors$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/errors/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$objects$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/objects.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$convert$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/convert.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@peculiar+json-schema@1.1.12/node_modules/@peculiar/json-schema/build/index.es.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * Copyright (c) 2020, Peculiar Ventures, All rights reserved.
 */ __turbopack_esm__({
    "JsonError": (()=>JsonError),
    "JsonParser": (()=>JsonParser),
    "JsonProp": (()=>JsonProp),
    "JsonPropTypes": (()=>JsonPropTypes),
    "JsonSerializer": (()=>JsonSerializer),
    "KeyError": (()=>KeyError),
    "ParserError": (()=>ParserError),
    "SerializerError": (()=>SerializerError),
    "TransformError": (()=>TransformError),
    "ValidationError": (()=>ValidationError)
});
class JsonError extends Error {
    constructor(message, innerError){
        super(innerError ? `${message}. See the inner exception for more details.` : message);
        this.message = message;
        this.innerError = innerError;
    }
}
class TransformError extends JsonError {
    constructor(schema, message, innerError){
        super(message, innerError);
        this.schema = schema;
    }
}
class ParserError extends TransformError {
    constructor(schema, message, innerError){
        super(schema, `JSON doesn't match to '${schema.target.name}' schema. ${message}`, innerError);
    }
}
class ValidationError extends JsonError {
}
class SerializerError extends JsonError {
    constructor(schemaName, message, innerError){
        super(`Cannot serialize by '${schemaName}' schema. ${message}`, innerError);
        this.schemaName = schemaName;
    }
}
class KeyError extends ParserError {
    constructor(schema, keys, errors = {}){
        super(schema, "Some keys doesn't match to schema");
        this.keys = keys;
        this.errors = errors;
    }
}
var JsonPropTypes;
(function(JsonPropTypes) {
    JsonPropTypes[JsonPropTypes["Any"] = 0] = "Any";
    JsonPropTypes[JsonPropTypes["Boolean"] = 1] = "Boolean";
    JsonPropTypes[JsonPropTypes["Number"] = 2] = "Number";
    JsonPropTypes[JsonPropTypes["String"] = 3] = "String";
})(JsonPropTypes || (JsonPropTypes = {}));
function checkType(value, type) {
    switch(type){
        case JsonPropTypes.Boolean:
            return typeof value === "boolean";
        case JsonPropTypes.Number:
            return typeof value === "number";
        case JsonPropTypes.String:
            return typeof value === "string";
    }
    return true;
}
function throwIfTypeIsWrong(value, type) {
    if (!checkType(value, type)) {
        throw new TypeError(`Value must be ${JsonPropTypes[type]}`);
    }
}
function isConvertible(target) {
    if (target && target.prototype) {
        if (target.prototype.toJSON && target.prototype.fromJSON) {
            return true;
        } else {
            return isConvertible(target.prototype);
        }
    } else {
        return !!(target && target.toJSON && target.fromJSON);
    }
}
class JsonSchemaStorage {
    constructor(){
        this.items = new Map();
    }
    has(target) {
        return this.items.has(target) || !!this.findParentSchema(target);
    }
    get(target) {
        const schema = this.items.get(target) || this.findParentSchema(target);
        if (!schema) {
            throw new Error("Cannot get schema for current target");
        }
        return schema;
    }
    create(target) {
        const schema = {
            names: {}
        };
        const parentSchema = this.findParentSchema(target);
        if (parentSchema) {
            Object.assign(schema, parentSchema);
            schema.names = {};
            for(const name in parentSchema.names){
                schema.names[name] = Object.assign({}, parentSchema.names[name]);
            }
        }
        schema.target = target;
        return schema;
    }
    set(target, schema) {
        this.items.set(target, schema);
        return this;
    }
    findParentSchema(target) {
        const parent = target.__proto__;
        if (parent) {
            const schema = this.items.get(parent);
            return schema || this.findParentSchema(parent);
        }
        return null;
    }
}
const DEFAULT_SCHEMA = "default";
const schemaStorage = new JsonSchemaStorage();
class PatternValidation {
    constructor(pattern){
        this.pattern = new RegExp(pattern);
    }
    validate(value) {
        const pattern = new RegExp(this.pattern.source, this.pattern.flags);
        if (typeof value !== "string") {
            throw new ValidationError("Incoming value must be string");
        }
        if (!pattern.exec(value)) {
            throw new ValidationError(`Value doesn't match to pattern '${pattern.toString()}'`);
        }
    }
}
class InclusiveValidation {
    constructor(min = Number.MIN_VALUE, max = Number.MAX_VALUE){
        this.min = min;
        this.max = max;
    }
    validate(value) {
        throwIfTypeIsWrong(value, JsonPropTypes.Number);
        if (!(this.min <= value && value <= this.max)) {
            const min = this.min === Number.MIN_VALUE ? "MIN" : this.min;
            const max = this.max === Number.MAX_VALUE ? "MAX" : this.max;
            throw new ValidationError(`Value doesn't match to diapason [${min},${max}]`);
        }
    }
}
class ExclusiveValidation {
    constructor(min = Number.MIN_VALUE, max = Number.MAX_VALUE){
        this.min = min;
        this.max = max;
    }
    validate(value) {
        throwIfTypeIsWrong(value, JsonPropTypes.Number);
        if (!(this.min < value && value < this.max)) {
            const min = this.min === Number.MIN_VALUE ? "MIN" : this.min;
            const max = this.max === Number.MAX_VALUE ? "MAX" : this.max;
            throw new ValidationError(`Value doesn't match to diapason (${min},${max})`);
        }
    }
}
class LengthValidation {
    constructor(length, minLength, maxLength){
        this.length = length;
        this.minLength = minLength;
        this.maxLength = maxLength;
    }
    validate(value) {
        if (this.length !== undefined) {
            if (value.length !== this.length) {
                throw new ValidationError(`Value length must be exactly ${this.length}.`);
            }
            return;
        }
        if (this.minLength !== undefined) {
            if (value.length < this.minLength) {
                throw new ValidationError(`Value length must be more than ${this.minLength}.`);
            }
        }
        if (this.maxLength !== undefined) {
            if (value.length > this.maxLength) {
                throw new ValidationError(`Value length must be less than ${this.maxLength}.`);
            }
        }
    }
}
class EnumerationValidation {
    constructor(enumeration){
        this.enumeration = enumeration;
    }
    validate(value) {
        throwIfTypeIsWrong(value, JsonPropTypes.String);
        if (!this.enumeration.includes(value)) {
            throw new ValidationError(`Value must be one of ${this.enumeration.map((v)=>`'${v}'`).join(", ")}`);
        }
    }
}
class JsonTransform {
    static checkValues(data, schemaItem) {
        const values = Array.isArray(data) ? data : [
            data
        ];
        for (const value of values){
            for (const validation of schemaItem.validations){
                if (validation instanceof LengthValidation && schemaItem.repeated) {
                    validation.validate(data);
                } else {
                    validation.validate(value);
                }
            }
        }
    }
    static checkTypes(value, schemaItem) {
        if (schemaItem.repeated && !Array.isArray(value)) {
            throw new TypeError("Value must be Array");
        }
        if (typeof schemaItem.type === "number") {
            const values = Array.isArray(value) ? value : [
                value
            ];
            for (const v of values){
                throwIfTypeIsWrong(v, schemaItem.type);
            }
        }
    }
    static getSchemaByName(schema, name = DEFAULT_SCHEMA) {
        return {
            ...schema.names[DEFAULT_SCHEMA],
            ...schema.names[name]
        };
    }
}
class JsonSerializer extends JsonTransform {
    static serialize(obj, options, replacer, space) {
        const json = this.toJSON(obj, options);
        return JSON.stringify(json, replacer, space);
    }
    static toJSON(obj, options = {}) {
        let res;
        let targetSchema = options.targetSchema;
        const schemaName = options.schemaName || DEFAULT_SCHEMA;
        if (isConvertible(obj)) {
            return obj.toJSON();
        }
        if (Array.isArray(obj)) {
            res = [];
            for (const item of obj){
                res.push(this.toJSON(item, options));
            }
        } else if (typeof obj === "object") {
            if (targetSchema && !schemaStorage.has(targetSchema)) {
                throw new JsonError("Cannot get schema for `targetSchema` param");
            }
            targetSchema = targetSchema || obj.constructor;
            if (schemaStorage.has(targetSchema)) {
                const schema = schemaStorage.get(targetSchema);
                res = {};
                const namedSchema = this.getSchemaByName(schema, schemaName);
                for(const key in namedSchema){
                    try {
                        const item = namedSchema[key];
                        const objItem = obj[key];
                        let value;
                        if (item.optional && objItem === undefined || item.defaultValue !== undefined && objItem === item.defaultValue) {
                            continue;
                        }
                        if (!item.optional && objItem === undefined) {
                            throw new SerializerError(targetSchema.name, `Property '${key}' is required.`);
                        }
                        if (typeof item.type === "number") {
                            if (item.converter) {
                                if (item.repeated) {
                                    value = objItem.map((el)=>item.converter.toJSON(el, obj));
                                } else {
                                    value = item.converter.toJSON(objItem, obj);
                                }
                            } else {
                                value = objItem;
                            }
                        } else {
                            if (item.repeated) {
                                value = objItem.map((el)=>this.toJSON(el, {
                                        schemaName
                                    }));
                            } else {
                                value = this.toJSON(objItem, {
                                    schemaName
                                });
                            }
                        }
                        this.checkTypes(value, item);
                        this.checkValues(value, item);
                        res[item.name || key] = value;
                    } catch (e) {
                        if (e instanceof SerializerError) {
                            throw e;
                        } else {
                            throw new SerializerError(schema.target.name, `Property '${key}' is wrong. ${e.message}`, e);
                        }
                    }
                }
            } else {
                res = {};
                for(const key in obj){
                    res[key] = this.toJSON(obj[key], {
                        schemaName
                    });
                }
            }
        } else {
            res = obj;
        }
        return res;
    }
}
class JsonParser extends JsonTransform {
    static parse(data, options) {
        const obj = JSON.parse(data);
        return this.fromJSON(obj, options);
    }
    static fromJSON(target, options) {
        const targetSchema = options.targetSchema;
        const schemaName = options.schemaName || DEFAULT_SCHEMA;
        const obj = new targetSchema();
        if (isConvertible(obj)) {
            return obj.fromJSON(target);
        }
        const schema = schemaStorage.get(targetSchema);
        const namedSchema = this.getSchemaByName(schema, schemaName);
        const keyErrors = {};
        if (options.strictProperty && !Array.isArray(target)) {
            JsonParser.checkStrictProperty(target, namedSchema, schema);
        }
        for(const key in namedSchema){
            try {
                const item = namedSchema[key];
                const name = item.name || key;
                const value = target[name];
                if (value === undefined && (item.optional || item.defaultValue !== undefined)) {
                    continue;
                }
                if (!item.optional && value === undefined) {
                    throw new ParserError(schema, `Property '${name}' is required.`);
                }
                this.checkTypes(value, item);
                this.checkValues(value, item);
                if (typeof item.type === "number") {
                    if (item.converter) {
                        if (item.repeated) {
                            obj[key] = value.map((el)=>item.converter.fromJSON(el, obj));
                        } else {
                            obj[key] = item.converter.fromJSON(value, obj);
                        }
                    } else {
                        obj[key] = value;
                    }
                } else {
                    const newOptions = {
                        ...options,
                        targetSchema: item.type,
                        schemaName
                    };
                    if (item.repeated) {
                        obj[key] = value.map((el)=>this.fromJSON(el, newOptions));
                    } else {
                        obj[key] = this.fromJSON(value, newOptions);
                    }
                }
            } catch (e) {
                if (!(e instanceof ParserError)) {
                    e = new ParserError(schema, `Property '${key}' is wrong. ${e.message}`, e);
                }
                if (options.strictAllKeys) {
                    keyErrors[key] = e;
                } else {
                    throw e;
                }
            }
        }
        const keys = Object.keys(keyErrors);
        if (keys.length) {
            throw new KeyError(schema, keys, keyErrors);
        }
        return obj;
    }
    static checkStrictProperty(target, namedSchema, schema) {
        const jsonProps = Object.keys(target);
        const schemaProps = Object.keys(namedSchema);
        const keys = [];
        for (const key of jsonProps){
            if (schemaProps.indexOf(key) === -1) {
                keys.push(key);
            }
        }
        if (keys.length) {
            throw new KeyError(schema, keys);
        }
    }
}
function getValidations(item) {
    const validations = [];
    if (item.pattern) {
        validations.push(new PatternValidation(item.pattern));
    }
    if (item.type === JsonPropTypes.Number || item.type === JsonPropTypes.Any) {
        if (item.minInclusive !== undefined || item.maxInclusive !== undefined) {
            validations.push(new InclusiveValidation(item.minInclusive, item.maxInclusive));
        }
        if (item.minExclusive !== undefined || item.maxExclusive !== undefined) {
            validations.push(new ExclusiveValidation(item.minExclusive, item.maxExclusive));
        }
        if (item.enumeration !== undefined) {
            validations.push(new EnumerationValidation(item.enumeration));
        }
    }
    if (item.type === JsonPropTypes.String || item.repeated || item.type === JsonPropTypes.Any) {
        if (item.length !== undefined || item.minLength !== undefined || item.maxLength !== undefined) {
            validations.push(new LengthValidation(item.length, item.minLength, item.maxLength));
        }
    }
    return validations;
}
const JsonProp = (options = {})=>(target, propertyKey)=>{
        const errorMessage = `Cannot set type for ${propertyKey} property of ${target.constructor.name} schema`;
        let schema;
        if (!schemaStorage.has(target.constructor)) {
            schema = schemaStorage.create(target.constructor);
            schemaStorage.set(target.constructor, schema);
        } else {
            schema = schemaStorage.get(target.constructor);
            if (schema.target !== target.constructor) {
                schema = schemaStorage.create(target.constructor);
                schemaStorage.set(target.constructor, schema);
            }
        }
        const defaultSchema = {
            type: JsonPropTypes.Any,
            validations: []
        };
        const copyOptions = Object.assign(defaultSchema, options);
        copyOptions.validations = getValidations(copyOptions);
        if (typeof copyOptions.type !== "number") {
            if (!schemaStorage.has(copyOptions.type) && !isConvertible(copyOptions.type)) {
                throw new Error(`${errorMessage}. Assigning type doesn't have schema.`);
            }
        }
        let schemaNames;
        if (Array.isArray(options.schema)) {
            schemaNames = options.schema;
        } else {
            schemaNames = [
                options.schema || DEFAULT_SCHEMA
            ];
        }
        for (const schemaName of schemaNames){
            if (!schema.names[schemaName]) {
                schema.names[schemaName] = {};
            }
            const namedSchema = schema.names[schemaName];
            namedSchema[propertyKey] = copyOptions;
        }
    };
;
}}),
"[project]/node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol, Iterator */ __turbopack_esm__({
    "__addDisposableResource": (()=>__addDisposableResource),
    "__assign": (()=>__assign),
    "__asyncDelegator": (()=>__asyncDelegator),
    "__asyncGenerator": (()=>__asyncGenerator),
    "__asyncValues": (()=>__asyncValues),
    "__await": (()=>__await),
    "__awaiter": (()=>__awaiter),
    "__classPrivateFieldGet": (()=>__classPrivateFieldGet),
    "__classPrivateFieldIn": (()=>__classPrivateFieldIn),
    "__classPrivateFieldSet": (()=>__classPrivateFieldSet),
    "__createBinding": (()=>__createBinding),
    "__decorate": (()=>__decorate),
    "__disposeResources": (()=>__disposeResources),
    "__esDecorate": (()=>__esDecorate),
    "__exportStar": (()=>__exportStar),
    "__extends": (()=>__extends),
    "__generator": (()=>__generator),
    "__importDefault": (()=>__importDefault),
    "__importStar": (()=>__importStar),
    "__makeTemplateObject": (()=>__makeTemplateObject),
    "__metadata": (()=>__metadata),
    "__param": (()=>__param),
    "__propKey": (()=>__propKey),
    "__read": (()=>__read),
    "__rest": (()=>__rest),
    "__rewriteRelativeImportExtension": (()=>__rewriteRelativeImportExtension),
    "__runInitializers": (()=>__runInitializers),
    "__setFunctionName": (()=>__setFunctionName),
    "__spread": (()=>__spread),
    "__spreadArray": (()=>__spreadArray),
    "__spreadArrays": (()=>__spreadArrays),
    "__values": (()=>__values),
    "default": (()=>__TURBOPACK__default__export__)
});
var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) {
        if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected");
        return f;
    }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for(var i = decorators.length - 1; i >= 0; i--){
        var context = {};
        for(var p in contextIn)context[p] = p === "access" ? {} : contextIn[p];
        for(var p in contextIn.access)context.access[p] = contextIn.access[p];
        context.addInitializer = function(f) {
            if (done) throw new TypeError("Cannot add initializers after decoration has completed");
            extraInitializers.push(accept(f || null));
        };
        var result = (0, decorators[i])(kind === "accessor" ? {
            get: descriptor.get,
            set: descriptor.set
        } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        } else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
}
;
function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for(var i = 0; i < initializers.length; i++){
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
}
;
function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
}
;
function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", {
        configurable: true,
        value: prefix ? "".concat(prefix, " ", name) : name
    });
}
;
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var __createBinding = Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
};
function __exportStar(m, o) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spread() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
}
function __spreadArrays() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function awaitReturn(f) {
        return function(v) {
            return Promise.resolve(v).then(f, reject);
        };
    }
    function verb(n, f) {
        if (g[n]) {
            i[n] = function(v) {
                return new Promise(function(a, b) {
                    q.push([
                        n,
                        v,
                        a,
                        b
                    ]) > 1 || resume(n, v);
                });
            };
            if (f) i[n] = f(i[n]);
        }
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}
function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: __await(o[n](v)),
                done: false
            } : f ? f(v) : v;
        } : f;
    }
}
function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) {
        Object.defineProperty(cooked, "raw", {
            value: raw
        });
    } else {
        cooked.raw = raw;
    }
    return cooked;
}
;
var __setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
};
var ownKeys = function(o) {
    ownKeys = Object.getOwnPropertyNames || function(o) {
        var ar = [];
        for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
        return ar;
    };
    return ownKeys(o);
};
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
    }
    __setModuleDefault(result, mod);
    return result;
}
function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}
function __addDisposableResource(env, value, async) {
    if (value !== null && value !== void 0) {
        if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
        var dispose, inner;
        if (async) {
            if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
            dispose = value[Symbol.asyncDispose];
        }
        if (dispose === void 0) {
            if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
            dispose = value[Symbol.dispose];
            if (async) inner = dispose;
        }
        if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
        if (inner) dispose = function() {
            try {
                inner.call(this);
            } catch (e) {
                return Promise.reject(e);
            }
        };
        env.stack.push({
            value: value,
            dispose: dispose,
            async: async
        });
    } else if (async) {
        env.stack.push({
            async: true
        });
    }
    return value;
}
var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};
function __disposeResources(env) {
    function fail(e) {
        env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
        env.hasError = true;
    }
    var r, s = 0;
    function next() {
        while(r = env.stack.pop()){
            try {
                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);
                if (r.dispose) {
                    var result = r.dispose.call(r.value);
                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) {
                        fail(e);
                        return next();
                    });
                } else s |= 1;
            } catch (e) {
                fail(e);
            }
        }
        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();
        if (env.hasError) throw env.error;
    }
    return next();
}
function __rewriteRelativeImportExtension(path, preserveJsx) {
    if (typeof path === "string" && /^\.\.?\//.test(path)) {
        return path.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i, function(m, tsx, d, ext, cm) {
            return tsx ? preserveJsx ? ".jsx" : ".js" : d && (!ext || !cm) ? m : d + ext + "." + cm.toLowerCase() + "js";
        });
    }
    return path;
}
const __TURBOPACK__default__export__ = {
    __extends,
    __assign,
    __rest,
    __decorate,
    __param,
    __esDecorate,
    __runInitializers,
    __propKey,
    __setFunctionName,
    __metadata,
    __awaiter,
    __generator,
    __createBinding,
    __exportStar,
    __values,
    __read,
    __spread,
    __spreadArrays,
    __spreadArray,
    __await,
    __asyncGenerator,
    __asyncDelegator,
    __asyncValues,
    __makeTemplateObject,
    __importStar,
    __importDefault,
    __classPrivateFieldGet,
    __classPrivateFieldSet,
    __classPrivateFieldIn,
    __addDisposableResource,
    __disposeResources,
    __rewriteRelativeImportExtension
};
}}),
"[project]/node_modules/.pnpm/webcrypto-core@1.8.1/node_modules/webcrypto-core/build/webcrypto-core.es.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/*!
 Copyright (c) Peculiar Ventures, LLC
*/ __turbopack_esm__({
    "AesCbcProvider": (()=>AesCbcProvider),
    "AesCmacProvider": (()=>AesCmacProvider),
    "AesCtrProvider": (()=>AesCtrProvider),
    "AesEcbProvider": (()=>AesEcbProvider),
    "AesGcmProvider": (()=>AesGcmProvider),
    "AesKwProvider": (()=>AesKwProvider),
    "AesProvider": (()=>AesProvider),
    "AlgorithmError": (()=>AlgorithmError),
    "Crypto": (()=>Crypto),
    "CryptoError": (()=>CryptoError),
    "CryptoKey": (()=>CryptoKey),
    "DesProvider": (()=>DesProvider),
    "EcCurves": (()=>EcCurves),
    "EcUtils": (()=>EcUtils),
    "EcdhEsProvider": (()=>EcdhEsProvider),
    "EcdhProvider": (()=>EcdhProvider),
    "EcdsaProvider": (()=>EcdsaProvider),
    "Ed25519Provider": (()=>Ed25519Provider),
    "EdDsaProvider": (()=>EdDsaProvider),
    "EllipticProvider": (()=>EllipticProvider),
    "HkdfProvider": (()=>HkdfProvider),
    "HmacProvider": (()=>HmacProvider),
    "JwkUtils": (()=>JwkUtils),
    "OperationError": (()=>OperationError),
    "Pbkdf2Provider": (()=>Pbkdf2Provider),
    "PemConverter": (()=>PemConverter),
    "ProviderCrypto": (()=>ProviderCrypto),
    "ProviderStorage": (()=>ProviderStorage),
    "RequiredPropertyError": (()=>RequiredPropertyError),
    "RsaOaepProvider": (()=>RsaOaepProvider),
    "RsaProvider": (()=>RsaProvider),
    "RsaPssProvider": (()=>RsaPssProvider),
    "RsaSsaProvider": (()=>RsaSsaProvider),
    "Shake128Provider": (()=>Shake128Provider),
    "Shake256Provider": (()=>Shake256Provider),
    "ShakeProvider": (()=>ShakeProvider),
    "SubtleCrypto": (()=>SubtleCrypto),
    "UnsupportedOperationError": (()=>UnsupportedOperationError),
    "X25519Provider": (()=>X25519Provider),
    "asn1": (()=>index$1),
    "isJWK": (()=>isJWK),
    "json": (()=>index)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/pvtsutils@1.3.6/node_modules/pvtsutils/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/decorators.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/enums.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/asn1js@3.0.5/node_modules/asn1js/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$converters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/converters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+json-schema@1.1.12/node_modules/@peculiar/json-schema/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/serializer.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$convert$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/convert.js [app-route] (ecmascript)");
;
;
;
;
;
;
class CryptoError extends Error {
}
class AlgorithmError extends CryptoError {
}
class UnsupportedOperationError extends CryptoError {
    constructor(methodName){
        super(`Unsupported operation: ${methodName ? `${methodName}` : ""}`);
    }
}
class OperationError extends CryptoError {
}
class RequiredPropertyError extends CryptoError {
    constructor(propName){
        super(`${propName}: Missing required property`);
    }
}
class PemConverter {
    static toArrayBuffer(pem) {
        const base64 = pem.replace(/-{5}(BEGIN|END) .*-{5}/g, "").replace("\r", "").replace("\n", "");
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromBase64(base64);
    }
    static toUint8Array(pem) {
        const bytes = this.toArrayBuffer(pem);
        return new Uint8Array(bytes);
    }
    static fromBufferSource(buffer, tag) {
        const base64 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64(buffer);
        let sliced;
        let offset = 0;
        const rows = [];
        while(offset < base64.length){
            sliced = base64.slice(offset, offset + 64);
            if (sliced.length) {
                rows.push(sliced);
            } else {
                break;
            }
            offset += 64;
        }
        const upperCaseTag = tag.toUpperCase();
        return `-----BEGIN ${upperCaseTag}-----\n${rows.join("\n")}\n-----END ${upperCaseTag}-----`;
    }
    static isPEM(data) {
        return /-----BEGIN .+-----[A-Za-z0-9+/+=\s\n]+-----END .+-----/i.test(data);
    }
    static getTagName(pem) {
        if (!this.isPEM(pem)) {
            throw new Error("Bad parameter. Incoming data is not right PEM");
        }
        const res = /-----BEGIN (.+)-----/.exec(pem);
        if (!res) {
            throw new Error("Cannot get tag from PEM");
        }
        return res[1];
    }
    static hasTagName(pem, tagName) {
        const tag = this.getTagName(pem);
        return tagName.toLowerCase() === tag.toLowerCase();
    }
    static isCertificate(pem) {
        return this.hasTagName(pem, "certificate");
    }
    static isCertificateRequest(pem) {
        return this.hasTagName(pem, "certificate request");
    }
    static isCRL(pem) {
        return this.hasTagName(pem, "x509 crl");
    }
    static isPublicKey(pem) {
        return this.hasTagName(pem, "public key");
    }
}
function isJWK(data) {
    return typeof data === "object" && "kty" in data;
}
class ProviderCrypto {
    async digest(...args) {
        this.checkDigest.apply(this, args);
        return this.onDigest.apply(this, args);
    }
    checkDigest(algorithm, _data) {
        this.checkAlgorithmName(algorithm);
    }
    async onDigest(_algorithm, _data) {
        throw new UnsupportedOperationError("digest");
    }
    async generateKey(...args) {
        this.checkGenerateKey.apply(this, args);
        return this.onGenerateKey.apply(this, args);
    }
    checkGenerateKey(algorithm, _extractable, keyUsages, ..._args) {
        this.checkAlgorithmName(algorithm);
        this.checkGenerateKeyParams(algorithm);
        if (!(keyUsages && keyUsages.length)) {
            throw new TypeError(`Usages cannot be empty when creating a key.`);
        }
        let allowedUsages;
        if (Array.isArray(this.usages)) {
            allowedUsages = this.usages;
        } else {
            allowedUsages = this.usages.privateKey.concat(this.usages.publicKey);
        }
        this.checkKeyUsages(keyUsages, allowedUsages);
    }
    checkGenerateKeyParams(_algorithm) {}
    async onGenerateKey(_algorithm, _extractable, _keyUsages, ..._args) {
        throw new UnsupportedOperationError("generateKey");
    }
    async sign(...args) {
        this.checkSign.apply(this, args);
        return this.onSign.apply(this, args);
    }
    checkSign(algorithm, key, _data, ..._args) {
        this.checkAlgorithmName(algorithm);
        this.checkAlgorithmParams(algorithm);
        this.checkCryptoKey(key, "sign");
    }
    async onSign(_algorithm, _key, _data, ..._args) {
        throw new UnsupportedOperationError("sign");
    }
    async verify(...args) {
        this.checkVerify.apply(this, args);
        return this.onVerify.apply(this, args);
    }
    checkVerify(algorithm, key, _signature, _data, ..._args) {
        this.checkAlgorithmName(algorithm);
        this.checkAlgorithmParams(algorithm);
        this.checkCryptoKey(key, "verify");
    }
    async onVerify(_algorithm, _key, _signature, _data, ..._args) {
        throw new UnsupportedOperationError("verify");
    }
    async encrypt(...args) {
        this.checkEncrypt.apply(this, args);
        return this.onEncrypt.apply(this, args);
    }
    checkEncrypt(algorithm, key, _data, options = {}, ..._args) {
        this.checkAlgorithmName(algorithm);
        this.checkAlgorithmParams(algorithm);
        this.checkCryptoKey(key, options.keyUsage ? "encrypt" : void 0);
    }
    async onEncrypt(_algorithm, _key, _data, ..._args) {
        throw new UnsupportedOperationError("encrypt");
    }
    async decrypt(...args) {
        this.checkDecrypt.apply(this, args);
        return this.onDecrypt.apply(this, args);
    }
    checkDecrypt(algorithm, key, _data, options = {}, ..._args) {
        this.checkAlgorithmName(algorithm);
        this.checkAlgorithmParams(algorithm);
        this.checkCryptoKey(key, options.keyUsage ? "decrypt" : void 0);
    }
    async onDecrypt(_algorithm, _key, _data, ..._args) {
        throw new UnsupportedOperationError("decrypt");
    }
    async deriveBits(...args) {
        this.checkDeriveBits.apply(this, args);
        return this.onDeriveBits.apply(this, args);
    }
    checkDeriveBits(algorithm, baseKey, length, options = {}, ..._args) {
        this.checkAlgorithmName(algorithm);
        this.checkAlgorithmParams(algorithm);
        this.checkCryptoKey(baseKey, options.keyUsage ? "deriveBits" : void 0);
        if (length % 8 !== 0) {
            throw new OperationError("length: Is not multiple of 8");
        }
    }
    async onDeriveBits(_algorithm, _baseKey, _length, ..._args) {
        throw new UnsupportedOperationError("deriveBits");
    }
    async exportKey(...args) {
        this.checkExportKey.apply(this, args);
        return this.onExportKey.apply(this, args);
    }
    checkExportKey(format, key, ..._args) {
        this.checkKeyFormat(format);
        this.checkCryptoKey(key);
        if (!key.extractable) {
            throw new CryptoError("key: Is not extractable");
        }
    }
    async onExportKey(_format, _key, ..._args) {
        throw new UnsupportedOperationError("exportKey");
    }
    async importKey(...args) {
        this.checkImportKey.apply(this, args);
        return this.onImportKey.apply(this, args);
    }
    checkImportKey(format, keyData, algorithm, _extractable, keyUsages, ..._args) {
        this.checkKeyFormat(format);
        this.checkKeyData(format, keyData);
        this.checkAlgorithmName(algorithm);
        this.checkImportParams(algorithm);
        if (Array.isArray(this.usages)) {
            this.checkKeyUsages(keyUsages, this.usages);
        }
    }
    async onImportKey(_format, _keyData, _algorithm, _extractable, _keyUsages, ..._args) {
        throw new UnsupportedOperationError("importKey");
    }
    checkAlgorithmName(algorithm) {
        if (algorithm.name.toLowerCase() !== this.name.toLowerCase()) {
            throw new AlgorithmError("Unrecognized name");
        }
    }
    checkAlgorithmParams(_algorithm) {}
    checkDerivedKeyParams(_algorithm) {}
    checkKeyUsages(usages, allowed) {
        for (const usage of usages){
            if (allowed.indexOf(usage) === -1) {
                throw new TypeError("Cannot create a key using the specified key usages");
            }
        }
    }
    checkCryptoKey(key, keyUsage) {
        this.checkAlgorithmName(key.algorithm);
        if (keyUsage && key.usages.indexOf(keyUsage) === -1) {
            throw new CryptoError(`key does not match that of operation`);
        }
    }
    checkRequiredProperty(data, propName) {
        if (!(propName in data)) {
            throw new RequiredPropertyError(propName);
        }
    }
    checkHashAlgorithm(algorithm, hashAlgorithms) {
        for (const item of hashAlgorithms){
            if (item.toLowerCase() === algorithm.name.toLowerCase()) {
                return;
            }
        }
        throw new OperationError(`hash: Must be one of ${hashAlgorithms.join(", ")}`);
    }
    checkImportParams(_algorithm) {}
    checkKeyFormat(format) {
        switch(format){
            case "raw":
            case "pkcs8":
            case "spki":
            case "jwk":
                break;
            default:
                throw new TypeError("format: Is invalid value. Must be 'jwk', 'raw', 'spki', or 'pkcs8'");
        }
    }
    checkKeyData(format, keyData) {
        if (!keyData) {
            throw new TypeError("keyData: Cannot be empty on empty on key importing");
        }
        if (format === "jwk") {
            if (!isJWK(keyData)) {
                throw new TypeError("keyData: Is not JsonWebToken");
            }
        } else if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].isBufferSource(keyData)) {
            throw new TypeError("keyData: Is not ArrayBufferView or ArrayBuffer");
        }
    }
    prepareData(data) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(data);
    }
}
class AesProvider extends ProviderCrypto {
    checkGenerateKeyParams(algorithm) {
        this.checkRequiredProperty(algorithm, "length");
        if (typeof algorithm.length !== "number") {
            throw new TypeError("length: Is not of type Number");
        }
        switch(algorithm.length){
            case 128:
            case 192:
            case 256:
                break;
            default:
                throw new TypeError("length: Must be 128, 192, or 256");
        }
    }
    checkDerivedKeyParams(algorithm) {
        this.checkGenerateKeyParams(algorithm);
    }
}
class AesCbcProvider extends AesProvider {
    constructor(){
        super(...arguments);
        this.name = "AES-CBC";
        this.usages = [
            "encrypt",
            "decrypt",
            "wrapKey",
            "unwrapKey"
        ];
    }
    checkAlgorithmParams(algorithm) {
        this.checkRequiredProperty(algorithm, "iv");
        if (!(algorithm.iv instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.iv))) {
            throw new TypeError("iv: Is not of type '(ArrayBuffer or ArrayBufferView)'");
        }
        if (algorithm.iv.byteLength !== 16) {
            throw new TypeError("iv: Must have length 16 bytes");
        }
    }
}
class AesCmacProvider extends AesProvider {
    constructor(){
        super(...arguments);
        this.name = "AES-CMAC";
        this.usages = [
            "sign",
            "verify"
        ];
    }
    checkAlgorithmParams(algorithm) {
        this.checkRequiredProperty(algorithm, "length");
        if (typeof algorithm.length !== "number") {
            throw new TypeError("length: Is not a Number");
        }
        if (algorithm.length < 1) {
            throw new OperationError("length: Must be more than 0");
        }
    }
}
class AesCtrProvider extends AesProvider {
    constructor(){
        super(...arguments);
        this.name = "AES-CTR";
        this.usages = [
            "encrypt",
            "decrypt",
            "wrapKey",
            "unwrapKey"
        ];
    }
    checkAlgorithmParams(algorithm) {
        this.checkRequiredProperty(algorithm, "counter");
        if (!(algorithm.counter instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.counter))) {
            throw new TypeError("counter: Is not of type '(ArrayBuffer or ArrayBufferView)'");
        }
        if (algorithm.counter.byteLength !== 16) {
            throw new TypeError("iv: Must have length 16 bytes");
        }
        this.checkRequiredProperty(algorithm, "length");
        if (typeof algorithm.length !== "number") {
            throw new TypeError("length: Is not a Number");
        }
        if (algorithm.length < 1) {
            throw new OperationError("length: Must be more than 0");
        }
    }
}
class AesEcbProvider extends AesProvider {
    constructor(){
        super(...arguments);
        this.name = "AES-ECB";
        this.usages = [
            "encrypt",
            "decrypt",
            "wrapKey",
            "unwrapKey"
        ];
    }
}
class AesGcmProvider extends AesProvider {
    constructor(){
        super(...arguments);
        this.name = "AES-GCM";
        this.usages = [
            "encrypt",
            "decrypt",
            "wrapKey",
            "unwrapKey"
        ];
    }
    checkAlgorithmParams(algorithm) {
        var _a;
        this.checkRequiredProperty(algorithm, "iv");
        if (!(algorithm.iv instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.iv))) {
            throw new TypeError("iv: Is not of type '(ArrayBuffer or ArrayBufferView)'");
        }
        if (algorithm.iv.byteLength < 1) {
            throw new OperationError("iv: Must have length more than 0 and less than 2^64 - 1");
        }
        (_a = algorithm.tagLength) !== null && _a !== void 0 ? _a : algorithm.tagLength = 128;
        switch(algorithm.tagLength){
            case 32:
            case 64:
            case 96:
            case 104:
            case 112:
            case 120:
            case 128:
                break;
            default:
                throw new OperationError("tagLength: Must be one of 32, 64, 96, 104, 112, 120 or 128");
        }
    }
}
class AesKwProvider extends AesProvider {
    constructor(){
        super(...arguments);
        this.name = "AES-KW";
        this.usages = [
            "wrapKey",
            "unwrapKey"
        ];
    }
}
class DesProvider extends ProviderCrypto {
    constructor(){
        super(...arguments);
        this.usages = [
            "encrypt",
            "decrypt",
            "wrapKey",
            "unwrapKey"
        ];
    }
    checkAlgorithmParams(algorithm) {
        if (this.ivSize) {
            this.checkRequiredProperty(algorithm, "iv");
            if (!(algorithm.iv instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.iv))) {
                throw new TypeError("iv: Is not of type '(ArrayBuffer or ArrayBufferView)'");
            }
            if (algorithm.iv.byteLength !== this.ivSize) {
                throw new TypeError(`iv: Must have length ${this.ivSize} bytes`);
            }
        }
    }
    checkGenerateKeyParams(algorithm) {
        this.checkRequiredProperty(algorithm, "length");
        if (typeof algorithm.length !== "number") {
            throw new TypeError("length: Is not of type Number");
        }
        if (algorithm.length !== this.keySizeBits) {
            throw new OperationError(`algorithm.length: Must be ${this.keySizeBits}`);
        }
    }
    checkDerivedKeyParams(algorithm) {
        this.checkGenerateKeyParams(algorithm);
    }
}
class RsaProvider extends ProviderCrypto {
    constructor(){
        super(...arguments);
        this.hashAlgorithms = [
            "SHA-1",
            "SHA-256",
            "SHA-384",
            "SHA-512"
        ];
    }
    checkGenerateKeyParams(algorithm) {
        this.checkRequiredProperty(algorithm, "hash");
        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);
        this.checkRequiredProperty(algorithm, "publicExponent");
        if (!(algorithm.publicExponent && algorithm.publicExponent instanceof Uint8Array)) {
            throw new TypeError("publicExponent: Missing or not a Uint8Array");
        }
        const publicExponent = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64(algorithm.publicExponent);
        if (!(publicExponent === "Aw==" || publicExponent === "AQAB")) {
            throw new TypeError("publicExponent: Must be [3] or [1,0,1]");
        }
        this.checkRequiredProperty(algorithm, "modulusLength");
        if (algorithm.modulusLength % 8 || algorithm.modulusLength < 256 || algorithm.modulusLength > 16384) {
            throw new TypeError("The modulus length must be a multiple of 8 bits and >= 256 and <= 16384");
        }
    }
    checkImportParams(algorithm) {
        this.checkRequiredProperty(algorithm, "hash");
        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);
    }
}
class RsaSsaProvider extends RsaProvider {
    constructor(){
        super(...arguments);
        this.name = "RSASSA-PKCS1-v1_5";
        this.usages = {
            privateKey: [
                "sign"
            ],
            publicKey: [
                "verify"
            ]
        };
    }
}
class RsaPssProvider extends RsaProvider {
    constructor(){
        super(...arguments);
        this.name = "RSA-PSS";
        this.usages = {
            privateKey: [
                "sign"
            ],
            publicKey: [
                "verify"
            ]
        };
    }
    checkAlgorithmParams(algorithm) {
        this.checkRequiredProperty(algorithm, "saltLength");
        if (typeof algorithm.saltLength !== "number") {
            throw new TypeError("saltLength: Is not a Number");
        }
        if (algorithm.saltLength < 0) {
            throw new RangeError("saltLength: Must be positive number");
        }
    }
}
class RsaOaepProvider extends RsaProvider {
    constructor(){
        super(...arguments);
        this.name = "RSA-OAEP";
        this.usages = {
            privateKey: [
                "decrypt",
                "unwrapKey"
            ],
            publicKey: [
                "encrypt",
                "wrapKey"
            ]
        };
    }
    checkAlgorithmParams(algorithm) {
        if (algorithm.label && !(algorithm.label instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.label))) {
            throw new TypeError("label: Is not of type '(ArrayBuffer or ArrayBufferView)'");
        }
    }
}
class EllipticProvider extends ProviderCrypto {
    checkGenerateKeyParams(algorithm) {
        this.checkRequiredProperty(algorithm, "namedCurve");
        this.checkNamedCurve(algorithm.namedCurve);
    }
    checkNamedCurve(namedCurve) {
        for (const item of this.namedCurves){
            if (item.toLowerCase() === namedCurve.toLowerCase()) {
                return;
            }
        }
        throw new OperationError(`namedCurve: Must be one of ${this.namedCurves.join(", ")}`);
    }
}
class EcdsaProvider extends EllipticProvider {
    constructor(){
        super(...arguments);
        this.name = "ECDSA";
        this.hashAlgorithms = [
            "SHA-1",
            "SHA-256",
            "SHA-384",
            "SHA-512"
        ];
        this.usages = {
            privateKey: [
                "sign"
            ],
            publicKey: [
                "verify"
            ]
        };
        this.namedCurves = [
            "P-256",
            "P-384",
            "P-521",
            "K-256"
        ];
    }
    checkAlgorithmParams(algorithm) {
        this.checkRequiredProperty(algorithm, "hash");
        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);
    }
}
const KEY_TYPES = [
    "secret",
    "private",
    "public"
];
class CryptoKey {
    static create(algorithm, type, extractable, usages) {
        const key = new this();
        key.algorithm = algorithm;
        key.type = type;
        key.extractable = extractable;
        key.usages = usages;
        return key;
    }
    static isKeyType(data) {
        return KEY_TYPES.indexOf(data) !== -1;
    }
    get [Symbol.toStringTag]() {
        return "CryptoKey";
    }
}
class EcdhProvider extends EllipticProvider {
    constructor(){
        super(...arguments);
        this.name = "ECDH";
        this.usages = {
            privateKey: [
                "deriveBits",
                "deriveKey"
            ],
            publicKey: []
        };
        this.namedCurves = [
            "P-256",
            "P-384",
            "P-521",
            "K-256"
        ];
    }
    checkAlgorithmParams(algorithm) {
        this.checkRequiredProperty(algorithm, "public");
        if (!(algorithm.public instanceof CryptoKey)) {
            throw new TypeError("public: Is not a CryptoKey");
        }
        if (algorithm.public.type !== "public") {
            throw new OperationError("public: Is not a public key");
        }
        if (algorithm.public.algorithm.name !== this.name) {
            throw new OperationError(`public: Is not ${this.name} key`);
        }
    }
}
class EcdhEsProvider extends EcdhProvider {
    constructor(){
        super(...arguments);
        this.name = "ECDH-ES";
        this.namedCurves = [
            "X25519",
            "X448"
        ];
    }
}
class EdDsaProvider extends EllipticProvider {
    constructor(){
        super(...arguments);
        this.name = "EdDSA";
        this.usages = {
            privateKey: [
                "sign"
            ],
            publicKey: [
                "verify"
            ]
        };
        this.namedCurves = [
            "Ed25519",
            "Ed448"
        ];
    }
}
let ObjectIdentifier = class ObjectIdentifier {
    constructor(value){
        if (value) {
            this.value = value;
        }
    }
};
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].ObjectIdentifier
    })
], ObjectIdentifier.prototype, "value", void 0);
ObjectIdentifier = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnType"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Choice
    })
], ObjectIdentifier);
class AlgorithmIdentifier {
    constructor(params){
        Object.assign(this, params);
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].ObjectIdentifier
    })
], AlgorithmIdentifier.prototype, "algorithm", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Any,
        optional: true
    })
], AlgorithmIdentifier.prototype, "parameters", void 0);
class PrivateKeyInfo {
    constructor(){
        this.version = 0;
        this.privateKeyAlgorithm = new AlgorithmIdentifier();
        this.privateKey = new ArrayBuffer(0);
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer
    })
], PrivateKeyInfo.prototype, "version", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: AlgorithmIdentifier
    })
], PrivateKeyInfo.prototype, "privateKeyAlgorithm", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].OctetString
    })
], PrivateKeyInfo.prototype, "privateKey", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Any,
        optional: true
    })
], PrivateKeyInfo.prototype, "attributes", void 0);
class PublicKeyInfo {
    constructor(){
        this.publicKeyAlgorithm = new AlgorithmIdentifier();
        this.publicKey = new ArrayBuffer(0);
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: AlgorithmIdentifier
    })
], PublicKeyInfo.prototype, "publicKeyAlgorithm", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].BitString
    })
], PublicKeyInfo.prototype, "publicKey", void 0);
const JsonBase64UrlArrayBufferConverter = {
    fromJSON: (value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromBase64Url(value),
    toJSON: (value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64Url(new Uint8Array(value))
};
const AsnIntegerArrayBufferConverter = {
    fromASN: (value)=>{
        const valueHex = value.valueBlock.valueHex;
        return !new Uint8Array(valueHex)[0] ? value.valueBlock.valueHex.slice(1) : value.valueBlock.valueHex;
    },
    toASN: (value)=>{
        const valueHex = new Uint8Array(value)[0] > 127 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["combine"])(new Uint8Array([
            0
        ]).buffer, value) : value;
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Integer({
            valueHex
        });
    }
};
var index$3 = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    AsnIntegerArrayBufferConverter: AsnIntegerArrayBufferConverter,
    JsonBase64UrlArrayBufferConverter: JsonBase64UrlArrayBufferConverter
});
class RsaPrivateKey {
    constructor(){
        this.version = 0;
        this.modulus = new ArrayBuffer(0);
        this.publicExponent = new ArrayBuffer(0);
        this.privateExponent = new ArrayBuffer(0);
        this.prime1 = new ArrayBuffer(0);
        this.prime2 = new ArrayBuffer(0);
        this.exponent1 = new ArrayBuffer(0);
        this.exponent2 = new ArrayBuffer(0);
        this.coefficient = new ArrayBuffer(0);
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$converters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnIntegerConverter"]
    })
], RsaPrivateKey.prototype, "version", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: AsnIntegerArrayBufferConverter
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "n",
        converter: JsonBase64UrlArrayBufferConverter
    })
], RsaPrivateKey.prototype, "modulus", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: AsnIntegerArrayBufferConverter
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "e",
        converter: JsonBase64UrlArrayBufferConverter
    })
], RsaPrivateKey.prototype, "publicExponent", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: AsnIntegerArrayBufferConverter
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "d",
        converter: JsonBase64UrlArrayBufferConverter
    })
], RsaPrivateKey.prototype, "privateExponent", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: AsnIntegerArrayBufferConverter
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "p",
        converter: JsonBase64UrlArrayBufferConverter
    })
], RsaPrivateKey.prototype, "prime1", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: AsnIntegerArrayBufferConverter
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "q",
        converter: JsonBase64UrlArrayBufferConverter
    })
], RsaPrivateKey.prototype, "prime2", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: AsnIntegerArrayBufferConverter
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "dp",
        converter: JsonBase64UrlArrayBufferConverter
    })
], RsaPrivateKey.prototype, "exponent1", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: AsnIntegerArrayBufferConverter
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "dq",
        converter: JsonBase64UrlArrayBufferConverter
    })
], RsaPrivateKey.prototype, "exponent2", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: AsnIntegerArrayBufferConverter
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "qi",
        converter: JsonBase64UrlArrayBufferConverter
    })
], RsaPrivateKey.prototype, "coefficient", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Any,
        optional: true
    })
], RsaPrivateKey.prototype, "otherPrimeInfos", void 0);
class RsaPublicKey {
    constructor(){
        this.modulus = new ArrayBuffer(0);
        this.publicExponent = new ArrayBuffer(0);
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: AsnIntegerArrayBufferConverter
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "n",
        converter: JsonBase64UrlArrayBufferConverter
    })
], RsaPublicKey.prototype, "modulus", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: AsnIntegerArrayBufferConverter
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "e",
        converter: JsonBase64UrlArrayBufferConverter
    })
], RsaPublicKey.prototype, "publicExponent", void 0);
let EcPublicKey = class EcPublicKey {
    constructor(value){
        this.value = new ArrayBuffer(0);
        if (value) {
            this.value = value;
        }
    }
    toJSON() {
        let bytes = new Uint8Array(this.value);
        if (bytes[0] !== 0x04) {
            throw new CryptoError("Wrong ECPoint. Current version supports only Uncompressed (0x04) point");
        }
        bytes = new Uint8Array(this.value.slice(1));
        const size = bytes.length / 2;
        const offset = 0;
        const json = {
            x: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64Url(bytes.buffer.slice(offset, offset + size)),
            y: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64Url(bytes.buffer.slice(offset + size, offset + size + size))
        };
        return json;
    }
    fromJSON(json) {
        if (!("x" in json)) {
            throw new Error("x: Missing required property");
        }
        if (!("y" in json)) {
            throw new Error("y: Missing required property");
        }
        const x = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromBase64Url(json.x);
        const y = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromBase64Url(json.y);
        const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["combine"])(new Uint8Array([
            0x04
        ]).buffer, x, y);
        this.value = new Uint8Array(value).buffer;
        return this;
    }
};
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].OctetString
    })
], EcPublicKey.prototype, "value", void 0);
EcPublicKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnType"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Choice
    })
], EcPublicKey);
class EcPrivateKey {
    constructor(){
        this.version = 1;
        this.privateKey = new ArrayBuffer(0);
    }
    fromJSON(json) {
        if (!("d" in json)) {
            throw new Error("d: Missing required property");
        }
        this.privateKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromBase64Url(json.d);
        if ("x" in json) {
            const publicKey = new EcPublicKey();
            publicKey.fromJSON(json);
            const asn = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].toASN(publicKey);
            if ("valueHex" in asn.valueBlock) {
                this.publicKey = asn.valueBlock.valueHex;
            }
        }
        return this;
    }
    toJSON() {
        const jwk = {};
        jwk.d = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64Url(this.privateKey);
        if (this.publicKey) {
            Object.assign(jwk, new EcPublicKey(this.publicKey).toJSON());
        }
        return jwk;
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$converters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnIntegerConverter"]
    })
], EcPrivateKey.prototype, "version", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].OctetString
    })
], EcPrivateKey.prototype, "privateKey", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        context: 0,
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Any,
        optional: true
    })
], EcPrivateKey.prototype, "parameters", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        context: 1,
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].BitString,
        optional: true
    })
], EcPrivateKey.prototype, "publicKey", void 0);
const AsnIntegerWithoutPaddingConverter = {
    fromASN: (value)=>{
        const bytes = new Uint8Array(value.valueBlock.valueHex);
        return bytes[0] === 0 ? bytes.buffer.slice(1) : bytes.buffer;
    },
    toASN: (value)=>{
        const bytes = new Uint8Array(value);
        if (bytes[0] > 127) {
            const newValue = new Uint8Array(bytes.length + 1);
            newValue.set(bytes, 1);
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Integer({
                valueHex: newValue.buffer
            });
        }
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Integer({
            valueHex: value
        });
    }
};
var index$2 = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    AsnIntegerWithoutPaddingConverter: AsnIntegerWithoutPaddingConverter
});
class EcUtils {
    static decodePoint(data, pointSize) {
        const view = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toUint8Array(data);
        if (view.length === 0 || view[0] !== 4) {
            throw new Error("Only uncompressed point format supported");
        }
        const n = (view.length - 1) / 2;
        if (n !== Math.ceil(pointSize / 8)) {
            throw new Error("Point does not match field size");
        }
        const xb = view.slice(1, n + 1);
        const yb = view.slice(n + 1, n + 1 + n);
        return {
            x: xb,
            y: yb
        };
    }
    static encodePoint(point, pointSize) {
        const size = Math.ceil(pointSize / 8);
        if (point.x.byteLength !== size || point.y.byteLength !== size) {
            throw new Error("X,Y coordinates don't match point size criteria");
        }
        const x = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toUint8Array(point.x);
        const y = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toUint8Array(point.y);
        const res = new Uint8Array(size * 2 + 1);
        res[0] = 4;
        res.set(x, 1);
        res.set(y, size + 1);
        return res;
    }
    static getSize(pointSize) {
        return Math.ceil(pointSize / 8);
    }
    static encodeSignature(signature, pointSize) {
        const size = this.getSize(pointSize);
        const r = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toUint8Array(signature.r);
        const s = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toUint8Array(signature.s);
        const res = new Uint8Array(size * 2);
        res.set(this.padStart(r, size));
        res.set(this.padStart(s, size), size);
        return res;
    }
    static decodeSignature(data, pointSize) {
        const size = this.getSize(pointSize);
        const view = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toUint8Array(data);
        if (view.length !== size * 2) {
            throw new Error("Incorrect size of the signature");
        }
        const r = view.slice(0, size);
        const s = view.slice(size);
        return {
            r: this.trimStart(r),
            s: this.trimStart(s)
        };
    }
    static trimStart(data) {
        let i = 0;
        while(i < data.length - 1 && data[i] === 0){
            i++;
        }
        if (i === 0) {
            return data;
        }
        return data.slice(i, data.length);
    }
    static padStart(data, size) {
        if (size === data.length) {
            return data;
        }
        const res = new Uint8Array(size);
        res.set(data, size - data.length);
        return res;
    }
}
class EcDsaSignature {
    constructor(){
        this.r = new ArrayBuffer(0);
        this.s = new ArrayBuffer(0);
    }
    static fromWebCryptoSignature(value) {
        const pointSize = value.byteLength / 2;
        const point = EcUtils.decodeSignature(value, pointSize * 8);
        const ecSignature = new EcDsaSignature();
        ecSignature.r = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(point.r);
        ecSignature.s = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(point.s);
        return ecSignature;
    }
    toWebCryptoSignature(pointSize) {
        if (!pointSize) {
            const maxPointLength = Math.max(this.r.byteLength, this.s.byteLength);
            if (maxPointLength <= 32) {
                pointSize = 256;
            } else if (maxPointLength <= 48) {
                pointSize = 384;
            } else {
                pointSize = 521;
            }
        }
        const signature = EcUtils.encodeSignature(this, pointSize);
        return signature.buffer;
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: AsnIntegerWithoutPaddingConverter
    })
], EcDsaSignature.prototype, "r", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].Integer,
        converter: AsnIntegerWithoutPaddingConverter
    })
], EcDsaSignature.prototype, "s", void 0);
class OneAsymmetricKey extends PrivateKeyInfo {
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        context: 1,
        implicit: true,
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].BitString,
        optional: true
    })
], OneAsymmetricKey.prototype, "publicKey", void 0);
let EdPrivateKey = class EdPrivateKey {
    constructor(){
        this.value = new ArrayBuffer(0);
    }
    fromJSON(json) {
        if (!json.d) {
            throw new Error("d: Missing required property");
        }
        this.value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromBase64Url(json.d);
        return this;
    }
    toJSON() {
        const jwk = {
            d: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64Url(this.value)
        };
        return jwk;
    }
};
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].OctetString
    })
], EdPrivateKey.prototype, "value", void 0);
EdPrivateKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnType"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Choice
    })
], EdPrivateKey);
let EdPublicKey = class EdPublicKey {
    constructor(value){
        this.value = new ArrayBuffer(0);
        if (value) {
            this.value = value;
        }
    }
    toJSON() {
        const json = {
            x: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64Url(this.value)
        };
        return json;
    }
    fromJSON(json) {
        if (!("x" in json)) {
            throw new Error("x: Missing required property");
        }
        this.value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromBase64Url(json.x);
        return this;
    }
};
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].BitString
    })
], EdPublicKey.prototype, "value", void 0);
EdPublicKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnType"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Choice
    })
], EdPublicKey);
let CurvePrivateKey = class CurvePrivateKey {
};
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnPropTypes"].OctetString
    }),
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonPropTypes"].String,
        converter: JsonBase64UrlArrayBufferConverter
    })
], CurvePrivateKey.prototype, "d", void 0);
CurvePrivateKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$decorators$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnType"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$enums$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnTypeTypes"].Choice
    })
], CurvePrivateKey);
const idSecp256r1 = "1.2.840.10045.3.1.7";
const idEllipticCurve = "1.3.132.0";
const idSecp384r1 = `${idEllipticCurve}.34`;
const idSecp521r1 = `${idEllipticCurve}.35`;
const idSecp256k1 = `${idEllipticCurve}.10`;
const idVersionOne = "1.3.36.3.3.2.8.1.1";
const idBrainpoolP160r1 = `${idVersionOne}.1`;
const idBrainpoolP160t1 = `${idVersionOne}.2`;
const idBrainpoolP192r1 = `${idVersionOne}.3`;
const idBrainpoolP192t1 = `${idVersionOne}.4`;
const idBrainpoolP224r1 = `${idVersionOne}.5`;
const idBrainpoolP224t1 = `${idVersionOne}.6`;
const idBrainpoolP256r1 = `${idVersionOne}.7`;
const idBrainpoolP256t1 = `${idVersionOne}.8`;
const idBrainpoolP320r1 = `${idVersionOne}.9`;
const idBrainpoolP320t1 = `${idVersionOne}.10`;
const idBrainpoolP384r1 = `${idVersionOne}.11`;
const idBrainpoolP384t1 = `${idVersionOne}.12`;
const idBrainpoolP512r1 = `${idVersionOne}.13`;
const idBrainpoolP512t1 = `${idVersionOne}.14`;
const idX25519 = "1.3.101.110";
const idX448 = "1.3.101.111";
const idEd25519 = "1.3.101.112";
const idEd448 = "1.3.101.113";
var index$1 = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    AlgorithmIdentifier: AlgorithmIdentifier,
    get CurvePrivateKey () {
        return CurvePrivateKey;
    },
    EcDsaSignature: EcDsaSignature,
    EcPrivateKey: EcPrivateKey,
    get EcPublicKey () {
        return EcPublicKey;
    },
    get EdPrivateKey () {
        return EdPrivateKey;
    },
    get EdPublicKey () {
        return EdPublicKey;
    },
    get ObjectIdentifier () {
        return ObjectIdentifier;
    },
    OneAsymmetricKey: OneAsymmetricKey,
    PrivateKeyInfo: PrivateKeyInfo,
    PublicKeyInfo: PublicKeyInfo,
    RsaPrivateKey: RsaPrivateKey,
    RsaPublicKey: RsaPublicKey,
    converters: index$2,
    idBrainpoolP160r1: idBrainpoolP160r1,
    idBrainpoolP160t1: idBrainpoolP160t1,
    idBrainpoolP192r1: idBrainpoolP192r1,
    idBrainpoolP192t1: idBrainpoolP192t1,
    idBrainpoolP224r1: idBrainpoolP224r1,
    idBrainpoolP224t1: idBrainpoolP224t1,
    idBrainpoolP256r1: idBrainpoolP256r1,
    idBrainpoolP256t1: idBrainpoolP256t1,
    idBrainpoolP320r1: idBrainpoolP320r1,
    idBrainpoolP320t1: idBrainpoolP320t1,
    idBrainpoolP384r1: idBrainpoolP384r1,
    idBrainpoolP384t1: idBrainpoolP384t1,
    idBrainpoolP512r1: idBrainpoolP512r1,
    idBrainpoolP512t1: idBrainpoolP512t1,
    idEd25519: idEd25519,
    idEd448: idEd448,
    idEllipticCurve: idEllipticCurve,
    idSecp256k1: idSecp256k1,
    idSecp256r1: idSecp256r1,
    idSecp384r1: idSecp384r1,
    idSecp521r1: idSecp521r1,
    idVersionOne: idVersionOne,
    idX25519: idX25519,
    idX448: idX448
});
class EcCurves {
    constructor(){}
    static register(item) {
        const oid = new ObjectIdentifier();
        oid.value = item.id;
        const raw = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$convert$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnConvert"].serialize(oid);
        this.items.push({
            ...item,
            raw
        });
        this.names.push(item.name);
    }
    static find(nameOrId) {
        nameOrId = nameOrId.toUpperCase();
        for (const item of this.items){
            if (item.name.toUpperCase() === nameOrId || item.id.toUpperCase() === nameOrId) {
                return item;
            }
        }
        return null;
    }
    static get(nameOrId) {
        const res = this.find(nameOrId);
        if (!res) {
            throw new Error(`Unsupported EC named curve '${nameOrId}'`);
        }
        return res;
    }
}
EcCurves.items = [];
EcCurves.names = [];
EcCurves.register({
    name: "P-256",
    id: idSecp256r1,
    size: 256
});
EcCurves.register({
    name: "P-384",
    id: idSecp384r1,
    size: 384
});
EcCurves.register({
    name: "P-521",
    id: idSecp521r1,
    size: 521
});
EcCurves.register({
    name: "K-256",
    id: idSecp256k1,
    size: 256
});
EcCurves.register({
    name: "brainpoolP160r1",
    id: idBrainpoolP160r1,
    size: 160
});
EcCurves.register({
    name: "brainpoolP160t1",
    id: idBrainpoolP160t1,
    size: 160
});
EcCurves.register({
    name: "brainpoolP192r1",
    id: idBrainpoolP192r1,
    size: 192
});
EcCurves.register({
    name: "brainpoolP192t1",
    id: idBrainpoolP192t1,
    size: 192
});
EcCurves.register({
    name: "brainpoolP224r1",
    id: idBrainpoolP224r1,
    size: 224
});
EcCurves.register({
    name: "brainpoolP224t1",
    id: idBrainpoolP224t1,
    size: 224
});
EcCurves.register({
    name: "brainpoolP256r1",
    id: idBrainpoolP256r1,
    size: 256
});
EcCurves.register({
    name: "brainpoolP256t1",
    id: idBrainpoolP256t1,
    size: 256
});
EcCurves.register({
    name: "brainpoolP320r1",
    id: idBrainpoolP320r1,
    size: 320
});
EcCurves.register({
    name: "brainpoolP320t1",
    id: idBrainpoolP320t1,
    size: 320
});
EcCurves.register({
    name: "brainpoolP384r1",
    id: idBrainpoolP384r1,
    size: 384
});
EcCurves.register({
    name: "brainpoolP384t1",
    id: idBrainpoolP384t1,
    size: 384
});
EcCurves.register({
    name: "brainpoolP512r1",
    id: idBrainpoolP512r1,
    size: 512
});
EcCurves.register({
    name: "brainpoolP512t1",
    id: idBrainpoolP512t1,
    size: 512
});
class X25519Provider extends ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "X25519";
        this.usages = {
            privateKey: [
                "deriveKey",
                "deriveBits"
            ],
            publicKey: []
        };
    }
    checkAlgorithmParams(algorithm) {
        this.checkRequiredProperty(algorithm, "public");
    }
}
class Ed25519Provider extends ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "Ed25519";
        this.usages = {
            privateKey: [
                "sign"
            ],
            publicKey: [
                "verify"
            ]
        };
    }
}
class HmacProvider extends ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "HMAC";
        this.hashAlgorithms = [
            "SHA-1",
            "SHA-256",
            "SHA-384",
            "SHA-512"
        ];
        this.usages = [
            "sign",
            "verify"
        ];
    }
    getDefaultLength(algName) {
        switch(algName.toUpperCase()){
            case "SHA-1":
            case "SHA-256":
            case "SHA-384":
            case "SHA-512":
                return 512;
            default:
                throw new Error(`Unknown algorithm name '${algName}'`);
        }
    }
    checkGenerateKeyParams(algorithm) {
        this.checkRequiredProperty(algorithm, "hash");
        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);
        if ("length" in algorithm) {
            if (typeof algorithm.length !== "number") {
                throw new TypeError("length: Is not a Number");
            }
            if (algorithm.length < 1) {
                throw new RangeError("length: Number is out of range");
            }
        }
    }
    checkImportParams(algorithm) {
        this.checkRequiredProperty(algorithm, "hash");
        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);
    }
}
class Pbkdf2Provider extends ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "PBKDF2";
        this.hashAlgorithms = [
            "SHA-1",
            "SHA-256",
            "SHA-384",
            "SHA-512"
        ];
        this.usages = [
            "deriveBits",
            "deriveKey"
        ];
    }
    checkAlgorithmParams(algorithm) {
        this.checkRequiredProperty(algorithm, "hash");
        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);
        this.checkRequiredProperty(algorithm, "salt");
        if (!(algorithm.salt instanceof ArrayBuffer || ArrayBuffer.isView(algorithm.salt))) {
            throw new TypeError("salt: Is not of type '(ArrayBuffer or ArrayBufferView)'");
        }
        this.checkRequiredProperty(algorithm, "iterations");
        if (typeof algorithm.iterations !== "number") {
            throw new TypeError("iterations: Is not a Number");
        }
        if (algorithm.iterations < 1) {
            throw new TypeError("iterations: Is less than 1");
        }
    }
    checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args) {
        super.checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args);
        if (extractable) {
            throw new SyntaxError("extractable: Must be 'false'");
        }
    }
}
class HkdfProvider extends ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "HKDF";
        this.hashAlgorithms = [
            "SHA-1",
            "SHA-256",
            "SHA-384",
            "SHA-512"
        ];
        this.usages = [
            "deriveKey",
            "deriveBits"
        ];
    }
    checkAlgorithmParams(algorithm) {
        this.checkRequiredProperty(algorithm, "hash");
        this.checkHashAlgorithm(algorithm.hash, this.hashAlgorithms);
        this.checkRequiredProperty(algorithm, "salt");
        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].isBufferSource(algorithm.salt)) {
            throw new TypeError("salt: Is not of type '(ArrayBuffer or ArrayBufferView)'");
        }
        this.checkRequiredProperty(algorithm, "info");
        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].isBufferSource(algorithm.info)) {
            throw new TypeError("salt: Is not of type '(ArrayBuffer or ArrayBufferView)'");
        }
    }
    checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args) {
        super.checkImportKey(format, keyData, algorithm, extractable, keyUsages, ...args);
        if (extractable) {
            throw new SyntaxError("extractable: Must be 'false'");
        }
    }
}
class ShakeProvider extends ProviderCrypto {
    constructor(){
        super(...arguments);
        this.usages = [];
        this.defaultLength = 0;
    }
    digest(...args) {
        args[0] = {
            length: this.defaultLength,
            ...args[0]
        };
        return super.digest.apply(this, args);
    }
    checkDigest(algorithm, data) {
        super.checkDigest(algorithm, data);
        const length = algorithm.length || 0;
        if (typeof length !== "number") {
            throw new TypeError("length: Is not a Number");
        }
        if (length < 0) {
            throw new TypeError("length: Is negative");
        }
    }
}
class Shake128Provider extends ShakeProvider {
    constructor(){
        super(...arguments);
        this.name = "shake128";
        this.defaultLength = 16;
    }
}
class Shake256Provider extends ShakeProvider {
    constructor(){
        super(...arguments);
        this.name = "shake256";
        this.defaultLength = 32;
    }
}
class Crypto {
    get [Symbol.toStringTag]() {
        return "Crypto";
    }
    randomUUID() {
        const b = this.getRandomValues(new Uint8Array(16));
        b[6] = b[6] & 0x0f | 0x40;
        b[8] = b[8] & 0x3f | 0x80;
        const uuid = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToHex(b).toLowerCase();
        return `${uuid.substring(0, 8)}-${uuid.substring(8, 12)}-${uuid.substring(12, 16)}-${uuid.substring(16, 20)}-${uuid.substring(20)}`;
    }
}
class ProviderStorage {
    constructor(){
        this.items = {};
    }
    get(algorithmName) {
        return this.items[algorithmName.toLowerCase()] || null;
    }
    set(provider) {
        this.items[provider.name.toLowerCase()] = provider;
    }
    removeAt(algorithmName) {
        const provider = this.get(algorithmName.toLowerCase());
        if (provider) {
            delete this.items[algorithmName];
        }
        return provider;
    }
    has(name) {
        return !!this.get(name);
    }
    get length() {
        return Object.keys(this.items).length;
    }
    get algorithms() {
        const algorithms = [];
        for(const key in this.items){
            const provider = this.items[key];
            algorithms.push(provider.name);
        }
        return algorithms.sort();
    }
}
const keyFormatMap = {
    "jwk": [
        "private",
        "public",
        "secret"
    ],
    "pkcs8": [
        "private"
    ],
    "spki": [
        "public"
    ],
    "raw": [
        "secret",
        "public"
    ]
};
const sourceBufferKeyFormats = [
    "pkcs8",
    "spki",
    "raw"
];
class SubtleCrypto {
    constructor(){
        this.providers = new ProviderStorage();
    }
    static isHashedAlgorithm(data) {
        return data && typeof data === "object" && "name" in data && "hash" in data ? true : false;
    }
    get [Symbol.toStringTag]() {
        return "SubtleCrypto";
    }
    async digest(...args) {
        this.checkRequiredArguments(args, 2, "digest");
        const [algorithm, data, ...params] = args;
        const preparedAlgorithm = this.prepareAlgorithm(algorithm);
        const preparedData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(data);
        const provider = this.getProvider(preparedAlgorithm.name);
        const result = await provider.digest(preparedAlgorithm, preparedData, ...params);
        return result;
    }
    async generateKey(...args) {
        this.checkRequiredArguments(args, 3, "generateKey");
        const [algorithm, extractable, keyUsages, ...params] = args;
        const preparedAlgorithm = this.prepareAlgorithm(algorithm);
        const provider = this.getProvider(preparedAlgorithm.name);
        const result = await provider.generateKey({
            ...preparedAlgorithm,
            name: provider.name
        }, extractable, keyUsages, ...params);
        return result;
    }
    async sign(...args) {
        this.checkRequiredArguments(args, 3, "sign");
        const [algorithm, key, data, ...params] = args;
        this.checkCryptoKey(key);
        const preparedAlgorithm = this.prepareAlgorithm(algorithm);
        const preparedData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(data);
        const provider = this.getProvider(preparedAlgorithm.name);
        const result = await provider.sign({
            ...preparedAlgorithm,
            name: provider.name
        }, key, preparedData, ...params);
        return result;
    }
    async verify(...args) {
        this.checkRequiredArguments(args, 4, "verify");
        const [algorithm, key, signature, data, ...params] = args;
        this.checkCryptoKey(key);
        const preparedAlgorithm = this.prepareAlgorithm(algorithm);
        const preparedData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(data);
        const preparedSignature = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(signature);
        const provider = this.getProvider(preparedAlgorithm.name);
        const result = await provider.verify({
            ...preparedAlgorithm,
            name: provider.name
        }, key, preparedSignature, preparedData, ...params);
        return result;
    }
    async encrypt(...args) {
        this.checkRequiredArguments(args, 3, "encrypt");
        const [algorithm, key, data, ...params] = args;
        this.checkCryptoKey(key);
        const preparedAlgorithm = this.prepareAlgorithm(algorithm);
        const preparedData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(data);
        const provider = this.getProvider(preparedAlgorithm.name);
        const result = await provider.encrypt({
            ...preparedAlgorithm,
            name: provider.name
        }, key, preparedData, {
            keyUsage: true
        }, ...params);
        return result;
    }
    async decrypt(...args) {
        this.checkRequiredArguments(args, 3, "decrypt");
        const [algorithm, key, data, ...params] = args;
        this.checkCryptoKey(key);
        const preparedAlgorithm = this.prepareAlgorithm(algorithm);
        const preparedData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(data);
        const provider = this.getProvider(preparedAlgorithm.name);
        const result = await provider.decrypt({
            ...preparedAlgorithm,
            name: provider.name
        }, key, preparedData, {
            keyUsage: true
        }, ...params);
        return result;
    }
    async deriveBits(...args) {
        this.checkRequiredArguments(args, 3, "deriveBits");
        const [algorithm, baseKey, length, ...params] = args;
        this.checkCryptoKey(baseKey);
        const preparedAlgorithm = this.prepareAlgorithm(algorithm);
        const provider = this.getProvider(preparedAlgorithm.name);
        const result = await provider.deriveBits({
            ...preparedAlgorithm,
            name: provider.name
        }, baseKey, length, {
            keyUsage: true
        }, ...params);
        return result;
    }
    async deriveKey(...args) {
        this.checkRequiredArguments(args, 5, "deriveKey");
        const [algorithm, baseKey, derivedKeyType, extractable, keyUsages, ...params] = args;
        const preparedDerivedKeyType = this.prepareAlgorithm(derivedKeyType);
        const importProvider = this.getProvider(preparedDerivedKeyType.name);
        importProvider.checkDerivedKeyParams(preparedDerivedKeyType);
        const preparedAlgorithm = this.prepareAlgorithm(algorithm);
        const provider = this.getProvider(preparedAlgorithm.name);
        provider.checkCryptoKey(baseKey, "deriveKey");
        const derivedBits = await provider.deriveBits({
            ...preparedAlgorithm,
            name: provider.name
        }, baseKey, derivedKeyType.length || 512, {
            keyUsage: false
        }, ...params);
        return this.importKey("raw", derivedBits, derivedKeyType, extractable, keyUsages, ...params);
    }
    async exportKey(...args) {
        this.checkRequiredArguments(args, 2, "exportKey");
        const [format, key, ...params] = args;
        this.checkCryptoKey(key);
        if (!keyFormatMap[format]) {
            throw new TypeError("Invalid keyFormat argument");
        }
        if (!keyFormatMap[format].includes(key.type)) {
            throw new DOMException("The key is not of the expected type");
        }
        const provider = this.getProvider(key.algorithm.name);
        const result = await provider.exportKey(format, key, ...params);
        return result;
    }
    async importKey(...args) {
        this.checkRequiredArguments(args, 5, "importKey");
        const [format, keyData, algorithm, extractable, keyUsages, ...params] = args;
        const preparedAlgorithm = this.prepareAlgorithm(algorithm);
        const provider = this.getProvider(preparedAlgorithm.name);
        if (format === "jwk") {
            if (typeof keyData !== "object" || !keyData.kty) {
                throw new TypeError("Key data must be an object for JWK import");
            }
        } else if (sourceBufferKeyFormats.includes(format)) {
            if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].isBufferSource(keyData)) {
                throw new TypeError("Key data must be a BufferSource for non-JWK formats");
            }
        } else {
            throw new TypeError("The provided value is not of type '(ArrayBuffer or ArrayBufferView or JsonWebKey)'");
        }
        return provider.importKey(format, keyData, {
            ...preparedAlgorithm,
            name: provider.name
        }, extractable, keyUsages, ...params);
    }
    async wrapKey(format, key, wrappingKey, wrapAlgorithm, ...args) {
        let keyData = await this.exportKey(format, key, ...args);
        if (format === "jwk") {
            const json = JSON.stringify(keyData);
            keyData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromUtf8String(json);
        }
        const preparedAlgorithm = this.prepareAlgorithm(wrapAlgorithm);
        const preparedData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(keyData);
        const provider = this.getProvider(preparedAlgorithm.name);
        return provider.encrypt({
            ...preparedAlgorithm,
            name: provider.name
        }, wrappingKey, preparedData, {
            keyUsage: false
        }, ...args);
    }
    async unwrapKey(format, wrappedKey, unwrappingKey, unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages, ...args) {
        const preparedAlgorithm = this.prepareAlgorithm(unwrapAlgorithm);
        const preparedData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(wrappedKey);
        const provider = this.getProvider(preparedAlgorithm.name);
        let keyData = await provider.decrypt({
            ...preparedAlgorithm,
            name: provider.name
        }, unwrappingKey, preparedData, {
            keyUsage: false
        }, ...args);
        if (format === "jwk") {
            try {
                keyData = JSON.parse(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToUtf8String(keyData));
            } catch (e) {
                const error = new TypeError("wrappedKey: Is not a JSON");
                error.internal = e;
                throw error;
            }
        }
        return this.importKey(format, keyData, unwrappedKeyAlgorithm, extractable, keyUsages, ...args);
    }
    checkRequiredArguments(args, size, methodName) {
        if (args.length < size) {
            throw new TypeError(`Failed to execute '${methodName}' on 'SubtleCrypto': ${size} arguments required, but only ${args.length} present`);
        }
    }
    prepareAlgorithm(algorithm) {
        if (typeof algorithm === "string") {
            return {
                name: algorithm
            };
        }
        if (SubtleCrypto.isHashedAlgorithm(algorithm)) {
            const preparedAlgorithm = {
                ...algorithm
            };
            preparedAlgorithm.hash = this.prepareAlgorithm(algorithm.hash);
            return preparedAlgorithm;
        }
        return {
            ...algorithm
        };
    }
    getProvider(name) {
        const provider = this.providers.get(name);
        if (!provider) {
            throw new AlgorithmError("Unrecognized name");
        }
        return provider;
    }
    checkCryptoKey(key) {
        if (!(key instanceof CryptoKey)) {
            throw new TypeError(`Key is not of type 'CryptoKey'`);
        }
    }
}
var index = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    converters: index$3
});
const REQUIRED_FIELDS = [
    "crv",
    "e",
    "k",
    "kty",
    "n",
    "x",
    "y"
];
class JwkUtils {
    static async thumbprint(hash, jwk, crypto) {
        const data = this.format(jwk, true);
        return crypto.subtle.digest(hash, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromBinary(JSON.stringify(data)));
    }
    static format(jwk, remove = false) {
        let res = Object.entries(jwk);
        if (remove) {
            res = res.filter((o)=>REQUIRED_FIELDS.includes(o[0]));
        }
        res = res.sort(([keyA], [keyB])=>keyA > keyB ? 1 : keyA < keyB ? -1 : 0);
        return Object.fromEntries(res);
    }
}
;
}}),
"[project]/node_modules/.pnpm/webcrypto-core@1.8.1/node_modules/webcrypto-core/build/webcrypto-core.es.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/pvtsutils@1.3.6/node_modules/pvtsutils/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+json-schema@1.1.12/node_modules/@peculiar/json-schema/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$asn1js$40$3$2e$0$2e$5$2f$node_modules$2f$asn1js$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/asn1js@3.0.5/node_modules/asn1js/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/webcrypto-core@1.8.1/node_modules/webcrypto-core/build/webcrypto-core.es.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/webcrypto-core@1.8.1/node_modules/webcrypto-core/build/webcrypto-core.es.js [app-route] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AesCbcProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AesCbcProvider"]),
    "AesCmacProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AesCmacProvider"]),
    "AesCtrProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AesCtrProvider"]),
    "AesEcbProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AesEcbProvider"]),
    "AesGcmProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AesGcmProvider"]),
    "AesKwProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AesKwProvider"]),
    "AesProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AesProvider"]),
    "AlgorithmError": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AlgorithmError"]),
    "BufferSourceConverter": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"]),
    "Crypto": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Crypto"]),
    "CryptoError": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CryptoError"]),
    "CryptoKey": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CryptoKey"]),
    "DesProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["DesProvider"]),
    "EcCurves": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["EcCurves"]),
    "EcUtils": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["EcUtils"]),
    "EcdhEsProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["EcdhEsProvider"]),
    "EcdhProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["EcdhProvider"]),
    "EcdsaProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["EcdsaProvider"]),
    "Ed25519Provider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Ed25519Provider"]),
    "EdDsaProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["EdDsaProvider"]),
    "EllipticProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["EllipticProvider"]),
    "HkdfProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["HkdfProvider"]),
    "HmacProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["HmacProvider"]),
    "JwkUtils": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["JwkUtils"]),
    "OperationError": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["OperationError"]),
    "Pbkdf2Provider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Pbkdf2Provider"]),
    "PemConverter": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["PemConverter"]),
    "ProviderCrypto": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["ProviderCrypto"]),
    "ProviderStorage": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["ProviderStorage"]),
    "RequiredPropertyError": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RequiredPropertyError"]),
    "RsaOaepProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RsaOaepProvider"]),
    "RsaProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RsaProvider"]),
    "RsaPssProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RsaPssProvider"]),
    "RsaSsaProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RsaSsaProvider"]),
    "Shake128Provider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Shake128Provider"]),
    "Shake256Provider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Shake256Provider"]),
    "ShakeProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["ShakeProvider"]),
    "SubtleCrypto": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["SubtleCrypto"]),
    "UnsupportedOperationError": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["UnsupportedOperationError"]),
    "X25519Provider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X25519Provider"]),
    "asn1": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["asn1"]),
    "isJWK": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["isJWK"]),
    "json": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["json"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/pvtsutils@1.3.6/node_modules/pvtsutils/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/webcrypto-core@1.8.1/node_modules/webcrypto-core/build/webcrypto-core.es.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/webcrypto-core@1.8.1/node_modules/webcrypto-core/build/webcrypto-core.es.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AesCbcProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["AesCbcProvider"]),
    "AesCmacProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["AesCmacProvider"]),
    "AesCtrProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["AesCtrProvider"]),
    "AesEcbProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["AesEcbProvider"]),
    "AesGcmProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["AesGcmProvider"]),
    "AesKwProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["AesKwProvider"]),
    "AesProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["AesProvider"]),
    "AlgorithmError": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["AlgorithmError"]),
    "BufferSourceConverter": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["BufferSourceConverter"]),
    "Crypto": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["Crypto"]),
    "CryptoError": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["CryptoError"]),
    "CryptoKey": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["CryptoKey"]),
    "DesProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["DesProvider"]),
    "EcCurves": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EcCurves"]),
    "EcUtils": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EcUtils"]),
    "EcdhEsProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EcdhEsProvider"]),
    "EcdhProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EcdhProvider"]),
    "EcdsaProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EcdsaProvider"]),
    "Ed25519Provider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["Ed25519Provider"]),
    "EdDsaProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EdDsaProvider"]),
    "EllipticProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EllipticProvider"]),
    "HkdfProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["HkdfProvider"]),
    "HmacProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["HmacProvider"]),
    "JwkUtils": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["JwkUtils"]),
    "OperationError": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["OperationError"]),
    "Pbkdf2Provider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["Pbkdf2Provider"]),
    "PemConverter": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["PemConverter"]),
    "ProviderCrypto": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["ProviderCrypto"]),
    "ProviderStorage": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["ProviderStorage"]),
    "RequiredPropertyError": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["RequiredPropertyError"]),
    "RsaOaepProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["RsaOaepProvider"]),
    "RsaProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["RsaProvider"]),
    "RsaPssProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["RsaPssProvider"]),
    "RsaSsaProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["RsaSsaProvider"]),
    "Shake128Provider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["Shake128Provider"]),
    "Shake256Provider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["Shake256Provider"]),
    "ShakeProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["ShakeProvider"]),
    "SubtleCrypto": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["SubtleCrypto"]),
    "UnsupportedOperationError": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["UnsupportedOperationError"]),
    "X25519Provider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["X25519Provider"]),
    "asn1": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["asn1"]),
    "isJWK": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["isJWK"]),
    "json": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["json"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/webcrypto-core@1.8.1/node_modules/webcrypto-core/build/webcrypto-core.es.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/webcrypto-core@1.8.1/node_modules/webcrypto-core/build/webcrypto-core.es.js [app-route] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@peculiar+webcrypto@1.5.0/node_modules/@peculiar/webcrypto/build/webcrypto.es.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/*!
 Copyright (c) Peculiar Ventures, LLC
*/ __turbopack_esm__({
    "Crypto": (()=>Crypto)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/parser.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/webcrypto-core@1.8.1/node_modules/webcrypto-core/build/webcrypto-core.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+json-schema@1.1.12/node_modules/@peculiar/json-schema/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/serializer.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/pvtsutils@1.3.6/node_modules/pvtsutils/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__ = __turbopack_import__("[externals]/crypto [external] (crypto, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$convert$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/convert.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$process__$5b$external$5d$__$28$process$2c$__cjs$29$__ = __turbopack_import__("[externals]/process [external] (process, cjs)");
;
;
;
;
;
;
;
;
;
;
const JsonBase64UrlConverter = {
    fromJSON: (value)=>__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromBase64Url(value)),
    toJSON: (value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64Url(value)
};
class CryptoKey extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.CryptoKey {
    constructor(){
        super(...arguments);
        this.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].alloc(0);
        this.algorithm = {
            name: ""
        };
        this.extractable = false;
        this.type = "secret";
        this.usages = [];
        this.kty = "oct";
        this.alg = "";
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "ext",
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonPropTypes"].Boolean,
        optional: true
    })
], CryptoKey.prototype, "extractable", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "key_ops",
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonPropTypes"].String,
        repeated: true,
        optional: true
    })
], CryptoKey.prototype, "usages", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonPropTypes"].String
    })
], CryptoKey.prototype, "kty", void 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonPropTypes"].String,
        optional: true
    })
], CryptoKey.prototype, "alg", void 0);
class SymmetricKey extends CryptoKey {
    constructor(){
        super(...arguments);
        this.kty = "oct";
        this.type = "secret";
    }
}
class AsymmetricKey extends CryptoKey {
}
class AesCryptoKey extends SymmetricKey {
    get alg() {
        switch(this.algorithm.name.toUpperCase()){
            case "AES-CBC":
                return `A${this.algorithm.length}CBC`;
            case "AES-CTR":
                return `A${this.algorithm.length}CTR`;
            case "AES-GCM":
                return `A${this.algorithm.length}GCM`;
            case "AES-KW":
                return `A${this.algorithm.length}KW`;
            case "AES-CMAC":
                return `A${this.algorithm.length}CMAC`;
            case "AES-ECB":
                return `A${this.algorithm.length}ECB`;
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.AlgorithmError("Unsupported algorithm name");
        }
    }
    set alg(value) {}
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "k",
        converter: JsonBase64UrlConverter
    })
], AesCryptoKey.prototype, "data", void 0);
class AesCrypto {
    static async generateKey(algorithm, extractable, keyUsages) {
        const key = new AesCryptoKey();
        key.algorithm = algorithm;
        key.extractable = extractable;
        key.usages = keyUsages;
        key.data = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].randomBytes(algorithm.length >> 3);
        return key;
    }
    static async exportKey(format, key) {
        if (!(key instanceof AesCryptoKey)) {
            throw new Error("key: Is not AesCryptoKey");
        }
        switch(format.toLowerCase()){
            case "jwk":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonSerializer"].toJSON(key);
            case "raw":
                return new Uint8Array(key.data).buffer;
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk' or 'raw'");
        }
    }
    static async importKey(format, keyData, algorithm, extractable, keyUsages) {
        let key;
        switch(format.toLowerCase()){
            case "jwk":
                key = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(keyData, {
                    targetSchema: AesCryptoKey
                });
                break;
            case "raw":
                key = new AesCryptoKey();
                key.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(keyData);
                break;
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk' or 'raw'");
        }
        key.algorithm = algorithm;
        key.algorithm.length = key.data.length << 3;
        key.extractable = extractable;
        key.usages = keyUsages;
        switch(key.algorithm.length){
            case 128:
            case 192:
            case 256:
                break;
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("keyData: Is wrong key length");
        }
        return key;
    }
    static async encrypt(algorithm, key, data) {
        switch(algorithm.name.toUpperCase()){
            case "AES-CBC":
                return this.encryptAesCBC(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            case "AES-CTR":
                return this.encryptAesCTR(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            case "AES-GCM":
                return this.encryptAesGCM(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            case "AES-KW":
                return this.encryptAesKW(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            case "AES-ECB":
                return this.encryptAesECB(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("algorithm: Is not recognized");
        }
    }
    static async decrypt(algorithm, key, data) {
        if (!(key instanceof AesCryptoKey)) {
            throw new Error("key: Is not AesCryptoKey");
        }
        switch(algorithm.name.toUpperCase()){
            case "AES-CBC":
                return this.decryptAesCBC(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            case "AES-CTR":
                return this.decryptAesCTR(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            case "AES-GCM":
                return this.decryptAesGCM(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            case "AES-KW":
                return this.decryptAesKW(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            case "AES-ECB":
                return this.decryptAesECB(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("algorithm: Is not recognized");
        }
    }
    static async encryptAesCBC(algorithm, key, data) {
        const cipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createCipheriv(`aes-${key.algorithm.length}-cbc`, key.data, new Uint8Array(algorithm.iv));
        let enc = cipher.update(data);
        enc = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            enc,
            cipher.final()
        ]);
        const res = new Uint8Array(enc).buffer;
        return res;
    }
    static async decryptAesCBC(algorithm, key, data) {
        const decipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createDecipheriv(`aes-${key.algorithm.length}-cbc`, key.data, new Uint8Array(algorithm.iv));
        let dec = decipher.update(data);
        dec = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            dec,
            decipher.final()
        ]);
        return new Uint8Array(dec).buffer;
    }
    static async encryptAesCTR(algorithm, key, data) {
        const cipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createCipheriv(`aes-${key.algorithm.length}-ctr`, key.data, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(algorithm.counter));
        let enc = cipher.update(data);
        enc = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            enc,
            cipher.final()
        ]);
        const res = new Uint8Array(enc).buffer;
        return res;
    }
    static async decryptAesCTR(algorithm, key, data) {
        const decipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createDecipheriv(`aes-${key.algorithm.length}-ctr`, key.data, new Uint8Array(algorithm.counter));
        let dec = decipher.update(data);
        dec = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            dec,
            decipher.final()
        ]);
        return new Uint8Array(dec).buffer;
    }
    static async encryptAesGCM(algorithm, key, data) {
        const cipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createCipheriv(`aes-${key.algorithm.length}-gcm`, key.data, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(algorithm.iv), {
            authTagLength: (algorithm.tagLength || 128) >> 3
        });
        if (algorithm.additionalData) {
            cipher.setAAD(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(algorithm.additionalData));
        }
        let enc = cipher.update(data);
        enc = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            enc,
            cipher.final(),
            cipher.getAuthTag()
        ]);
        const res = new Uint8Array(enc).buffer;
        return res;
    }
    static async decryptAesGCM(algorithm, key, data) {
        const tagLength = (algorithm.tagLength || 128) >> 3;
        const decipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createDecipheriv(`aes-${key.algorithm.length}-gcm`, key.data, new Uint8Array(algorithm.iv), {
            authTagLength: tagLength
        });
        const enc = data.slice(0, data.length - tagLength);
        const tag = data.slice(data.length - tagLength);
        if (algorithm.additionalData) {
            decipher.setAAD(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(algorithm.additionalData));
        }
        decipher.setAuthTag(tag);
        let dec = decipher.update(enc);
        dec = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            dec,
            decipher.final()
        ]);
        return new Uint8Array(dec).buffer;
    }
    static async encryptAesKW(algorithm, key, data) {
        const cipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createCipheriv(`id-aes${key.algorithm.length}-wrap`, key.data, this.AES_KW_IV);
        let enc = cipher.update(data);
        enc = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            enc,
            cipher.final()
        ]);
        return new Uint8Array(enc).buffer;
    }
    static async decryptAesKW(algorithm, key, data) {
        const decipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createDecipheriv(`id-aes${key.algorithm.length}-wrap`, key.data, this.AES_KW_IV);
        let dec = decipher.update(data);
        dec = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            dec,
            decipher.final()
        ]);
        return new Uint8Array(dec).buffer;
    }
    static async encryptAesECB(algorithm, key, data) {
        const cipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createCipheriv(`aes-${key.algorithm.length}-ecb`, key.data, new Uint8Array(0));
        let enc = cipher.update(data);
        enc = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            enc,
            cipher.final()
        ]);
        const res = new Uint8Array(enc).buffer;
        return res;
    }
    static async decryptAesECB(algorithm, key, data) {
        const decipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createDecipheriv(`aes-${key.algorithm.length}-ecb`, key.data, new Uint8Array(0));
        let dec = decipher.update(data);
        dec = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            dec,
            decipher.final()
        ]);
        return new Uint8Array(dec).buffer;
    }
}
AesCrypto.AES_KW_IV = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from("A6A6A6A6A6A6A6A6", "hex");
const keyStorage = new WeakMap();
function getCryptoKey(key) {
    const res = keyStorage.get(key);
    if (!res) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("Cannot get CryptoKey from secure storage");
    }
    return res;
}
function setCryptoKey(value) {
    const key = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.CryptoKey.create(value.algorithm, value.type, value.extractable, value.usages);
    Object.freeze(key);
    keyStorage.set(key, value);
    return key;
}
class AesCbcProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.AesCbcProvider {
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const key = await AesCrypto.generateKey({
            name: this.name,
            length: algorithm.length
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    async onEncrypt(algorithm, key, data) {
        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onDecrypt(algorithm, key, data) {
        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onExportKey(format, key) {
        return AesCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const key = await AesCrypto.importKey(format, keyData, {
            name: algorithm.name
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {
            throw new TypeError("key: Is not a AesCryptoKey");
        }
    }
}
const zero = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
]);
const rb = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    135
]);
const blockSize = 16;
function bitShiftLeft(buffer) {
    const shifted = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].alloc(buffer.length);
    const last = buffer.length - 1;
    for(let index = 0; index < last; index++){
        shifted[index] = buffer[index] << 1;
        if (buffer[index + 1] & 0x80) {
            shifted[index] += 0x01;
        }
    }
    shifted[last] = buffer[last] << 1;
    return shifted;
}
function xor(a, b) {
    const length = Math.min(a.length, b.length);
    const output = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].alloc(length);
    for(let index = 0; index < length; index++){
        output[index] = a[index] ^ b[index];
    }
    return output;
}
function aes(key, message) {
    const cipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createCipheriv(`aes${key.length << 3}`, key, zero);
    const result = cipher.update(message);
    cipher.final();
    return result;
}
function getMessageBlock(message, blockIndex) {
    const block = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].alloc(blockSize);
    const start = blockIndex * blockSize;
    const end = start + blockSize;
    message.copy(block, 0, start, end);
    return block;
}
function getPaddedMessageBlock(message, blockIndex) {
    const block = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].alloc(blockSize);
    const start = blockIndex * blockSize;
    const end = message.length;
    block.fill(0);
    message.copy(block, 0, start, end);
    block[end - start] = 0x80;
    return block;
}
function generateSubkeys(key) {
    const l = aes(key, zero);
    let subkey1 = bitShiftLeft(l);
    if (l[0] & 0x80) {
        subkey1 = xor(subkey1, rb);
    }
    let subkey2 = bitShiftLeft(subkey1);
    if (subkey1[0] & 0x80) {
        subkey2 = xor(subkey2, rb);
    }
    return {
        subkey1,
        subkey2
    };
}
function aesCmac(key, message) {
    const subkeys = generateSubkeys(key);
    let blockCount = Math.ceil(message.length / blockSize);
    let lastBlockCompleteFlag;
    let lastBlock;
    if (blockCount === 0) {
        blockCount = 1;
        lastBlockCompleteFlag = false;
    } else {
        lastBlockCompleteFlag = message.length % blockSize === 0;
    }
    const lastBlockIndex = blockCount - 1;
    if (lastBlockCompleteFlag) {
        lastBlock = xor(getMessageBlock(message, lastBlockIndex), subkeys.subkey1);
    } else {
        lastBlock = xor(getPaddedMessageBlock(message, lastBlockIndex), subkeys.subkey2);
    }
    let x = zero;
    let y;
    for(let index = 0; index < lastBlockIndex; index++){
        y = xor(x, getMessageBlock(message, index));
        x = aes(key, y);
    }
    y = xor(lastBlock, x);
    return aes(key, y);
}
class AesCmacProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.AesCmacProvider {
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const key = await AesCrypto.generateKey({
            name: this.name,
            length: algorithm.length
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    async onSign(algorithm, key, data) {
        const result = aesCmac(getCryptoKey(key).data, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
        return new Uint8Array(result).buffer;
    }
    async onVerify(algorithm, key, signature, data) {
        const signature2 = await this.sign(algorithm, key, data);
        return __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(signature).compare(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(signature2)) === 0;
    }
    async onExportKey(format, key) {
        return AesCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const res = await AesCrypto.importKey(format, keyData, {
            name: algorithm.name
        }, extractable, keyUsages);
        return setCryptoKey(res);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {
            throw new TypeError("key: Is not a AesCryptoKey");
        }
    }
}
class AesCtrProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.AesCtrProvider {
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const key = await AesCrypto.generateKey({
            name: this.name,
            length: algorithm.length
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    async onEncrypt(algorithm, key, data) {
        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onDecrypt(algorithm, key, data) {
        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onExportKey(format, key) {
        return AesCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const res = await AesCrypto.importKey(format, keyData, {
            name: algorithm.name
        }, extractable, keyUsages);
        return setCryptoKey(res);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {
            throw new TypeError("key: Is not a AesCryptoKey");
        }
    }
}
class AesGcmProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.AesGcmProvider {
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const key = await AesCrypto.generateKey({
            name: this.name,
            length: algorithm.length
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    async onEncrypt(algorithm, key, data) {
        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onDecrypt(algorithm, key, data) {
        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onExportKey(format, key) {
        return AesCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const res = await AesCrypto.importKey(format, keyData, {
            name: algorithm.name
        }, extractable, keyUsages);
        return setCryptoKey(res);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {
            throw new TypeError("key: Is not a AesCryptoKey");
        }
    }
}
class AesKwProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.AesKwProvider {
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const res = await AesCrypto.generateKey({
            name: this.name,
            length: algorithm.length
        }, extractable, keyUsages);
        return setCryptoKey(res);
    }
    async onExportKey(format, key) {
        return AesCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const res = await AesCrypto.importKey(format, keyData, {
            name: algorithm.name
        }, extractable, keyUsages);
        return setCryptoKey(res);
    }
    async onEncrypt(algorithm, key, data) {
        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onDecrypt(algorithm, key, data) {
        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {
            throw new TypeError("key: Is not a AesCryptoKey");
        }
    }
}
class AesEcbProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.AesEcbProvider {
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const key = await AesCrypto.generateKey({
            name: this.name,
            length: algorithm.length
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    async onEncrypt(algorithm, key, data) {
        return AesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onDecrypt(algorithm, key, data) {
        return AesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onExportKey(format, key) {
        return AesCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const res = await AesCrypto.importKey(format, keyData, {
            name: algorithm.name
        }, extractable, keyUsages);
        return setCryptoKey(res);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        if (!(getCryptoKey(key) instanceof AesCryptoKey)) {
            throw new TypeError("key: Is not a AesCryptoKey");
        }
    }
}
class DesCryptoKey extends SymmetricKey {
    get alg() {
        switch(this.algorithm.name.toUpperCase()){
            case "DES-CBC":
                return `DES-CBC`;
            case "DES-EDE3-CBC":
                return `3DES-CBC`;
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.AlgorithmError("Unsupported algorithm name");
        }
    }
    set alg(value) {}
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "k",
        converter: JsonBase64UrlConverter
    })
], DesCryptoKey.prototype, "data", void 0);
class DesCrypto {
    static async generateKey(algorithm, extractable, keyUsages) {
        const key = new DesCryptoKey();
        key.algorithm = algorithm;
        key.extractable = extractable;
        key.usages = keyUsages;
        key.data = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].randomBytes(algorithm.length >> 3);
        return key;
    }
    static async exportKey(format, key) {
        switch(format.toLowerCase()){
            case "jwk":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonSerializer"].toJSON(key);
            case "raw":
                return new Uint8Array(key.data).buffer;
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk' or 'raw'");
        }
    }
    static async importKey(format, keyData, algorithm, extractable, keyUsages) {
        let key;
        switch(format.toLowerCase()){
            case "jwk":
                key = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(keyData, {
                    targetSchema: DesCryptoKey
                });
                break;
            case "raw":
                key = new DesCryptoKey();
                key.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(keyData);
                break;
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk' or 'raw'");
        }
        key.algorithm = algorithm;
        key.extractable = extractable;
        key.usages = keyUsages;
        return key;
    }
    static async encrypt(algorithm, key, data) {
        switch(algorithm.name.toUpperCase()){
            case "DES-CBC":
                return this.encryptDesCBC(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            case "DES-EDE3-CBC":
                return this.encryptDesEDE3CBC(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("algorithm: Is not recognized");
        }
    }
    static async decrypt(algorithm, key, data) {
        if (!(key instanceof DesCryptoKey)) {
            throw new Error("key: Is not DesCryptoKey");
        }
        switch(algorithm.name.toUpperCase()){
            case "DES-CBC":
                return this.decryptDesCBC(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            case "DES-EDE3-CBC":
                return this.decryptDesEDE3CBC(algorithm, key, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("algorithm: Is not recognized");
        }
    }
    static async encryptDesCBC(algorithm, key, data) {
        const cipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createCipheriv(`des-cbc`, key.data, new Uint8Array(algorithm.iv));
        let enc = cipher.update(data);
        enc = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            enc,
            cipher.final()
        ]);
        const res = new Uint8Array(enc).buffer;
        return res;
    }
    static async decryptDesCBC(algorithm, key, data) {
        const decipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createDecipheriv(`des-cbc`, key.data, new Uint8Array(algorithm.iv));
        let dec = decipher.update(data);
        dec = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            dec,
            decipher.final()
        ]);
        return new Uint8Array(dec).buffer;
    }
    static async encryptDesEDE3CBC(algorithm, key, data) {
        const cipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createCipheriv(`des-ede3-cbc`, key.data, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(algorithm.iv));
        let enc = cipher.update(data);
        enc = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            enc,
            cipher.final()
        ]);
        const res = new Uint8Array(enc).buffer;
        return res;
    }
    static async decryptDesEDE3CBC(algorithm, key, data) {
        const decipher = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createDecipheriv(`des-ede3-cbc`, key.data, new Uint8Array(algorithm.iv));
        let dec = decipher.update(data);
        dec = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            dec,
            decipher.final()
        ]);
        return new Uint8Array(dec).buffer;
    }
}
class DesCbcProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.DesProvider {
    constructor(){
        super(...arguments);
        this.keySizeBits = 64;
        this.ivSize = 8;
        this.name = "DES-CBC";
    }
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const key = await DesCrypto.generateKey({
            name: this.name,
            length: this.keySizeBits
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    async onEncrypt(algorithm, key, data) {
        return DesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onDecrypt(algorithm, key, data) {
        return DesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onExportKey(format, key) {
        return DesCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const key = await DesCrypto.importKey(format, keyData, {
            name: this.name,
            length: this.keySizeBits
        }, extractable, keyUsages);
        if (key.data.length !== this.keySizeBits >> 3) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("keyData: Wrong key size");
        }
        return setCryptoKey(key);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        if (!(getCryptoKey(key) instanceof DesCryptoKey)) {
            throw new TypeError("key: Is not a DesCryptoKey");
        }
    }
}
class DesEde3CbcProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.DesProvider {
    constructor(){
        super(...arguments);
        this.keySizeBits = 192;
        this.ivSize = 8;
        this.name = "DES-EDE3-CBC";
    }
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const key = await DesCrypto.generateKey({
            name: this.name,
            length: this.keySizeBits
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    async onEncrypt(algorithm, key, data) {
        return DesCrypto.encrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onDecrypt(algorithm, key, data) {
        return DesCrypto.decrypt(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onExportKey(format, key) {
        return DesCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const key = await DesCrypto.importKey(format, keyData, {
            name: this.name,
            length: this.keySizeBits
        }, extractable, keyUsages);
        if (key.data.length !== this.keySizeBits >> 3) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("keyData: Wrong key size");
        }
        return setCryptoKey(key);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        if (!(getCryptoKey(key) instanceof DesCryptoKey)) {
            throw new TypeError("key: Is not a DesCryptoKey");
        }
    }
}
function getJwkAlgorithm(algorithm) {
    switch(algorithm.name.toUpperCase()){
        case "RSA-OAEP":
            {
                const mdSize = /(\d+)$/.exec(algorithm.hash.name)[1];
                return `RSA-OAEP${mdSize !== "1" ? `-${mdSize}` : ""}`;
            }
        case "RSASSA-PKCS1-V1_5":
            return `RS${/(\d+)$/.exec(algorithm.hash.name)[1]}`;
        case "RSA-PSS":
            return `PS${/(\d+)$/.exec(algorithm.hash.name)[1]}`;
        case "RSA-PKCS1":
            return `RS1`;
        default:
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("algorithm: Is not recognized");
    }
}
class RsaPrivateKey extends AsymmetricKey {
    constructor(){
        super(...arguments);
        this.type = "private";
    }
    getKey() {
        const keyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(this.data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo);
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(keyInfo.privateKey, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.RsaPrivateKey);
    }
    toJSON() {
        const key = this.getKey();
        const json = {
            kty: "RSA",
            alg: getJwkAlgorithm(this.algorithm),
            key_ops: this.usages,
            ext: this.extractable
        };
        return Object.assign(json, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonSerializer"].toJSON(key));
    }
    fromJSON(json) {
        const key = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(json, {
            targetSchema: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.RsaPrivateKey
        });
        const keyInfo = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo();
        keyInfo.privateKeyAlgorithm.algorithm = "1.2.840.113549.1.1.1";
        keyInfo.privateKeyAlgorithm.parameters = null;
        keyInfo.privateKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(key);
        this.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(keyInfo));
    }
}
class RsaPublicKey extends AsymmetricKey {
    constructor(){
        super(...arguments);
        this.type = "public";
    }
    getKey() {
        const keyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(this.data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo);
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(keyInfo.publicKey, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.RsaPublicKey);
    }
    toJSON() {
        const key = this.getKey();
        const json = {
            kty: "RSA",
            alg: getJwkAlgorithm(this.algorithm),
            key_ops: this.usages,
            ext: this.extractable
        };
        return Object.assign(json, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonSerializer"].toJSON(key));
    }
    fromJSON(json) {
        const key = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(json, {
            targetSchema: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.RsaPublicKey
        });
        const keyInfo = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo();
        keyInfo.publicKeyAlgorithm.algorithm = "1.2.840.113549.1.1.1";
        keyInfo.publicKeyAlgorithm.parameters = null;
        keyInfo.publicKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(key);
        this.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(keyInfo));
    }
}
class RsaCrypto {
    static async generateKey(algorithm, extractable, keyUsages) {
        const privateKey = new RsaPrivateKey();
        privateKey.algorithm = algorithm;
        privateKey.extractable = extractable;
        privateKey.usages = keyUsages.filter((usage)=>this.privateKeyUsages.indexOf(usage) !== -1);
        const publicKey = new RsaPublicKey();
        publicKey.algorithm = algorithm;
        publicKey.extractable = true;
        publicKey.usages = keyUsages.filter((usage)=>this.publicKeyUsages.indexOf(usage) !== -1);
        const publicExponent = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
            __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].alloc(4 - algorithm.publicExponent.byteLength, 0),
            __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(algorithm.publicExponent)
        ]).readInt32BE(0);
        const keys = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].generateKeyPairSync("rsa", {
            modulusLength: algorithm.modulusLength,
            publicExponent,
            publicKeyEncoding: {
                format: "der",
                type: "spki"
            },
            privateKeyEncoding: {
                format: "der",
                type: "pkcs8"
            }
        });
        privateKey.data = keys.privateKey;
        publicKey.data = keys.publicKey;
        const res = {
            privateKey,
            publicKey
        };
        return res;
    }
    static async exportKey(format, key) {
        switch(format.toLowerCase()){
            case "jwk":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonSerializer"].toJSON(key);
            case "pkcs8":
            case "spki":
                return new Uint8Array(key.data).buffer;
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk', 'pkcs8' or 'spki'");
        }
    }
    static async importKey(format, keyData, algorithm, extractable, keyUsages) {
        switch(format.toLowerCase()){
            case "jwk":
                {
                    const jwk = keyData;
                    if (jwk.d) {
                        const asnKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(keyData, {
                            targetSchema: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.RsaPrivateKey
                        });
                        return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);
                    } else {
                        const asnKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(keyData, {
                            targetSchema: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.RsaPublicKey
                        });
                        return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);
                    }
                }
            case "spki":
                {
                    const keyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(new Uint8Array(keyData), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo);
                    const asnKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(keyInfo.publicKey, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.RsaPublicKey);
                    return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);
                }
            case "pkcs8":
                {
                    const keyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(new Uint8Array(keyData), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo);
                    const asnKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(keyInfo.privateKey, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.RsaPrivateKey);
                    return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);
                }
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk', 'pkcs8' or 'spki'");
        }
    }
    static async sign(algorithm, key, data) {
        switch(algorithm.name.toUpperCase()){
            case "RSA-PSS":
            case "RSASSA-PKCS1-V1_5":
                return this.signRsa(algorithm, key, data);
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("algorithm: Is not recognized");
        }
    }
    static async verify(algorithm, key, signature, data) {
        switch(algorithm.name.toUpperCase()){
            case "RSA-PSS":
            case "RSASSA-PKCS1-V1_5":
                return this.verifySSA(algorithm, key, data, signature);
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("algorithm: Is not recognized");
        }
    }
    static async encrypt(algorithm, key, data) {
        switch(algorithm.name.toUpperCase()){
            case "RSA-OAEP":
                return this.encryptOAEP(algorithm, key, data);
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("algorithm: Is not recognized");
        }
    }
    static async decrypt(algorithm, key, data) {
        switch(algorithm.name.toUpperCase()){
            case "RSA-OAEP":
                return this.decryptOAEP(algorithm, key, data);
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("algorithm: Is not recognized");
        }
    }
    static importPrivateKey(asnKey, algorithm, extractable, keyUsages) {
        const keyInfo = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo();
        keyInfo.privateKeyAlgorithm.algorithm = "1.2.840.113549.1.1.1";
        keyInfo.privateKeyAlgorithm.parameters = null;
        keyInfo.privateKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(asnKey);
        const key = new RsaPrivateKey();
        key.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(keyInfo));
        key.algorithm = Object.assign({}, algorithm);
        key.algorithm.publicExponent = new Uint8Array(asnKey.publicExponent);
        key.algorithm.modulusLength = asnKey.modulus.byteLength << 3;
        key.extractable = extractable;
        key.usages = keyUsages;
        return key;
    }
    static importPublicKey(asnKey, algorithm, extractable, keyUsages) {
        const keyInfo = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo();
        keyInfo.publicKeyAlgorithm.algorithm = "1.2.840.113549.1.1.1";
        keyInfo.publicKeyAlgorithm.parameters = null;
        keyInfo.publicKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(asnKey);
        const key = new RsaPublicKey();
        key.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(keyInfo));
        key.algorithm = Object.assign({}, algorithm);
        key.algorithm.publicExponent = new Uint8Array(asnKey.publicExponent);
        key.algorithm.modulusLength = asnKey.modulus.byteLength << 3;
        key.extractable = extractable;
        key.usages = keyUsages;
        return key;
    }
    static getCryptoAlgorithm(alg) {
        switch(alg.hash.name.toUpperCase()){
            case "SHA-1":
                return "RSA-SHA1";
            case "SHA-256":
                return "RSA-SHA256";
            case "SHA-384":
                return "RSA-SHA384";
            case "SHA-512":
                return "RSA-SHA512";
            case "SHA3-256":
                return "RSA-SHA3-256";
            case "SHA3-384":
                return "RSA-SHA3-384";
            case "SHA3-512":
                return "RSA-SHA3-512";
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("algorithm.hash: Is not recognized");
        }
    }
    static signRsa(algorithm, key, data) {
        const cryptoAlg = this.getCryptoAlgorithm(key.algorithm);
        const signer = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createSign(cryptoAlg);
        signer.update(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
        if (!key.pem) {
            key.pem = `-----BEGIN PRIVATE KEY-----\n${key.data.toString("base64")}\n-----END PRIVATE KEY-----`;
        }
        const options = {
            key: key.pem
        };
        if (algorithm.name.toUpperCase() === "RSA-PSS") {
            options.padding = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].constants.RSA_PKCS1_PSS_PADDING;
            options.saltLength = algorithm.saltLength;
        }
        const signature = signer.sign(options);
        return new Uint8Array(signature).buffer;
    }
    static verifySSA(algorithm, key, data, signature) {
        const cryptoAlg = this.getCryptoAlgorithm(key.algorithm);
        const signer = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createVerify(cryptoAlg);
        signer.update(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
        if (!key.pem) {
            key.pem = `-----BEGIN PUBLIC KEY-----\n${key.data.toString("base64")}\n-----END PUBLIC KEY-----`;
        }
        const options = {
            key: key.pem
        };
        if (algorithm.name.toUpperCase() === "RSA-PSS") {
            options.padding = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].constants.RSA_PKCS1_PSS_PADDING;
            options.saltLength = algorithm.saltLength;
        }
        const ok = signer.verify(options, signature);
        return ok;
    }
    static encryptOAEP(algorithm, key, data) {
        const options = {
            key: `-----BEGIN PUBLIC KEY-----\n${key.data.toString("base64")}\n-----END PUBLIC KEY-----`,
            padding: __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].constants.RSA_PKCS1_OAEP_PADDING
        };
        if (algorithm.label) ;
        return new Uint8Array(__TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].publicEncrypt(options, data)).buffer;
    }
    static decryptOAEP(algorithm, key, data) {
        const options = {
            key: `-----BEGIN PRIVATE KEY-----\n${key.data.toString("base64")}\n-----END PRIVATE KEY-----`,
            padding: __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].constants.RSA_PKCS1_OAEP_PADDING
        };
        if (algorithm.label) ;
        return new Uint8Array(__TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].privateDecrypt(options, data)).buffer;
    }
}
RsaCrypto.publicKeyUsages = [
    "verify",
    "encrypt",
    "wrapKey"
];
RsaCrypto.privateKeyUsages = [
    "sign",
    "decrypt",
    "unwrapKey"
];
class RsaSsaProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.RsaSsaProvider {
    constructor(){
        super(...arguments);
        this.hashAlgorithms = [
            "SHA-1",
            "SHA-256",
            "SHA-384",
            "SHA-512",
            "shake128",
            "shake256",
            "SHA3-256",
            "SHA3-384",
            "SHA3-512"
        ];
    }
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const keys = await RsaCrypto.generateKey({
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return {
            privateKey: setCryptoKey(keys.privateKey),
            publicKey: setCryptoKey(keys.publicKey)
        };
    }
    async onSign(algorithm, key, data) {
        return RsaCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onVerify(algorithm, key, signature, data) {
        return RsaCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));
    }
    async onExportKey(format, key) {
        return RsaCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const key = await RsaCrypto.importKey(format, keyData, {
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        const internalKey = getCryptoKey(key);
        if (!(internalKey instanceof RsaPrivateKey || internalKey instanceof RsaPublicKey)) {
            throw new TypeError("key: Is not RSA CryptoKey");
        }
    }
}
class RsaPssProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.RsaPssProvider {
    constructor(){
        super(...arguments);
        this.hashAlgorithms = [
            "SHA-1",
            "SHA-256",
            "SHA-384",
            "SHA-512",
            "shake128",
            "shake256",
            "SHA3-256",
            "SHA3-384",
            "SHA3-512"
        ];
    }
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const keys = await RsaCrypto.generateKey({
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return {
            privateKey: setCryptoKey(keys.privateKey),
            publicKey: setCryptoKey(keys.publicKey)
        };
    }
    async onSign(algorithm, key, data) {
        return RsaCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onVerify(algorithm, key, signature, data) {
        return RsaCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));
    }
    async onExportKey(format, key) {
        return RsaCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const key = await RsaCrypto.importKey(format, keyData, {
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        const internalKey = getCryptoKey(key);
        if (!(internalKey instanceof RsaPrivateKey || internalKey instanceof RsaPublicKey)) {
            throw new TypeError("key: Is not RSA CryptoKey");
        }
    }
}
class ShaCrypto {
    static size(algorithm) {
        switch(algorithm.name.toUpperCase()){
            case "SHA-1":
                return 160;
            case "SHA-256":
            case "SHA3-256":
                return 256;
            case "SHA-384":
            case "SHA3-384":
                return 384;
            case "SHA-512":
            case "SHA3-512":
                return 512;
            default:
                throw new Error("Unrecognized name");
        }
    }
    static getAlgorithmName(algorithm) {
        switch(algorithm.name.toUpperCase()){
            case "SHA-1":
                return "sha1";
            case "SHA-256":
                return "sha256";
            case "SHA-384":
                return "sha384";
            case "SHA-512":
                return "sha512";
            case "SHA3-256":
                return "sha3-256";
            case "SHA3-384":
                return "sha3-384";
            case "SHA3-512":
                return "sha3-512";
            default:
                throw new Error("Unrecognized name");
        }
    }
    static digest(algorithm, data) {
        const hashAlg = this.getAlgorithmName(algorithm);
        const hash = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHash(hashAlg).update(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data)).digest();
        return new Uint8Array(hash).buffer;
    }
}
class RsaOaepProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.RsaOaepProvider {
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const keys = await RsaCrypto.generateKey({
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return {
            privateKey: setCryptoKey(keys.privateKey),
            publicKey: setCryptoKey(keys.publicKey)
        };
    }
    async onEncrypt(algorithm, key, data) {
        const internalKey = getCryptoKey(key);
        const dataView = new Uint8Array(data);
        const keySize = Math.ceil(internalKey.algorithm.modulusLength >> 3);
        const hashSize = ShaCrypto.size(internalKey.algorithm.hash) >> 3;
        const dataLength = dataView.byteLength;
        const psLength = keySize - dataLength - 2 * hashSize - 2;
        if (dataLength > keySize - 2 * hashSize - 2) {
            throw new Error("Data too large");
        }
        const message = new Uint8Array(keySize);
        const seed = message.subarray(1, hashSize + 1);
        const dataBlock = message.subarray(hashSize + 1);
        dataBlock.set(dataView, hashSize + psLength + 1);
        const labelHash = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHash(internalKey.algorithm.hash.name.replace("-", "")).update(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(algorithm.label || new Uint8Array(0))).digest();
        dataBlock.set(labelHash, 0);
        dataBlock[hashSize + psLength] = 1;
        __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].randomFillSync(seed);
        const dataBlockMask = this.mgf1(internalKey.algorithm.hash, seed, dataBlock.length);
        for(let i = 0; i < dataBlock.length; i++){
            dataBlock[i] ^= dataBlockMask[i];
        }
        const seedMask = this.mgf1(internalKey.algorithm.hash, dataBlock, seed.length);
        for(let i = 0; i < seed.length; i++){
            seed[i] ^= seedMask[i];
        }
        if (!internalKey.pem) {
            internalKey.pem = `-----BEGIN PUBLIC KEY-----\n${internalKey.data.toString("base64")}\n-----END PUBLIC KEY-----`;
        }
        const pkcs0 = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].publicEncrypt({
            key: internalKey.pem,
            padding: __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].constants.RSA_NO_PADDING
        }, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(message));
        return new Uint8Array(pkcs0).buffer;
    }
    async onDecrypt(algorithm, key, data) {
        const internalKey = getCryptoKey(key);
        const keySize = Math.ceil(internalKey.algorithm.modulusLength >> 3);
        const hashSize = ShaCrypto.size(internalKey.algorithm.hash) >> 3;
        const dataLength = data.byteLength;
        if (dataLength !== keySize) {
            throw new Error("Bad data");
        }
        if (!internalKey.pem) {
            internalKey.pem = `-----BEGIN PRIVATE KEY-----\n${internalKey.data.toString("base64")}\n-----END PRIVATE KEY-----`;
        }
        let pkcs0 = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].privateDecrypt({
            key: internalKey.pem,
            padding: __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].constants.RSA_NO_PADDING
        }, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
        const z = pkcs0[0];
        const seed = pkcs0.subarray(1, hashSize + 1);
        const dataBlock = pkcs0.subarray(hashSize + 1);
        if (z !== 0) {
            throw new Error("Decryption failed");
        }
        const seedMask = this.mgf1(internalKey.algorithm.hash, dataBlock, seed.length);
        for(let i = 0; i < seed.length; i++){
            seed[i] ^= seedMask[i];
        }
        const dataBlockMask = this.mgf1(internalKey.algorithm.hash, seed, dataBlock.length);
        for(let i = 0; i < dataBlock.length; i++){
            dataBlock[i] ^= dataBlockMask[i];
        }
        const labelHash = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHash(internalKey.algorithm.hash.name.replace("-", "")).update(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toUint8Array(algorithm.label || new Uint8Array(0))).digest();
        for(let i = 0; i < hashSize; i++){
            if (labelHash[i] !== dataBlock[i]) {
                throw new Error("Decryption failed");
            }
        }
        let psEnd = hashSize;
        for(; psEnd < dataBlock.length; psEnd++){
            const psz = dataBlock[psEnd];
            if (psz === 1) {
                break;
            }
            if (psz !== 0) {
                throw new Error("Decryption failed");
            }
        }
        if (psEnd === dataBlock.length) {
            throw new Error("Decryption failed");
        }
        pkcs0 = dataBlock.subarray(psEnd + 1);
        return new Uint8Array(pkcs0).buffer;
    }
    async onExportKey(format, key) {
        return RsaCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const key = await RsaCrypto.importKey(format, keyData, {
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        const internalKey = getCryptoKey(key);
        if (!(internalKey instanceof RsaPrivateKey || internalKey instanceof RsaPublicKey)) {
            throw new TypeError("key: Is not RSA CryptoKey");
        }
    }
    mgf1(algorithm, seed, length = 0) {
        const hashSize = ShaCrypto.size(algorithm) >> 3;
        const mask = new Uint8Array(length);
        const counter = new Uint8Array(4);
        const chunks = Math.ceil(length / hashSize);
        for(let i = 0; i < chunks; i++){
            counter[0] = i >>> 24;
            counter[1] = i >>> 16 & 255;
            counter[2] = i >>> 8 & 255;
            counter[3] = i & 255;
            const submask = mask.subarray(i * hashSize);
            let chunk = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHash(algorithm.name.replace("-", "")).update(seed).update(counter).digest();
            if (chunk.length > submask.length) {
                chunk = chunk.subarray(0, submask.length);
            }
            submask.set(chunk);
        }
        return mask;
    }
}
class RsaEsProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "RSAES-PKCS1-v1_5";
        this.usages = {
            publicKey: [
                "encrypt",
                "wrapKey"
            ],
            privateKey: [
                "decrypt",
                "unwrapKey"
            ]
        };
    }
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const keys = await RsaCrypto.generateKey({
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return {
            privateKey: setCryptoKey(keys.privateKey),
            publicKey: setCryptoKey(keys.publicKey)
        };
    }
    checkGenerateKeyParams(algorithm) {
        this.checkRequiredProperty(algorithm, "publicExponent");
        if (!(algorithm.publicExponent && algorithm.publicExponent instanceof Uint8Array)) {
            throw new TypeError("publicExponent: Missing or not a Uint8Array");
        }
        const publicExponent = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64(algorithm.publicExponent);
        if (!(publicExponent === "Aw==" || publicExponent === "AQAB")) {
            throw new TypeError("publicExponent: Must be [3] or [1,0,1]");
        }
        this.checkRequiredProperty(algorithm, "modulusLength");
        switch(algorithm.modulusLength){
            case 1024:
            case 2048:
            case 4096:
                break;
            default:
                throw new TypeError("modulusLength: Must be 1024, 2048, or 4096");
        }
    }
    async onEncrypt(algorithm, key, data) {
        const options = this.toCryptoOptions(key);
        const enc = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].publicEncrypt(options, new Uint8Array(data));
        return new Uint8Array(enc).buffer;
    }
    async onDecrypt(algorithm, key, data) {
        const options = this.toCryptoOptions(key);
        const dec = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].privateDecrypt(options, new Uint8Array(data));
        return new Uint8Array(dec).buffer;
    }
    async onExportKey(format, key) {
        return RsaCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const key = await RsaCrypto.importKey(format, keyData, {
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        const internalKey = getCryptoKey(key);
        if (!(internalKey instanceof RsaPrivateKey || internalKey instanceof RsaPublicKey)) {
            throw new TypeError("key: Is not RSA CryptoKey");
        }
    }
    toCryptoOptions(key) {
        const type = key.type.toUpperCase();
        return {
            key: `-----BEGIN ${type} KEY-----\n${getCryptoKey(key).data.toString("base64")}\n-----END ${type} KEY-----`,
            padding: __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].constants.RSA_PKCS1_PADDING
        };
    }
}
const namedOIDs = {
    "1.2.840.10045.3.1.7": "P-256",
    "P-256": "1.2.840.10045.3.1.7",
    "1.3.132.0.34": "P-384",
    "P-384": "1.3.132.0.34",
    "1.3.132.0.35": "P-521",
    "P-521": "1.3.132.0.35",
    "1.3.132.0.10": "K-256",
    "K-256": "1.3.132.0.10",
    "brainpoolP160r1": "1.3.36.3.3.2.8.1.1.1",
    "1.3.36.3.3.2.8.1.1.1": "brainpoolP160r1",
    "brainpoolP160t1": "1.3.36.3.3.2.8.1.1.2",
    "1.3.36.3.3.2.8.1.1.2": "brainpoolP160t1",
    "brainpoolP192r1": "1.3.36.3.3.2.8.1.1.3",
    "1.3.36.3.3.2.8.1.1.3": "brainpoolP192r1",
    "brainpoolP192t1": "1.3.36.3.3.2.8.1.1.4",
    "1.3.36.3.3.2.8.1.1.4": "brainpoolP192t1",
    "brainpoolP224r1": "1.3.36.3.3.2.8.1.1.5",
    "1.3.36.3.3.2.8.1.1.5": "brainpoolP224r1",
    "brainpoolP224t1": "1.3.36.3.3.2.8.1.1.6",
    "1.3.36.3.3.2.8.1.1.6": "brainpoolP224t1",
    "brainpoolP256r1": "1.3.36.3.3.2.8.1.1.7",
    "1.3.36.3.3.2.8.1.1.7": "brainpoolP256r1",
    "brainpoolP256t1": "1.3.36.3.3.2.8.1.1.8",
    "1.3.36.3.3.2.8.1.1.8": "brainpoolP256t1",
    "brainpoolP320r1": "1.3.36.3.3.2.8.1.1.9",
    "1.3.36.3.3.2.8.1.1.9": "brainpoolP320r1",
    "brainpoolP320t1": "1.3.36.3.3.2.8.1.1.10",
    "1.3.36.3.3.2.8.1.1.10": "brainpoolP320t1",
    "brainpoolP384r1": "1.3.36.3.3.2.8.1.1.11",
    "1.3.36.3.3.2.8.1.1.11": "brainpoolP384r1",
    "brainpoolP384t1": "1.3.36.3.3.2.8.1.1.12",
    "1.3.36.3.3.2.8.1.1.12": "brainpoolP384t1",
    "brainpoolP512r1": "1.3.36.3.3.2.8.1.1.13",
    "1.3.36.3.3.2.8.1.1.13": "brainpoolP512r1",
    "brainpoolP512t1": "1.3.36.3.3.2.8.1.1.14",
    "1.3.36.3.3.2.8.1.1.14": "brainpoolP512t1"
};
function getOidByNamedCurve$1(namedCurve) {
    const oid = namedOIDs[namedCurve];
    if (!oid) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError(`Cannot convert WebCrypto named curve '${namedCurve}' to OID`);
    }
    return oid;
}
class EcPrivateKey extends AsymmetricKey {
    constructor(){
        super(...arguments);
        this.type = "private";
    }
    getKey() {
        const keyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(this.data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo);
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(keyInfo.privateKey, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EcPrivateKey);
    }
    toJSON() {
        const key = this.getKey();
        const json = {
            kty: "EC",
            crv: this.algorithm.namedCurve,
            key_ops: this.usages,
            ext: this.extractable
        };
        return Object.assign(json, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonSerializer"].toJSON(key));
    }
    fromJSON(json) {
        if (!json.crv) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError(`Cannot get named curve from JWK. Property 'crv' is required`);
        }
        const keyInfo = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo();
        keyInfo.privateKeyAlgorithm.algorithm = "1.2.840.10045.2.1";
        keyInfo.privateKeyAlgorithm.parameters = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.ObjectIdentifier(getOidByNamedCurve$1(json.crv)));
        const key = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(json, {
            targetSchema: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EcPrivateKey
        });
        keyInfo.privateKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(key);
        this.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(keyInfo));
        return this;
    }
}
class EcPublicKey extends AsymmetricKey {
    constructor(){
        super(...arguments);
        this.type = "public";
    }
    getKey() {
        const keyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(this.data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo);
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EcPublicKey(keyInfo.publicKey);
    }
    toJSON() {
        const key = this.getKey();
        const json = {
            kty: "EC",
            crv: this.algorithm.namedCurve,
            key_ops: this.usages,
            ext: this.extractable
        };
        return Object.assign(json, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonSerializer"].toJSON(key));
    }
    fromJSON(json) {
        if (!json.crv) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError(`Cannot get named curve from JWK. Property 'crv' is required`);
        }
        const key = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(json, {
            targetSchema: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EcPublicKey
        });
        const keyInfo = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo();
        keyInfo.publicKeyAlgorithm.algorithm = "1.2.840.10045.2.1";
        keyInfo.publicKeyAlgorithm.parameters = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.ObjectIdentifier(getOidByNamedCurve$1(json.crv)));
        keyInfo.publicKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].toASN(key).valueHex;
        this.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(keyInfo));
        return this;
    }
}
class Sha1Provider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "SHA-1";
        this.usages = [];
    }
    async onDigest(algorithm, data) {
        return ShaCrypto.digest(algorithm, data);
    }
}
class Sha256Provider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "SHA-256";
        this.usages = [];
    }
    async onDigest(algorithm, data) {
        return ShaCrypto.digest(algorithm, data);
    }
}
class Sha384Provider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "SHA-384";
        this.usages = [];
    }
    async onDigest(algorithm, data) {
        return ShaCrypto.digest(algorithm, data);
    }
}
class Sha512Provider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "SHA-512";
        this.usages = [];
    }
    async onDigest(algorithm, data) {
        return ShaCrypto.digest(algorithm, data);
    }
}
class Sha3256Provider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "SHA3-256";
        this.usages = [];
    }
    async onDigest(algorithm, data) {
        return ShaCrypto.digest(algorithm, data);
    }
}
class Sha3384Provider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "SHA3-384";
        this.usages = [];
    }
    async onDigest(algorithm, data) {
        return ShaCrypto.digest(algorithm, data);
    }
}
class Sha3512Provider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.ProviderCrypto {
    constructor(){
        super(...arguments);
        this.name = "SHA3-512";
        this.usages = [];
    }
    async onDigest(algorithm, data) {
        return ShaCrypto.digest(algorithm, data);
    }
}
class EcCrypto {
    static async generateKey(algorithm, extractable, keyUsages) {
        const privateKey = new EcPrivateKey();
        privateKey.algorithm = algorithm;
        privateKey.extractable = extractable;
        privateKey.usages = keyUsages.filter((usage)=>this.privateKeyUsages.indexOf(usage) !== -1);
        const publicKey = new EcPublicKey();
        publicKey.algorithm = algorithm;
        publicKey.extractable = true;
        publicKey.usages = keyUsages.filter((usage)=>this.publicKeyUsages.indexOf(usage) !== -1);
        const keys = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].generateKeyPairSync("ec", {
            namedCurve: this.getOpenSSLNamedCurve(algorithm.namedCurve),
            publicKeyEncoding: {
                format: "der",
                type: "spki"
            },
            privateKeyEncoding: {
                format: "der",
                type: "pkcs8"
            }
        });
        privateKey.data = keys.privateKey;
        publicKey.data = keys.publicKey;
        const res = {
            privateKey,
            publicKey
        };
        return res;
    }
    static async sign(algorithm, key, data) {
        const cryptoAlg = ShaCrypto.getAlgorithmName(algorithm.hash);
        const signer = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createSign(cryptoAlg);
        signer.update(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
        if (!key.pem) {
            key.pem = `-----BEGIN PRIVATE KEY-----\n${key.data.toString("base64")}\n-----END PRIVATE KEY-----`;
        }
        const options = {
            key: key.pem
        };
        const signature = signer.sign(options);
        const ecSignature = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(signature, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EcDsaSignature);
        const signatureRaw = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.EcUtils.encodeSignature(ecSignature, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.EcCurves.get(key.algorithm.namedCurve).size);
        return signatureRaw.buffer;
    }
    static async verify(algorithm, key, signature, data) {
        const cryptoAlg = ShaCrypto.getAlgorithmName(algorithm.hash);
        const signer = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createVerify(cryptoAlg);
        signer.update(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data));
        if (!key.pem) {
            key.pem = `-----BEGIN PUBLIC KEY-----\n${key.data.toString("base64")}\n-----END PUBLIC KEY-----`;
        }
        const options = {
            key: key.pem
        };
        const ecSignature = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EcDsaSignature();
        const namedCurve = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.EcCurves.get(key.algorithm.namedCurve);
        const signaturePoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.EcUtils.decodeSignature(signature, namedCurve.size);
        ecSignature.r = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(signaturePoint.r);
        ecSignature.s = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toArrayBuffer(signaturePoint.s);
        const ecSignatureRaw = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(ecSignature));
        const ok = signer.verify(options, ecSignatureRaw);
        return ok;
    }
    static async deriveBits(algorithm, baseKey, length) {
        const cryptoAlg = this.getOpenSSLNamedCurve(baseKey.algorithm.namedCurve);
        const ecdh = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createECDH(cryptoAlg);
        const asnPrivateKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(baseKey.data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo);
        const asnEcPrivateKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(asnPrivateKey.privateKey, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EcPrivateKey);
        ecdh.setPrivateKey(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(asnEcPrivateKey.privateKey));
        const asnPublicKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(algorithm.public.data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo);
        const bits = ecdh.computeSecret(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(asnPublicKey.publicKey));
        if (length === null) {
            return bits;
        }
        return new Uint8Array(bits).buffer.slice(0, length >> 3);
    }
    static async exportKey(format, key) {
        switch(format.toLowerCase()){
            case "jwk":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonSerializer"].toJSON(key);
            case "pkcs8":
            case "spki":
                return new Uint8Array(key.data).buffer;
            case "raw":
                {
                    const publicKeyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(key.data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo);
                    return publicKeyInfo.publicKey;
                }
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk', 'raw', pkcs8' or 'spki'");
        }
    }
    static async importKey(format, keyData, algorithm, extractable, keyUsages) {
        switch(format.toLowerCase()){
            case "jwk":
                {
                    const jwk = keyData;
                    if (jwk.d) {
                        const asnKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(keyData, {
                            targetSchema: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EcPrivateKey
                        });
                        return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);
                    } else {
                        const asnKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(keyData, {
                            targetSchema: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EcPublicKey
                        });
                        return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);
                    }
                }
            case "raw":
                {
                    const asnKey = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EcPublicKey(keyData);
                    return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);
                }
            case "spki":
                {
                    const keyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(new Uint8Array(keyData), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo);
                    const asnKey = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EcPublicKey(keyInfo.publicKey);
                    this.assertKeyParameters(keyInfo.publicKeyAlgorithm.parameters, algorithm.namedCurve);
                    return this.importPublicKey(asnKey, algorithm, extractable, keyUsages);
                }
            case "pkcs8":
                {
                    const keyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(new Uint8Array(keyData), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo);
                    const asnKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(keyInfo.privateKey, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EcPrivateKey);
                    this.assertKeyParameters(keyInfo.privateKeyAlgorithm.parameters, algorithm.namedCurve);
                    return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);
                }
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk', 'raw', 'pkcs8' or 'spki'");
        }
    }
    static assertKeyParameters(parameters, namedCurve) {
        if (!parameters) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.CryptoError("Key info doesn't have required parameters");
        }
        let namedCurveIdentifier = "";
        try {
            namedCurveIdentifier = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(parameters, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.ObjectIdentifier).value;
        } catch (e) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.CryptoError("Cannot read key info parameters");
        }
        if (getOidByNamedCurve$1(namedCurve) !== namedCurveIdentifier) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.CryptoError("Key info parameter doesn't match to named curve");
        }
    }
    static async importPrivateKey(asnKey, algorithm, extractable, keyUsages) {
        const keyInfo = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo();
        keyInfo.privateKeyAlgorithm.algorithm = "1.2.840.10045.2.1";
        keyInfo.privateKeyAlgorithm.parameters = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.ObjectIdentifier(getOidByNamedCurve$1(algorithm.namedCurve)));
        keyInfo.privateKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(asnKey);
        const key = new EcPrivateKey();
        key.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(keyInfo));
        key.algorithm = Object.assign({}, algorithm);
        key.extractable = extractable;
        key.usages = keyUsages;
        return key;
    }
    static async importPublicKey(asnKey, algorithm, extractable, keyUsages) {
        const keyInfo = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo();
        keyInfo.publicKeyAlgorithm.algorithm = "1.2.840.10045.2.1";
        const namedCurve = getOidByNamedCurve$1(algorithm.namedCurve);
        keyInfo.publicKeyAlgorithm.parameters = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.ObjectIdentifier(namedCurve));
        keyInfo.publicKey = asnKey.value;
        const key = new EcPublicKey();
        key.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(keyInfo));
        key.algorithm = Object.assign({}, algorithm);
        key.extractable = extractable;
        key.usages = keyUsages;
        return key;
    }
    static getOpenSSLNamedCurve(curve) {
        switch(curve.toUpperCase()){
            case "P-256":
                return "prime256v1";
            case "K-256":
                return "secp256k1";
            case "P-384":
                return "secp384r1";
            case "P-521":
                return "secp521r1";
            default:
                return curve;
        }
    }
}
EcCrypto.publicKeyUsages = [
    "verify"
];
EcCrypto.privateKeyUsages = [
    "sign",
    "deriveKey",
    "deriveBits"
];
class EcdsaProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.EcdsaProvider {
    constructor(){
        super(...arguments);
        this.namedCurves = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.EcCurves.names;
        this.hashAlgorithms = [
            "SHA-1",
            "SHA-256",
            "SHA-384",
            "SHA-512",
            "shake128",
            "shake256",
            "SHA3-256",
            "SHA3-384",
            "SHA3-512"
        ];
    }
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const keys = await EcCrypto.generateKey({
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return {
            privateKey: setCryptoKey(keys.privateKey),
            publicKey: setCryptoKey(keys.publicKey)
        };
    }
    async onSign(algorithm, key, data) {
        return EcCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onVerify(algorithm, key, signature, data) {
        return EcCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));
    }
    async onExportKey(format, key) {
        return EcCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const key = await EcCrypto.importKey(format, keyData, {
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        const internalKey = getCryptoKey(key);
        if (!(internalKey instanceof EcPrivateKey || internalKey instanceof EcPublicKey)) {
            throw new TypeError("key: Is not EC CryptoKey");
        }
    }
}
class EcdhProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.EcdhProvider {
    constructor(){
        super(...arguments);
        this.namedCurves = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.EcCurves.names;
    }
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const keys = await EcCrypto.generateKey({
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return {
            privateKey: setCryptoKey(keys.privateKey),
            publicKey: setCryptoKey(keys.publicKey)
        };
    }
    async onExportKey(format, key) {
        return EcCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const key = await EcCrypto.importKey(format, keyData, {
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        const internalKey = getCryptoKey(key);
        if (!(internalKey instanceof EcPrivateKey || internalKey instanceof EcPublicKey)) {
            throw new TypeError("key: Is not EC CryptoKey");
        }
    }
    async onDeriveBits(algorithm, baseKey, length) {
        const bits = await EcCrypto.deriveBits({
            ...algorithm,
            public: getCryptoKey(algorithm.public)
        }, getCryptoKey(baseKey), length);
        return bits;
    }
}
const edOIDs = {
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.idEd448]: "Ed448",
    "ed448": __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.idEd448,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.idX448]: "X448",
    "x448": __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.idX448,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.idEd25519]: "Ed25519",
    "ed25519": __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.idEd25519,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.idX25519]: "X25519",
    "x25519": __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.idX25519
};
function getOidByNamedCurve(namedCurve) {
    const oid = edOIDs[namedCurve.toLowerCase()];
    if (!oid) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError(`Cannot convert WebCrypto named curve '${namedCurve}' to OID`);
    }
    return oid;
}
class EdPrivateKey extends AsymmetricKey {
    constructor(){
        super(...arguments);
        this.type = "private";
    }
    getKey() {
        const keyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(this.data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo);
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(keyInfo.privateKey, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.CurvePrivateKey);
    }
    toJSON() {
        const key = this.getKey();
        const json = {
            kty: "OKP",
            crv: this.algorithm.namedCurve,
            key_ops: this.usages,
            ext: this.extractable
        };
        return Object.assign(json, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonSerializer"].toJSON(key));
    }
    fromJSON(json) {
        if (!json.crv) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError(`Cannot get named curve from JWK. Property 'crv' is required`);
        }
        const keyInfo = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo();
        keyInfo.privateKeyAlgorithm.algorithm = getOidByNamedCurve(json.crv);
        const key = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(json, {
            targetSchema: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.CurvePrivateKey
        });
        keyInfo.privateKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(key);
        this.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(keyInfo));
        return this;
    }
}
class EdPublicKey extends AsymmetricKey {
    constructor(){
        super(...arguments);
        this.type = "public";
    }
    getKey() {
        const keyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(this.data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo);
        return keyInfo.publicKey;
    }
    toJSON() {
        const key = this.getKey();
        const json = {
            kty: "OKP",
            crv: this.algorithm.namedCurve,
            key_ops: this.usages,
            ext: this.extractable
        };
        return Object.assign(json, {
            x: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64Url(key)
        });
    }
    fromJSON(json) {
        if (!json.crv) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError(`Cannot get named curve from JWK. Property 'crv' is required`);
        }
        if (!json.x) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError(`Cannot get property from JWK. Property 'x' is required`);
        }
        const keyInfo = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo();
        keyInfo.publicKeyAlgorithm.algorithm = getOidByNamedCurve(json.crv);
        keyInfo.publicKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromBase64Url(json.x);
        this.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$serializer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnSerializer"].serialize(keyInfo));
        return this;
    }
}
class EdCrypto {
    static async generateKey(algorithm, extractable, keyUsages) {
        const privateKey = new EdPrivateKey();
        privateKey.algorithm = algorithm;
        privateKey.extractable = extractable;
        privateKey.usages = keyUsages.filter((usage)=>this.privateKeyUsages.indexOf(usage) !== -1);
        const publicKey = new EdPublicKey();
        publicKey.algorithm = algorithm;
        publicKey.extractable = true;
        publicKey.usages = keyUsages.filter((usage)=>this.publicKeyUsages.indexOf(usage) !== -1);
        const type = algorithm.namedCurve.toLowerCase();
        const keys = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].generateKeyPairSync(type, {
            publicKeyEncoding: {
                format: "der",
                type: "spki"
            },
            privateKeyEncoding: {
                format: "der",
                type: "pkcs8"
            }
        });
        privateKey.data = keys.privateKey;
        publicKey.data = keys.publicKey;
        const res = {
            privateKey,
            publicKey
        };
        return res;
    }
    static async sign(algorithm, key, data) {
        if (!key.pem) {
            key.pem = `-----BEGIN PRIVATE KEY-----\n${key.data.toString("base64")}\n-----END PRIVATE KEY-----`;
        }
        const options = {
            key: key.pem
        };
        const signature = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].sign(null, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data), options);
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toArrayBuffer(signature);
    }
    static async verify(algorithm, key, signature, data) {
        if (!key.pem) {
            key.pem = `-----BEGIN PUBLIC KEY-----\n${key.data.toString("base64")}\n-----END PUBLIC KEY-----`;
        }
        const options = {
            key: key.pem
        };
        const ok = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].verify(null, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data), options, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(signature));
        return ok;
    }
    static async deriveBits(algorithm, baseKey, length) {
        const publicKey = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createPublicKey({
            key: algorithm.public.data,
            format: "der",
            type: "spki"
        });
        const privateKey = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createPrivateKey({
            key: baseKey.data,
            format: "der",
            type: "pkcs8"
        });
        const bits = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].diffieHellman({
            publicKey,
            privateKey
        });
        return new Uint8Array(bits).buffer.slice(0, length >> 3);
    }
    static async exportKey(format, key) {
        switch(format.toLowerCase()){
            case "jwk":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonSerializer"].toJSON(key);
            case "pkcs8":
            case "spki":
                return new Uint8Array(key.data).buffer;
            case "raw":
                {
                    const publicKeyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(key.data, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo);
                    return publicKeyInfo.publicKey;
                }
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk', 'raw', pkcs8' or 'spki'");
        }
    }
    static async importKey(format, keyData, algorithm, extractable, keyUsages) {
        switch(format.toLowerCase()){
            case "jwk":
                {
                    const jwk = keyData;
                    if (jwk.d) {
                        const asnKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(keyData, {
                            targetSchema: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.CurvePrivateKey
                        });
                        return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);
                    } else {
                        if (!jwk.x) {
                            throw new TypeError("keyData: Cannot get required 'x' filed");
                        }
                        return this.importPublicKey(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromBase64Url(jwk.x), algorithm, extractable, keyUsages);
                    }
                }
            case "raw":
                {
                    return this.importPublicKey(keyData, algorithm, extractable, keyUsages);
                }
            case "spki":
                {
                    const keyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(new Uint8Array(keyData), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PublicKeyInfo);
                    return this.importPublicKey(keyInfo.publicKey, algorithm, extractable, keyUsages);
                }
            case "pkcs8":
                {
                    const keyInfo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(new Uint8Array(keyData), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo);
                    const asnKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$parser$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnParser"].parse(keyInfo.privateKey, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.CurvePrivateKey);
                    return this.importPrivateKey(asnKey, algorithm, extractable, keyUsages);
                }
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk', 'raw', 'pkcs8' or 'spki'");
        }
    }
    static importPrivateKey(asnKey, algorithm, extractable, keyUsages) {
        const key = new EdPrivateKey();
        key.fromJSON({
            crv: algorithm.namedCurve,
            d: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64Url(asnKey.d)
        });
        key.algorithm = Object.assign({}, algorithm);
        key.extractable = extractable;
        key.usages = keyUsages;
        return key;
    }
    static async importPublicKey(asnKey, algorithm, extractable, keyUsages) {
        const key = new EdPublicKey();
        key.fromJSON({
            crv: algorithm.namedCurve,
            x: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64Url(asnKey)
        });
        key.algorithm = Object.assign({}, algorithm);
        key.extractable = extractable;
        key.usages = keyUsages;
        return key;
    }
}
EdCrypto.publicKeyUsages = [
    "verify"
];
EdCrypto.privateKeyUsages = [
    "sign",
    "deriveKey",
    "deriveBits"
];
class EdDsaProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.EdDsaProvider {
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const keys = await EdCrypto.generateKey({
            name: this.name,
            namedCurve: algorithm.namedCurve.replace(/^ed/i, "Ed")
        }, extractable, keyUsages);
        return {
            privateKey: setCryptoKey(keys.privateKey),
            publicKey: setCryptoKey(keys.publicKey)
        };
    }
    async onSign(algorithm, key, data) {
        return EdCrypto.sign(algorithm, getCryptoKey(key), new Uint8Array(data));
    }
    async onVerify(algorithm, key, signature, data) {
        return EdCrypto.verify(algorithm, getCryptoKey(key), new Uint8Array(signature), new Uint8Array(data));
    }
    async onExportKey(format, key) {
        return EdCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const key = await EdCrypto.importKey(format, keyData, {
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
}
class EcdhEsProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.EcdhEsProvider {
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const keys = await EdCrypto.generateKey({
            name: this.name,
            namedCurve: algorithm.namedCurve.toUpperCase()
        }, extractable, keyUsages);
        return {
            privateKey: setCryptoKey(keys.privateKey),
            publicKey: setCryptoKey(keys.publicKey)
        };
    }
    async onDeriveBits(algorithm, baseKey, length) {
        const bits = await EdCrypto.deriveBits({
            ...algorithm,
            public: getCryptoKey(algorithm.public)
        }, getCryptoKey(baseKey), length);
        return bits;
    }
    async onExportKey(format, key) {
        return EdCrypto.exportKey(format, getCryptoKey(key));
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const key = await EdCrypto.importKey(format, keyData, {
            ...algorithm,
            name: this.name
        }, extractable, keyUsages);
        return setCryptoKey(key);
    }
}
class Ed25519CryptoKey extends CryptoKey {
    constructor(algorithm, extractable, usages, data){
        super();
        this.algorithm = algorithm;
        this.extractable = extractable;
        this.usages = usages;
        this.data = Buffer.from(data);
    }
    toJWK() {
        return {
            kty: "OKP",
            crv: this.algorithm.name,
            key_ops: this.usages,
            ext: this.extractable
        };
    }
}
class Ed25519PrivateKey extends Ed25519CryptoKey {
    constructor(){
        super(...arguments);
        this.type = "private";
    }
    toJWK() {
        const pubJwk = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createPublicKey({
            key: this.data,
            format: "pem"
        }).export({
            format: "jwk"
        });
        const raw = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.PemConverter.toUint8Array(this.data.toString());
        const pkcs8 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$convert$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnConvert"].parse(raw, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo);
        const d = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$convert$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnConvert"].parse(pkcs8.privateKey, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EdPrivateKey).value;
        return {
            ...super.toJWK(),
            ...pubJwk,
            d: Buffer.from(new Uint8Array(d)).toString("base64url")
        };
    }
}
class Ed25519PublicKey extends Ed25519CryptoKey {
    constructor(){
        super(...arguments);
        this.type = "public";
    }
    toJWK() {
        const jwk = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createPublicKey({
            key: this.data,
            format: "pem"
        }).export({
            format: "jwk"
        });
        return {
            ...super.toJWK(),
            ...jwk
        };
    }
}
class Ed25519Crypto {
    static async generateKey(algorithm, extractable, keyUsages) {
        const type = algorithm.name.toLowerCase();
        const keys = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].generateKeyPairSync(type, {
            publicKeyEncoding: {
                format: "pem",
                type: "spki"
            },
            privateKeyEncoding: {
                format: "pem",
                type: "pkcs8"
            }
        });
        const keyAlg = {
            name: type === "ed25519" ? "Ed25519" : "X25519"
        };
        const privateKeyUsages = keyUsages.filter((usage)=>this.privateKeyUsages.includes(usage));
        const publicKeyUsages = keyUsages.filter((usage)=>this.publicKeyUsages.includes(usage));
        return {
            privateKey: new Ed25519PrivateKey(keyAlg, extractable, privateKeyUsages, keys.privateKey),
            publicKey: new Ed25519PublicKey(keyAlg, true, publicKeyUsages, keys.publicKey)
        };
    }
    static async sign(algorithm, key, data) {
        const signature = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].sign(null, Buffer.from(data), key.data);
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toArrayBuffer(signature);
    }
    static async verify(algorithm, key, signature, data) {
        return __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].verify(null, Buffer.from(data), key.data, signature);
    }
    static async exportKey(format, key) {
        switch(format){
            case "jwk":
                return key.toJWK();
            case "pkcs8":
                {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.PemConverter.toArrayBuffer(key.data.toString());
                }
            case "spki":
                {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.PemConverter.toArrayBuffer(key.data.toString());
                }
            case "raw":
                {
                    const jwk = key.toJWK();
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].FromBase64Url(jwk.x);
                }
            default:
                return Promise.reject(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk', 'raw', pkcs8' or 'spki'"));
        }
    }
    static async importKey(format, keyData, algorithm, extractable, keyUsages) {
        switch(format){
            case "jwk":
                {
                    const jwk = keyData;
                    if (jwk.d) {
                        const privateData = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.EdPrivateKey();
                        privateData.value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toArrayBuffer(Buffer.from(jwk.d, "base64url"));
                        const pkcs8 = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.PrivateKeyInfo();
                        pkcs8.privateKeyAlgorithm.algorithm = algorithm.name.toLowerCase() === "ed25519" ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.idEd25519 : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.asn1.idX25519;
                        pkcs8.privateKey = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$convert$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnConvert"].serialize(privateData);
                        const raw = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$convert$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AsnConvert"].serialize(pkcs8);
                        const pem = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.PemConverter.fromBufferSource(raw, "PRIVATE KEY");
                        return new Ed25519PrivateKey(algorithm, extractable, keyUsages, pem);
                    } else if (jwk.x) {
                        const pubKey = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createPublicKey({
                            format: "jwk",
                            key: jwk
                        });
                        const pem = pubKey.export({
                            format: "pem",
                            type: "spki"
                        });
                        return new Ed25519PublicKey(algorithm, extractable, keyUsages, pem);
                    } else {
                        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("keyData: Cannot import JWK. 'd' or 'x' must be presented");
                    }
                }
            case "pkcs8":
                {
                    const pem = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.PemConverter.fromBufferSource(keyData, "PRIVATE KEY");
                    return new Ed25519PrivateKey(algorithm, extractable, keyUsages, pem);
                }
            case "spki":
                {
                    const pem = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.PemConverter.fromBufferSource(keyData, "PUBLIC KEY");
                    return new Ed25519PublicKey(algorithm, extractable, keyUsages, pem);
                }
            case "raw":
                {
                    const raw = keyData;
                    const key = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createPublicKey({
                        format: "jwk",
                        key: {
                            kty: "OKP",
                            crv: algorithm.name.toLowerCase() === "ed25519" ? "Ed25519" : "X25519",
                            x: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Convert"].ToBase64Url(raw)
                        }
                    });
                    const pem = key.export({
                        format: "pem",
                        type: "spki"
                    });
                    return new Ed25519PublicKey(algorithm, extractable, keyUsages, pem);
                }
            default:
                return Promise.reject(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk', 'raw', pkcs8' or 'spki'"));
        }
    }
}
Ed25519Crypto.privateKeyUsages = [
    "sign",
    "deriveBits",
    "deriveKey"
];
Ed25519Crypto.publicKeyUsages = [
    "verify"
];
class Ed25519Provider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Ed25519Provider {
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const keys = await Ed25519Crypto.generateKey(algorithm, extractable, keyUsages);
        return {
            privateKey: setCryptoKey(keys.privateKey),
            publicKey: setCryptoKey(keys.publicKey)
        };
    }
    async onSign(algorithm, key, data) {
        const internalKey = getCryptoKey(key);
        const signature = Ed25519Crypto.sign(algorithm, internalKey, new Uint8Array(data));
        return signature;
    }
    onVerify(algorithm, key, signature, data) {
        const internalKey = getCryptoKey(key);
        return Ed25519Crypto.verify(algorithm, internalKey, new Uint8Array(signature), new Uint8Array(data));
    }
    async onExportKey(format, key) {
        const internalKey = getCryptoKey(key);
        return Ed25519Crypto.exportKey(format, internalKey);
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const internalKey = await Ed25519Crypto.importKey(format, keyData, algorithm, extractable, keyUsages);
        return setCryptoKey(internalKey);
    }
}
class X25519Provider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.X25519Provider {
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const keys = await Ed25519Crypto.generateKey(algorithm, extractable, keyUsages);
        return {
            privateKey: setCryptoKey(keys.privateKey),
            publicKey: setCryptoKey(keys.publicKey)
        };
    }
    async onDeriveBits(algorithm, baseKey, length) {
        const internalBaseKey = getCryptoKey(baseKey);
        const internalPublicKey = getCryptoKey(algorithm.public);
        const publicKey = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createPublicKey({
            key: internalPublicKey.data.toString(),
            format: "pem",
            type: "spki"
        });
        const privateKey = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createPrivateKey({
            key: internalBaseKey.data.toString(),
            format: "pem",
            type: "pkcs8"
        });
        const bits = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].diffieHellman({
            publicKey,
            privateKey
        });
        return new Uint8Array(bits).buffer.slice(0, length >> 3);
    }
    async onExportKey(format, key) {
        const internalKey = getCryptoKey(key);
        return Ed25519Crypto.exportKey(format, internalKey);
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        const key = await Ed25519Crypto.importKey(format, keyData, algorithm, extractable, keyUsages);
        return setCryptoKey(key);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        if (!(getCryptoKey(key) instanceof Ed25519CryptoKey)) {
            throw new TypeError("key: Is not a Ed25519CryptoKey");
        }
    }
}
class PbkdfCryptoKey extends CryptoKey {
}
class Pbkdf2Provider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Pbkdf2Provider {
    async onDeriveBits(algorithm, baseKey, length) {
        return new Promise((resolve, reject)=>{
            const salt = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.BufferSourceConverter.toArrayBuffer(algorithm.salt);
            const hash = algorithm.hash.name.replace("-", "");
            __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].pbkdf2(getCryptoKey(baseKey).data, __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(salt), algorithm.iterations, length >> 3, hash, (err, derivedBits)=>{
                if (err) {
                    reject(err);
                } else {
                    resolve(new Uint8Array(derivedBits).buffer);
                }
            });
        });
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        if (format === "raw") {
            const key = new PbkdfCryptoKey();
            key.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(keyData);
            key.algorithm = {
                name: this.name
            };
            key.extractable = false;
            key.usages = keyUsages;
            return setCryptoKey(key);
        }
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'raw'");
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        if (!(getCryptoKey(key) instanceof PbkdfCryptoKey)) {
            throw new TypeError("key: Is not PBKDF CryptoKey");
        }
    }
}
class HmacCryptoKey extends CryptoKey {
    get alg() {
        const hash = this.algorithm.hash.name.toUpperCase();
        return `HS${hash.replace("SHA-", "")}`;
    }
    set alg(value) {}
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$tslib$40$2$2e$8$2e$1$2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["__decorate"])([
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonProp"])({
        name: "k",
        converter: JsonBase64UrlConverter
    })
], HmacCryptoKey.prototype, "data", void 0);
class HmacProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.HmacProvider {
    async onGenerateKey(algorithm, extractable, keyUsages) {
        const length = (algorithm.length || this.getDefaultLength(algorithm.hash.name)) >> 3 << 3;
        const key = new HmacCryptoKey();
        key.algorithm = {
            ...algorithm,
            length,
            name: this.name
        };
        key.extractable = extractable;
        key.usages = keyUsages;
        key.data = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].randomBytes(length >> 3);
        return setCryptoKey(key);
    }
    async onSign(algorithm, key, data) {
        const cryptoAlg = ShaCrypto.getAlgorithmName(key.algorithm.hash);
        const hmac = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHmac(cryptoAlg, getCryptoKey(key).data).update(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data)).digest();
        return new Uint8Array(hmac).buffer;
    }
    async onVerify(algorithm, key, signature, data) {
        const cryptoAlg = ShaCrypto.getAlgorithmName(key.algorithm.hash);
        const hmac = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHmac(cryptoAlg, getCryptoKey(key).data).update(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data)).digest();
        return hmac.compare(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(signature)) === 0;
    }
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        let key;
        switch(format.toLowerCase()){
            case "jwk":
                key = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonParser"].fromJSON(keyData, {
                    targetSchema: HmacCryptoKey
                });
                break;
            case "raw":
                key = new HmacCryptoKey();
                key.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(keyData);
                break;
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk' or 'raw'");
        }
        key.algorithm = {
            hash: {
                name: algorithm.hash.name
            },
            name: this.name,
            length: key.data.length << 3
        };
        key.extractable = extractable;
        key.usages = keyUsages;
        return setCryptoKey(key);
    }
    async onExportKey(format, key) {
        switch(format.toLowerCase()){
            case "jwk":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["JsonSerializer"].toJSON(getCryptoKey(key));
            case "raw":
                return new Uint8Array(getCryptoKey(key).data).buffer;
            default:
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("format: Must be 'jwk' or 'raw'");
        }
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        if (!(getCryptoKey(key) instanceof HmacCryptoKey)) {
            throw new TypeError("key: Is not HMAC CryptoKey");
        }
    }
}
class HkdfCryptoKey extends CryptoKey {
}
class HkdfProvider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.HkdfProvider {
    async onImportKey(format, keyData, algorithm, extractable, keyUsages) {
        if (format.toLowerCase() !== "raw") {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.OperationError("Operation not supported");
        }
        const key = new HkdfCryptoKey();
        key.data = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(keyData);
        key.algorithm = {
            name: this.name
        };
        key.extractable = extractable;
        key.usages = keyUsages;
        return setCryptoKey(key);
    }
    async onDeriveBits(params, baseKey, length) {
        const hash = params.hash.name.replace("-", "");
        const hashLength = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHash(hash).digest().length;
        const byteLength = length / 8;
        const info = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toUint8Array(params.info);
        const PRK = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHmac(hash, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toUint8Array(params.salt)).update(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BufferSourceConverter"].toUint8Array(getCryptoKey(baseKey).data)).digest();
        const blocks = [
            __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].alloc(0)
        ];
        const blockCount = Math.ceil(byteLength / hashLength) + 1;
        for(let i = 1; i < blockCount; ++i){
            blocks.push(__TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHmac(hash, PRK).update(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat([
                blocks[i - 1],
                info,
                __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from([
                    i
                ])
            ])).digest());
        }
        return __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].concat(blocks).slice(0, byteLength);
    }
    checkCryptoKey(key, keyUsage) {
        super.checkCryptoKey(key, keyUsage);
        if (!(getCryptoKey(key) instanceof HkdfCryptoKey)) {
            throw new TypeError("key: Is not HKDF CryptoKey");
        }
    }
}
class ShakeCrypto {
    static digest(algorithm, data) {
        const hash = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].createHash(algorithm.name.toLowerCase(), {
            outputLength: algorithm.length
        }).update(__TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(data)).digest();
        return new Uint8Array(hash).buffer;
    }
}
class Shake128Provider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Shake128Provider {
    async onDigest(algorithm, data) {
        return ShakeCrypto.digest(algorithm, data);
    }
}
class Shake256Provider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Shake256Provider {
    async onDigest(algorithm, data) {
        return ShakeCrypto.digest(algorithm, data);
    }
}
class SubtleCrypto extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.SubtleCrypto {
    constructor(){
        var _a;
        super();
        this.providers.set(new AesCbcProvider());
        this.providers.set(new AesCtrProvider());
        this.providers.set(new AesGcmProvider());
        this.providers.set(new AesCmacProvider());
        this.providers.set(new AesKwProvider());
        this.providers.set(new AesEcbProvider());
        const ciphers = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].getCiphers();
        if (ciphers.includes("des-cbc")) {
            this.providers.set(new DesCbcProvider());
        }
        this.providers.set(new DesEde3CbcProvider());
        this.providers.set(new RsaSsaProvider());
        this.providers.set(new RsaPssProvider());
        this.providers.set(new RsaOaepProvider());
        this.providers.set(new RsaEsProvider());
        this.providers.set(new EcdsaProvider());
        this.providers.set(new EcdhProvider());
        this.providers.set(new Sha1Provider());
        this.providers.set(new Sha256Provider());
        this.providers.set(new Sha384Provider());
        this.providers.set(new Sha512Provider());
        this.providers.set(new Pbkdf2Provider());
        this.providers.set(new HmacProvider());
        this.providers.set(new HkdfProvider());
        const nodeMajorVersion = (_a = /^v(\d+)/.exec(__TURBOPACK__imported__module__$5b$externals$5d2f$process__$5b$external$5d$__$28$process$2c$__cjs$29$__.version)) === null || _a === void 0 ? void 0 : _a[1];
        if (nodeMajorVersion && parseInt(nodeMajorVersion, 10) >= 12) {
            this.providers.set(new Shake128Provider());
            this.providers.set(new Shake256Provider());
        }
        const hashes = __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].getHashes();
        if (hashes.includes("sha3-256")) {
            this.providers.set(new Sha3256Provider());
        }
        if (hashes.includes("sha3-384")) {
            this.providers.set(new Sha3384Provider());
        }
        if (hashes.includes("sha3-512")) {
            this.providers.set(new Sha3512Provider());
        }
        if (nodeMajorVersion && parseInt(nodeMajorVersion, 10) >= 14) {
            this.providers.set(new EdDsaProvider());
            this.providers.set(new EcdhEsProvider());
            this.providers.set(new Ed25519Provider());
            this.providers.set(new X25519Provider());
        }
    }
}
class Crypto extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.Crypto {
    constructor(){
        super(...arguments);
        this.subtle = new SubtleCrypto();
    }
    getRandomValues(array) {
        if (!ArrayBuffer.isView(array)) {
            throw new TypeError("Failed to execute 'getRandomValues' on 'Crypto': parameter 1 is not of type 'ArrayBufferView'");
        }
        const buffer = __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__["Buffer"].from(array.buffer, array.byteOffset, array.byteLength);
        __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].randomFillSync(buffer);
        return array;
    }
}
;
}}),
"[project]/node_modules/.pnpm/@peculiar+webcrypto@1.5.0/node_modules/@peculiar/webcrypto/build/webcrypto.es.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$webcrypto$2d$core$40$1$2e$8$2e$1$2f$node_modules$2f$webcrypto$2d$core$2f$build$2f$webcrypto$2d$core$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/webcrypto-core@1.8.1/node_modules/webcrypto-core/build/webcrypto-core.es.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$externals$5d2f$buffer__$5b$external$5d$__$28$buffer$2c$__cjs$29$__ = __turbopack_import__("[externals]/buffer [external] (buffer, cjs)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__ = __turbopack_import__("[externals]/crypto [external] (crypto, cjs)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$process__$5b$external$5d$__$28$process$2c$__cjs$29$__ = __turbopack_import__("[externals]/process [external] (process, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$json$2d$schema$40$1$2e$1$2e$12$2f$node_modules$2f40$peculiar$2f$json$2d$schema$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+json-schema@1.1.12/node_modules/@peculiar/json-schema/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$pvtsutils$40$1$2e$3$2e$6$2f$node_modules$2f$pvtsutils$2f$build$2f$index$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/pvtsutils@1.3.6/node_modules/pvtsutils/build/index.es.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$asn1$2d$schema$40$2$2e$3$2e$15$2f$node_modules$2f40$peculiar$2f$asn1$2d$schema$2f$build$2f$es2015$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+asn1-schema@2.3.15/node_modules/@peculiar/asn1-schema/build/es2015/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$webcrypto$40$1$2e$5$2e$0$2f$node_modules$2f40$peculiar$2f$webcrypto$2f$build$2f$webcrypto$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+webcrypto@1.5.0/node_modules/@peculiar/webcrypto/build/webcrypto.es.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/encryption/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ENCRYPTING_CHUNK_SIZE": (()=>ENCRYPTING_CHUNK_SIZE),
    "crypto": (()=>crypto),
    "decryptFile": (()=>decryptFile),
    "encryptFile": (()=>encryptFile),
    "getKeyFromPassword": (()=>getKeyFromPassword)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$webcrypto$40$1$2e$5$2e$0$2f$node_modules$2f40$peculiar$2f$webcrypto$2f$build$2f$webcrypto$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+webcrypto@1.5.0/node_modules/@peculiar/webcrypto/build/webcrypto.es.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$utils$2f$async$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/utils/async.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$webcrypto$40$1$2e$5$2e$0$2f$node_modules$2f40$peculiar$2f$webcrypto$2f$build$2f$webcrypto$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@peculiar+webcrypto@1.5.0/node_modules/@peculiar/webcrypto/build/webcrypto.es.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/protobuf/OnchainMetadata.js [app-route] (ecmascript)");
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __await = this && this.__await || function(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
};
var __asyncValues = this && this.__asyncValues || function(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
};
var __asyncGenerator = this && this.__asyncGenerator || function(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function awaitReturn(f) {
        return function(v) {
            return Promise.resolve(v).then(f, reject);
        };
    }
    function verb(n, f) {
        if (g[n]) {
            i[n] = function(v) {
                return new Promise(function(a, b) {
                    q.push([
                        n,
                        v,
                        a,
                        b
                    ]) > 1 || resume(n, v);
                });
            };
            if (f) i[n] = f(i[n]);
        }
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
};
;
;
;
const crypto = ("TURBOPACK compile-time truthy", 1) ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$peculiar$2b$webcrypto$40$1$2e$5$2e$0$2f$node_modules$2f40$peculiar$2f$webcrypto$2f$build$2f$webcrypto$2e$es$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Crypto"]() : ("TURBOPACK unreachable", undefined);
const ENCRYPTING_CHUNK_SIZE = 1024 * 1024;
const IV_SIZE = 16;
const TAG_SIZE = 16;
const ENCRYPTED_CHUNK_SIZE = ENCRYPTING_CHUNK_SIZE + IV_SIZE + TAG_SIZE;
const SALT_SIZE = 32;
const getKeyFromPassword = (_a)=>__awaiter(void 0, [
        _a
    ], void 0, function*({ password, salt }) {
        const encoder = new TextEncoder();
        const saltHash = typeof salt === 'string' ? yield crypto.subtle.digest('SHA-256', encoder.encode(salt)) : salt;
        const keyMaterial = yield crypto.subtle.importKey('raw', encoder.encode(password), 'PBKDF2', false, [
            'deriveBits',
            'deriveKey'
        ]);
        return crypto.subtle.deriveKey({
            name: 'PBKDF2',
            salt: saltHash,
            iterations: 100000,
            hash: 'SHA-256'
        }, keyMaterial, {
            name: 'AES-GCM',
            length: 256
        }, false, [
            'encrypt',
            'decrypt'
        ]);
    });
const encryptFile = function(file_1, password_1, _a) {
    return __asyncGenerator(this, arguments, function*(file, password, { chunkSize = ENCRYPTING_CHUNK_SIZE, algorithm }) {
        var _b, e_1, _c, _d;
        if (algorithm !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["EncryptionAlgorithm"].AES_256_GCM) {
            throw new Error('Unsupported encryption algorithm');
        }
        const salt = crypto.getRandomValues(Buffer.alloc(SALT_SIZE));
        const key = yield __await(getKeyFromPassword({
            password,
            salt
        }));
        yield yield __await(salt);
        try {
            for(var _e = true, _f = __asyncValues((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$utils$2f$async$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["asyncByChunk"])(file, chunkSize)), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true){
                _d = _g.value;
                _e = false;
                const chunk = _d;
                const iv = crypto.getRandomValues(new Uint8Array(IV_SIZE));
                const encrypted = yield __await(crypto.subtle.encrypt({
                    name: 'AES-GCM',
                    iv
                }, key, chunk));
                yield yield __await(Buffer.concat([
                    Buffer.from(iv),
                    Buffer.from(encrypted)
                ]));
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));
            } finally{
                if (e_1) throw e_1.error;
            }
        }
    });
};
const decryptFile = function(file_1, password_1, _a) {
    return __asyncGenerator(this, arguments, function*(file, password, { chunkSize = ENCRYPTED_CHUNK_SIZE, algorithm }) {
        var _b, e_2, _c, _d;
        if (algorithm !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["EncryptionAlgorithm"].AES_256_GCM) {
            throw new Error('Unsupported encryption algorithm');
        }
        let key = undefined;
        let chunks = Buffer.alloc(0);
        try {
            for(var _e = true, file_2 = __asyncValues(file), file_2_1; file_2_1 = yield __await(file_2.next()), _b = file_2_1.done, !_b; _e = true){
                _d = file_2_1.value;
                _e = false;
                const bufferSlice = _d;
                chunks = Buffer.concat([
                    chunks,
                    bufferSlice
                ]);
                if (chunks.length >= SALT_SIZE && !key) {
                    const salt = chunks.subarray(0, SALT_SIZE);
                    key = yield __await(getKeyFromPassword({
                        password,
                        salt
                    }));
                    chunks = chunks.subarray(SALT_SIZE);
                }
                while(key && chunks.length >= chunkSize){
                    const iv = chunks.subarray(0, IV_SIZE);
                    const encryptedChunk = chunks.subarray(IV_SIZE, chunkSize);
                    const decrypted = yield __await(crypto.subtle.decrypt({
                        name: 'AES-GCM',
                        iv
                    }, key, encryptedChunk));
                    chunks = chunks.subarray(chunkSize);
                    yield yield __await(Buffer.from(decrypted));
                }
            }
        } catch (e_2_1) {
            e_2 = {
                error: e_2_1
            };
        } finally{
            try {
                if (!_e && !_b && (_c = file_2.return)) yield __await(_c.call(file_2));
            } finally{
                if (e_2) throw e_2.error;
            }
        }
        if (key && chunks.length > 0) {
            const iv = chunks.subarray(0, IV_SIZE);
            const chunk = chunks.subarray(IV_SIZE, chunkSize);
            const decrypted = yield __await(crypto.subtle.decrypt({
                name: 'AES-GCM',
                iv
            }, key, chunk));
            yield yield __await(Buffer.from(decrypted));
        }
    });
};
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
;
;
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/cid/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$compression$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/compression/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$encryption$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/encryption/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CID": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"]),
    "chunkBuffer": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["chunkBuffer"]),
    "createNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"]),
    "decodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["decode"]),
    "encodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["encode"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$multiformats$40$13$2e$3$2e$2$2f$node_modules$2f$multiformats$2f$dist$2f$src$2f$cid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$util$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/util.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$ipld$2b$dag$2d$pb$40$4$2e$1$2e$3$2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CID": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["CID"]),
    "chunkBuffer": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["chunkBuffer"]),
    "createNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createNode"]),
    "decodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decodeNode"]),
    "encodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["encodeNode"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/index.js [app-route] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CID": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CID"]),
    "DEFAULT_MAX_CHUNK_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_MAX_CHUNK_SIZE"]),
    "DEFAULT_MAX_LINK_PER_NODE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_MAX_LINK_PER_NODE"]),
    "DEFAULT_NODE_MAX_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_NODE_MAX_SIZE"]),
    "LINK_SIZE_IN_BYTES": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LINK_SIZE_IN_BYTES"]),
    "MAX_NAME_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MAX_NAME_SIZE"]),
    "NODE_METADATA_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["NODE_METADATA_SIZE"]),
    "chunkBuffer": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["chunkBuffer"]),
    "createChunkedFileIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createChunkedFileIpldNode"]),
    "createChunkedMetadataIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createChunkedMetadataIpldNode"]),
    "createFileChunkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createFileChunkIpldNode"]),
    "createFileInlinkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createFileInlinkIpldNode"]),
    "createFolderInlinkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createFolderInlinkIpldNode"]),
    "createFolderIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createFolderIpldNode"]),
    "createMetadataChunkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createMetadataChunkIpldNode"]),
    "createMetadataInlinkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createMetadataInlinkIpldNode"]),
    "createMetadataNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createMetadataNode"]),
    "createNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"]),
    "createSingleFileIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createSingleFileIpldNode"]),
    "createSingleMetadataIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createSingleMetadataIpldNode"]),
    "decodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeNode"]),
    "encodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeNode"]),
    "ensureNodeMaxSize": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ensureNodeMaxSize"]),
    "fileBuilders": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$builders$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fileBuilders"]),
    "metadataBuilders": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$builders$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["metadataBuilders"]),
    "processBufferToIPLDFormatFromChunks": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["processBufferToIPLDFormatFromChunks"]),
    "processChunksToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["processChunksToIPLDFormat"]),
    "processFileToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["processFileToIPLDFormat"]),
    "processFolderToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["processFolderToIPLDFormat"]),
    "processMetadataToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["processMetadataToIPLDFormat"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$builders$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/builders.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$chunker$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/chunker.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$nodes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/nodes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/utils.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CID": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["CID"]),
    "DEFAULT_MAX_CHUNK_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["DEFAULT_MAX_CHUNK_SIZE"]),
    "DEFAULT_MAX_LINK_PER_NODE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["DEFAULT_MAX_LINK_PER_NODE"]),
    "DEFAULT_NODE_MAX_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["DEFAULT_NODE_MAX_SIZE"]),
    "LINK_SIZE_IN_BYTES": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["LINK_SIZE_IN_BYTES"]),
    "MAX_NAME_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["MAX_NAME_SIZE"]),
    "NODE_METADATA_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["NODE_METADATA_SIZE"]),
    "chunkBuffer": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["chunkBuffer"]),
    "createChunkedFileIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createChunkedFileIpldNode"]),
    "createChunkedMetadataIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createChunkedMetadataIpldNode"]),
    "createFileChunkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createFileChunkIpldNode"]),
    "createFileInlinkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createFileInlinkIpldNode"]),
    "createFolderInlinkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createFolderInlinkIpldNode"]),
    "createFolderIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createFolderIpldNode"]),
    "createMetadataChunkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createMetadataChunkIpldNode"]),
    "createMetadataInlinkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createMetadataInlinkIpldNode"]),
    "createMetadataNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createMetadataNode"]),
    "createNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createNode"]),
    "createSingleFileIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createSingleFileIpldNode"]),
    "createSingleMetadataIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createSingleMetadataIpldNode"]),
    "decodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decodeNode"]),
    "encodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["encodeNode"]),
    "ensureNodeMaxSize": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["ensureNodeMaxSize"]),
    "fileBuilders": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["fileBuilders"]),
    "metadataBuilders": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["metadataBuilders"]),
    "processBufferToIPLDFormatFromChunks": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["processBufferToIPLDFormatFromChunks"]),
    "processChunksToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["processChunksToIPLDFormat"]),
    "processFileToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["processFileToIPLDFormat"]),
    "processFolderToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["processFolderToIPLDFormat"]),
    "processMetadataToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["processMetadataToIPLDFormat"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/index.js [app-route] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/index.js [app-route] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "childrenMetadataFromNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$folder$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["childrenMetadataFromNode"]),
    "fileMetadata": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$file$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fileMetadata"]),
    "folderMetadata": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$folder$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["folderMetadata"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/base.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$file$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/file.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$folder$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/folder.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "childrenMetadataFromNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["childrenMetadataFromNode"]),
    "fileMetadata": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["fileMetadata"]),
    "folderMetadata": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["folderMetadata"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/index.js [app-route] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CompressionAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CompressionAlgorithm"]),
    "CompressionOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CompressionOptions"]),
    "EncryptionAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["EncryptionAlgorithm"]),
    "EncryptionOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["EncryptionOptions"]),
    "FileUploadOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["FileUploadOptions"]),
    "IPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["IPLDNodeData"]),
    "MetadataType": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"]),
    "decodeIPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeIPLDNodeData"]),
    "encodeIPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$protobuf$2f$OnchainMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/protobuf/OnchainMetadata.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/utils.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CompressionAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["CompressionAlgorithm"]),
    "CompressionOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["CompressionOptions"]),
    "EncryptionAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EncryptionAlgorithm"]),
    "EncryptionOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EncryptionOptions"]),
    "FileUploadOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["FileUploadOptions"]),
    "IPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["IPLDNodeData"]),
    "MetadataType": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["MetadataType"]),
    "decodeIPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decodeIPLDNodeData"]),
    "encodeIPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["encodeIPLDNodeData"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CompressionAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CompressionAlgorithm"]),
    "CompressionOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CompressionOptions"]),
    "EncryptionAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["EncryptionAlgorithm"]),
    "EncryptionOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["EncryptionOptions"]),
    "FileUploadOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["FileUploadOptions"]),
    "IPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["IPLDNodeData"]),
    "MetadataType": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"]),
    "childrenMetadataFromNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["childrenMetadataFromNode"]),
    "decodeIPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeIPLDNodeData"]),
    "encodeIPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"]),
    "fileMetadata": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fileMetadata"]),
    "folderMetadata": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["folderMetadata"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$offchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/offchain/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$onchain$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/onchain/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CompressionAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["CompressionAlgorithm"]),
    "CompressionOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["CompressionOptions"]),
    "EncryptionAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EncryptionAlgorithm"]),
    "EncryptionOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EncryptionOptions"]),
    "FileUploadOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["FileUploadOptions"]),
    "IPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["IPLDNodeData"]),
    "MetadataType": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["MetadataType"]),
    "childrenMetadataFromNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["childrenMetadataFromNode"]),
    "decodeIPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decodeIPLDNodeData"]),
    "encodeIPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["encodeIPLDNodeData"]),
    "fileMetadata": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["fileMetadata"]),
    "folderMetadata": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["folderMetadata"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript) <exports>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js [app-route] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BLAKE3_CODE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["BLAKE3_CODE"]),
    "CID": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CID"]),
    "COMPRESSION_CHUNK_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$compression$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["COMPRESSION_CHUNK_SIZE"]),
    "CompressionAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CompressionAlgorithm"]),
    "CompressionOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CompressionOptions"]),
    "DEFAULT_MAX_CHUNK_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_MAX_CHUNK_SIZE"]),
    "DEFAULT_MAX_LINK_PER_NODE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_MAX_LINK_PER_NODE"]),
    "DEFAULT_NODE_MAX_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_NODE_MAX_SIZE"]),
    "ENCRYPTING_CHUNK_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$encryption$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ENCRYPTING_CHUNK_SIZE"]),
    "EncryptionAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["EncryptionAlgorithm"]),
    "EncryptionOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["EncryptionOptions"]),
    "FileUploadOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["FileUploadOptions"]),
    "IPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["IPLDNodeData"]),
    "LINK_SIZE_IN_BYTES": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LINK_SIZE_IN_BYTES"]),
    "MAX_NAME_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MAX_NAME_SIZE"]),
    "MetadataType": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MetadataType"]),
    "NODE_METADATA_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["NODE_METADATA_SIZE"]),
    "blake3HashFromCid": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["blake3HashFromCid"]),
    "childrenMetadataFromNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["childrenMetadataFromNode"]),
    "chunkBuffer": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["chunkBuffer"]),
    "cidFromBlakeHash": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidFromBlakeHash"]),
    "cidOfNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidOfNode"]),
    "cidToString": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cidToString"]),
    "compressFile": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$compression$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["compressFile"]),
    "createChunkedFileIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createChunkedFileIpldNode"]),
    "createChunkedMetadataIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createChunkedMetadataIpldNode"]),
    "createFileChunkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createFileChunkIpldNode"]),
    "createFileInlinkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createFileInlinkIpldNode"]),
    "createFolderInlinkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createFolderInlinkIpldNode"]),
    "createFolderIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createFolderIpldNode"]),
    "createMetadataChunkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createMetadataChunkIpldNode"]),
    "createMetadataInlinkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createMetadataInlinkIpldNode"]),
    "createMetadataNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createMetadataNode"]),
    "createNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createNode"]),
    "createSingleFileIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createSingleFileIpldNode"]),
    "createSingleMetadataIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createSingleMetadataIpldNode"]),
    "crypto": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$encryption$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["crypto"]),
    "decodeIPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeIPLDNodeData"]),
    "decodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeNode"]),
    "decompressFile": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$compression$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decompressFile"]),
    "decryptFile": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$encryption$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decryptFile"]),
    "encodeIPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeIPLDNodeData"]),
    "encodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeNode"]),
    "encryptFile": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$encryption$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encryptFile"]),
    "ensureNodeMaxSize": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ensureNodeMaxSize"]),
    "fileBuilders": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fileBuilders"]),
    "fileMetadata": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fileMetadata"]),
    "folderMetadata": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["folderMetadata"]),
    "getKeyFromPassword": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$encryption$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getKeyFromPassword"]),
    "metadataBuilders": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["metadataBuilders"]),
    "processBufferToIPLDFormatFromChunks": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["processBufferToIPLDFormatFromChunks"]),
    "processChunksToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["processChunksToIPLDFormat"]),
    "processFileToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["processFileToIPLDFormat"]),
    "processFolderToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["processFolderToIPLDFormat"]),
    "processMetadataToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["processMetadataToIPLDFormat"]),
    "stringToCid": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["stringToCid"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$cid$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/cid/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$compression$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/compression/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$encryption$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/encryption/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$ipld$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/ipld/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$metadata$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/metadata/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BLAKE3_CODE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["BLAKE3_CODE"]),
    "CID": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["CID"]),
    "COMPRESSION_CHUNK_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["COMPRESSION_CHUNK_SIZE"]),
    "CompressionAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["CompressionAlgorithm"]),
    "CompressionOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["CompressionOptions"]),
    "DEFAULT_MAX_CHUNK_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["DEFAULT_MAX_CHUNK_SIZE"]),
    "DEFAULT_MAX_LINK_PER_NODE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["DEFAULT_MAX_LINK_PER_NODE"]),
    "DEFAULT_NODE_MAX_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["DEFAULT_NODE_MAX_SIZE"]),
    "ENCRYPTING_CHUNK_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["ENCRYPTING_CHUNK_SIZE"]),
    "EncryptionAlgorithm": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EncryptionAlgorithm"]),
    "EncryptionOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["EncryptionOptions"]),
    "FileUploadOptions": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["FileUploadOptions"]),
    "IPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["IPLDNodeData"]),
    "LINK_SIZE_IN_BYTES": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["LINK_SIZE_IN_BYTES"]),
    "MAX_NAME_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["MAX_NAME_SIZE"]),
    "MetadataType": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["MetadataType"]),
    "NODE_METADATA_SIZE": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["NODE_METADATA_SIZE"]),
    "blake3HashFromCid": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["blake3HashFromCid"]),
    "childrenMetadataFromNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["childrenMetadataFromNode"]),
    "chunkBuffer": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["chunkBuffer"]),
    "cidFromBlakeHash": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["cidFromBlakeHash"]),
    "cidOfNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["cidOfNode"]),
    "cidToString": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["cidToString"]),
    "compressFile": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["compressFile"]),
    "createChunkedFileIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createChunkedFileIpldNode"]),
    "createChunkedMetadataIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createChunkedMetadataIpldNode"]),
    "createFileChunkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createFileChunkIpldNode"]),
    "createFileInlinkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createFileInlinkIpldNode"]),
    "createFolderInlinkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createFolderInlinkIpldNode"]),
    "createFolderIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createFolderIpldNode"]),
    "createMetadataChunkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createMetadataChunkIpldNode"]),
    "createMetadataInlinkIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createMetadataInlinkIpldNode"]),
    "createMetadataNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createMetadataNode"]),
    "createNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createNode"]),
    "createSingleFileIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createSingleFileIpldNode"]),
    "createSingleMetadataIpldNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["createSingleMetadataIpldNode"]),
    "crypto": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["crypto"]),
    "decodeIPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decodeIPLDNodeData"]),
    "decodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decodeNode"]),
    "decompressFile": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decompressFile"]),
    "decryptFile": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["decryptFile"]),
    "encodeIPLDNodeData": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["encodeIPLDNodeData"]),
    "encodeNode": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["encodeNode"]),
    "encryptFile": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["encryptFile"]),
    "ensureNodeMaxSize": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["ensureNodeMaxSize"]),
    "fileBuilders": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["fileBuilders"]),
    "fileMetadata": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["fileMetadata"]),
    "folderMetadata": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["folderMetadata"]),
    "getKeyFromPassword": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["getKeyFromPassword"]),
    "metadataBuilders": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["metadataBuilders"]),
    "processBufferToIPLDFormatFromChunks": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["processBufferToIPLDFormatFromChunks"]),
    "processChunksToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["processChunksToIPLDFormat"]),
    "processFileToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["processFileToIPLDFormat"]),
    "processFolderToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["processFolderToIPLDFormat"]),
    "processMetadataToIPLDFormat": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["processMetadataToIPLDFormat"]),
    "stringToCid": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__["stringToCid"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$autonomys$2b$auto$2d$dag$2d$data$40$1$2e$3$2e$1$2f$node_modules$2f40$autonomys$2f$auto$2d$dag$2d$data$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js [app-route] (ecmascript) <exports>");
}}),

};

//# sourceMappingURL=node_modules__pnpm_b5eef7._.js.map