"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tonconnect+ui@2.0.11_encoding@0.1.13";
exports.ids = ["vendor-chunks/@tonconnect+ui@2.0.11_encoding@0.1.13"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@tonconnect+ui@2.0.11_encoding@0.1.13/node_modules/@tonconnect/ui/lib/index.mjs":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tonconnect+ui@2.0.11_encoding@0.1.13/node_modules/@tonconnect/ui/lib/index.mjs ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BadRequestError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.BadRequestError),\n/* harmony export */   BrowserEventDispatcher: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.BrowserEventDispatcher),\n/* harmony export */   CHAIN: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CHAIN),\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES),\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CONNECT_ITEM_ERROR_CODES),\n/* harmony export */   FetchWalletsError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.FetchWalletsError),\n/* harmony export */   LocalstorageNotFoundError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.LocalstorageNotFoundError),\n/* harmony export */   ParseHexError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.ParseHexError),\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES),\n/* harmony export */   THEME: () => (/* binding */ THEME),\n/* harmony export */   TonConnect: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect),\n/* harmony export */   TonConnectError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError),\n/* harmony export */   TonConnectUI: () => (/* binding */ TonConnectUI),\n/* harmony export */   TonConnectUIError: () => (/* binding */ TonConnectUIError),\n/* harmony export */   UnknownAppError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.UnknownAppError),\n/* harmony export */   UnknownError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.UnknownError),\n/* harmony export */   UserRejectsError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.UserRejectsError),\n/* harmony export */   WalletAlreadyConnectedError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletAlreadyConnectedError),\n/* harmony export */   WalletNotConnectedError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletNotConnectedError),\n/* harmony export */   WalletNotInjectedError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletNotInjectedError),\n/* harmony export */   WalletsListManager: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletsListManager),\n/* harmony export */   WrongAddressError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WrongAddressError),\n/* harmony export */   createConnectionCompletedEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionCompletedEvent),\n/* harmony export */   createConnectionErrorEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionErrorEvent),\n/* harmony export */   createConnectionRestoringCompletedEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringCompletedEvent),\n/* harmony export */   createConnectionRestoringErrorEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringErrorEvent),\n/* harmony export */   createConnectionRestoringStartedEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringStartedEvent),\n/* harmony export */   createConnectionStartedEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionStartedEvent),\n/* harmony export */   createDisconnectionEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDisconnectionEvent),\n/* harmony export */   createRequestVersionEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createRequestVersionEvent),\n/* harmony export */   createResponseVersionEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createResponseVersionEvent),\n/* harmony export */   createTransactionSentForSignatureEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSentForSignatureEvent),\n/* harmony export */   createTransactionSignedEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSignedEvent),\n/* harmony export */   createTransactionSigningFailedEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSigningFailedEvent),\n/* harmony export */   createVersionInfo: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createVersionInfo),\n/* harmony export */   encodeTelegramUrlParameters: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.encodeTelegramUrlParameters),\n/* harmony export */   isTelegramUrl: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl),\n/* harmony export */   isWalletInfoCurrentlyEmbedded: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded),\n/* harmony export */   isWalletInfoCurrentlyInjected: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected),\n/* harmony export */   isWalletInfoInjectable: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoInjectable),\n/* harmony export */   isWalletInfoInjected: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoInjected),\n/* harmony export */   isWalletInfoRemote: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote),\n/* harmony export */   toUserFriendlyAddress: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.toUserFriendlyAddress)\n/* harmony export */ });\n/* harmony import */ var _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tonconnect/sdk */ \"(ssr)/./node_modules/.pnpm/@tonconnect+sdk@3.0.6_encoding@0.1.13/node_modules/@tonconnect/sdk/lib/esm/index.mjs\");\n/* harmony import */ var ua_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ua-parser-js */ \"(ssr)/./node_modules/.pnpm/ua-parser-js@1.0.40/node_modules/ua-parser-js/src/ua-parser.js\");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! deepmerge */ \"(ssr)/./node_modules/.pnpm/deepmerge@4.3.1/node_modules/deepmerge/dist/cjs.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! classnames */ \"(ssr)/./node_modules/.pnpm/classnames@2.5.1/node_modules/classnames/index.js\");\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a2, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a2, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a2, prop, b[prop]);\n    }\n  return a2;\n};\nvar __spreadProps = (a2, b) => __defProps(a2, __getOwnPropDescs(b));\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e2) {\n        reject(e2);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e2) {\n        reject(e2);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nvar _a, _b, _c, _d, _e, _f, _g, _h;\n\n\n\n\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nconst equalFn = (a2, b) => a2 === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition$1 = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener, owner = Owner, unowned = fn.length === 0, root = unowned ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner: detachedOwner === void 0 ? owner : detachedOwner\n  }, updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s2 = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || void 0\n  };\n  const setter = (value2) => {\n    if (typeof value2 === \"function\") {\n      value2 = value2(s2.value);\n    }\n    return writeSignal(s2, value2);\n  };\n  return [readSignal.bind(s2), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c2 = createComputation(fn, value, true, STALE);\n  updateComputation(c2);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c2 = createComputation(fn, value, false, STALE);\n  updateComputation(c2);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c2 = createComputation(fn, value, false, STALE);\n  c2.user = true;\n  Effects ? Effects.push(c2) : updateComputation(c2);\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c2 = createComputation(fn, value, true, 0);\n  c2.observers = null;\n  c2.observerSlots = null;\n  c2.comparator = options.equals || void 0;\n  updateComputation(c2);\n  return readSignal.bind(c2);\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null, initP = NO_INIT, id = null, scheduled = false, resolved = \"initialValue\" in options, dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = /* @__PURE__ */ new Set(), [value, setValue] = (options.storage || createSignal)(options.initialValue), [error, setError] = createSignal(void 0), [track, trigger] = createSignal(void 0, {\n    equals: false\n  }), [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    let v;\n    if (options.ssrLoadFrom === \"initial\")\n      initP = options.initialValue;\n    else if (sharedConfig.load && (v = sharedConfig.load(id)))\n      initP = v[0];\n  }\n  function loadEnd(p2, v, error2, key) {\n    if (pr === p2) {\n      pr = null;\n      resolved = true;\n      if ((p2 === initP || v === initP) && options.onHydrated)\n        queueMicrotask(() => options.onHydrated(key, {\n          value: v\n        }));\n      initP = NO_INIT;\n      completeLoad(v, error2);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === void 0)\n        setValue(() => v);\n      setState(err !== void 0 ? \"errored\" : \"ready\");\n      setError(err);\n      for (const c2 of contexts.keys())\n        c2.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c2 = SuspenseContext, v = value(), err = error();\n    if (err !== void 0 && !pr)\n      throw err;\n    if (Listener && !Listener.user && c2) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c2.resolved)\n            ;\n          else if (!contexts.has(c2)) {\n            c2.increment();\n            contexts.add(c2);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled)\n      return;\n    scheduled = false;\n    const lookup2 = dynamic ? dynamic() : source;\n    if (lookup2 == null || lookup2 === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    const p2 = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup2, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p2 !== \"object\" || !(p2 && \"then\" in p2)) {\n      loadEnd(pr, p2, void 0, lookup2);\n      return p2;\n    }\n    pr = p2;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p2.then((v) => loadEnd(p2, v, void 0, lookup2), (e2) => loadEnd(p2, void 0, castError(e2), lookup2));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s2 = state();\n        return s2 === \"pending\" || s2 === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved)\n          return read();\n        const err = error();\n        if (err && !pr)\n          throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic)\n    createComputed(() => load(false));\n  else\n    load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (Listener === null)\n    return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return (prevValue) => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i2 = 0; i2 < deps.length; i2++)\n        input[i2] = deps[i2]();\n    } else\n      input = deps();\n    if (defer) {\n      defer = false;\n      return void 0;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null)\n    ;\n  else if (Owner.cleanups === null)\n    Owner.cleanups = [fn];\n  else\n    Owner.cleanups.push(fn);\n  return fn;\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== void 0 ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children2 = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children2()));\n  memo.toArray = () => {\n    const c2 = memo();\n    return Array.isArray(c2) ? c2 : c2 != null ? [c2] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction readSignal() {\n  const runningTransition = Transition$1;\n  if (this.sources && (this.state || runningTransition)) {\n    if (this.state === STALE || runningTransition)\n      updateComputation(this);\n    else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i2 = 0; i2 < node.observers.length; i2 += 1) {\n          const o2 = node.observers[i2];\n          const TransitionRunning = Transition$1 && Transition$1.running;\n          if (TransitionRunning && Transition$1.disposed.has(o2))\n            ;\n          if (TransitionRunning && !o2.tState || !TransitionRunning && !o2.state) {\n            if (o2.pure)\n              Updates.push(o2);\n            else\n              Effects.push(o2);\n            if (o2.observers)\n              markDownstream(o2);\n          }\n          if (TransitionRunning)\n            ;\n          else\n            o2.state = STALE;\n        }\n        if (Updates.length > 1e6) {\n          Updates = [];\n          if (false)\n            {}\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn)\n    return;\n  cleanNode(node);\n  const owner = Owner, listener = Listener, time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, node.value, time);\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue);\n    } else\n      node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c2 = {\n    fn,\n    state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Owner === null)\n    ;\n  else if (Owner !== UNOWNED) {\n    {\n      if (!Owner.owned)\n        Owner.owned = [c2];\n      else\n        Owner.owned.push(c2);\n    }\n  }\n  return c2;\n}\nfunction runTop(node) {\n  const runningTransition = Transition$1;\n  if (node.state === 0 || runningTransition)\n    return;\n  if (node.state === PENDING || runningTransition)\n    return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback))\n    return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (node.state || runningTransition)\n      ancestors.push(node);\n  }\n  for (let i2 = ancestors.length - 1; i2 >= 0; i2--) {\n    node = ancestors[i2];\n    if (node.state === STALE || runningTransition) {\n      updateComputation(node);\n    } else if (node.state === PENDING || runningTransition) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates)\n    return fn();\n  let wait = false;\n  if (!init)\n    Updates = [];\n  if (Effects)\n    wait = true;\n  else\n    Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait)\n      Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    runQueue(Updates);\n    Updates = null;\n  }\n  if (wait)\n    return;\n  const e2 = Effects;\n  Effects = null;\n  if (e2.length)\n    runUpdates(() => runEffects(e2), false);\n}\nfunction runQueue(queue) {\n  for (let i2 = 0; i2 < queue.length; i2++)\n    runTop(queue[i2]);\n}\nfunction runUserEffects(queue) {\n  let i2, userLength = 0;\n  for (i2 = 0; i2 < queue.length; i2++) {\n    const e2 = queue[i2];\n    if (!e2.user)\n      runTop(e2);\n    else\n      queue[userLength++] = e2;\n  }\n  if (sharedConfig.context)\n    setHydrateContext();\n  for (i2 = 0; i2 < userLength; i2++)\n    runTop(queue[i2]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition$1;\n  node.state = 0;\n  for (let i2 = 0; i2 < node.sources.length; i2 += 1) {\n    const source = node.sources[i2];\n    if (source.sources) {\n      if (source.state === STALE || runningTransition) {\n        if (source !== ignore)\n          runTop(source);\n      } else if (source.state === PENDING || runningTransition)\n        lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition$1;\n  for (let i2 = 0; i2 < node.observers.length; i2 += 1) {\n    const o2 = node.observers[i2];\n    if (!o2.state || runningTransition) {\n      o2.state = PENDING;\n      if (o2.pure)\n        Updates.push(o2);\n      else\n        Effects.push(o2);\n      o2.observers && markDownstream(o2);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i2;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(), index = node.sourceSlots.pop(), obs = source.observers;\n      if (obs && obs.length) {\n        const n2 = obs.pop(), s2 = source.observerSlots.pop();\n        if (index < obs.length) {\n          n2.sourceSlots[s2] = index;\n          obs[index] = n2;\n          source.observerSlots[index] = s2;\n        }\n      }\n    }\n  }\n  if (node.owned) {\n    for (i2 = 0; i2 < node.owned.length; i2++)\n      cleanNode(node.owned[i2]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i2 = 0; i2 < node.cleanups.length; i2++)\n      node.cleanups[i2]();\n    node.cleanups = null;\n  }\n  node.state = 0;\n  node.context = null;\n}\nfunction castError(err) {\n  if (err instanceof Error || typeof err === \"string\")\n    return err;\n  return new Error(\"Unknown error\");\n}\nfunction handleError(err) {\n  err = castError(err);\n  throw err;\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== void 0 ? owner.context[key] : lookup(owner.owner, key) : void 0;\n}\nfunction resolveChildren(children2) {\n  if (typeof children2 === \"function\" && !children2.length)\n    return resolveChildren(children2());\n  if (Array.isArray(children2)) {\n    const results = [];\n    for (let i2 = 0; i2 < children2.length; i2++) {\n      const result = resolveChildren(children2[i2]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children2;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), void 0);\n    return res;\n  };\n}\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i2 = 0; i2 < d.length; i2++)\n    d[i2]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [], mapped = [], disposers = [], len = 0, indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [], i2, j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length, newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot((disposer) => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      } else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++)\n          ;\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = /* @__PURE__ */ new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i2 = newIndices.get(item);\n          newIndicesNext[j] = i2 === void 0 ? -1 : i2;\n          newIndices.set(item, j);\n        }\n        for (i2 = start; i2 <= end; i2++) {\n          item = items[i2];\n          j = newIndices.get(item);\n          if (j !== void 0 && j !== -1) {\n            temp[j] = mapped[i2];\n            tempdisposers[j] = disposers[i2];\n            indexes && (tempIndexes[j] = indexes[i2]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else\n            disposers[i2]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else\n            mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s2, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s2);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction createComponent(Comp, props) {\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY)\n      return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY)\n      return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s2) {\n  return !(s2 = typeof s2 === \"function\" ? s2() : s2) ? {} : s2;\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i2 = 0; i2 < sources.length; i2++) {\n    const s2 = sources[i2];\n    proxy = proxy || !!s2 && $PROXY in s2;\n    sources[i2] = typeof s2 === \"function\" ? (proxy = true, createMemo(s2)) : s2;\n  }\n  if (proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i2 = sources.length - 1; i2 >= 0; i2--) {\n          const v = resolveSource(sources[i2])[property];\n          if (v !== void 0)\n            return v;\n        }\n      },\n      has(property) {\n        for (let i2 = sources.length - 1; i2 >= 0; i2--) {\n          if (property in resolveSource(sources[i2]))\n            return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i2 = 0; i2 < sources.length; i2++)\n          keys.push(...Object.keys(resolveSource(sources[i2])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const target = {};\n  for (let i2 = sources.length - 1; i2 >= 0; i2--) {\n    if (sources[i2]) {\n      const descriptors = Object.getOwnPropertyDescriptors(sources[i2]);\n      for (const key in descriptors) {\n        if (key in target)\n          continue;\n        Object.defineProperty(target, key, {\n          enumerable: true,\n          get() {\n            for (let i3 = sources.length - 1; i3 >= 0; i3--) {\n              const v = (sources[i3] || {})[key];\n              if (v !== void 0)\n                return v;\n            }\n          }\n        });\n      }\n    }\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  if ($PROXY in props) {\n    const res = keys.map((k) => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : void 0;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter((property) => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? void 0 : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter((k) => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  keys.push(Object.keys(descriptors).filter((k) => !blocked.has(k)));\n  return keys.map((k) => {\n    const clone = {};\n    for (let i2 = 0; i2 < k.length; i2++) {\n      const key = k[i2];\n      if (!(key in props))\n        continue;\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        },\n        enumerable: true\n      });\n    }\n    return clone;\n  });\n}\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || void 0));\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, void 0, {\n    equals: (a2, b) => strictEqual ? a2 === b : !a2 === !b\n  });\n  return createMemo(() => {\n    const c2 = condition();\n    if (c2) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      strictEqual = keyed || fn;\n      return fn ? untrack(() => child(c2)) : child;\n    }\n    return props.fallback;\n  }, void 0, void 0);\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  let keyed = false;\n  const equals = (a2, b) => a2[0] === b[0] && (strictEqual ? a2[1] === b[1] : !a2[1] === !b[1]) && a2[2] === b[2];\n  const conditions = children(() => props.children), evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds))\n      conds = [conds];\n    for (let i2 = 0; i2 < conds.length; i2++) {\n      const c2 = conds[i2].when;\n      if (c2) {\n        keyed = !!conds[i2].keyed;\n        return [i2, c2, conds[i2]];\n      }\n    }\n    return [-1];\n  }, void 0, {\n    equals\n  });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0)\n      return props.fallback;\n    const c2 = cond.children;\n    const fn = typeof c2 === \"function\" && c2.length > 0;\n    strictEqual = keyed || fn;\n    return fn ? untrack(() => c2(when)) : c2;\n  }, void 0, void 0);\n}\nfunction Match(props) {\n  return props;\n}\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = /* @__PURE__ */ new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = /* @__PURE__ */ new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {\n  class: \"className\",\n  formnovalidate: \"formNoValidate\",\n  ismap: \"isMap\",\n  nomodule: \"noModule\",\n  playsinline: \"playsInline\",\n  readonly: \"readOnly\"\n});\nconst DelegatedEvents = /* @__PURE__ */ new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = /* @__PURE__ */ new Set([\n  \"altGlyph\",\n  \"altGlyphDef\",\n  \"altGlyphItem\",\n  \"animate\",\n  \"animateColor\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"circle\",\n  \"clipPath\",\n  \"color-profile\",\n  \"cursor\",\n  \"defs\",\n  \"desc\",\n  \"ellipse\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"filter\",\n  \"font\",\n  \"font-face\",\n  \"font-face-format\",\n  \"font-face-name\",\n  \"font-face-src\",\n  \"font-face-uri\",\n  \"foreignObject\",\n  \"g\",\n  \"glyph\",\n  \"glyphRef\",\n  \"hkern\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"missing-glyph\",\n  \"mpath\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  \"set\",\n  \"stop\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"textPath\",\n  \"tref\",\n  \"tspan\",\n  \"use\",\n  \"view\",\n  \"vkern\"\n]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nfunction reconcileArrays(parentNode, a2, b) {\n  let bLength = b.length, aEnd = a2.length, bEnd = bLength, aStart = 0, bStart = 0, after = a2[aEnd - 1].nextSibling, map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a2[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a2[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd)\n        parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a2[aStart]))\n          a2[aStart].remove();\n        aStart++;\n      }\n    } else if (a2[aStart] === b[bEnd - 1] && b[bStart] === a2[aEnd - 1]) {\n      const node = a2[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a2[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a2[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = /* @__PURE__ */ new Map();\n        let i2 = bStart;\n        while (i2 < bEnd)\n          map.set(b[i2], i2++);\n      }\n      const index = map.get(a2[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i2 = aStart, sequence = 1, t2;\n          while (++i2 < aEnd && i2 < bEnd) {\n            if ((t2 = map.get(a2[i2])) == null || t2 !== index + sequence)\n              break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a2[aStart];\n            while (bStart < index)\n              parentNode.insertBefore(b[bStart++], node);\n          } else\n            parentNode.replaceChild(b[bStart++], a2[aStart++]);\n        } else\n          aStart++;\n      } else\n        a2[aStart++].remove();\n    }\n  }\n}\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot((dispose2) => {\n    disposer = dispose2;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : void 0, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template$1(html, check, isSVG) {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const t2 = document.createElement(\"template\");\n  t2.innerHTML = html;\n  let node = t2.content.firstChild;\n  if (isSVG)\n    node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames, document2 = window.document) {\n  const e2 = document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */ new Set());\n  for (let i2 = 0, l2 = eventNames.length; i2 < l2; i2++) {\n    const name = eventNames[i2];\n    if (!e2.has(name)) {\n      e2.add(name);\n      document2.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null)\n    node.removeAttribute(name);\n  else\n    node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null)\n    node.removeAttributeNS(namespace, name);\n  else\n    node.setAttributeNS(namespace, name, value);\n}\nfunction className(node, value) {\n  if (value == null)\n    node.removeAttribute(\"class\");\n  else\n    node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else\n      node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, handler[0] = (e2) => handlerFn.call(node, handler[1], e2));\n  } else\n    node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}), prevKeys = Object.keys(prev);\n  let i2, len;\n  for (i2 = 0, len = prevKeys.length; i2 < len; i2++) {\n    const key = prevKeys[i2];\n    if (!key || key === \"undefined\" || value[key])\n      continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i2 = 0, len = classKeys.length; i2 < len; i2++) {\n    const key = classKeys[i2], classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue)\n      continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value)\n    return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\")\n    return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = void 0);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s2;\n  for (s2 in prev) {\n    value[s2] == null && nodeStyle.removeProperty(s2);\n    delete prev[s2];\n  }\n  for (s2 in value) {\n    v = value[s2];\n    if (v !== prev[s2]) {\n      nodeStyle.setProperty(s2, v);\n      prev[s2] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => props.ref && props.ref(node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== void 0 && !initial)\n    initial = [];\n  if (typeof accessor !== \"function\")\n    return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect((current) => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\")\n        continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren)\n        insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n  }\n}\nfunction getNextElement(template2) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template2.cloneNode(true);\n  }\n  if (sharedConfig.completed)\n    sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i2 = 0, nameLen = classNames.length; i2 < nameLen; i2++)\n    node.classList.toggle(classNames[i2], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef) {\n  let isCE, isProp, isChildProp;\n  if (prop === \"style\")\n    return style(node, value, prev);\n  if (prop === \"classList\")\n    return classList(node, value, prev);\n  if (value === prev)\n    return prev;\n  if (prop === \"ref\") {\n    if (!skipRef)\n      value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e2 = prop.slice(3);\n    prev && node.removeEventListener(e2, prev);\n    value && node.addEventListener(e2, value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e2 = prop.slice(10);\n    prev && node.removeEventListener(e2, prev, true);\n    value && node.addEventListener(e2, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h2 = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h2);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (PropAliases[prop] || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n    if (prop === \"class\" || prop === \"className\")\n      className(node, value);\n    else if (isCE && !isProp && !isChildProp)\n      node[toPropertyName(prop)] = value;\n    else\n      node[PropAliases[prop] || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns)\n      setAttributeNS(node, ns, prop, value);\n    else\n      setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e2) {\n  const key = `$$${e2.type}`;\n  let node = e2.composedPath && e2.composedPath()[0] || e2.target;\n  if (e2.target !== node) {\n    Object.defineProperty(e2, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e2, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) {\n    sharedConfig.done = true;\n    document.querySelectorAll(\"[id^=pl-]\").forEach((elem) => {\n      while (elem && elem.nodeType !== 8 && elem.nodeValue !== \"pl-\" + e2) {\n        let x = elem.nextSibling;\n        elem.remove();\n        elem = x;\n      }\n      elem && elem.remove();\n    });\n  }\n  while (node) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== void 0 ? handler.call(node, data, e2) : handler.call(node, e2);\n      if (e2.cancelBubble)\n        return;\n    }\n    node = node._$host || node.parentNode || node.host;\n  }\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  if (sharedConfig.context && !current)\n    current = [...parent.childNodes];\n  while (typeof current === \"function\")\n    current = current();\n  if (value === current)\n    return current;\n  const t2 = typeof value, multi = marker !== void 0;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t2 === \"string\" || t2 === \"number\") {\n    if (sharedConfig.context)\n      return current;\n    if (t2 === \"number\")\n      value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else\n        node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else\n        current = parent.textContent = value;\n    }\n  } else if (value == null || t2 === \"boolean\") {\n    if (sharedConfig.context)\n      return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t2 === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\")\n        v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context) {\n      if (!array.length)\n        return current;\n      for (let i2 = 0; i2 < array.length; i2++) {\n        if (array[i2].parentNode)\n          return current = array;\n      }\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi)\n        return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else\n        reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (sharedConfig.context && value.parentNode)\n      return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi)\n        return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else\n      parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else\n    ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap2) {\n  let dynamic = false;\n  for (let i2 = 0, len = array.length; i2 < len; i2++) {\n    let item = array[i2], prev = current && current[i2];\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false)\n      ;\n    else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (typeof item === \"function\") {\n      if (unwrap2) {\n        while (typeof item === \"function\")\n          item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], Array.isArray(prev) ? prev : [prev]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) {\n        normalized.push(prev);\n      } else\n        normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i2 = 0, len = array.length; i2 < len; i2++)\n    parent.insertBefore(array[i2], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === void 0)\n    return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i2 = current.length - 1; i2 >= 0; i2--) {\n      const el = current[i2];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i2)\n          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);\n        else\n          isParent && el.remove();\n      } else\n        inserted = true;\n    }\n  } else\n    parent.insertBefore(node, marker);\n  return [node];\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props, marker = document.createTextNode(\"\"), mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s2, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s2() && props.children;\n    } else\n      return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot((dispose2) => insert(mount, () => !clean() ? renderPortal()() : dispose2(), null));\n    onCleanup(() => {\n      if (sharedConfig.context)\n        queueMicrotask(cleanup);\n      else\n        cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG), renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"_$host\", {\n      get() {\n        return marker.parentNode;\n      },\n      configurable: true\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p2, others] = splitProps(props, [\"component\"]);\n  const cached = createMemo(() => p2.component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\nvar THEME = /* @__PURE__ */ ((THEME2) => {\n  THEME2[\"DARK\"] = \"DARK\";\n  THEME2[\"LIGHT\"] = \"LIGHT\";\n  return THEME2;\n})(THEME || {});\nlet e = { data: \"\" }, t = (t2) => \"object\" == typeof window ? ((t2 ? t2.querySelector(\"#_goober\") : window._goober) || Object.assign((t2 || document.head).appendChild(document.createElement(\"style\")), { innerHTML: \" \", id: \"_goober\" })).firstChild : t2 || e, l = /(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g, a = /\\/\\*[^]*?\\*\\/|  +/g, n = /\\n+/g, o = (e2, t2) => {\n  let r = \"\", l2 = \"\", a2 = \"\";\n  for (let n2 in e2) {\n    let c2 = e2[n2];\n    \"@\" == n2[0] ? \"i\" == n2[1] ? r = n2 + \" \" + c2 + \";\" : l2 += \"f\" == n2[1] ? o(c2, n2) : n2 + \"{\" + o(c2, \"k\" == n2[1] ? \"\" : t2) + \"}\" : \"object\" == typeof c2 ? l2 += o(c2, t2 ? t2.replace(/([^,])+/g, (e3) => n2.replace(/(^:.*)|([^,])+/g, (t3) => /&/.test(t3) ? t3.replace(/&/g, e3) : e3 ? e3 + \" \" + t3 : t3)) : n2) : null != c2 && (n2 = /^--/.test(n2) ? n2 : n2.replace(/[A-Z]/g, \"-$&\").toLowerCase(), a2 += o.p ? o.p(n2, c2) : n2 + \":\" + c2 + \";\");\n  }\n  return r + (t2 && a2 ? t2 + \"{\" + a2 + \"}\" : a2) + l2;\n}, c = {}, s = (e2) => {\n  if (\"object\" == typeof e2) {\n    let t2 = \"\";\n    for (let r in e2)\n      t2 += r + s(e2[r]);\n    return t2;\n  }\n  return e2;\n}, i = (e2, t2, r, i2, p2) => {\n  let u2 = s(e2), d = c[u2] || (c[u2] = ((e3) => {\n    let t3 = 0, r2 = 11;\n    for (; t3 < e3.length; )\n      r2 = 101 * r2 + e3.charCodeAt(t3++) >>> 0;\n    return \"go\" + r2;\n  })(u2));\n  if (!c[d]) {\n    let t3 = u2 !== e2 ? e2 : ((e3) => {\n      let t4, r2, o2 = [{}];\n      for (; t4 = l.exec(e3.replace(a, \"\")); )\n        t4[4] ? o2.shift() : t4[3] ? (r2 = t4[3].replace(n, \" \").trim(), o2.unshift(o2[0][r2] = o2[0][r2] || {})) : o2[0][t4[1]] = t4[2].replace(n, \" \").trim();\n      return o2[0];\n    })(e2);\n    c[d] = o(p2 ? { [\"@keyframes \" + d]: t3 } : t3, r ? \"\" : \".\" + d);\n  }\n  let f = r && c.g ? c.g : null;\n  return r && (c.g = c[d]), ((e3, t3, r2, l2) => {\n    l2 ? t3.data = t3.data.replace(l2, e3) : -1 === t3.data.indexOf(e3) && (t3.data = r2 ? e3 + t3.data : t3.data + e3);\n  })(c[d], t2, i2, f), d;\n}, p = (e2, t2, r) => e2.reduce((e3, l2, a2) => {\n  let n2 = t2[a2];\n  if (n2 && n2.call) {\n    let e4 = n2(r), t3 = e4 && e4.props && e4.props.className || /^go/.test(e4) && e4;\n    n2 = t3 ? \".\" + t3 : e4 && \"object\" == typeof e4 ? e4.props ? \"\" : o(e4, \"\") : false === e4 ? \"\" : e4;\n  }\n  return e3 + l2 + (null == n2 ? \"\" : n2);\n}, \"\");\nfunction u(e2) {\n  let r = this || {}, l2 = e2.call ? e2(r.p) : e2;\n  return i(l2.unshift ? l2.raw ? p(l2, [].slice.call(arguments, 1), r.p) : l2.reduce((e3, t2) => Object.assign(e3, t2 && t2.call ? t2(r.p) : t2), {}) : l2, t(r.target), r.g, r.o, r.k);\n}\nu.bind({ g: 1 });\nlet h = u.bind({ k: 1 });\nconst ThemeContext = createContext();\nfunction ThemeProvider(props) {\n  return createComponent(ThemeContext.Provider, {\n    value: props.theme,\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction useTheme() {\n  return useContext(ThemeContext);\n}\nfunction makeStyled(tag) {\n  let _ctx = this || {};\n  return (...args) => {\n    const Styled = (props) => {\n      const theme = useContext(ThemeContext);\n      const withTheme = mergeProps(props, { theme });\n      const clone = mergeProps(withTheme, {\n        get class() {\n          const pClass = withTheme.class, append = \"class\" in withTheme && /^go[0-9]+/.test(pClass);\n          let className2 = u.apply(\n            { target: _ctx.target, o: append, p: withTheme, g: _ctx.g },\n            args\n          );\n          return [pClass, className2].filter(Boolean).join(\" \");\n        }\n      });\n      const [local, newProps] = splitProps(clone, [\"as\", \"theme\"]);\n      const htmlProps = newProps;\n      const createTag = local.as || tag;\n      let el;\n      if (typeof createTag === \"function\") {\n        el = createTag(htmlProps);\n      } else {\n        {\n          if (_ctx.g == 1) {\n            el = document.createElement(createTag);\n            spread(el, htmlProps);\n          } else {\n            el = Dynamic(mergeProps({ component: createTag }, htmlProps));\n          }\n        }\n      }\n      return el;\n    };\n    Styled.class = (props) => {\n      return untrack(() => {\n        return u.apply({ target: _ctx.target, p: props, g: _ctx.g }, args);\n      });\n    };\n    return Styled;\n  };\n}\nconst styled = new Proxy(makeStyled, {\n  get(target, tag) {\n    return target(tag);\n  }\n});\nfunction createGlobalStyles() {\n  const fn = makeStyled.call({ g: 1 }, \"div\").apply(null, arguments);\n  return function GlobalStyles2(props) {\n    fn(props);\n    return null;\n  };\n}\nconst globalStylesTag = \"tc-root\";\nconst disableScrollClass = \"tc-disable-scroll\";\nconst usingMouseClass = \"tc-using-mouse\";\nconst GlobalStyles = () => {\n  document.body.addEventListener(\"mousedown\", () => document.body.classList.add(usingMouseClass));\n  document.body.addEventListener(\"keydown\", (event) => {\n    if (event.key === \"Tab\") {\n      document.body.classList.remove(usingMouseClass);\n    }\n  });\n  const Styles = createGlobalStyles`\n    ${globalStylesTag} * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        \n        font-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', Arial, Tahoma, Verdana, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;        \n        -webkit-tap-highlight-color: transparent;\n    }\n    \n    ${globalStylesTag} img {\n      -webkit-user-select: none;\n      -webkit-touch-callout: none;\n    }   \n \n    ${globalStylesTag} *:focus {\n        outline: #08f auto 2px;\n    }\n    \n    ${globalStylesTag} li {\n        list-style: none;\n    }\n    \n    ${globalStylesTag} button {\n        outline: none;\n    }\n    \n    body.${disableScrollClass} {\n        position: fixed; \n        overflow-y: scroll;\n        right: 0;\n        left: 0;\n    }\n    \n    body.${usingMouseClass} ${globalStylesTag} *:focus {\n        outline: none;\n    }\n`;\n  return createComponent(Styles, {});\n};\nfunction hexToRgb(hex) {\n  if (hex[0] === \"#\") {\n    hex = hex.slice(1);\n  }\n  const bigint = parseInt(hex, 16);\n  const r = bigint >> 16 & 255;\n  const g = bigint >> 8 & 255;\n  const b = bigint & 255;\n  return [r, g, b].join(\",\");\n}\nfunction rgba(color, opacity) {\n  if (color[0] === \"#\") {\n    color = hexToRgb(color);\n  }\n  return `rgba(${color}, ${opacity})`;\n}\nfunction toPx(value) {\n  return value.toString() + \"px\";\n}\nconst _InMemoryStorage = class {\n  constructor() {\n    __publicField(this, \"storage\", {});\n  }\n  static getInstance() {\n    if (!_InMemoryStorage.instance) {\n      _InMemoryStorage.instance = new _InMemoryStorage();\n    }\n    return _InMemoryStorage.instance;\n  }\n  get length() {\n    return Object.keys(this.storage).length;\n  }\n  clear() {\n    this.storage = {};\n  }\n  getItem(key) {\n    var _a2;\n    return (_a2 = this.storage[key]) != null ? _a2 : null;\n  }\n  key(index) {\n    var _a2;\n    const keys = Object.keys(this.storage);\n    if (index < 0 || index >= keys.length) {\n      return null;\n    }\n    return (_a2 = keys[index]) != null ? _a2 : null;\n  }\n  removeItem(key) {\n    delete this.storage[key];\n  }\n  setItem(key, value) {\n    this.storage[key] = value;\n  }\n};\nlet InMemoryStorage = _InMemoryStorage;\n__publicField(InMemoryStorage, \"instance\");\nclass TonConnectUIError extends _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError {\n  constructor(...args) {\n    super(...args);\n    Object.setPrototypeOf(this, TonConnectUIError.prototype);\n  }\n}\nfunction logDebug(...args) {\n  {\n    try {\n      console.debug(\"[TON_CONNECT_UI]\", ...args);\n    } catch (e2) {\n    }\n  }\n}\nfunction logError(...args) {\n  {\n    try {\n      console.error(\"[TON_CONNECT_UI]\", ...args);\n    } catch (e2) {\n    }\n  }\n}\nfunction logWarning(...args) {\n  {\n    try {\n      console.warn(\"[TON_CONNECT_UI]\", ...args);\n    } catch (e2) {\n    }\n  }\n}\nfunction openLink(href, target = \"_self\") {\n  logDebug(\"openLink\", href, target);\n  window.open(href, target, \"noopener noreferrer\");\n}\nfunction openLinkBlank(href) {\n  openLink(href, \"_blank\");\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n  const doFallback = () => {\n    if (isBrowser(\"safari\") || isOS(\"android\") && isBrowser(\"firefox\")) {\n      return;\n    }\n    fallback();\n  };\n  const fallbackTimeout = setTimeout(() => doFallback(), 200);\n  window.addEventListener(\"blur\", () => clearTimeout(fallbackTimeout), { once: true });\n  openLink(href, \"_self\");\n}\nfunction getSystemTheme() {\n  if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: light)\").matches) {\n    return THEME.LIGHT;\n  }\n  return THEME.DARK;\n}\nfunction subscribeToThemeChange(callback) {\n  const handler = (event) => callback(event.matches ? THEME.DARK : THEME.LIGHT);\n  window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", handler);\n  return () => window.matchMedia(\"(prefers-color-scheme: dark)\").removeEventListener(\"change\", handler);\n}\nfunction disableScroll() {\n  if (document.documentElement.scrollHeight === document.documentElement.clientHeight) {\n    return;\n  }\n  document.body.style.top = toPx(-document.documentElement.scrollTop);\n  document.body.classList.add(disableScrollClass);\n}\nfunction enableScroll() {\n  document.body.classList.remove(disableScrollClass);\n  document.documentElement.scrollTo({ top: -parseFloat(getComputedStyle(document.body).top) });\n  document.body.style.top = \"auto\";\n}\nfunction fixMobileSafariActiveTransition() {\n  if (!document.body.hasAttribute(\"ontouchstart\")) {\n    document.body.setAttribute(\"ontouchstart\", \"\");\n  }\n}\nfunction defineStylesRoot() {\n  customElements.define(globalStylesTag, class TcRootElement extends HTMLElement {\n  });\n}\nfunction createMacrotask(callback) {\n  return __async(this, null, function* () {\n    yield new Promise((resolve) => requestAnimationFrame(resolve));\n    callback();\n  });\n}\nfunction createMacrotaskAsync(callback) {\n  return __async(this, null, function* () {\n    yield new Promise((resolve) => requestAnimationFrame(resolve));\n    return callback();\n  });\n}\nfunction preloadImages(images) {\n  if (document.readyState !== \"complete\") {\n    window.addEventListener(\"load\", () => createMacrotask(() => preloadImages(images)), {\n      once: true\n    });\n  } else {\n    images.forEach((img) => {\n      const node = new window.Image();\n      node.src = img;\n    });\n  }\n}\nfunction getWindow$1() {\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  return void 0;\n}\nfunction tryGetLocalStorage() {\n  if (isLocalStorageAvailable()) {\n    return localStorage;\n  }\n  if (isNodeJs()) {\n    throw new TonConnectUIError(\n      \"`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector\"\n    );\n  }\n  return InMemoryStorage.getInstance();\n}\nfunction isLocalStorageAvailable() {\n  try {\n    return typeof localStorage !== \"undefined\";\n  } catch (e2) {\n    return false;\n  }\n}\nfunction isNodeJs() {\n  return typeof process !== \"undefined\" && process.versions != null && process.versions.node != null;\n}\nfunction getUserAgent() {\n  var _a2, _b2, _c2;\n  const results = new ua_parser_js__WEBPACK_IMPORTED_MODULE_1__().getResult();\n  const osName = (_a2 = results.os.name) == null ? void 0 : _a2.toLowerCase();\n  const deviceModel = (_b2 = results.device.model) == null ? void 0 : _b2.toLowerCase();\n  let os;\n  switch (true) {\n    case deviceModel === \"ipad\":\n      os = \"ipad\";\n      break;\n    case osName === \"ios\":\n      os = \"ios\";\n      break;\n    case osName === \"android\":\n      os = \"android\";\n      break;\n    case osName === \"mac os\":\n      os = \"macos\";\n      break;\n    case osName === \"linux\":\n      os = \"linux\";\n      break;\n    case (osName == null ? void 0 : osName.includes(\"windows\")):\n      os = \"windows\";\n      break;\n  }\n  const browserName = (_c2 = results.browser.name) == null ? void 0 : _c2.toLowerCase();\n  let browser;\n  switch (true) {\n    case browserName === \"chrome\":\n      browser = \"chrome\";\n      break;\n    case browserName === \"firefox\":\n      browser = \"firefox\";\n      break;\n    case (browserName == null ? void 0 : browserName.includes(\"safari\")):\n      browser = \"safari\";\n      break;\n    case (browserName == null ? void 0 : browserName.includes(\"opera\")):\n      browser = \"opera\";\n      break;\n  }\n  return {\n    os,\n    browser\n  };\n}\nfunction isOS(...os) {\n  return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n  return browser.includes(getUserAgent().browser);\n}\nfunction toDeeplink(universalLink, deeplink) {\n  const url = new URL(universalLink);\n  return deeplink + url.search;\n}\nclass WalletInfoStorage {\n  constructor() {\n    __publicField(this, \"localStorage\");\n    __publicField(this, \"storageKey\", \"ton-connect-ui_wallet-info\");\n    this.localStorage = tryGetLocalStorage();\n  }\n  setWalletInfo(walletInfo) {\n    this.localStorage.setItem(this.storageKey, JSON.stringify(walletInfo));\n  }\n  getWalletInfo() {\n    const walletInfoString = this.localStorage.getItem(this.storageKey);\n    if (!walletInfoString) {\n      return null;\n    }\n    return JSON.parse(walletInfoString);\n  }\n  removeWalletInfo() {\n    this.localStorage.removeItem(this.storageKey);\n  }\n}\nclass PreferredWalletStorage {\n  constructor() {\n    __publicField(this, \"localStorage\");\n    __publicField(this, \"storageKey\", \"ton-connect-ui_preferred-wallet\");\n    this.localStorage = tryGetLocalStorage();\n  }\n  setPreferredWalletAppName(name) {\n    this.localStorage.setItem(this.storageKey, name);\n  }\n  getPreferredWalletAppName() {\n    return this.localStorage.getItem(this.storageKey) || void 0;\n  }\n}\nclass LastSelectedWalletInfoStorage {\n  constructor() {\n    __publicField(this, \"localStorage\");\n    __publicField(this, \"storageKey\", \"ton-connect-ui_last-selected-wallet-info\");\n    this.localStorage = tryGetLocalStorage();\n  }\n  setLastSelectedWalletInfo(walletInfo) {\n    this.localStorage.setItem(this.storageKey, JSON.stringify(walletInfo));\n  }\n  getLastSelectedWalletInfo() {\n    const walletInfoString = this.localStorage.getItem(this.storageKey);\n    if (!walletInfoString) {\n      return null;\n    }\n    return JSON.parse(walletInfoString);\n  }\n  removeLastSelectedWalletInfo() {\n    this.localStorage.removeItem(this.storageKey);\n  }\n}\nconst [walletsModalState, setWalletsModalState] = createSignal({\n  status: \"closed\",\n  closeReason: null\n});\nconst getWalletsModalIsOpened = createMemo(() => walletsModalState().status === \"opened\");\nconst [singleWalletModalState, setSingleWalletModalState] = createSignal({\n  status: \"closed\",\n  closeReason: null\n});\nconst getSingleWalletModalIsOpened = createMemo(\n  () => singleWalletModalState().status === \"opened\"\n);\nconst getSingleWalletModalWalletInfo = createMemo(() => {\n  const state = singleWalletModalState();\n  if (state.status === \"opened\") {\n    return state.walletInfo;\n  }\n  return null;\n});\nlet lastSelectedWalletInfoStorage = typeof window !== \"undefined\" ? new LastSelectedWalletInfoStorage() : void 0;\nconst [lastSelectedWalletInfo, _setLastSelectedWalletInfo] = createSignal((lastSelectedWalletInfoStorage == null ? void 0 : lastSelectedWalletInfoStorage.getLastSelectedWalletInfo()) || null);\nconst setLastSelectedWalletInfo = (walletInfo) => {\n  if (!lastSelectedWalletInfoStorage) {\n    lastSelectedWalletInfoStorage = new LastSelectedWalletInfoStorage();\n  }\n  if (walletInfo) {\n    lastSelectedWalletInfoStorage.setLastSelectedWalletInfo(walletInfo);\n  } else {\n    lastSelectedWalletInfoStorage.removeLastSelectedWalletInfo();\n  }\n  _setLastSelectedWalletInfo(walletInfo);\n};\nconst [action, setAction] = createSignal(null);\nconst common$1 = {\n  close: \"Close\",\n  openWallet: \"Open wallet\",\n  copyLink: \"Copy Link\",\n  linkCopied: \"Link Copied\",\n  copied: \"Copied\",\n  yourWallet: \"Your Wallet\",\n  retry: \"Retry\",\n  get: \"GET\",\n  mobile: \"Mobile\",\n  browserExtension: \"Browser Extension\",\n  desktop: \"Desktop\"\n};\nconst button$1 = {\n  connectWallet: \"Connect Wallet\",\n  dropdown: {\n    copy: \"Copy address\",\n    copied: \"Address copied!\",\n    disconnect: \"Disconnect\"\n  }\n};\nconst notifications$1 = {\n  confirm: {\n    header: \"Open {{ name }} to\\xA0confirm the\\xA0transaction.\"\n  },\n  transactionSent: {\n    header: \"Transaction sent\",\n    text: \"Your transaction\\xA0will be\\xA0processed in\\xA0a\\xA0few seconds.\"\n  },\n  transactionCanceled: {\n    header: \"Transaction canceled\",\n    text: \"There will be no changes to\\xA0your account.\"\n  }\n};\nconst walletItem$1 = {\n  walletOn: \"Wallet in\",\n  recent: \"Recent\",\n  installed: \"Installed\",\n  popular: \"Popular\"\n};\nconst walletModal$1 = {\n  loading: \"Loading wallets\",\n  wallets: \"Wallets\",\n  mobileUniversalModal: {\n    connectYourWallet: \"Connect your TON\\xA0wallet\",\n    openWalletOnTelegramOrSelect: \"Use Wallet in Telegram or choose other application\",\n    openWalletOnTelegram: \"Connect Wallet in Telegram\",\n    chooseOtherApplication: \"Choose other application\",\n    openLink: \"Open Link\",\n    scan: \"Scan with your mobile\\xA0wallet\"\n  },\n  desktopUniversalModal: {\n    connectYourWallet: \"Connect your TON wallet\",\n    scan: \"Scan with your mobile wallet\",\n    availableWallets: \"Available wallets\"\n  },\n  mobileConnectionModal: {\n    showQR: \"Show QR Code\",\n    scanQR: \"Scan the\\xA0QR code below with your phone\\u2019s\\xA0or\\xA0{{ name }}\\u2019s camera\",\n    continueIn: \"Continue in {{ name }}\\u2026\",\n    connectionDeclined: \"Connection declined\"\n  },\n  desktopConnectionModal: {\n    scanQR: \"Scan the\\xA0QR code below with your phone\\u2019s\\xA0or\\xA0{{ name }}\\u2019s camera\",\n    continueInExtension: \"Continue in\\xA0{{ name }} browser extension\\u2026\",\n    dontHaveExtension: \"Seems you don't have installed {{ name }}\\xA0browser\\xA0extension\",\n    getWallet: \"Get {{ name }}\",\n    continueOnDesktop: \"Continue in\\xA0{{ name }} on desktop\\u2026\",\n    openWalletOnTelegram: \"Connect Wallet in Telegram on desktop\",\n    connectionDeclined: \"Connection declined\"\n  },\n  infoModal: {\n    whatIsAWallet: \"What is a wallet\",\n    secureDigitalAssets: \"Secure digital assets storage\",\n    walletProtects: \"A wallet protects and manages your digital assets\\xA0including TON, tokens and collectables.\",\n    controlIdentity: \"Control your Web3 identity\",\n    manageIdentity: \"Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in\\xA0the\\xA0blockchain ecosystem.\",\n    effortlessCryptoTransactions: \"Effortless crypto transactions\",\n    easilySend: \"Easily send, receive, monitor your cryptocurrencies.\\xA0Streamline your operations with\\xA0decentralized applications.\",\n    getAWallet: \"Get a Wallet\"\n  }\n};\nconst actionModal$1 = {\n  confirmTransaction: {\n    header: \"Confirm the\\xA0transaction in\\xA0{{ name }}\",\n    text: \"It will only take a\\xA0moment.\"\n  },\n  transactionSent: \"$notifications.transactionSent\",\n  transactionCanceled: \"$notifications.transactionCanceled\"\n};\nconst en = {\n  common: common$1,\n  button: button$1,\n  notifications: notifications$1,\n  walletItem: walletItem$1,\n  walletModal: walletModal$1,\n  actionModal: actionModal$1\n};\nconst common = {\n  close: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n  openWallet: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n  copyLink: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n  linkCopied: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u0441\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0430\",\n  copied: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043E\",\n  yourWallet: \"\\u0412\\u0430\\u0448 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n  retry: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C\",\n  get: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\",\n  mobile: \"\\u041C\\u043E\\u0431\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439\",\n  browserExtension: \"\\u0420\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435\",\n  desktop: \"\\u0414\\u0435\\u0441\\u043A\\u0442\\u043E\\u043F\"\n};\nconst button = {\n  connectWallet: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n  dropdown: {\n    copy: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0430\\u0434\\u0440\\u0435\\u0441\",\n    copied: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0441\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D!\",\n    disconnect: \"\\u041E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\"\n  }\n};\nconst notifications = {\n  confirm: {\n    header: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 {{ name }}, \\u0447\\u0442\\u043E\\u0431\\u044B\\xA0\\u043F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044E.\"\n  },\n  transactionSent: {\n    header: \"\\u0422\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044F \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0430\",\n    text: \"\\u0412\\u0430\\u0448\\u0430 \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044F\\xA0\\u0431\\u0443\\u0434\\u0435\\u0442 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u0430 \\u0447\\u0435\\u0440\\u0435\\u0437\\xA0\\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434.\"\n  },\n  transactionCanceled: {\n    header: \"\\u0422\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044F \\u043E\\u0442\\u043C\\u0435\\u043D\\u0435\\u043D\\u0430\",\n    text: \"\\u0421\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u0441\\u0447\\u0451\\u0442\\u0430 \\u043D\\u0435\\xA0\\u0438\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u0441\\u044F.\"\n  }\n};\nconst walletItem = {\n  walletOn: \"Wallet \\u0432\",\n  recent: \"\\u041D\\u0435\\u0434\\u0430\\u0432\\u043D\\u0438\\u0439\",\n  installed: \"\\u0423\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\",\n  popular: \"\\u041F\\u043E\\u043F\\u0443\\u043B\\u044F\\u0440\\u0435\\u043D\"\n};\nconst walletModal = {\n  loading: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u044E\\u0442\\u0441\\u044F\",\n  wallets: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438\",\n  mobileUniversalModal: {\n    connectYourWallet: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 TON\\xA0\\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n    openWalletOnTelegramOrSelect: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 Wallet \\u0432\\xA0Telegram \\u0438\\u043B\\u0438\\xA0\\u0432\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u0434\\u0440\\u0443\\u0433\\u043E\\u0435 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\",\n    openWalletOnTelegram: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C Wallet \\u0432 Telegram\",\n    chooseOtherApplication: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0440\\u0443\\u0433\\u043E\\u0435 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\",\n    openLink: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C\",\n    scan: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E\\xA0\\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"\n  },\n  desktopUniversalModal: {\n    connectYourWallet: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 TON \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n    scan: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 QR-\\u043A\\u043E\\u0434 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E\\xA0\\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    availableWallets: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438\"\n  },\n  mobileConnectionModal: {\n    showQR: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C QR-\\u043A\\u043E\\u0434\",\n    scanQR: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 QR-\\u043A\\u043E\\u0434 \\u043D\\u0438\\u0436\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\xA0\\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0438 {{ name }}, \\u0438\\u043B\\u0438\\xA0\\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    continueIn: \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u0435 \\u0432 {{ name }}\\u2026\",\n    connectionDeclined: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043A\\u043B\\u043E\\u043D\\u0435\\u043D\\u043E\"\n  },\n  desktopConnectionModal: {\n    scanQR: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 QR-\\u043A\\u043E\\u0434 \\u043D\\u0438\\u0436\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\xA0\\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0438 {{ name }}, \\u0438\\u043B\\u0438\\xA0\\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    continueInExtension: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u043D\\u043E\\u0435 \\u0440\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435 {{ name }}\",\n    dontHaveExtension: \"\\u041F\\u043E\\u0445\\u043E\\u0436\\u0435, \\u0443 \\u0432\\u0430\\u0441 \\u043D\\u0435\\xA0\\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043E \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u043D\\u043E\\u0435\\xA0\\u0440\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435\\xA0{{ name }}\",\n    getWallet: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C {{ name }}\",\n    continueOnDesktop: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 {{ name }} \\u043D\\u0430\\xA0\\u043A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440\\u0435\\u2026\",\n    openWalletOnTelegram: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C Wallet \\u0432\\xA0Telegram\",\n    connectionDeclined: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043A\\u043B\\u043E\\u043D\\u0435\\u043D\\u043E\"\n  },\n  infoModal: {\n    whatIsAWallet: \"\\u0427\\u0442\\u043E \\u0442\\u0430\\u043A\\u043E\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A?\",\n    secureDigitalAssets: \"\\u041D\\u0430\\u0434\\u0435\\u0436\\u043D\\u043E\\u0435 \\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438\\u0449\\u0435 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u044B\\u0445 \\u0430\\u043A\\u0442\\u0438\\u0432\\u043E\\u0432\",\n    walletProtects: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A \\u0437\\u0430\\u0449\\u0438\\u0449\\u0430\\u0435\\u0442 \\u0432\\u0430\\u0448\\u0438 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u044B\\u0435 \\u0430\\u043A\\u0442\\u0438\\u0432\\u044B, \\u0432\\u043A\\u043B\\u044E\\u0447\\u0430\\u044F TON, \\u0442\\u043E\\u043A\\u0435\\u043D\\u044B \\u0438\\xA0\\u043F\\u0440\\u0435\\u0434\\u043C\\u0435\\u0442\\u044B \\u043A\\u043E\\u043B\\u043B\\u0435\\u043A\\u0446\\u0438\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F, \\u0438\\xA0\\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0438\\u043C\\u0438.\",\n    controlIdentity: \"\\u041A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B\\u044C \\u0441\\u0432\\u043E\\u0435\\u0439 \\u043B\\u0438\\u0447\\u043D\\u043E\\u0441\\u0442\\u0438 Web3\",\n    manageIdentity: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0435\\u0439 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u043E\\u0439 \\u0438\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u0435\\u0439 \\u0438\\xA0\\u0441\\xA0\\u043B\\u0435\\u0433\\u043A\\u043E\\u0441\\u0442\\u044C\\u044E \\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0439\\u0442\\u0435 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F \\u043A\\xA0\\u0434\\u0435\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u043C \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u044F\\u043C. \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u044F\\u0439\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B\\u044C \\u043D\\u0430\\u0434\\xA0\\u0441\\u0432\\u043E\\u0438\\u043C\\u0438 \\u0434\\u0430\\u043D\\u043D\\u044B\\u043C\\u0438 \\u0438\\xA0\\u0431\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u043E \\u0443\\u0447\\u0430\\u0441\\u0442\\u0432\\u0443\\u0439\\u0442\\u0435 \\u0432\\xA0\\u044D\\u043A\\u043E\\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0435\\xA0\\u0431\\u043B\\u043E\\u043A\\u0447\\u0435\\u0439\\u043D\\u0430.\",\n    effortlessCryptoTransactions: \"\\u041F\\u0440\\u043E\\u0441\\u0442\\u044B\\u0435 \\u043A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u0438\",\n    easilySend: \"\\u041B\\u0435\\u0433\\u043A\\u043E \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435, \\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0439\\u0442\\u0435 \\u0438\\xA0\\u043E\\u0442\\u0441\\u043B\\u0435\\u0436\\u0438\\u0432\\u0430\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0438 \\u043A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0432\\u0430\\u043B\\u044E\\u0442\\u044B. \\u041E\\u043F\\u0442\\u0438\\u043C\\u0438\\u0437\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0438 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438 \\u0441\\xA0\\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \\u0434\\u0435\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0439.\",\n    getAWallet: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\"\n  }\n};\nconst actionModal = {\n  confirmTransaction: {\n    header: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u0432\\xA0{{ name }}\",\n    text: \"\\u042D\\u0442\\u043E \\u0437\\u0430\\u0439\\u043C\\u0435\\u0442 \\u043F\\u0430\\u0440\\u0443 \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434.\"\n  },\n  transactionSent: \"$notifications.transactionSent\",\n  transactionCanceled: \"$notifications.transactionCanceled\"\n};\nconst ru = {\n  common,\n  button,\n  notifications,\n  walletItem,\n  walletModal,\n  actionModal\n};\nconst i18nDictionary = {\n  en: parseDictionary(en),\n  ru: parseDictionary(ru)\n};\nfunction parseDictionary(dictionary) {\n  const refSymbol = \"$\";\n  const iterate = (subDictionary) => {\n    Object.entries(subDictionary).forEach(([key, value]) => {\n      if (typeof value === \"object\" && value) {\n        return iterate(value);\n      }\n      if (typeof value === \"string\") {\n        if (value[0] === refSymbol) {\n          const path = value.slice(1).split(\".\");\n          let obj = dictionary;\n          path.forEach((item) => {\n            if (item in obj) {\n              obj = obj[item];\n            } else {\n              throw new Error(\n                `Cannot parse translations: there is no property ${item} in translation`\n              );\n            }\n          });\n          subDictionary[key] = obj;\n        }\n        if (value.slice(0, 2) === `\\\\${refSymbol}`) {\n          subDictionary[key] = value.slice(1);\n        }\n      }\n    });\n  };\n  iterate(dictionary);\n  return dictionary;\n}\nconst ConnectorContext = createContext();\nconst $RAW = Symbol(\"store-raw\"), $NODE = Symbol(\"store-node\"), $NAME = Symbol(\"store-name\");\nfunction wrap$1(value, name) {\n  let p2 = value[$PROXY];\n  if (!p2) {\n    Object.defineProperty(value, $PROXY, {\n      value: p2 = new Proxy(value, proxyTraps$1)\n    });\n    if (!Array.isArray(value)) {\n      const keys = Object.keys(value), desc = Object.getOwnPropertyDescriptors(value);\n      for (let i2 = 0, l2 = keys.length; i2 < l2; i2++) {\n        const prop = keys[i2];\n        if (desc[prop].get) {\n          Object.defineProperty(value, prop, {\n            enumerable: desc[prop].enumerable,\n            get: desc[prop].get.bind(p2)\n          });\n        }\n      }\n    }\n  }\n  return p2;\n}\nfunction isWrappable(obj) {\n  let proto;\n  return obj != null && typeof obj === \"object\" && (obj[$PROXY] || !(proto = Object.getPrototypeOf(obj)) || proto === Object.prototype || Array.isArray(obj));\n}\nfunction unwrap(item, set = /* @__PURE__ */ new Set()) {\n  let result, unwrapped, v, prop;\n  if (result = item != null && item[$RAW])\n    return result;\n  if (!isWrappable(item) || set.has(item))\n    return item;\n  if (Array.isArray(item)) {\n    if (Object.isFrozen(item))\n      item = item.slice(0);\n    else\n      set.add(item);\n    for (let i2 = 0, l2 = item.length; i2 < l2; i2++) {\n      v = item[i2];\n      if ((unwrapped = unwrap(v, set)) !== v)\n        item[i2] = unwrapped;\n    }\n  } else {\n    if (Object.isFrozen(item))\n      item = Object.assign({}, item);\n    else\n      set.add(item);\n    const keys = Object.keys(item), desc = Object.getOwnPropertyDescriptors(item);\n    for (let i2 = 0, l2 = keys.length; i2 < l2; i2++) {\n      prop = keys[i2];\n      if (desc[prop].get)\n        continue;\n      v = item[prop];\n      if ((unwrapped = unwrap(v, set)) !== v)\n        item[prop] = unwrapped;\n    }\n  }\n  return item;\n}\nfunction getDataNodes(target) {\n  let nodes = target[$NODE];\n  if (!nodes)\n    Object.defineProperty(target, $NODE, {\n      value: nodes = {}\n    });\n  return nodes;\n}\nfunction getDataNode(nodes, property, value) {\n  return nodes[property] || (nodes[property] = createDataNode(value));\n}\nfunction proxyDescriptor$1(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || !desc.configurable || property === $PROXY || property === $NODE || property === $NAME)\n    return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  return desc;\n}\nfunction trackSelf(target) {\n  if (getListener()) {\n    const nodes = getDataNodes(target);\n    (nodes._ || (nodes._ = createDataNode()))();\n  }\n}\nfunction ownKeys(target) {\n  trackSelf(target);\n  return Reflect.ownKeys(target);\n}\nfunction createDataNode(value) {\n  const [s2, set] = createSignal(value, {\n    equals: false,\n    internal: true\n  });\n  s2.$ = set;\n  return s2;\n}\nconst proxyTraps$1 = {\n  get(target, property, receiver) {\n    if (property === $RAW)\n      return target;\n    if (property === $PROXY)\n      return receiver;\n    if (property === $TRACK) {\n      trackSelf(target);\n      return receiver;\n    }\n    const nodes = getDataNodes(target);\n    const tracked = nodes.hasOwnProperty(property);\n    let value = tracked ? nodes[property]() : target[property];\n    if (property === $NODE || property === \"__proto__\")\n      return value;\n    if (!tracked) {\n      const desc = Object.getOwnPropertyDescriptor(target, property);\n      if (getListener() && (typeof value !== \"function\" || target.hasOwnProperty(property)) && !(desc && desc.get))\n        value = getDataNode(nodes, property, value)();\n    }\n    return isWrappable(value) ? wrap$1(value) : value;\n  },\n  has(target, property) {\n    if (property === $RAW || property === $PROXY || property === $TRACK || property === $NODE || property === \"__proto__\")\n      return true;\n    this.get(target, property, target);\n    return property in target;\n  },\n  set() {\n    return true;\n  },\n  deleteProperty() {\n    return true;\n  },\n  ownKeys,\n  getOwnPropertyDescriptor: proxyDescriptor$1\n};\nfunction setProperty(state, property, value, deleting = false) {\n  if (!deleting && state[property] === value)\n    return;\n  const prev = state[property], len = state.length;\n  if (value === void 0)\n    delete state[property];\n  else\n    state[property] = value;\n  let nodes = getDataNodes(state), node;\n  if (node = getDataNode(nodes, property, prev))\n    node.$(() => value);\n  if (Array.isArray(state) && state.length !== len)\n    (node = getDataNode(nodes, \"length\", len)) && node.$(state.length);\n  (node = nodes._) && node.$();\n}\nfunction mergeStoreNode(state, value) {\n  const keys = Object.keys(value);\n  for (let i2 = 0; i2 < keys.length; i2 += 1) {\n    const key = keys[i2];\n    setProperty(state, key, value[key]);\n  }\n}\nfunction updateArray(current, next) {\n  if (typeof next === \"function\")\n    next = next(current);\n  next = unwrap(next);\n  if (Array.isArray(next)) {\n    if (current === next)\n      return;\n    let i2 = 0, len = next.length;\n    for (; i2 < len; i2++) {\n      const value = next[i2];\n      if (current[i2] !== value)\n        setProperty(current, i2, value);\n    }\n    setProperty(current, \"length\", len);\n  } else\n    mergeStoreNode(current, next);\n}\nfunction updatePath(current, path, traversed = []) {\n  let part, prev = current;\n  if (path.length > 1) {\n    part = path.shift();\n    const partType = typeof part, isArray = Array.isArray(current);\n    if (Array.isArray(part)) {\n      for (let i2 = 0; i2 < part.length; i2++) {\n        updatePath(current, [part[i2]].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"function\") {\n      for (let i2 = 0; i2 < current.length; i2++) {\n        if (part(current[i2], i2))\n          updatePath(current, [i2].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"object\") {\n      const {\n        from = 0,\n        to = current.length - 1,\n        by = 1\n      } = part;\n      for (let i2 = from; i2 <= to; i2 += by) {\n        updatePath(current, [i2].concat(path), traversed);\n      }\n      return;\n    } else if (path.length > 1) {\n      updatePath(current[part], path, [part].concat(traversed));\n      return;\n    }\n    prev = current[part];\n    traversed = [part].concat(traversed);\n  }\n  let value = path[0];\n  if (typeof value === \"function\") {\n    value = value(prev, traversed);\n    if (value === prev)\n      return;\n  }\n  if (part === void 0 && value == void 0)\n    return;\n  value = unwrap(value);\n  if (part === void 0 || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {\n    mergeStoreNode(prev, value);\n  } else\n    setProperty(current, part, value);\n}\nfunction createStore(...[store, options]) {\n  const unwrappedStore = unwrap(store || {});\n  const isArray = Array.isArray(unwrappedStore);\n  const wrappedStore = wrap$1(unwrappedStore);\n  function setStore(...args) {\n    batch(() => {\n      isArray && args.length === 1 ? updateArray(unwrappedStore, args[0]) : updatePath(unwrappedStore, args);\n    });\n  }\n  return [wrappedStore, setStore];\n}\nconst defaultLightColorsSet = {\n  constant: {\n    black: \"#000000\",\n    white: \"#FFFFFF\"\n  },\n  connectButton: {\n    background: \"#0098EA\",\n    foreground: \"#FFFFFF\"\n  },\n  accent: \"#0098EA\",\n  telegramButton: \"#0098EA\",\n  icon: {\n    primary: \"#0F0F0F\",\n    secondary: \"#7A8999\",\n    tertiary: \"#C1CAD2\",\n    success: \"#29CC6A\",\n    error: \"#F5A73B\"\n  },\n  background: {\n    primary: \"#FFFFFF\",\n    secondary: \"#F1F3F5\",\n    segment: \"#FFFFFF\",\n    tint: \"#F1F3F5\",\n    qr: \"#F1F3F5\"\n  },\n  text: {\n    primary: \"#0F0F0F\",\n    secondary: \"#6A7785\"\n  }\n};\nconst defaultDarkColorsSet = {\n  constant: {\n    black: \"#000000\",\n    white: \"#FFFFFF\"\n  },\n  connectButton: {\n    background: \"#0098EA\",\n    foreground: \"#FFFFFF\"\n  },\n  accent: \"#E5E5EA\",\n  telegramButton: \"#31A6F5\",\n  icon: {\n    primary: \"#E5E5EA\",\n    secondary: \"#909099\",\n    tertiary: \"#434347\",\n    success: \"#29CC6A\",\n    error: \"#F5A73B\"\n  },\n  background: {\n    primary: \"#121214\",\n    secondary: \"#18181A\",\n    segment: \"#262629\",\n    tint: \"#222224\",\n    qr: \"#FFFFFF\"\n  },\n  text: {\n    primary: \"#E5E5EA\",\n    secondary: \"#7D7D85\"\n  }\n};\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\nfunction isObject(o2) {\n  return Object.prototype.toString.call(o2) === \"[object Object]\";\n}\nfunction isPlainObject(o2) {\n  var ctor, prot;\n  if (isObject(o2) === false)\n    return false;\n  ctor = o2.constructor;\n  if (ctor === void 0)\n    return true;\n  prot = ctor.prototype;\n  if (isObject(prot) === false)\n    return false;\n  if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n    return false;\n  }\n  return true;\n}\nfunction mergeOptions(options, defaultOptions) {\n  if (!options) {\n    return defaultOptions;\n  }\n  const overwriteMerge = (_, sourceArray, __) => sourceArray;\n  return deepmerge__WEBPACK_IMPORTED_MODULE_2__(defaultOptions, options, {\n    arrayMerge: overwriteMerge,\n    isMergeableObject: isPlainObject\n  });\n}\nconst [themeState, setThemeState] = createStore({\n  theme: THEME.LIGHT,\n  colors: defaultLightColorsSet,\n  borderRadius: \"m\"\n});\nconst themeColorsMappingDefault = {\n  [THEME.LIGHT]: defaultLightColorsSet,\n  [THEME.DARK]: defaultDarkColorsSet\n};\nconst themeCustomColors = {\n  [THEME.LIGHT]: void 0,\n  [THEME.DARK]: void 0\n};\nfunction setTheme(theme, colorsSet) {\n  if (colorsSet) {\n    themeCustomColors[THEME.DARK] = mergeOptions(\n      colorsSet[THEME.DARK],\n      themeCustomColors[THEME.DARK]\n    );\n    themeCustomColors[THEME.LIGHT] = mergeOptions(\n      colorsSet[THEME.LIGHT],\n      themeCustomColors[THEME.LIGHT]\n    );\n  }\n  setThemeState({\n    theme,\n    colors: mergeOptions(themeCustomColors[theme], themeColorsMappingDefault[theme])\n  });\n}\nfunction setBorderRadius(borderRadius) {\n  setThemeState({ borderRadius });\n}\nfunction setColors(colorsSet) {\n  themeCustomColors[THEME.DARK] = mergeOptions(\n    colorsSet[THEME.DARK],\n    themeCustomColors[THEME.DARK]\n  );\n  themeCustomColors[THEME.LIGHT] = mergeOptions(\n    colorsSet[THEME.LIGHT],\n    themeCustomColors[THEME.LIGHT]\n  );\n  setThemeState((state) => ({\n    colors: mergeOptions(\n      themeCustomColors[state.theme],\n      themeColorsMappingDefault[state.theme]\n    )\n  }));\n}\nconst ImagePlaceholder = styled.div`\n    background-color: ${(props) => props.theme.colors.background.secondary};\n`;\nconst Image = (props) => {\n  let imgRef;\n  const [image, setImage] = createSignal(null);\n  createEffect(() => {\n    const img = new window.Image();\n    img.src = props.src;\n    img.alt = props.alt || \"\";\n    img.setAttribute(\"draggable\", \"false\");\n    if (props.class) {\n      img.classList.add(props.class);\n    }\n    if (img.complete) {\n      return setImage(img);\n    }\n    img.addEventListener(\"load\", () => setImage(img));\n    return () => img.removeEventListener(\"load\", () => setImage(img));\n  });\n  return [createComponent(Show, {\n    get when() {\n      return image();\n    },\n    get children() {\n      return image();\n    }\n  }), createComponent(Show, {\n    get when() {\n      return !image();\n    },\n    get children() {\n      return createComponent(ImagePlaceholder, {\n        get [\"class\"]() {\n          return props.class;\n        },\n        ref(r$) {\n          const _ref$ = imgRef;\n          typeof _ref$ === \"function\" ? _ref$(r$) : imgRef = r$;\n        }\n      });\n    }\n  })];\n};\nlet initParams = {};\ntry {\n  let locationHash = location.hash.toString();\n  initParams = urlParseHashParams(locationHash);\n} catch (e2) {\n}\nlet tmaPlatform = \"unknown\";\nif (initParams == null ? void 0 : initParams.tgWebAppPlatform) {\n  tmaPlatform = (_a = initParams.tgWebAppPlatform) != null ? _a : \"unknown\";\n}\nif (tmaPlatform === \"unknown\") {\n  const window2 = getWindow$1();\n  tmaPlatform = (_d = (_c = (_b = window2 == null ? void 0 : window2.Telegram) == null ? void 0 : _b.WebApp) == null ? void 0 : _c.platform) != null ? _d : \"unknown\";\n}\nlet webAppVersion = \"6.0\";\nif (initParams == null ? void 0 : initParams.tgWebAppVersion) {\n  webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n  const window2 = getWindow$1();\n  webAppVersion = (_g = (_f = (_e = window2 == null ? void 0 : window2.Telegram) == null ? void 0 : _e.WebApp) == null ? void 0 : _f.version) != null ? _g : \"6.0\";\n}\nfunction isTmaPlatform(...platforms) {\n  return platforms.includes(tmaPlatform);\n}\nfunction isInTMA() {\n  var _a2;\n  return tmaPlatform !== \"unknown\" || !!((_a2 = getWindow$1()) == null ? void 0 : _a2.TelegramWebviewProxy);\n}\nfunction isInTelegramBrowser() {\n  var _a2;\n  const isTelegramWebview = !!((_a2 = getWindow$1()) == null ? void 0 : _a2.TelegramWebview);\n  return (isInTMA() || isTelegramWebview) && tmaPlatform === \"unknown\";\n}\nfunction sendExpand() {\n  postEvent(\"web_app_expand\", {});\n}\nfunction sendOpenTelegramLink(link, fallback) {\n  const url = new URL(link);\n  if (url.protocol !== \"http:\" && url.protocol !== \"https:\") {\n    if (fallback) {\n      return fallback();\n    }\n    throw new TonConnectUIError(`Url protocol is not supported: ${url}`);\n  }\n  if (url.hostname !== \"t.me\") {\n    if (fallback) {\n      return fallback();\n    }\n    throw new TonConnectUIError(`Url host is not supported: ${url}`);\n  }\n  const pathFull = url.pathname + url.search;\n  if (isIframe() || versionAtLeast(\"6.1\")) {\n    postEvent(\"web_app_open_tg_link\", { path_full: pathFull });\n  } else {\n    openLinkBlank(\"https://t.me\" + pathFull);\n  }\n}\nfunction isIframe() {\n  try {\n    const window2 = getWindow$1();\n    if (!window2) {\n      return false;\n    }\n    return window2.parent != null && window2 !== window2.parent;\n  } catch (e2) {\n    return false;\n  }\n}\nfunction postEvent(eventType, eventData) {\n  try {\n    const window2 = getWindow$1();\n    if (!window2) {\n      throw new TonConnectUIError(`Can't post event to parent window: window is not defined`);\n    }\n    if (window2.TelegramWebviewProxy !== void 0) {\n      logDebug(\"postEvent\", eventType, eventData);\n      window2.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n    } else if (window2.external && \"notify\" in window2.external) {\n      logDebug(\"postEvent\", eventType, eventData);\n      window2.external.notify(JSON.stringify({ eventType, eventData }));\n    } else if (isIframe()) {\n      const trustedTarget = \"*\";\n      const message = JSON.stringify({ eventType, eventData });\n      logDebug(\"postEvent\", eventType, eventData);\n      window2.parent.postMessage(message, trustedTarget);\n    } else {\n      throw new TonConnectUIError(`Can't post event to TMA`);\n    }\n  } catch (e2) {\n    logError(`Can't post event to parent window: ${e2}`);\n  }\n}\nfunction urlParseHashParams(locationHash) {\n  locationHash = locationHash.replace(/^#/, \"\");\n  let params = {};\n  if (!locationHash.length) {\n    return params;\n  }\n  if (locationHash.indexOf(\"=\") < 0 && locationHash.indexOf(\"?\") < 0) {\n    params._path = urlSafeDecode(locationHash);\n    return params;\n  }\n  let qIndex = locationHash.indexOf(\"?\");\n  if (qIndex >= 0) {\n    let pathParam = locationHash.substr(0, qIndex);\n    params._path = urlSafeDecode(pathParam);\n    locationHash = locationHash.substr(qIndex + 1);\n  }\n  let query_params = urlParseQueryString(locationHash);\n  for (let k in query_params) {\n    params[k] = query_params[k];\n  }\n  return params;\n}\nfunction urlSafeDecode(urlencoded) {\n  try {\n    urlencoded = urlencoded.replace(/\\+/g, \"%20\");\n    return decodeURIComponent(urlencoded);\n  } catch (e2) {\n    return urlencoded;\n  }\n}\nfunction urlParseQueryString(queryString) {\n  let params = {};\n  if (!queryString.length) {\n    return params;\n  }\n  let queryStringParams = queryString.split(\"&\");\n  let i2, param, paramName, paramValue;\n  for (i2 = 0; i2 < queryStringParams.length; i2++) {\n    param = queryStringParams[i2].split(\"=\");\n    paramName = urlSafeDecode(param[0]);\n    paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n    params[paramName] = paramValue;\n  }\n  return params;\n}\nfunction versionCompare(v1, v2) {\n  if (typeof v1 !== \"string\")\n    v1 = \"\";\n  if (typeof v2 !== \"string\")\n    v2 = \"\";\n  let v1List = v1.replace(/^\\s+|\\s+$/g, \"\").split(\".\");\n  let v2List = v2.replace(/^\\s+|\\s+$/g, \"\").split(\".\");\n  let a2, i2, p1, p2;\n  a2 = Math.max(v1List.length, v2List.length);\n  for (i2 = 0; i2 < a2; i2++) {\n    p1 = parseInt(v1List[i2]) || 0;\n    p2 = parseInt(v2List[i2]) || 0;\n    if (p1 === p2)\n      continue;\n    if (p1 > p2)\n      return 1;\n    return -1;\n  }\n  return 0;\n}\nfunction versionAtLeast(ver) {\n  return versionCompare(webAppVersion, ver) >= 0;\n}\nconst maxWidth = {\n  mobile: 440,\n  tablet: 1020\n};\nfunction isDevice(device) {\n  const window2 = getWindow$1();\n  if (!window2) {\n    return device === \"desktop\";\n  }\n  if (isTmaPlatform(\"weba\")) {\n    return true;\n  }\n  const width = window2.innerWidth;\n  switch (device) {\n    case \"desktop\":\n      return width > maxWidth.tablet;\n    case \"tablet\":\n      return width > maxWidth.mobile;\n    default:\n    case \"mobile\":\n      return width <= maxWidth.mobile || isOS(\"ios\", \"android\", \"ipad\");\n  }\n}\nfunction media(device) {\n  switch (device) {\n    case \"mobile\":\n      return `@media (max-width: ${maxWidth.mobile}px)`;\n    case \"tablet\":\n      return `@media (max-width: ${maxWidth.tablet}px) (min-width: ${maxWidth.mobile}px)`;\n    default:\n    case \"desktop\":\n      return `@media (min-width: ${maxWidth.tablet}px)`;\n  }\n}\nconst mediaTouch = \"@media (hover: none)\";\nconst mediaNotTouch = \"@media not all and (hover: none)\";\nconst borders$5 = {\n  m: \"100vh\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst scaleValues = {\n  s: 0.02,\n  m: 0.04\n};\nconst ButtonStyled$1 = styled.button`\n    display: ${(props) => props.leftIcon || props.rightIcon ? \"flex\" : \"inline-block\"};\n    gap: ${(props) => props.leftIcon || props.rightIcon ? \"6px\" : \"unset\"};\n    align-items: ${(props) => props.leftIcon || props.rightIcon ? \"center\" : \"unset\"};\n    justify-content: ${(props) => props.leftIcon || props.rightIcon ? \"space-between\" : \"unset\"};\n    background-color: ${(props) => props.appearance === \"flat\" ? \"transparent\" : props.appearance === \"secondary\" ? props.theme.colors.background.tint : rgba(props.theme.colors.accent, 0.12)};\n    color: ${(props) => props.appearance === \"secondary\" ? props.theme.colors.text.primary : props.theme.colors.accent};\n\n    padding: ${(props) => props.appearance === \"flat\" ? \"0\" : \"9px 16px\"};\n    padding-left: ${(props) => props.leftIcon && props.appearance !== \"flat\" ? \"12px\" : \"16px\"};\n    padding-right: ${(props) => props.rightIcon && props.appearance !== \"flat\" ? \"12px\" : \"16px\"};\n    border: none;\n    border-radius: ${(props) => borders$5[props.theme.borderRadius]};\n    cursor: ${(props) => props.disabled ? \"not-allowed\" : \"pointer\"};\n\n    font-size: 14px;\n    font-weight: 510;\n    line-height: 18px;\n\n    transition: transform 0.125s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: ${(props) => props.disabled ? \"unset\" : `scale(${1 + scaleValues[props.scale]})`};\n        }\n    }\n\n    &:active {\n        transform: ${(props) => props.disabled ? \"unset\" : `scale(${1 - scaleValues[props.scale]})`};\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: ${(props) => props.disabled ? \"unset\" : `scale(${1 - scaleValues[props.scale] * 2})`};\n        }\n    }\n`;\nfunction useDataAttributes(props) {\n  const keys = untrack(() => Object.keys(props).filter((key) => key.startsWith(\"data-\")));\n  const [dataAttrs] = splitProps(props, keys);\n  return dataAttrs;\n}\nconst Button = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  return createComponent(ButtonStyled$1, mergeProps({\n    get appearance() {\n      return props.appearance || \"primary\";\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: (e2) => {\n      var _a2;\n      return (_a2 = props.onClick) == null ? void 0 : _a2.call(props, e2);\n    },\n    onMouseEnter: (e2) => {\n      var _a2;\n      return (_a2 = props.onMouseEnter) == null ? void 0 : _a2.call(props, e2);\n    },\n    onMouseLeave: (e2) => {\n      var _a2;\n      return (_a2 = props.onMouseLeave) == null ? void 0 : _a2.call(props, e2);\n    },\n    ref(r$) {\n      const _ref$ = props.ref;\n      typeof _ref$ === \"function\" ? _ref$(r$) : props.ref = r$;\n    },\n    get disabled() {\n      return props.disabled;\n    },\n    get scale() {\n      return props.scale || \"m\";\n    },\n    get leftIcon() {\n      return !!props.leftIcon;\n    },\n    get rightIcon() {\n      return !!props.rightIcon;\n    },\n    \"data-tc-button\": \"true\"\n  }, dataAttrs, {\n    get children() {\n      return [createMemo(() => props.leftIcon), createMemo(() => props.children), createMemo(() => props.rightIcon)];\n    }\n  }));\n};\nfunction nextFrame(fn) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(fn);\n  });\n}\nconst Transition = (props) => {\n  let el;\n  let first = true;\n  const [s1, set1] = createSignal();\n  const [s2, set2] = createSignal();\n  const resolved = children(() => props.children);\n  const {\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onBeforeExit,\n    onExit,\n    onAfterExit\n  } = props;\n  const classnames = createMemo(() => {\n    const name = props.name || \"s\";\n    return {\n      enterActiveClass: props.enterActiveClass || name + \"-enter-active\",\n      enterClass: props.enterClass || name + \"-enter\",\n      enterToClass: props.enterToClass || name + \"-enter-to\",\n      exitActiveClass: props.exitActiveClass || name + \"-exit-active\",\n      exitClass: props.exitClass || name + \"-exit\",\n      exitToClass: props.exitToClass || name + \"-exit-to\"\n    };\n  });\n  function enterTransition(el2, prev) {\n    if (!first || props.appear) {\n      let endTransition = function(e2) {\n        if (el2 && (!e2 || e2.target === el2)) {\n          el2.removeEventListener(\"transitionend\", endTransition);\n          el2.removeEventListener(\"animationend\", endTransition);\n          el2.classList.remove(...enterActiveClasses);\n          el2.classList.remove(...enterToClasses);\n          batch(() => {\n            s1() !== el2 && set1(el2);\n            s2() === el2 && set2(void 0);\n          });\n          onAfterEnter && onAfterEnter(el2);\n          if (props.mode === \"inout\")\n            exitTransition(el2, prev);\n        }\n      };\n      const enterClasses = classnames().enterClass.split(\" \");\n      const enterActiveClasses = classnames().enterActiveClass.split(\" \");\n      const enterToClasses = classnames().enterToClass.split(\" \");\n      onBeforeEnter && onBeforeEnter(el2);\n      el2.classList.add(...enterClasses);\n      el2.classList.add(...enterActiveClasses);\n      nextFrame(() => {\n        el2.classList.remove(...enterClasses);\n        el2.classList.add(...enterToClasses);\n        onEnter && onEnter(el2, () => endTransition());\n        if (!onEnter || onEnter.length < 2) {\n          el2.addEventListener(\"transitionend\", endTransition);\n          el2.addEventListener(\"animationend\", endTransition);\n        }\n      });\n    }\n    prev && !props.mode ? set2(el2) : set1(el2);\n  }\n  function exitTransition(el2, prev) {\n    const exitClasses = classnames().exitClass.split(\" \");\n    const exitActiveClasses = classnames().exitActiveClass.split(\" \");\n    const exitToClasses = classnames().exitToClass.split(\" \");\n    if (!prev.parentNode)\n      return endTransition();\n    onBeforeExit && onBeforeExit(prev);\n    prev.classList.add(...exitClasses);\n    prev.classList.add(...exitActiveClasses);\n    nextFrame(() => {\n      prev.classList.remove(...exitClasses);\n      prev.classList.add(...exitToClasses);\n    });\n    onExit && onExit(prev, () => endTransition());\n    if (!onExit || onExit.length < 2) {\n      prev.addEventListener(\"transitionend\", endTransition);\n      prev.addEventListener(\"animationend\", endTransition);\n    }\n    function endTransition(e2) {\n      if (!e2 || e2.target === prev) {\n        prev.removeEventListener(\"transitionend\", endTransition);\n        prev.removeEventListener(\"animationend\", endTransition);\n        prev.classList.remove(...exitActiveClasses);\n        prev.classList.remove(...exitToClasses);\n        s1() === prev && set1(void 0);\n        onAfterExit && onAfterExit(prev);\n        if (props.mode === \"outin\")\n          enterTransition(el2, prev);\n      }\n    }\n  }\n  createComputed((prev) => {\n    el = resolved();\n    while (typeof el === \"function\")\n      el = el();\n    return untrack(() => {\n      if (el && el !== prev) {\n        if (props.mode !== \"outin\")\n          enterTransition(el, prev);\n        else if (first)\n          set1(el);\n      }\n      if (prev && prev !== el && props.mode !== \"inout\")\n        exitTransition(el, prev);\n      first = false;\n      return el;\n    });\n  });\n  return [s1, s2];\n};\nfunction getRect(element) {\n  const {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height\n  } = element.getBoundingClientRect();\n  const parentRect = element.parentNode.getBoundingClientRect();\n  return {\n    top: top - parentRect.top,\n    bottom,\n    left: left - parentRect.left,\n    right,\n    width,\n    height\n  };\n}\nconst TransitionGroup = (props) => {\n  const resolved = children(() => props.children);\n  const classnames = createMemo(() => {\n    const name = props.name || \"s\";\n    return {\n      enterActiveClass: props.enterActiveClass || name + \"-enter-active\",\n      enterClass: props.enterClass || name + \"-enter\",\n      enterToClass: props.enterToClass || name + \"-enter-to\",\n      exitActiveClass: props.exitActiveClass || name + \"-exit-active\",\n      exitClass: props.exitClass || name + \"-exit\",\n      exitToClass: props.exitToClass || name + \"-exit-to\",\n      moveClass: props.moveClass || name + \"-move\"\n    };\n  });\n  const {\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onBeforeExit,\n    onExit,\n    onAfterExit\n  } = props;\n  const [combined, setCombined] = createSignal();\n  let p2 = [];\n  let first = true;\n  createComputed(() => {\n    const c2 = resolved();\n    const comb = [...c2];\n    const next = new Set(c2);\n    const prev = new Set(p2);\n    const enterClasses = classnames().enterClass.split(\" \");\n    const enterActiveClasses = classnames().enterActiveClass.split(\" \");\n    const enterToClasses = classnames().enterToClass.split(\" \");\n    const exitClasses = classnames().exitClass.split(\" \");\n    const exitActiveClasses = classnames().exitActiveClass.split(\" \");\n    const exitToClasses = classnames().exitToClass.split(\" \");\n    for (let i2 = 0; i2 < c2.length; i2++) {\n      const el = c2[i2];\n      if (!first && !prev.has(el)) {\n        let endTransition = function(e2) {\n          if (el && (!e2 || e2.target === el)) {\n            el.removeEventListener(\"transitionend\", endTransition);\n            el.removeEventListener(\"animationend\", endTransition);\n            el.classList.remove(...enterActiveClasses);\n            el.classList.remove(...enterToClasses);\n            onAfterEnter && onAfterEnter(el);\n          }\n        };\n        onBeforeEnter && onBeforeEnter(el);\n        el.classList.add(...enterClasses);\n        el.classList.add(...enterActiveClasses);\n        nextFrame(() => {\n          el.classList.remove(...enterClasses);\n          el.classList.add(...enterToClasses);\n          onEnter && onEnter(el, () => endTransition());\n          if (!onEnter || onEnter.length < 2) {\n            el.addEventListener(\"transitionend\", endTransition);\n            el.addEventListener(\"animationend\", endTransition);\n          }\n        });\n      }\n    }\n    for (let i2 = 0; i2 < p2.length; i2++) {\n      const old = p2[i2];\n      if (!next.has(old) && old.parentNode) {\n        let endTransition = function(e2) {\n          if (!e2 || e2.target === old) {\n            old.removeEventListener(\"transitionend\", endTransition);\n            old.removeEventListener(\"animationend\", endTransition);\n            old.classList.remove(...exitActiveClasses);\n            old.classList.remove(...exitToClasses);\n            onAfterExit && onAfterExit(old);\n            p2 = p2.filter((i3) => i3 !== old);\n            setCombined(p2);\n          }\n        };\n        comb.splice(i2, 0, old);\n        onBeforeExit && onBeforeExit(old);\n        old.classList.add(...exitClasses);\n        old.classList.add(...exitActiveClasses);\n        nextFrame(() => {\n          old.classList.remove(...exitClasses);\n          old.classList.add(...exitToClasses);\n        });\n        onExit && onExit(old, () => endTransition());\n        if (!onExit || onExit.length < 2) {\n          old.addEventListener(\"transitionend\", endTransition);\n          old.addEventListener(\"animationend\", endTransition);\n        }\n      }\n    }\n    p2 = comb;\n    setCombined(comb);\n  });\n  createEffect((nodes) => {\n    const c2 = combined();\n    c2.forEach((child) => {\n      let n2;\n      if (!(n2 = nodes.get(child))) {\n        nodes.set(child, n2 = {\n          pos: getRect(child),\n          new: !first\n        });\n      } else if (n2.new) {\n        n2.new = false;\n        n2.newPos = getRect(child);\n      }\n      if (n2.new) {\n        child.addEventListener(\"transitionend\", () => {\n          n2.new = false;\n          child.parentNode && (n2.newPos = getRect(child));\n        }, {\n          once: true\n        });\n      }\n      n2.newPos && (n2.pos = n2.newPos);\n      n2.newPos = getRect(child);\n    });\n    if (first) {\n      first = false;\n      return nodes;\n    }\n    c2.forEach((child) => {\n      const c3 = nodes.get(child);\n      const oldPos = c3.pos;\n      const newPos = c3.newPos;\n      const dx = oldPos.left - newPos.left;\n      const dy = oldPos.top - newPos.top;\n      if (dx || dy) {\n        c3.moved = true;\n        const s2 = child.style;\n        s2.transform = `translate(${dx}px,${dy}px)`;\n        s2.transitionDuration = \"0s\";\n      }\n    });\n    document.body.offsetHeight;\n    c2.forEach((child) => {\n      const c3 = nodes.get(child);\n      if (c3.moved) {\n        let endTransition = function(e2) {\n          if (e2 && e2.target !== child || !child.parentNode)\n            return;\n          if (!e2 || /transform$/.test(e2.propertyName)) {\n            child.removeEventListener(\"transitionend\", endTransition);\n            child.classList.remove(...moveClasses);\n          }\n        };\n        c3.moved = false;\n        const s2 = child.style;\n        const moveClasses = classnames().moveClass.split(\" \");\n        child.classList.add(...moveClasses);\n        s2.transform = s2.transitionDuration = \"\";\n        child.addEventListener(\"transitionend\", endTransition);\n      }\n    });\n    return nodes;\n  }, /* @__PURE__ */ new Map());\n  return combined;\n};\nfunction clickOutside$1(el, accessor) {\n  const onClick = (e2) => {\n    var _a2;\n    return !el.contains(e2.target) && ((_a2 = accessor()) == null ? void 0 : _a2());\n  };\n  document.body.addEventListener(\"click\", onClick);\n  onCleanup(() => document.body.removeEventListener(\"click\", onClick));\n}\nfunction escPressed(_, accessor) {\n  const onKeyPress = (e2) => {\n    var _a2, _b2;\n    if (e2.key === \"Escape\") {\n      (_a2 = document.activeElement) == null ? void 0 : _a2.blur();\n      (_b2 = accessor()) == null ? void 0 : _b2();\n    }\n  };\n  document.body.addEventListener(\"keydown\", onKeyPress);\n  onCleanup(() => document.body.removeEventListener(\"keydown\", onKeyPress));\n}\nfunction androidBackHandler$1(_, config) {\n  const {\n    isEnabled,\n    onClose\n  } = config();\n  if (!isEnabled) {\n    return;\n  }\n  const userOSIsAndroid = getUserAgent().os === \"android\";\n  if (!userOSIsAndroid) {\n    return;\n  }\n  window.history.pushState(ROUTE_STATE, \"\");\n  const popstateHandler = (event) => {\n    event.preventDefault();\n    onClose();\n  };\n  window.addEventListener(\"popstate\", popstateHandler, {\n    once: true\n  });\n  onCleanup(() => {\n    window.removeEventListener(\"popstate\", popstateHandler);\n    createMacrotask(() => {\n      var _a2;\n      if (((_a2 = window.history.state) == null ? void 0 : _a2[ROUTE_STATE_KEY]) === true) {\n        window.history.back();\n      }\n    });\n  });\n}\nconst ROUTE_STATE_KEY = \"androidBackHandler\";\nconst ROUTE_STATE = {\n  [ROUTE_STATE_KEY]: true\n};\nconst _tmpl$$u = /* @__PURE__ */ template$1(`<svg><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.2122 14.3407C10.5384 14.0854 10.5959 13.614 10.3406 13.2878L6.20237 8.00003L10.3406 2.71227C10.5959 2.38607 10.5384 1.91469 10.2122 1.6594C9.88604 1.40412 9.41465 1.46161 9.15937 1.7878L4.65937 7.5378C4.44688 7.80932 4.44688 8.19074 4.65937 8.46226L9.15937 14.2123C9.41465 14.5385 9.88604 14.5959 10.2122 14.3407Z\"></path></svg>`, 4, true);\nconst rotationDegrees = {\n  left: 0,\n  top: 90,\n  right: 180,\n  bottom: 270\n};\nconst ArrowIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  const direction = () => props.direction || \"left\";\n  const Svg = styled(\"svg\")`\n        transform: rotate(${(props2) => rotationDegrees[props2.svgDirection]}deg);\n        transition: transform 0.1s ease-in-out;\n    `;\n  return createComponent(Svg, {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    get svgDirection() {\n      return direction();\n    },\n    get children() {\n      const _el$ = _tmpl$$u.cloneNode(true);\n      createRenderEffect(() => setAttribute(_el$, \"fill\", fill()));\n      return _el$;\n    }\n  });\n};\nconst _tmpl$$t = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.71966 2.71968C3.01255 2.42678 3.48743 2.42677 3.78032 2.71966L8.00002 6.93925L12.2197 2.71967C12.5126 2.42677 12.9874 2.42678 13.2803 2.71967C13.5732 3.01257 13.5732 3.48744 13.2803 3.78033L9.06068 7.99991L13.2803 12.2197C13.5732 12.5126 13.5732 12.9874 13.2803 13.2803C12.9874 13.5732 12.5126 13.5732 12.2197 13.2803L8.00002 9.06057L3.78033 13.2803C3.48744 13.5732 3.01257 13.5732 2.71967 13.2803C2.42678 12.9874 2.42677 12.5126 2.71967 12.2197L6.93936 7.99991L2.71968 3.78034C2.42678 3.48745 2.42677 3.01257 2.71966 2.71968Z\"></path></svg>`);\nconst CloseIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$t.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst IconButtonStyled = styled.button`\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    background-color: ${(props) => props.theme.colors.background.tint};\n    border: none;\n    cursor: pointer;\n\n    transition: transform 0.125s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n`;\nconst IconButton = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  const icon = () => props.icon || \"close\";\n  return createComponent(IconButtonStyled, mergeProps({\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: () => props.onClick(),\n    \"data-tc-icon-button\": \"true\"\n  }, dataAttrs, {\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return !!props.children;\n        },\n        get children() {\n          return props.children;\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !props.children;\n        },\n        get children() {\n          return createComponent(Switch, {\n            get children() {\n              return [createComponent(Match, {\n                get when() {\n                  return icon() === \"close\";\n                },\n                get children() {\n                  return createComponent(CloseIcon, {\n                    get fill() {\n                      return props.fill;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return icon() === \"arrow\";\n                },\n                get children() {\n                  return createComponent(ArrowIcon, {\n                    get fill() {\n                      return props.fill;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return icon() === \"question\";\n                },\n                get children() {\n                  return createComponent(QuestionIcon, {\n                    get fill() {\n                      return props.fill;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return typeof icon() !== \"string\";\n                },\n                get children() {\n                  return icon();\n                }\n              })];\n            }\n          });\n        }\n      })];\n    }\n  }));\n};\nconst borders$4 = {\n  m: \"24px\",\n  s: \"16px\",\n  none: \"0\"\n};\nconst ModalBackgroundStyled = styled.div`\n    display: flex;\n    position: fixed;\n    z-index: 1000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.4);\n    padding: 20px 0;\n    overflow-y: auto;\n\n    ${media(\"mobile\")} {\n        padding-bottom: 0;\n    }\n`;\nconst ModalWrapperClass = u`\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08), 0 16px 64px rgba(0, 0, 0, 0.16);\n    width: fit-content;\n    margin: auto;\n\n    ${media(\"mobile\")} {\n        width: 100%;\n        height: fit-content;\n        margin: auto 0 0 0;\n    }\n`;\nconst ModalBodyStyled = styled.div`\n    position: relative;\n    min-height: 100px;\n    width: 416px;\n    padding: 44px 56px 24px;\n\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.04);\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    border-radius: ${(props) => borders$4[props.theme.borderRadius]};\n\n    ${media(\"mobile\")} {\n        width: 100%;\n    }\n`;\nconst CloseButtonStyled = styled(IconButton)`\n    position: absolute;\n    right: 16px;\n    top: 16px;\n`;\nconst ModalFooterStyled = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px 16px 16px 18px;\n    border-radius: 0 0 ${(props) => borders$4[props.theme.borderRadius]}\n        ${(props) => borders$4[props.theme.borderRadius]};\n`;\nconst QuestionButtonStyled = styled(IconButton)`\n    background-color: ${(props) => rgba(props.theme.colors.icon.secondary, 0.12)};\n`;\nclass AnimationTimelineNoop {\n  constructor() {\n    __publicField(this, \"currentTime\", 0);\n  }\n}\nconst _AnimationNoop = class {\n  constructor() {\n    __publicField(this, \"currentTime\", 0);\n    __publicField(this, \"playbackRate\", 1);\n    __publicField(this, \"startTime\", null);\n    __publicField(this, \"timeline\", new AnimationTimelineNoop());\n    __publicField(this, \"finished\", Promise.resolve(this));\n    __publicField(this, \"effect\", null);\n    __publicField(this, \"id\", \"\");\n    __publicField(this, \"pending\", false);\n    __publicField(this, \"playState\", \"finished\");\n    __publicField(this, \"replaceState\", \"active\");\n    __publicField(this, \"ready\", Promise.resolve(this));\n    __publicField(this, \"oncancel\", null);\n    __publicField(this, \"onfinish\", null);\n    __publicField(this, \"onremove\", null);\n  }\n  static create() {\n    if (!_AnimationNoop._instance) {\n      logWarning(\n        \"Animation is not supported in this environment: please consider using the `web-animations-js` polyfill to provide a fallback implementation of the Web Animations API.\"\n      );\n      _AnimationNoop._instance = new _AnimationNoop();\n    }\n    return _AnimationNoop._instance;\n  }\n  cancel() {\n  }\n  finish() {\n  }\n  pause() {\n  }\n  play() {\n  }\n  reverse() {\n  }\n  addEventListener(_type, _listener, _options) {\n  }\n  dispatchEvent(_event) {\n    return false;\n  }\n  removeEventListener(_type, _callback, _options) {\n  }\n  updatePlaybackRate(_playbackRate) {\n  }\n  commitStyles() {\n  }\n  persist() {\n  }\n};\nlet AnimationNoop = _AnimationNoop;\n__publicField(AnimationNoop, \"_instance\", null);\nfunction animate(element, keyframes, options) {\n  if (\"animate\" in element) {\n    return element.animate(keyframes, options);\n  }\n  return AnimationNoop.create();\n}\nconst _tmpl$$s = /* @__PURE__ */ template$1(`<div></div>`);\nconst clickOutside = clickOutside$1;\nconst keyPressed = escPressed;\nconst androidBackHandler = androidBackHandler$1;\nconst Modal = (props) => {\n  const theme = useTheme();\n  const dataAttrs = useDataAttributes(props);\n  createEffect(() => {\n    if (props.opened) {\n      disableScroll();\n    } else {\n      enableScroll();\n    }\n  });\n  return createComponent(Transition, {\n    onBeforeEnter: (el) => {\n      const duration = isDevice(\"mobile\") ? 200 : 100;\n      animate(el, [{\n        opacity: 0\n      }, {\n        opacity: 1\n      }], {\n        duration\n      });\n      if (isDevice(\"mobile\")) {\n        animate(el.firstElementChild, [{\n          transform: \"translateY(390px)\"\n        }, {\n          transform: \"translateY(0)\"\n        }], {\n          duration\n        });\n      }\n    },\n    onExit: (el, done) => {\n      const duration = isDevice(\"mobile\") ? 200 : 100;\n      const backgroundAnimation = animate(el, [{\n        opacity: 1\n      }, {\n        opacity: 0\n      }], {\n        duration\n      });\n      if (isDevice(\"mobile\")) {\n        const contentAnimation = animate(el.firstElementChild, [{\n          transform: \"translateY(0)\"\n        }, {\n          transform: \"translateY(390px)\"\n        }], {\n          duration\n        });\n        Promise.all([backgroundAnimation.finished, contentAnimation.finished]).then(done);\n      } else {\n        backgroundAnimation.finished.then(done);\n      }\n    },\n    get children() {\n      return createComponent(Show, {\n        get when() {\n          return props.opened;\n        },\n        get children() {\n          return createComponent(ModalBackgroundStyled, mergeProps({\n            \"data-tc-modal\": \"true\"\n          }, dataAttrs, {\n            get children() {\n              const _el$ = _tmpl$$s.cloneNode(true);\n              use(androidBackHandler, _el$, () => ({\n                isEnabled: props.enableAndroidBackHandler,\n                onClose: () => props.onClose()\n              }));\n              use(keyPressed, _el$, () => () => props.onClose());\n              use(clickOutside, _el$, () => () => props.onClose());\n              insert(_el$, createComponent(ModalBodyStyled, {\n                get [\"class\"]() {\n                  return props.class;\n                },\n                get children() {\n                  return [createComponent(CloseButtonStyled, {\n                    icon: \"close\",\n                    onClick: () => props.onClose()\n                  }), createMemo(() => props.children)];\n                }\n              }), null);\n              insert(_el$, createComponent(Show, {\n                get when() {\n                  return props.onClickQuestion;\n                },\n                get children() {\n                  return createComponent(ModalFooterStyled, {\n                    get children() {\n                      return [createComponent(TonConnectBrand, {}), createComponent(QuestionButtonStyled, {\n                        get onClick() {\n                          return props.onClickQuestion;\n                        },\n                        icon: \"question\"\n                      })];\n                    }\n                  });\n                }\n              }), null);\n              createRenderEffect(() => className(_el$, classnames__WEBPACK_IMPORTED_MODULE_3__(ModalWrapperClass, u`\n                                border-radius: ${borders$4[theme.borderRadius]};\n                                background-color: ${theme.colors.background.tint};\n\n                                ${media(\"mobile\")} {\n                                    border-radius: ${borders$4[theme.borderRadius]}\n                                        ${borders$4[theme.borderRadius]} 0 0;\n                                }\n                            `)));\n              return _el$;\n            }\n          }));\n        }\n      });\n    }\n  });\n};\nconst wrapperBorderRadius = {\n  m: \"22px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst sliderBorderRadius = {\n  m: \"18px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst TabBarStyled = styled.div`\n    display: grid;\n    grid-template: 1fr / 1fr 1fr;\n    width: fit-content;\n    justify-items: center;\n    gap: 4px;\n\n    position: relative;\n    padding: 4px;\n    border-radius: ${(props) => wrapperBorderRadius[props.theme.borderRadius]};\n\n    background-color: ${(props) => props.theme.colors.background.secondary};\n`;\nconst SliderStyled = styled.div`\n    position: absolute;\n    top: 4px;\n    left: 4px;\n\n    height: calc(100% - 8px);\n    width: calc(50% - 4px);\n\n    border-radius: ${(props) => sliderBorderRadius[props.theme.borderRadius]};\n    background-color: ${(props) => props.theme.colors.background.segment};\n\n    transform: ${(props) => props.right ? \"translateX(100%)\" : \"translateX(0)\"};\n\n    transition: transform 0.13s ease-in-out;\n`;\nconst InputStyled = styled.input`\n    display: none;\n`;\nconst LabelStyled = styled.label`\n    padding: 9px 12px;\n    z-index: 1;\n\n    cursor: ${(props) => props.isActive ? \"default\" : \"pointer\"};\n\n    transition: transform 0.13s ease-in-out;\n\n    &:hover {\n        transform: ${(props) => props.isActive ? \"none\" : \"scale(1.025)\"};\n    }\n\n    > * {\n        ${(props) => !props.isActive ? `color: ${props.theme.colors.text.secondary};` : \"\"}\n    }\n`;\nconst TabBar = (props) => {\n  const groupName = \"tabBar\" + Math.floor(Math.random() * 1e4);\n  return createComponent(TabBarStyled, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-tab-bar\": \"true\",\n    get children() {\n      return [createComponent(SliderStyled, {\n        get right() {\n          return props.selectedTabIndex === 1;\n        }\n      }), createComponent(LabelStyled, {\n        get isActive() {\n          return props.selectedTabIndex === 0;\n        },\n        get children() {\n          return [createComponent(InputStyled, {\n            type: \"radio\",\n            name: groupName,\n            get checked() {\n              return props.selectedTabIndex === 0;\n            },\n            onInput: () => {\n              var _a2;\n              return (_a2 = props.onSelectedTabIndexChange) == null ? void 0 : _a2.call(props, 0);\n            }\n          }), createMemo(() => props.tab1)];\n        }\n      }), createComponent(LabelStyled, {\n        get isActive() {\n          return props.selectedTabIndex === 1;\n        },\n        get children() {\n          return [createComponent(InputStyled, {\n            type: \"radio\",\n            get checked() {\n              return props.selectedTabIndex === 1;\n            },\n            name: groupName,\n            onInput: () => {\n              var _a2;\n              return (_a2 = props.onSelectedTabIndexChange) == null ? void 0 : _a2.call(props, 1);\n            }\n          }), createMemo(() => props.tab2)];\n        }\n      })];\n    }\n  });\n};\nconst backgroundBorders = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst imageBorders = {\n  m: \"12px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst qrNormalSize = 256;\nconst imgSizeDefault = 60;\nconst picSizeDefault = 48;\nconst qrPaddingTop = 24;\nconst CopyIconButton = styled.div`\n    width: 52px;\n    height: 52px;\n    background: transparent;\n    position: absolute;\n    right: 0;\n    bottom: 0;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: transform 0.125s ease-in-out;\n`;\nconst QrCodeBackground = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    background-color: ${(props) => props.theme.colors.background.qr};\n    border-radius: ${(props) => backgroundBorders[props.theme.borderRadius]};\n    padding: ${toPx(qrPaddingTop)} 0;\n    height: ${toPx(qrNormalSize + qrPaddingTop * 2)};\n    width: 100%;\n\n    overflow: hidden;\n    cursor: pointer;\n    border: none;\n\n    ${mediaNotTouch} {\n        &:hover {\n            ${CopyIconButton.class} {\n                transform: scale(1.04);\n            }\n        }\n    }\n\n    &:active {\n        ${CopyIconButton.class} {\n            transform: scale(0.96);\n        }\n    }\n\n    ${mediaTouch} {\n        &:active {\n            ${CopyIconButton.class} {\n                transform: scale(0.92);\n            }\n        }\n    }\n`;\nconst QrCodeWrapper$2 = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n\n    > div:first-child {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    rect {\n        fill: transparent;\n    }\n\n    path {\n        fill: ${(props) => props.theme.colors.constant.black};\n    }\n`;\nconst ImageBackground = styled.div`\n    position: absolute;\n    width: ${toPx(imgSizeDefault)};\n    height: ${toPx(imgSizeDefault)};\n    background: ${(props) => props.theme.colors.background.qr};\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst ImageStyled$3 = styled(Image)`\n    width: ${(props) => toPx(props.size)};\n    height: ${(props) => toPx(props.size)};\n    border-radius: ${(props) => imageBorders[props.theme.borderRadius]};\n    background-color: ${(props) => props.theme.colors.background.qr};\n`;\nconst CopiedBoxStyled = styled.div`\n    position: absolute;\n    bottom: 14px;\n    left: 50%;\n    transform: translate(-50%, 0);\n\n    display: flex;\n    gap: 6px;\n    align-items: center;\n    border-radius: 18px;\n    min-width: 126px;\n    padding: 9px 16px 9px 10px;\n\n    filter: drop-shadow(0px 2px 8px rgba(0, 0, 0, 0.08));\n    background-color: ${(props) => props.theme.colors.background.segment};\n`;\nvar qrcode$1 = { exports: {} };\n(function(module, exports) {\n  var qrcode2 = function() {\n    var qrcode3 = function(typeNumber, errorCorrectionLevel) {\n      var PAD0 = 236;\n      var PAD1 = 17;\n      var _typeNumber = typeNumber;\n      var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n      var _modules = null;\n      var _moduleCount = 0;\n      var _dataCache = null;\n      var _dataList = [];\n      var _this = {};\n      var makeImpl = function(test, maskPattern) {\n        _moduleCount = _typeNumber * 4 + 17;\n        _modules = function(moduleCount) {\n          var modules = new Array(moduleCount);\n          for (var row = 0; row < moduleCount; row += 1) {\n            modules[row] = new Array(moduleCount);\n            for (var col = 0; col < moduleCount; col += 1) {\n              modules[row][col] = null;\n            }\n          }\n          return modules;\n        }(_moduleCount);\n        setupPositionProbePattern(0, 0);\n        setupPositionProbePattern(_moduleCount - 7, 0);\n        setupPositionProbePattern(0, _moduleCount - 7);\n        setupPositionAdjustPattern();\n        setupTimingPattern();\n        setupTypeInfo(test, maskPattern);\n        if (_typeNumber >= 7) {\n          setupTypeNumber(test);\n        }\n        if (_dataCache == null) {\n          _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n        }\n        mapData(_dataCache, maskPattern);\n      };\n      var setupPositionProbePattern = function(row, col) {\n        for (var r = -1; r <= 7; r += 1) {\n          if (row + r <= -1 || _moduleCount <= row + r)\n            continue;\n          for (var c2 = -1; c2 <= 7; c2 += 1) {\n            if (col + c2 <= -1 || _moduleCount <= col + c2)\n              continue;\n            if (0 <= r && r <= 6 && (c2 == 0 || c2 == 6) || 0 <= c2 && c2 <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c2 && c2 <= 4) {\n              _modules[row + r][col + c2] = true;\n            } else {\n              _modules[row + r][col + c2] = false;\n            }\n          }\n        }\n      };\n      var getBestMaskPattern = function() {\n        var minLostPoint = 0;\n        var pattern = 0;\n        for (var i2 = 0; i2 < 8; i2 += 1) {\n          makeImpl(true, i2);\n          var lostPoint = QRUtil.getLostPoint(_this);\n          if (i2 == 0 || minLostPoint > lostPoint) {\n            minLostPoint = lostPoint;\n            pattern = i2;\n          }\n        }\n        return pattern;\n      };\n      var setupTimingPattern = function() {\n        for (var r = 8; r < _moduleCount - 8; r += 1) {\n          if (_modules[r][6] != null) {\n            continue;\n          }\n          _modules[r][6] = r % 2 == 0;\n        }\n        for (var c2 = 8; c2 < _moduleCount - 8; c2 += 1) {\n          if (_modules[6][c2] != null) {\n            continue;\n          }\n          _modules[6][c2] = c2 % 2 == 0;\n        }\n      };\n      var setupPositionAdjustPattern = function() {\n        var pos = QRUtil.getPatternPosition(_typeNumber);\n        for (var i2 = 0; i2 < pos.length; i2 += 1) {\n          for (var j = 0; j < pos.length; j += 1) {\n            var row = pos[i2];\n            var col = pos[j];\n            if (_modules[row][col] != null) {\n              continue;\n            }\n            for (var r = -2; r <= 2; r += 1) {\n              for (var c2 = -2; c2 <= 2; c2 += 1) {\n                if (r == -2 || r == 2 || c2 == -2 || c2 == 2 || r == 0 && c2 == 0) {\n                  _modules[row + r][col + c2] = true;\n                } else {\n                  _modules[row + r][col + c2] = false;\n                }\n              }\n            }\n          }\n        }\n      };\n      var setupTypeNumber = function(test) {\n        var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n        for (var i2 = 0; i2 < 18; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          _modules[Math.floor(i2 / 3)][i2 % 3 + _moduleCount - 8 - 3] = mod;\n        }\n        for (var i2 = 0; i2 < 18; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          _modules[i2 % 3 + _moduleCount - 8 - 3][Math.floor(i2 / 3)] = mod;\n        }\n      };\n      var setupTypeInfo = function(test, maskPattern) {\n        var data = _errorCorrectionLevel << 3 | maskPattern;\n        var bits = QRUtil.getBCHTypeInfo(data);\n        for (var i2 = 0; i2 < 15; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          if (i2 < 6) {\n            _modules[i2][8] = mod;\n          } else if (i2 < 8) {\n            _modules[i2 + 1][8] = mod;\n          } else {\n            _modules[_moduleCount - 15 + i2][8] = mod;\n          }\n        }\n        for (var i2 = 0; i2 < 15; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          if (i2 < 8) {\n            _modules[8][_moduleCount - i2 - 1] = mod;\n          } else if (i2 < 9) {\n            _modules[8][15 - i2 - 1 + 1] = mod;\n          } else {\n            _modules[8][15 - i2 - 1] = mod;\n          }\n        }\n        _modules[_moduleCount - 8][8] = !test;\n      };\n      var mapData = function(data, maskPattern) {\n        var inc = -1;\n        var row = _moduleCount - 1;\n        var bitIndex = 7;\n        var byteIndex = 0;\n        var maskFunc = QRUtil.getMaskFunction(maskPattern);\n        for (var col = _moduleCount - 1; col > 0; col -= 2) {\n          if (col == 6)\n            col -= 1;\n          while (true) {\n            for (var c2 = 0; c2 < 2; c2 += 1) {\n              if (_modules[row][col - c2] == null) {\n                var dark = false;\n                if (byteIndex < data.length) {\n                  dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n                }\n                var mask = maskFunc(row, col - c2);\n                if (mask) {\n                  dark = !dark;\n                }\n                _modules[row][col - c2] = dark;\n                bitIndex -= 1;\n                if (bitIndex == -1) {\n                  byteIndex += 1;\n                  bitIndex = 7;\n                }\n              }\n            }\n            row += inc;\n            if (row < 0 || _moduleCount <= row) {\n              row -= inc;\n              inc = -inc;\n              break;\n            }\n          }\n        }\n      };\n      var createBytes = function(buffer, rsBlocks) {\n        var offset = 0;\n        var maxDcCount = 0;\n        var maxEcCount = 0;\n        var dcdata = new Array(rsBlocks.length);\n        var ecdata = new Array(rsBlocks.length);\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          var dcCount = rsBlocks[r].dataCount;\n          var ecCount = rsBlocks[r].totalCount - dcCount;\n          maxDcCount = Math.max(maxDcCount, dcCount);\n          maxEcCount = Math.max(maxEcCount, ecCount);\n          dcdata[r] = new Array(dcCount);\n          for (var i2 = 0; i2 < dcdata[r].length; i2 += 1) {\n            dcdata[r][i2] = 255 & buffer.getBuffer()[i2 + offset];\n          }\n          offset += dcCount;\n          var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n          var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n          var modPoly = rawPoly.mod(rsPoly);\n          ecdata[r] = new Array(rsPoly.getLength() - 1);\n          for (var i2 = 0; i2 < ecdata[r].length; i2 += 1) {\n            var modIndex = i2 + modPoly.getLength() - ecdata[r].length;\n            ecdata[r][i2] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;\n          }\n        }\n        var totalCodeCount = 0;\n        for (var i2 = 0; i2 < rsBlocks.length; i2 += 1) {\n          totalCodeCount += rsBlocks[i2].totalCount;\n        }\n        var data = new Array(totalCodeCount);\n        var index = 0;\n        for (var i2 = 0; i2 < maxDcCount; i2 += 1) {\n          for (var r = 0; r < rsBlocks.length; r += 1) {\n            if (i2 < dcdata[r].length) {\n              data[index] = dcdata[r][i2];\n              index += 1;\n            }\n          }\n        }\n        for (var i2 = 0; i2 < maxEcCount; i2 += 1) {\n          for (var r = 0; r < rsBlocks.length; r += 1) {\n            if (i2 < ecdata[r].length) {\n              data[index] = ecdata[r][i2];\n              index += 1;\n            }\n          }\n        }\n        return data;\n      };\n      var createData = function(typeNumber2, errorCorrectionLevel2, dataList) {\n        var rsBlocks = QRRSBlock.getRSBlocks(typeNumber2, errorCorrectionLevel2);\n        var buffer = qrBitBuffer();\n        for (var i2 = 0; i2 < dataList.length; i2 += 1) {\n          var data = dataList[i2];\n          buffer.put(data.getMode(), 4);\n          buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber2));\n          data.write(buffer);\n        }\n        var totalDataCount = 0;\n        for (var i2 = 0; i2 < rsBlocks.length; i2 += 1) {\n          totalDataCount += rsBlocks[i2].dataCount;\n        }\n        if (buffer.getLengthInBits() > totalDataCount * 8) {\n          throw \"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\";\n        }\n        if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n          buffer.put(0, 4);\n        }\n        while (buffer.getLengthInBits() % 8 != 0) {\n          buffer.putBit(false);\n        }\n        while (true) {\n          if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n          }\n          buffer.put(PAD0, 8);\n          if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n          }\n          buffer.put(PAD1, 8);\n        }\n        return createBytes(buffer, rsBlocks);\n      };\n      _this.addData = function(data, mode) {\n        mode = mode || \"Byte\";\n        var newData = null;\n        switch (mode) {\n          case \"Numeric\":\n            newData = qrNumber(data);\n            break;\n          case \"Alphanumeric\":\n            newData = qrAlphaNum(data);\n            break;\n          case \"Byte\":\n            newData = qr8BitByte(data);\n            break;\n          case \"Kanji\":\n            newData = qrKanji(data);\n            break;\n          default:\n            throw \"mode:\" + mode;\n        }\n        _dataList.push(newData);\n        _dataCache = null;\n      };\n      _this.isDark = function(row, col) {\n        if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n          throw row + \",\" + col;\n        }\n        return _modules[row][col];\n      };\n      _this.getModuleCount = function() {\n        return _moduleCount;\n      };\n      _this.make = function() {\n        if (_typeNumber < 1) {\n          var typeNumber2 = 1;\n          for (; typeNumber2 < 40; typeNumber2++) {\n            var rsBlocks = QRRSBlock.getRSBlocks(typeNumber2, _errorCorrectionLevel);\n            var buffer = qrBitBuffer();\n            for (var i2 = 0; i2 < _dataList.length; i2++) {\n              var data = _dataList[i2];\n              buffer.put(data.getMode(), 4);\n              buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber2));\n              data.write(buffer);\n            }\n            var totalDataCount = 0;\n            for (var i2 = 0; i2 < rsBlocks.length; i2++) {\n              totalDataCount += rsBlocks[i2].dataCount;\n            }\n            if (buffer.getLengthInBits() <= totalDataCount * 8) {\n              break;\n            }\n          }\n          _typeNumber = typeNumber2;\n        }\n        makeImpl(false, getBestMaskPattern());\n      };\n      _this.createTableTag = function(cellSize, margin) {\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        var qrHtml = \"\";\n        qrHtml += '<table style=\"';\n        qrHtml += \" border-width: 0px; border-style: none;\";\n        qrHtml += \" border-collapse: collapse;\";\n        qrHtml += \" padding: 0px; margin: \" + margin + \"px;\";\n        qrHtml += '\">';\n        qrHtml += \"<tbody>\";\n        for (var r = 0; r < _this.getModuleCount(); r += 1) {\n          qrHtml += \"<tr>\";\n          for (var c2 = 0; c2 < _this.getModuleCount(); c2 += 1) {\n            qrHtml += '<td style=\"';\n            qrHtml += \" border-width: 0px; border-style: none;\";\n            qrHtml += \" border-collapse: collapse;\";\n            qrHtml += \" padding: 0px; margin: 0px;\";\n            qrHtml += \" width: \" + cellSize + \"px;\";\n            qrHtml += \" height: \" + cellSize + \"px;\";\n            qrHtml += \" background-color: \";\n            qrHtml += _this.isDark(r, c2) ? \"#000000\" : \"#ffffff\";\n            qrHtml += \";\";\n            qrHtml += '\"/>';\n          }\n          qrHtml += \"</tr>\";\n        }\n        qrHtml += \"</tbody>\";\n        qrHtml += \"</table>\";\n        return qrHtml;\n      };\n      _this.createSvgTag = function(cellSize, margin, alt, title) {\n        var opts = {};\n        if (typeof arguments[0] == \"object\") {\n          opts = arguments[0];\n          cellSize = opts.cellSize;\n          margin = opts.margin;\n          alt = opts.alt;\n          title = opts.title;\n        }\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        alt = typeof alt === \"string\" ? { text: alt } : alt || {};\n        alt.text = alt.text || null;\n        alt.id = alt.text ? alt.id || \"qrcode-description\" : null;\n        title = typeof title === \"string\" ? { text: title } : title || {};\n        title.text = title.text || null;\n        title.id = title.text ? title.id || \"qrcode-title\" : null;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var c2, mc, r, mr, qrSvg = \"\", rect;\n        rect = \"l\" + cellSize + \",0 0,\" + cellSize + \" -\" + cellSize + \",0 0,-\" + cellSize + \"z \";\n        qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n        qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : \"\";\n        qrSvg += ' viewBox=\"0 0 ' + size + \" \" + size + '\" ';\n        qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n        qrSvg += title.text || alt.text ? ' role=\"img\" aria-labelledby=\"' + escapeXml([title.id, alt.id].join(\" \").trim()) + '\"' : \"\";\n        qrSvg += \">\";\n        qrSvg += title.text ? '<title id=\"' + escapeXml(title.id) + '\">' + escapeXml(title.text) + \"</title>\" : \"\";\n        qrSvg += alt.text ? '<description id=\"' + escapeXml(alt.id) + '\">' + escapeXml(alt.text) + \"</description>\" : \"\";\n        qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n        qrSvg += '<path d=\"';\n        for (r = 0; r < _this.getModuleCount(); r += 1) {\n          mr = r * cellSize + margin;\n          for (c2 = 0; c2 < _this.getModuleCount(); c2 += 1) {\n            if (_this.isDark(r, c2)) {\n              mc = c2 * cellSize + margin;\n              qrSvg += \"M\" + mc + \",\" + mr + rect;\n            }\n          }\n        }\n        qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n        qrSvg += \"</svg>\";\n        return qrSvg;\n      };\n      _this.createDataURL = function(cellSize, margin) {\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var min2 = margin;\n        var max2 = size - margin;\n        return createDataURL(size, size, function(x, y) {\n          if (min2 <= x && x < max2 && min2 <= y && y < max2) {\n            var c2 = Math.floor((x - min2) / cellSize);\n            var r = Math.floor((y - min2) / cellSize);\n            return _this.isDark(r, c2) ? 0 : 1;\n          } else {\n            return 1;\n          }\n        });\n      };\n      _this.createImgTag = function(cellSize, margin, alt) {\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var img = \"\";\n        img += \"<img\";\n        img += ' src=\"';\n        img += _this.createDataURL(cellSize, margin);\n        img += '\"';\n        img += ' width=\"';\n        img += size;\n        img += '\"';\n        img += ' height=\"';\n        img += size;\n        img += '\"';\n        if (alt) {\n          img += ' alt=\"';\n          img += escapeXml(alt);\n          img += '\"';\n        }\n        img += \"/>\";\n        return img;\n      };\n      var escapeXml = function(s2) {\n        var escaped = \"\";\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          var c2 = s2.charAt(i2);\n          switch (c2) {\n            case \"<\":\n              escaped += \"&lt;\";\n              break;\n            case \">\":\n              escaped += \"&gt;\";\n              break;\n            case \"&\":\n              escaped += \"&amp;\";\n              break;\n            case '\"':\n              escaped += \"&quot;\";\n              break;\n            default:\n              escaped += c2;\n              break;\n          }\n        }\n        return escaped;\n      };\n      var _createHalfASCII = function(margin) {\n        var cellSize = 1;\n        margin = typeof margin == \"undefined\" ? cellSize * 2 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var min2 = margin;\n        var max2 = size - margin;\n        var y, x, r1, r2, p2;\n        var blocks = {\n          \"\\u2588\\u2588\": \"\\u2588\",\n          \"\\u2588 \": \"\\u2580\",\n          \" \\u2588\": \"\\u2584\",\n          \"  \": \" \"\n        };\n        var blocksLastLineNoMargin = {\n          \"\\u2588\\u2588\": \"\\u2580\",\n          \"\\u2588 \": \"\\u2580\",\n          \" \\u2588\": \" \",\n          \"  \": \" \"\n        };\n        var ascii = \"\";\n        for (y = 0; y < size; y += 2) {\n          r1 = Math.floor((y - min2) / cellSize);\n          r2 = Math.floor((y + 1 - min2) / cellSize);\n          for (x = 0; x < size; x += 1) {\n            p2 = \"\\u2588\";\n            if (min2 <= x && x < max2 && min2 <= y && y < max2 && _this.isDark(r1, Math.floor((x - min2) / cellSize))) {\n              p2 = \" \";\n            }\n            if (min2 <= x && x < max2 && min2 <= y + 1 && y + 1 < max2 && _this.isDark(r2, Math.floor((x - min2) / cellSize))) {\n              p2 += \" \";\n            } else {\n              p2 += \"\\u2588\";\n            }\n            ascii += margin < 1 && y + 1 >= max2 ? blocksLastLineNoMargin[p2] : blocks[p2];\n          }\n          ascii += \"\\n\";\n        }\n        if (size % 2 && margin > 0) {\n          return ascii.substring(0, ascii.length - size - 1) + Array(size + 1).join(\"\\u2580\");\n        }\n        return ascii.substring(0, ascii.length - 1);\n      };\n      _this.createASCII = function(cellSize, margin) {\n        cellSize = cellSize || 1;\n        if (cellSize < 2) {\n          return _createHalfASCII(margin);\n        }\n        cellSize -= 1;\n        margin = typeof margin == \"undefined\" ? cellSize * 2 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var min2 = margin;\n        var max2 = size - margin;\n        var y, x, r, p2;\n        var white = Array(cellSize + 1).join(\"\\u2588\\u2588\");\n        var black = Array(cellSize + 1).join(\"  \");\n        var ascii = \"\";\n        var line = \"\";\n        for (y = 0; y < size; y += 1) {\n          r = Math.floor((y - min2) / cellSize);\n          line = \"\";\n          for (x = 0; x < size; x += 1) {\n            p2 = 1;\n            if (min2 <= x && x < max2 && min2 <= y && y < max2 && _this.isDark(r, Math.floor((x - min2) / cellSize))) {\n              p2 = 0;\n            }\n            line += p2 ? white : black;\n          }\n          for (r = 0; r < cellSize; r += 1) {\n            ascii += line + \"\\n\";\n          }\n        }\n        return ascii.substring(0, ascii.length - 1);\n      };\n      _this.renderTo2dContext = function(context, cellSize) {\n        cellSize = cellSize || 2;\n        var length = _this.getModuleCount();\n        for (var row = 0; row < length; row++) {\n          for (var col = 0; col < length; col++) {\n            context.fillStyle = _this.isDark(row, col) ? \"black\" : \"white\";\n            context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n          }\n        }\n      };\n      return _this;\n    };\n    qrcode3.stringToBytesFuncs = {\n      \"default\": function(s2) {\n        var bytes = [];\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          var c2 = s2.charCodeAt(i2);\n          bytes.push(c2 & 255);\n        }\n        return bytes;\n      }\n    };\n    qrcode3.stringToBytes = qrcode3.stringToBytesFuncs[\"default\"];\n    qrcode3.createStringToBytes = function(unicodeData, numChars) {\n      var unicodeMap = function() {\n        var bin = base64DecodeInputStream(unicodeData);\n        var read = function() {\n          var b = bin.read();\n          if (b == -1)\n            throw \"eof\";\n          return b;\n        };\n        var count = 0;\n        var unicodeMap2 = {};\n        while (true) {\n          var b0 = bin.read();\n          if (b0 == -1)\n            break;\n          var b1 = read();\n          var b2 = read();\n          var b3 = read();\n          var k = String.fromCharCode(b0 << 8 | b1);\n          var v = b2 << 8 | b3;\n          unicodeMap2[k] = v;\n          count += 1;\n        }\n        if (count != numChars) {\n          throw count + \" != \" + numChars;\n        }\n        return unicodeMap2;\n      }();\n      var unknownChar = \"?\".charCodeAt(0);\n      return function(s2) {\n        var bytes = [];\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          var c2 = s2.charCodeAt(i2);\n          if (c2 < 128) {\n            bytes.push(c2);\n          } else {\n            var b = unicodeMap[s2.charAt(i2)];\n            if (typeof b == \"number\") {\n              if ((b & 255) == b) {\n                bytes.push(b);\n              } else {\n                bytes.push(b >>> 8);\n                bytes.push(b & 255);\n              }\n            } else {\n              bytes.push(unknownChar);\n            }\n          }\n        }\n        return bytes;\n      };\n    };\n    var QRMode = {\n      MODE_NUMBER: 1 << 0,\n      MODE_ALPHA_NUM: 1 << 1,\n      MODE_8BIT_BYTE: 1 << 2,\n      MODE_KANJI: 1 << 3\n    };\n    var QRErrorCorrectionLevel = {\n      L: 1,\n      M: 0,\n      Q: 3,\n      H: 2\n    };\n    var QRMaskPattern = {\n      PATTERN000: 0,\n      PATTERN001: 1,\n      PATTERN010: 2,\n      PATTERN011: 3,\n      PATTERN100: 4,\n      PATTERN101: 5,\n      PATTERN110: 6,\n      PATTERN111: 7\n    };\n    var QRUtil = function() {\n      var PATTERN_POSITION_TABLE = [\n        [],\n        [6, 18],\n        [6, 22],\n        [6, 26],\n        [6, 30],\n        [6, 34],\n        [6, 22, 38],\n        [6, 24, 42],\n        [6, 26, 46],\n        [6, 28, 50],\n        [6, 30, 54],\n        [6, 32, 58],\n        [6, 34, 62],\n        [6, 26, 46, 66],\n        [6, 26, 48, 70],\n        [6, 26, 50, 74],\n        [6, 30, 54, 78],\n        [6, 30, 56, 82],\n        [6, 30, 58, 86],\n        [6, 34, 62, 90],\n        [6, 28, 50, 72, 94],\n        [6, 26, 50, 74, 98],\n        [6, 30, 54, 78, 102],\n        [6, 28, 54, 80, 106],\n        [6, 32, 58, 84, 110],\n        [6, 30, 58, 86, 114],\n        [6, 34, 62, 90, 118],\n        [6, 26, 50, 74, 98, 122],\n        [6, 30, 54, 78, 102, 126],\n        [6, 26, 52, 78, 104, 130],\n        [6, 30, 56, 82, 108, 134],\n        [6, 34, 60, 86, 112, 138],\n        [6, 30, 58, 86, 114, 142],\n        [6, 34, 62, 90, 118, 146],\n        [6, 30, 54, 78, 102, 126, 150],\n        [6, 24, 50, 76, 102, 128, 154],\n        [6, 28, 54, 80, 106, 132, 158],\n        [6, 32, 58, 84, 110, 136, 162],\n        [6, 26, 54, 82, 110, 138, 166],\n        [6, 30, 58, 86, 114, 142, 170]\n      ];\n      var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;\n      var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;\n      var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;\n      var _this = {};\n      var getBCHDigit = function(data) {\n        var digit = 0;\n        while (data != 0) {\n          digit += 1;\n          data >>>= 1;\n        }\n        return digit;\n      };\n      _this.getBCHTypeInfo = function(data) {\n        var d = data << 10;\n        while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n          d ^= G15 << getBCHDigit(d) - getBCHDigit(G15);\n        }\n        return (data << 10 | d) ^ G15_MASK;\n      };\n      _this.getBCHTypeNumber = function(data) {\n        var d = data << 12;\n        while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n          d ^= G18 << getBCHDigit(d) - getBCHDigit(G18);\n        }\n        return data << 12 | d;\n      };\n      _this.getPatternPosition = function(typeNumber) {\n        return PATTERN_POSITION_TABLE[typeNumber - 1];\n      };\n      _this.getMaskFunction = function(maskPattern) {\n        switch (maskPattern) {\n          case QRMaskPattern.PATTERN000:\n            return function(i2, j) {\n              return (i2 + j) % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN001:\n            return function(i2, j) {\n              return i2 % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN010:\n            return function(i2, j) {\n              return j % 3 == 0;\n            };\n          case QRMaskPattern.PATTERN011:\n            return function(i2, j) {\n              return (i2 + j) % 3 == 0;\n            };\n          case QRMaskPattern.PATTERN100:\n            return function(i2, j) {\n              return (Math.floor(i2 / 2) + Math.floor(j / 3)) % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN101:\n            return function(i2, j) {\n              return i2 * j % 2 + i2 * j % 3 == 0;\n            };\n          case QRMaskPattern.PATTERN110:\n            return function(i2, j) {\n              return (i2 * j % 2 + i2 * j % 3) % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN111:\n            return function(i2, j) {\n              return (i2 * j % 3 + (i2 + j) % 2) % 2 == 0;\n            };\n          default:\n            throw \"bad maskPattern:\" + maskPattern;\n        }\n      };\n      _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n        var a2 = qrPolynomial([1], 0);\n        for (var i2 = 0; i2 < errorCorrectLength; i2 += 1) {\n          a2 = a2.multiply(qrPolynomial([1, QRMath.gexp(i2)], 0));\n        }\n        return a2;\n      };\n      _this.getLengthInBits = function(mode, type) {\n        if (1 <= type && type < 10) {\n          switch (mode) {\n            case QRMode.MODE_NUMBER:\n              return 10;\n            case QRMode.MODE_ALPHA_NUM:\n              return 9;\n            case QRMode.MODE_8BIT_BYTE:\n              return 8;\n            case QRMode.MODE_KANJI:\n              return 8;\n            default:\n              throw \"mode:\" + mode;\n          }\n        } else if (type < 27) {\n          switch (mode) {\n            case QRMode.MODE_NUMBER:\n              return 12;\n            case QRMode.MODE_ALPHA_NUM:\n              return 11;\n            case QRMode.MODE_8BIT_BYTE:\n              return 16;\n            case QRMode.MODE_KANJI:\n              return 10;\n            default:\n              throw \"mode:\" + mode;\n          }\n        } else if (type < 41) {\n          switch (mode) {\n            case QRMode.MODE_NUMBER:\n              return 14;\n            case QRMode.MODE_ALPHA_NUM:\n              return 13;\n            case QRMode.MODE_8BIT_BYTE:\n              return 16;\n            case QRMode.MODE_KANJI:\n              return 12;\n            default:\n              throw \"mode:\" + mode;\n          }\n        } else {\n          throw \"type:\" + type;\n        }\n      };\n      _this.getLostPoint = function(qrcode4) {\n        var moduleCount = qrcode4.getModuleCount();\n        var lostPoint = 0;\n        for (var row = 0; row < moduleCount; row += 1) {\n          for (var col = 0; col < moduleCount; col += 1) {\n            var sameCount = 0;\n            var dark = qrcode4.isDark(row, col);\n            for (var r = -1; r <= 1; r += 1) {\n              if (row + r < 0 || moduleCount <= row + r) {\n                continue;\n              }\n              for (var c2 = -1; c2 <= 1; c2 += 1) {\n                if (col + c2 < 0 || moduleCount <= col + c2) {\n                  continue;\n                }\n                if (r == 0 && c2 == 0) {\n                  continue;\n                }\n                if (dark == qrcode4.isDark(row + r, col + c2)) {\n                  sameCount += 1;\n                }\n              }\n            }\n            if (sameCount > 5) {\n              lostPoint += 3 + sameCount - 5;\n            }\n          }\n        }\n        for (var row = 0; row < moduleCount - 1; row += 1) {\n          for (var col = 0; col < moduleCount - 1; col += 1) {\n            var count = 0;\n            if (qrcode4.isDark(row, col))\n              count += 1;\n            if (qrcode4.isDark(row + 1, col))\n              count += 1;\n            if (qrcode4.isDark(row, col + 1))\n              count += 1;\n            if (qrcode4.isDark(row + 1, col + 1))\n              count += 1;\n            if (count == 0 || count == 4) {\n              lostPoint += 3;\n            }\n          }\n        }\n        for (var row = 0; row < moduleCount; row += 1) {\n          for (var col = 0; col < moduleCount - 6; col += 1) {\n            if (qrcode4.isDark(row, col) && !qrcode4.isDark(row, col + 1) && qrcode4.isDark(row, col + 2) && qrcode4.isDark(row, col + 3) && qrcode4.isDark(row, col + 4) && !qrcode4.isDark(row, col + 5) && qrcode4.isDark(row, col + 6)) {\n              lostPoint += 40;\n            }\n          }\n        }\n        for (var col = 0; col < moduleCount; col += 1) {\n          for (var row = 0; row < moduleCount - 6; row += 1) {\n            if (qrcode4.isDark(row, col) && !qrcode4.isDark(row + 1, col) && qrcode4.isDark(row + 2, col) && qrcode4.isDark(row + 3, col) && qrcode4.isDark(row + 4, col) && !qrcode4.isDark(row + 5, col) && qrcode4.isDark(row + 6, col)) {\n              lostPoint += 40;\n            }\n          }\n        }\n        var darkCount = 0;\n        for (var col = 0; col < moduleCount; col += 1) {\n          for (var row = 0; row < moduleCount; row += 1) {\n            if (qrcode4.isDark(row, col)) {\n              darkCount += 1;\n            }\n          }\n        }\n        var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n        return lostPoint;\n      };\n      return _this;\n    }();\n    var QRMath = function() {\n      var EXP_TABLE = new Array(256);\n      var LOG_TABLE = new Array(256);\n      for (var i2 = 0; i2 < 8; i2 += 1) {\n        EXP_TABLE[i2] = 1 << i2;\n      }\n      for (var i2 = 8; i2 < 256; i2 += 1) {\n        EXP_TABLE[i2] = EXP_TABLE[i2 - 4] ^ EXP_TABLE[i2 - 5] ^ EXP_TABLE[i2 - 6] ^ EXP_TABLE[i2 - 8];\n      }\n      for (var i2 = 0; i2 < 255; i2 += 1) {\n        LOG_TABLE[EXP_TABLE[i2]] = i2;\n      }\n      var _this = {};\n      _this.glog = function(n2) {\n        if (n2 < 1) {\n          throw \"glog(\" + n2 + \")\";\n        }\n        return LOG_TABLE[n2];\n      };\n      _this.gexp = function(n2) {\n        while (n2 < 0) {\n          n2 += 255;\n        }\n        while (n2 >= 256) {\n          n2 -= 255;\n        }\n        return EXP_TABLE[n2];\n      };\n      return _this;\n    }();\n    function qrPolynomial(num, shift) {\n      if (typeof num.length == \"undefined\") {\n        throw num.length + \"/\" + shift;\n      }\n      var _num = function() {\n        var offset = 0;\n        while (offset < num.length && num[offset] == 0) {\n          offset += 1;\n        }\n        var _num2 = new Array(num.length - offset + shift);\n        for (var i2 = 0; i2 < num.length - offset; i2 += 1) {\n          _num2[i2] = num[i2 + offset];\n        }\n        return _num2;\n      }();\n      var _this = {};\n      _this.getAt = function(index) {\n        return _num[index];\n      };\n      _this.getLength = function() {\n        return _num.length;\n      };\n      _this.multiply = function(e2) {\n        var num2 = new Array(_this.getLength() + e2.getLength() - 1);\n        for (var i2 = 0; i2 < _this.getLength(); i2 += 1) {\n          for (var j = 0; j < e2.getLength(); j += 1) {\n            num2[i2 + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i2)) + QRMath.glog(e2.getAt(j)));\n          }\n        }\n        return qrPolynomial(num2, 0);\n      };\n      _this.mod = function(e2) {\n        if (_this.getLength() - e2.getLength() < 0) {\n          return _this;\n        }\n        var ratio = QRMath.glog(_this.getAt(0)) - QRMath.glog(e2.getAt(0));\n        var num2 = new Array(_this.getLength());\n        for (var i2 = 0; i2 < _this.getLength(); i2 += 1) {\n          num2[i2] = _this.getAt(i2);\n        }\n        for (var i2 = 0; i2 < e2.getLength(); i2 += 1) {\n          num2[i2] ^= QRMath.gexp(QRMath.glog(e2.getAt(i2)) + ratio);\n        }\n        return qrPolynomial(num2, 0).mod(e2);\n      };\n      return _this;\n    }\n    var QRRSBlock = function() {\n      var RS_BLOCK_TABLE = [\n        [1, 26, 19],\n        [1, 26, 16],\n        [1, 26, 13],\n        [1, 26, 9],\n        [1, 44, 34],\n        [1, 44, 28],\n        [1, 44, 22],\n        [1, 44, 16],\n        [1, 70, 55],\n        [1, 70, 44],\n        [2, 35, 17],\n        [2, 35, 13],\n        [1, 100, 80],\n        [2, 50, 32],\n        [2, 50, 24],\n        [4, 25, 9],\n        [1, 134, 108],\n        [2, 67, 43],\n        [2, 33, 15, 2, 34, 16],\n        [2, 33, 11, 2, 34, 12],\n        [2, 86, 68],\n        [4, 43, 27],\n        [4, 43, 19],\n        [4, 43, 15],\n        [2, 98, 78],\n        [4, 49, 31],\n        [2, 32, 14, 4, 33, 15],\n        [4, 39, 13, 1, 40, 14],\n        [2, 121, 97],\n        [2, 60, 38, 2, 61, 39],\n        [4, 40, 18, 2, 41, 19],\n        [4, 40, 14, 2, 41, 15],\n        [2, 146, 116],\n        [3, 58, 36, 2, 59, 37],\n        [4, 36, 16, 4, 37, 17],\n        [4, 36, 12, 4, 37, 13],\n        [2, 86, 68, 2, 87, 69],\n        [4, 69, 43, 1, 70, 44],\n        [6, 43, 19, 2, 44, 20],\n        [6, 43, 15, 2, 44, 16],\n        [4, 101, 81],\n        [1, 80, 50, 4, 81, 51],\n        [4, 50, 22, 4, 51, 23],\n        [3, 36, 12, 8, 37, 13],\n        [2, 116, 92, 2, 117, 93],\n        [6, 58, 36, 2, 59, 37],\n        [4, 46, 20, 6, 47, 21],\n        [7, 42, 14, 4, 43, 15],\n        [4, 133, 107],\n        [8, 59, 37, 1, 60, 38],\n        [8, 44, 20, 4, 45, 21],\n        [12, 33, 11, 4, 34, 12],\n        [3, 145, 115, 1, 146, 116],\n        [4, 64, 40, 5, 65, 41],\n        [11, 36, 16, 5, 37, 17],\n        [11, 36, 12, 5, 37, 13],\n        [5, 109, 87, 1, 110, 88],\n        [5, 65, 41, 5, 66, 42],\n        [5, 54, 24, 7, 55, 25],\n        [11, 36, 12, 7, 37, 13],\n        [5, 122, 98, 1, 123, 99],\n        [7, 73, 45, 3, 74, 46],\n        [15, 43, 19, 2, 44, 20],\n        [3, 45, 15, 13, 46, 16],\n        [1, 135, 107, 5, 136, 108],\n        [10, 74, 46, 1, 75, 47],\n        [1, 50, 22, 15, 51, 23],\n        [2, 42, 14, 17, 43, 15],\n        [5, 150, 120, 1, 151, 121],\n        [9, 69, 43, 4, 70, 44],\n        [17, 50, 22, 1, 51, 23],\n        [2, 42, 14, 19, 43, 15],\n        [3, 141, 113, 4, 142, 114],\n        [3, 70, 44, 11, 71, 45],\n        [17, 47, 21, 4, 48, 22],\n        [9, 39, 13, 16, 40, 14],\n        [3, 135, 107, 5, 136, 108],\n        [3, 67, 41, 13, 68, 42],\n        [15, 54, 24, 5, 55, 25],\n        [15, 43, 15, 10, 44, 16],\n        [4, 144, 116, 4, 145, 117],\n        [17, 68, 42],\n        [17, 50, 22, 6, 51, 23],\n        [19, 46, 16, 6, 47, 17],\n        [2, 139, 111, 7, 140, 112],\n        [17, 74, 46],\n        [7, 54, 24, 16, 55, 25],\n        [34, 37, 13],\n        [4, 151, 121, 5, 152, 122],\n        [4, 75, 47, 14, 76, 48],\n        [11, 54, 24, 14, 55, 25],\n        [16, 45, 15, 14, 46, 16],\n        [6, 147, 117, 4, 148, 118],\n        [6, 73, 45, 14, 74, 46],\n        [11, 54, 24, 16, 55, 25],\n        [30, 46, 16, 2, 47, 17],\n        [8, 132, 106, 4, 133, 107],\n        [8, 75, 47, 13, 76, 48],\n        [7, 54, 24, 22, 55, 25],\n        [22, 45, 15, 13, 46, 16],\n        [10, 142, 114, 2, 143, 115],\n        [19, 74, 46, 4, 75, 47],\n        [28, 50, 22, 6, 51, 23],\n        [33, 46, 16, 4, 47, 17],\n        [8, 152, 122, 4, 153, 123],\n        [22, 73, 45, 3, 74, 46],\n        [8, 53, 23, 26, 54, 24],\n        [12, 45, 15, 28, 46, 16],\n        [3, 147, 117, 10, 148, 118],\n        [3, 73, 45, 23, 74, 46],\n        [4, 54, 24, 31, 55, 25],\n        [11, 45, 15, 31, 46, 16],\n        [7, 146, 116, 7, 147, 117],\n        [21, 73, 45, 7, 74, 46],\n        [1, 53, 23, 37, 54, 24],\n        [19, 45, 15, 26, 46, 16],\n        [5, 145, 115, 10, 146, 116],\n        [19, 75, 47, 10, 76, 48],\n        [15, 54, 24, 25, 55, 25],\n        [23, 45, 15, 25, 46, 16],\n        [13, 145, 115, 3, 146, 116],\n        [2, 74, 46, 29, 75, 47],\n        [42, 54, 24, 1, 55, 25],\n        [23, 45, 15, 28, 46, 16],\n        [17, 145, 115],\n        [10, 74, 46, 23, 75, 47],\n        [10, 54, 24, 35, 55, 25],\n        [19, 45, 15, 35, 46, 16],\n        [17, 145, 115, 1, 146, 116],\n        [14, 74, 46, 21, 75, 47],\n        [29, 54, 24, 19, 55, 25],\n        [11, 45, 15, 46, 46, 16],\n        [13, 145, 115, 6, 146, 116],\n        [14, 74, 46, 23, 75, 47],\n        [44, 54, 24, 7, 55, 25],\n        [59, 46, 16, 1, 47, 17],\n        [12, 151, 121, 7, 152, 122],\n        [12, 75, 47, 26, 76, 48],\n        [39, 54, 24, 14, 55, 25],\n        [22, 45, 15, 41, 46, 16],\n        [6, 151, 121, 14, 152, 122],\n        [6, 75, 47, 34, 76, 48],\n        [46, 54, 24, 10, 55, 25],\n        [2, 45, 15, 64, 46, 16],\n        [17, 152, 122, 4, 153, 123],\n        [29, 74, 46, 14, 75, 47],\n        [49, 54, 24, 10, 55, 25],\n        [24, 45, 15, 46, 46, 16],\n        [4, 152, 122, 18, 153, 123],\n        [13, 74, 46, 32, 75, 47],\n        [48, 54, 24, 14, 55, 25],\n        [42, 45, 15, 32, 46, 16],\n        [20, 147, 117, 4, 148, 118],\n        [40, 75, 47, 7, 76, 48],\n        [43, 54, 24, 22, 55, 25],\n        [10, 45, 15, 67, 46, 16],\n        [19, 148, 118, 6, 149, 119],\n        [18, 75, 47, 31, 76, 48],\n        [34, 54, 24, 34, 55, 25],\n        [20, 45, 15, 61, 46, 16]\n      ];\n      var qrRSBlock = function(totalCount, dataCount) {\n        var _this2 = {};\n        _this2.totalCount = totalCount;\n        _this2.dataCount = dataCount;\n        return _this2;\n      };\n      var _this = {};\n      var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n        switch (errorCorrectionLevel) {\n          case QRErrorCorrectionLevel.L:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n          case QRErrorCorrectionLevel.M:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n          case QRErrorCorrectionLevel.Q:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n          case QRErrorCorrectionLevel.H:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n          default:\n            return void 0;\n        }\n      };\n      _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n        var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n        if (typeof rsBlock == \"undefined\") {\n          throw \"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectionLevel:\" + errorCorrectionLevel;\n        }\n        var length = rsBlock.length / 3;\n        var list = [];\n        for (var i2 = 0; i2 < length; i2 += 1) {\n          var count = rsBlock[i2 * 3 + 0];\n          var totalCount = rsBlock[i2 * 3 + 1];\n          var dataCount = rsBlock[i2 * 3 + 2];\n          for (var j = 0; j < count; j += 1) {\n            list.push(qrRSBlock(totalCount, dataCount));\n          }\n        }\n        return list;\n      };\n      return _this;\n    }();\n    var qrBitBuffer = function() {\n      var _buffer = [];\n      var _length = 0;\n      var _this = {};\n      _this.getBuffer = function() {\n        return _buffer;\n      };\n      _this.getAt = function(index) {\n        var bufIndex = Math.floor(index / 8);\n        return (_buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n      };\n      _this.put = function(num, length) {\n        for (var i2 = 0; i2 < length; i2 += 1) {\n          _this.putBit((num >>> length - i2 - 1 & 1) == 1);\n        }\n      };\n      _this.getLengthInBits = function() {\n        return _length;\n      };\n      _this.putBit = function(bit) {\n        var bufIndex = Math.floor(_length / 8);\n        if (_buffer.length <= bufIndex) {\n          _buffer.push(0);\n        }\n        if (bit) {\n          _buffer[bufIndex] |= 128 >>> _length % 8;\n        }\n        _length += 1;\n      };\n      return _this;\n    };\n    var qrNumber = function(data) {\n      var _mode = QRMode.MODE_NUMBER;\n      var _data = data;\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return _data.length;\n      };\n      _this.write = function(buffer) {\n        var data2 = _data;\n        var i2 = 0;\n        while (i2 + 2 < data2.length) {\n          buffer.put(strToNum(data2.substring(i2, i2 + 3)), 10);\n          i2 += 3;\n        }\n        if (i2 < data2.length) {\n          if (data2.length - i2 == 1) {\n            buffer.put(strToNum(data2.substring(i2, i2 + 1)), 4);\n          } else if (data2.length - i2 == 2) {\n            buffer.put(strToNum(data2.substring(i2, i2 + 2)), 7);\n          }\n        }\n      };\n      var strToNum = function(s2) {\n        var num = 0;\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          num = num * 10 + chatToNum(s2.charAt(i2));\n        }\n        return num;\n      };\n      var chatToNum = function(c2) {\n        if (\"0\" <= c2 && c2 <= \"9\") {\n          return c2.charCodeAt(0) - \"0\".charCodeAt(0);\n        }\n        throw \"illegal char :\" + c2;\n      };\n      return _this;\n    };\n    var qrAlphaNum = function(data) {\n      var _mode = QRMode.MODE_ALPHA_NUM;\n      var _data = data;\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return _data.length;\n      };\n      _this.write = function(buffer) {\n        var s2 = _data;\n        var i2 = 0;\n        while (i2 + 1 < s2.length) {\n          buffer.put(\n            getCode(s2.charAt(i2)) * 45 + getCode(s2.charAt(i2 + 1)),\n            11\n          );\n          i2 += 2;\n        }\n        if (i2 < s2.length) {\n          buffer.put(getCode(s2.charAt(i2)), 6);\n        }\n      };\n      var getCode = function(c2) {\n        if (\"0\" <= c2 && c2 <= \"9\") {\n          return c2.charCodeAt(0) - \"0\".charCodeAt(0);\n        } else if (\"A\" <= c2 && c2 <= \"Z\") {\n          return c2.charCodeAt(0) - \"A\".charCodeAt(0) + 10;\n        } else {\n          switch (c2) {\n            case \" \":\n              return 36;\n            case \"$\":\n              return 37;\n            case \"%\":\n              return 38;\n            case \"*\":\n              return 39;\n            case \"+\":\n              return 40;\n            case \"-\":\n              return 41;\n            case \".\":\n              return 42;\n            case \"/\":\n              return 43;\n            case \":\":\n              return 44;\n            default:\n              throw \"illegal char :\" + c2;\n          }\n        }\n      };\n      return _this;\n    };\n    var qr8BitByte = function(data) {\n      var _mode = QRMode.MODE_8BIT_BYTE;\n      var _bytes = qrcode3.stringToBytes(data);\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return _bytes.length;\n      };\n      _this.write = function(buffer) {\n        for (var i2 = 0; i2 < _bytes.length; i2 += 1) {\n          buffer.put(_bytes[i2], 8);\n        }\n      };\n      return _this;\n    };\n    var qrKanji = function(data) {\n      var _mode = QRMode.MODE_KANJI;\n      var stringToBytes = qrcode3.stringToBytesFuncs[\"SJIS\"];\n      if (!stringToBytes) {\n        throw \"sjis not supported.\";\n      }\n      !function(c2, code) {\n        var test = stringToBytes(c2);\n        if (test.length != 2 || (test[0] << 8 | test[1]) != code) {\n          throw \"sjis not supported.\";\n        }\n      }(\"\\u53CB\", 38726);\n      var _bytes = stringToBytes(data);\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return ~~(_bytes.length / 2);\n      };\n      _this.write = function(buffer) {\n        var data2 = _bytes;\n        var i2 = 0;\n        while (i2 + 1 < data2.length) {\n          var c2 = (255 & data2[i2]) << 8 | 255 & data2[i2 + 1];\n          if (33088 <= c2 && c2 <= 40956) {\n            c2 -= 33088;\n          } else if (57408 <= c2 && c2 <= 60351) {\n            c2 -= 49472;\n          } else {\n            throw \"illegal char at \" + (i2 + 1) + \"/\" + c2;\n          }\n          c2 = (c2 >>> 8 & 255) * 192 + (c2 & 255);\n          buffer.put(c2, 13);\n          i2 += 2;\n        }\n        if (i2 < data2.length) {\n          throw \"illegal char at \" + (i2 + 1);\n        }\n      };\n      return _this;\n    };\n    var byteArrayOutputStream = function() {\n      var _bytes = [];\n      var _this = {};\n      _this.writeByte = function(b) {\n        _bytes.push(b & 255);\n      };\n      _this.writeShort = function(i2) {\n        _this.writeByte(i2);\n        _this.writeByte(i2 >>> 8);\n      };\n      _this.writeBytes = function(b, off, len) {\n        off = off || 0;\n        len = len || b.length;\n        for (var i2 = 0; i2 < len; i2 += 1) {\n          _this.writeByte(b[i2 + off]);\n        }\n      };\n      _this.writeString = function(s2) {\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          _this.writeByte(s2.charCodeAt(i2));\n        }\n      };\n      _this.toByteArray = function() {\n        return _bytes;\n      };\n      _this.toString = function() {\n        var s2 = \"\";\n        s2 += \"[\";\n        for (var i2 = 0; i2 < _bytes.length; i2 += 1) {\n          if (i2 > 0) {\n            s2 += \",\";\n          }\n          s2 += _bytes[i2];\n        }\n        s2 += \"]\";\n        return s2;\n      };\n      return _this;\n    };\n    var base64EncodeOutputStream = function() {\n      var _buffer = 0;\n      var _buflen = 0;\n      var _length = 0;\n      var _base64 = \"\";\n      var _this = {};\n      var writeEncoded = function(b) {\n        _base64 += String.fromCharCode(encode(b & 63));\n      };\n      var encode = function(n2) {\n        if (n2 < 0)\n          ;\n        else if (n2 < 26) {\n          return 65 + n2;\n        } else if (n2 < 52) {\n          return 97 + (n2 - 26);\n        } else if (n2 < 62) {\n          return 48 + (n2 - 52);\n        } else if (n2 == 62) {\n          return 43;\n        } else if (n2 == 63) {\n          return 47;\n        }\n        throw \"n:\" + n2;\n      };\n      _this.writeByte = function(n2) {\n        _buffer = _buffer << 8 | n2 & 255;\n        _buflen += 8;\n        _length += 1;\n        while (_buflen >= 6) {\n          writeEncoded(_buffer >>> _buflen - 6);\n          _buflen -= 6;\n        }\n      };\n      _this.flush = function() {\n        if (_buflen > 0) {\n          writeEncoded(_buffer << 6 - _buflen);\n          _buffer = 0;\n          _buflen = 0;\n        }\n        if (_length % 3 != 0) {\n          var padlen = 3 - _length % 3;\n          for (var i2 = 0; i2 < padlen; i2 += 1) {\n            _base64 += \"=\";\n          }\n        }\n      };\n      _this.toString = function() {\n        return _base64;\n      };\n      return _this;\n    };\n    var base64DecodeInputStream = function(str) {\n      var _str = str;\n      var _pos = 0;\n      var _buffer = 0;\n      var _buflen = 0;\n      var _this = {};\n      _this.read = function() {\n        while (_buflen < 8) {\n          if (_pos >= _str.length) {\n            if (_buflen == 0) {\n              return -1;\n            }\n            throw \"unexpected end of file./\" + _buflen;\n          }\n          var c2 = _str.charAt(_pos);\n          _pos += 1;\n          if (c2 == \"=\") {\n            _buflen = 0;\n            return -1;\n          } else if (c2.match(/^\\s$/)) {\n            continue;\n          }\n          _buffer = _buffer << 6 | decode(c2.charCodeAt(0));\n          _buflen += 6;\n        }\n        var n2 = _buffer >>> _buflen - 8 & 255;\n        _buflen -= 8;\n        return n2;\n      };\n      var decode = function(c2) {\n        if (65 <= c2 && c2 <= 90) {\n          return c2 - 65;\n        } else if (97 <= c2 && c2 <= 122) {\n          return c2 - 97 + 26;\n        } else if (48 <= c2 && c2 <= 57) {\n          return c2 - 48 + 52;\n        } else if (c2 == 43) {\n          return 62;\n        } else if (c2 == 47) {\n          return 63;\n        } else {\n          throw \"c:\" + c2;\n        }\n      };\n      return _this;\n    };\n    var gifImage = function(width, height) {\n      var _width = width;\n      var _height = height;\n      var _data = new Array(width * height);\n      var _this = {};\n      _this.setPixel = function(x, y, pixel) {\n        _data[y * _width + x] = pixel;\n      };\n      _this.write = function(out) {\n        out.writeString(\"GIF87a\");\n        out.writeShort(_width);\n        out.writeShort(_height);\n        out.writeByte(128);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(255);\n        out.writeByte(255);\n        out.writeByte(255);\n        out.writeString(\",\");\n        out.writeShort(0);\n        out.writeShort(0);\n        out.writeShort(_width);\n        out.writeShort(_height);\n        out.writeByte(0);\n        var lzwMinCodeSize = 2;\n        var raster = getLZWRaster(lzwMinCodeSize);\n        out.writeByte(lzwMinCodeSize);\n        var offset = 0;\n        while (raster.length - offset > 255) {\n          out.writeByte(255);\n          out.writeBytes(raster, offset, 255);\n          offset += 255;\n        }\n        out.writeByte(raster.length - offset);\n        out.writeBytes(raster, offset, raster.length - offset);\n        out.writeByte(0);\n        out.writeString(\";\");\n      };\n      var bitOutputStream = function(out) {\n        var _out = out;\n        var _bitLength = 0;\n        var _bitBuffer = 0;\n        var _this2 = {};\n        _this2.write = function(data, length) {\n          if (data >>> length != 0) {\n            throw \"length over\";\n          }\n          while (_bitLength + length >= 8) {\n            _out.writeByte(255 & (data << _bitLength | _bitBuffer));\n            length -= 8 - _bitLength;\n            data >>>= 8 - _bitLength;\n            _bitBuffer = 0;\n            _bitLength = 0;\n          }\n          _bitBuffer = data << _bitLength | _bitBuffer;\n          _bitLength = _bitLength + length;\n        };\n        _this2.flush = function() {\n          if (_bitLength > 0) {\n            _out.writeByte(_bitBuffer);\n          }\n        };\n        return _this2;\n      };\n      var getLZWRaster = function(lzwMinCodeSize) {\n        var clearCode = 1 << lzwMinCodeSize;\n        var endCode = (1 << lzwMinCodeSize) + 1;\n        var bitLength = lzwMinCodeSize + 1;\n        var table = lzwTable();\n        for (var i2 = 0; i2 < clearCode; i2 += 1) {\n          table.add(String.fromCharCode(i2));\n        }\n        table.add(String.fromCharCode(clearCode));\n        table.add(String.fromCharCode(endCode));\n        var byteOut = byteArrayOutputStream();\n        var bitOut = bitOutputStream(byteOut);\n        bitOut.write(clearCode, bitLength);\n        var dataIndex = 0;\n        var s2 = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n        while (dataIndex < _data.length) {\n          var c2 = String.fromCharCode(_data[dataIndex]);\n          dataIndex += 1;\n          if (table.contains(s2 + c2)) {\n            s2 = s2 + c2;\n          } else {\n            bitOut.write(table.indexOf(s2), bitLength);\n            if (table.size() < 4095) {\n              if (table.size() == 1 << bitLength) {\n                bitLength += 1;\n              }\n              table.add(s2 + c2);\n            }\n            s2 = c2;\n          }\n        }\n        bitOut.write(table.indexOf(s2), bitLength);\n        bitOut.write(endCode, bitLength);\n        bitOut.flush();\n        return byteOut.toByteArray();\n      };\n      var lzwTable = function() {\n        var _map = {};\n        var _size = 0;\n        var _this2 = {};\n        _this2.add = function(key) {\n          if (_this2.contains(key)) {\n            throw \"dup key:\" + key;\n          }\n          _map[key] = _size;\n          _size += 1;\n        };\n        _this2.size = function() {\n          return _size;\n        };\n        _this2.indexOf = function(key) {\n          return _map[key];\n        };\n        _this2.contains = function(key) {\n          return typeof _map[key] != \"undefined\";\n        };\n        return _this2;\n      };\n      return _this;\n    };\n    var createDataURL = function(width, height, getPixel) {\n      var gif = gifImage(width, height);\n      for (var y = 0; y < height; y += 1) {\n        for (var x = 0; x < width; x += 1) {\n          gif.setPixel(x, y, getPixel(x, y));\n        }\n      }\n      var b = byteArrayOutputStream();\n      gif.write(b);\n      var base64 = base64EncodeOutputStream();\n      var bytes = b.toByteArray();\n      for (var i2 = 0; i2 < bytes.length; i2 += 1) {\n        base64.writeByte(bytes[i2]);\n      }\n      base64.flush();\n      return \"data:image/gif;base64,\" + base64;\n    };\n    return qrcode3;\n  }();\n  !function() {\n    qrcode2.stringToBytesFuncs[\"UTF-8\"] = function(s2) {\n      function toUTF8Array(str) {\n        var utf8 = [];\n        for (var i2 = 0; i2 < str.length; i2++) {\n          var charcode = str.charCodeAt(i2);\n          if (charcode < 128)\n            utf8.push(charcode);\n          else if (charcode < 2048) {\n            utf8.push(\n              192 | charcode >> 6,\n              128 | charcode & 63\n            );\n          } else if (charcode < 55296 || charcode >= 57344) {\n            utf8.push(\n              224 | charcode >> 12,\n              128 | charcode >> 6 & 63,\n              128 | charcode & 63\n            );\n          } else {\n            i2++;\n            charcode = 65536 + ((charcode & 1023) << 10 | str.charCodeAt(i2) & 1023);\n            utf8.push(\n              240 | charcode >> 18,\n              128 | charcode >> 12 & 63,\n              128 | charcode >> 6 & 63,\n              128 | charcode & 63\n            );\n          }\n        }\n        return utf8;\n      }\n      return toUTF8Array(s2);\n    };\n  }();\n  (function(factory) {\n    {\n      module.exports = factory();\n    }\n  })(function() {\n    return qrcode2;\n  });\n})(qrcode$1);\nconst qrcode = qrcode$1.exports;\nfunction copyToClipboard(text) {\n  return __async(this, null, function* () {\n    try {\n      if (!(navigator == null ? void 0 : navigator.clipboard)) {\n        throw new TonConnectUIError(\"Clipboard API not available\");\n      }\n      return yield navigator.clipboard.writeText(text);\n    } catch (e2) {\n    }\n    fallbackCopyTextToClipboard(text);\n  });\n}\nfunction fallbackCopyTextToClipboard(text) {\n  const textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n  try {\n    document.execCommand(\"copy\");\n  } finally {\n    document.body.removeChild(textArea);\n  }\n}\nconst _tmpl$$r = /* @__PURE__ */ template$1(`<div></div>`);\nconst QRCode = (props) => {\n  let qrCodeCanvasRef;\n  let qrCodeWrapperRef;\n  let imageRef;\n  const [copyButtonOpened, setCopyButtonOpened] = createSignal(false);\n  const [picSize, setPicSize] = createSignal(picSizeDefault);\n  createEffect(() => {\n    const errorCorrectionLevel = \"L\";\n    const cellSize = 4;\n    const qr = qrcode(0, errorCorrectionLevel);\n    qr.addData(props.sourceUrl);\n    qr.make();\n    qrCodeCanvasRef.innerHTML = qr.createSvgTag(cellSize, 0);\n    const qrSize = qrCodeCanvasRef.firstElementChild.clientWidth;\n    const scale = Math.round(qrNormalSize / qrSize * 1e5) / 1e5;\n    if (imageRef) {\n      const imgSize = Math.ceil(imgSizeDefault / (scale * cellSize)) * cellSize;\n      const imgOffset = toPx(Math.ceil((qrSize - imgSize) / (2 * cellSize)) * cellSize);\n      imageRef.style.top = imgOffset;\n      imageRef.style.left = imgOffset;\n      imageRef.style.height = toPx(imgSize);\n      imageRef.style.width = toPx(imgSize);\n      setPicSize(Math.round(picSizeDefault / scale));\n    }\n    qrCodeWrapperRef.style.transform = `scale(${scale})`;\n  });\n  let timeoutId = null;\n  const onCopyClick = () => {\n    setCopyButtonOpened(true);\n    copyToClipboard(props.sourceUrl);\n    if (timeoutId != null) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => setCopyButtonOpened(false), 1500);\n  };\n  return createComponent(QrCodeBackground, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: onCopyClick,\n    get children() {\n      return [createComponent(QrCodeWrapper$2, {\n        ref(r$) {\n          const _ref$ = qrCodeWrapperRef;\n          typeof _ref$ === \"function\" ? _ref$(r$) : qrCodeWrapperRef = r$;\n        },\n        get children() {\n          return [(() => {\n            const _el$ = _tmpl$$r.cloneNode(true);\n            const _ref$2 = qrCodeCanvasRef;\n            typeof _ref$2 === \"function\" ? use(_ref$2, _el$) : qrCodeCanvasRef = _el$;\n            return _el$;\n          })(), createComponent(Show, {\n            get when() {\n              return props.imageUrl;\n            },\n            get children() {\n              return createComponent(ImageBackground, {\n                ref(r$) {\n                  const _ref$3 = imageRef;\n                  typeof _ref$3 === \"function\" ? _ref$3(r$) : imageRef = r$;\n                },\n                get children() {\n                  return createComponent(ImageStyled$3, {\n                    get src() {\n                      return props.imageUrl;\n                    },\n                    alt: \"\",\n                    get size() {\n                      return picSize();\n                    }\n                  });\n                }\n              });\n            }\n          })];\n        }\n      }), createComponent(Transition, {\n        onBeforeEnter: (el) => {\n          animate(el, [{\n            opacity: 0,\n            transform: \"translate(-50%, 44px)\"\n          }, {\n            opacity: 1,\n            transform: \"translate(-50%, 0)\"\n          }], {\n            duration: 150,\n            easing: \"ease-out\"\n          });\n        },\n        onExit: (el, done) => {\n          animate(el, [{\n            opacity: 1,\n            transform: \"translate(-50%, 0)\"\n          }, {\n            opacity: 0,\n            transform: \"translate(-50%, 44px)\"\n          }], {\n            duration: 150,\n            easing: \"ease-out\"\n          }).finished.then(() => {\n            done();\n          });\n        },\n        get children() {\n          return createComponent(Show, {\n            get when() {\n              return copyButtonOpened() && !props.disableCopy;\n            },\n            get children() {\n              return createComponent(CopiedBoxStyled, {\n                get children() {\n                  return [createComponent(SuccessIcon, {\n                    size: \"xs\"\n                  }), createComponent(Text, {\n                    translationKey: \"common.linkCopied\",\n                    children: \"Link Copied\"\n                  })];\n                }\n              });\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !props.disableCopy;\n        },\n        get children() {\n          return createComponent(CopyIconButton, {\n            get children() {\n              return createComponent(CopyLightIcon, {});\n            }\n          });\n        }\n      })];\n    }\n  });\n};\nvar deepReadObject = (obj, path, defaultValue) => {\n  const value = path.trim().split(\".\").reduce((a2, b) => a2 ? a2[b] : void 0, obj);\n  return value !== void 0 ? value : defaultValue;\n};\nvar template = (str, params, reg = /{{(.*?)}}/g) => str.replace(reg, (_, key) => deepReadObject(params, key, \"\"));\nvar createI18nContext = (init = {}, lang = navigator.language in init ? navigator.language : Object.keys(init)[0]) => {\n  const [locale, setLocale] = createSignal(lang);\n  const [dict, setDict] = createStore(init);\n  const translate = (key, params, defaultValue) => {\n    const val = deepReadObject(dict[locale()], key, defaultValue || \"\");\n    if (typeof val === \"function\")\n      return val(params);\n    if (typeof val === \"string\")\n      return template(val, params || {});\n    return val;\n  };\n  const actions = {\n    add(lang2, table) {\n      setDict(lang2, (t2) => Object.assign(t2 || {}, table));\n    },\n    locale: (lang2) => lang2 ? setLocale(lang2) : locale(),\n    dict: (lang2) => deepReadObject(dict, lang2)\n  };\n  return [translate, actions];\n};\nvar I18nContext = createContext({});\nvar useI18n = () => useContext(I18nContext);\nconst TextStyled$3 = styled.div`\n    font-style: normal;\n    font-weight: ${(props) => props.fontWeight};\n    font-size: ${(props) => props.fontSize};\n    line-height: ${(props) => props.lineHeight};\n\n    color: ${(props) => props.color};\n`;\nconst Text = (inputs) => {\n  const theme = useTheme();\n  const [t2] = useI18n();\n  let textRef;\n  const color = () => inputs.color || theme.colors.text.primary;\n  const props = mergeProps({\n    fontSize: \"14px\",\n    fontWeight: \"510\",\n    lineHeight: \"130%\"\n  }, inputs);\n  createEffect(() => {\n    if (!textRef) {\n      return;\n    }\n    if (props.cursor === \"unset\") {\n      return;\n    }\n    if (getComputedStyle(textRef).cursor !== \"pointer\") {\n      textRef.style.cursor = \"default\";\n    }\n  });\n  return createComponent(TextStyled$3, {\n    get fontSize() {\n      return props.fontSize;\n    },\n    get fontWeight() {\n      return props.fontWeight;\n    },\n    get lineHeight() {\n      return props.lineHeight;\n    },\n    get color() {\n      return color();\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    ref(r$) {\n      const _ref$ = textRef;\n      typeof _ref$ === \"function\" ? _ref$(r$) : textRef = r$;\n    },\n    \"data-tc-text\": \"true\",\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst ImageContainer = styled.div`\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        border: 0.5px solid rgba(0, 0, 0, 0.08);\n        border-radius: inherit;\n    }\n`;\nconst ImageStyled$2 = styled(Image)`\n    width: 100%;\n    height: 100%;\n    border-radius: inherit;\n`;\nconst WalletImage = (props) => {\n  return createComponent(ImageContainer, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    get children() {\n      return [createComponent(ImageStyled$2, {\n        get src() {\n          return props.src;\n        }\n      }), createMemo(() => props.badge)];\n    }\n  });\n};\nconst borders$3 = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst badgeBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst WalletUlContainer = styled.ul`\n    display: flex;\n    gap: 0;\n    width: 100%;\n    overflow-x: auto;\n    padding: 8px 12px 16px 12px;\n    margin: 0;\n    list-style: none;\n    flex-wrap: nowrap;\n\n    &&::-webkit-scrollbar {\n        display: none;\n    }\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n\n    > li {\n        display: flex;\n        flex: 1;\n        min-width: 78px;\n        height: fit-content;\n    }\n\n    > li > button {\n        width: 100%;\n    }\n`;\nconst WalletItemStyled = styled.button`\n    position: relative;\n    cursor: pointer;\n    border: none;\n    background-color: unset;\n    padding: 8px 4px;\n    width: 100%;\n    min-width: 78px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    transition: transform 0.125s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n`;\nconst ImageStyled$1 = styled(WalletImage)`\n    width: 60px;\n    height: 60px;\n    border-radius: ${(props) => borders$3[props.theme.borderRadius]};\n    margin-bottom: 8px;\n    position: relative;\n`;\nconst BadgeStyled = styled(Image)`\n    position: absolute;\n    right: -6px;\n    bottom: -6px;\n    width: 24px;\n    height: 24px;\n    border-radius: ${(props) => badgeBorders[props.theme.borderRadius]};\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.08);\n`;\nconst StyledText = styled(Text)`\n    max-width: 90px;\n    font-weight: 510;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    ${media(\"mobile\")} {\n        max-width: 80px;\n    }\n`;\nconst StyledSecondLine = styled(Text)`\n    font-weight: ${(props) => props.colorPrimary ? \"510\" : \"400\"};\n    max-width: 90px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    color: ${(props) => props.colorPrimary ? props.theme.colors.text.primary : props.theme.colors.text.secondary};\n\n    ${media(\"mobile\")} {\n        max-width: 80px;\n    }\n`;\nconst _tmpl$$q = /* @__PURE__ */ template$1(`<div></div>`);\nconst WalletItem = (props) => {\n  let ctxRef = null;\n  const adjustLetterSpacing = () => {\n    const name = ctxRef == null ? void 0 : ctxRef.querySelector(\"div\");\n    if (name && name.scrollWidth > name.clientWidth) {\n      let spacing = 0;\n      const minSpacing = -0.4;\n      const step = 0.05;\n      while (name.scrollWidth > name.clientWidth && spacing >= minSpacing) {\n        spacing -= step;\n        name.style.letterSpacing = `${spacing}px`;\n      }\n      if (spacing !== 0) {\n        spacing -= step;\n        name.style.letterSpacing = `${spacing}px`;\n      }\n    }\n  };\n  onMount(() => adjustLetterSpacing());\n  createEffect(() => {\n    adjustLetterSpacing();\n  });\n  return createComponent(WalletItemStyled, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: () => props.onClick(),\n    \"data-tc-wallet-item\": \"true\",\n    get children() {\n      return [createMemo(() => createMemo(() => typeof props.icon === \"string\")() ? createComponent(ImageStyled$1, {\n        get src() {\n          return props.icon;\n        },\n        get badge() {\n          return createMemo(() => !!props.badgeUrl)() && createComponent(BadgeStyled, {\n            get src() {\n              return props.badgeUrl;\n            }\n          });\n        }\n      }) : props.icon), (() => {\n        const _el$ = _tmpl$$q.cloneNode(true);\n        use((el) => ctxRef = el, _el$);\n        insert(_el$, createComponent(StyledText, {\n          get children() {\n            return props.name;\n          }\n        }));\n        return _el$;\n      })(), createMemo(() => createMemo(() => !!props.secondLine)() && createComponent(StyledSecondLine, {\n        get colorPrimary() {\n          var _a2;\n          return (_a2 = props.secondLineColorPrimary) != null ? _a2 : true;\n        },\n        get children() {\n          return props.secondLine;\n        }\n      }))];\n    }\n  });\n};\nconst H1Styled$9 = styled.h1`\n    font-style: normal;\n    font-weight: 590;\n    font-size: 20px;\n    line-height: 28px;\n\n    text-align: center;\n\n    color: ${(props) => props.theme.colors.text.primary};\n\n    margin-top: 0;\n    margin-bottom: 0;\n\n    cursor: default;\n`;\nconst H1 = (props) => {\n  const [t2] = useI18n();\n  return createComponent(H1Styled$9, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-h1\": \"true\",\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst H2Styled$5 = styled.h2`\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 22px;\n\n    text-align: center;\n\n    color: ${(props) => props.theme.colors.text.secondary};\n\n    margin-top: 0;\n    margin-bottom: 32px;\n\n    cursor: default;\n`;\nconst H2 = (props) => {\n  const [t2] = useI18n();\n  return createComponent(H2Styled$5, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-h2\": \"true\",\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst H3Styled$1 = styled.h3`\n    font-style: normal;\n    font-weight: 510;\n    font-size: 16px;\n    line-height: 20px;\n\n    color: ${(props) => props.theme.colors.text.primary};\n\n    margin-top: 0;\n    margin-bottom: 0;\n\n    cursor: default;\n`;\nconst H3 = (props) => {\n  const [t2] = useI18n();\n  return createComponent(H3Styled$1, {\n    \"data-tc-h3\": \"true\",\n    get [\"class\"]() {\n      return props.class;\n    },\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst _tmpl$$p = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.1839 17.7069C13.6405 18.6507 13.3688 19.1226 13.0591 19.348C12.4278 19.8074 11.5723 19.8074 10.941 19.348C10.6312 19.1226 10.3595 18.6507 9.81613 17.7069L5.52066 10.2464C4.76864 8.94024 4.39263 8.28717 4.33762 7.75894C4.2255 6.68236 4.81894 5.65591 5.80788 5.21589C6.29309 5 7.04667 5 8.55383 5H15.4462C16.9534 5 17.7069 5 18.1922 5.21589C19.1811 5.65591 19.7745 6.68236 19.6624 7.75894C19.6074 8.28717 19.2314 8.94024 18.4794 10.2464L14.1839 17.7069ZM11.1 16.3412L6.56139 8.48002C6.31995 8.06185 6.19924 7.85276 6.18146 7.68365C6.14523 7.33896 6.33507 7.01015 6.65169 6.86919C6.80703 6.80002 7.04847 6.80002 7.53133 6.80002H7.53134L11.1 6.80002V16.3412ZM12.9 16.3412L17.4387 8.48002C17.6801 8.06185 17.8008 7.85276 17.8186 7.68365C17.8548 7.33896 17.665 7.01015 17.3484 6.86919C17.193 6.80002 16.9516 6.80002 16.4687 6.80002L12.9 6.80002V16.3412Z\"></path></svg>`);\nconst TonIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$p.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$o = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><g clip-path=\"url(#clip0_3783_2045)\"><circle cx=\"8\" cy=\"8.00098\" r=\"8\"></circle><path d=\"M4.75 8.50098L7 10.751L11.75 6.00098\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g><defs><clipPath id=\"clip0_3783_2045\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0 0.000976562)\"></rect></clipPath></defs></svg>`), _tmpl$2$3 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"11\"></circle><path d=\"M17.1364 9.6364C17.4879 9.28493 17.4879 8.71508 17.1364 8.36361C16.7849 8.01214 16.2151 8.01214 15.8636 8.36361L10 14.2272L8.1364 12.3636C7.78493 12.0121 7.21508 12.0121 6.86361 12.3636C6.51214 12.7151 6.51214 13.2849 6.86361 13.6364L9.36361 16.1364C9.71508 16.4879 10.2849 16.4879 10.6364 16.1364L17.1364 9.6364Z\"></path></svg>`), _tmpl$3$2 = /* @__PURE__ */ template$1(`<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"36\" cy=\"36\" r=\"33\"></circle><path d=\"M50.9142 28.4142C51.6953 27.6332 51.6953 26.3668 50.9142 25.5858C50.1332 24.8047 48.8668 24.8047 48.0858 25.5858L30 43.6716L23.9142 37.5858C23.1332 36.8047 21.8668 36.8047 21.0858 37.5858C20.3047 38.3668 20.3047 39.6332 21.0858 40.4142L28.5858 47.9142C29.3668 48.6953 30.6332 48.6953 31.4142 47.9142L50.9142 28.4142Z\"></path></svg>`);\nconst SuccessIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size || \"s\";\n  const fill = () => props.fill || theme.colors.icon.success;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"xs\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$o.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild, _el$4 = _el$3.nextSibling;\n      createRenderEffect((_p$) => {\n        const _v$ = props.class, _v$2 = fill(), _v$3 = theme.colors.constant.white;\n        _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$3, \"fill\", _p$._v$2 = _v$2);\n        _v$3 !== _p$._v$3 && setAttribute(_el$4, \"stroke\", _p$._v$3 = _v$3);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0,\n        _v$3: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"s\");\n      return () => _c$2() ? (() => {\n        const _el$5 = _tmpl$2$3.cloneNode(true), _el$6 = _el$5.firstChild, _el$7 = _el$6.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$4 = props.class, _v$5 = fill(), _v$6 = theme.colors.constant.white;\n          _v$4 !== _p$._v$4 && setAttribute(_el$5, \"class\", _p$._v$4 = _v$4);\n          _v$5 !== _p$._v$5 && setAttribute(_el$6, \"fill\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$7, \"fill\", _p$._v$6 = _v$6);\n          return _p$;\n        }, {\n          _v$4: void 0,\n          _v$5: void 0,\n          _v$6: void 0\n        });\n        return _el$5;\n      })() : (() => {\n        const _el$8 = _tmpl$3$2.cloneNode(true), _el$9 = _el$8.firstChild, _el$10 = _el$9.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$7 = props.class, _v$8 = fill(), _v$9 = theme.colors.constant.white;\n          _v$7 !== _p$._v$7 && setAttribute(_el$8, \"class\", _p$._v$7 = _v$7);\n          _v$8 !== _p$._v$8 && setAttribute(_el$9, \"fill\", _p$._v$8 = _v$8);\n          _v$9 !== _p$._v$9 && setAttribute(_el$10, \"fill\", _p$._v$9 = _v$9);\n          return _p$;\n        }, {\n          _v$7: void 0,\n          _v$8: void 0,\n          _v$9: void 0\n        });\n        return _el$8;\n      })();\n    })();\n  })());\n};\nconst _tmpl$$n = /* @__PURE__ */ template$1(`<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"36\" cy=\"36\" r=\"33\"></circle><path d=\"M24.0858 26.9142C23.3047 26.1332 23.3047 24.8668 24.0858 24.0858C24.8668 23.3047 26.1332 23.3047 26.9142 24.0858L36 33.1716L45.0858 24.0858C45.8668 23.3047 47.1332 23.3047 47.9142 24.0858C48.6953 24.8668 48.6953 26.1332 47.9142 26.9142L38.8284 36L47.9142 45.0858C48.6953 45.8668 48.6953 47.1332 47.9142 47.9142C47.1332 48.6953 45.8668 48.6953 45.0858 47.9142L36 38.8284L26.9142 47.9142C26.1332 48.6953 24.8668 48.6953 24.0858 47.9142C23.3047 47.1332 23.3047 45.8668 24.0858 45.0858L33.1716 36L24.0858 26.9142Z\"></path></svg>`), _tmpl$2$2 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><circle cx=\"24\" cy=\"24.001\" r=\"22\"></circle><path d=\"M24 24.001L31.5 16.501M24 24.001L16.5 16.501M24 24.001L16.5 31.501M24 24.001L31.5 31.501\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>`), _tmpl$3$1 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"11\"></circle><path d=\"M7.86361 9.1364C7.51214 8.78493 7.51214 8.21508 7.86361 7.86361C8.21508 7.51214 8.78493 7.51214 9.1364 7.86361L12 10.7272L14.8636 7.86361C15.2151 7.51214 15.7849 7.51214 16.1364 7.86361C16.4879 8.21508 16.4879 8.78493 16.1364 9.1364L13.2728 12L16.1364 14.8636C16.4879 15.2151 16.4879 15.7849 16.1364 16.1364C15.7849 16.4879 15.2151 16.4879 14.8636 16.1364L12 13.2728L9.1364 16.1364C8.78493 16.4879 8.21508 16.4879 7.86361 16.1364C7.51214 15.7849 7.51214 15.2151 7.86361 14.8636L10.7272 12L7.86361 9.1364Z\"></path></svg>`);\nconst ErrorIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size || \"m\";\n  const fill = () => props.fill || theme.colors.icon.error;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"m\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$n.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling;\n      createRenderEffect((_p$) => {\n        const _v$ = props.class, _v$2 = fill(), _v$3 = theme.colors.constant.white;\n        _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n        _v$3 !== _p$._v$3 && setAttribute(_el$3, \"fill\", _p$._v$3 = _v$3);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0,\n        _v$3: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"s\");\n      return () => _c$2() ? (() => {\n        const _el$4 = _tmpl$2$2.cloneNode(true), _el$5 = _el$4.firstChild, _el$6 = _el$5.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$4 = props.class, _v$5 = fill(), _v$6 = theme.colors.constant.white;\n          _v$4 !== _p$._v$4 && setAttribute(_el$4, \"class\", _p$._v$4 = _v$4);\n          _v$5 !== _p$._v$5 && setAttribute(_el$5, \"fill\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$6, \"stroke\", _p$._v$6 = _v$6);\n          return _p$;\n        }, {\n          _v$4: void 0,\n          _v$5: void 0,\n          _v$6: void 0\n        });\n        return _el$4;\n      })() : (() => {\n        const _el$7 = _tmpl$3$1.cloneNode(true), _el$8 = _el$7.firstChild, _el$9 = _el$8.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$7 = props.class, _v$8 = fill(), _v$9 = theme.colors.constant.white;\n          _v$7 !== _p$._v$7 && setAttribute(_el$7, \"class\", _p$._v$7 = _v$7);\n          _v$8 !== _p$._v$8 && setAttribute(_el$8, \"fill\", _p$._v$8 = _v$8);\n          _v$9 !== _p$._v$9 && setAttribute(_el$9, \"fill\", _p$._v$9 = _v$9);\n          return _p$;\n        }, {\n          _v$7: void 0,\n          _v$8: void 0,\n          _v$9: void 0\n        });\n        return _el$7;\n      })();\n    })();\n  })());\n};\nconst _tmpl$$m = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.55 5.85123C18.9459 7.81184 20.1094 12.1541 18.1488 15.55C16.1882 18.9459 11.8459 20.1094 8.44998 18.1488C8.01952 17.9003 7.46909 18.0478 7.22056 18.4782C6.97203 18.9087 7.11952 19.4591 7.54998 19.7076C11.8068 22.1653 17.2499 20.7068 19.7076 16.45C22.1653 12.1932 20.7068 6.75005 16.45 4.29239C12.1932 1.83472 6.75003 3.29321 4.29236 7.55001C4.04383 7.98047 4.19132 8.53091 4.62178 8.77943C5.05224 9.02796 5.60268 8.88048 5.8512 8.45001C7.81181 5.05413 12.1541 3.89062 15.55 5.85123Z\"></path></svg>`), _tmpl$2$1 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22 2.99951C11.5066 2.99951 3 11.5061 3 21.9995C3 32.4929 11.5066 40.9995 22 40.9995C22.8284 40.9995 23.5 41.6711 23.5 42.4995C23.5 43.3279 22.8284 43.9995 22 43.9995C9.84974 43.9995 0 34.1498 0 21.9995C0 9.84925 9.84974 -0.000488281 22 -0.000488281C34.1503 -0.000488281 44 9.84925 44 21.9995C44 22.8279 43.3284 23.4995 42.5 23.4995C41.6716 23.4995 41 22.8279 41 21.9995C41 11.5061 32.4934 2.99951 22 2.99951Z\"></path></svg>`), _tmpl$3 = /* @__PURE__ */ template$1(`<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M24 56.7846C35.479 63.412 50.1572 59.479 56.7846 47.9999C63.412 36.5209 59.479 21.8427 48 15.2153C36.521 8.58791 21.8428 12.5209 15.2154 23.9999\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>`);\nconst LoaderIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size || \"xs\";\n  const fill = () => props.fill || theme.colors.icon.tertiary;\n  const rotateAnimation = h`\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n    `;\n  const svgClass = u`\n        animation: ${rotateAnimation} 1s linear infinite;\n    `;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"xs\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$m.cloneNode(true), _el$2 = _el$.firstChild;\n      createRenderEffect((_p$) => {\n        const _v$ = classnames__WEBPACK_IMPORTED_MODULE_3__(svgClass, props.class), _v$2 = fill();\n        _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"s\");\n      return () => _c$2() ? (() => {\n        const _el$3 = _tmpl$2$1.cloneNode(true), _el$4 = _el$3.firstChild;\n        createRenderEffect((_p$) => {\n          const _v$3 = classnames__WEBPACK_IMPORTED_MODULE_3__(svgClass, props.class), _v$4 = fill();\n          _v$3 !== _p$._v$3 && setAttribute(_el$3, \"class\", _p$._v$3 = _v$3);\n          _v$4 !== _p$._v$4 && setAttribute(_el$4, \"fill\", _p$._v$4 = _v$4);\n          return _p$;\n        }, {\n          _v$3: void 0,\n          _v$4: void 0\n        });\n        return _el$3;\n      })() : (() => {\n        const _el$5 = _tmpl$3.cloneNode(true), _el$6 = _el$5.firstChild;\n        createRenderEffect((_p$) => {\n          const _v$5 = classnames__WEBPACK_IMPORTED_MODULE_3__(svgClass, props.class), _v$6 = fill();\n          _v$5 !== _p$._v$5 && setAttribute(_el$5, \"class\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$6, \"stroke\", _p$._v$6 = _v$6);\n          return _p$;\n        }, {\n          _v$5: void 0,\n          _v$6: void 0\n        });\n        return _el$5;\n      })();\n    })();\n  })());\n};\nconst _tmpl$$l = /* @__PURE__ */ template$1(`<svg width=\"158\" height=\"28\" viewBox=\"0 0 158 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28 14.001C28 21.733 21.732 28.001 14 28.001C6.26801 28.001 0 21.733 0 14.001C0 6.26899 6.26801 0.000976562 14 0.000976562C21.732 0.000976562 28 6.26899 28 14.001ZM9.21931 8.00098H18.7801H18.7813C20.538 8.00098 21.6522 9.89966 20.7691 11.4302L14.8672 21.6576C14.4822 22.3254 13.5172 22.3254 13.1322 21.6576L7.23158 11.4302C6.34721 9.89726 7.4614 8.00098 9.21931 8.00098ZM13.1262 18.5882V9.74806H9.21811C8.78976 9.74806 8.53708 10.2029 8.74163 10.5578L11.8423 16.1035L13.1262 18.5882ZM16.1559 16.1047L19.2554 10.5566C19.4599 10.2017 19.2073 9.74685 18.7789 9.74685H14.8709V18.5906L16.1559 16.1047Z\" fill=\"#0098EA\"></path><path d=\"M18.7802 8.00098H9.21936C7.46145 8.00098 6.34727 9.89726 7.23164 11.4302L13.1322 21.6576C13.5173 22.3254 14.4823 22.3254 14.8673 21.6576L20.7691 11.4302C21.6523 9.89966 20.5381 8.00098 18.7814 8.00098H18.7802ZM13.1274 18.5906L11.8424 16.1035L8.74168 10.5578C8.53714 10.2029 8.78981 9.74806 9.21816 9.74806H13.1262V18.5918L13.1274 18.5906ZM19.2555 10.5566L16.156 16.1047L14.8709 18.5906V9.74685H18.779C19.2073 9.74685 19.46 10.2017 19.2555 10.5566Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.7483 22.1967C55.7182 22.1967 58.9609 18.954 58.9609 14.9841C58.9609 11.0142 55.7182 7.77148 51.7483 7.77148C47.7588 7.77148 44.5357 11.0142 44.5357 14.9841C44.5357 18.954 47.7588 22.1967 51.7483 22.1967ZM51.7483 19.1702C49.4686 19.1702 47.6802 17.2442 47.6802 14.9841C47.6802 12.724 49.4686 10.798 51.7483 10.798C54.0084 10.798 55.7968 12.724 55.7968 14.9841C55.7968 17.2442 54.0084 19.1702 51.7483 19.1702ZM37.0698 21.9609H40.2142V10.9946H44.2843V8.00732H33V10.9946H37.0698V21.9609ZM69.9379 8.00732H73.0823V21.9609H70.3899L63.59 13.3333V21.9609H60.4652V8.00732H63.1576L69.9379 16.6153V8.00732ZM79.2259 14.9887C79.2259 10.9202 82.351 7.77539 86.4982 7.77539C89.8592 7.77539 92.5519 9.95709 93.2202 12.6891H90.7437C90.154 11.0971 88.4637 9.9964 86.4982 9.9964C83.5893 9.9964 81.5452 12.1781 81.5452 14.9887C81.5452 17.7994 83.5893 19.9811 86.4982 19.9811C88.4637 19.9811 90.154 18.8804 90.7437 17.2884H93.2202C92.5519 20.0204 89.8592 22.2021 86.4982 22.2021C82.351 22.2021 79.2259 19.0573 79.2259 14.9887ZM104.584 17.0525C104.584 19.9025 102.343 22.1628 99.4342 22.1628C96.5253 22.1628 94.2846 19.9025 94.2846 17.0525C94.2846 14.2025 96.5253 11.9422 99.4342 11.9422C102.343 11.9422 104.584 14.2025 104.584 17.0525ZM96.4663 17.0525C96.4663 18.8018 97.6849 20.158 99.4342 20.158C101.164 20.158 102.382 18.8018 102.382 17.0525C102.382 15.3032 101.164 13.947 99.4342 13.947C97.6849 13.947 96.4663 15.3032 96.4663 17.0525ZM108.626 12.1388H106.463V21.9662H108.626V17.1311C108.626 15.0281 109.726 13.9077 111.161 13.9077C112.419 13.9077 113.205 14.8512 113.205 16.4039V21.9662H115.367V16.0501C115.367 13.5539 113.893 11.9422 111.613 11.9422C110.335 11.9422 109.215 12.4926 108.626 13.4753V12.1388ZM117.839 12.1388H120.001V13.4753C120.59 12.4926 121.711 11.9422 122.988 11.9422C125.268 11.9422 126.742 13.5539 126.742 16.0501V21.9662H124.58V16.4039C124.58 14.8512 123.794 13.9077 122.536 13.9077C121.101 13.9077 120.001 15.0281 120.001 17.1311V21.9662H117.839V12.1388ZM133.558 22.1628C136.054 22.1628 137.823 20.728 138.373 18.8804H136.113C135.661 19.8238 134.717 20.2563 133.636 20.2563C131.887 20.2563 130.747 19.077 130.668 17.5832H138.491C138.688 14.2419 136.585 11.9422 133.577 11.9422C130.551 11.9422 128.526 14.1436 128.526 17.0525C128.526 20.0007 130.629 22.1628 133.558 22.1628ZM130.747 16.0501C131.042 14.5367 132.162 13.7505 133.518 13.7505C134.717 13.7505 135.838 14.4581 136.172 16.0501H130.747ZM149.851 18.3694C149.32 20.5511 147.453 22.1628 144.859 22.1628C141.871 22.1628 139.709 19.8828 139.709 17.0525C139.709 14.2222 141.871 11.9422 144.859 11.9422C147.453 11.9422 149.32 13.5539 149.851 15.7356H147.571C147.178 14.6743 146.215 13.9077 144.859 13.9077C143.109 13.9077 141.91 15.2246 141.91 17.0525C141.91 18.8804 143.109 20.1973 144.859 20.1973C146.215 20.1973 147.178 19.4307 147.571 18.3694H149.851ZM155.75 22.0645C156.418 22.0645 156.929 21.9859 157.362 21.8483V19.9221C157.047 20.0401 156.615 20.1187 156.202 20.1187C155.082 20.1187 154.551 19.6666 154.551 18.448V14.065H157.362V12.1388H154.551V9.40675H152.389V12.1388H150.345V14.065H152.389V18.8018C152.389 21.0228 153.863 22.0645 155.75 22.0645Z\"></path></svg>`);\nconst TonConnectBrand = () => {\n  const theme = useTheme();\n  const fill = () => theme.theme === THEME.DARK ? theme.colors.constant.white : theme.colors.constant.black;\n  return (() => {\n    const _el$ = _tmpl$$l.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling, _el$4 = _el$3.nextSibling;\n    createRenderEffect(() => setAttribute(_el$4, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$k = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.56608 4.42584C5.82527 3.32158 6.8176 2.5 8.00001 2.5C9.38072 2.5 10.5 3.61929 10.5 5C10.5 5.63026 10.3391 6.0386 10.1264 6.34455C9.90018 6.66993 9.58561 6.92478 9.18864 7.20877C9.12579 7.25372 9.05873 7.30025 8.9887 7.34883C8.27392 7.84472 7.25001 8.55507 7.25001 10V10.25C7.25001 10.6642 7.5858 11 8.00001 11C8.41422 11 8.75001 10.6642 8.75001 10.25V10C8.75001 9.36502 9.10777 9.1096 9.94554 8.51149L10.0614 8.42873C10.4769 8.13147 10.9748 7.75194 11.358 7.20076C11.7547 6.63015 12 5.91973 12 5C12 2.79086 10.2091 1 8.00001 1C6.10564 1 4.5205 2.31615 4.10577 4.08308C4.01112 4.48634 4.26129 4.88997 4.66454 4.98462C5.0678 5.07927 5.47143 4.8291 5.56608 4.42584ZM8.00001 15C8.60752 15 9.10001 14.5075 9.10001 13.9C9.10001 13.2925 8.60752 12.8 8.00001 12.8C7.39249 12.8 6.90001 13.2925 6.90001 13.9C6.90001 14.5075 7.39249 15 8.00001 15Z\"></path></svg>`);\nconst QuestionIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$k.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$j = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.98156 8.75C9.84854 11.4328 9.01206 13.5 8 13.5C6.98794 13.5 6.15146 11.4328 6.01844 8.75H9.98156ZM11.4832 8.75C11.4217 10.1155 11.1929 11.3869 10.8239 12.4017C10.7734 12.5405 10.7188 12.6789 10.6595 12.8154C12.1454 11.993 13.2103 10.5029 13.4493 8.75H11.4832ZM13.4493 7.25H11.4832C11.4217 5.88453 11.1929 4.61314 10.8239 3.5983C10.7734 3.4595 10.7188 3.32111 10.6595 3.18459C12.1454 4.00697 13.2103 5.49709 13.4493 7.25ZM9.98156 7.25H6.01844C6.15144 4.56764 6.98769 2.50062 7.99955 2.5H8C9.01206 2.5 9.84854 4.56724 9.98156 7.25ZM4.51678 7.25C4.57826 5.88453 4.80706 4.61314 5.1761 3.5983C5.22657 3.4595 5.28124 3.32111 5.3405 3.18459C3.85463 4.00697 2.78972 5.49709 2.55071 7.25H4.51678ZM2.55071 8.75C2.78972 10.5029 3.85463 11.993 5.3405 12.8154C5.28124 12.6789 5.22657 12.5405 5.1761 12.4017C4.80706 11.3869 4.57826 10.1155 4.51678 8.75H2.55071ZM15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8Z\"></path></svg>`);\nconst BrowserIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$j.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$i = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.5 4.8C2.5 3.11984 2.5 2.27976 2.82698 1.63803C3.1146 1.07354 3.57354 0.614601 4.13803 0.32698C4.77976 0 5.61984 0 7.3 0H8.7C10.3802 0 11.2202 0 11.862 0.32698C12.4265 0.614601 12.8854 1.07354 13.173 1.63803C13.5 2.27976 13.5 3.11984 13.5 4.8V11.2C13.5 12.8802 13.5 13.7202 13.173 14.362C12.8854 14.9265 12.4265 15.3854 11.862 15.673C11.2202 16 10.3802 16 8.7 16H7.3C5.61984 16 4.77976 16 4.13803 15.673C3.57354 15.3854 3.1146 14.9265 2.82698 14.362C2.5 13.7202 2.5 12.8802 2.5 11.2V4.8ZM4 3.9C4 3.05992 4 2.63988 4.16349 2.31901C4.3073 2.03677 4.53677 1.8073 4.81901 1.66349C5.13988 1.5 5.55992 1.5 6.4 1.5H9.6C10.4401 1.5 10.8601 1.5 11.181 1.66349C11.4632 1.8073 11.6927 2.03677 11.8365 2.31901C12 2.63988 12 3.05992 12 3.9V12.1C12 12.9401 12 13.3601 11.8365 13.681C11.6927 13.9632 11.4632 14.1927 11.181 14.3365C10.8601 14.5 10.4401 14.5 9.6 14.5H6.4C5.55992 14.5 5.13988 14.5 4.81901 14.3365C4.53677 14.1927 4.3073 13.9632 4.16349 13.681C4 13.3601 4 12.9401 4 12.1V3.9ZM7 2.5C6.58579 2.5 6.25 2.83579 6.25 3.25C6.25 3.66421 6.58579 4 7 4H9C9.41421 4 9.75 3.66421 9.75 3.25C9.75 2.83579 9.41421 2.5 9 2.5H7Z\"></path></svg>`);\nconst MobileIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$i.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$h = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.5 6.8C1.5 5.11984 1.5 4.27976 1.82698 3.63803C2.1146 3.07354 2.57354 2.6146 3.13803 2.32698C3.77976 2 4.61984 2 6.3 2H9.7C11.3802 2 12.2202 2 12.862 2.32698C13.4265 2.6146 13.8854 3.07354 14.173 3.63803C14.5 4.27976 14.5 5.11984 14.5 6.8V11.5H15.25C15.6642 11.5 16 11.8358 16 12.25C16 12.6642 15.6642 13 15.25 13H0.75C0.335786 13 0 12.6642 0 12.25C0 11.8358 0.335786 11.5 0.75 11.5H1.5V6.8ZM3 11.5H13V5.9C13 5.05992 13 4.63988 12.8365 4.31901C12.6927 4.03677 12.4632 3.8073 12.181 3.66349C11.8601 3.5 11.4401 3.5 10.6 3.5H5.4C4.55992 3.5 4.13988 3.5 3.81901 3.66349C3.53677 3.8073 3.3073 4.03677 3.16349 4.31901C3 4.63988 3 5.05992 3 5.9V11.5Z\"></path></svg>`);\nconst DesktopIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$h.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$g = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\"><g clip-path=\"url(#clip0_3676_1603)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.5 1.25049C15.5 0.836275 15.1642 0.500488 14.75 0.500488C14.3358 0.500488 14 0.836275 14 1.25049V3.67012C12.7187 2.04487 10.7318 1.00049 8.5 1.00049C4.63401 1.00049 1.5 4.1345 1.5 8.00049C1.5 11.8665 4.63401 15.0005 8.5 15.0005C11.6844 15.0005 14.3703 12.8748 15.2199 9.96661C15.3361 9.56902 15.1079 9.15254 14.7103 9.03638C14.3127 8.92023 13.8962 9.14838 13.7801 9.54597C13.1123 11.8319 11 13.5005 8.5 13.5005C5.46243 13.5005 3 11.0381 3 8.00049C3 4.96292 5.46243 2.50049 8.5 2.50049C10.321 2.50049 11.9363 3.3855 12.9377 4.75049H10.5C10.0858 4.75049 9.75 5.08627 9.75 5.50049C9.75 5.9147 10.0858 6.25049 10.5 6.25049H14.75C15.1642 6.25049 15.5 5.9147 15.5 5.50049V1.25049Z\"></path></g><defs><clipPath id=\"clip0_3676_1603\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.5 0.000488281)\"></rect></clipPath></defs></svg>`);\nconst RetryIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.accent;\n  return (() => {\n    const _el$ = _tmpl$$g.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild;\n    createRenderEffect(() => setAttribute(_el$3, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$f = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13 4.06119V6.75053C13 7.16474 13.3358 7.50053 13.75 7.50053C14.1642 7.50053 14.5 7.16474 14.5 6.75053V2.75053L14.5 2.72807C14.5001 2.63191 14.5003 2.49627 14.4842 2.37627C14.4638 2.22503 14.4063 1.99261 14.2071 1.79342C14.0079 1.59423 13.7755 1.5367 13.6243 1.51637C13.5043 1.50023 13.3686 1.50039 13.2725 1.50051L13.25 1.50053H9.25C8.83579 1.50053 8.5 1.83631 8.5 2.25053C8.5 2.66474 8.83579 3.00053 9.25 3.00053H11.9393L7.21967 7.7202C6.92678 8.01309 6.92678 8.48796 7.21967 8.78086C7.51256 9.07375 7.98744 9.07375 8.28033 8.78086L13 4.06119ZM5.85 1.50053H5.81903H5.81899C5.21528 1.50052 4.71702 1.50051 4.31113 1.53367C3.88956 1.56812 3.50203 1.64204 3.13803 1.82751C2.57354 2.11513 2.1146 2.57407 1.82698 3.13856C1.64151 3.50256 1.56759 3.89009 1.53315 4.31166C1.49998 4.71755 1.49999 5.21581 1.5 5.81953V5.81955V5.85053V10.1505V10.1815V10.1815C1.49999 10.7852 1.49998 11.2835 1.53315 11.6894C1.56759 12.111 1.64151 12.4985 1.82698 12.8625C2.1146 13.427 2.57354 13.8859 3.13803 14.1735C3.50203 14.359 3.88956 14.4329 4.31113 14.4674C4.71702 14.5005 5.21527 14.5005 5.81897 14.5005H5.81901H5.85H10.15H10.181H10.181C10.7847 14.5005 11.283 14.5005 11.6889 14.4674C12.1104 14.4329 12.498 14.359 12.862 14.1735C13.4265 13.8859 13.8854 13.427 14.173 12.8625C14.3585 12.4985 14.4324 12.111 14.4669 11.6894C14.5 11.2835 14.5 10.7853 14.5 10.1816V10.1815V10.1505V9.75053C14.5 9.33631 14.1642 9.00053 13.75 9.00053C13.3358 9.00053 13 9.33631 13 9.75053V10.1505C13 10.793 12.9994 11.2297 12.9718 11.5672C12.945 11.8961 12.8963 12.0642 12.8365 12.1815C12.6927 12.4638 12.4632 12.6932 12.181 12.837C12.0637 12.8968 11.8955 12.9455 11.5667 12.9724C11.2292 12.9999 10.7924 13.0005 10.15 13.0005H5.85C5.20757 13.0005 4.77085 12.9999 4.43328 12.9724C4.10447 12.9455 3.93632 12.8968 3.81902 12.837C3.53677 12.6932 3.3073 12.4638 3.16349 12.1815C3.10372 12.0642 3.05503 11.8961 3.02816 11.5672C3.00058 11.2297 3 10.793 3 10.1505V5.85053C3 5.20809 3.00058 4.77137 3.02816 4.43381C3.05503 4.10499 3.10372 3.93684 3.16349 3.81954C3.3073 3.5373 3.53677 3.30783 3.81902 3.16402C3.93632 3.10425 4.10447 3.05556 4.43328 3.02869C4.77085 3.00111 5.20757 3.00053 5.85 3.00053H6.25C6.66422 3.00053 7 2.66474 7 2.25053C7 1.83631 6.66422 1.50053 6.25 1.50053H5.85Z\"></path></svg>`);\nconst LinkIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.accent;\n  return (() => {\n    const _el$ = _tmpl$$f.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$e = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\"><g clip-path=\"url(#clip0_3676_1274)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82698 2.63901C1.5 3.28074 1.5 4.12082 1.5 5.80098V8.80098V9.00098V10.201C1.5 11.8811 1.5 12.7212 1.82698 13.3629C2.1146 13.9274 2.57354 14.3864 3.13803 14.674C3.77976 15.001 4.61984 15.001 6.3 15.001H11.7C13.3802 15.001 14.2202 15.001 14.862 14.674C15.4265 14.3864 15.8854 13.9274 16.173 13.3629C16.5 12.7212 16.5 11.8811 16.5 10.201V8.80098C16.5 7.12082 16.5 6.28074 16.173 5.63901C15.8854 5.07452 15.4265 4.61558 14.862 4.32796C14.743 4.26733 14.6172 4.21795 14.4805 4.17772C14.4501 3.49449 14.3722 3.02994 14.173 2.63901C13.8854 2.07452 13.4265 1.61558 12.862 1.32796C12.2202 1.00098 11.3802 1.00098 9.7 1.00098H6.3C4.61984 1.00098 3.77976 1.00098 3.13803 1.32796C2.57354 1.61558 2.1146 2.07452 1.82698 2.63901ZM12.9861 4.00942C12.9684 3.7108 12.9281 3.49982 12.8365 3.31999C12.6927 3.03775 12.4632 2.80828 12.181 2.66447C11.8601 2.50098 11.4401 2.50098 10.6 2.50098H5.4C4.55992 2.50098 4.13988 2.50098 3.81901 2.66447C3.53677 2.80828 3.3073 3.03775 3.16349 3.31999C3.03615 3.56991 3.00799 3.88 3.00177 4.40188C3.04646 4.37612 3.09189 4.35146 3.13803 4.32796C3.77976 4.00098 4.61984 4.00098 6.3 4.00098H11.7C12.1966 4.00098 12.6197 4.00098 12.9861 4.00942ZM3 7.90098V8.10098C3 8.47468 3 8.76527 3.01439 9.00098H3V11.101C3 11.9411 3 12.3611 3.16349 12.682C3.3073 12.9642 3.53677 13.1937 3.81901 13.3375C4.13988 13.501 4.55992 13.501 5.4 13.501H12.6C13.4401 13.501 13.8601 13.501 14.181 13.3375C14.4632 13.1937 14.6927 12.9642 14.8365 12.682C15 12.3611 15 11.9411 15 11.101V7.90098C15 7.0609 15 6.64086 14.8365 6.31999C14.6927 6.03775 14.4632 5.80828 14.181 5.66447C13.8601 5.50098 13.4401 5.50098 12.6 5.50098H5.4C4.55992 5.50098 4.13988 5.50098 3.81901 5.66447C3.53677 5.80828 3.3073 6.03775 3.16349 6.31999C3 6.64086 3 7.0609 3 7.90098ZM10.5 9.75098C10.5 9.33676 10.8358 9.00098 11.25 9.00098H12.75C13.1642 9.00098 13.5 9.33676 13.5 9.75098C13.5 10.1652 13.1642 10.501 12.75 10.501H11.25C10.8358 10.501 10.5 10.1652 10.5 9.75098Z\"></path></g><defs><clipPath id=\"clip0_3676_1274\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.5 0.000976562)\"></rect></clipPath></defs></svg>`);\nconst WalletIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.accent;\n  return (() => {\n    const _el$ = _tmpl$$e.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild;\n    createRenderEffect(() => setAttribute(_el$3, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$d = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.6319 16.8719C38.3212 16.2041 36.7002 16.0478 34 16.0112V11C34 5.47715 29.5228 1 24 1C18.4772 1 14 5.47715 14 11V16.0112C11.2998 16.0478 9.6788 16.2041 8.36808 16.8719C6.86278 17.6389 5.63893 18.8628 4.87195 20.3681C4 22.0794 4 24.3196 4 28.8V32.2C4 36.6804 4 38.9206 4.87195 40.6319C5.63893 42.1372 6.86278 43.3611 8.36808 44.1281C10.0794 45 12.3196 45 16.8 45H31.2C35.6804 45 37.9206 45 39.6319 44.1281C41.1372 43.3611 42.3611 42.1372 43.1281 40.6319C44 38.9206 44 36.6804 44 32.2V28.8C44 24.3196 44 22.0794 43.1281 20.3681C42.3611 18.8628 41.1372 17.6389 39.6319 16.8719ZM31 11V16H17V11C17 7.13401 20.134 4 24 4C27.866 4 31 7.13401 31 11ZM7.54497 21.73C7 22.7996 7 24.1997 7 27V34C7 36.8003 7 38.2004 7.54497 39.27C8.02433 40.2108 8.78924 40.9757 9.73005 41.455C10.7996 42 12.1997 42 15 42H33C35.8003 42 37.2004 42 38.27 41.455C39.2108 40.9757 39.9757 40.2108 40.455 39.27C41 38.2004 41 36.8003 41 34V27C41 24.1997 41 22.7996 40.455 21.73C39.9757 20.7892 39.2108 20.0243 38.27 19.545C37.2004 19 35.8003 19 33 19H15C12.1997 19 10.7996 19 9.73005 19.545C8.78924 20.0243 8.02433 20.7892 7.54497 21.73ZM24 24C23.1716 24 22.5 24.6716 22.5 25.5V29.5C22.5 30.3284 23.1716 31 24 31C24.8284 31 25.5 30.3284 25.5 29.5V25.5C25.5 24.6716 24.8284 24 24 24Z\"></path></svg>`);\nconst SecurityIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$d.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$c = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.485 37.3849C40.894 33.9506 43 29.2212 43 24C43 13.5066 34.4934 5 24 5C13.5066 5 5 13.5066 5 24C5 29.2213 7.1061 33.9507 10.5151 37.385C13.3583 32.9438 18.3354 30 24.0001 30C29.6647 30 34.6418 32.9437 37.485 37.3849ZM35.1809 39.3635C32.9143 35.5532 28.7554 33 24.0001 33C19.2448 33 15.0858 35.5533 12.8193 39.3636C15.9564 41.6506 19.8206 43 24 43C28.1795 43 32.0437 41.6505 35.1809 39.3635ZM24 46C36.1503 46 46 36.1503 46 24C46 11.8497 36.1503 2 24 2C11.8497 2 2 11.8497 2 24C2 36.1503 11.8497 46 24 46ZM24 24C26.7614 24 29 21.7614 29 19C29 16.2386 26.7614 14 24 14C21.2386 14 19 16.2386 19 19C19 21.7614 21.2386 24 24 24ZM24 27C28.4183 27 32 23.4183 32 19C32 14.5817 28.4183 11 24 11C19.5817 11 16 14.5817 16 19C16 23.4183 19.5817 27 24 27Z\"></path></svg>`);\nconst PersonalityIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$c.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$b = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M34.5607 4.43934C33.9749 3.85355 33.0251 3.85355 32.4393 4.43934C31.8536 5.02513 31.8536 5.97487 32.4393 6.56066L37.8787 12H10.5C9.67157 12 9 12.6716 9 13.5C9 14.3284 9.67157 15 10.5 15H37.8787L32.4393 20.4393C31.8536 21.0251 31.8536 21.9749 32.4393 22.5607C33.0251 23.1464 33.9749 23.1464 34.5607 22.5607L42.5607 14.5607C43.1464 13.9749 43.1464 13.0251 42.5607 12.4393L34.5607 4.43934ZM13.4393 25.4393C14.0251 24.8536 14.9749 24.8536 15.5607 25.4393C16.1464 26.0251 16.1464 26.9749 15.5607 27.5607L10.1213 33H37.5C38.3284 33 39 33.6716 39 34.5C39 35.3284 38.3284 36 37.5 36H10.1213L15.5607 41.4393C16.1464 42.0251 16.1464 42.9749 15.5607 43.5607C14.9749 44.1464 14.0251 44.1464 13.4393 43.5607L5.43934 35.5607C4.85355 34.9749 4.85355 34.0251 5.43934 33.4393L13.4393 25.4393Z\"></path></svg>`);\nconst SwapIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$b.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$a = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.75 12.002C1.75 9.20169 1.75 7.80156 2.29497 6.732C2.77433 5.79119 3.53924 5.02629 4.48005 4.54692C5.54961 4.00195 6.94974 4.00195 9.75 4.00195H17.25C20.0503 4.00195 21.4504 4.00195 22.52 4.54692C23.4608 5.02629 24.2257 5.79119 24.705 6.732C24.8256 6.96861 24.9195 7.2214 24.9926 7.50195H21.5C19.6377 7.50195 18.7065 7.50195 17.9609 7.77334C16.711 8.22828 15.7263 9.21291 15.2714 10.4629C15 11.2085 15 12.1396 15 14.002C15 15.8643 15 16.7954 15.2714 17.541C15.7263 18.791 16.711 19.7756 17.9609 20.2306C18.7065 20.502 19.6377 20.502 21.5 20.502H24.9926C24.9195 20.7825 24.8256 21.0353 24.705 21.2719C24.2257 22.2127 23.4608 22.9776 22.52 23.457C21.4504 24.002 20.0503 24.002 17.25 24.002H9.75C6.94974 24.002 5.54961 24.002 4.48005 23.457C3.53924 22.9776 2.77433 22.2127 2.29497 21.2719C1.75 20.2023 1.75 18.8022 1.75 16.002V12.002ZM16.4999 13.802C16.4999 12.1218 16.4999 11.2817 16.8269 10.64C17.1145 10.0755 17.5735 9.61656 18.138 9.32894C18.7797 9.00196 19.6198 9.00196 21.2999 9.00196H23.1999C24.8801 9.00196 25.7202 9.00196 26.3619 9.32894C26.9264 9.61656 27.3853 10.0755 27.673 10.64C27.9999 11.2817 27.9999 12.1218 27.9999 13.802V14.202C27.9999 15.8821 27.9999 16.7222 27.673 17.3639C27.3853 17.9284 26.9264 18.3874 26.3619 18.675C25.7202 19.002 24.8801 19.002 23.1999 19.002H21.2999C19.6198 19.002 18.7797 19.002 18.138 18.675C17.5735 18.3874 17.1145 17.9284 16.8269 17.3639C16.4999 16.7222 16.4999 15.8821 16.4999 14.202V13.802ZM22.4999 14.002C22.4999 14.9685 21.7164 15.752 20.7499 15.752C19.7834 15.752 18.9999 14.9685 18.9999 14.002C18.9999 13.0355 19.7834 12.252 20.7499 12.252C21.7164 12.252 22.4999 13.0355 22.4999 14.002Z\"></path></svg>`);\nconst AtWalletIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.constant.white;\n  return (() => {\n    const _el$ = _tmpl$$a.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$9 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.0001 10.0001C10.0016 8.02333 10.0267 6.98719 10.436 6.18404C10.8195 5.43139 11.4314 4.81947 12.184 4.43597C13.0397 4 14.1598 4 16.4 4H17.6C19.8402 4 20.9603 4 21.816 4.43597C22.5686 4.81947 23.1805 5.43139 23.564 6.18404C24 7.03969 24 8.15979 24 10.4V11.6C24 13.8402 24 14.9603 23.564 15.816C23.1805 16.5686 22.5686 17.1805 21.816 17.564C21.0128 17.9733 19.9767 17.9984 17.9999 17.9999C17.9984 19.9767 17.9733 21.0128 17.564 21.816C17.1805 22.5686 16.5686 23.1805 15.816 23.564C14.9603 24 13.8402 24 11.6 24H10.4C8.15979 24 7.03969 24 6.18404 23.564C5.43139 23.1805 4.81947 22.5686 4.43597 21.816C4 20.9603 4 19.8402 4 17.6V16.4C4 14.1598 4 13.0397 4.43597 12.184C4.81947 11.4314 5.43139 10.8195 6.18404 10.436C6.98719 10.0267 8.02333 10.0016 10.0001 10.0001ZM10 11.5H9.5C8.09987 11.5 7.3998 11.5 6.86502 11.7725C6.39462 12.0122 6.01217 12.3946 5.77248 12.865C5.5 13.3998 5.5 14.0999 5.5 15.5V18.5C5.5 19.9001 5.5 20.6002 5.77248 21.135C6.01217 21.6054 6.39462 21.9878 6.86502 22.2275C7.3998 22.5 8.09987 22.5 9.5 22.5H12.5C13.9001 22.5 14.6002 22.5 15.135 22.2275C15.6054 21.9878 15.9878 21.6054 16.2275 21.135C16.5 20.6002 16.5 19.9001 16.5 18.5V18H16.4C14.1598 18 13.0397 18 12.184 17.564C11.4314 17.1805 10.8195 16.5686 10.436 15.816C10 14.9603 10 13.8402 10 11.6V11.5ZM11.5 9.5C11.5 8.09987 11.5 7.3998 11.7725 6.86502C12.0122 6.39462 12.3946 6.01217 12.865 5.77248C13.3998 5.5 14.0999 5.5 15.5 5.5H18.5C19.9001 5.5 20.6002 5.5 21.135 5.77248C21.6054 6.01217 21.9878 6.39462 22.2275 6.86502C22.5 7.3998 22.5 8.09987 22.5 9.5V12.5C22.5 13.9001 22.5 14.6002 22.2275 15.135C21.9878 15.6054 21.6054 15.9878 21.135 16.2275C20.6002 16.5 19.9001 16.5 18.5 16.5H15.5C14.0999 16.5 13.3998 16.5 12.865 16.2275C12.3946 15.9878 12.0122 15.6054 11.7725 15.135C11.5 14.6002 11.5 13.9001 11.5 12.5V9.5Z\"></path></svg>`);\nconst CopyLightIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$9.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = fill(), _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"fill\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$8 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1 4.12695C1 3.07754 1 2.55284 1.19202 2.14684C1.38986 1.72856 1.7266 1.39181 2.14489 1.19397C2.55088 1.00195 3.07559 1.00195 4.125 1.00195C5.17441 1.00195 5.69912 1.00195 6.10511 1.19397C6.5234 1.39181 6.86014 1.72856 7.05798 2.14684C7.25 2.55284 7.25 3.07754 7.25 4.12695C7.25 5.17636 7.25 5.70107 7.05798 6.10706C6.86014 6.52535 6.5234 6.8621 6.10511 7.05993C5.69912 7.25195 5.17441 7.25195 4.125 7.25195C3.07559 7.25195 2.55088 7.25195 2.14489 7.05993C1.7266 6.8621 1.38986 6.52535 1.19202 6.10706C1 5.70107 1 5.17636 1 4.12695ZM2.5 3.30195C2.5 3.02193 2.5 2.88191 2.5545 2.77496C2.60243 2.68088 2.67892 2.60439 2.773 2.55645C2.87996 2.50195 3.01997 2.50195 3.3 2.50195H4.95C5.23003 2.50195 5.37004 2.50195 5.477 2.55645C5.57108 2.60439 5.64757 2.68088 5.6955 2.77496C5.75 2.88191 5.75 3.02193 5.75 3.30195V4.95195C5.75 5.23198 5.75 5.37199 5.6955 5.47895C5.64757 5.57303 5.57108 5.64952 5.477 5.69746C5.37004 5.75195 5.23003 5.75195 4.95 5.75195H3.3C3.01997 5.75195 2.87996 5.75195 2.773 5.69746C2.67892 5.64952 2.60243 5.57303 2.5545 5.47895C2.5 5.37199 2.5 5.23198 2.5 4.95195V3.30195ZM1 11.877C1 10.8275 1 10.3028 1.19202 9.89684C1.38986 9.47856 1.7266 9.14181 2.14489 8.94397C2.55088 8.75195 3.07559 8.75195 4.125 8.75195C5.17441 8.75195 5.69912 8.75195 6.10511 8.94397C6.5234 9.14181 6.86014 9.47856 7.05798 9.89684C7.25 10.3028 7.25 10.8275 7.25 11.877C7.25 12.9264 7.25 13.4511 7.05798 13.8571C6.86014 14.2753 6.5234 14.6121 6.10511 14.8099C5.69912 15.002 5.17441 15.002 4.125 15.002C3.07559 15.002 2.55088 15.002 2.14489 14.8099C1.7266 14.6121 1.38986 14.2753 1.19202 13.8571C1 13.4511 1 12.9264 1 11.877ZM2.5 11.052C2.5 10.7719 2.5 10.6319 2.5545 10.525C2.60243 10.4309 2.67892 10.3544 2.773 10.3064C2.87996 10.252 3.01997 10.252 3.3 10.252H4.95C5.23003 10.252 5.37004 10.252 5.477 10.3064C5.57108 10.3544 5.64757 10.4309 5.6955 10.525C5.75 10.6319 5.75 10.7719 5.75 11.052V12.702C5.75 12.982 5.75 13.122 5.6955 13.2289C5.64757 13.323 5.57108 13.3995 5.477 13.4475C5.37004 13.502 5.23003 13.502 4.95 13.502H3.3C3.01997 13.502 2.87996 13.502 2.773 13.4475C2.67892 13.3995 2.60243 13.323 2.5545 13.2289C2.5 13.122 2.5 12.982 2.5 12.702V11.052ZM8.94202 2.14684C8.75 2.55284 8.75 3.07754 8.75 4.12695C8.75 5.17636 8.75 5.70107 8.94202 6.10706C9.13986 6.52535 9.4766 6.8621 9.89489 7.05993C10.3009 7.25195 10.8256 7.25195 11.875 7.25195C12.9244 7.25195 13.4491 7.25195 13.8551 7.05993C14.2734 6.8621 14.6101 6.52535 14.808 6.10706C15 5.70107 15 5.17636 15 4.12695C15 3.07754 15 2.55284 14.808 2.14684C14.6101 1.72856 14.2734 1.39181 13.8551 1.19397C13.4491 1.00195 12.9244 1.00195 11.875 1.00195C10.8256 1.00195 10.3009 1.00195 9.89489 1.19397C9.4766 1.39181 9.13986 1.72856 8.94202 2.14684ZM10.3045 2.77496C10.25 2.88191 10.25 3.02193 10.25 3.30195V4.95195C10.25 5.23198 10.25 5.37199 10.3045 5.47895C10.3524 5.57303 10.4289 5.64952 10.523 5.69746C10.63 5.75195 10.77 5.75195 11.05 5.75195H12.7C12.98 5.75195 13.12 5.75195 13.227 5.69746C13.3211 5.64952 13.3976 5.57303 13.4455 5.47895C13.5 5.37199 13.5 5.23198 13.5 4.95195V3.30195C13.5 3.02193 13.5 2.88191 13.4455 2.77496C13.3976 2.68088 13.3211 2.60439 13.227 2.55645C13.12 2.50195 12.98 2.50195 12.7 2.50195H11.05C10.77 2.50195 10.63 2.50195 10.523 2.55645C10.4289 2.60439 10.3524 2.68088 10.3045 2.77496ZM8.80727 9.13518C8.75 9.26242 8.75 9.4256 8.75 9.75195C8.75 10.0783 8.75 10.2415 8.80727 10.3687C8.87245 10.5136 8.9884 10.6295 9.13323 10.6947C9.26047 10.752 9.42365 10.752 9.75 10.752C10.0764 10.752 10.2395 10.752 10.3668 10.6947C10.5116 10.6295 10.6276 10.5136 10.6927 10.3687C10.75 10.2415 10.75 10.0783 10.75 9.75195C10.75 9.4256 10.75 9.26242 10.6927 9.13518C10.6276 8.99035 10.5116 8.8744 10.3668 8.80922C10.2395 8.75195 10.0764 8.75195 9.75 8.75195C9.42365 8.75195 9.26047 8.75195 9.13323 8.80922C8.9884 8.8744 8.87245 8.99035 8.80727 9.13518ZM10.87 11.8771C10.87 11.546 10.87 11.3805 10.9289 11.2517C10.9938 11.1098 11.1077 10.9959 11.2497 10.931C11.3784 10.8721 11.5439 10.8721 11.875 10.8721C12.2061 10.8721 12.3716 10.8721 12.5003 10.931C12.6423 10.9959 12.7562 11.1098 12.8211 11.2517C12.88 11.3805 12.88 11.546 12.88 11.8771C12.88 12.2081 12.88 12.3737 12.8211 12.5024C12.7562 12.6444 12.6423 12.7583 12.5003 12.8232C12.3716 12.8821 12.2061 12.8821 11.875 12.8821C11.5439 12.8821 11.3784 12.8821 11.2497 12.8232C11.1077 12.7583 10.9938 12.6444 10.9289 12.5024C10.87 12.3737 10.87 12.2081 10.87 11.8771ZM8.80727 13.3852C8.75 13.5124 8.75 13.6756 8.75 14.002C8.75 14.3283 8.75 14.4915 8.80727 14.6187C8.87245 14.7636 8.9884 14.8795 9.13323 14.9447C9.26047 15.002 9.42365 15.002 9.75 15.002C10.0764 15.002 10.2395 15.002 10.3668 14.9447C10.5116 14.8795 10.6276 14.7636 10.6927 14.6187C10.75 14.4915 10.75 14.3283 10.75 14.002C10.75 13.6756 10.75 13.5124 10.6927 13.3852C10.6276 13.2404 10.5116 13.1244 10.3668 13.0592C10.2395 13.002 10.0764 13.002 9.75 13.002C9.42365 13.002 9.26047 13.002 9.13323 13.0592C8.9884 13.1244 8.87245 13.2404 8.80727 13.3852ZM13 9.75195C13 9.4256 13 9.26242 13.0573 9.13518C13.1224 8.99035 13.2384 8.8744 13.3832 8.80922C13.5105 8.75195 13.6736 8.75195 14 8.75195C14.3264 8.75195 14.4895 8.75195 14.6168 8.80922C14.7616 8.8744 14.8776 8.99035 14.9427 9.13518C15 9.26242 15 9.4256 15 9.75195C15 10.0783 15 10.2415 14.9427 10.3687C14.8776 10.5136 14.7616 10.6295 14.6168 10.6947C14.4895 10.752 14.3264 10.752 14 10.752C13.6736 10.752 13.5105 10.752 13.3832 10.6947C13.2384 10.6295 13.1224 10.5136 13.0573 10.3687C13 10.2415 13 10.0783 13 9.75195ZM13.0573 13.3852C13 13.5124 13 13.6756 13 14.002C13 14.3283 13 14.4915 13.0573 14.6187C13.1224 14.7636 13.2384 14.8795 13.3832 14.9447C13.5105 15.002 13.6736 15.002 14 15.002C14.3264 15.002 14.4895 15.002 14.6168 14.9447C14.7616 14.8795 14.8776 14.7636 14.9427 14.6187C15 14.4915 15 14.3283 15 14.002C15 13.6756 15 13.5124 14.9427 13.3852C14.8776 13.2404 14.7616 13.1244 14.6168 13.0592C14.4895 13.002 14.3264 13.002 14 13.002C13.6736 13.002 13.5105 13.002 13.3832 13.0592C13.2384 13.1244 13.1224 13.2404 13.0573 13.3852Z\"></path></svg>`);\nconst QRIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$8.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst containerBorders = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst walletBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst FourWalletsCard = styled.div`\n    width: 60px;\n    height: 60px;\n    padding: 8px;\n    margin-bottom: 8px;\n    border-radius: ${(props) => containerBorders[props.theme.borderRadius]};\n    background-color: ${(props) => props.theme.colors.background.tint};\n    display: grid;\n    grid-template: 1fr 1fr / 1fr 1fr;\n    gap: 4px;\n`;\nconst FourWalletsImage = styled(WalletImage)`\n    width: 20px;\n    height: 20px;\n    border-radius: ${(props) => walletBorders[props.theme.borderRadius]};\n`;\nconst FourWalletsItem = (props) => {\n  return createComponent(WalletItem, {\n    get name() {\n      return props.labelLine1;\n    },\n    get secondLine() {\n      return props.labelLine2;\n    },\n    get icon() {\n      return createComponent(FourWalletsCard, {\n        get children() {\n          return createComponent(For, {\n            each: [0, 1, 2, 3],\n            children: (index) => createComponent(FourWalletsImage, {\n              get src() {\n                return props.images[index];\n              }\n            })\n          });\n        }\n      });\n    },\n    onClick: () => props.onClick()\n  });\n};\nconst AT_WALLET_APP_NAME = \"telegram-wallet\";\nconst IMG = {\n  TON: \"https://raw.githubusercontent.com/ton-connect/sdk/main/assets/ton-icon-48.png\",\n  TG: \"https://raw.githubusercontent.com/ton-connect/sdk/main/assets/tg.png\"\n};\nconst WalletLabeledItem = (props) => {\n  const [t2] = useI18n();\n  const walletsSecondLine = () => {\n    if (props.wallet.appName === AT_WALLET_APP_NAME) {\n      return void 0;\n    }\n    if (\"isPreferred\" in props.wallet && props.wallet.isPreferred) {\n      return t2(\"walletItem.recent\", {}, \"Recent\");\n    }\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet)) {\n      return t2(\"walletItem.installed\", {}, \"Installed\");\n    }\n    if (props.wallet.name === \"Tonkeeper\") {\n      return t2(\"walletItem.popular\", {}, \"Popular\");\n    }\n    return void 0;\n  };\n  return createMemo((() => {\n    const _c$ = createMemo(() => props.wallet.appName === AT_WALLET_APP_NAME);\n    return () => _c$() ? createComponent(WalletItem, {\n      get icon() {\n        return props.wallet.imageUrl;\n      },\n      get name() {\n        return t2(\"walletItem.walletOn\", {}, \"Wallet in\");\n      },\n      secondLine: \"Telegram\",\n      get badgeUrl() {\n        return IMG.TG;\n      },\n      onClick: () => props.onClick()\n    }) : createComponent(WalletItem, {\n      get icon() {\n        return props.wallet.imageUrl;\n      },\n      get name() {\n        return props.wallet.name;\n      },\n      get secondLine() {\n        return walletsSecondLine();\n      },\n      secondLineColorPrimary: false,\n      onClick: () => props.onClick()\n    });\n  })());\n};\nconst ScrollContainerStyled = styled.div`\n    width: 100%;\n    overflow-y: auto;\n    max-height: ${(props) => props.maxHeight};\n\n    scrollbar-width: none;\n    &&::-webkit-scrollbar {\n        display: none;\n    }\n\n    &&::-webkit-scrollbar-track {\n        background: transparent;\n    }\n\n    &&::-webkit-scrollbar-thumb {\n        display: none;\n    }\n`;\nconst ScrollDivider = styled.div`\n    height: 1px;\n    margin: 0 -24px;\n    width: calc(100% + 48px);\n    opacity: 0.08;\n    background: ${(props) => props.isShown ? props.theme.colors.icon.secondary : \"transparent\"};\n    transition: background 0.15s ease-in-out;\n\n    ${media(\"mobile\")} {\n        width: 100%;\n        margin: 0;\n    }\n`;\nconst [windowHeight, setWindowHeight] = createSignal(((_h = getWindow$1()) == null ? void 0 : _h.innerHeight) || 0);\nif (getWindow$1()) {\n  window.addEventListener(\"resize\", () => setWindowHeight(window.innerHeight));\n}\nconst [isMobile, setIsMobile] = createSignal(isDevice(\"mobile\"));\nconst updateIsMobile = () => setIsMobile(isDevice(\"mobile\"));\nif (getWindow$1()) {\n  window.addEventListener(\"resize\", () => updateIsMobile());\n  window.addEventListener(\"load\", () => updateIsMobile(), { once: true });\n}\nconst ScrollContainer = (props) => {\n  const [scrolled, setScrolled] = createSignal(false);\n  const onScroll = (e2) => {\n    setScrolled(e2.target.scrollTop > 0);\n  };\n  const offset = () => isMobile() ? 150 : 200;\n  const maxHeight = () => props.maxHeight !== void 0 ? `${props.maxHeight}px` : `${windowHeight() - offset()}px`;\n  return [createComponent(ScrollDivider, {\n    get isShown() {\n      return scrolled();\n    }\n  }), createComponent(ScrollContainerStyled, {\n    get maxHeight() {\n      return maxHeight();\n    },\n    onScroll,\n    get [\"class\"]() {\n      return props.class;\n    },\n    get children() {\n      return props.children;\n    }\n  })];\n};\nconst AStyled = styled.a`\n    display: block;\n    text-decoration: unset;\n`;\nconst Link = (props) => {\n  const attributes = () => props.blank ? {\n    rel: \"noreferrer noopener\"\n  } : {};\n  return createComponent(AStyled, mergeProps({\n    get href() {\n      return props.href;\n    },\n    get target() {\n      return props.blank ? \"_blank\" : \"_self\";\n    },\n    get [\"class\"]() {\n      return props.class;\n    }\n  }, attributes, {\n    get children() {\n      return props.children;\n    }\n  }));\n};\nconst TonConnectUiContext = createContext();\nconst _tmpl$$7 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.76228 2.09998H10.2378C11.0458 2.09997 11.7067 2.09996 12.2438 2.14384C12.7997 2.18926 13.3017 2.28614 13.7706 2.52505C14.5045 2.89896 15.1011 3.49558 15.475 4.22941C15.7139 4.6983 15.8108 5.20038 15.8562 5.75629C15.9001 6.29337 15.9001 6.95422 15.9001 7.76227V8.1H16.2377C17.0457 8.09999 17.7066 8.09998 18.2437 8.14386C18.7996 8.18928 19.3017 8.28616 19.7705 8.52507C20.5044 8.89898 21.101 9.4956 21.4749 10.2294C21.7138 10.6983 21.8107 11.2004 21.8561 11.7563C21.9 12.2934 21.9 12.9542 21.9 13.7623V16.2377C21.9 17.0458 21.9 17.7066 21.8561 18.2437C21.8107 18.7996 21.7138 19.3017 21.4749 19.7706C21.101 20.5044 20.5044 21.101 19.7705 21.4749C19.3017 21.7138 18.7996 21.8107 18.2437 21.8561C17.7066 21.9 17.0458 21.9 16.2378 21.9H13.7623C12.9543 21.9 12.2934 21.9 11.7563 21.8561C11.2004 21.8107 10.6983 21.7138 10.2294 21.4749C9.49561 21.101 8.89898 20.5044 8.52508 19.7706C8.28616 19.3017 8.18928 18.7996 8.14386 18.2437C8.09998 17.7066 8.09999 17.0458 8.1 16.2377V15.9H7.76227C6.95426 15.9 6.29335 15.9 5.75629 15.8561C5.20038 15.8107 4.6983 15.7138 4.22941 15.4749C3.49558 15.101 2.89896 14.5044 2.52505 13.7705C2.28614 13.3017 2.18926 12.7996 2.14384 12.2437C2.09996 11.7066 2.09997 11.0458 2.09998 10.2377V7.76228C2.09997 6.95424 2.09996 6.29336 2.14384 5.75629C2.18926 5.20038 2.28614 4.6983 2.52505 4.22941C2.89896 3.49558 3.49558 2.89896 4.22941 2.52505C4.6983 2.28614 5.20038 2.18926 5.75629 2.14384C6.29336 2.09996 6.95425 2.09997 7.76228 2.09998ZM8.1 14.1V13.7623C8.09999 12.9542 8.09998 12.2934 8.14386 11.7563C8.18928 11.2004 8.28616 10.6983 8.52508 10.2294C8.89898 9.4956 9.49561 8.89898 10.2294 8.52507C10.6983 8.28616 11.2004 8.18928 11.7563 8.14386C12.2934 8.09998 12.9542 8.09999 13.7623 8.1H14.1001V7.79998C14.1001 6.94505 14.0994 6.35798 14.0622 5.90287C14.0259 5.45827 13.9593 5.21944 13.8712 5.0466C13.6699 4.65146 13.3486 4.3302 12.9535 4.12886C12.7806 4.04079 12.5418 3.97419 12.0972 3.93786C11.6421 3.90068 11.055 3.89998 10.2001 3.89998H7.79998C6.94505 3.89998 6.35798 3.90068 5.90287 3.93786C5.45827 3.97419 5.21944 4.04079 5.0466 4.12886C4.65146 4.3302 4.3302 4.65146 4.12886 5.0466C4.04079 5.21944 3.97419 5.45827 3.93786 5.90287C3.90068 6.35798 3.89998 6.94505 3.89998 7.79998V10.2C3.89998 11.0549 3.90068 11.642 3.93786 12.0971C3.97419 12.5417 4.04079 12.7805 4.12886 12.9534C4.3302 13.3485 4.65146 13.6698 5.0466 13.8711C5.21944 13.9592 5.45827 14.0258 5.90287 14.0621C6.35798 14.0993 6.94505 14.1 7.79998 14.1H8.1ZM11.0466 10.1289C11.2195 10.0408 11.4583 9.97421 11.9029 9.93788C12.358 9.9007 12.9451 9.9 13.8 9.9H16.2C17.0549 9.9 17.642 9.9007 18.0971 9.93788C18.5417 9.97421 18.7805 10.0408 18.9534 10.1289C19.3485 10.3302 19.6698 10.6515 19.8711 11.0466C19.9592 11.2195 20.0258 11.4583 20.0621 11.9029C20.0993 12.358 20.1 12.9451 20.1 13.8V16.2C20.1 17.0549 20.0993 17.642 20.0621 18.0971C20.0258 18.5417 19.9592 18.7805 19.8711 18.9534C19.6698 19.3485 19.3485 19.6698 18.9534 19.8711C18.7805 19.9592 18.5417 20.0258 18.0971 20.0621C17.642 20.0993 17.0549 20.1 16.2 20.1H13.8C12.9451 20.1 12.358 20.0993 11.9029 20.0621C11.4583 20.0258 11.2195 19.9592 11.0466 19.8711C10.6515 19.6698 10.3302 19.3485 10.1289 18.9534C10.0408 18.7805 9.97421 18.5417 9.93788 18.0971C9.9007 17.642 9.9 17.0549 9.9 16.2V13.8C9.9 12.9451 9.9007 12.358 9.93788 11.9029C9.97421 11.4583 10.0408 11.2195 10.1289 11.0466C10.3302 10.6515 10.6515 10.3302 11.0466 10.1289Z\"></path></svg>`);\nconst CopyIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$7.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$6 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.7624 3.10001C7.95435 3.1 7.29349 3.09999 6.75642 3.14387C6.2005 3.18929 5.69842 3.28617 5.22954 3.52508C4.4957 3.89899 3.89908 4.49561 3.52517 5.22944C3.28626 5.69833 3.18938 6.20041 3.14396 6.75632C3.10008 7.2934 3.10009 7.95424 3.1001 8.76229V15.2377C3.10009 16.0458 3.10008 16.7066 3.14396 17.2437C3.18938 17.7996 3.28626 18.3017 3.52517 18.7706C3.89908 19.5044 4.4957 20.101 5.22954 20.4749C5.69842 20.7138 6.2005 20.8107 6.75642 20.8561C7.29349 20.9 7.95434 20.9 8.76239 20.9H12.0001C12.4972 20.9 12.9001 20.4971 12.9001 20C12.9001 19.503 12.4972 19.1 12.0001 19.1H8.8001C7.94517 19.1 7.3581 19.0993 6.90299 19.0621C6.45839 19.0258 6.21956 18.9592 6.04672 18.8711C5.65158 18.6698 5.33032 18.3485 5.12898 17.9534C5.04092 17.7805 4.97431 17.5417 4.93798 17.0971C4.9008 16.642 4.9001 16.0549 4.9001 15.2V8.80001C4.9001 7.94508 4.9008 7.35801 4.93798 6.9029C4.97431 6.4583 5.04092 6.21947 5.12898 6.04663C5.33032 5.65149 5.65158 5.33023 6.04672 5.12889C6.21956 5.04082 6.45839 4.97422 6.90299 4.93789C7.3581 4.90071 7.94517 4.90001 8.8001 4.90001H12.0001C12.4972 4.90001 12.9001 4.49706 12.9001 4.00001C12.9001 3.50295 12.4972 3.10001 12.0001 3.10001H8.7624Z\"></path><path d=\"M17.6364 7.3636C17.2849 7.01212 16.7151 7.01212 16.3636 7.3636C16.0121 7.71507 16.0121 8.28492 16.3636 8.63639L18.8272 11.1H9.00001C8.50295 11.1 8.10001 11.5029 8.10001 12C8.10001 12.497 8.50295 12.9 9.00001 12.9H18.8272L16.3636 15.3636C16.0121 15.7151 16.0121 16.2849 16.3636 16.6364C16.7151 16.9879 17.2849 16.9879 17.6364 16.6364L21.6364 12.6364C21.9879 12.2849 21.9879 11.7151 21.6364 11.3636L17.6364 7.3636Z\"></path></svg>`);\nconst DisconnectIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$6.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling;\n    createRenderEffect((_p$) => {\n      const _v$ = fill(), _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$2, \"fill\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$3, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst hoverBorders$1 = {\n  m: \"8px\",\n  s: \"4px\",\n  none: \"0\"\n};\nconst dropdownBorders = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst AccountButtonDropdownStyled = styled.div`\n    width: 256px;\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n    border-radius: ${(props) => dropdownBorders[props.theme.borderRadius]};\n\n    background-color: ${(props) => props.theme.colors.background.primary}\n           \n    color: ${(props) => props.theme.colors.text.primary}\n`;\nconst UlStyled = styled.ul`\n    background-color: ${(props) => props.theme.colors.background.primary};\n    padding: 8px;\n`;\nconst MenuButtonStyled = styled.button`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    height: 40px;\n    padding-left: 8px;\n    width: 100%;\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    border: none;\n    border-radius: ${(props) => hoverBorders$1[props.theme.borderRadius]};\n    cursor: pointer;\n\n    transition: background-color, transform 0.1s ease-in-out;\n\n    &:hover {\n        background-color: ${(props) => props.theme.colors.background.secondary};\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n`;\nconst _tmpl$$5 = /* @__PURE__ */ template$1(`<li></li>`);\nconst MenuItemText = (props) => createComponent(Text, {\n  get translationKey() {\n    return props.translationKey;\n  },\n  fontSize: \"15px\",\n  fontWeight: \"590\",\n  get children() {\n    return props.children;\n  }\n});\nconst AccountButtonDropdown = (props) => {\n  const tonConnectUi = useContext(TonConnectUiContext);\n  const [isCopiedShown, setIsCopiedShown] = createSignal(false);\n  const onCopy = () => __async(void 0, null, function* () {\n    const userFriendlyAddress = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.toUserFriendlyAddress)(tonConnectUi.account.address, tonConnectUi.account.chain === _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CHAIN.TESTNET);\n    yield copyToClipboard(userFriendlyAddress);\n    setIsCopiedShown(true);\n    setTimeout(() => setIsCopiedShown(false), 1e3);\n  });\n  const onDisconnect = () => {\n    tonConnectUi.disconnect();\n    props.onClose();\n  };\n  return createComponent(AccountButtonDropdownStyled, {\n    ref(r$) {\n      const _ref$ = props.ref;\n      typeof _ref$ === \"function\" ? _ref$(r$) : props.ref = r$;\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-dropdown\": \"true\",\n    get children() {\n      return createComponent(UlStyled, {\n        get children() {\n          return [(() => {\n            const _el$ = _tmpl$$5.cloneNode(true);\n            insert(_el$, createComponent(MenuButtonStyled, {\n              onClick: () => onCopy(),\n              get children() {\n                return [createComponent(CopyIcon, {}), createComponent(Show, {\n                  get when() {\n                    return !isCopiedShown();\n                  },\n                  get children() {\n                    return createComponent(MenuItemText, {\n                      translationKey: \"button.dropdown.copy\",\n                      children: \"Copy address\"\n                    });\n                  }\n                }), createComponent(Show, {\n                  get when() {\n                    return isCopiedShown();\n                  },\n                  get children() {\n                    return createComponent(MenuItemText, {\n                      translationKey: \"button.dropdown.copied\",\n                      children: \"Address copied!\"\n                    });\n                  }\n                })];\n              }\n            }));\n            return _el$;\n          })(), (() => {\n            const _el$2 = _tmpl$$5.cloneNode(true);\n            insert(_el$2, createComponent(MenuButtonStyled, {\n              onClick: () => onDisconnect(),\n              get children() {\n                return [createComponent(DisconnectIcon, {}), createComponent(MenuItemText, {\n                  translationKey: \"button.dropdown.disconnect\",\n                  children: \"Disconnect\"\n                })];\n              }\n            }));\n            return _el$2;\n          })()];\n        }\n      });\n    }\n  });\n};\nconst borders$2 = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst NotificationStyled = styled.div`\n    width: 256px;\n    padding: 12px 16px;\n    display: flex;\n    gap: 9px;\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n    border-radius: ${(props) => borders$2[props.theme.borderRadius]};\n`;\nconst NotificationContentStyled = styled.div`\n    width: 192px;\n\n    > h3 {\n        font-size: 15px;\n    }\n`;\nconst TextStyled$2 = styled(Text)`\n    margin-top: 4px;\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst Notification = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  return createComponent(NotificationStyled, mergeProps({\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification\": \"true\"\n  }, dataAttrs, {\n    get children() {\n      return [createComponent(NotificationContentStyled, {\n        get children() {\n          return [createComponent(H3, {\n            get translationKey() {\n              return props.header.translationKey;\n            },\n            get translationValues() {\n              return props.header.translationValues;\n            },\n            get children() {\n              return props.children;\n            }\n          }), createComponent(Show, {\n            get when() {\n              return props.text;\n            },\n            get children() {\n              return createComponent(TextStyled$2, {\n                get translationKey() {\n                  return props.text.translationKey;\n                },\n                get translationValues() {\n                  return props.text.translationValues;\n                }\n              });\n            }\n          })];\n        }\n      }), createMemo(() => props.icon)];\n    }\n  }));\n};\nconst LoaderIconStyled$2 = styled(LoaderIcon)`\n    align-self: center;\n`;\nconst ConfirmOperationNotification = (props) => {\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [t2] = useI18n();\n  const name = () => tonConnectUI.wallet && \"name\" in tonConnectUI.wallet ? tonConnectUI.wallet.name : t2(\"common.yourWallet\", {}, \"Your wallet\");\n  return createComponent(Notification, {\n    get header() {\n      return {\n        translationKey: \"notifications.confirm.header\",\n        translationValues: {\n          name: name()\n        }\n      };\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    get icon() {\n      return createComponent(LoaderIconStyled$2, {});\n    },\n    \"data-tc-notification-confirm\": \"true\",\n    children: \"Confirm operation in your wallet\"\n  });\n};\nconst ErrorIconStyled$2 = styled(ErrorIcon)`\n    margin-top: 2px;\n`;\nconst ErrorTransactionNotification = (props) => {\n  return createComponent(Notification, {\n    header: {\n      translationKey: \"notifications.transactionCanceled.header\"\n    },\n    text: {\n      translationKey: \"notifications.transactionCanceled.text\"\n    },\n    get icon() {\n      return createComponent(ErrorIconStyled$2, {\n        size: \"xs\"\n      });\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification-tx-cancelled\": \"true\",\n    children: \"Transaction cancelled\"\n  });\n};\nconst SuccessIconStyled = styled(SuccessIcon)`\n    margin-top: 2px;\n`;\nconst SuccessTransactionNotification = (props) => {\n  return createComponent(Notification, {\n    header: {\n      translationKey: \"notifications.transactionSent.header\"\n    },\n    text: {\n      translationKey: \"notifications.transactionSent.text\"\n    },\n    get icon() {\n      return createComponent(SuccessIconStyled, {});\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification-tx-sent\": \"true\",\n    children: \"Transaction sent\"\n  });\n};\nconst NotificationClass = u`\n    transform: translateY(-8px);\n    margin-bottom: 12px;\n`;\nconst defaultConfig = {\n  timeout: 4500\n};\nconst [latestAction, setLatestAction] = createSignal(null);\nfunction useOpenedNotifications(config) {\n  const { timeout } = __spreadValues(__spreadValues({}, defaultConfig), config);\n  const [openedNotifications, setOpenedNotifications] = createSignal([]);\n  const [timeoutIds, setTimeoutIds] = createSignal([]);\n  createEffect(\n    on(action, (action2) => {\n      var _a2;\n      if (!action2 || !action2.showNotification) {\n        return;\n      }\n      if (latestAction() === action2) {\n        return;\n      }\n      if (((_a2 = latestAction()) == null ? void 0 : _a2.name) === \"confirm-transaction\" && action2.name === \"confirm-transaction\") {\n        return;\n      }\n      setLatestAction(action2);\n      setOpenedNotifications(\n        (openedNotifications2) => openedNotifications2.filter((n2) => n2.action !== \"confirm-transaction\")\n      );\n      const notification = { action: action2.name };\n      setOpenedNotifications((openedNotifications2) => [...openedNotifications2, notification]);\n      const timeoutId = setTimeout(() => {\n        setOpenedNotifications(\n          (openedNotifications2) => openedNotifications2.filter((n2) => n2 !== notification)\n        );\n        setTimeoutIds((timeoutIds2) => timeoutIds2.filter((id) => id !== timeoutId));\n      }, timeout);\n      setTimeoutIds((timeoutIds2) => [...timeoutIds2, timeoutId]);\n    })\n  );\n  onCleanup(() => {\n    timeoutIds().forEach((id) => clearTimeout(id));\n  });\n  return openedNotifications;\n}\nconst _tmpl$$4 = /* @__PURE__ */ template$1(`<div data-tc-list-notifications=\"true\"></div>`);\nconst Notifications = (props) => {\n  const openedNotifications = useOpenedNotifications();\n  return (() => {\n    const _el$ = _tmpl$$4.cloneNode(true);\n    insert(_el$, createComponent(TransitionGroup, {\n      onBeforeEnter: (el) => {\n        animate(el, [{\n          opacity: 0,\n          transform: \"translateY(0)\"\n        }, {\n          opacity: 1,\n          transform: \"translateY(-8px)\"\n        }], {\n          duration: 200\n        });\n      },\n      onExit: (el, done) => {\n        const a2 = animate(el, [{\n          opacity: 1,\n          transform: \"translateY(-8px)\"\n        }, {\n          opacity: 0,\n          transform: \"translateY(-30px)\"\n        }], {\n          duration: 200\n        });\n        a2.finished.then(done);\n      },\n      get children() {\n        return createComponent(For, {\n          get each() {\n            return openedNotifications();\n          },\n          children: (openedNotification) => createComponent(Switch, {\n            get children() {\n              return [createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"transaction-sent\";\n                },\n                get children() {\n                  return createComponent(SuccessTransactionNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"transaction-canceled\";\n                },\n                get children() {\n                  return createComponent(ErrorTransactionNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"confirm-transaction\";\n                },\n                get children() {\n                  return createComponent(ConfirmOperationNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              })];\n            }\n          })\n        });\n      }\n    }));\n    createRenderEffect(() => className(_el$, props.class));\n    return _el$;\n  })();\n};\nconst AccountButtonStyled = styled(Button)`\n    background-color: ${(props) => props.theme.colors.connectButton.background};\n    color: ${(props) => props.theme.colors.connectButton.foreground};\n    box-shadow: ${(props) => `0 4px 24px ${rgba(props.theme.colors.constant.black, 0.16)}`};\n    padding: 8px 16px 8px 12px;\n\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    height: 40px;\n`;\nconst DropdownButtonStyled = styled(AccountButtonStyled)`\n    padding: 12px 16px;\n    min-width: 148px;\n    justify-content: center;\n    background-color: ${(props) => props.theme.colors.background.primary};\n`;\nconst LoaderButtonStyled$1 = styled(Button)`\n    min-width: 148px;\n    height: 40px;\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    color: ${(props) => props.theme.colors.connectButton.foreground};\n    box-shadow: ${(props) => `0 4px 24px ${rgba(props.theme.colors.constant.black, 0.16)}`};\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst LoaderIconStyled$1 = styled(LoaderIcon)`\n    height: 18px;\n    width: 18px;\n`;\nconst DropdownContainerStyled = styled.div`\n    width: fit-content;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n`;\nconst DropdownStyled = styled(AccountButtonDropdown)`\n    box-sizing: border-box;\n    overflow: hidden;\n    margin-top: 12px;\n`;\nconst NotificationsStyled = styled(Notifications)`\n    > div:first-child {\n        margin-top: 20px;\n    }\n`;\nfunction getSide(placement) {\n  return placement.split(\"-\")[0];\n}\nfunction getAlignment(placement) {\n  return placement.split(\"-\")[1];\n}\nfunction getMainAxisFromPlacement(placement) {\n  return [\"top\", \"bottom\"].includes(getSide(placement)) ? \"x\" : \"y\";\n}\nfunction getLengthFromAxis(axis) {\n  return axis === \"y\" ? \"height\" : \"width\";\n}\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === \"x\";\n  let coords;\n  switch (side) {\n    case \"top\":\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case \"bottom\":\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case \"right\":\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case \"left\":\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case \"start\":\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case \"end\":\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\nconst computePosition$1 = (reference, floating, config) => __async(void 0, null, function* () {\n  const {\n    placement = \"bottom\",\n    strategy = \"absolute\",\n    middleware = [],\n    platform: platform2\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = yield platform2.isRTL == null ? void 0 : platform2.isRTL(floating);\n  if ({}.NODE_ENV !== \"production\") {\n    if (platform2 == null) {\n      console.error([\"Floating UI: `platform` property was not passed to config. If you\", \"want to use Floating UI on the web, install @floating-ui/dom\", \"instead of the /core package. Otherwise, you can create your own\", \"`platform`: https://floating-ui.com/docs/platform\"].join(\" \"));\n    }\n    if (validMiddleware.filter((_ref) => {\n      let {\n        name\n      } = _ref;\n      return name === \"autoPlacement\" || name === \"flip\";\n    }).length > 1) {\n      throw new Error([\"Floating UI: duplicate `flip` and/or `autoPlacement` middleware\", \"detected. This will lead to an infinite loop. Ensure only one of\", \"either has been passed to the `middleware` array.\"].join(\" \"));\n    }\n    if (!reference || !floating) {\n      console.error([\"Floating UI: The reference and/or floating element was not defined\", \"when `computePosition()` was called. Ensure that both elements have\", \"been created and can be measured.\"].join(\" \"));\n    }\n  }\n  let rects = yield platform2.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i2 = 0; i2 < validMiddleware.length; i2++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i2];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = yield fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform: platform2,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = __spreadProps(__spreadValues({}, middlewareData), {\n      [name]: __spreadValues(__spreadValues({}, middlewareData[name]), data)\n    });\n    if ({}.NODE_ENV !== \"production\") {\n      if (resetCount > 50) {\n        console.warn([\"Floating UI: The middleware lifecycle appears to be running in an\", \"infinite loop. This is usually caused by a `reset` continually\", \"being returned without a break condition.\"].join(\" \"));\n      }\n    }\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === \"object\") {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? yield platform2.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i2 = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n});\nfunction rectToClientRect(rect) {\n  return __spreadProps(__spreadValues({}, rect), {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || \"\").toLowerCase() : \"\";\n}\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map((item) => item.brand + \"/\" + item.version).join(\" \");\n    return uaString;\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  if (typeof ShadowRoot === \"undefined\") {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && ![\"inline\", \"contents\"].includes(display);\n}\nfunction isTableElement(element) {\n  return [\"table\", \"td\", \"th\"].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n  return css.transform !== \"none\" || css.perspective !== \"none\" || (backdropFilter ? backdropFilter !== \"none\" : false) || isFirefox && css.willChange === \"filter\" || isFirefox && (css.filter ? css.filter !== \"none\" : false) || [\"transform\", \"perspective\"].some((value) => css.willChange.includes(value)) || [\"paint\", \"layout\", \"strict\", \"content\"].some(\n    (value) => {\n      const contain = css.contain;\n      return contain != null ? contain.includes(value) : false;\n    }\n  );\n}\nfunction isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return [\"html\", \"body\", \"#document\"].includes(getNodeName(node));\n}\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = !isElement(element) && element.contextElement ? element.contextElement : isElement(element) ? element : null;\n  if (!domElement) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const css = getComputedStyle$1(domElement);\n  if (css.boxSizing !== \"border-box\") {\n    if (!isHTMLElement(domElement)) {\n      return FALLBACK_SCALE;\n    }\n    return {\n      x: domElement.offsetWidth > 0 ? round(rect.width) / domElement.offsetWidth || 1 : 1,\n      y: domElement.offsetHeight > 0 ? round(rect.height) / domElement.offsetHeight || 1 : 1\n    };\n  }\n  let x = rect.width / parseFloat(css.width);\n  let y = rect.height / parseFloat(css.height);\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scale.x;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scale.y;\n  const width = clientRect.width / scale.x;\n  const height = clientRect.height / scale.y;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getWindowScrollBarX(element) {\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === \"fixed\", offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== \"fixed\") {\n    if (getNodeName(offsetParent) !== \"body\" || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === \"html\") {\n    return node;\n  }\n  const result = node.assignedSlot || node.parentNode || (isShadowRoot(node) ? node.host : null) || getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === \"fixed\") {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction getOffsetParent(element) {\n  const window2 = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === \"static\") {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === \"html\" || getNodeName(offsetParent) === \"body\" && getComputedStyle$1(offsetParent).position === \"static\" && !isContainingBlock(offsetParent))) {\n    return window2;\n  }\n  return offsetParent || getContainingBlock(element) || window2;\n}\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== \"fixed\") {\n    if (getNodeName(offsetParent) !== \"body\" || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === \"fixed\") {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body || html).direction === \"rtl\") {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === \"fixed\");\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === \"viewport\") {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n}\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter((el) => isElement(el) && getNodeName(el) !== \"body\");\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === \"fixed\";\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === \"static\" && !!currentContainingBlockComputedStyle && [\"absolute\", \"fixed\"].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      result = result.filter((ancestor) => ancestor !== currentNode);\n    } else {\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === \"clippingAncestors\" ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  getElementRects(_ref) {\n    return __async(this, null, function* () {\n      let {\n        reference,\n        floating,\n        strategy\n      } = _ref;\n      const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n      const getDimensionsFn = this.getDimensions;\n      return {\n        reference: getRectRelativeToOffsetParent(reference, yield getOffsetParentFn(floating), strategy),\n        floating: __spreadValues({\n          x: 0,\n          y: 0\n        }, yield getDimensionsFn(floating))\n      };\n    });\n  },\n  getClientRects: (element) => Array.from(element.getClientRects()),\n  isRTL: (element) => getComputedStyle$1(element).direction === \"rtl\"\n};\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : [], ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach((ancestor) => {\n    ancestorScroll && ancestor.addEventListener(\"scroll\", update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener(\"resize\", update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach((ancestor) => {\n      ancestorScroll && ancestor.removeEventListener(\"scroll\", update);\n      ancestorResize && ancestor.removeEventListener(\"resize\", update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\nconst computePosition = (reference, floating, options) => {\n  const cache = /* @__PURE__ */ new Map();\n  const mergedOptions = __spreadValues({\n    platform\n  }, options);\n  const platformWithCache = __spreadProps(__spreadValues({}, mergedOptions.platform), {\n    _c: cache\n  });\n  return computePosition$1(reference, floating, __spreadProps(__spreadValues({}, mergedOptions), {\n    platform: platformWithCache\n  }));\n};\nfunction P(l2, u2, e2) {\n  let c2 = () => {\n    var t2;\n    return (t2 = e2 == null ? void 0 : e2.placement) != null ? t2 : \"bottom\";\n  }, d = () => {\n    var t2;\n    return (t2 = e2 == null ? void 0 : e2.strategy) != null ? t2 : \"absolute\";\n  }, [n2, o2] = createSignal({ x: null, y: null, placement: c2(), strategy: d(), middlewareData: {} }), [x, F] = createSignal();\n  createEffect(() => {\n    let t2 = x();\n    if (t2)\n      throw t2.value;\n  });\n  let s2 = createMemo(() => (l2(), u2(), {}));\n  function i2() {\n    let t2 = l2(), r = u2();\n    if (t2 && r) {\n      let a2 = s2();\n      computePosition(t2, r, { middleware: e2 == null ? void 0 : e2.middleware, placement: c2(), strategy: d() }).then((m) => {\n        a2 === s2() && o2(m);\n      }, (m) => {\n        F(m);\n      });\n    }\n  }\n  return createEffect(() => {\n    let t2 = l2(), r = u2();\n    if (e2 == null || e2.middleware, c2(), d(), t2 && r)\n      if (e2 != null && e2.whileElementsMounted) {\n        let a2 = e2.whileElementsMounted(t2, r, i2);\n        a2 && onCleanup(a2);\n      } else\n        i2();\n  }), { get x() {\n    return n2().x;\n  }, get y() {\n    return n2().y;\n  }, get placement() {\n    return n2().placement;\n  }, get strategy() {\n    return n2().strategy;\n  }, get middlewareData() {\n    return n2().middlewareData;\n  }, update: i2 };\n}\nconst _tmpl$$3 = /* @__PURE__ */ template$1(`<tc-root data-tc-dropdown-container=\"true\"></tc-root>`);\nconst AccountButton = () => {\n  const theme = useTheme();\n  const connector = useContext(ConnectorContext);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [isOpened, setIsOpened] = createSignal(false);\n  const [account, setAccount] = createSignal(connector.account);\n  const [restoringProcess, setRestoringProcess] = createSignal(!connector.account);\n  let dropDownRef;\n  const [floating, setFloating] = createSignal();\n  const [anchor, setAnchor] = createSignal();\n  const position = P(anchor, floating, {\n    whileElementsMounted: autoUpdate,\n    placement: \"bottom-end\"\n  });\n  const normalizedAddress = () => {\n    const acc = account();\n    if (acc) {\n      const userFriendlyAddress = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.toUserFriendlyAddress)(acc.address, acc.chain === _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CHAIN.TESTNET);\n      return userFriendlyAddress.slice(0, 4) + \"\\u2026\" + userFriendlyAddress.slice(-4);\n    }\n    return \"\";\n  };\n  tonConnectUI.connectionRestored.then(() => setRestoringProcess(false));\n  const unsubscribe = connector.onStatusChange((wallet) => {\n    if (!wallet) {\n      setIsOpened(false);\n      setAccount(null);\n      setRestoringProcess(false);\n      return;\n    }\n    setAccount(wallet.account);\n    setRestoringProcess(false);\n  });\n  const onClick = (e2) => {\n    if (!account() || !isOpened()) {\n      return;\n    }\n    const clickToButton = anchor().contains(e2.target);\n    const clickToDropdown = dropDownRef.contains(e2.target);\n    if (!clickToButton && !clickToDropdown) {\n      setIsOpened(false);\n    }\n  };\n  onMount(() => {\n    document.body.addEventListener(\"click\", onClick);\n  });\n  onCleanup(() => {\n    document.body.removeEventListener(\"click\", onClick);\n    unsubscribe();\n  });\n  return createComponent(Dynamic, {\n    component: globalStylesTag,\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return restoringProcess();\n        },\n        get children() {\n          return createComponent(LoaderButtonStyled$1, {\n            disabled: true,\n            \"data-tc-connect-button-loading\": \"true\",\n            get children() {\n              return createComponent(LoaderIconStyled$1, {});\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !restoringProcess();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return !account();\n            },\n            get children() {\n              return createComponent(AccountButtonStyled, {\n                onClick: () => tonConnectUI.openModal(),\n                \"data-tc-connect-button\": \"true\",\n                scale: \"s\",\n                get children() {\n                  return [createComponent(TonIcon, {\n                    get fill() {\n                      return theme.colors.connectButton.foreground;\n                    }\n                  }), createComponent(Text, {\n                    translationKey: \"button.connectWallet\",\n                    fontSize: \"15px\",\n                    lineHeight: \"18px\",\n                    fontWeight: \"590\",\n                    get color() {\n                      return theme.colors.connectButton.foreground;\n                    },\n                    children: \"Connect wallet\"\n                  })];\n                }\n              });\n            }\n          }), createComponent(Show, {\n            get when() {\n              return account();\n            },\n            get children() {\n              return createComponent(DropdownContainerStyled, {\n                get children() {\n                  return [createComponent(DropdownButtonStyled, {\n                    onClick: () => setIsOpened((v) => !v),\n                    ref: setAnchor,\n                    \"data-tc-dropdown-button\": \"true\",\n                    scale: \"s\",\n                    get children() {\n                      return [createComponent(Text, {\n                        fontSize: \"15px\",\n                        fontWeight: \"590\",\n                        lineHeight: \"18px\",\n                        get children() {\n                          return normalizedAddress();\n                        }\n                      }), createComponent(ArrowIcon, {\n                        direction: \"bottom\"\n                      })];\n                    }\n                  }), createComponent(Portal, {\n                    get children() {\n                      const _el$ = untrack(() => document.importNode(_tmpl$$3, true));\n                      use(setFloating, _el$);\n                      _el$.style.setProperty(\"z-index\", \"999\");\n                      _el$._$owner = getOwner();\n                      insert(_el$, createComponent(Transition, {\n                        onBeforeEnter: (el) => {\n                          animate(el, [{\n                            opacity: 0,\n                            transform: \"translateY(-8px)\"\n                          }, {\n                            opacity: 1,\n                            transform: \"translateY(0)\"\n                          }], {\n                            duration: 150\n                          });\n                        },\n                        onExit: (el, done) => {\n                          const a2 = animate(el, [{\n                            opacity: 1,\n                            transform: \"translateY(0)\"\n                          }, {\n                            opacity: 0,\n                            transform: \"translateY(-8px)\"\n                          }], {\n                            duration: 150\n                          });\n                          a2.finished.then(done);\n                        },\n                        get children() {\n                          return createComponent(Show, {\n                            get when() {\n                              return isOpened();\n                            },\n                            get children() {\n                              return createComponent(DropdownStyled, {\n                                get hidden() {\n                                  return !isOpened();\n                                },\n                                onClose: () => setIsOpened(false),\n                                ref(r$) {\n                                  const _ref$ = dropDownRef;\n                                  typeof _ref$ === \"function\" ? _ref$(r$) : dropDownRef = r$;\n                                }\n                              });\n                            }\n                          });\n                        }\n                      }), null);\n                      insert(_el$, createComponent(NotificationsStyled, {}), null);\n                      createRenderEffect((_p$) => {\n                        var _a2, _b2;\n                        const _v$ = position.strategy, _v$2 = `${(_a2 = position.y) != null ? _a2 : 0}px`, _v$3 = `${(_b2 = position.x) != null ? _b2 : 0}px`;\n                        _v$ !== _p$._v$ && _el$.style.setProperty(\"position\", _p$._v$ = _v$);\n                        _v$2 !== _p$._v$2 && _el$.style.setProperty(\"top\", _p$._v$2 = _v$2);\n                        _v$3 !== _p$._v$3 && _el$.style.setProperty(\"left\", _p$._v$3 = _v$3);\n                        return _p$;\n                      }, {\n                        _v$: void 0,\n                        _v$2: void 0,\n                        _v$3: void 0\n                      });\n                      return _el$;\n                    }\n                  })];\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst StyledModal = styled(Modal)`\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 18px;\n    padding-bottom: 0;\n\n    ${media(\"mobile\")} {\n        padding-left: 0;\n        padding-right: 0;\n\n        min-height: 364px;\n    }\n`;\nconst H1Styled$8 = styled(H1)`\n    margin-top: 12px;\n\n    ${media(\"mobile\")} {\n        padding: 0 10px;\n    }\n`;\nconst LoaderContainerStyled = styled.div`\n    margin: 30px 0;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n\n    ${media(\"mobile\")} {\n        height: 160px;\n        align-items: center;\n    }\n`;\nstyled(Text)`\n    min-width: 84px;\n    text-align: center;\n    font-weight: 590;\n`;\nstyled(TabBar)`\n    margin: 0 auto 22px;\n`;\nconst [appState, setAppState] = createStore({\n  buttonRootId: null,\n  language: \"en\",\n  returnStrategy: \"back\",\n  twaReturnUrl: void 0,\n  walletsListConfiguration: {},\n  enableAndroidBackHandler: true\n});\nfunction uniq(array) {\n  return [...new Set(array)];\n}\nfunction mergeConcat(idKey, array1, array2) {\n  return array1.map((item1) => {\n    const item2 = array2.find((elem) => elem[idKey] === item1[idKey]);\n    array2 = array2.filter((elem) => elem[idKey] !== item1[idKey]);\n    return item2 === void 0 ? item1 : item2;\n  }).concat(array2);\n}\nfunction uiWalletToWalletInfo(uiWallet) {\n  if (\"jsBridgeKey\" in uiWallet) {\n    return __spreadProps(__spreadValues({}, uiWallet), {\n      injected: _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect.isWalletInjected(uiWallet.jsBridgeKey),\n      embedded: _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect.isInsideWalletBrowser(uiWallet.jsBridgeKey)\n    });\n  }\n  return uiWallet;\n}\nfunction applyWalletsListConfiguration(walletsList, configuration) {\n  var _a2;\n  if (!configuration) {\n    return walletsList;\n  }\n  if ((_a2 = configuration.includeWallets) == null ? void 0 : _a2.length) {\n    walletsList = mergeConcat(\n      \"name\",\n      walletsList,\n      configuration.includeWallets.map(uiWalletToWalletInfo)\n    );\n  }\n  return walletsList;\n}\nfunction supportsDesktop(walletInfo) {\n  return walletInfo.platforms.some((w) => [\"macos\", \"linux\", \"windows\"].includes(w));\n}\nfunction supportsMobile(walletInfo) {\n  return walletInfo.platforms.some((w) => [\"ios\", \"android\"].includes(w));\n}\nfunction supportsExtension(walletInfo) {\n  return walletInfo.platforms.some((w) => [\"chrome\", \"firefox\", \"safari\"].includes(w));\n}\nfunction eqWalletName(wallet1, name) {\n  if (!name) {\n    return false;\n  }\n  return wallet1.name.toLowerCase() === name.toLowerCase() || wallet1.appName.toLowerCase() === name.toLowerCase();\n}\nconst DesktopSelectWalletModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst H1Styled$7 = styled(H1)`\n    margin-bottom: 18px;\n`;\nstyled.div`\n    height: 1px;\n    margin: 0 -24px;\n    width: calc(100% + 48px);\n    opacity: 0.12;\n    background: ${(props) => props.isShown ? props.theme.colors.icon.secondary : \"transparent\"};\n    transition: background 0.15s ease-in-out;\n\n    ${media(\"mobile\")} {\n        width: 100%;\n    }\n`;\nconst WalletsUl = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 92px);\n    grid-template-rows: auto;\n    align-content: flex-start;\n    justify-content: center;\n    row-gap: 8px;\n    width: 100%;\n    padding: 0 0 16px;\n    align-self: flex-start;\n    max-width: 400px;\n    margin: 0 auto;\n    list-style: none;\n\n    > li {\n        display: block;\n        height: fit-content;\n    }\n\n    ${media(\"mobile\")} {\n        display: grid;\n        grid-template-columns: repeat(4, 1fr);\n        gap: 0;\n        padding: 8px 12px 16px;\n        max-width: none;\n\n        > li {\n            min-width: 78px;\n            display: flex;\n        }\n\n        > li > * {\n            width: 100%;\n        }\n    }\n`;\nstyled(Button)`\n    display: block;\n    margin: 0 auto 1px;\n    font-size: 15px;\n`;\nconst StyledIconButton$3 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst WalletLabeledItemStyled = styled(WalletLabeledItem)`\n    height: 100%;\n`;\nconst _tmpl$$2 = /* @__PURE__ */ template$1(`<li></li>`);\nconst AllWalletsListModal = (props) => {\n  const maxHeight = () => isMobile() ? void 0 : 510;\n  const walletsList = () => isMobile() ? props.walletsList.filter(supportsMobile) : props.walletsList;\n  return createComponent(DesktopSelectWalletModalStyled, {\n    \"data-tc-wallets-modal-list\": \"true\",\n    get children() {\n      return [createComponent(StyledIconButton$3, {\n        icon: \"arrow\",\n        onClick: () => props.onBack()\n      }), createComponent(H1Styled$7, {\n        translationKey: \"walletModal.wallets\",\n        children: \"Wallets\"\n      }), createComponent(ScrollContainer, {\n        get maxHeight() {\n          return maxHeight();\n        },\n        get children() {\n          return createComponent(WalletsUl, {\n            get children() {\n              return createComponent(For, {\n                get each() {\n                  return walletsList();\n                },\n                children: (wallet) => (() => {\n                  const _el$ = _tmpl$$2.cloneNode(true);\n                  insert(_el$, createComponent(WalletLabeledItemStyled, {\n                    wallet,\n                    onClick: () => props.onSelect(wallet)\n                  }));\n                  return _el$;\n                })()\n              });\n            }\n          });\n        }\n      })];\n    }\n  });\n};\nconst tgButtonBorders = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst tgIconBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst DesktopConnectionModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\nconst BodyStyled$1 = styled.div`\n    flex: 1;\n    margin-top: ${(props) => props.qr ? \"0\" : \"18px\"};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 232px;\n`;\nconst QRCodeStyled$1 = styled(QRCode)`\n    margin-bottom: 24px;\n`;\nconst H1Styled$6 = styled(H1)`\n    max-width: 288px;\n    margin: 0 auto 2px;\n`;\nconst H2Styled$4 = styled(H2)`\n    max-width: 288px;\n    text-align: center;\n    margin: 0 auto 20px;\n`;\nconst StyledIconButton$2 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst ButtonsContainerStyled$1 = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 8px;\n    padding-bottom: 16px;\n`;\nconst BottomButtonsContainerStyled = styled(ButtonsContainerStyled$1)`\n    padding-bottom: 0;\n`;\nconst FooterButton$1 = styled(Button)`\n    margin-bottom: 24px;\n`;\nconst LoaderStyled$1 = styled(LoaderIcon)`\n    margin-bottom: 18px;\n    margin-top: 2px;\n`;\nconst ErrorIconStyled$1 = styled(ErrorIcon)`\n    margin-bottom: 16px;\n`;\nconst BodyTextStyled$1 = styled(H2)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    text-align: center;\n    margin-bottom: 20px;\n`;\nconst TgButtonStyled = styled(Button)`\n    margin-top: -8px;\n    margin-bottom: 24px;\n    width: 100%;\n    padding: 12px 12px 12px 20px;\n    border-radius: ${(props) => tgButtonBorders[props.theme.borderRadius]};\n    font-size: 16px;\n    line-height: 20px;\n`;\nconst TgImageStyled = styled(Image)`\n    width: 32px;\n    height: 32px;\n    border-radius: ${(props) => tgIconBorders[props.theme.borderRadius]};\n`;\nconst Translation = (props) => {\n  const [t2] = useI18n();\n  return createMemo(() => {\n    var _a2;\n    return t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString());\n  });\n};\nfunction addReturnStrategy(url, strategy) {\n  let returnStrategy;\n  if (typeof strategy === \"string\") {\n    returnStrategy = strategy;\n  } else {\n    returnStrategy = isInTMA() ? strategy.twaReturnUrl || strategy.returnStrategy : \"none\";\n  }\n  const newUrl = addQueryParameter(url, \"ret\", returnStrategy);\n  if (!(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(url)) {\n    return newUrl;\n  }\n  const lastParam = newUrl.slice(newUrl.lastIndexOf(\"&\") + 1);\n  return newUrl.slice(0, newUrl.lastIndexOf(\"&\")) + \"-\" + (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.encodeTelegramUrlParameters)(lastParam);\n}\nfunction redirectToTelegram(universalLink, options) {\n  options = __spreadValues({}, options);\n  const directLink = convertToTGDirectLink(universalLink);\n  const directLinkUrl = new URL(directLink);\n  if (!directLinkUrl.searchParams.has(\"startapp\")) {\n    directLinkUrl.searchParams.append(\"startapp\", \"tonconnect\");\n  }\n  if (isInTelegramBrowser()) {\n    options.returnStrategy = \"back\";\n    const linkWitStrategy = addReturnStrategy(directLinkUrl.toString(), options.returnStrategy);\n    openLinkBlank(linkWitStrategy);\n  } else if (isInTMA()) {\n    if (isTmaPlatform(\"ios\", \"android\", \"macos\", \"tdesktop\", \"web\")) {\n      options.returnStrategy = \"back\";\n      const linkWitStrategy = addReturnStrategy(\n        directLinkUrl.toString(),\n        options.returnStrategy\n      );\n      sendOpenTelegramLink(linkWitStrategy);\n    } else if (isTmaPlatform(\"weba\")) {\n      sendOpenTelegramLink(addReturnStrategy(directLinkUrl.toString(), options));\n    } else {\n      openLinkBlank(addReturnStrategy(directLinkUrl.toString(), options));\n    }\n  } else {\n    if (isOS(\"ios\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"back\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const isChrome = isBrowser(\"chrome\");\n      const isFirefox = isBrowser(\"firefox\");\n      const useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;\n      if (useDeepLink) {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      } else {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        openLinkBlank(linkWithStrategy);\n      }\n    } else if (isOS(\"android\")) {\n      options.returnStrategy = \"back\";\n      const isChrome = isBrowser(\"chrome\");\n      const isFirefox = isBrowser(\"firefox\");\n      const useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;\n      if (useDeepLink) {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      } else {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        openLinkBlank(linkWithStrategy);\n      }\n    } else if (isOS(\"ipad\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"back\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const isChrome = isBrowser(\"chrome\");\n      const isFirefox = isBrowser(\"firefox\");\n      const useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;\n      const linkWithStrategy = addReturnStrategy(\n        directLinkUrl.toString(),\n        options.returnStrategy\n      );\n      if (useDeepLink) {\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      } else {\n        openLinkBlank(linkWithStrategy);\n      }\n    } else if (isOS(\"macos\", \"windows\", \"linux\")) {\n      options.returnStrategy = \"back\";\n      options.twaReturnUrl = void 0;\n      const linkWithStrategy = addReturnStrategy(\n        directLinkUrl.toString(),\n        options.returnStrategy\n      );\n      if (options.forceRedirect) {\n        openLinkBlank(linkWithStrategy);\n      } else {\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      }\n    } else {\n      openLinkBlank(addReturnStrategy(directLinkUrl.toString(), options));\n    }\n  }\n}\nfunction redirectToWallet(universalLink, deepLink, options, setOpenMethod) {\n  options = __spreadValues({}, options);\n  if (isInTelegramBrowser()) {\n    if (isOS(\"ios\", \"android\")) {\n      if (options.returnStrategy === \"back\") {\n        options.returnStrategy = \"tg://resolve\";\n      }\n      setOpenMethod(\"universal-link\");\n      openLink(addReturnStrategy(universalLink, options.returnStrategy), \"_self\");\n    } else {\n      setOpenMethod(\"universal-link\");\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      openLinkBlank(linkWitStrategy);\n    }\n  } else if (isInTMA()) {\n    if (isTmaPlatform(\"ios\", \"android\")) {\n      if (options.returnStrategy === \"back\") {\n        options.returnStrategy = \"tg://resolve\";\n      }\n      setOpenMethod(\"universal-link\");\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      sendOpenTelegramLink(linkWitStrategy, () => {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      });\n    } else if (isTmaPlatform(\"macos\", \"tdesktop\")) {\n      if (options.returnStrategy === \"back\") {\n        options.returnStrategy = \"tg://resolve\";\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else if (isTmaPlatform(\"weba\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = location.href;\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else if (isTmaPlatform(\"web\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = location.href;\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else {\n      setOpenMethod(\"universal-link\");\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      openLinkBlank(linkWitStrategy);\n    }\n  } else {\n    if (isOS(\"ios\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"none\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      if (isBrowser(\"chrome\")) {\n        setOpenMethod(\"universal-link\");\n        openLink(addReturnStrategy(universalLink, options.returnStrategy), \"_self\");\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n      }\n    } else if (isOS(\"android\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      setOpenMethod(\"universal-link\");\n      openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n    } else if (isOS(\"ipad\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"none\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      if (isBrowser(\"chrome\")) {\n        setOpenMethod(\"universal-link\");\n        openLink(addReturnStrategy(universalLink, options.returnStrategy), \"_self\");\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n      }\n    } else if (isOS(\"macos\", \"windows\", \"linux\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"none\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = \"none\";\n        }\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else {\n      setOpenMethod(\"universal-link\");\n      openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n    }\n  }\n}\nfunction addQueryParameter(url, key, value) {\n  const parsed = new URL(url);\n  parsed.searchParams.append(key, value);\n  return parsed.toString();\n}\nfunction convertToTGDirectLink(universalLink) {\n  const url = new URL(universalLink);\n  if (url.searchParams.has(\"attach\")) {\n    url.searchParams.delete(\"attach\");\n    url.pathname += \"/start\";\n  }\n  return url.toString();\n}\nfunction convertToTGDeepLink(directLink) {\n  const parsed = new URL(directLink);\n  const [, domain, appname] = parsed.pathname.split(\"/\");\n  const startapp = parsed.searchParams.get(\"startapp\");\n  return `tg://resolve?domain=${domain}&appname=${appname}&startapp=${startapp}`;\n}\nconst DesktopConnectionModal = (props) => {\n  const [mode, setMode] = createSignal(\"mobile\");\n  const [connectionErrored, setConnectionErrored] = createSignal(false);\n  const [universalLink, setUniversalLink] = createSignal();\n  const [firstClick, setFirstClick] = createSignal(true);\n  const connector = useContext(ConnectorContext);\n  const unsubscribe = connector.onStatusChange(() => {\n  }, () => {\n    if (props.wallet.appName !== AT_WALLET_APP_NAME) {\n      setConnectionErrored(true);\n    }\n  });\n  onCleanup(unsubscribe);\n  const generateUniversalLink = () => {\n    try {\n      const universalLink2 = connector.connect({\n        universalLink: props.wallet.universalLink,\n        bridgeUrl: props.wallet.bridgeUrl\n      }, props.additionalRequest);\n      setUniversalLink(universalLink2);\n    } catch (e2) {\n    }\n  };\n  createEffect(() => {\n    if (untrack(mode) !== \"extension\" && (supportsMobile(props.wallet) || supportsDesktop(props.wallet))) {\n      generateUniversalLink();\n    }\n  });\n  const onClickMobile = () => {\n    setConnectionErrored(false);\n    if (mode() === \"extension\") {\n      generateUniversalLink();\n    }\n    setMode(\"mobile\");\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"qrcode\"\n    }));\n  };\n  const onClickDesktop = () => {\n    setConnectionErrored(false);\n    if (mode() === \"extension\") {\n      generateUniversalLink();\n    }\n    setMode(\"desktop\");\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(universalLink())) {\n      onClickTelegram();\n    } else {\n      const forceRedirect = !firstClick();\n      setFirstClick(false);\n      redirectToWallet(universalLink(), props.wallet.deepLink, {\n        returnStrategy: appState.returnStrategy,\n        forceRedirect\n      }, (method) => {\n        setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n          openMethod: method\n        }));\n      });\n    }\n  };\n  const onClickTelegram = () => {\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"universal-link\"\n    }));\n    redirectToTelegram(universalLink(), {\n      returnStrategy: appState.returnStrategy,\n      twaReturnUrl: appState.twaReturnUrl,\n      forceRedirect\n    });\n  };\n  const onClickExtension = () => {\n    setConnectionErrored(false);\n    setMode(\"extension\");\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet)) {\n      setLastSelectedWalletInfo(props.wallet);\n      connector.connect({\n        jsBridgeKey: props.wallet.jsBridgeKey\n      }, props.additionalRequest);\n    }\n  };\n  if (supportsMobile(props.wallet)) {\n    onClickMobile();\n  } else if (supportsExtension(props.wallet)) {\n    onClickExtension();\n  } else {\n    onClickDesktop();\n  }\n  return createComponent(DesktopConnectionModalStyled, {\n    \"data-tc-wallets-modal-connection-desktop\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return !props.backDisabled;\n        },\n        get children() {\n          return createComponent(StyledIconButton$2, {\n            icon: \"arrow\",\n            onClick: () => props.onBackClick()\n          });\n        }\n      }), createComponent(H1Styled$6, {\n        get children() {\n          return props.wallet.name;\n        }\n      }), createComponent(Show, {\n        get when() {\n          return mode() === \"mobile\";\n        },\n        get children() {\n          return createComponent(H2Styled$4, {\n            translationKey: \"walletModal.desktopConnectionModal.scanQR\",\n            get translationValues() {\n              return {\n                name: props.wallet.name\n              };\n            },\n            get children() {\n              return [\"Scan the QR code below with your phone\\u2019s or \", createMemo(() => props.wallet.name), \"\\u2019s camera\"];\n            }\n          });\n        }\n      }), createComponent(BodyStyled$1, {\n        get qr() {\n          return mode() === \"mobile\";\n        },\n        get children() {\n          return createComponent(Switch, {\n            get children() {\n              return [createComponent(Match, {\n                get when() {\n                  return mode() === \"mobile\";\n                },\n                get children() {\n                  return createComponent(QRCodeStyled$1, {\n                    disableCopy: false,\n                    get sourceUrl() {\n                      return addReturnStrategy(universalLink(), \"none\");\n                    },\n                    get imageUrl() {\n                      return props.wallet.imageUrl;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return connectionErrored();\n                },\n                get children() {\n                  return [createComponent(ErrorIconStyled$1, {\n                    size: \"s\"\n                  }), createComponent(BodyTextStyled$1, {\n                    translationKey: \"walletModal.desktopConnectionModal.connectionDeclined\",\n                    children: \"Connection declined\"\n                  }), createComponent(ButtonsContainerStyled$1, {\n                    get children() {\n                      return createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(RetryIcon, {});\n                        },\n                        get onClick() {\n                          return mode() === \"extension\" ? onClickExtension : onClickDesktop;\n                        },\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"common.retry\",\n                            children: \"Retry\"\n                          });\n                        }\n                      });\n                    }\n                  })];\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return mode() === \"extension\";\n                },\n                get children() {\n                  return [createComponent(Show, {\n                    get when() {\n                      return (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet);\n                    },\n                    get children() {\n                      return [createComponent(LoaderStyled$1, {\n                        size: \"s\"\n                      }), createComponent(BodyTextStyled$1, {\n                        translationKey: \"walletModal.desktopConnectionModal.continueInExtension\",\n                        get translationValues() {\n                          return {\n                            name: props.wallet.name\n                          };\n                        },\n                        get children() {\n                          return [\"Continue in \", createMemo(() => props.wallet.name), \" browser extension\\u2026\"];\n                        }\n                      }), createComponent(ButtonsContainerStyled$1, {\n                        get children() {\n                          return createComponent(Button, {\n                            get leftIcon() {\n                              return createComponent(RetryIcon, {});\n                            },\n                            onClick: onClickExtension,\n                            get children() {\n                              return createComponent(Translation, {\n                                translationKey: \"common.retry\",\n                                children: \"Retry\"\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  }), createComponent(Show, {\n                    get when() {\n                      return !(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet);\n                    },\n                    get children() {\n                      return [createComponent(BodyTextStyled$1, {\n                        translationKey: \"walletModal.desktopConnectionModal.dontHaveExtension\",\n                        get translationValues() {\n                          return {\n                            name: props.wallet.name\n                          };\n                        },\n                        get children() {\n                          return [\"Seems you don't have installed \", createMemo(() => props.wallet.name), \" browser extension\"];\n                        }\n                      }), createComponent(ButtonsContainerStyled$1, {\n                        get children() {\n                          return createComponent(Link, {\n                            get href() {\n                              return props.wallet.aboutUrl;\n                            },\n                            blank: true,\n                            get children() {\n                              return createComponent(Button, {\n                                get rightIcon() {\n                                  return createComponent(LinkIcon, {});\n                                },\n                                onClick: onClickExtension,\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"walletModal.desktopConnectionModal.getWallet\",\n                                    get translationValues() {\n                                      return {\n                                        name: props.wallet.name\n                                      };\n                                    },\n                                    get children() {\n                                      return [\"Get \", createMemo(() => props.wallet.name)];\n                                    }\n                                  });\n                                }\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return mode() === \"desktop\";\n                },\n                get children() {\n                  return [createComponent(LoaderIcon, {\n                    size: \"m\"\n                  }), createComponent(BodyTextStyled$1, {\n                    translationKey: \"walletModal.desktopConnectionModal.continueOnDesktop\",\n                    get translationValues() {\n                      return {\n                        name: props.wallet.name\n                      };\n                    },\n                    get children() {\n                      return [\"Continue in \", createMemo(() => props.wallet.name), \" on desktop\\u2026\"];\n                    }\n                  }), createComponent(ButtonsContainerStyled$1, {\n                    get children() {\n                      return [createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(RetryIcon, {});\n                        },\n                        onClick: onClickDesktop,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"common.retry\",\n                            children: \"Retry\"\n                          });\n                        }\n                      }), createComponent(Link, {\n                        get href() {\n                          return props.wallet.aboutUrl;\n                        },\n                        blank: true,\n                        get children() {\n                          return createComponent(Button, {\n                            get rightIcon() {\n                              return createComponent(LinkIcon, {});\n                            },\n                            get children() {\n                              return createComponent(Translation, {\n                                translationKey: \"walletModal.desktopConnectionModal.getWallet\",\n                                get translationValues() {\n                                  return {\n                                    name: props.wallet.name\n                                  };\n                                },\n                                get children() {\n                                  return [\"Get \", createMemo(() => props.wallet.name)];\n                                }\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              })];\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return props.wallet.appName === AT_WALLET_APP_NAME;\n        },\n        get children() {\n          return createComponent(TgButtonStyled, {\n            get rightIcon() {\n              return createComponent(TgImageStyled, {\n                get src() {\n                  return IMG.TG;\n                }\n              });\n            },\n            scale: \"s\",\n            onClick: onClickTelegram,\n            get children() {\n              return createComponent(Translation, {\n                translationKey: \"walletModal.desktopConnectionModal.openWalletOnTelegram\",\n                children: \"Open Wallet in Telegram on desktop\"\n              });\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return props.wallet.appName !== AT_WALLET_APP_NAME;\n        },\n        get children() {\n          return createComponent(BottomButtonsContainerStyled, {\n            get children() {\n              return [createComponent(Show, {\n                get when() {\n                  return createMemo(() => mode() !== \"mobile\")() && supportsMobile(props.wallet);\n                },\n                get children() {\n                  return createComponent(FooterButton$1, {\n                    appearance: \"secondary\",\n                    get leftIcon() {\n                      return createComponent(MobileIcon, {});\n                    },\n                    onClick: onClickMobile,\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.mobile\",\n                        children: \"Mobile\"\n                      });\n                    }\n                  });\n                }\n              }), createComponent(Show, {\n                get when() {\n                  return createMemo(() => mode() !== \"extension\")() && supportsExtension(props.wallet);\n                },\n                get children() {\n                  return createComponent(FooterButton$1, {\n                    appearance: \"secondary\",\n                    get leftIcon() {\n                      return createComponent(BrowserIcon, {});\n                    },\n                    onClick: onClickExtension,\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.browserExtension\",\n                        children: \"Browser Extension\"\n                      });\n                    }\n                  });\n                }\n              }), createComponent(Show, {\n                get when() {\n                  return createMemo(() => mode() !== \"desktop\")() && supportsDesktop(props.wallet);\n                },\n                get children() {\n                  return createComponent(FooterButton$1, {\n                    appearance: \"secondary\",\n                    get leftIcon() {\n                      return createComponent(DesktopIcon, {});\n                    },\n                    onClick: onClickDesktop,\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.desktop\",\n                        children: \"Desktop\"\n                      });\n                    }\n                  });\n                }\n              })];\n            }\n          });\n        }\n      })];\n    }\n  });\n};\nconst InfoModalStyled = styled.div``;\nconst StyledIconButton$1 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst H1Styled$5 = styled(H1)`\n    margin-bottom: 18px;\n`;\nconst InfoBlock = styled.div`\n    padding: 16px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst InfoBlockIconClass = u`\n    margin-bottom: 12px;\n`;\nconst H3Styled = styled(H3)`\n    text-align: center;\n    margin-bottom: 4px;\n`;\nconst TextStyled$1 = styled(Text)`\n    text-align: center;\n    max-width: 352px;\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst ButtonsBlock = styled.div`\n    padding: 16px 24px 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n`;\nconst LINKS = {\n  GET_A_WALLET: \"https://ton.org/wallets?filters[wallet_features][slug][$in]=dapp-auth&pagination[limit]=-1\"\n};\nconst InfoModal = (props) => {\n  return createComponent(InfoModalStyled, {\n    \"data-tc-wallets-modal-info\": \"true\",\n    get children() {\n      return [createComponent(StyledIconButton$1, {\n        icon: \"arrow\",\n        onClick: () => props.onBackClick()\n      }), createComponent(H1Styled$5, {\n        translationKey: \"walletModal.infoModal.whatIsAWallet\",\n        children: \"What is a wallet\"\n      }), createComponent(ScrollContainer, {\n        get children() {\n          return [createComponent(InfoBlock, {\n            get children() {\n              return [createComponent(SecurityIcon, {\n                \"class\": InfoBlockIconClass\n              }), createComponent(H3Styled, {\n                translationKey: \"walletModal.infoModal.secureDigitalAssets\",\n                children: \"Secure digital assets storage\"\n              }), createComponent(TextStyled$1, {\n                translationKey: \"walletModal.infoModal.walletProtects\",\n                children: \"A wallet protects and manages your digital assets including TON, tokens and collectables.\"\n              })];\n            }\n          }), createComponent(InfoBlock, {\n            get children() {\n              return [createComponent(PersonalityIcon, {\n                \"class\": InfoBlockIconClass\n              }), createComponent(H3Styled, {\n                translationKey: \"walletModal.infoModal.controlIdentity\",\n                children: \"Control your Web3 identity\"\n              }), createComponent(TextStyled$1, {\n                translationKey: \"walletModal.infoModal.manageIdentity\",\n                children: \"Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in the blockchain ecosystem.\"\n              })];\n            }\n          }), createComponent(InfoBlock, {\n            get children() {\n              return [createComponent(SwapIcon, {\n                \"class\": InfoBlockIconClass\n              }), createComponent(H3Styled, {\n                translationKey: \"walletModal.infoModal.effortlessCryptoTransactions\",\n                children: \"Effortless crypto transactions\"\n              }), createComponent(TextStyled$1, {\n                translationKey: \"walletModal.infoModal.easilySend\",\n                children: \"Easily send, receive, monitor your cryptocurrencies. Streamline your operations with decentralized applications.\"\n              })];\n            }\n          }), createComponent(ButtonsBlock, {\n            get children() {\n              return createComponent(Link, {\n                get href() {\n                  return LINKS.GET_A_WALLET;\n                },\n                blank: true,\n                get children() {\n                  return createComponent(Button, {\n                    get rightIcon() {\n                      return createComponent(WalletIcon, {});\n                    },\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"walletModal.infoModal.getAWallet\",\n                        children: \"Get a Wallet\"\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst MobileConnectionModalStyled = styled.div``;\nconst BodyStyled = styled.div`\n    flex: 1;\n    margin-top: 18px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 232px;\n`;\nconst H1Styled$4 = styled(H1)`\n    max-width: 262px;\n    margin: 0 auto 8px;\n`;\nconst StyledIconButton = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst FooterStyled = styled.div`\n    padding: 16px;\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    border-top: 0.5px solid ${(props) => rgba(props.theme.colors.icon.secondary, 0.2)};\n`;\nconst ImageStyled = styled(Image)`\n    width: 36px;\n    height: 36px;\n    border-radius: 10px;\n`;\nconst FooterButton = styled(Link)`\n    margin-left: auto;\n`;\nconst LoaderStyled = styled(LoaderIcon)`\n    margin-bottom: 18px;\n    margin-top: 2px;\n`;\nconst ErrorIconStyled = styled(ErrorIcon)`\n    margin-bottom: 16px;\n`;\nconst BodyTextStyled = styled(H2)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    text-align: center;\n    margin-bottom: 20px;\n`;\nconst ButtonsContainerStyled = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 8px;\n    padding-bottom: 16px;\n`;\nconst actionButtonBorderRadius$1 = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst H1Styled$3 = styled(H1)`\n    margin-bottom: 2px;\n    padding: 0 52px;\n`;\nconst H2Styled$3 = styled(H2)`\n    margin-bottom: 20px;\n    padding: 0 64px;\n`;\nconst QrCodeWrapper$1 = styled.div`\n    padding: 0 24px 16px;\n`;\nconst ButtonsWrapper$1 = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 16px;\n    padding: 0 24px 24px;\n    margin-top: 0;\n`;\nconst ActionButton$1 = styled(Button)`\n    width: 100%;\n    height: 56px;\n    border-radius: ${(props) => actionButtonBorderRadius$1[props.theme.borderRadius]};\n    background-color: ${(props) => rgba(props.theme.colors.accent, 0.12)};\n    color: ${(props) => props.theme.colors.accent};\n    font-size: 16px;\n    line-height: 20px;\n    font-weight: 500;\n    padding: 17px 20px 19px 20px;\n`;\nconst MobileConnectionQR = (props) => {\n  return [createComponent(H1Styled$3, {\n    get children() {\n      return props.walletInfo.name;\n    }\n  }), createComponent(H2Styled$3, {\n    translationKey: \"walletModal.mobileConnectionModal.scanQR\",\n    get translationValues() {\n      return {\n        name: props.walletInfo.name\n      };\n    },\n    get children() {\n      return [\"Scan the QR code below with your phone\\u2019s or \", createMemo(() => props.walletInfo.name), \"\\u2019s camera\"];\n    }\n  }), createComponent(QrCodeWrapper$1, {\n    get children() {\n      return createComponent(QRCode, {\n        get imageUrl() {\n          return props.walletInfo.imageUrl;\n        },\n        get sourceUrl() {\n          return addReturnStrategy(props.universalLink, \"none\");\n        },\n        disableCopy: true\n      });\n    }\n  }), createComponent(ButtonsWrapper$1, {\n    get children() {\n      return [createComponent(ActionButton$1, {\n        appearance: \"secondary\",\n        onClick: () => {\n          var _a2;\n          return (_a2 = props.onOpenLink) == null ? void 0 : _a2.call(props);\n        },\n        get children() {\n          return createComponent(Translation, {\n            translationKey: \"walletModal.mobileUniversalModal.openLink\",\n            children: \"Open Link\"\n          });\n        }\n      }), createComponent(ActionButton$1, {\n        appearance: \"secondary\",\n        onClick: () => {\n          var _a2;\n          return (_a2 = props.onCopy) == null ? void 0 : _a2.call(props);\n        },\n        get children() {\n          return createComponent(Translation, {\n            get translationKey() {\n              return props.isCopiedShown !== void 0 ? \"common.copied\" : \"common.copyLink\";\n            },\n            get children() {\n              return props.isCopiedShown !== void 0 ? \"Copied\" : \"Copy Link\";\n            }\n          });\n        }\n      })];\n    }\n  })];\n};\nconst MobileConnectionModal = (props) => {\n  const theme = useTheme();\n  const [firstClick, setFirstClick] = createSignal(true);\n  const [showQR, setShowQR] = createSignal(false);\n  const [connectionErrored, setConnectionErrored] = createSignal(false);\n  const connector = useContext(ConnectorContext);\n  const unsubscribe = connector.onStatusChange(() => {\n  }, () => {\n    setConnectionErrored(true);\n  });\n  const universalLink = createMemo(() => connector.connect({\n    universalLink: props.wallet.universalLink,\n    bridgeUrl: props.wallet.bridgeUrl\n  }, props.additionalRequest));\n  const onClickTelegram = () => {\n    const alwaysForceRedirect = true;\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"universal-link\"\n    }));\n    redirectToTelegram(universalLink(), {\n      returnStrategy: appState.returnStrategy,\n      twaReturnUrl: appState.twaReturnUrl,\n      forceRedirect: alwaysForceRedirect\n    });\n  };\n  const onRetry = () => {\n    const currentUniversalLink = universalLink();\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(currentUniversalLink)) {\n      return onClickTelegram();\n    }\n    setConnectionErrored(false);\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    redirectToWallet(universalLink(), props.wallet.deepLink, {\n      returnStrategy: appState.returnStrategy,\n      forceRedirect\n    }, (method) => {\n      setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n        openMethod: method\n      }));\n    });\n  };\n  const [isCopiedShown, setIsCopiedShown] = createSignal(void 0);\n  const onCopy = () => __async(void 0, null, function* () {\n    if (isCopiedShown() !== void 0) {\n      clearTimeout(isCopiedShown());\n    }\n    yield copyToClipboard(universalLink());\n    const timeoutId = setTimeout(() => setIsCopiedShown(void 0), 1500);\n    setIsCopiedShown(timeoutId);\n  });\n  const onOpenQR = () => {\n    setConnectionErrored(false);\n    setShowQR(true);\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"qrcode\"\n    }));\n  };\n  const onCloseQR = () => {\n    setShowQR(false);\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"universal-link\"\n    }));\n  };\n  const onBack = () => {\n    if (showQR()) {\n      onCloseQR();\n    } else {\n      props.onBackClick();\n    }\n  };\n  onCleanup(unsubscribe);\n  onRetry();\n  return createComponent(MobileConnectionModalStyled, {\n    \"data-tc-wallets-modal-connection-mobile\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return !props.backDisabled || showQR();\n        },\n        get children() {\n          return createComponent(StyledIconButton, {\n            icon: \"arrow\",\n            onClick: onBack\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return showQR();\n        },\n        get children() {\n          return createComponent(MobileConnectionQR, {\n            get universalLink() {\n              return universalLink();\n            },\n            get walletInfo() {\n              return props.wallet;\n            },\n            onOpenLink: onRetry,\n            onCopy,\n            get isCopiedShown() {\n              return isCopiedShown();\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !showQR();\n        },\n        get children() {\n          return [createComponent(H1Styled$4, {\n            get children() {\n              return props.wallet.name;\n            }\n          }), createComponent(BodyStyled, {\n            get children() {\n              return [createComponent(Show, {\n                get when() {\n                  return connectionErrored();\n                },\n                get children() {\n                  return [createComponent(ErrorIconStyled, {\n                    size: \"s\"\n                  }), createComponent(BodyTextStyled, {\n                    translationKey: \"walletModal.mobileConnectionModal.connectionDeclined\",\n                    children: \"Connection declined\"\n                  }), createComponent(ButtonsContainerStyled, {\n                    get children() {\n                      return [createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(RetryIcon, {});\n                        },\n                        onClick: onRetry,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"common.retry\",\n                            children: \"Retry\"\n                          });\n                        }\n                      }), createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(QRIcon, {\n                            get fill() {\n                              return theme.colors.accent;\n                            }\n                          });\n                        },\n                        onClick: onOpenQR,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"walletModal.mobileConnectionModal.showQR\",\n                            children: \"Show QR Code\"\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              }), createComponent(Show, {\n                get when() {\n                  return !connectionErrored();\n                },\n                get children() {\n                  return [createComponent(LoaderStyled, {\n                    size: \"s\"\n                  }), createComponent(BodyTextStyled, {\n                    translationKey: \"walletModal.mobileConnectionModal.continueIn\",\n                    get translationValues() {\n                      return {\n                        name: props.wallet.name\n                      };\n                    },\n                    get children() {\n                      return [\"Continue in \", createMemo(() => props.wallet.name), \"\\u2026\"];\n                    }\n                  }), createComponent(ButtonsContainerStyled, {\n                    get children() {\n                      return [createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(RetryIcon, {});\n                        },\n                        onClick: onRetry,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"common.retry\",\n                            children: \"Retry\"\n                          });\n                        }\n                      }), createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(QRIcon, {\n                            get fill() {\n                              return theme.colors.accent;\n                            }\n                          });\n                        },\n                        onClick: onOpenQR,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"walletModal.mobileConnectionModal.showQR\",\n                            children: \"Show QR Code\"\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              })];\n            }\n          }), createComponent(FooterStyled, {\n            get children() {\n              return [createComponent(ImageStyled, {\n                get src() {\n                  return props.wallet.imageUrl;\n                }\n              }), createComponent(H3, {\n                get children() {\n                  return props.wallet.name;\n                }\n              }), createComponent(FooterButton, {\n                get href() {\n                  return props.wallet.aboutUrl;\n                },\n                blank: true,\n                get children() {\n                  return createComponent(Button, {\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.get\",\n                        children: \"GET\"\n                      });\n                    }\n                  });\n                }\n              })];\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst borders$1 = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst tgBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nstyled.li`\n    width: 82px;\n    min-width: 82px;\n    height: 124px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 8px 4px;\n\n    text-align: center;\n    cursor: pointer;\n\n    transition: transform 0.1s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n`;\nconst H1Styled$2 = styled(H1)`\n    margin-top: 38px;\n    margin-bottom: 4px;\n    padding: 0 24px;\n`;\nconst H2Styled$2 = styled(H2)`\n    margin: ${(props) => {\n  var _a2;\n  return (_a2 = props.margin) != null ? _a2 : \"0 0 28px 0\";\n}};\n    padding: ${(props) => {\n  var _a2;\n  return (_a2 = props.padding) != null ? _a2 : \"0 24px\";\n}};\n    min-height: ${(props) => {\n  var _a2;\n  return (_a2 = props.padding) != null ? _a2 : \"44px\";\n}};\n    max-width: ${(props) => props.maxWidth}px;\n    margin-left: ${(props) => props.maxWidth ? \"auto\" : \"0px\"};\n    margin-right: ${(props) => props.maxWidth ? \"auto\" : \"0px\"};\n`;\nstyled(Button)`\n    display: block;\n    margin: 0 auto;\n`;\nconst TelegramButtonStyled = styled(Button)`\n    margin: 0 28px 24px;\n    width: calc(100% - 56px);\n    border-radius: ${(props) => borders$1[props.theme.borderRadius]};\n    padding: 14px 16px 14px 14px;\n    background-color: ${(props) => props.theme.colors.telegramButton};\n\n    color: ${(props) => props.theme.colors.constant.white};\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 20px;\n\n    @media (max-width: 375px) {\n        margin: 0 16px 24px;\n        width: calc(100% - 32px);\n    }\n`;\nconst TGImageStyled = styled(Image)`\n    background-color: transparent;\n    border-radius: ${(props) => tgBorders[props.theme.borderRadius]};\n    width: 24px;\n    height: 24px;\n`;\nconst StyledLeftActionButton = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst actionButtonBorderRadius = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst H1Styled$1 = styled(H1)`\n    margin-bottom: 2px;\n    padding: 0 52px;\n`;\nconst H2Styled$1 = styled(H2)`\n    margin-bottom: 20px;\n    padding: 0 64px;\n`;\nconst QrCodeWrapper = styled.div`\n    padding: 0 24px 16px;\n`;\nconst ButtonsWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 16px;\n    padding: 0 24px 24px;\n    margin-top: 0;\n`;\nconst ActionButton = styled(Button)`\n    width: 100%;\n    height: 56px;\n    border-radius: ${(props) => actionButtonBorderRadius[props.theme.borderRadius]};\n    background-color: ${(props) => rgba(props.theme.colors.accent, 0.12)};\n    color: ${(props) => props.theme.colors.accent};\n    font-size: 16px;\n    line-height: 20px;\n    font-weight: 500;\n    padding: 17px 20px 19px 20px;\n`;\nconst MobileUniversalQR = (props) => {\n  return [createComponent(H1Styled$1, {\n    translationKey: \"walletModal.mobileUniversalModal.connectYourWallet\",\n    children: \"Connect your TON wallet\"\n  }), createComponent(H2Styled$1, {\n    translationKey: \"walletModal.mobileUniversalModal.scan\",\n    children: \"Scan with your mobile wallet\"\n  }), createComponent(QrCodeWrapper, {\n    get children() {\n      return createComponent(QRCode, {\n        get imageUrl() {\n          return IMG.TON;\n        },\n        get sourceUrl() {\n          return addReturnStrategy(props.universalLink, \"none\");\n        },\n        disableCopy: true\n      });\n    }\n  }), createComponent(ButtonsWrapper, {\n    get children() {\n      return [createComponent(ActionButton, {\n        appearance: \"secondary\",\n        onClick: () => props.onOpenLink(),\n        get children() {\n          return createComponent(Translation, {\n            translationKey: \"walletModal.mobileUniversalModal.openLink\",\n            children: \"Open Link\"\n          });\n        }\n      }), createComponent(ActionButton, {\n        appearance: \"secondary\",\n        onClick: () => props.onCopy(),\n        get children() {\n          return createComponent(Translation, {\n            get translationKey() {\n              return props.isCopiedShown !== void 0 ? \"common.copied\" : \"common.copyLink\";\n            },\n            get children() {\n              return props.isCopiedShown !== void 0 ? \"Copied\" : \"Copy Link\";\n            }\n          });\n        }\n      })];\n    }\n  })];\n};\nfunction getUniqueBridges(walletsList) {\n  const uniqueBridges = new Set(\n    walletsList.filter(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote).map((item) => item.bridgeUrl)\n  );\n  return Array.from(uniqueBridges).map((bridgeUrl) => ({ bridgeUrl }));\n}\nfunction bridgesIsEqual(left, right) {\n  const leftSet = new Set(left == null ? void 0 : left.map((i2) => i2.bridgeUrl));\n  const rightSet = new Set(right == null ? void 0 : right.map((i2) => i2.bridgeUrl));\n  return leftSet.size === rightSet.size && [...leftSet].every((value) => rightSet.has(value));\n}\nconst _tmpl$$1 = /* @__PURE__ */ template$1(`<li></li>`), _tmpl$2 = /* @__PURE__ */ template$1(`<div data-tc-wallets-modal-universal-mobile=\"true\"></div>`);\nconst MobileUniversalModal = (props) => {\n  const [showQR, setShowQR] = createSignal(false);\n  const [firstClick, setFirstClick] = createSignal(true);\n  const [universalLink, setUniversalLink] = createSignal(null);\n  const connector = appState.connector;\n  const walletsList = () => props.walletsList.filter((w) => supportsMobile(w) && w.appName !== AT_WALLET_APP_NAME);\n  const shouldShowMoreButton = () => walletsList().length > 7;\n  const walletsBridges = createMemo(() => getUniqueBridges(props.walletsList), null, {\n    equals: bridgesIsEqual\n  });\n  const getUniversalLink = () => {\n    if (!universalLink()) {\n      setUniversalLink(connector.connect(walletsBridges(), props.additionalRequest));\n    }\n    return universalLink();\n  };\n  setLastSelectedWalletInfo({\n    openMethod: \"universal-link\"\n  });\n  const [isCopiedShown, setIsCopiedShown] = createSignal(void 0);\n  const onCopy = () => __async(void 0, null, function* () {\n    if (isCopiedShown() !== void 0) {\n      clearTimeout(isCopiedShown());\n    }\n    yield copyToClipboard(getUniversalLink());\n    const timeoutId = setTimeout(() => setIsCopiedShown(void 0), 1500);\n    setIsCopiedShown(timeoutId);\n  });\n  const onSelectUniversal = () => {\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    redirectToWallet(getUniversalLink(), void 0, {\n      returnStrategy: appState.returnStrategy,\n      forceRedirect\n    }, (method) => {\n      setLastSelectedWalletInfo({\n        openMethod: method\n      });\n    });\n  };\n  const onSelectTelegram = () => {\n    setUniversalLink(null);\n    const atWallet = props.walletsList.find((wallet) => wallet.appName === AT_WALLET_APP_NAME);\n    if (!atWallet || !(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote)(atWallet)) {\n      throw new TonConnectUIError(\"@wallet bot not found in the wallets list\");\n    }\n    const walletLink = connector.connect({\n      bridgeUrl: atWallet.bridgeUrl,\n      universalLink: atWallet.universalLink\n    }, props.additionalRequest);\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    redirectToTelegram(walletLink, {\n      returnStrategy: appState.returnStrategy,\n      twaReturnUrl: appState.twaReturnUrl,\n      forceRedirect\n    });\n  };\n  const onOpenQR = () => {\n    setShowQR(true);\n    setLastSelectedWalletInfo({\n      openMethod: \"qrcode\"\n    });\n  };\n  const onCloseQR = () => {\n    setShowQR(false);\n    setLastSelectedWalletInfo({\n      openMethod: \"universal-link\"\n    });\n  };\n  return (() => {\n    const _el$ = _tmpl$2.cloneNode(true);\n    insert(_el$, createComponent(Show, {\n      get when() {\n        return showQR();\n      },\n      get children() {\n        return [createComponent(StyledLeftActionButton, {\n          icon: \"arrow\",\n          onClick: onCloseQR\n        }), createComponent(MobileUniversalQR, {\n          get universalLink() {\n            return getUniversalLink();\n          },\n          get isCopiedShown() {\n            return isCopiedShown();\n          },\n          onOpenLink: onSelectUniversal,\n          onCopy\n        })];\n      }\n    }), null);\n    insert(_el$, createComponent(Show, {\n      get when() {\n        return !showQR();\n      },\n      get children() {\n        return [createComponent(StyledLeftActionButton, {\n          get icon() {\n            return createComponent(QRIcon, {});\n          },\n          onClick: onOpenQR\n        }), createComponent(H1Styled$2, {\n          translationKey: \"walletModal.mobileUniversalModal.connectYourWallet\",\n          children: \"Connect your TON wallet\"\n        }), createComponent(H2Styled$2, {\n          translationKey: \"walletModal.mobileUniversalModal.openWalletOnTelegramOrSelect\",\n          maxWidth: 320,\n          children: \"Use Wallet in Telegram or choose other application\"\n        }), createComponent(TelegramButtonStyled, {\n          get leftIcon() {\n            return createComponent(AtWalletIcon, {});\n          },\n          get rightIcon() {\n            return createComponent(TGImageStyled, {\n              get src() {\n                return IMG.TG;\n              }\n            });\n          },\n          onClick: onSelectTelegram,\n          scale: \"s\",\n          get children() {\n            return createComponent(Translation, {\n              translationKey: \"walletModal.mobileUniversalModal.openWalletOnTelegram\",\n              children: \"Connect Wallet in Telegram\"\n            });\n          }\n        }), createComponent(H2Styled$2, {\n          translationKey: \"walletModal.mobileUniversalModal.chooseOtherApplication\",\n          maxWidth: 342,\n          padding: \"0 24px 8px 24px\",\n          margin: \"0\",\n          children: \"Choose other application\"\n        }), createComponent(WalletUlContainer, {\n          get children() {\n            return [createComponent(For, {\n              get each() {\n                return createMemo(() => !!shouldShowMoreButton())() ? walletsList().slice(0, 3) : walletsList();\n              },\n              children: (wallet) => (() => {\n                const _el$3 = _tmpl$$1.cloneNode(true);\n                insert(_el$3, createComponent(WalletItem, {\n                  get icon() {\n                    return wallet.imageUrl;\n                  },\n                  get name() {\n                    return wallet.name;\n                  },\n                  onClick: () => props.onSelect(wallet)\n                }));\n                return _el$3;\n              })()\n            }), createComponent(Show, {\n              get when() {\n                return shouldShowMoreButton();\n              },\n              get children() {\n                const _el$2 = _tmpl$$1.cloneNode(true);\n                insert(_el$2, createComponent(FourWalletsItem, {\n                  labelLine1: \"View all\",\n                  labelLine2: \"wallets\",\n                  get images() {\n                    return walletsList().slice(3, 7).map((i2) => i2.imageUrl);\n                  },\n                  onClick: () => props.onSelectAllWallets()\n                }));\n                return _el$2;\n              }\n            })];\n          }\n        })];\n      }\n    }), null);\n    return _el$;\n  })();\n};\nconst borders = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst hoverBorders = {\n  m: \"8px\",\n  s: \"4px\",\n  none: \"0\"\n};\nconst DesktopUniversalModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-bottom: 16px;\n`;\nconst H2Styled = styled(H2)`\n    max-width: 320px;\n    margin-top: 2px;\n    margin-bottom: 20px;\n`;\nconst H2AvailableWalletsStyled = styled(H2)`\n    margin-bottom: 16px;\n`;\nconst QRCodeStyled = styled(QRCode)`\n    margin-bottom: 24px;\n`;\nconst WalletsContainerStyled = styled.ul`\n    display: flex;\n`;\nstyled.div`\n    display: flex;\n    gap: 16px;\n    width: 100%;\n`;\nstyled(Button)`\n    position: relative;\n    font-size: 16px;\n    line-height: 20px;\n    width: 100%;\n    padding: 0 16px;\n    height: 56px;\n    border-radius: ${(props) => borders[props.theme.borderRadius]};\n\n    &:hover {\n        ${(props) => props.disableEventsAnimation ? \"transform: unset;\" : \"\"}\n    }\n\n    &:active {\n        ${(props) => props.disableEventsAnimation ? \"transform: unset;\" : \"\"}\n    }\n`;\nstyled.ul`\n    position: absolute;\n    bottom: 100%;\n    left: 0;\n    margin: 0;\n    padding: 8px;\n    width: 188px;\n    transform: translateY(-16px);\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    border-radius: ${(props) => borders[props.theme.borderRadius]};\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n`;\nstyled.li`\n    padding: 8px;\n\n    display: flex;\n    align-items: center;\n    gap: 8px;\n\n    cursor: pointer;\n    border-radius: ${(props) => hoverBorders[props.theme.borderRadius]};\n\n    transition: background-color, transform 0.1s ease-in-out;\n\n    &:hover {\n        background-color: ${(props) => props.theme.colors.background.secondary};\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n`;\nstyled(Image)`\n    width: 24px;\n    height: 24px;\n\n    border-radius: 6px;\n`;\nstyled.div`\n    margin-top: 23px;\n    margin-bottom: 1px;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nstyled(Text)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    font-size: 16px;\n`;\nconst _tmpl$ = /* @__PURE__ */ template$1(`<li></li>`);\nconst DesktopUniversalModal = (props) => {\n  const [popupOpened, setPopupOpened] = createSignal(false);\n  const connector = appState.connector;\n  const walletsBridges = createMemo(() => getUniqueBridges(props.walletsList), null, {\n    equals: bridgesIsEqual\n  });\n  setLastSelectedWalletInfo({\n    openMethod: \"qrcode\"\n  });\n  const request = createMemo(() => connector.connect(walletsBridges(), props.additionalRequest));\n  return createComponent(DesktopUniversalModalStyled, {\n    onClick: () => setPopupOpened(false),\n    \"data-tc-wallets-modal-universal-desktop\": \"true\",\n    get children() {\n      return [createComponent(H1, {\n        translationKey: \"walletModal.desktopUniversalModal.connectYourWallet\",\n        children: \"Connect your wallet\"\n      }), createComponent(H2Styled, {\n        translationKey: \"walletModal.desktopUniversalModal.scan\",\n        children: \"Scan with your mobile wallet\"\n      }), createComponent(QRCodeStyled, {\n        get sourceUrl() {\n          return addReturnStrategy(request(), \"none\");\n        },\n        get disableCopy() {\n          return popupOpened();\n        },\n        get imageUrl() {\n          return IMG.TON;\n        }\n      }), createComponent(H2AvailableWalletsStyled, {\n        translationKey: \"walletModal.desktopUniversalModal.availableWallets\",\n        children: \"Available wallets\"\n      }), createComponent(WalletsContainerStyled, {\n        get children() {\n          return [createComponent(For, {\n            get each() {\n              return props.walletsList.slice(0, 3);\n            },\n            children: (wallet) => (() => {\n              const _el$ = _tmpl$.cloneNode(true);\n              insert(_el$, createComponent(WalletLabeledItem, {\n                wallet,\n                onClick: () => props.onSelect(wallet)\n              }));\n              return _el$;\n            })()\n          }), createComponent(FourWalletsItem, {\n            labelLine1: \"View all\",\n            labelLine2: \"wallets\",\n            get images() {\n              return props.walletsList.slice(3, 7).map((i2) => i2.imageUrl);\n            },\n            onClick: () => props.onSelectAllWallets()\n          })];\n        }\n      })];\n    }\n  });\n};\nconst WalletsModal = () => {\n  const {\n    locale\n  } = useI18n()[1];\n  createEffect(() => locale(appState.language));\n  createEffect(() => {\n    if (getWalletsModalIsOpened()) {\n      updateIsMobile();\n    } else {\n      setSelectedWalletInfo(null);\n      setSelectedTab(\"universal\");\n      setInfoTab(false);\n    }\n  });\n  const connector = useContext(ConnectorContext);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [fetchedWalletsList] = createResource(() => tonConnectUI.getWallets());\n  const [selectedWalletInfo, setSelectedWalletInfo] = createSignal(null);\n  const [selectedTab, setSelectedTab] = createSignal(\"universal\");\n  const [infoTab, setInfoTab] = createSignal(false);\n  const walletsList = createMemo(() => {\n    if (fetchedWalletsList.state !== \"ready\") {\n      return null;\n    }\n    let walletsList2 = applyWalletsListConfiguration(fetchedWalletsList(), appState.walletsListConfiguration);\n    const injectedWallets = walletsList2.filter(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected);\n    const notInjectedWallets = walletsList2.filter((w) => !(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(w));\n    walletsList2 = (injectedWallets || []).concat(notInjectedWallets);\n    const preferredWalletAppName = appState.preferredWalletAppName;\n    const preferredWallet = walletsList2.find((item) => eqWalletName(item, preferredWalletAppName));\n    const someWalletsWithSameName = walletsList2.filter((item) => eqWalletName(item, preferredWalletAppName)).length >= 2;\n    if (preferredWalletAppName && preferredWallet && !someWalletsWithSameName) {\n      walletsList2 = [__spreadProps(__spreadValues({}, preferredWallet), {\n        isPreferred: true\n      })].concat(walletsList2.filter((item) => !eqWalletName(item, preferredWalletAppName)));\n    }\n    const atWallet = walletsList2.find((item) => eqWalletName(item, AT_WALLET_APP_NAME));\n    if (atWallet) {\n      walletsList2 = [atWallet].concat(walletsList2.filter((item) => !eqWalletName(item, AT_WALLET_APP_NAME)));\n    }\n    return walletsList2;\n  });\n  const additionalRequestLoading = () => {\n    var _a2;\n    return ((_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.state) === \"loading\";\n  };\n  const additionalRequest = createMemo(() => {\n    var _a2;\n    if (additionalRequestLoading()) {\n      return void 0;\n    }\n    return (_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.value;\n  });\n  const onClose = (closeReason) => {\n    tonConnectUI.closeModal(closeReason);\n  };\n  const unsubscribe = connector.onStatusChange((wallet) => {\n    if (wallet) {\n      onClose(\"wallet-selected\");\n    }\n  });\n  const onSelectAllWallets = () => {\n    setSelectedTab(\"all-wallets\");\n  };\n  const onSelectUniversal = () => {\n    setSelectedTab(\"universal\");\n  };\n  const clearSelectedWalletInfo = () => {\n    setSelectedWalletInfo(null);\n  };\n  onCleanup(() => {\n    setSelectedWalletInfo(null);\n    setInfoTab(false);\n  });\n  onCleanup(unsubscribe);\n  return createComponent(StyledModal, {\n    get opened() {\n      return getWalletsModalIsOpened();\n    },\n    get enableAndroidBackHandler() {\n      return appState.enableAndroidBackHandler;\n    },\n    onClose: () => onClose(\"action-cancelled\"),\n    onClickQuestion: () => setInfoTab((v) => !v),\n    \"data-tc-wallets-modal-container\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return infoTab();\n        },\n        get children() {\n          return createComponent(InfoModal, {\n            onBackClick: () => setInfoTab(false)\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !infoTab();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return additionalRequestLoading() || !walletsList();\n            },\n            get children() {\n              return [createComponent(H1Styled$8, {\n                translationKey: \"walletModal.loading\",\n                children: \"Wallets list is loading\"\n              }), createComponent(LoaderContainerStyled, {\n                get children() {\n                  return createComponent(LoaderIcon, {\n                    size: \"m\"\n                  });\n                }\n              })];\n            }\n          }), createComponent(Show, {\n            get when() {\n              return createMemo(() => !!!additionalRequestLoading())() && walletsList();\n            },\n            get children() {\n              return createComponent(Switch, {\n                get children() {\n                  return [createComponent(Match, {\n                    get when() {\n                      return selectedWalletInfo();\n                    },\n                    get children() {\n                      return createComponent(Dynamic, {\n                        get component() {\n                          return isMobile() ? MobileConnectionModal : DesktopConnectionModal;\n                        },\n                        get wallet() {\n                          return selectedWalletInfo();\n                        },\n                        get additionalRequest() {\n                          return additionalRequest();\n                        },\n                        onBackClick: clearSelectedWalletInfo\n                      });\n                    }\n                  }), createComponent(Match, {\n                    get when() {\n                      return selectedTab() === \"universal\";\n                    },\n                    get children() {\n                      return createComponent(Dynamic, {\n                        get component() {\n                          return isMobile() ? MobileUniversalModal : DesktopUniversalModal;\n                        },\n                        onSelect: setSelectedWalletInfo,\n                        get walletsList() {\n                          return walletsList();\n                        },\n                        get additionalRequest() {\n                          return additionalRequest();\n                        },\n                        onSelectAllWallets\n                      });\n                    }\n                  }), createComponent(Match, {\n                    get when() {\n                      return selectedTab() === \"all-wallets\";\n                    },\n                    get children() {\n                      return createComponent(AllWalletsListModal, {\n                        get walletsList() {\n                          return walletsList();\n                        },\n                        onBack: onSelectUniversal,\n                        onSelect: setSelectedWalletInfo\n                      });\n                    }\n                  })];\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst ActionModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-bottom: 8px;\n`;\nconst H1Styled = styled(H1)`\n    margin-top: 16px;\n`;\nconst TextStyled = styled(Text)`\n    font-weight: 510;\n    font-size: 16px;\n    line-height: 20px;\n    text-align: center;\n    max-width: 250px;\n\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst LoaderButtonStyled = styled(Button)`\n    min-width: 112px;\n    margin-top: 32px;\n`;\nconst LoaderIconStyled = styled(LoaderIcon)`\n    height: 16px;\n    width: 16px;\n`;\nconst ButtonStyled = styled(Button)`\n    margin-top: 32px;\n`;\nconst ActionModal = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [firstClick, setFirstClick] = createSignal(true);\n  const [sent, setSent] = createSignal(false);\n  createEffect(() => {\n    const currentAction = action();\n    setSent(!!currentAction && \"sent\" in currentAction && currentAction.sent);\n  });\n  let universalLink;\n  if ((tonConnectUI == null ? void 0 : tonConnectUI.wallet) && \"universalLink\" in tonConnectUI.wallet && (tonConnectUI.wallet.openMethod === \"universal-link\" || (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(tonConnectUI.wallet.universalLink) && isInTMA())) {\n    universalLink = tonConnectUI.wallet.universalLink;\n  }\n  let deepLink;\n  if ((tonConnectUI == null ? void 0 : tonConnectUI.wallet) && \"deepLink\" in tonConnectUI.wallet && (tonConnectUI.wallet.openMethod === \"custom-deeplink\" || (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(tonConnectUI.wallet.deepLink) && isInTMA())) {\n    deepLink = tonConnectUI.wallet.deepLink;\n  }\n  const onOpenWallet = () => {\n    const currentAction = action();\n    const returnStrategy = \"returnStrategy\" in currentAction ? currentAction.returnStrategy : appState.returnStrategy;\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(universalLink)) {\n      redirectToTelegram(universalLink, {\n        returnStrategy,\n        twaReturnUrl: \"twaReturnUrl\" in currentAction ? currentAction.twaReturnUrl : appState.twaReturnUrl,\n        forceRedirect\n      });\n    } else {\n      redirectToWallet(universalLink, deepLink, {\n        returnStrategy,\n        forceRedirect\n      }, () => {\n      });\n    }\n  };\n  return createComponent(ActionModalStyled, mergeProps(dataAttrs, {\n    get children() {\n      return [createMemo(() => props.icon), createComponent(H1Styled, {\n        get translationKey() {\n          return props.headerTranslationKey;\n        },\n        get translationValues() {\n          return props.headerTranslationValues;\n        }\n      }), createComponent(TextStyled, {\n        get translationKey() {\n          return props.textTranslationKey;\n        },\n        get translationValues() {\n          return props.textTranslationValues;\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !sent() && (props.showButton === \"open-wallet\" && universalLink || props.showButton !== \"open-wallet\");\n        },\n        get children() {\n          return createComponent(LoaderButtonStyled, {\n            disabled: true,\n            \"data-tc-connect-button-loading\": \"true\",\n            get children() {\n              return createComponent(LoaderIconStyled, {});\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return sent();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return props.showButton !== \"open-wallet\";\n            },\n            get children() {\n              return createComponent(ButtonStyled, {\n                onClick: () => props.onClose(),\n                get children() {\n                  return createComponent(Translation, {\n                    translationKey: \"common.close\",\n                    children: \"Close\"\n                  });\n                }\n              });\n            }\n          }), createComponent(Show, {\n            get when() {\n              return props.showButton === \"open-wallet\" && universalLink;\n            },\n            get children() {\n              return createComponent(ButtonStyled, {\n                onClick: onOpenWallet,\n                get children() {\n                  return createComponent(Translation, {\n                    translationKey: \"common.openWallet\",\n                    children: \"Open wallet\"\n                  });\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  }));\n};\nconst ConfirmTransactionModal = (props) => {\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [t2] = useI18n();\n  const name = () => tonConnectUI.wallet && \"name\" in tonConnectUI.wallet ? tonConnectUI.wallet.name : t2(\"common.yourWallet\", {}, \"Your wallet\");\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.confirmTransaction.header\",\n    get headerTranslationValues() {\n      return {\n        name: name()\n      };\n    },\n    textTranslationKey: \"actionModal.confirmTransaction.text\",\n    get icon() {\n      return createComponent(LoaderIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    showButton: \"open-wallet\",\n    \"data-tc-confirm-modal\": \"true\"\n  });\n};\nconst TransactionCanceledModal = (props) => {\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.transactionCanceled.header\",\n    textTranslationKey: \"actionModal.transactionCanceled.text\",\n    get icon() {\n      return createComponent(ErrorIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    \"data-tc-transaction-canceled-modal\": \"true\"\n  });\n};\nconst TransactionSentModal = (props) => {\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.transactionSent.header\",\n    textTranslationKey: \"actionModal.transactionSent.text\",\n    get icon() {\n      return createComponent(SuccessIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    \"data-tc-transaction-sent-modal\": \"true\"\n  });\n};\nconst ActionsModal = () => {\n  return createComponent(Modal, {\n    get opened() {\n      var _a2;\n      return createMemo(() => action() !== null)() && ((_a2 = action()) == null ? void 0 : _a2.openModal) === true;\n    },\n    get enableAndroidBackHandler() {\n      return appState.enableAndroidBackHandler;\n    },\n    onClose: () => setAction(null),\n    \"data-tc-actions-modal-container\": \"true\",\n    get children() {\n      return createComponent(Switch, {\n        get children() {\n          return [createComponent(Match, {\n            get when() {\n              return action().name === \"transaction-sent\";\n            },\n            get children() {\n              return createComponent(TransactionSentModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          }), createComponent(Match, {\n            get when() {\n              return action().name === \"transaction-canceled\";\n            },\n            get children() {\n              return createComponent(TransactionCanceledModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          }), createComponent(Match, {\n            get when() {\n              return action().name === \"confirm-transaction\";\n            },\n            get children() {\n              return createComponent(ConfirmTransactionModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          })];\n        }\n      });\n    }\n  });\n};\nconst SingleWalletModal = () => {\n  const {\n    locale\n  } = useI18n()[1];\n  createEffect(() => locale(appState.language));\n  createEffect(() => {\n    if (getSingleWalletModalIsOpened()) {\n      updateIsMobile();\n    }\n  });\n  const connector = useContext(ConnectorContext);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [infoTab, setInfoTab] = createSignal(false);\n  const additionalRequestLoading = () => {\n    var _a2;\n    return ((_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.state) === \"loading\";\n  };\n  const additionalRequest = createMemo(() => {\n    var _a2;\n    if (additionalRequestLoading()) {\n      return void 0;\n    }\n    return (_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.value;\n  });\n  const onClose = (closeReason) => {\n    tonConnectUI.closeSingleWalletModal(closeReason);\n  };\n  const unsubscribe = connector.onStatusChange((wallet) => {\n    if (wallet) {\n      onClose(\"wallet-selected\");\n    }\n  });\n  onCleanup(unsubscribe);\n  onCleanup(() => {\n    setInfoTab(false);\n  });\n  return createComponent(StyledModal, {\n    get opened() {\n      return getSingleWalletModalIsOpened();\n    },\n    get enableAndroidBackHandler() {\n      return appState.enableAndroidBackHandler;\n    },\n    onClose: () => onClose(\"action-cancelled\"),\n    onClickQuestion: () => setInfoTab((v) => !v),\n    \"data-tc-wallets-modal-container\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return infoTab();\n        },\n        get children() {\n          return createComponent(InfoModal, {\n            onBackClick: () => setInfoTab(false)\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !infoTab();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return additionalRequestLoading();\n            },\n            get children() {\n              return [createComponent(H1Styled$8, {\n                translationKey: \"walletModal.loading\",\n                children: \"Wallets list is loading\"\n              }), createComponent(LoaderContainerStyled, {\n                get children() {\n                  return createComponent(LoaderIcon, {\n                    size: \"m\"\n                  });\n                }\n              })];\n            }\n          }), createComponent(Show, {\n            get when() {\n              return !additionalRequestLoading();\n            },\n            get children() {\n              return createComponent(Dynamic, {\n                get component() {\n                  return isMobile() ? MobileConnectionModal : DesktopConnectionModal;\n                },\n                get wallet() {\n                  return getSingleWalletModalWalletInfo();\n                },\n                get additionalRequest() {\n                  return additionalRequest();\n                },\n                onBackClick: () => {\n                },\n                backDisabled: true\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst App = (props) => {\n  const translations = createI18nContext(i18nDictionary, appState.language);\n  defineStylesRoot();\n  fixMobileSafariActiveTransition();\n  return createComponent(I18nContext.Provider, {\n    value: translations,\n    get children() {\n      return createComponent(TonConnectUiContext.Provider, {\n        get value() {\n          return props.tonConnectUI;\n        },\n        get children() {\n          return createComponent(ConnectorContext.Provider, {\n            get value() {\n              return appState.connector;\n            },\n            get children() {\n              return [createComponent(GlobalStyles, {}), createComponent(ThemeProvider, {\n                theme: themeState,\n                get children() {\n                  return [createComponent(Show, {\n                    get when() {\n                      return appState.buttonRootId;\n                    },\n                    get children() {\n                      return createComponent(Portal, {\n                        get mount() {\n                          return document.getElementById(appState.buttonRootId);\n                        },\n                        get children() {\n                          return createComponent(AccountButton, {});\n                        }\n                      });\n                    }\n                  }), createComponent(Dynamic, {\n                    component: globalStylesTag,\n                    get children() {\n                      return [createComponent(WalletsModal, {}), createComponent(SingleWalletModal, {}), createComponent(ActionsModal, {})];\n                    }\n                  })];\n                }\n              })];\n            }\n          });\n        }\n      });\n    }\n  });\n};\nconst widgetController = {\n  openWalletsModal: () => void setTimeout(() => setWalletsModalState({\n    status: \"opened\",\n    closeReason: null\n  })),\n  closeWalletsModal: (reason) => void setTimeout(() => setWalletsModalState({\n    status: \"closed\",\n    closeReason: reason\n  })),\n  openSingleWalletModal: (walletInfo) => {\n    void setTimeout(() => setSingleWalletModalState({\n      status: \"opened\",\n      closeReason: null,\n      walletInfo\n    }));\n  },\n  closeSingleWalletModal: (reason) => void setTimeout(() => setSingleWalletModalState({\n    status: \"closed\",\n    closeReason: reason\n  })),\n  setAction: (action2) => void setTimeout(() => setAction(action2)),\n  clearAction: () => void setTimeout(() => setAction(null)),\n  getSelectedWalletInfo: () => lastSelectedWalletInfo(),\n  removeSelectedWalletInfo: () => setLastSelectedWalletInfo(null),\n  renderApp: (root, tonConnectUI) => render(() => createComponent(App, {\n    tonConnectUI\n  }), document.getElementById(root))\n};\nclass WalletsModalManager {\n  constructor(options) {\n    __publicField(this, \"connector\");\n    __publicField(this, \"setConnectRequestParametersCallback\");\n    __publicField(this, \"consumers\", []);\n    __publicField(this, \"tracker\");\n    __publicField(this, \"state\", walletsModalState());\n    this.connector = options.connector;\n    this.tracker = options.tracker;\n    this.setConnectRequestParametersCallback = options.setConnectRequestParametersCallback;\n    createEffect(() => {\n      const state = walletsModalState();\n      this.state = state;\n      this.consumers.forEach((consumer) => consumer(state));\n    });\n  }\n  open() {\n    return __async(this, null, function* () {\n      this.tracker.trackConnectionStarted();\n      const walletsList = yield this.connector.getWallets();\n      const embeddedWallet = walletsList.find(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded);\n      if (embeddedWallet) {\n        return this.connectEmbeddedWallet(embeddedWallet);\n      } else {\n        return this.openWalletsModal();\n      }\n    });\n  }\n  close(reason = \"action-cancelled\") {\n    if (reason === \"action-cancelled\") {\n      this.tracker.trackConnectionError(\"Connection was cancelled\");\n    }\n    widgetController.closeWalletsModal(reason);\n  }\n  onStateChange(onChange) {\n    this.consumers.push(onChange);\n    return () => {\n      this.consumers = this.consumers.filter((consumer) => consumer !== onChange);\n    };\n  }\n  connectEmbeddedWallet(embeddedWallet) {\n    const connect = (parameters) => {\n      setLastSelectedWalletInfo(embeddedWallet);\n      this.connector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey }, parameters);\n    };\n    const additionalRequest = appState.connectRequestParameters;\n    if ((additionalRequest == null ? void 0 : additionalRequest.state) === \"loading\") {\n      this.setConnectRequestParametersCallback(connect);\n    } else {\n      connect(additionalRequest == null ? void 0 : additionalRequest.value);\n    }\n  }\n  openWalletsModal() {\n    return __async(this, null, function* () {\n      if (isInTMA()) {\n        sendExpand();\n      }\n      widgetController.openWalletsModal();\n      return new Promise((resolve) => {\n        const unsubscribe = this.onStateChange((state) => {\n          const { status } = state;\n          if (status === \"opened\") {\n            unsubscribe();\n            resolve();\n          }\n        });\n      });\n    });\n  }\n}\nclass TransactionModalManager {\n  constructor(options) {\n    __publicField(this, \"connector\");\n    __publicField(this, \"consumers\", []);\n    this.connector = options.connector;\n    createEffect(() => {\n      const currentAction = action();\n      this.consumers.forEach((consumer) => consumer(currentAction));\n    });\n  }\n  onStateChange(consumer) {\n    this.consumers.push(consumer);\n    return () => {\n      this.consumers = this.consumers.filter((c2) => c2 !== consumer);\n    };\n  }\n}\nclass SingleWalletModalManager {\n  constructor(options) {\n    __publicField(this, \"connector\");\n    __publicField(this, \"setConnectRequestParametersCallback\");\n    __publicField(this, \"consumers\", []);\n    __publicField(this, \"tracker\");\n    __publicField(this, \"state\", singleWalletModalState());\n    this.connector = options.connector;\n    this.tracker = options.tracker;\n    this.setConnectRequestParametersCallback = options.setConnectRequestParametersCallback;\n    createEffect(() => {\n      const state = singleWalletModalState();\n      this.state = state;\n      this.consumers.forEach((consumer) => consumer(state));\n    });\n  }\n  open(wallet) {\n    return __async(this, null, function* () {\n      this.tracker.trackConnectionStarted();\n      const fetchedWalletsList = yield this.connector.getWallets();\n      const walletsList = applyWalletsListConfiguration(\n        fetchedWalletsList,\n        appState.walletsListConfiguration\n      );\n      const embeddedWallet = walletsList.find(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded);\n      const isEmbeddedWalletExist = !!embeddedWallet;\n      if (isEmbeddedWalletExist) {\n        return this.connectEmbeddedWallet(embeddedWallet);\n      }\n      const externalWallets = walletsList.filter(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote);\n      const externalWallet = externalWallets.find((walletInfo) => eqWalletName(walletInfo, wallet));\n      const isExternalWalletExist = !!externalWallet;\n      if (isExternalWalletExist) {\n        return this.openSingleWalletModal(externalWallet);\n      }\n      const error = `Trying to open modal window with unknown wallet \"${wallet}\".`;\n      this.tracker.trackConnectionError(error);\n      throw new TonConnectUIError(error);\n    });\n  }\n  close(reason = \"action-cancelled\") {\n    if (reason === \"action-cancelled\") {\n      this.tracker.trackConnectionError(\"Connection was cancelled\");\n    }\n    widgetController.closeSingleWalletModal(\"action-cancelled\");\n  }\n  onStateChange(onChange) {\n    this.consumers.push(onChange);\n    return () => {\n      this.consumers = this.consumers.filter((consumer) => consumer !== onChange);\n    };\n  }\n  connectEmbeddedWallet(embeddedWallet) {\n    const connect = (parameters) => {\n      setLastSelectedWalletInfo(embeddedWallet);\n      this.connector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey }, parameters);\n    };\n    const additionalRequest = appState.connectRequestParameters;\n    if ((additionalRequest == null ? void 0 : additionalRequest.state) === \"loading\") {\n      this.setConnectRequestParametersCallback(connect);\n    } else {\n      connect(additionalRequest == null ? void 0 : additionalRequest.value);\n    }\n  }\n  openSingleWalletModal(wallet) {\n    return __async(this, null, function* () {\n      if (isInTMA()) {\n        sendExpand();\n      }\n      widgetController.openSingleWalletModal(wallet);\n      return new Promise((resolve) => {\n        const unsubscribe = this.onStateChange((state) => {\n          const { status } = state;\n          if (status === \"opened\") {\n            unsubscribe();\n            resolve();\n          }\n        });\n      });\n    });\n  }\n}\nclass TonConnectUITracker {\n  constructor(options) {\n    __publicField(this, \"eventPrefix\", \"ton-connect-ui-\");\n    __publicField(this, \"tonConnectUiVersion\");\n    __publicField(this, \"tonConnectSdkVersion\", null);\n    __publicField(this, \"eventDispatcher\");\n    var _a2;\n    this.eventDispatcher = (_a2 = options == null ? void 0 : options.eventDispatcher) != null ? _a2 : new _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.BrowserEventDispatcher();\n    this.tonConnectUiVersion = options.tonConnectUiVersion;\n    this.init().catch();\n  }\n  get version() {\n    return (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createVersionInfo)({\n      ton_connect_sdk_lib: this.tonConnectSdkVersion,\n      ton_connect_ui_lib: this.tonConnectUiVersion\n    });\n  }\n  init() {\n    return __async(this, null, function* () {\n      try {\n        yield this.setRequestVersionHandler();\n        this.tonConnectSdkVersion = yield this.requestTonConnectSdkVersion();\n      } catch (e2) {\n      }\n    });\n  }\n  setRequestVersionHandler() {\n    return __async(this, null, function* () {\n      yield this.eventDispatcher.addEventListener(\"ton-connect-ui-request-version\", () => __async(this, null, function* () {\n        yield this.eventDispatcher.dispatchEvent(\n          \"ton-connect-ui-response-version\",\n          (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createResponseVersionEvent)(this.tonConnectUiVersion)\n        );\n      }));\n    });\n  }\n  requestTonConnectSdkVersion() {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => __async(this, null, function* () {\n        try {\n          yield this.eventDispatcher.addEventListener(\n            \"ton-connect-response-version\",\n            (event) => {\n              resolve(event.detail.version);\n            },\n            { once: true }\n          );\n          yield this.eventDispatcher.dispatchEvent(\n            \"ton-connect-request-version\",\n            (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createRequestVersionEvent)()\n          );\n        } catch (e2) {\n          reject(e2);\n        }\n      }));\n    });\n  }\n  dispatchUserActionEvent(eventDetails) {\n    var _a2;\n    try {\n      (_a2 = this.eventDispatcher) == null ? void 0 : _a2.dispatchEvent(`${this.eventPrefix}${eventDetails.type}`, eventDetails).catch();\n    } catch (e2) {\n    }\n  }\n  trackConnectionStarted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionStartedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionCompleted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionCompletedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionError(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionErrorEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionRestoringStarted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringStartedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionRestoringCompleted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringCompletedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionRestoringError(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringErrorEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackDisconnection(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDisconnectionEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackTransactionSentForSignature(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSentForSignatureEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackTransactionSigned(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSignedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackTransactionSigningFailed(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSigningFailedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n}\nconst tonConnectUiVersion = \"2.0.11\";\nclass TonConnectUI {\n  constructor(options) {\n    __publicField(this, \"walletInfoStorage\", new WalletInfoStorage());\n    __publicField(this, \"preferredWalletStorage\", new PreferredWalletStorage());\n    __publicField(this, \"tracker\");\n    __publicField(this, \"walletInfo\", null);\n    __publicField(this, \"systemThemeChangeUnsubscribe\", null);\n    __publicField(this, \"actionsConfiguration\");\n    __publicField(this, \"walletsList\");\n    __publicField(this, \"connectRequestParametersCallback\");\n    __publicField(this, \"connector\");\n    __publicField(this, \"modal\");\n    __publicField(this, \"singleWalletModal\");\n    __publicField(this, \"transactionModal\");\n    __publicField(this, \"connectionRestored\", Promise.resolve(false));\n    if (options && \"connector\" in options && options.connector) {\n      this.connector = options.connector;\n    } else if (options && \"manifestUrl\" in options && options.manifestUrl) {\n      this.connector = new _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect({\n        manifestUrl: options.manifestUrl,\n        eventDispatcher: options == null ? void 0 : options.eventDispatcher\n      });\n    } else {\n      throw new TonConnectUIError(\n        \"You have to specify a `manifestUrl` or a `connector` in the options.\"\n      );\n    }\n    this.tracker = new TonConnectUITracker({\n      eventDispatcher: options == null ? void 0 : options.eventDispatcher,\n      tonConnectUiVersion\n    });\n    this.modal = new WalletsModalManager({\n      connector: this.connector,\n      tracker: this.tracker,\n      setConnectRequestParametersCallback: (callback) => {\n        this.connectRequestParametersCallback = callback;\n      }\n    });\n    this.singleWalletModal = new SingleWalletModalManager({\n      connector: this.connector,\n      tracker: this.tracker,\n      setConnectRequestParametersCallback: (callback) => {\n        this.connectRequestParametersCallback = callback;\n      }\n    });\n    this.transactionModal = new TransactionModalManager({\n      connector: this.connector\n    });\n    this.walletsList = this.getWallets();\n    this.walletsList.then((list) => preloadImages(uniq(list.map((item) => item.imageUrl))));\n    const rootId = this.normalizeWidgetRoot(options == null ? void 0 : options.widgetRootId);\n    this.subscribeToWalletChange();\n    if ((options == null ? void 0 : options.restoreConnection) !== false) {\n      this.connectionRestored = createMacrotaskAsync(() => __async(this, null, function* () {\n        this.tracker.trackConnectionRestoringStarted();\n        yield this.connector.restoreConnection();\n        if (!this.connector.connected) {\n          this.tracker.trackConnectionRestoringError(\"Connection was not restored\");\n          this.walletInfoStorage.removeWalletInfo();\n        } else {\n          this.tracker.trackConnectionRestoringCompleted(this.wallet);\n        }\n        return this.connector.connected;\n      }));\n    }\n    this.uiOptions = mergeOptions(options, { uiPreferences: { theme: \"SYSTEM\" } });\n    const preferredWalletName = this.preferredWalletStorage.getPreferredWalletAppName();\n    setAppState({\n      connector: this.connector,\n      preferredWalletAppName: preferredWalletName\n    });\n    widgetController.renderApp(rootId, this);\n  }\n  static getWallets() {\n    return _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect.getWallets();\n  }\n  get connected() {\n    return this.connector.connected;\n  }\n  get account() {\n    return this.connector.account;\n  }\n  get wallet() {\n    if (!this.connector.wallet) {\n      return null;\n    }\n    return __spreadValues(__spreadValues({}, this.connector.wallet), this.walletInfo);\n  }\n  set uiOptions(options) {\n    var _a2, _b2, _c2, _d2, _e2;\n    this.checkButtonRootExist(options.buttonRootId);\n    this.actionsConfiguration = options.actionsConfiguration;\n    if ((_a2 = options.uiPreferences) == null ? void 0 : _a2.theme) {\n      if (((_b2 = options.uiPreferences) == null ? void 0 : _b2.theme) !== \"SYSTEM\") {\n        (_c2 = this.systemThemeChangeUnsubscribe) == null ? void 0 : _c2.call(this);\n        setTheme(options.uiPreferences.theme, options.uiPreferences.colorsSet);\n      } else {\n        setTheme(getSystemTheme(), options.uiPreferences.colorsSet);\n        if (!this.systemThemeChangeUnsubscribe) {\n          this.systemThemeChangeUnsubscribe = subscribeToThemeChange(setTheme);\n        }\n      }\n    } else {\n      if ((_d2 = options.uiPreferences) == null ? void 0 : _d2.colorsSet) {\n        setColors(options.uiPreferences.colorsSet);\n      }\n    }\n    if ((_e2 = options.uiPreferences) == null ? void 0 : _e2.borderRadius) {\n      setBorderRadius(options.uiPreferences.borderRadius);\n    }\n    setAppState((state) => {\n      var _a3, _b3;\n      const merged = mergeOptions(\n        __spreadValues(__spreadValues(__spreadValues(__spreadValues({}, options.language && { language: options.language }), !!((_a3 = options.actionsConfiguration) == null ? void 0 : _a3.returnStrategy) && {\n          returnStrategy: options.actionsConfiguration.returnStrategy\n        }), !!((_b3 = options.actionsConfiguration) == null ? void 0 : _b3.twaReturnUrl) && {\n          twaReturnUrl: options.actionsConfiguration.twaReturnUrl\n        }), !!options.walletsListConfiguration && {\n          walletsListConfiguration: options.walletsListConfiguration\n        }),\n        unwrap(state)\n      );\n      if (options.buttonRootId !== void 0) {\n        merged.buttonRootId = options.buttonRootId;\n      }\n      if (options.enableAndroidBackHandler !== void 0) {\n        merged.enableAndroidBackHandler = options.enableAndroidBackHandler;\n      }\n      return merged;\n    });\n  }\n  setConnectRequestParameters(connectRequestParameters) {\n    var _a2;\n    setAppState({ connectRequestParameters });\n    if ((connectRequestParameters == null ? void 0 : connectRequestParameters.state) === \"ready\" || !connectRequestParameters) {\n      (_a2 = this.connectRequestParametersCallback) == null ? void 0 : _a2.call(this, connectRequestParameters == null ? void 0 : connectRequestParameters.value);\n    }\n  }\n  getWallets() {\n    return __async(this, null, function* () {\n      return this.connector.getWallets();\n    });\n  }\n  onStatusChange(callback, errorsHandler) {\n    return this.connector.onStatusChange((wallet) => __async(this, null, function* () {\n      if (wallet) {\n        const lastSelectedWalletInfo2 = yield this.getSelectedWalletInfo(wallet);\n        callback(__spreadValues(__spreadValues({}, wallet), lastSelectedWalletInfo2 || this.walletInfoStorage.getWalletInfo()));\n      } else {\n        callback(wallet);\n      }\n    }), errorsHandler);\n  }\n  openModal() {\n    return __async(this, null, function* () {\n      return this.modal.open();\n    });\n  }\n  closeModal(reason) {\n    this.modal.close(reason);\n  }\n  onModalStateChange(onChange) {\n    return this.modal.onStateChange(onChange);\n  }\n  get modalState() {\n    return this.modal.state;\n  }\n  openSingleWalletModal(wallet) {\n    return __async(this, null, function* () {\n      return this.singleWalletModal.open(wallet);\n    });\n  }\n  closeSingleWalletModal(closeReason) {\n    this.singleWalletModal.close(closeReason);\n  }\n  onSingleWalletModalStateChange(onChange) {\n    return this.singleWalletModal.onStateChange(onChange);\n  }\n  get singleWalletModalState() {\n    return this.singleWalletModal.state;\n  }\n  connectWallet() {\n    return __async(this, null, function* () {\n      const walletsList = yield this.getWallets();\n      const embeddedWallet = walletsList.find(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded);\n      if (embeddedWallet) {\n        return yield this.connectEmbeddedWallet(embeddedWallet);\n      } else {\n        return yield this.connectExternalWallet();\n      }\n    });\n  }\n  disconnect() {\n    this.tracker.trackDisconnection(this.wallet, \"dapp\");\n    widgetController.clearAction();\n    widgetController.removeSelectedWalletInfo();\n    this.walletInfoStorage.removeWalletInfo();\n    return this.connector.disconnect();\n  }\n  sendTransaction(tx, options) {\n    return __async(this, null, function* () {\n      this.tracker.trackTransactionSentForSignature(this.wallet, tx);\n      if (!this.connected) {\n        this.tracker.trackTransactionSigningFailed(this.wallet, tx, \"Wallet was not connected\");\n        throw new TonConnectUIError(\"Connect wallet to send a transaction.\");\n      }\n      if (isInTMA()) {\n        sendExpand();\n      }\n      const { notifications: notifications2, modals, returnStrategy, twaReturnUrl, skipRedirectToWallet } = this.getModalsAndNotificationsConfiguration(options);\n      widgetController.setAction({\n        name: \"confirm-transaction\",\n        showNotification: notifications2.includes(\"before\"),\n        openModal: modals.includes(\"before\"),\n        sent: false\n      });\n      const onRequestSent = () => {\n        if (abortController.signal.aborted) {\n          return;\n        }\n        widgetController.setAction({\n          name: \"confirm-transaction\",\n          showNotification: notifications2.includes(\"before\"),\n          openModal: modals.includes(\"before\"),\n          sent: true\n        });\n        if (this.walletInfo && \"universalLink\" in this.walletInfo && (this.walletInfo.openMethod === \"universal-link\" || this.walletInfo.openMethod === \"custom-deeplink\")) {\n          if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(this.walletInfo.universalLink)) {\n            redirectToTelegram(this.walletInfo.universalLink, {\n              returnStrategy,\n              twaReturnUrl: twaReturnUrl || appState.twaReturnUrl,\n              forceRedirect: false\n            });\n          } else {\n            redirectToWallet(\n              this.walletInfo.universalLink,\n              this.walletInfo.deepLink,\n              {\n                returnStrategy,\n                forceRedirect: false\n              },\n              () => {\n              }\n            );\n          }\n        }\n      };\n      const abortController = new AbortController();\n      const unsubscribe = this.onTransactionModalStateChange((action2) => {\n        if (action2 == null ? void 0 : action2.openModal) {\n          return;\n        }\n        unsubscribe();\n        if (!action2) {\n          abortController.abort();\n        }\n      });\n      try {\n        const result = yield this.waitForSendTransaction(\n          {\n            transaction: tx,\n            signal: abortController.signal\n          },\n          onRequestSent\n        );\n        this.tracker.trackTransactionSigned(this.wallet, tx, result);\n        widgetController.setAction({\n          name: \"transaction-sent\",\n          showNotification: notifications2.includes(\"success\"),\n          openModal: modals.includes(\"success\")\n        });\n        return result;\n      } catch (e2) {\n        widgetController.setAction({\n          name: \"transaction-canceled\",\n          showNotification: notifications2.includes(\"error\"),\n          openModal: modals.includes(\"error\")\n        });\n        if (e2 instanceof _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError) {\n          throw e2;\n        } else {\n          console.error(e2);\n          throw new TonConnectUIError(\"Unhandled error:\" + e2);\n        }\n      } finally {\n        unsubscribe();\n      }\n    });\n  }\n  connectEmbeddedWallet(embeddedWallet) {\n    return __async(this, null, function* () {\n      const connect = (parameters) => {\n        setLastSelectedWalletInfo(embeddedWallet);\n        this.connector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey }, parameters);\n      };\n      const additionalRequest = appState.connectRequestParameters;\n      if ((additionalRequest == null ? void 0 : additionalRequest.state) === \"loading\") {\n        this.connectRequestParametersCallback = connect;\n      } else {\n        connect(additionalRequest == null ? void 0 : additionalRequest.value);\n      }\n      return yield this.waitForWalletConnection({\n        ignoreErrors: false\n      });\n    });\n  }\n  connectExternalWallet() {\n    return __async(this, null, function* () {\n      const abortController = new AbortController();\n      widgetController.openWalletsModal();\n      const unsubscribe = this.onModalStateChange((state) => {\n        const { status, closeReason } = state;\n        if (status === \"opened\") {\n          return;\n        }\n        unsubscribe();\n        if (closeReason === \"action-cancelled\") {\n          abortController.abort();\n        }\n      });\n      return yield this.waitForWalletConnection({\n        ignoreErrors: true,\n        signal: abortController.signal\n      });\n    });\n  }\n  waitForWalletConnection(options) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        this.tracker.trackConnectionStarted();\n        const { ignoreErrors = false, signal = null } = options;\n        if (signal && signal.aborted) {\n          this.tracker.trackConnectionError(\"Connection was cancelled\");\n          return reject(new TonConnectUIError(\"Wallet was not connected\"));\n        }\n        const onStatusChangeHandler = (wallet) => __async(this, null, function* () {\n          if (!wallet) {\n            this.tracker.trackConnectionError(\"Connection was cancelled\");\n            if (ignoreErrors) {\n              return;\n            }\n            unsubscribe();\n            reject(new TonConnectUIError(\"Wallet was not connected\"));\n          } else {\n            this.tracker.trackConnectionCompleted(wallet);\n            unsubscribe();\n            resolve(wallet);\n          }\n        });\n        const onErrorsHandler = (reason) => {\n          this.tracker.trackConnectionError(reason.message);\n          if (ignoreErrors) {\n            return;\n          }\n          unsubscribe();\n          reject(reason);\n        };\n        const unsubscribe = this.onStatusChange(\n          (wallet) => onStatusChangeHandler(wallet),\n          (reason) => onErrorsHandler(reason)\n        );\n        if (signal) {\n          signal.addEventListener(\n            \"abort\",\n            () => {\n              unsubscribe();\n              reject(new TonConnectUIError(\"Wallet was not connected\"));\n            },\n            { once: true }\n          );\n        }\n      });\n    });\n  }\n  waitForSendTransaction(options, onRequestSent) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const { transaction, signal } = options;\n        if (signal.aborted) {\n          this.tracker.trackTransactionSigningFailed(\n            this.wallet,\n            transaction,\n            \"Transaction was cancelled\"\n          );\n          return reject(new TonConnectUIError(\"Transaction was not sent\"));\n        }\n        const onTransactionHandler = (transaction2) => __async(this, null, function* () {\n          resolve(transaction2);\n        });\n        const onErrorsHandler = (reason) => {\n          reject(reason);\n        };\n        const onCanceledHandler = () => {\n          this.tracker.trackTransactionSigningFailed(\n            this.wallet,\n            transaction,\n            \"Transaction was cancelled\"\n          );\n          reject(new TonConnectUIError(\"Transaction was not sent\"));\n        };\n        signal.addEventListener(\"abort\", onCanceledHandler, { once: true });\n        this.connector.sendTransaction(transaction, { onRequestSent, signal }).then((result) => {\n          signal.removeEventListener(\"abort\", onCanceledHandler);\n          return onTransactionHandler(result);\n        }).catch((reason) => {\n          signal.removeEventListener(\"abort\", onCanceledHandler);\n          return onErrorsHandler(reason);\n        });\n      });\n    });\n  }\n  onTransactionModalStateChange(onChange) {\n    return this.transactionModal.onStateChange(onChange);\n  }\n  subscribeToWalletChange() {\n    this.connector.onStatusChange((wallet) => __async(this, null, function* () {\n      var _a2;\n      if (wallet) {\n        yield this.updateWalletInfo(wallet);\n        this.setPreferredWalletAppName(((_a2 = this.walletInfo) == null ? void 0 : _a2.appName) || wallet.device.appName);\n      } else {\n        this.walletInfoStorage.removeWalletInfo();\n      }\n    }));\n  }\n  setPreferredWalletAppName(value) {\n    this.preferredWalletStorage.setPreferredWalletAppName(value);\n    setAppState({ preferredWalletAppName: value });\n  }\n  getSelectedWalletInfo(wallet) {\n    return __async(this, null, function* () {\n      let lastSelectedWalletInfo2 = widgetController.getSelectedWalletInfo();\n      if (!lastSelectedWalletInfo2) {\n        return null;\n      }\n      let fullLastSelectedWalletInfo;\n      if (!(\"name\" in lastSelectedWalletInfo2)) {\n        const walletsList = applyWalletsListConfiguration(\n          yield this.walletsList,\n          appState.walletsListConfiguration\n        );\n        const walletInfo = walletsList.find((item) => eqWalletName(item, wallet.device.appName));\n        if (!walletInfo) {\n          throw new TonConnectUIError(\n            `Cannot find WalletInfo for the '${wallet.device.appName}' wallet`\n          );\n        }\n        fullLastSelectedWalletInfo = __spreadValues(__spreadValues({}, walletInfo), lastSelectedWalletInfo2);\n      } else {\n        fullLastSelectedWalletInfo = lastSelectedWalletInfo2;\n      }\n      return fullLastSelectedWalletInfo;\n    });\n  }\n  updateWalletInfo(wallet) {\n    return __async(this, null, function* () {\n      const selectedWalletInfo = yield this.getSelectedWalletInfo(wallet);\n      if (selectedWalletInfo) {\n        this.walletInfo = selectedWalletInfo;\n        this.walletInfoStorage.setWalletInfo(selectedWalletInfo);\n        return;\n      }\n      const storedWalletInfo = this.walletInfoStorage.getWalletInfo();\n      if (storedWalletInfo) {\n        this.walletInfo = storedWalletInfo;\n        return;\n      }\n      this.walletInfo = (yield this.walletsList).find(\n        (walletInfo) => eqWalletName(walletInfo, wallet.device.appName)\n      ) || null;\n    });\n  }\n  normalizeWidgetRoot(rootId) {\n    if (!rootId || !document.getElementById(rootId)) {\n      rootId = \"tc-widget-root\";\n      const rootElement = document.createElement(\"div\");\n      rootElement.id = rootId;\n      document.body.appendChild(rootElement);\n    }\n    return rootId;\n  }\n  checkButtonRootExist(buttonRootId) {\n    if (buttonRootId == null) {\n      return;\n    }\n    if (!document.getElementById(buttonRootId)) {\n      throw new TonConnectUIError(`${buttonRootId} element not found in the document.`);\n    }\n  }\n  getModalsAndNotificationsConfiguration(options) {\n    var _a2, _b2, _c2, _d2, _e2, _f2;\n    const allActions = [\n      \"before\",\n      \"success\",\n      \"error\"\n    ];\n    let notifications2 = allActions;\n    if (((_a2 = this.actionsConfiguration) == null ? void 0 : _a2.notifications) && ((_b2 = this.actionsConfiguration) == null ? void 0 : _b2.notifications) !== \"all\") {\n      notifications2 = this.actionsConfiguration.notifications;\n    }\n    if (options == null ? void 0 : options.notifications) {\n      if (options.notifications === \"all\") {\n        notifications2 = allActions;\n      } else {\n        notifications2 = options.notifications;\n      }\n    }\n    let modals = [\"before\"];\n    if ((_c2 = this.actionsConfiguration) == null ? void 0 : _c2.modals) {\n      if (this.actionsConfiguration.modals === \"all\") {\n        modals = allActions;\n      } else {\n        modals = this.actionsConfiguration.modals;\n      }\n    }\n    if (options == null ? void 0 : options.modals) {\n      if (options.modals === \"all\") {\n        modals = allActions;\n      } else {\n        modals = options.modals;\n      }\n    }\n    const returnStrategy = (options == null ? void 0 : options.returnStrategy) || ((_d2 = this.actionsConfiguration) == null ? void 0 : _d2.returnStrategy) || \"back\";\n    const twaReturnUrl = (options == null ? void 0 : options.twaReturnUrl) || ((_e2 = this.actionsConfiguration) == null ? void 0 : _e2.twaReturnUrl);\n    let skipRedirectToWallet = (options == null ? void 0 : options.skipRedirectToWallet) || ((_f2 = this.actionsConfiguration) == null ? void 0 : _f2.skipRedirectToWallet) || \"ios\";\n    if (isInTMA()) {\n      skipRedirectToWallet = \"never\";\n    }\n    return {\n      notifications: notifications2,\n      modals,\n      returnStrategy,\n      twaReturnUrl,\n      skipRedirectToWallet\n    };\n  }\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRvbmNvbm5lY3QrdWlAMi4wLjExX2VuY29kaW5nQDAuMS4xMy9ub2RlX21vZHVsZXMvQHRvbmNvbm5lY3QvdWkvbGliL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNncEI7QUFDaG5CO0FBQ0k7QUFDRjtBQUNOO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLFlBQVksd0JBQXdCLEVBQUUsNkJBQTZCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixrQkFBa0I7QUFDekM7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw0QkFBNEI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLEtBQUs7QUFDbkIsWUFBWSxFQUFDO0FBQ2I7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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QSxxQkFBcUIsbUJBQW1CO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFNBQVM7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsS0FBSztBQUNyQixnQkFBZ0IsS0FBSztBQUNyQixNQUFNO0FBQ04sZ0JBQWdCLEtBQUs7QUFDckIsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLHlDQUF5QztBQUN6QywyQ0FBMkM7QUFDM0M7QUFDQSxzQ0FBc0MsVUFBVTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsVUFBVTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFO0FBQ2hFLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELGNBQWM7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLFFBQVE7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLElBQUk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsWUFBWTtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyx1REFBdUQ7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5Q0FBUTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7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QUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzQ0FBUztBQUNsQjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsZ0JBQWdCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQkFBcUIsZ0JBQWdCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxHQUFHLEtBQUssR0FBRztBQUMvQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsaURBQWlEO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBOztBQUVBOztBQUVBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSx3QkFBd0I7QUFDeEIscUJBQXFCOztBQUVyQixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIsVUFBVTtBQUNWO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRTtBQUNqRTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EsZUFBZTtBQUNmLHVEQUF1RCx1Q0FBRTtBQUN6RCxpREFBaUQ7QUFDakQsb0RBQW9EOztBQUVwRCxrQ0FBa0M7QUFDbEMscURBQXFEO0FBQ3JELDBDQUEwQywrQkFBK0I7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUJBQXFCOztBQUVyQix3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHFCQUFxQjtBQUNyQix3QkFBd0I7O0FBRXhCLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjOztBQUVkOztBQUVBO0FBQ0EscUJBQXFCO0FBQ3JCOztBQUVBO0FBQ0EsVUFBVSx1Q0FBdUMsbUNBQW1DO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QixxQkFBcUI7QUFDckIsZUFBZSxvQkFBb0I7QUFDbkMsY0FBYztBQUNkOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNO0FBQ047QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBOztBQUVBLE1BQU07QUFDTjtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLGNBQWM7QUFDZCxrQkFBa0I7O0FBRWxCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsY0FBYztBQUNkLHFCQUFxQjtBQUNyQix3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixtQkFBbUI7QUFDL0M7QUFDQSw4QkFBOEIsbUJBQW1CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixRQUFRO0FBQ2pDO0FBQ0E7QUFDQSw0QkFBNEIsU0FBUztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFFBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isc0JBQXNCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsaUJBQWlCO0FBQzFDLDBCQUEwQixnQkFBZ0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixRQUFRO0FBQ3JDLGdDQUFnQyxTQUFTO0FBQ3pDO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFNBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFNBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsU0FBUztBQUNsQztBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFNBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsU0FBUztBQUNsRDtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsUUFBUTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFCQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHVCQUF1QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix1QkFBdUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixzQkFBc0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsaUJBQWlCO0FBQzFDLDBCQUEwQixxQkFBcUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGlCQUFpQjtBQUMxQywwQkFBMEIscUJBQXFCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsc0JBQXNCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixzQkFBc0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBO0FBQ0EsNkJBQTZCLHVCQUF1QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsc0JBQXNCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxtQkFBbUI7QUFDMUQsOENBQThDO0FBQzlDLGtDQUFrQyx5QkFBeUI7QUFDM0Q7QUFDQTtBQUNBLHdCQUF3Qiw0QkFBNEI7QUFDcEQ7QUFDQSwyQkFBMkIsNkJBQTZCO0FBQ3hEO0FBQ0EsMkNBQTJDLG1CQUFtQjtBQUM5RCxrREFBa0Q7QUFDbEQsc0NBQXNDLFlBQVk7QUFDbEQsa0RBQWtEO0FBQ2xELG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFlBQVk7QUFDdEQ7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQSx1QkFBdUIsNkJBQTZCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixVQUFVO0FBQzlCO0FBQ0E7QUFDQSxzQkFBc0IsVUFBVTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixVQUFVO0FBQzlCO0FBQ0E7QUFDQSxzQkFBc0IsVUFBVTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsY0FBYztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGNBQWM7QUFDeEMsNEJBQTRCLGNBQWM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixnQkFBZ0I7QUFDekM7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsYUFBYTtBQUN0QztBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsV0FBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGFBQWE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixvQkFBb0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixvQkFBb0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixhQUFhO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFlBQVk7QUFDbEMsd0JBQXdCLFdBQVc7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsbUJBQW1CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGlCQUFpQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxNQUFNO0FBQ3RELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRDtBQUN0RDtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLE9BQU87QUFDN0Msa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25ELEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQixpQkFBaUI7QUFDakIsbUJBQW1COztBQUVuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxRQUFRO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxRQUFRO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGFBQWE7O0FBRWI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxhQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpQkFBaUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVDQUFFO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVDQUFFO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSx1QkFBdUIsdUNBQUU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQix3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Es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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFD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UjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7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QU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRSx3QkFBd0IsNEJBQTRCO0FBQzFIO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsMEJBQTBCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQ7QUFDakQsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsMEVBQTZCO0FBQzNFO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDRGQUE0RjtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLGNBQWMsOERBQWE7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FB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c2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vQHRvbmNvbm5lY3QrdWlAMi4wLjExX2VuY29kaW5nQDAuMS4xMy9ub2RlX21vZHVsZXMvQHRvbmNvbm5lY3QvdWkvbGliL2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmUHJvcHMgPSBPYmplY3QuZGVmaW5lUHJvcGVydGllcztcbnZhciBfX2dldE93blByb3BEZXNjcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzO1xudmFyIF9fZ2V0T3duUHJvcFN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19wcm9wSXNFbnVtID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3NwcmVhZFZhbHVlcyA9IChhMiwgYikgPT4ge1xuICBmb3IgKHZhciBwcm9wIGluIGIgfHwgKGIgPSB7fSkpXG4gICAgaWYgKF9faGFzT3duUHJvcC5jYWxsKGIsIHByb3ApKVxuICAgICAgX19kZWZOb3JtYWxQcm9wKGEyLCBwcm9wLCBiW3Byb3BdKTtcbiAgaWYgKF9fZ2V0T3duUHJvcFN5bWJvbHMpXG4gICAgZm9yICh2YXIgcHJvcCBvZiBfX2dldE93blByb3BTeW1ib2xzKGIpKSB7XG4gICAgICBpZiAoX19wcm9wSXNFbnVtLmNhbGwoYiwgcHJvcCkpXG4gICAgICAgIF9fZGVmTm9ybWFsUHJvcChhMiwgcHJvcCwgYltwcm9wXSk7XG4gICAgfVxuICByZXR1cm4gYTI7XG59O1xudmFyIF9fc3ByZWFkUHJvcHMgPSAoYTIsIGIpID0+IF9fZGVmUHJvcHMoYTIsIF9fZ2V0T3duUHJvcERlc2NzKGIpKTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ge1xuICBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuICByZXR1cm4gdmFsdWU7XG59O1xudmFyIF9fYXN5bmMgPSAoX190aGlzLCBfX2FyZ3VtZW50cywgZ2VuZXJhdG9yKSA9PiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgdmFyIGZ1bGZpbGxlZCA9ICh2YWx1ZSkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpO1xuICAgICAgfSBjYXRjaCAoZTIpIHtcbiAgICAgICAgcmVqZWN0KGUyKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciByZWplY3RlZCA9ICh2YWx1ZSkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc3RlcChnZW5lcmF0b3IudGhyb3codmFsdWUpKTtcbiAgICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgICAgIHJlamVjdChlMik7XG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgc3RlcCA9ICh4KSA9PiB4LmRvbmUgPyByZXNvbHZlKHgudmFsdWUpIDogUHJvbWlzZS5yZXNvbHZlKHgudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7XG4gICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KF9fdGhpcywgX19hcmd1bWVudHMpKS5uZXh0KCkpO1xuICB9KTtcbn07XG52YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oO1xuaW1wb3J0IHsgVG9uQ29ubmVjdEVycm9yLCBpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZCwgdG9Vc2VyRnJpZW5kbHlBZGRyZXNzLCBDSEFJTiwgVG9uQ29ubmVjdCwgaXNUZWxlZ3JhbVVybCwgZW5jb2RlVGVsZWdyYW1VcmxQYXJhbWV0ZXJzLCBpc1dhbGxldEluZm9SZW1vdGUsIGlzV2FsbGV0SW5mb0N1cnJlbnRseUVtYmVkZGVkLCBjcmVhdGVWZXJzaW9uSW5mbywgQnJvd3NlckV2ZW50RGlzcGF0Y2hlciwgY3JlYXRlUmVzcG9uc2VWZXJzaW9uRXZlbnQsIGNyZWF0ZVJlcXVlc3RWZXJzaW9uRXZlbnQsIGNyZWF0ZUNvbm5lY3Rpb25TdGFydGVkRXZlbnQsIGNyZWF0ZUNvbm5lY3Rpb25Db21wbGV0ZWRFdmVudCwgY3JlYXRlQ29ubmVjdGlvbkVycm9yRXZlbnQsIGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdTdGFydGVkRXZlbnQsIGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdDb21wbGV0ZWRFdmVudCwgY3JlYXRlQ29ubmVjdGlvblJlc3RvcmluZ0Vycm9yRXZlbnQsIGNyZWF0ZURpc2Nvbm5lY3Rpb25FdmVudCwgY3JlYXRlVHJhbnNhY3Rpb25TZW50Rm9yU2lnbmF0dXJlRXZlbnQsIGNyZWF0ZVRyYW5zYWN0aW9uU2lnbmVkRXZlbnQsIGNyZWF0ZVRyYW5zYWN0aW9uU2lnbmluZ0ZhaWxlZEV2ZW50IH0gZnJvbSBcIkB0b25jb25uZWN0L3Nka1wiO1xuZXhwb3J0ICogZnJvbSBcIkB0b25jb25uZWN0L3Nka1wiO1xuaW1wb3J0IFVBUGFyc2VyIGZyb20gXCJ1YS1wYXJzZXItanNcIjtcbmltcG9ydCBkZWVwbWVyZ2UgZnJvbSBcImRlZXBtZXJnZVwiO1xuaW1wb3J0IGNuIGZyb20gXCJjbGFzc25hbWVzXCI7XG5jb25zdCBzaGFyZWRDb25maWcgPSB7fTtcbmZ1bmN0aW9uIHNldEh5ZHJhdGVDb250ZXh0KGNvbnRleHQpIHtcbiAgc2hhcmVkQ29uZmlnLmNvbnRleHQgPSBjb250ZXh0O1xufVxuY29uc3QgZXF1YWxGbiA9IChhMiwgYikgPT4gYTIgPT09IGI7XG5jb25zdCAkUFJPWFkgPSBTeW1ib2woXCJzb2xpZC1wcm94eVwiKTtcbmNvbnN0ICRUUkFDSyA9IFN5bWJvbChcInNvbGlkLXRyYWNrXCIpO1xuY29uc3Qgc2lnbmFsT3B0aW9ucyA9IHtcbiAgZXF1YWxzOiBlcXVhbEZuXG59O1xubGV0IHJ1bkVmZmVjdHMgPSBydW5RdWV1ZTtcbmNvbnN0IFNUQUxFID0gMTtcbmNvbnN0IFBFTkRJTkcgPSAyO1xuY29uc3QgVU5PV05FRCA9IHtcbiAgb3duZWQ6IG51bGwsXG4gIGNsZWFudXBzOiBudWxsLFxuICBjb250ZXh0OiBudWxsLFxuICBvd25lcjogbnVsbFxufTtcbmNvbnN0IE5PX0lOSVQgPSB7fTtcbnZhciBPd25lciA9IG51bGw7XG5sZXQgVHJhbnNpdGlvbiQxID0gbnVsbDtcbmxldCBMaXN0ZW5lciA9IG51bGw7XG5sZXQgVXBkYXRlcyA9IG51bGw7XG5sZXQgRWZmZWN0cyA9IG51bGw7XG5sZXQgRXhlY0NvdW50ID0gMDtcbmZ1bmN0aW9uIGNyZWF0ZVJvb3QoZm4sIGRldGFjaGVkT3duZXIpIHtcbiAgY29uc3QgbGlzdGVuZXIgPSBMaXN0ZW5lciwgb3duZXIgPSBPd25lciwgdW5vd25lZCA9IGZuLmxlbmd0aCA9PT0gMCwgcm9vdCA9IHVub3duZWQgPyBVTk9XTkVEIDoge1xuICAgIG93bmVkOiBudWxsLFxuICAgIGNsZWFudXBzOiBudWxsLFxuICAgIGNvbnRleHQ6IG51bGwsXG4gICAgb3duZXI6IGRldGFjaGVkT3duZXIgPT09IHZvaWQgMCA/IG93bmVyIDogZGV0YWNoZWRPd25lclxuICB9LCB1cGRhdGVGbiA9IHVub3duZWQgPyBmbiA6ICgpID0+IGZuKCgpID0+IHVudHJhY2soKCkgPT4gY2xlYW5Ob2RlKHJvb3QpKSk7XG4gIE93bmVyID0gcm9vdDtcbiAgTGlzdGVuZXIgPSBudWxsO1xuICB0cnkge1xuICAgIHJldHVybiBydW5VcGRhdGVzKHVwZGF0ZUZuLCB0cnVlKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBMaXN0ZW5lciA9IGxpc3RlbmVyO1xuICAgIE93bmVyID0gb3duZXI7XG4gIH1cbn1cbmZ1bmN0aW9uIGNyZWF0ZVNpZ25hbCh2YWx1ZSwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyA/IE9iamVjdC5hc3NpZ24oe30sIHNpZ25hbE9wdGlvbnMsIG9wdGlvbnMpIDogc2lnbmFsT3B0aW9ucztcbiAgY29uc3QgczIgPSB7XG4gICAgdmFsdWUsXG4gICAgb2JzZXJ2ZXJzOiBudWxsLFxuICAgIG9ic2VydmVyU2xvdHM6IG51bGwsXG4gICAgY29tcGFyYXRvcjogb3B0aW9ucy5lcXVhbHMgfHwgdm9pZCAwXG4gIH07XG4gIGNvbnN0IHNldHRlciA9ICh2YWx1ZTIpID0+IHtcbiAgICBpZiAodHlwZW9mIHZhbHVlMiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICB2YWx1ZTIgPSB2YWx1ZTIoczIudmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gd3JpdGVTaWduYWwoczIsIHZhbHVlMik7XG4gIH07XG4gIHJldHVybiBbcmVhZFNpZ25hbC5iaW5kKHMyKSwgc2V0dGVyXTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkKGZuLCB2YWx1ZSwgb3B0aW9ucykge1xuICBjb25zdCBjMiA9IGNyZWF0ZUNvbXB1dGF0aW9uKGZuLCB2YWx1ZSwgdHJ1ZSwgU1RBTEUpO1xuICB1cGRhdGVDb21wdXRhdGlvbihjMik7XG59XG5mdW5jdGlvbiBjcmVhdGVSZW5kZXJFZmZlY3QoZm4sIHZhbHVlLCBvcHRpb25zKSB7XG4gIGNvbnN0IGMyID0gY3JlYXRlQ29tcHV0YXRpb24oZm4sIHZhbHVlLCBmYWxzZSwgU1RBTEUpO1xuICB1cGRhdGVDb21wdXRhdGlvbihjMik7XG59XG5mdW5jdGlvbiBjcmVhdGVFZmZlY3QoZm4sIHZhbHVlLCBvcHRpb25zKSB7XG4gIHJ1bkVmZmVjdHMgPSBydW5Vc2VyRWZmZWN0cztcbiAgY29uc3QgYzIgPSBjcmVhdGVDb21wdXRhdGlvbihmbiwgdmFsdWUsIGZhbHNlLCBTVEFMRSk7XG4gIGMyLnVzZXIgPSB0cnVlO1xuICBFZmZlY3RzID8gRWZmZWN0cy5wdXNoKGMyKSA6IHVwZGF0ZUNvbXB1dGF0aW9uKGMyKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZU1lbW8oZm4sIHZhbHVlLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zID8gT2JqZWN0LmFzc2lnbih7fSwgc2lnbmFsT3B0aW9ucywgb3B0aW9ucykgOiBzaWduYWxPcHRpb25zO1xuICBjb25zdCBjMiA9IGNyZWF0ZUNvbXB1dGF0aW9uKGZuLCB2YWx1ZSwgdHJ1ZSwgMCk7XG4gIGMyLm9ic2VydmVycyA9IG51bGw7XG4gIGMyLm9ic2VydmVyU2xvdHMgPSBudWxsO1xuICBjMi5jb21wYXJhdG9yID0gb3B0aW9ucy5lcXVhbHMgfHwgdm9pZCAwO1xuICB1cGRhdGVDb21wdXRhdGlvbihjMik7XG4gIHJldHVybiByZWFkU2lnbmFsLmJpbmQoYzIpO1xufVxuZnVuY3Rpb24gY3JlYXRlUmVzb3VyY2UocFNvdXJjZSwgcEZldGNoZXIsIHBPcHRpb25zKSB7XG4gIGxldCBzb3VyY2U7XG4gIGxldCBmZXRjaGVyO1xuICBsZXQgb3B0aW9ucztcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIgJiYgdHlwZW9mIHBGZXRjaGVyID09PSBcIm9iamVjdFwiIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICBzb3VyY2UgPSB0cnVlO1xuICAgIGZldGNoZXIgPSBwU291cmNlO1xuICAgIG9wdGlvbnMgPSBwRmV0Y2hlciB8fCB7fTtcbiAgfSBlbHNlIHtcbiAgICBzb3VyY2UgPSBwU291cmNlO1xuICAgIGZldGNoZXIgPSBwRmV0Y2hlcjtcbiAgICBvcHRpb25zID0gcE9wdGlvbnMgfHwge307XG4gIH1cbiAgbGV0IHByID0gbnVsbCwgaW5pdFAgPSBOT19JTklULCBpZCA9IG51bGwsIHNjaGVkdWxlZCA9IGZhbHNlLCByZXNvbHZlZCA9IFwiaW5pdGlhbFZhbHVlXCIgaW4gb3B0aW9ucywgZHluYW1pYyA9IHR5cGVvZiBzb3VyY2UgPT09IFwiZnVuY3Rpb25cIiAmJiBjcmVhdGVNZW1vKHNvdXJjZSk7XG4gIGNvbnN0IGNvbnRleHRzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKSwgW3ZhbHVlLCBzZXRWYWx1ZV0gPSAob3B0aW9ucy5zdG9yYWdlIHx8IGNyZWF0ZVNpZ25hbCkob3B0aW9ucy5pbml0aWFsVmFsdWUpLCBbZXJyb3IsIHNldEVycm9yXSA9IGNyZWF0ZVNpZ25hbCh2b2lkIDApLCBbdHJhY2ssIHRyaWdnZXJdID0gY3JlYXRlU2lnbmFsKHZvaWQgMCwge1xuICAgIGVxdWFsczogZmFsc2VcbiAgfSksIFtzdGF0ZSwgc2V0U3RhdGVdID0gY3JlYXRlU2lnbmFsKHJlc29sdmVkID8gXCJyZWFkeVwiIDogXCJ1bnJlc29sdmVkXCIpO1xuICBpZiAoc2hhcmVkQ29uZmlnLmNvbnRleHQpIHtcbiAgICBpZCA9IGAke3NoYXJlZENvbmZpZy5jb250ZXh0LmlkfSR7c2hhcmVkQ29uZmlnLmNvbnRleHQuY291bnQrK31gO1xuICAgIGxldCB2O1xuICAgIGlmIChvcHRpb25zLnNzckxvYWRGcm9tID09PSBcImluaXRpYWxcIilcbiAgICAgIGluaXRQID0gb3B0aW9ucy5pbml0aWFsVmFsdWU7XG4gICAgZWxzZSBpZiAoc2hhcmVkQ29uZmlnLmxvYWQgJiYgKHYgPSBzaGFyZWRDb25maWcubG9hZChpZCkpKVxuICAgICAgaW5pdFAgPSB2WzBdO1xuICB9XG4gIGZ1bmN0aW9uIGxvYWRFbmQocDIsIHYsIGVycm9yMiwga2V5KSB7XG4gICAgaWYgKHByID09PSBwMikge1xuICAgICAgcHIgPSBudWxsO1xuICAgICAgcmVzb2x2ZWQgPSB0cnVlO1xuICAgICAgaWYgKChwMiA9PT0gaW5pdFAgfHwgdiA9PT0gaW5pdFApICYmIG9wdGlvbnMub25IeWRyYXRlZClcbiAgICAgICAgcXVldWVNaWNyb3Rhc2soKCkgPT4gb3B0aW9ucy5vbkh5ZHJhdGVkKGtleSwge1xuICAgICAgICAgIHZhbHVlOiB2XG4gICAgICAgIH0pKTtcbiAgICAgIGluaXRQID0gTk9fSU5JVDtcbiAgICAgIGNvbXBsZXRlTG9hZCh2LCBlcnJvcjIpO1xuICAgIH1cbiAgICByZXR1cm4gdjtcbiAgfVxuICBmdW5jdGlvbiBjb21wbGV0ZUxvYWQodiwgZXJyKSB7XG4gICAgcnVuVXBkYXRlcygoKSA9PiB7XG4gICAgICBpZiAoZXJyID09PSB2b2lkIDApXG4gICAgICAgIHNldFZhbHVlKCgpID0+IHYpO1xuICAgICAgc2V0U3RhdGUoZXJyICE9PSB2b2lkIDAgPyBcImVycm9yZWRcIiA6IFwicmVhZHlcIik7XG4gICAgICBzZXRFcnJvcihlcnIpO1xuICAgICAgZm9yIChjb25zdCBjMiBvZiBjb250ZXh0cy5rZXlzKCkpXG4gICAgICAgIGMyLmRlY3JlbWVudCgpO1xuICAgICAgY29udGV4dHMuY2xlYXIoKTtcbiAgICB9LCBmYWxzZSk7XG4gIH1cbiAgZnVuY3Rpb24gcmVhZCgpIHtcbiAgICBjb25zdCBjMiA9IFN1c3BlbnNlQ29udGV4dCwgdiA9IHZhbHVlKCksIGVyciA9IGVycm9yKCk7XG4gICAgaWYgKGVyciAhPT0gdm9pZCAwICYmICFwcilcbiAgICAgIHRocm93IGVycjtcbiAgICBpZiAoTGlzdGVuZXIgJiYgIUxpc3RlbmVyLnVzZXIgJiYgYzIpIHtcbiAgICAgIGNyZWF0ZUNvbXB1dGVkKCgpID0+IHtcbiAgICAgICAgdHJhY2soKTtcbiAgICAgICAgaWYgKHByKSB7XG4gICAgICAgICAgaWYgKGMyLnJlc29sdmVkKVxuICAgICAgICAgICAgO1xuICAgICAgICAgIGVsc2UgaWYgKCFjb250ZXh0cy5oYXMoYzIpKSB7XG4gICAgICAgICAgICBjMi5pbmNyZW1lbnQoKTtcbiAgICAgICAgICAgIGNvbnRleHRzLmFkZChjMik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHY7XG4gIH1cbiAgZnVuY3Rpb24gbG9hZChyZWZldGNoaW5nID0gdHJ1ZSkge1xuICAgIGlmIChyZWZldGNoaW5nICE9PSBmYWxzZSAmJiBzY2hlZHVsZWQpXG4gICAgICByZXR1cm47XG4gICAgc2NoZWR1bGVkID0gZmFsc2U7XG4gICAgY29uc3QgbG9va3VwMiA9IGR5bmFtaWMgPyBkeW5hbWljKCkgOiBzb3VyY2U7XG4gICAgaWYgKGxvb2t1cDIgPT0gbnVsbCB8fCBsb29rdXAyID09PSBmYWxzZSkge1xuICAgICAgbG9hZEVuZChwciwgdW50cmFjayh2YWx1ZSkpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBwMiA9IGluaXRQICE9PSBOT19JTklUID8gaW5pdFAgOiB1bnRyYWNrKCgpID0+IGZldGNoZXIobG9va3VwMiwge1xuICAgICAgdmFsdWU6IHZhbHVlKCksXG4gICAgICByZWZldGNoaW5nXG4gICAgfSkpO1xuICAgIGlmICh0eXBlb2YgcDIgIT09IFwib2JqZWN0XCIgfHwgIShwMiAmJiBcInRoZW5cIiBpbiBwMikpIHtcbiAgICAgIGxvYWRFbmQocHIsIHAyLCB2b2lkIDAsIGxvb2t1cDIpO1xuICAgICAgcmV0dXJuIHAyO1xuICAgIH1cbiAgICBwciA9IHAyO1xuICAgIHNjaGVkdWxlZCA9IHRydWU7XG4gICAgcXVldWVNaWNyb3Rhc2soKCkgPT4gc2NoZWR1bGVkID0gZmFsc2UpO1xuICAgIHJ1blVwZGF0ZXMoKCkgPT4ge1xuICAgICAgc2V0U3RhdGUocmVzb2x2ZWQgPyBcInJlZnJlc2hpbmdcIiA6IFwicGVuZGluZ1wiKTtcbiAgICAgIHRyaWdnZXIoKTtcbiAgICB9LCBmYWxzZSk7XG4gICAgcmV0dXJuIHAyLnRoZW4oKHYpID0+IGxvYWRFbmQocDIsIHYsIHZvaWQgMCwgbG9va3VwMiksIChlMikgPT4gbG9hZEVuZChwMiwgdm9pZCAwLCBjYXN0RXJyb3IoZTIpLCBsb29rdXAyKSk7XG4gIH1cbiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMocmVhZCwge1xuICAgIHN0YXRlOiB7XG4gICAgICBnZXQ6ICgpID0+IHN0YXRlKClcbiAgICB9LFxuICAgIGVycm9yOiB7XG4gICAgICBnZXQ6ICgpID0+IGVycm9yKClcbiAgICB9LFxuICAgIGxvYWRpbmc6IHtcbiAgICAgIGdldCgpIHtcbiAgICAgICAgY29uc3QgczIgPSBzdGF0ZSgpO1xuICAgICAgICByZXR1cm4gczIgPT09IFwicGVuZGluZ1wiIHx8IHMyID09PSBcInJlZnJlc2hpbmdcIjtcbiAgICAgIH1cbiAgICB9LFxuICAgIGxhdGVzdDoge1xuICAgICAgZ2V0KCkge1xuICAgICAgICBpZiAoIXJlc29sdmVkKVxuICAgICAgICAgIHJldHVybiByZWFkKCk7XG4gICAgICAgIGNvbnN0IGVyciA9IGVycm9yKCk7XG4gICAgICAgIGlmIChlcnIgJiYgIXByKVxuICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgcmV0dXJuIHZhbHVlKCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgaWYgKGR5bmFtaWMpXG4gICAgY3JlYXRlQ29tcHV0ZWQoKCkgPT4gbG9hZChmYWxzZSkpO1xuICBlbHNlXG4gICAgbG9hZChmYWxzZSk7XG4gIHJldHVybiBbcmVhZCwge1xuICAgIHJlZmV0Y2g6IGxvYWQsXG4gICAgbXV0YXRlOiBzZXRWYWx1ZVxuICB9XTtcbn1cbmZ1bmN0aW9uIGJhdGNoKGZuKSB7XG4gIHJldHVybiBydW5VcGRhdGVzKGZuLCBmYWxzZSk7XG59XG5mdW5jdGlvbiB1bnRyYWNrKGZuKSB7XG4gIGlmIChMaXN0ZW5lciA9PT0gbnVsbClcbiAgICByZXR1cm4gZm4oKTtcbiAgY29uc3QgbGlzdGVuZXIgPSBMaXN0ZW5lcjtcbiAgTGlzdGVuZXIgPSBudWxsO1xuICB0cnkge1xuICAgIHJldHVybiBmbigpO1xuICB9IGZpbmFsbHkge1xuICAgIExpc3RlbmVyID0gbGlzdGVuZXI7XG4gIH1cbn1cbmZ1bmN0aW9uIG9uKGRlcHMsIGZuLCBvcHRpb25zKSB7XG4gIGNvbnN0IGlzQXJyYXkgPSBBcnJheS5pc0FycmF5KGRlcHMpO1xuICBsZXQgcHJldklucHV0O1xuICBsZXQgZGVmZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVmZXI7XG4gIHJldHVybiAocHJldlZhbHVlKSA9PiB7XG4gICAgbGV0IGlucHV0O1xuICAgIGlmIChpc0FycmF5KSB7XG4gICAgICBpbnB1dCA9IEFycmF5KGRlcHMubGVuZ3RoKTtcbiAgICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBkZXBzLmxlbmd0aDsgaTIrKylcbiAgICAgICAgaW5wdXRbaTJdID0gZGVwc1tpMl0oKTtcbiAgICB9IGVsc2VcbiAgICAgIGlucHV0ID0gZGVwcygpO1xuICAgIGlmIChkZWZlcikge1xuICAgICAgZGVmZXIgPSBmYWxzZTtcbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IHVudHJhY2soKCkgPT4gZm4oaW5wdXQsIHByZXZJbnB1dCwgcHJldlZhbHVlKSk7XG4gICAgcHJldklucHV0ID0gaW5wdXQ7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbn1cbmZ1bmN0aW9uIG9uTW91bnQoZm4pIHtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHVudHJhY2soZm4pKTtcbn1cbmZ1bmN0aW9uIG9uQ2xlYW51cChmbikge1xuICBpZiAoT3duZXIgPT09IG51bGwpXG4gICAgO1xuICBlbHNlIGlmIChPd25lci5jbGVhbnVwcyA9PT0gbnVsbClcbiAgICBPd25lci5jbGVhbnVwcyA9IFtmbl07XG4gIGVsc2VcbiAgICBPd25lci5jbGVhbnVwcy5wdXNoKGZuKTtcbiAgcmV0dXJuIGZuO1xufVxuZnVuY3Rpb24gZ2V0TGlzdGVuZXIoKSB7XG4gIHJldHVybiBMaXN0ZW5lcjtcbn1cbmZ1bmN0aW9uIGdldE93bmVyKCkge1xuICByZXR1cm4gT3duZXI7XG59XG5mdW5jdGlvbiBjcmVhdGVDb250ZXh0KGRlZmF1bHRWYWx1ZSwgb3B0aW9ucykge1xuICBjb25zdCBpZCA9IFN5bWJvbChcImNvbnRleHRcIik7XG4gIHJldHVybiB7XG4gICAgaWQsXG4gICAgUHJvdmlkZXI6IGNyZWF0ZVByb3ZpZGVyKGlkKSxcbiAgICBkZWZhdWx0VmFsdWVcbiAgfTtcbn1cbmZ1bmN0aW9uIHVzZUNvbnRleHQoY29udGV4dCkge1xuICBsZXQgY3R4O1xuICByZXR1cm4gKGN0eCA9IGxvb2t1cChPd25lciwgY29udGV4dC5pZCkpICE9PSB2b2lkIDAgPyBjdHggOiBjb250ZXh0LmRlZmF1bHRWYWx1ZTtcbn1cbmZ1bmN0aW9uIGNoaWxkcmVuKGZuKSB7XG4gIGNvbnN0IGNoaWxkcmVuMiA9IGNyZWF0ZU1lbW8oZm4pO1xuICBjb25zdCBtZW1vID0gY3JlYXRlTWVtbygoKSA9PiByZXNvbHZlQ2hpbGRyZW4oY2hpbGRyZW4yKCkpKTtcbiAgbWVtby50b0FycmF5ID0gKCkgPT4ge1xuICAgIGNvbnN0IGMyID0gbWVtbygpO1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGMyKSA/IGMyIDogYzIgIT0gbnVsbCA/IFtjMl0gOiBbXTtcbiAgfTtcbiAgcmV0dXJuIG1lbW87XG59XG5sZXQgU3VzcGVuc2VDb250ZXh0O1xuZnVuY3Rpb24gcmVhZFNpZ25hbCgpIHtcbiAgY29uc3QgcnVubmluZ1RyYW5zaXRpb24gPSBUcmFuc2l0aW9uJDE7XG4gIGlmICh0aGlzLnNvdXJjZXMgJiYgKHRoaXMuc3RhdGUgfHwgcnVubmluZ1RyYW5zaXRpb24pKSB7XG4gICAgaWYgKHRoaXMuc3RhdGUgPT09IFNUQUxFIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKVxuICAgICAgdXBkYXRlQ29tcHV0YXRpb24odGhpcyk7XG4gICAgZWxzZSB7XG4gICAgICBjb25zdCB1cGRhdGVzID0gVXBkYXRlcztcbiAgICAgIFVwZGF0ZXMgPSBudWxsO1xuICAgICAgcnVuVXBkYXRlcygoKSA9PiBsb29rVXBzdHJlYW0odGhpcyksIGZhbHNlKTtcbiAgICAgIFVwZGF0ZXMgPSB1cGRhdGVzO1xuICAgIH1cbiAgfVxuICBpZiAoTGlzdGVuZXIpIHtcbiAgICBjb25zdCBzU2xvdCA9IHRoaXMub2JzZXJ2ZXJzID8gdGhpcy5vYnNlcnZlcnMubGVuZ3RoIDogMDtcbiAgICBpZiAoIUxpc3RlbmVyLnNvdXJjZXMpIHtcbiAgICAgIExpc3RlbmVyLnNvdXJjZXMgPSBbdGhpc107XG4gICAgICBMaXN0ZW5lci5zb3VyY2VTbG90cyA9IFtzU2xvdF07XG4gICAgfSBlbHNlIHtcbiAgICAgIExpc3RlbmVyLnNvdXJjZXMucHVzaCh0aGlzKTtcbiAgICAgIExpc3RlbmVyLnNvdXJjZVNsb3RzLnB1c2goc1Nsb3QpO1xuICAgIH1cbiAgICBpZiAoIXRoaXMub2JzZXJ2ZXJzKSB7XG4gICAgICB0aGlzLm9ic2VydmVycyA9IFtMaXN0ZW5lcl07XG4gICAgICB0aGlzLm9ic2VydmVyU2xvdHMgPSBbTGlzdGVuZXIuc291cmNlcy5sZW5ndGggLSAxXTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5vYnNlcnZlcnMucHVzaChMaXN0ZW5lcik7XG4gICAgICB0aGlzLm9ic2VydmVyU2xvdHMucHVzaChMaXN0ZW5lci5zb3VyY2VzLmxlbmd0aCAtIDEpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcy52YWx1ZTtcbn1cbmZ1bmN0aW9uIHdyaXRlU2lnbmFsKG5vZGUsIHZhbHVlLCBpc0NvbXApIHtcbiAgbGV0IGN1cnJlbnQgPSBub2RlLnZhbHVlO1xuICBpZiAoIW5vZGUuY29tcGFyYXRvciB8fCAhbm9kZS5jb21wYXJhdG9yKGN1cnJlbnQsIHZhbHVlKSkge1xuICAgIG5vZGUudmFsdWUgPSB2YWx1ZTtcbiAgICBpZiAobm9kZS5vYnNlcnZlcnMgJiYgbm9kZS5vYnNlcnZlcnMubGVuZ3RoKSB7XG4gICAgICBydW5VcGRhdGVzKCgpID0+IHtcbiAgICAgICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IG5vZGUub2JzZXJ2ZXJzLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIGNvbnN0IG8yID0gbm9kZS5vYnNlcnZlcnNbaTJdO1xuICAgICAgICAgIGNvbnN0IFRyYW5zaXRpb25SdW5uaW5nID0gVHJhbnNpdGlvbiQxICYmIFRyYW5zaXRpb24kMS5ydW5uaW5nO1xuICAgICAgICAgIGlmIChUcmFuc2l0aW9uUnVubmluZyAmJiBUcmFuc2l0aW9uJDEuZGlzcG9zZWQuaGFzKG8yKSlcbiAgICAgICAgICAgIDtcbiAgICAgICAgICBpZiAoVHJhbnNpdGlvblJ1bm5pbmcgJiYgIW8yLnRTdGF0ZSB8fCAhVHJhbnNpdGlvblJ1bm5pbmcgJiYgIW8yLnN0YXRlKSB7XG4gICAgICAgICAgICBpZiAobzIucHVyZSlcbiAgICAgICAgICAgICAgVXBkYXRlcy5wdXNoKG8yKTtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgRWZmZWN0cy5wdXNoKG8yKTtcbiAgICAgICAgICAgIGlmIChvMi5vYnNlcnZlcnMpXG4gICAgICAgICAgICAgIG1hcmtEb3duc3RyZWFtKG8yKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKFRyYW5zaXRpb25SdW5uaW5nKVxuICAgICAgICAgICAgO1xuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIG8yLnN0YXRlID0gU1RBTEU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKFVwZGF0ZXMubGVuZ3RoID4gMWU2KSB7XG4gICAgICAgICAgVXBkYXRlcyA9IFtdO1xuICAgICAgICAgIGlmIChmYWxzZSlcbiAgICAgICAgICAgIDtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgfSwgZmFsc2UpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdmFsdWU7XG59XG5mdW5jdGlvbiB1cGRhdGVDb21wdXRhdGlvbihub2RlKSB7XG4gIGlmICghbm9kZS5mbilcbiAgICByZXR1cm47XG4gIGNsZWFuTm9kZShub2RlKTtcbiAgY29uc3Qgb3duZXIgPSBPd25lciwgbGlzdGVuZXIgPSBMaXN0ZW5lciwgdGltZSA9IEV4ZWNDb3VudDtcbiAgTGlzdGVuZXIgPSBPd25lciA9IG5vZGU7XG4gIHJ1bkNvbXB1dGF0aW9uKG5vZGUsIG5vZGUudmFsdWUsIHRpbWUpO1xuICBMaXN0ZW5lciA9IGxpc3RlbmVyO1xuICBPd25lciA9IG93bmVyO1xufVxuZnVuY3Rpb24gcnVuQ29tcHV0YXRpb24obm9kZSwgdmFsdWUsIHRpbWUpIHtcbiAgbGV0IG5leHRWYWx1ZTtcbiAgdHJ5IHtcbiAgICBuZXh0VmFsdWUgPSBub2RlLmZuKHZhbHVlKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaWYgKG5vZGUucHVyZSkge1xuICAgICAge1xuICAgICAgICBub2RlLnN0YXRlID0gU1RBTEU7XG4gICAgICAgIG5vZGUub3duZWQgJiYgbm9kZS5vd25lZC5mb3JFYWNoKGNsZWFuTm9kZSk7XG4gICAgICAgIG5vZGUub3duZWQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBoYW5kbGVFcnJvcihlcnIpO1xuICB9XG4gIGlmICghbm9kZS51cGRhdGVkQXQgfHwgbm9kZS51cGRhdGVkQXQgPD0gdGltZSkge1xuICAgIGlmIChub2RlLnVwZGF0ZWRBdCAhPSBudWxsICYmIFwib2JzZXJ2ZXJzXCIgaW4gbm9kZSkge1xuICAgICAgd3JpdGVTaWduYWwobm9kZSwgbmV4dFZhbHVlKTtcbiAgICB9IGVsc2VcbiAgICAgIG5vZGUudmFsdWUgPSBuZXh0VmFsdWU7XG4gICAgbm9kZS51cGRhdGVkQXQgPSB0aW1lO1xuICB9XG59XG5mdW5jdGlvbiBjcmVhdGVDb21wdXRhdGlvbihmbiwgaW5pdCwgcHVyZSwgc3RhdGUgPSBTVEFMRSwgb3B0aW9ucykge1xuICBjb25zdCBjMiA9IHtcbiAgICBmbixcbiAgICBzdGF0ZSxcbiAgICB1cGRhdGVkQXQ6IG51bGwsXG4gICAgb3duZWQ6IG51bGwsXG4gICAgc291cmNlczogbnVsbCxcbiAgICBzb3VyY2VTbG90czogbnVsbCxcbiAgICBjbGVhbnVwczogbnVsbCxcbiAgICB2YWx1ZTogaW5pdCxcbiAgICBvd25lcjogT3duZXIsXG4gICAgY29udGV4dDogbnVsbCxcbiAgICBwdXJlXG4gIH07XG4gIGlmIChPd25lciA9PT0gbnVsbClcbiAgICA7XG4gIGVsc2UgaWYgKE93bmVyICE9PSBVTk9XTkVEKSB7XG4gICAge1xuICAgICAgaWYgKCFPd25lci5vd25lZClcbiAgICAgICAgT3duZXIub3duZWQgPSBbYzJdO1xuICAgICAgZWxzZVxuICAgICAgICBPd25lci5vd25lZC5wdXNoKGMyKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGMyO1xufVxuZnVuY3Rpb24gcnVuVG9wKG5vZGUpIHtcbiAgY29uc3QgcnVubmluZ1RyYW5zaXRpb24gPSBUcmFuc2l0aW9uJDE7XG4gIGlmIChub2RlLnN0YXRlID09PSAwIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKVxuICAgIHJldHVybjtcbiAgaWYgKG5vZGUuc3RhdGUgPT09IFBFTkRJTkcgfHwgcnVubmluZ1RyYW5zaXRpb24pXG4gICAgcmV0dXJuIGxvb2tVcHN0cmVhbShub2RlKTtcbiAgaWYgKG5vZGUuc3VzcGVuc2UgJiYgdW50cmFjayhub2RlLnN1c3BlbnNlLmluRmFsbGJhY2spKVxuICAgIHJldHVybiBub2RlLnN1c3BlbnNlLmVmZmVjdHMucHVzaChub2RlKTtcbiAgY29uc3QgYW5jZXN0b3JzID0gW25vZGVdO1xuICB3aGlsZSAoKG5vZGUgPSBub2RlLm93bmVyKSAmJiAoIW5vZGUudXBkYXRlZEF0IHx8IG5vZGUudXBkYXRlZEF0IDwgRXhlY0NvdW50KSkge1xuICAgIGlmIChub2RlLnN0YXRlIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKVxuICAgICAgYW5jZXN0b3JzLnB1c2gobm9kZSk7XG4gIH1cbiAgZm9yIChsZXQgaTIgPSBhbmNlc3RvcnMubGVuZ3RoIC0gMTsgaTIgPj0gMDsgaTItLSkge1xuICAgIG5vZGUgPSBhbmNlc3RvcnNbaTJdO1xuICAgIGlmIChub2RlLnN0YXRlID09PSBTVEFMRSB8fCBydW5uaW5nVHJhbnNpdGlvbikge1xuICAgICAgdXBkYXRlQ29tcHV0YXRpb24obm9kZSk7XG4gICAgfSBlbHNlIGlmIChub2RlLnN0YXRlID09PSBQRU5ESU5HIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKSB7XG4gICAgICBjb25zdCB1cGRhdGVzID0gVXBkYXRlcztcbiAgICAgIFVwZGF0ZXMgPSBudWxsO1xuICAgICAgcnVuVXBkYXRlcygoKSA9PiBsb29rVXBzdHJlYW0obm9kZSwgYW5jZXN0b3JzWzBdKSwgZmFsc2UpO1xuICAgICAgVXBkYXRlcyA9IHVwZGF0ZXM7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBydW5VcGRhdGVzKGZuLCBpbml0KSB7XG4gIGlmIChVcGRhdGVzKVxuICAgIHJldHVybiBmbigpO1xuICBsZXQgd2FpdCA9IGZhbHNlO1xuICBpZiAoIWluaXQpXG4gICAgVXBkYXRlcyA9IFtdO1xuICBpZiAoRWZmZWN0cylcbiAgICB3YWl0ID0gdHJ1ZTtcbiAgZWxzZVxuICAgIEVmZmVjdHMgPSBbXTtcbiAgRXhlY0NvdW50Kys7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzID0gZm4oKTtcbiAgICBjb21wbGV0ZVVwZGF0ZXMod2FpdCk7XG4gICAgcmV0dXJuIHJlcztcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaWYgKCF3YWl0KVxuICAgICAgRWZmZWN0cyA9IG51bGw7XG4gICAgVXBkYXRlcyA9IG51bGw7XG4gICAgaGFuZGxlRXJyb3IoZXJyKTtcbiAgfVxufVxuZnVuY3Rpb24gY29tcGxldGVVcGRhdGVzKHdhaXQpIHtcbiAgaWYgKFVwZGF0ZXMpIHtcbiAgICBydW5RdWV1ZShVcGRhdGVzKTtcbiAgICBVcGRhdGVzID0gbnVsbDtcbiAgfVxuICBpZiAod2FpdClcbiAgICByZXR1cm47XG4gIGNvbnN0IGUyID0gRWZmZWN0cztcbiAgRWZmZWN0cyA9IG51bGw7XG4gIGlmIChlMi5sZW5ndGgpXG4gICAgcnVuVXBkYXRlcygoKSA9PiBydW5FZmZlY3RzKGUyKSwgZmFsc2UpO1xufVxuZnVuY3Rpb24gcnVuUXVldWUocXVldWUpIHtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHF1ZXVlLmxlbmd0aDsgaTIrKylcbiAgICBydW5Ub3AocXVldWVbaTJdKTtcbn1cbmZ1bmN0aW9uIHJ1blVzZXJFZmZlY3RzKHF1ZXVlKSB7XG4gIGxldCBpMiwgdXNlckxlbmd0aCA9IDA7XG4gIGZvciAoaTIgPSAwOyBpMiA8IHF1ZXVlLmxlbmd0aDsgaTIrKykge1xuICAgIGNvbnN0IGUyID0gcXVldWVbaTJdO1xuICAgIGlmICghZTIudXNlcilcbiAgICAgIHJ1blRvcChlMik7XG4gICAgZWxzZVxuICAgICAgcXVldWVbdXNlckxlbmd0aCsrXSA9IGUyO1xuICB9XG4gIGlmIChzaGFyZWRDb25maWcuY29udGV4dClcbiAgICBzZXRIeWRyYXRlQ29udGV4dCgpO1xuICBmb3IgKGkyID0gMDsgaTIgPCB1c2VyTGVuZ3RoOyBpMisrKVxuICAgIHJ1blRvcChxdWV1ZVtpMl0pO1xufVxuZnVuY3Rpb24gbG9va1Vwc3RyZWFtKG5vZGUsIGlnbm9yZSkge1xuICBjb25zdCBydW5uaW5nVHJhbnNpdGlvbiA9IFRyYW5zaXRpb24kMTtcbiAgbm9kZS5zdGF0ZSA9IDA7XG4gIGZvciAobGV0IGkyID0gMDsgaTIgPCBub2RlLnNvdXJjZXMubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgY29uc3Qgc291cmNlID0gbm9kZS5zb3VyY2VzW2kyXTtcbiAgICBpZiAoc291cmNlLnNvdXJjZXMpIHtcbiAgICAgIGlmIChzb3VyY2Uuc3RhdGUgPT09IFNUQUxFIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKSB7XG4gICAgICAgIGlmIChzb3VyY2UgIT09IGlnbm9yZSlcbiAgICAgICAgICBydW5Ub3Aoc291cmNlKTtcbiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnN0YXRlID09PSBQRU5ESU5HIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKVxuICAgICAgICBsb29rVXBzdHJlYW0oc291cmNlLCBpZ25vcmUpO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gbWFya0Rvd25zdHJlYW0obm9kZSkge1xuICBjb25zdCBydW5uaW5nVHJhbnNpdGlvbiA9IFRyYW5zaXRpb24kMTtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IG5vZGUub2JzZXJ2ZXJzLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgIGNvbnN0IG8yID0gbm9kZS5vYnNlcnZlcnNbaTJdO1xuICAgIGlmICghbzIuc3RhdGUgfHwgcnVubmluZ1RyYW5zaXRpb24pIHtcbiAgICAgIG8yLnN0YXRlID0gUEVORElORztcbiAgICAgIGlmIChvMi5wdXJlKVxuICAgICAgICBVcGRhdGVzLnB1c2gobzIpO1xuICAgICAgZWxzZVxuICAgICAgICBFZmZlY3RzLnB1c2gobzIpO1xuICAgICAgbzIub2JzZXJ2ZXJzICYmIG1hcmtEb3duc3RyZWFtKG8yKTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIGNsZWFuTm9kZShub2RlKSB7XG4gIGxldCBpMjtcbiAgaWYgKG5vZGUuc291cmNlcykge1xuICAgIHdoaWxlIChub2RlLnNvdXJjZXMubGVuZ3RoKSB7XG4gICAgICBjb25zdCBzb3VyY2UgPSBub2RlLnNvdXJjZXMucG9wKCksIGluZGV4ID0gbm9kZS5zb3VyY2VTbG90cy5wb3AoKSwgb2JzID0gc291cmNlLm9ic2VydmVycztcbiAgICAgIGlmIChvYnMgJiYgb2JzLmxlbmd0aCkge1xuICAgICAgICBjb25zdCBuMiA9IG9icy5wb3AoKSwgczIgPSBzb3VyY2Uub2JzZXJ2ZXJTbG90cy5wb3AoKTtcbiAgICAgICAgaWYgKGluZGV4IDwgb2JzLmxlbmd0aCkge1xuICAgICAgICAgIG4yLnNvdXJjZVNsb3RzW3MyXSA9IGluZGV4O1xuICAgICAgICAgIG9ic1tpbmRleF0gPSBuMjtcbiAgICAgICAgICBzb3VyY2Uub2JzZXJ2ZXJTbG90c1tpbmRleF0gPSBzMjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBpZiAobm9kZS5vd25lZCkge1xuICAgIGZvciAoaTIgPSAwOyBpMiA8IG5vZGUub3duZWQubGVuZ3RoOyBpMisrKVxuICAgICAgY2xlYW5Ob2RlKG5vZGUub3duZWRbaTJdKTtcbiAgICBub2RlLm93bmVkID0gbnVsbDtcbiAgfVxuICBpZiAobm9kZS5jbGVhbnVwcykge1xuICAgIGZvciAoaTIgPSAwOyBpMiA8IG5vZGUuY2xlYW51cHMubGVuZ3RoOyBpMisrKVxuICAgICAgbm9kZS5jbGVhbnVwc1tpMl0oKTtcbiAgICBub2RlLmNsZWFudXBzID0gbnVsbDtcbiAgfVxuICBub2RlLnN0YXRlID0gMDtcbiAgbm9kZS5jb250ZXh0ID0gbnVsbDtcbn1cbmZ1bmN0aW9uIGNhc3RFcnJvcihlcnIpIHtcbiAgaWYgKGVyciBpbnN0YW5jZW9mIEVycm9yIHx8IHR5cGVvZiBlcnIgPT09IFwic3RyaW5nXCIpXG4gICAgcmV0dXJuIGVycjtcbiAgcmV0dXJuIG5ldyBFcnJvcihcIlVua25vd24gZXJyb3JcIik7XG59XG5mdW5jdGlvbiBoYW5kbGVFcnJvcihlcnIpIHtcbiAgZXJyID0gY2FzdEVycm9yKGVycik7XG4gIHRocm93IGVycjtcbn1cbmZ1bmN0aW9uIGxvb2t1cChvd25lciwga2V5KSB7XG4gIHJldHVybiBvd25lciA/IG93bmVyLmNvbnRleHQgJiYgb3duZXIuY29udGV4dFtrZXldICE9PSB2b2lkIDAgPyBvd25lci5jb250ZXh0W2tleV0gOiBsb29rdXAob3duZXIub3duZXIsIGtleSkgOiB2b2lkIDA7XG59XG5mdW5jdGlvbiByZXNvbHZlQ2hpbGRyZW4oY2hpbGRyZW4yKSB7XG4gIGlmICh0eXBlb2YgY2hpbGRyZW4yID09PSBcImZ1bmN0aW9uXCIgJiYgIWNoaWxkcmVuMi5sZW5ndGgpXG4gICAgcmV0dXJuIHJlc29sdmVDaGlsZHJlbihjaGlsZHJlbjIoKSk7XG4gIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuMikpIHtcbiAgICBjb25zdCByZXN1bHRzID0gW107XG4gICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGNoaWxkcmVuMi5sZW5ndGg7IGkyKyspIHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHJlc29sdmVDaGlsZHJlbihjaGlsZHJlbjJbaTJdKTtcbiAgICAgIEFycmF5LmlzQXJyYXkocmVzdWx0KSA/IHJlc3VsdHMucHVzaC5hcHBseShyZXN1bHRzLCByZXN1bHQpIDogcmVzdWx0cy5wdXNoKHJlc3VsdCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRzO1xuICB9XG4gIHJldHVybiBjaGlsZHJlbjI7XG59XG5mdW5jdGlvbiBjcmVhdGVQcm92aWRlcihpZCwgb3B0aW9ucykge1xuICByZXR1cm4gZnVuY3Rpb24gcHJvdmlkZXIocHJvcHMpIHtcbiAgICBsZXQgcmVzO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiByZXMgPSB1bnRyYWNrKCgpID0+IHtcbiAgICAgIE93bmVyLmNvbnRleHQgPSB7XG4gICAgICAgIFtpZF06IHByb3BzLnZhbHVlXG4gICAgICB9O1xuICAgICAgcmV0dXJuIGNoaWxkcmVuKCgpID0+IHByb3BzLmNoaWxkcmVuKTtcbiAgICB9KSwgdm9pZCAwKTtcbiAgICByZXR1cm4gcmVzO1xuICB9O1xufVxuY29uc3QgRkFMTEJBQ0sgPSBTeW1ib2woXCJmYWxsYmFja1wiKTtcbmZ1bmN0aW9uIGRpc3Bvc2UoZCkge1xuICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgZC5sZW5ndGg7IGkyKyspXG4gICAgZFtpMl0oKTtcbn1cbmZ1bmN0aW9uIG1hcEFycmF5KGxpc3QsIG1hcEZuLCBvcHRpb25zID0ge30pIHtcbiAgbGV0IGl0ZW1zID0gW10sIG1hcHBlZCA9IFtdLCBkaXNwb3NlcnMgPSBbXSwgbGVuID0gMCwgaW5kZXhlcyA9IG1hcEZuLmxlbmd0aCA+IDEgPyBbXSA6IG51bGw7XG4gIG9uQ2xlYW51cCgoKSA9PiBkaXNwb3NlKGRpc3Bvc2VycykpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGxldCBuZXdJdGVtcyA9IGxpc3QoKSB8fCBbXSwgaTIsIGo7XG4gICAgbmV3SXRlbXNbJFRSQUNLXTtcbiAgICByZXR1cm4gdW50cmFjaygoKSA9PiB7XG4gICAgICBsZXQgbmV3TGVuID0gbmV3SXRlbXMubGVuZ3RoLCBuZXdJbmRpY2VzLCBuZXdJbmRpY2VzTmV4dCwgdGVtcCwgdGVtcGRpc3Bvc2VycywgdGVtcEluZGV4ZXMsIHN0YXJ0LCBlbmQsIG5ld0VuZCwgaXRlbTtcbiAgICAgIGlmIChuZXdMZW4gPT09IDApIHtcbiAgICAgICAgaWYgKGxlbiAhPT0gMCkge1xuICAgICAgICAgIGRpc3Bvc2UoZGlzcG9zZXJzKTtcbiAgICAgICAgICBkaXNwb3NlcnMgPSBbXTtcbiAgICAgICAgICBpdGVtcyA9IFtdO1xuICAgICAgICAgIG1hcHBlZCA9IFtdO1xuICAgICAgICAgIGxlbiA9IDA7XG4gICAgICAgICAgaW5kZXhlcyAmJiAoaW5kZXhlcyA9IFtdKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9ucy5mYWxsYmFjaykge1xuICAgICAgICAgIGl0ZW1zID0gW0ZBTExCQUNLXTtcbiAgICAgICAgICBtYXBwZWRbMF0gPSBjcmVhdGVSb290KChkaXNwb3NlcikgPT4ge1xuICAgICAgICAgICAgZGlzcG9zZXJzWzBdID0gZGlzcG9zZXI7XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucy5mYWxsYmFjaygpO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGxlbiA9IDE7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAobGVuID09PSAwKSB7XG4gICAgICAgIG1hcHBlZCA9IG5ldyBBcnJheShuZXdMZW4pO1xuICAgICAgICBmb3IgKGogPSAwOyBqIDwgbmV3TGVuOyBqKyspIHtcbiAgICAgICAgICBpdGVtc1tqXSA9IG5ld0l0ZW1zW2pdO1xuICAgICAgICAgIG1hcHBlZFtqXSA9IGNyZWF0ZVJvb3QobWFwcGVyKTtcbiAgICAgICAgfVxuICAgICAgICBsZW4gPSBuZXdMZW47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0ZW1wID0gbmV3IEFycmF5KG5ld0xlbik7XG4gICAgICAgIHRlbXBkaXNwb3NlcnMgPSBuZXcgQXJyYXkobmV3TGVuKTtcbiAgICAgICAgaW5kZXhlcyAmJiAodGVtcEluZGV4ZXMgPSBuZXcgQXJyYXkobmV3TGVuKSk7XG4gICAgICAgIGZvciAoc3RhcnQgPSAwLCBlbmQgPSBNYXRoLm1pbihsZW4sIG5ld0xlbik7IHN0YXJ0IDwgZW5kICYmIGl0ZW1zW3N0YXJ0XSA9PT0gbmV3SXRlbXNbc3RhcnRdOyBzdGFydCsrKVxuICAgICAgICAgIDtcbiAgICAgICAgZm9yIChlbmQgPSBsZW4gLSAxLCBuZXdFbmQgPSBuZXdMZW4gLSAxOyBlbmQgPj0gc3RhcnQgJiYgbmV3RW5kID49IHN0YXJ0ICYmIGl0ZW1zW2VuZF0gPT09IG5ld0l0ZW1zW25ld0VuZF07IGVuZC0tLCBuZXdFbmQtLSkge1xuICAgICAgICAgIHRlbXBbbmV3RW5kXSA9IG1hcHBlZFtlbmRdO1xuICAgICAgICAgIHRlbXBkaXNwb3NlcnNbbmV3RW5kXSA9IGRpc3Bvc2Vyc1tlbmRdO1xuICAgICAgICAgIGluZGV4ZXMgJiYgKHRlbXBJbmRleGVzW25ld0VuZF0gPSBpbmRleGVzW2VuZF0pO1xuICAgICAgICB9XG4gICAgICAgIG5ld0luZGljZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICAgICAgICBuZXdJbmRpY2VzTmV4dCA9IG5ldyBBcnJheShuZXdFbmQgKyAxKTtcbiAgICAgICAgZm9yIChqID0gbmV3RW5kOyBqID49IHN0YXJ0OyBqLS0pIHtcbiAgICAgICAgICBpdGVtID0gbmV3SXRlbXNbal07XG4gICAgICAgICAgaTIgPSBuZXdJbmRpY2VzLmdldChpdGVtKTtcbiAgICAgICAgICBuZXdJbmRpY2VzTmV4dFtqXSA9IGkyID09PSB2b2lkIDAgPyAtMSA6IGkyO1xuICAgICAgICAgIG5ld0luZGljZXMuc2V0KGl0ZW0sIGopO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoaTIgPSBzdGFydDsgaTIgPD0gZW5kOyBpMisrKSB7XG4gICAgICAgICAgaXRlbSA9IGl0ZW1zW2kyXTtcbiAgICAgICAgICBqID0gbmV3SW5kaWNlcy5nZXQoaXRlbSk7XG4gICAgICAgICAgaWYgKGogIT09IHZvaWQgMCAmJiBqICE9PSAtMSkge1xuICAgICAgICAgICAgdGVtcFtqXSA9IG1hcHBlZFtpMl07XG4gICAgICAgICAgICB0ZW1wZGlzcG9zZXJzW2pdID0gZGlzcG9zZXJzW2kyXTtcbiAgICAgICAgICAgIGluZGV4ZXMgJiYgKHRlbXBJbmRleGVzW2pdID0gaW5kZXhlc1tpMl0pO1xuICAgICAgICAgICAgaiA9IG5ld0luZGljZXNOZXh0W2pdO1xuICAgICAgICAgICAgbmV3SW5kaWNlcy5zZXQoaXRlbSwgaik7XG4gICAgICAgICAgfSBlbHNlXG4gICAgICAgICAgICBkaXNwb3NlcnNbaTJdKCk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChqID0gc3RhcnQ7IGogPCBuZXdMZW47IGorKykge1xuICAgICAgICAgIGlmIChqIGluIHRlbXApIHtcbiAgICAgICAgICAgIG1hcHBlZFtqXSA9IHRlbXBbal07XG4gICAgICAgICAgICBkaXNwb3NlcnNbal0gPSB0ZW1wZGlzcG9zZXJzW2pdO1xuICAgICAgICAgICAgaWYgKGluZGV4ZXMpIHtcbiAgICAgICAgICAgICAgaW5kZXhlc1tqXSA9IHRlbXBJbmRleGVzW2pdO1xuICAgICAgICAgICAgICBpbmRleGVzW2pdKGopO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZVxuICAgICAgICAgICAgbWFwcGVkW2pdID0gY3JlYXRlUm9vdChtYXBwZXIpO1xuICAgICAgICB9XG4gICAgICAgIG1hcHBlZCA9IG1hcHBlZC5zbGljZSgwLCBsZW4gPSBuZXdMZW4pO1xuICAgICAgICBpdGVtcyA9IG5ld0l0ZW1zLnNsaWNlKDApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1hcHBlZDtcbiAgICB9KTtcbiAgICBmdW5jdGlvbiBtYXBwZXIoZGlzcG9zZXIpIHtcbiAgICAgIGRpc3Bvc2Vyc1tqXSA9IGRpc3Bvc2VyO1xuICAgICAgaWYgKGluZGV4ZXMpIHtcbiAgICAgICAgY29uc3QgW3MyLCBzZXRdID0gY3JlYXRlU2lnbmFsKGopO1xuICAgICAgICBpbmRleGVzW2pdID0gc2V0O1xuICAgICAgICByZXR1cm4gbWFwRm4obmV3SXRlbXNbal0sIHMyKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtYXBGbihuZXdJdGVtc1tqXSk7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlQ29tcG9uZW50KENvbXAsIHByb3BzKSB7XG4gIHJldHVybiB1bnRyYWNrKCgpID0+IENvbXAocHJvcHMgfHwge30pKTtcbn1cbmZ1bmN0aW9uIHRydWVGbigpIHtcbiAgcmV0dXJuIHRydWU7XG59XG5jb25zdCBwcm9wVHJhcHMgPSB7XG4gIGdldChfLCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgICBpZiAocHJvcGVydHkgPT09ICRQUk9YWSlcbiAgICAgIHJldHVybiByZWNlaXZlcjtcbiAgICByZXR1cm4gXy5nZXQocHJvcGVydHkpO1xuICB9LFxuICBoYXMoXywgcHJvcGVydHkpIHtcbiAgICBpZiAocHJvcGVydHkgPT09ICRQUk9YWSlcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBfLmhhcyhwcm9wZXJ0eSk7XG4gIH0sXG4gIHNldDogdHJ1ZUZuLFxuICBkZWxldGVQcm9wZXJ0eTogdHJ1ZUZuLFxuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoXywgcHJvcGVydHkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIF8uZ2V0KHByb3BlcnR5KTtcbiAgICAgIH0sXG4gICAgICBzZXQ6IHRydWVGbixcbiAgICAgIGRlbGV0ZVByb3BlcnR5OiB0cnVlRm5cbiAgICB9O1xuICB9LFxuICBvd25LZXlzKF8pIHtcbiAgICByZXR1cm4gXy5rZXlzKCk7XG4gIH1cbn07XG5mdW5jdGlvbiByZXNvbHZlU291cmNlKHMyKSB7XG4gIHJldHVybiAhKHMyID0gdHlwZW9mIHMyID09PSBcImZ1bmN0aW9uXCIgPyBzMigpIDogczIpID8ge30gOiBzMjtcbn1cbmZ1bmN0aW9uIG1lcmdlUHJvcHMoLi4uc291cmNlcykge1xuICBsZXQgcHJveHkgPSBmYWxzZTtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHNvdXJjZXMubGVuZ3RoOyBpMisrKSB7XG4gICAgY29uc3QgczIgPSBzb3VyY2VzW2kyXTtcbiAgICBwcm94eSA9IHByb3h5IHx8ICEhczIgJiYgJFBST1hZIGluIHMyO1xuICAgIHNvdXJjZXNbaTJdID0gdHlwZW9mIHMyID09PSBcImZ1bmN0aW9uXCIgPyAocHJveHkgPSB0cnVlLCBjcmVhdGVNZW1vKHMyKSkgOiBzMjtcbiAgfVxuICBpZiAocHJveHkpIHtcbiAgICByZXR1cm4gbmV3IFByb3h5KHtcbiAgICAgIGdldChwcm9wZXJ0eSkge1xuICAgICAgICBmb3IgKGxldCBpMiA9IHNvdXJjZXMubGVuZ3RoIC0gMTsgaTIgPj0gMDsgaTItLSkge1xuICAgICAgICAgIGNvbnN0IHYgPSByZXNvbHZlU291cmNlKHNvdXJjZXNbaTJdKVtwcm9wZXJ0eV07XG4gICAgICAgICAgaWYgKHYgIT09IHZvaWQgMClcbiAgICAgICAgICAgIHJldHVybiB2O1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgaGFzKHByb3BlcnR5KSB7XG4gICAgICAgIGZvciAobGV0IGkyID0gc291cmNlcy5sZW5ndGggLSAxOyBpMiA+PSAwOyBpMi0tKSB7XG4gICAgICAgICAgaWYgKHByb3BlcnR5IGluIHJlc29sdmVTb3VyY2Uoc291cmNlc1tpMl0pKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfSxcbiAgICAgIGtleXMoKSB7XG4gICAgICAgIGNvbnN0IGtleXMgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHNvdXJjZXMubGVuZ3RoOyBpMisrKVxuICAgICAgICAgIGtleXMucHVzaCguLi5PYmplY3Qua2V5cyhyZXNvbHZlU291cmNlKHNvdXJjZXNbaTJdKSkpO1xuICAgICAgICByZXR1cm4gWy4uLm5ldyBTZXQoa2V5cyldO1xuICAgICAgfVxuICAgIH0sIHByb3BUcmFwcyk7XG4gIH1cbiAgY29uc3QgdGFyZ2V0ID0ge307XG4gIGZvciAobGV0IGkyID0gc291cmNlcy5sZW5ndGggLSAxOyBpMiA+PSAwOyBpMi0tKSB7XG4gICAgaWYgKHNvdXJjZXNbaTJdKSB7XG4gICAgICBjb25zdCBkZXNjcmlwdG9ycyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZXNbaTJdKTtcbiAgICAgIGZvciAoY29uc3Qga2V5IGluIGRlc2NyaXB0b3JzKSB7XG4gICAgICAgIGlmIChrZXkgaW4gdGFyZ2V0KVxuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkzID0gc291cmNlcy5sZW5ndGggLSAxOyBpMyA+PSAwOyBpMy0tKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHYgPSAoc291cmNlc1tpM10gfHwge30pW2tleV07XG4gICAgICAgICAgICAgIGlmICh2ICE9PSB2b2lkIDApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHY7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRhcmdldDtcbn1cbmZ1bmN0aW9uIHNwbGl0UHJvcHMocHJvcHMsIC4uLmtleXMpIHtcbiAgY29uc3QgYmxvY2tlZCA9IG5ldyBTZXQoa2V5cy5mbGF0KCkpO1xuICBpZiAoJFBST1hZIGluIHByb3BzKSB7XG4gICAgY29uc3QgcmVzID0ga2V5cy5tYXAoKGspID0+IHtcbiAgICAgIHJldHVybiBuZXcgUHJveHkoe1xuICAgICAgICBnZXQocHJvcGVydHkpIHtcbiAgICAgICAgICByZXR1cm4gay5pbmNsdWRlcyhwcm9wZXJ0eSkgPyBwcm9wc1twcm9wZXJ0eV0gOiB2b2lkIDA7XG4gICAgICAgIH0sXG4gICAgICAgIGhhcyhwcm9wZXJ0eSkge1xuICAgICAgICAgIHJldHVybiBrLmluY2x1ZGVzKHByb3BlcnR5KSAmJiBwcm9wZXJ0eSBpbiBwcm9wcztcbiAgICAgICAgfSxcbiAgICAgICAga2V5cygpIHtcbiAgICAgICAgICByZXR1cm4gay5maWx0ZXIoKHByb3BlcnR5KSA9PiBwcm9wZXJ0eSBpbiBwcm9wcyk7XG4gICAgICAgIH1cbiAgICAgIH0sIHByb3BUcmFwcyk7XG4gICAgfSk7XG4gICAgcmVzLnB1c2gobmV3IFByb3h5KHtcbiAgICAgIGdldChwcm9wZXJ0eSkge1xuICAgICAgICByZXR1cm4gYmxvY2tlZC5oYXMocHJvcGVydHkpID8gdm9pZCAwIDogcHJvcHNbcHJvcGVydHldO1xuICAgICAgfSxcbiAgICAgIGhhcyhwcm9wZXJ0eSkge1xuICAgICAgICByZXR1cm4gYmxvY2tlZC5oYXMocHJvcGVydHkpID8gZmFsc2UgOiBwcm9wZXJ0eSBpbiBwcm9wcztcbiAgICAgIH0sXG4gICAgICBrZXlzKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMocHJvcHMpLmZpbHRlcigoaykgPT4gIWJsb2NrZWQuaGFzKGspKTtcbiAgICAgIH1cbiAgICB9LCBwcm9wVHJhcHMpKTtcbiAgICByZXR1cm4gcmVzO1xuICB9XG4gIGNvbnN0IGRlc2NyaXB0b3JzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMocHJvcHMpO1xuICBrZXlzLnB1c2goT2JqZWN0LmtleXMoZGVzY3JpcHRvcnMpLmZpbHRlcigoaykgPT4gIWJsb2NrZWQuaGFzKGspKSk7XG4gIHJldHVybiBrZXlzLm1hcCgoaykgPT4ge1xuICAgIGNvbnN0IGNsb25lID0ge307XG4gICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGsubGVuZ3RoOyBpMisrKSB7XG4gICAgICBjb25zdCBrZXkgPSBrW2kyXTtcbiAgICAgIGlmICghKGtleSBpbiBwcm9wcykpXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNsb25lLCBrZXksIGRlc2NyaXB0b3JzW2tleV0gPyBkZXNjcmlwdG9yc1trZXldIDoge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzW2tleV07XG4gICAgICAgIH0sXG4gICAgICAgIHNldCgpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBjbG9uZTtcbiAgfSk7XG59XG5mdW5jdGlvbiBGb3IocHJvcHMpIHtcbiAgY29uc3QgZmFsbGJhY2sgPSBcImZhbGxiYWNrXCIgaW4gcHJvcHMgJiYge1xuICAgIGZhbGxiYWNrOiAoKSA9PiBwcm9wcy5mYWxsYmFja1xuICB9O1xuICByZXR1cm4gY3JlYXRlTWVtbyhtYXBBcnJheSgoKSA9PiBwcm9wcy5lYWNoLCBwcm9wcy5jaGlsZHJlbiwgZmFsbGJhY2sgfHwgdm9pZCAwKSk7XG59XG5mdW5jdGlvbiBTaG93KHByb3BzKSB7XG4gIGxldCBzdHJpY3RFcXVhbCA9IGZhbHNlO1xuICBjb25zdCBrZXllZCA9IHByb3BzLmtleWVkO1xuICBjb25zdCBjb25kaXRpb24gPSBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndoZW4sIHZvaWQgMCwge1xuICAgIGVxdWFsczogKGEyLCBiKSA9PiBzdHJpY3RFcXVhbCA/IGEyID09PSBiIDogIWEyID09PSAhYlxuICB9KTtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IGMyID0gY29uZGl0aW9uKCk7XG4gICAgaWYgKGMyKSB7XG4gICAgICBjb25zdCBjaGlsZCA9IHByb3BzLmNoaWxkcmVuO1xuICAgICAgY29uc3QgZm4gPSB0eXBlb2YgY2hpbGQgPT09IFwiZnVuY3Rpb25cIiAmJiBjaGlsZC5sZW5ndGggPiAwO1xuICAgICAgc3RyaWN0RXF1YWwgPSBrZXllZCB8fCBmbjtcbiAgICAgIHJldHVybiBmbiA/IHVudHJhY2soKCkgPT4gY2hpbGQoYzIpKSA6IGNoaWxkO1xuICAgIH1cbiAgICByZXR1cm4gcHJvcHMuZmFsbGJhY2s7XG4gIH0sIHZvaWQgMCwgdm9pZCAwKTtcbn1cbmZ1bmN0aW9uIFN3aXRjaChwcm9wcykge1xuICBsZXQgc3RyaWN0RXF1YWwgPSBmYWxzZTtcbiAgbGV0IGtleWVkID0gZmFsc2U7XG4gIGNvbnN0IGVxdWFscyA9IChhMiwgYikgPT4gYTJbMF0gPT09IGJbMF0gJiYgKHN0cmljdEVxdWFsID8gYTJbMV0gPT09IGJbMV0gOiAhYTJbMV0gPT09ICFiWzFdKSAmJiBhMlsyXSA9PT0gYlsyXTtcbiAgY29uc3QgY29uZGl0aW9ucyA9IGNoaWxkcmVuKCgpID0+IHByb3BzLmNoaWxkcmVuKSwgZXZhbENvbmRpdGlvbnMgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBsZXQgY29uZHMgPSBjb25kaXRpb25zKCk7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGNvbmRzKSlcbiAgICAgIGNvbmRzID0gW2NvbmRzXTtcbiAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgY29uZHMubGVuZ3RoOyBpMisrKSB7XG4gICAgICBjb25zdCBjMiA9IGNvbmRzW2kyXS53aGVuO1xuICAgICAgaWYgKGMyKSB7XG4gICAgICAgIGtleWVkID0gISFjb25kc1tpMl0ua2V5ZWQ7XG4gICAgICAgIHJldHVybiBbaTIsIGMyLCBjb25kc1tpMl1dO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gWy0xXTtcbiAgfSwgdm9pZCAwLCB7XG4gICAgZXF1YWxzXG4gIH0pO1xuICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgW2luZGV4LCB3aGVuLCBjb25kXSA9IGV2YWxDb25kaXRpb25zKCk7XG4gICAgaWYgKGluZGV4IDwgMClcbiAgICAgIHJldHVybiBwcm9wcy5mYWxsYmFjaztcbiAgICBjb25zdCBjMiA9IGNvbmQuY2hpbGRyZW47XG4gICAgY29uc3QgZm4gPSB0eXBlb2YgYzIgPT09IFwiZnVuY3Rpb25cIiAmJiBjMi5sZW5ndGggPiAwO1xuICAgIHN0cmljdEVxdWFsID0ga2V5ZWQgfHwgZm47XG4gICAgcmV0dXJuIGZuID8gdW50cmFjaygoKSA9PiBjMih3aGVuKSkgOiBjMjtcbiAgfSwgdm9pZCAwLCB2b2lkIDApO1xufVxuZnVuY3Rpb24gTWF0Y2gocHJvcHMpIHtcbiAgcmV0dXJuIHByb3BzO1xufVxuY29uc3QgYm9vbGVhbnMgPSBbXCJhbGxvd2Z1bGxzY3JlZW5cIiwgXCJhc3luY1wiLCBcImF1dG9mb2N1c1wiLCBcImF1dG9wbGF5XCIsIFwiY2hlY2tlZFwiLCBcImNvbnRyb2xzXCIsIFwiZGVmYXVsdFwiLCBcImRpc2FibGVkXCIsIFwiZm9ybW5vdmFsaWRhdGVcIiwgXCJoaWRkZW5cIiwgXCJpbmRldGVybWluYXRlXCIsIFwiaXNtYXBcIiwgXCJsb29wXCIsIFwibXVsdGlwbGVcIiwgXCJtdXRlZFwiLCBcIm5vbW9kdWxlXCIsIFwibm92YWxpZGF0ZVwiLCBcIm9wZW5cIiwgXCJwbGF5c2lubGluZVwiLCBcInJlYWRvbmx5XCIsIFwicmVxdWlyZWRcIiwgXCJyZXZlcnNlZFwiLCBcInNlYW1sZXNzXCIsIFwic2VsZWN0ZWRcIl07XG5jb25zdCBQcm9wZXJ0aWVzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoW1wiY2xhc3NOYW1lXCIsIFwidmFsdWVcIiwgXCJyZWFkT25seVwiLCBcImZvcm1Ob1ZhbGlkYXRlXCIsIFwiaXNNYXBcIiwgXCJub01vZHVsZVwiLCBcInBsYXlzSW5saW5lXCIsIC4uLmJvb2xlYW5zXSk7XG5jb25zdCBDaGlsZFByb3BlcnRpZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXCJpbm5lckhUTUxcIiwgXCJ0ZXh0Q29udGVudFwiLCBcImlubmVyVGV4dFwiLCBcImNoaWxkcmVuXCJdKTtcbmNvbnN0IEFsaWFzZXMgPSAvKiBAX19QVVJFX18gKi8gT2JqZWN0LmFzc2lnbigvKiBAX19QVVJFX18gKi8gT2JqZWN0LmNyZWF0ZShudWxsKSwge1xuICBjbGFzc05hbWU6IFwiY2xhc3NcIixcbiAgaHRtbEZvcjogXCJmb3JcIlxufSk7XG5jb25zdCBQcm9wQWxpYXNlcyA9IC8qIEBfX1BVUkVfXyAqLyBPYmplY3QuYXNzaWduKC8qIEBfX1BVUkVfXyAqLyBPYmplY3QuY3JlYXRlKG51bGwpLCB7XG4gIGNsYXNzOiBcImNsYXNzTmFtZVwiLFxuICBmb3Jtbm92YWxpZGF0ZTogXCJmb3JtTm9WYWxpZGF0ZVwiLFxuICBpc21hcDogXCJpc01hcFwiLFxuICBub21vZHVsZTogXCJub01vZHVsZVwiLFxuICBwbGF5c2lubGluZTogXCJwbGF5c0lubGluZVwiLFxuICByZWFkb25seTogXCJyZWFkT25seVwiXG59KTtcbmNvbnN0IERlbGVnYXRlZEV2ZW50cyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KFtcImJlZm9yZWlucHV0XCIsIFwiY2xpY2tcIiwgXCJkYmxjbGlja1wiLCBcImNvbnRleHRtZW51XCIsIFwiZm9jdXNpblwiLCBcImZvY3Vzb3V0XCIsIFwiaW5wdXRcIiwgXCJrZXlkb3duXCIsIFwia2V5dXBcIiwgXCJtb3VzZWRvd25cIiwgXCJtb3VzZW1vdmVcIiwgXCJtb3VzZW91dFwiLCBcIm1vdXNlb3ZlclwiLCBcIm1vdXNldXBcIiwgXCJwb2ludGVyZG93blwiLCBcInBvaW50ZXJtb3ZlXCIsIFwicG9pbnRlcm91dFwiLCBcInBvaW50ZXJvdmVyXCIsIFwicG9pbnRlcnVwXCIsIFwidG91Y2hlbmRcIiwgXCJ0b3VjaG1vdmVcIiwgXCJ0b3VjaHN0YXJ0XCJdKTtcbmNvbnN0IFNWR0VsZW1lbnRzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoW1xuICBcImFsdEdseXBoXCIsXG4gIFwiYWx0R2x5cGhEZWZcIixcbiAgXCJhbHRHbHlwaEl0ZW1cIixcbiAgXCJhbmltYXRlXCIsXG4gIFwiYW5pbWF0ZUNvbG9yXCIsXG4gIFwiYW5pbWF0ZU1vdGlvblwiLFxuICBcImFuaW1hdGVUcmFuc2Zvcm1cIixcbiAgXCJjaXJjbGVcIixcbiAgXCJjbGlwUGF0aFwiLFxuICBcImNvbG9yLXByb2ZpbGVcIixcbiAgXCJjdXJzb3JcIixcbiAgXCJkZWZzXCIsXG4gIFwiZGVzY1wiLFxuICBcImVsbGlwc2VcIixcbiAgXCJmZUJsZW5kXCIsXG4gIFwiZmVDb2xvck1hdHJpeFwiLFxuICBcImZlQ29tcG9uZW50VHJhbnNmZXJcIixcbiAgXCJmZUNvbXBvc2l0ZVwiLFxuICBcImZlQ29udm9sdmVNYXRyaXhcIixcbiAgXCJmZURpZmZ1c2VMaWdodGluZ1wiLFxuICBcImZlRGlzcGxhY2VtZW50TWFwXCIsXG4gIFwiZmVEaXN0YW50TGlnaHRcIixcbiAgXCJmZUZsb29kXCIsXG4gIFwiZmVGdW5jQVwiLFxuICBcImZlRnVuY0JcIixcbiAgXCJmZUZ1bmNHXCIsXG4gIFwiZmVGdW5jUlwiLFxuICBcImZlR2F1c3NpYW5CbHVyXCIsXG4gIFwiZmVJbWFnZVwiLFxuICBcImZlTWVyZ2VcIixcbiAgXCJmZU1lcmdlTm9kZVwiLFxuICBcImZlTW9ycGhvbG9neVwiLFxuICBcImZlT2Zmc2V0XCIsXG4gIFwiZmVQb2ludExpZ2h0XCIsXG4gIFwiZmVTcGVjdWxhckxpZ2h0aW5nXCIsXG4gIFwiZmVTcG90TGlnaHRcIixcbiAgXCJmZVRpbGVcIixcbiAgXCJmZVR1cmJ1bGVuY2VcIixcbiAgXCJmaWx0ZXJcIixcbiAgXCJmb250XCIsXG4gIFwiZm9udC1mYWNlXCIsXG4gIFwiZm9udC1mYWNlLWZvcm1hdFwiLFxuICBcImZvbnQtZmFjZS1uYW1lXCIsXG4gIFwiZm9udC1mYWNlLXNyY1wiLFxuICBcImZvbnQtZmFjZS11cmlcIixcbiAgXCJmb3JlaWduT2JqZWN0XCIsXG4gIFwiZ1wiLFxuICBcImdseXBoXCIsXG4gIFwiZ2x5cGhSZWZcIixcbiAgXCJoa2VyblwiLFxuICBcImltYWdlXCIsXG4gIFwibGluZVwiLFxuICBcImxpbmVhckdyYWRpZW50XCIsXG4gIFwibWFya2VyXCIsXG4gIFwibWFza1wiLFxuICBcIm1ldGFkYXRhXCIsXG4gIFwibWlzc2luZy1nbHlwaFwiLFxuICBcIm1wYXRoXCIsXG4gIFwicGF0aFwiLFxuICBcInBhdHRlcm5cIixcbiAgXCJwb2x5Z29uXCIsXG4gIFwicG9seWxpbmVcIixcbiAgXCJyYWRpYWxHcmFkaWVudFwiLFxuICBcInJlY3RcIixcbiAgXCJzZXRcIixcbiAgXCJzdG9wXCIsXG4gIFwic3ZnXCIsXG4gIFwic3dpdGNoXCIsXG4gIFwic3ltYm9sXCIsXG4gIFwidGV4dFwiLFxuICBcInRleHRQYXRoXCIsXG4gIFwidHJlZlwiLFxuICBcInRzcGFuXCIsXG4gIFwidXNlXCIsXG4gIFwidmlld1wiLFxuICBcInZrZXJuXCJcbl0pO1xuY29uc3QgU1ZHTmFtZXNwYWNlID0ge1xuICB4bGluazogXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsXG4gIHhtbDogXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIlxufTtcbmZ1bmN0aW9uIHJlY29uY2lsZUFycmF5cyhwYXJlbnROb2RlLCBhMiwgYikge1xuICBsZXQgYkxlbmd0aCA9IGIubGVuZ3RoLCBhRW5kID0gYTIubGVuZ3RoLCBiRW5kID0gYkxlbmd0aCwgYVN0YXJ0ID0gMCwgYlN0YXJ0ID0gMCwgYWZ0ZXIgPSBhMlthRW5kIC0gMV0ubmV4dFNpYmxpbmcsIG1hcCA9IG51bGw7XG4gIHdoaWxlIChhU3RhcnQgPCBhRW5kIHx8IGJTdGFydCA8IGJFbmQpIHtcbiAgICBpZiAoYTJbYVN0YXJ0XSA9PT0gYltiU3RhcnRdKSB7XG4gICAgICBhU3RhcnQrKztcbiAgICAgIGJTdGFydCsrO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIHdoaWxlIChhMlthRW5kIC0gMV0gPT09IGJbYkVuZCAtIDFdKSB7XG4gICAgICBhRW5kLS07XG4gICAgICBiRW5kLS07XG4gICAgfVxuICAgIGlmIChhRW5kID09PSBhU3RhcnQpIHtcbiAgICAgIGNvbnN0IG5vZGUgPSBiRW5kIDwgYkxlbmd0aCA/IGJTdGFydCA/IGJbYlN0YXJ0IC0gMV0ubmV4dFNpYmxpbmcgOiBiW2JFbmQgLSBiU3RhcnRdIDogYWZ0ZXI7XG4gICAgICB3aGlsZSAoYlN0YXJ0IDwgYkVuZClcbiAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYltiU3RhcnQrK10sIG5vZGUpO1xuICAgIH0gZWxzZSBpZiAoYkVuZCA9PT0gYlN0YXJ0KSB7XG4gICAgICB3aGlsZSAoYVN0YXJ0IDwgYUVuZCkge1xuICAgICAgICBpZiAoIW1hcCB8fCAhbWFwLmhhcyhhMlthU3RhcnRdKSlcbiAgICAgICAgICBhMlthU3RhcnRdLnJlbW92ZSgpO1xuICAgICAgICBhU3RhcnQrKztcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGEyW2FTdGFydF0gPT09IGJbYkVuZCAtIDFdICYmIGJbYlN0YXJ0XSA9PT0gYTJbYUVuZCAtIDFdKSB7XG4gICAgICBjb25zdCBub2RlID0gYTJbLS1hRW5kXS5uZXh0U2libGluZztcbiAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGJbYlN0YXJ0KytdLCBhMlthU3RhcnQrK10ubmV4dFNpYmxpbmcpO1xuICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYlstLWJFbmRdLCBub2RlKTtcbiAgICAgIGEyW2FFbmRdID0gYltiRW5kXTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKCFtYXApIHtcbiAgICAgICAgbWFwID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgICAgICAgbGV0IGkyID0gYlN0YXJ0O1xuICAgICAgICB3aGlsZSAoaTIgPCBiRW5kKVxuICAgICAgICAgIG1hcC5zZXQoYltpMl0sIGkyKyspO1xuICAgICAgfVxuICAgICAgY29uc3QgaW5kZXggPSBtYXAuZ2V0KGEyW2FTdGFydF0pO1xuICAgICAgaWYgKGluZGV4ICE9IG51bGwpIHtcbiAgICAgICAgaWYgKGJTdGFydCA8IGluZGV4ICYmIGluZGV4IDwgYkVuZCkge1xuICAgICAgICAgIGxldCBpMiA9IGFTdGFydCwgc2VxdWVuY2UgPSAxLCB0MjtcbiAgICAgICAgICB3aGlsZSAoKytpMiA8IGFFbmQgJiYgaTIgPCBiRW5kKSB7XG4gICAgICAgICAgICBpZiAoKHQyID0gbWFwLmdldChhMltpMl0pKSA9PSBudWxsIHx8IHQyICE9PSBpbmRleCArIHNlcXVlbmNlKVxuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIHNlcXVlbmNlKys7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChzZXF1ZW5jZSA+IGluZGV4IC0gYlN0YXJ0KSB7XG4gICAgICAgICAgICBjb25zdCBub2RlID0gYTJbYVN0YXJ0XTtcbiAgICAgICAgICAgIHdoaWxlIChiU3RhcnQgPCBpbmRleClcbiAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYltiU3RhcnQrK10sIG5vZGUpO1xuICAgICAgICAgIH0gZWxzZVxuICAgICAgICAgICAgcGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoYltiU3RhcnQrK10sIGEyW2FTdGFydCsrXSk7XG4gICAgICAgIH0gZWxzZVxuICAgICAgICAgIGFTdGFydCsrO1xuICAgICAgfSBlbHNlXG4gICAgICAgIGEyW2FTdGFydCsrXS5yZW1vdmUoKTtcbiAgICB9XG4gIH1cbn1cbmNvbnN0ICQkRVZFTlRTID0gXCJfJERYX0RFTEVHQVRFXCI7XG5mdW5jdGlvbiByZW5kZXIoY29kZSwgZWxlbWVudCwgaW5pdCwgb3B0aW9ucyA9IHt9KSB7XG4gIGxldCBkaXNwb3NlcjtcbiAgY3JlYXRlUm9vdCgoZGlzcG9zZTIpID0+IHtcbiAgICBkaXNwb3NlciA9IGRpc3Bvc2UyO1xuICAgIGVsZW1lbnQgPT09IGRvY3VtZW50ID8gY29kZSgpIDogaW5zZXJ0KGVsZW1lbnQsIGNvZGUoKSwgZWxlbWVudC5maXJzdENoaWxkID8gbnVsbCA6IHZvaWQgMCwgaW5pdCk7XG4gIH0sIG9wdGlvbnMub3duZXIpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGRpc3Bvc2VyKCk7XG4gICAgZWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gIH07XG59XG5mdW5jdGlvbiB0ZW1wbGF0ZSQxKGh0bWwsIGNoZWNrLCBpc1NWRykge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGNvbnN0IHQyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRlbXBsYXRlXCIpO1xuICB0Mi5pbm5lckhUTUwgPSBodG1sO1xuICBsZXQgbm9kZSA9IHQyLmNvbnRlbnQuZmlyc3RDaGlsZDtcbiAgaWYgKGlzU1ZHKVxuICAgIG5vZGUgPSBub2RlLmZpcnN0Q2hpbGQ7XG4gIHJldHVybiBub2RlO1xufVxuZnVuY3Rpb24gZGVsZWdhdGVFdmVudHMoZXZlbnROYW1lcywgZG9jdW1lbnQyID0gd2luZG93LmRvY3VtZW50KSB7XG4gIGNvbnN0IGUyID0gZG9jdW1lbnQyWyQkRVZFTlRTXSB8fCAoZG9jdW1lbnQyWyQkRVZFTlRTXSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCkpO1xuICBmb3IgKGxldCBpMiA9IDAsIGwyID0gZXZlbnROYW1lcy5sZW5ndGg7IGkyIDwgbDI7IGkyKyspIHtcbiAgICBjb25zdCBuYW1lID0gZXZlbnROYW1lc1tpMl07XG4gICAgaWYgKCFlMi5oYXMobmFtZSkpIHtcbiAgICAgIGUyLmFkZChuYW1lKTtcbiAgICAgIGRvY3VtZW50Mi5hZGRFdmVudExpc3RlbmVyKG5hbWUsIGV2ZW50SGFuZGxlcik7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGUobm9kZSwgbmFtZSwgdmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpXG4gICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gIGVsc2VcbiAgICBub2RlLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG59XG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVOUyhub2RlLCBuYW1lc3BhY2UsIG5hbWUsIHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PSBudWxsKVxuICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlTlMobmFtZXNwYWNlLCBuYW1lKTtcbiAgZWxzZVxuICAgIG5vZGUuc2V0QXR0cmlidXRlTlMobmFtZXNwYWNlLCBuYW1lLCB2YWx1ZSk7XG59XG5mdW5jdGlvbiBjbGFzc05hbWUobm9kZSwgdmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpXG4gICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUoXCJjbGFzc1wiKTtcbiAgZWxzZVxuICAgIG5vZGUuY2xhc3NOYW1lID0gdmFsdWU7XG59XG5mdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKG5vZGUsIG5hbWUsIGhhbmRsZXIsIGRlbGVnYXRlKSB7XG4gIGlmIChkZWxlZ2F0ZSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGhhbmRsZXIpKSB7XG4gICAgICBub2RlW2AkJCR7bmFtZX1gXSA9IGhhbmRsZXJbMF07XG4gICAgICBub2RlW2AkJCR7bmFtZX1EYXRhYF0gPSBoYW5kbGVyWzFdO1xuICAgIH0gZWxzZVxuICAgICAgbm9kZVtgJCQke25hbWV9YF0gPSBoYW5kbGVyO1xuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoaGFuZGxlcikpIHtcbiAgICBjb25zdCBoYW5kbGVyRm4gPSBoYW5kbGVyWzBdO1xuICAgIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihuYW1lLCBoYW5kbGVyWzBdID0gKGUyKSA9PiBoYW5kbGVyRm4uY2FsbChub2RlLCBoYW5kbGVyWzFdLCBlMikpO1xuICB9IGVsc2VcbiAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIobmFtZSwgaGFuZGxlcik7XG59XG5mdW5jdGlvbiBjbGFzc0xpc3Qobm9kZSwgdmFsdWUsIHByZXYgPSB7fSkge1xuICBjb25zdCBjbGFzc0tleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSB8fCB7fSksIHByZXZLZXlzID0gT2JqZWN0LmtleXMocHJldik7XG4gIGxldCBpMiwgbGVuO1xuICBmb3IgKGkyID0gMCwgbGVuID0gcHJldktleXMubGVuZ3RoOyBpMiA8IGxlbjsgaTIrKykge1xuICAgIGNvbnN0IGtleSA9IHByZXZLZXlzW2kyXTtcbiAgICBpZiAoIWtleSB8fCBrZXkgPT09IFwidW5kZWZpbmVkXCIgfHwgdmFsdWVba2V5XSlcbiAgICAgIGNvbnRpbnVlO1xuICAgIHRvZ2dsZUNsYXNzS2V5KG5vZGUsIGtleSwgZmFsc2UpO1xuICAgIGRlbGV0ZSBwcmV2W2tleV07XG4gIH1cbiAgZm9yIChpMiA9IDAsIGxlbiA9IGNsYXNzS2V5cy5sZW5ndGg7IGkyIDwgbGVuOyBpMisrKSB7XG4gICAgY29uc3Qga2V5ID0gY2xhc3NLZXlzW2kyXSwgY2xhc3NWYWx1ZSA9ICEhdmFsdWVba2V5XTtcbiAgICBpZiAoIWtleSB8fCBrZXkgPT09IFwidW5kZWZpbmVkXCIgfHwgcHJldltrZXldID09PSBjbGFzc1ZhbHVlIHx8ICFjbGFzc1ZhbHVlKVxuICAgICAgY29udGludWU7XG4gICAgdG9nZ2xlQ2xhc3NLZXkobm9kZSwga2V5LCB0cnVlKTtcbiAgICBwcmV2W2tleV0gPSBjbGFzc1ZhbHVlO1xuICB9XG4gIHJldHVybiBwcmV2O1xufVxuZnVuY3Rpb24gc3R5bGUobm9kZSwgdmFsdWUsIHByZXYpIHtcbiAgaWYgKCF2YWx1ZSlcbiAgICByZXR1cm4gcHJldiA/IHNldEF0dHJpYnV0ZShub2RlLCBcInN0eWxlXCIpIDogdmFsdWU7XG4gIGNvbnN0IG5vZGVTdHlsZSA9IG5vZGUuc3R5bGU7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpXG4gICAgcmV0dXJuIG5vZGVTdHlsZS5jc3NUZXh0ID0gdmFsdWU7XG4gIHR5cGVvZiBwcmV2ID09PSBcInN0cmluZ1wiICYmIChub2RlU3R5bGUuY3NzVGV4dCA9IHByZXYgPSB2b2lkIDApO1xuICBwcmV2IHx8IChwcmV2ID0ge30pO1xuICB2YWx1ZSB8fCAodmFsdWUgPSB7fSk7XG4gIGxldCB2LCBzMjtcbiAgZm9yIChzMiBpbiBwcmV2KSB7XG4gICAgdmFsdWVbczJdID09IG51bGwgJiYgbm9kZVN0eWxlLnJlbW92ZVByb3BlcnR5KHMyKTtcbiAgICBkZWxldGUgcHJldltzMl07XG4gIH1cbiAgZm9yIChzMiBpbiB2YWx1ZSkge1xuICAgIHYgPSB2YWx1ZVtzMl07XG4gICAgaWYgKHYgIT09IHByZXZbczJdKSB7XG4gICAgICBub2RlU3R5bGUuc2V0UHJvcGVydHkoczIsIHYpO1xuICAgICAgcHJldltzMl0gPSB2O1xuICAgIH1cbiAgfVxuICByZXR1cm4gcHJldjtcbn1cbmZ1bmN0aW9uIHNwcmVhZChub2RlLCBwcm9wcyA9IHt9LCBpc1NWRywgc2tpcENoaWxkcmVuKSB7XG4gIGNvbnN0IHByZXZQcm9wcyA9IHt9O1xuICBpZiAoIXNraXBDaGlsZHJlbikge1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBwcmV2UHJvcHMuY2hpbGRyZW4gPSBpbnNlcnRFeHByZXNzaW9uKG5vZGUsIHByb3BzLmNoaWxkcmVuLCBwcmV2UHJvcHMuY2hpbGRyZW4pKTtcbiAgfVxuICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gcHJvcHMucmVmICYmIHByb3BzLnJlZihub2RlKSk7XG4gIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBhc3NpZ24obm9kZSwgcHJvcHMsIGlzU1ZHLCB0cnVlLCBwcmV2UHJvcHMsIHRydWUpKTtcbiAgcmV0dXJuIHByZXZQcm9wcztcbn1cbmZ1bmN0aW9uIHVzZShmbiwgZWxlbWVudCwgYXJnKSB7XG4gIHJldHVybiB1bnRyYWNrKCgpID0+IGZuKGVsZW1lbnQsIGFyZykpO1xufVxuZnVuY3Rpb24gaW5zZXJ0KHBhcmVudCwgYWNjZXNzb3IsIG1hcmtlciwgaW5pdGlhbCkge1xuICBpZiAobWFya2VyICE9PSB2b2lkIDAgJiYgIWluaXRpYWwpXG4gICAgaW5pdGlhbCA9IFtdO1xuICBpZiAodHlwZW9mIGFjY2Vzc29yICE9PSBcImZ1bmN0aW9uXCIpXG4gICAgcmV0dXJuIGluc2VydEV4cHJlc3Npb24ocGFyZW50LCBhY2Nlc3NvciwgaW5pdGlhbCwgbWFya2VyKTtcbiAgY3JlYXRlUmVuZGVyRWZmZWN0KChjdXJyZW50KSA9PiBpbnNlcnRFeHByZXNzaW9uKHBhcmVudCwgYWNjZXNzb3IoKSwgY3VycmVudCwgbWFya2VyKSwgaW5pdGlhbCk7XG59XG5mdW5jdGlvbiBhc3NpZ24obm9kZSwgcHJvcHMsIGlzU1ZHLCBza2lwQ2hpbGRyZW4sIHByZXZQcm9wcyA9IHt9LCBza2lwUmVmID0gZmFsc2UpIHtcbiAgcHJvcHMgfHwgKHByb3BzID0ge30pO1xuICBmb3IgKGNvbnN0IHByb3AgaW4gcHJldlByb3BzKSB7XG4gICAgaWYgKCEocHJvcCBpbiBwcm9wcykpIHtcbiAgICAgIGlmIChwcm9wID09PSBcImNoaWxkcmVuXCIpXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgcHJldlByb3BzW3Byb3BdID0gYXNzaWduUHJvcChub2RlLCBwcm9wLCBudWxsLCBwcmV2UHJvcHNbcHJvcF0sIGlzU1ZHLCBza2lwUmVmKTtcbiAgICB9XG4gIH1cbiAgZm9yIChjb25zdCBwcm9wIGluIHByb3BzKSB7XG4gICAgaWYgKHByb3AgPT09IFwiY2hpbGRyZW5cIikge1xuICAgICAgaWYgKCFza2lwQ2hpbGRyZW4pXG4gICAgICAgIGluc2VydEV4cHJlc3Npb24obm9kZSwgcHJvcHMuY2hpbGRyZW4pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGNvbnN0IHZhbHVlID0gcHJvcHNbcHJvcF07XG4gICAgcHJldlByb3BzW3Byb3BdID0gYXNzaWduUHJvcChub2RlLCBwcm9wLCB2YWx1ZSwgcHJldlByb3BzW3Byb3BdLCBpc1NWRywgc2tpcFJlZik7XG4gIH1cbn1cbmZ1bmN0aW9uIGdldE5leHRFbGVtZW50KHRlbXBsYXRlMikge1xuICBsZXQgbm9kZSwga2V5O1xuICBpZiAoIXNoYXJlZENvbmZpZy5jb250ZXh0IHx8ICEobm9kZSA9IHNoYXJlZENvbmZpZy5yZWdpc3RyeS5nZXQoa2V5ID0gZ2V0SHlkcmF0aW9uS2V5KCkpKSkge1xuICAgIHJldHVybiB0ZW1wbGF0ZTIuY2xvbmVOb2RlKHRydWUpO1xuICB9XG4gIGlmIChzaGFyZWRDb25maWcuY29tcGxldGVkKVxuICAgIHNoYXJlZENvbmZpZy5jb21wbGV0ZWQuYWRkKG5vZGUpO1xuICBzaGFyZWRDb25maWcucmVnaXN0cnkuZGVsZXRlKGtleSk7XG4gIHJldHVybiBub2RlO1xufVxuZnVuY3Rpb24gdG9Qcm9wZXJ0eU5hbWUobmFtZSkge1xuICByZXR1cm4gbmFtZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoLy0oW2Etel0pL2csIChfLCB3KSA9PiB3LnRvVXBwZXJDYXNlKCkpO1xufVxuZnVuY3Rpb24gdG9nZ2xlQ2xhc3NLZXkobm9kZSwga2V5LCB2YWx1ZSkge1xuICBjb25zdCBjbGFzc05hbWVzID0ga2V5LnRyaW0oKS5zcGxpdCgvXFxzKy8pO1xuICBmb3IgKGxldCBpMiA9IDAsIG5hbWVMZW4gPSBjbGFzc05hbWVzLmxlbmd0aDsgaTIgPCBuYW1lTGVuOyBpMisrKVxuICAgIG5vZGUuY2xhc3NMaXN0LnRvZ2dsZShjbGFzc05hbWVzW2kyXSwgdmFsdWUpO1xufVxuZnVuY3Rpb24gYXNzaWduUHJvcChub2RlLCBwcm9wLCB2YWx1ZSwgcHJldiwgaXNTVkcsIHNraXBSZWYpIHtcbiAgbGV0IGlzQ0UsIGlzUHJvcCwgaXNDaGlsZFByb3A7XG4gIGlmIChwcm9wID09PSBcInN0eWxlXCIpXG4gICAgcmV0dXJuIHN0eWxlKG5vZGUsIHZhbHVlLCBwcmV2KTtcbiAgaWYgKHByb3AgPT09IFwiY2xhc3NMaXN0XCIpXG4gICAgcmV0dXJuIGNsYXNzTGlzdChub2RlLCB2YWx1ZSwgcHJldik7XG4gIGlmICh2YWx1ZSA9PT0gcHJldilcbiAgICByZXR1cm4gcHJldjtcbiAgaWYgKHByb3AgPT09IFwicmVmXCIpIHtcbiAgICBpZiAoIXNraXBSZWYpXG4gICAgICB2YWx1ZShub2RlKTtcbiAgfSBlbHNlIGlmIChwcm9wLnNsaWNlKDAsIDMpID09PSBcIm9uOlwiKSB7XG4gICAgY29uc3QgZTIgPSBwcm9wLnNsaWNlKDMpO1xuICAgIHByZXYgJiYgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGUyLCBwcmV2KTtcbiAgICB2YWx1ZSAmJiBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZTIsIHZhbHVlKTtcbiAgfSBlbHNlIGlmIChwcm9wLnNsaWNlKDAsIDEwKSA9PT0gXCJvbmNhcHR1cmU6XCIpIHtcbiAgICBjb25zdCBlMiA9IHByb3Auc2xpY2UoMTApO1xuICAgIHByZXYgJiYgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGUyLCBwcmV2LCB0cnVlKTtcbiAgICB2YWx1ZSAmJiBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZTIsIHZhbHVlLCB0cnVlKTtcbiAgfSBlbHNlIGlmIChwcm9wLnNsaWNlKDAsIDIpID09PSBcIm9uXCIpIHtcbiAgICBjb25zdCBuYW1lID0gcHJvcC5zbGljZSgyKS50b0xvd2VyQ2FzZSgpO1xuICAgIGNvbnN0IGRlbGVnYXRlID0gRGVsZWdhdGVkRXZlbnRzLmhhcyhuYW1lKTtcbiAgICBpZiAoIWRlbGVnYXRlICYmIHByZXYpIHtcbiAgICAgIGNvbnN0IGgyID0gQXJyYXkuaXNBcnJheShwcmV2KSA/IHByZXZbMF0gOiBwcmV2O1xuICAgICAgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKG5hbWUsIGgyKTtcbiAgICB9XG4gICAgaWYgKGRlbGVnYXRlIHx8IHZhbHVlKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKG5vZGUsIG5hbWUsIHZhbHVlLCBkZWxlZ2F0ZSk7XG4gICAgICBkZWxlZ2F0ZSAmJiBkZWxlZ2F0ZUV2ZW50cyhbbmFtZV0pO1xuICAgIH1cbiAgfSBlbHNlIGlmICgoaXNDaGlsZFByb3AgPSBDaGlsZFByb3BlcnRpZXMuaGFzKHByb3ApKSB8fCAhaXNTVkcgJiYgKFByb3BBbGlhc2VzW3Byb3BdIHx8IChpc1Byb3AgPSBQcm9wZXJ0aWVzLmhhcyhwcm9wKSkpIHx8IChpc0NFID0gbm9kZS5ub2RlTmFtZS5pbmNsdWRlcyhcIi1cIikpKSB7XG4gICAgaWYgKHByb3AgPT09IFwiY2xhc3NcIiB8fCBwcm9wID09PSBcImNsYXNzTmFtZVwiKVxuICAgICAgY2xhc3NOYW1lKG5vZGUsIHZhbHVlKTtcbiAgICBlbHNlIGlmIChpc0NFICYmICFpc1Byb3AgJiYgIWlzQ2hpbGRQcm9wKVxuICAgICAgbm9kZVt0b1Byb3BlcnR5TmFtZShwcm9wKV0gPSB2YWx1ZTtcbiAgICBlbHNlXG4gICAgICBub2RlW1Byb3BBbGlhc2VzW3Byb3BdIHx8IHByb3BdID0gdmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgbnMgPSBpc1NWRyAmJiBwcm9wLmluZGV4T2YoXCI6XCIpID4gLTEgJiYgU1ZHTmFtZXNwYWNlW3Byb3Auc3BsaXQoXCI6XCIpWzBdXTtcbiAgICBpZiAobnMpXG4gICAgICBzZXRBdHRyaWJ1dGVOUyhub2RlLCBucywgcHJvcCwgdmFsdWUpO1xuICAgIGVsc2VcbiAgICAgIHNldEF0dHJpYnV0ZShub2RlLCBBbGlhc2VzW3Byb3BdIHx8IHByb3AsIHZhbHVlKTtcbiAgfVxuICByZXR1cm4gdmFsdWU7XG59XG5mdW5jdGlvbiBldmVudEhhbmRsZXIoZTIpIHtcbiAgY29uc3Qga2V5ID0gYCQkJHtlMi50eXBlfWA7XG4gIGxldCBub2RlID0gZTIuY29tcG9zZWRQYXRoICYmIGUyLmNvbXBvc2VkUGF0aCgpWzBdIHx8IGUyLnRhcmdldDtcbiAgaWYgKGUyLnRhcmdldCAhPT0gbm9kZSkge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlMiwgXCJ0YXJnZXRcIiwge1xuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IG5vZGVcbiAgICB9KTtcbiAgfVxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZTIsIFwiY3VycmVudFRhcmdldFwiLCB7XG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIGdldCgpIHtcbiAgICAgIHJldHVybiBub2RlIHx8IGRvY3VtZW50O1xuICAgIH1cbiAgfSk7XG4gIGlmIChzaGFyZWRDb25maWcucmVnaXN0cnkgJiYgIXNoYXJlZENvbmZpZy5kb25lKSB7XG4gICAgc2hhcmVkQ29uZmlnLmRvbmUgPSB0cnVlO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbaWRePXBsLV1cIikuZm9yRWFjaCgoZWxlbSkgPT4ge1xuICAgICAgd2hpbGUgKGVsZW0gJiYgZWxlbS5ub2RlVHlwZSAhPT0gOCAmJiBlbGVtLm5vZGVWYWx1ZSAhPT0gXCJwbC1cIiArIGUyKSB7XG4gICAgICAgIGxldCB4ID0gZWxlbS5uZXh0U2libGluZztcbiAgICAgICAgZWxlbS5yZW1vdmUoKTtcbiAgICAgICAgZWxlbSA9IHg7XG4gICAgICB9XG4gICAgICBlbGVtICYmIGVsZW0ucmVtb3ZlKCk7XG4gICAgfSk7XG4gIH1cbiAgd2hpbGUgKG5vZGUpIHtcbiAgICBjb25zdCBoYW5kbGVyID0gbm9kZVtrZXldO1xuICAgIGlmIChoYW5kbGVyICYmICFub2RlLmRpc2FibGVkKSB7XG4gICAgICBjb25zdCBkYXRhID0gbm9kZVtgJHtrZXl9RGF0YWBdO1xuICAgICAgZGF0YSAhPT0gdm9pZCAwID8gaGFuZGxlci5jYWxsKG5vZGUsIGRhdGEsIGUyKSA6IGhhbmRsZXIuY2FsbChub2RlLCBlMik7XG4gICAgICBpZiAoZTIuY2FuY2VsQnViYmxlKVxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIG5vZGUgPSBub2RlLl8kaG9zdCB8fCBub2RlLnBhcmVudE5vZGUgfHwgbm9kZS5ob3N0O1xuICB9XG59XG5mdW5jdGlvbiBpbnNlcnRFeHByZXNzaW9uKHBhcmVudCwgdmFsdWUsIGN1cnJlbnQsIG1hcmtlciwgdW53cmFwQXJyYXkpIHtcbiAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0ICYmICFjdXJyZW50KVxuICAgIGN1cnJlbnQgPSBbLi4ucGFyZW50LmNoaWxkTm9kZXNdO1xuICB3aGlsZSAodHlwZW9mIGN1cnJlbnQgPT09IFwiZnVuY3Rpb25cIilcbiAgICBjdXJyZW50ID0gY3VycmVudCgpO1xuICBpZiAodmFsdWUgPT09IGN1cnJlbnQpXG4gICAgcmV0dXJuIGN1cnJlbnQ7XG4gIGNvbnN0IHQyID0gdHlwZW9mIHZhbHVlLCBtdWx0aSA9IG1hcmtlciAhPT0gdm9pZCAwO1xuICBwYXJlbnQgPSBtdWx0aSAmJiBjdXJyZW50WzBdICYmIGN1cnJlbnRbMF0ucGFyZW50Tm9kZSB8fCBwYXJlbnQ7XG4gIGlmICh0MiA9PT0gXCJzdHJpbmdcIiB8fCB0MiA9PT0gXCJudW1iZXJcIikge1xuICAgIGlmIChzaGFyZWRDb25maWcuY29udGV4dClcbiAgICAgIHJldHVybiBjdXJyZW50O1xuICAgIGlmICh0MiA9PT0gXCJudW1iZXJcIilcbiAgICAgIHZhbHVlID0gdmFsdWUudG9TdHJpbmcoKTtcbiAgICBpZiAobXVsdGkpIHtcbiAgICAgIGxldCBub2RlID0gY3VycmVudFswXTtcbiAgICAgIGlmIChub2RlICYmIG5vZGUubm9kZVR5cGUgPT09IDMpIHtcbiAgICAgICAgbm9kZS5kYXRhID0gdmFsdWU7XG4gICAgICB9IGVsc2VcbiAgICAgICAgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHZhbHVlKTtcbiAgICAgIGN1cnJlbnQgPSBjbGVhbkNoaWxkcmVuKHBhcmVudCwgY3VycmVudCwgbWFya2VyLCBub2RlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGN1cnJlbnQgIT09IFwiXCIgJiYgdHlwZW9mIGN1cnJlbnQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY3VycmVudCA9IHBhcmVudC5maXJzdENoaWxkLmRhdGEgPSB2YWx1ZTtcbiAgICAgIH0gZWxzZVxuICAgICAgICBjdXJyZW50ID0gcGFyZW50LnRleHRDb250ZW50ID0gdmFsdWU7XG4gICAgfVxuICB9IGVsc2UgaWYgKHZhbHVlID09IG51bGwgfHwgdDIgPT09IFwiYm9vbGVhblwiKSB7XG4gICAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0KVxuICAgICAgcmV0dXJuIGN1cnJlbnQ7XG4gICAgY3VycmVudCA9IGNsZWFuQ2hpbGRyZW4ocGFyZW50LCBjdXJyZW50LCBtYXJrZXIpO1xuICB9IGVsc2UgaWYgKHQyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4ge1xuICAgICAgbGV0IHYgPSB2YWx1ZSgpO1xuICAgICAgd2hpbGUgKHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIHYgPSB2KCk7XG4gICAgICBjdXJyZW50ID0gaW5zZXJ0RXhwcmVzc2lvbihwYXJlbnQsIHYsIGN1cnJlbnQsIG1hcmtlcik7XG4gICAgfSk7XG4gICAgcmV0dXJuICgpID0+IGN1cnJlbnQ7XG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICBjb25zdCBhcnJheSA9IFtdO1xuICAgIGNvbnN0IGN1cnJlbnRBcnJheSA9IGN1cnJlbnQgJiYgQXJyYXkuaXNBcnJheShjdXJyZW50KTtcbiAgICBpZiAobm9ybWFsaXplSW5jb21pbmdBcnJheShhcnJheSwgdmFsdWUsIGN1cnJlbnQsIHVud3JhcEFycmF5KSkge1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGN1cnJlbnQgPSBpbnNlcnRFeHByZXNzaW9uKHBhcmVudCwgYXJyYXksIGN1cnJlbnQsIG1hcmtlciwgdHJ1ZSkpO1xuICAgICAgcmV0dXJuICgpID0+IGN1cnJlbnQ7XG4gICAgfVxuICAgIGlmIChzaGFyZWRDb25maWcuY29udGV4dCkge1xuICAgICAgaWYgKCFhcnJheS5sZW5ndGgpXG4gICAgICAgIHJldHVybiBjdXJyZW50O1xuICAgICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGFycmF5Lmxlbmd0aDsgaTIrKykge1xuICAgICAgICBpZiAoYXJyYXlbaTJdLnBhcmVudE5vZGUpXG4gICAgICAgICAgcmV0dXJuIGN1cnJlbnQgPSBhcnJheTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGFycmF5Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgY3VycmVudCA9IGNsZWFuQ2hpbGRyZW4ocGFyZW50LCBjdXJyZW50LCBtYXJrZXIpO1xuICAgICAgaWYgKG11bHRpKVxuICAgICAgICByZXR1cm4gY3VycmVudDtcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRBcnJheSkge1xuICAgICAgaWYgKGN1cnJlbnQubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGFwcGVuZE5vZGVzKHBhcmVudCwgYXJyYXksIG1hcmtlcik7XG4gICAgICB9IGVsc2VcbiAgICAgICAgcmVjb25jaWxlQXJyYXlzKHBhcmVudCwgY3VycmVudCwgYXJyYXkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjdXJyZW50ICYmIGNsZWFuQ2hpbGRyZW4ocGFyZW50KTtcbiAgICAgIGFwcGVuZE5vZGVzKHBhcmVudCwgYXJyYXkpO1xuICAgIH1cbiAgICBjdXJyZW50ID0gYXJyYXk7XG4gIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBOb2RlKSB7XG4gICAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0ICYmIHZhbHVlLnBhcmVudE5vZGUpXG4gICAgICByZXR1cm4gY3VycmVudCA9IG11bHRpID8gW3ZhbHVlXSA6IHZhbHVlO1xuICAgIGlmIChBcnJheS5pc0FycmF5KGN1cnJlbnQpKSB7XG4gICAgICBpZiAobXVsdGkpXG4gICAgICAgIHJldHVybiBjdXJyZW50ID0gY2xlYW5DaGlsZHJlbihwYXJlbnQsIGN1cnJlbnQsIG1hcmtlciwgdmFsdWUpO1xuICAgICAgY2xlYW5DaGlsZHJlbihwYXJlbnQsIGN1cnJlbnQsIG51bGwsIHZhbHVlKTtcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnQgPT0gbnVsbCB8fCBjdXJyZW50ID09PSBcIlwiIHx8ICFwYXJlbnQuZmlyc3RDaGlsZCkge1xuICAgICAgcGFyZW50LmFwcGVuZENoaWxkKHZhbHVlKTtcbiAgICB9IGVsc2VcbiAgICAgIHBhcmVudC5yZXBsYWNlQ2hpbGQodmFsdWUsIHBhcmVudC5maXJzdENoaWxkKTtcbiAgICBjdXJyZW50ID0gdmFsdWU7XG4gIH0gZWxzZVxuICAgIDtcbiAgcmV0dXJuIGN1cnJlbnQ7XG59XG5mdW5jdGlvbiBub3JtYWxpemVJbmNvbWluZ0FycmF5KG5vcm1hbGl6ZWQsIGFycmF5LCBjdXJyZW50LCB1bndyYXAyKSB7XG4gIGxldCBkeW5hbWljID0gZmFsc2U7XG4gIGZvciAobGV0IGkyID0gMCwgbGVuID0gYXJyYXkubGVuZ3RoOyBpMiA8IGxlbjsgaTIrKykge1xuICAgIGxldCBpdGVtID0gYXJyYXlbaTJdLCBwcmV2ID0gY3VycmVudCAmJiBjdXJyZW50W2kyXTtcbiAgICBpZiAoaXRlbSBpbnN0YW5jZW9mIE5vZGUpIHtcbiAgICAgIG5vcm1hbGl6ZWQucHVzaChpdGVtKTtcbiAgICB9IGVsc2UgaWYgKGl0ZW0gPT0gbnVsbCB8fCBpdGVtID09PSB0cnVlIHx8IGl0ZW0gPT09IGZhbHNlKVxuICAgICAgO1xuICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoaXRlbSkpIHtcbiAgICAgIGR5bmFtaWMgPSBub3JtYWxpemVJbmNvbWluZ0FycmF5KG5vcm1hbGl6ZWQsIGl0ZW0sIHByZXYpIHx8IGR5bmFtaWM7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgaXRlbSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICBpZiAodW53cmFwMikge1xuICAgICAgICB3aGlsZSAodHlwZW9mIGl0ZW0gPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgICBpdGVtID0gaXRlbSgpO1xuICAgICAgICBkeW5hbWljID0gbm9ybWFsaXplSW5jb21pbmdBcnJheShub3JtYWxpemVkLCBBcnJheS5pc0FycmF5KGl0ZW0pID8gaXRlbSA6IFtpdGVtXSwgQXJyYXkuaXNBcnJheShwcmV2KSA/IHByZXYgOiBbcHJldl0pIHx8IGR5bmFtaWM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub3JtYWxpemVkLnB1c2goaXRlbSk7XG4gICAgICAgIGR5bmFtaWMgPSB0cnVlO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IFN0cmluZyhpdGVtKTtcbiAgICAgIGlmIChwcmV2ICYmIHByZXYubm9kZVR5cGUgPT09IDMgJiYgcHJldi5kYXRhID09PSB2YWx1ZSkge1xuICAgICAgICBub3JtYWxpemVkLnB1c2gocHJldik7XG4gICAgICB9IGVsc2VcbiAgICAgICAgbm9ybWFsaXplZC5wdXNoKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHZhbHVlKSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBkeW5hbWljO1xufVxuZnVuY3Rpb24gYXBwZW5kTm9kZXMocGFyZW50LCBhcnJheSwgbWFya2VyID0gbnVsbCkge1xuICBmb3IgKGxldCBpMiA9IDAsIGxlbiA9IGFycmF5Lmxlbmd0aDsgaTIgPCBsZW47IGkyKyspXG4gICAgcGFyZW50Lmluc2VydEJlZm9yZShhcnJheVtpMl0sIG1hcmtlcik7XG59XG5mdW5jdGlvbiBjbGVhbkNoaWxkcmVuKHBhcmVudCwgY3VycmVudCwgbWFya2VyLCByZXBsYWNlbWVudCkge1xuICBpZiAobWFya2VyID09PSB2b2lkIDApXG4gICAgcmV0dXJuIHBhcmVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gIGNvbnN0IG5vZGUgPSByZXBsYWNlbWVudCB8fCBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtcbiAgaWYgKGN1cnJlbnQubGVuZ3RoKSB7XG4gICAgbGV0IGluc2VydGVkID0gZmFsc2U7XG4gICAgZm9yIChsZXQgaTIgPSBjdXJyZW50Lmxlbmd0aCAtIDE7IGkyID49IDA7IGkyLS0pIHtcbiAgICAgIGNvbnN0IGVsID0gY3VycmVudFtpMl07XG4gICAgICBpZiAobm9kZSAhPT0gZWwpIHtcbiAgICAgICAgY29uc3QgaXNQYXJlbnQgPSBlbC5wYXJlbnROb2RlID09PSBwYXJlbnQ7XG4gICAgICAgIGlmICghaW5zZXJ0ZWQgJiYgIWkyKVxuICAgICAgICAgIGlzUGFyZW50ID8gcGFyZW50LnJlcGxhY2VDaGlsZChub2RlLCBlbCkgOiBwYXJlbnQuaW5zZXJ0QmVmb3JlKG5vZGUsIG1hcmtlcik7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBpc1BhcmVudCAmJiBlbC5yZW1vdmUoKTtcbiAgICAgIH0gZWxzZVxuICAgICAgICBpbnNlcnRlZCA9IHRydWU7XG4gICAgfVxuICB9IGVsc2VcbiAgICBwYXJlbnQuaW5zZXJ0QmVmb3JlKG5vZGUsIG1hcmtlcik7XG4gIHJldHVybiBbbm9kZV07XG59XG5mdW5jdGlvbiBnZXRIeWRyYXRpb25LZXkoKSB7XG4gIGNvbnN0IGh5ZHJhdGUgPSBzaGFyZWRDb25maWcuY29udGV4dDtcbiAgcmV0dXJuIGAke2h5ZHJhdGUuaWR9JHtoeWRyYXRlLmNvdW50Kyt9YDtcbn1cbmNvbnN0IFNWR19OQU1FU1BBQ0UgPSBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7XG5mdW5jdGlvbiBjcmVhdGVFbGVtZW50KHRhZ05hbWUsIGlzU1ZHID0gZmFsc2UpIHtcbiAgcmV0dXJuIGlzU1ZHID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFNWR19OQU1FU1BBQ0UsIHRhZ05hbWUpIDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWdOYW1lKTtcbn1cbmZ1bmN0aW9uIFBvcnRhbChwcm9wcykge1xuICBjb25zdCB7XG4gICAgdXNlU2hhZG93XG4gIH0gPSBwcm9wcywgbWFya2VyID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJcIiksIG1vdW50ID0gcHJvcHMubW91bnQgfHwgZG9jdW1lbnQuYm9keTtcbiAgZnVuY3Rpb24gcmVuZGVyUG9ydGFsKCkge1xuICAgIGlmIChzaGFyZWRDb25maWcuY29udGV4dCkge1xuICAgICAgY29uc3QgW3MyLCBzZXRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgICAgIHF1ZXVlTWljcm90YXNrKCgpID0+IHNldCh0cnVlKSk7XG4gICAgICByZXR1cm4gKCkgPT4gczIoKSAmJiBwcm9wcy5jaGlsZHJlbjtcbiAgICB9IGVsc2VcbiAgICAgIHJldHVybiAoKSA9PiBwcm9wcy5jaGlsZHJlbjtcbiAgfVxuICBpZiAobW91bnQgaW5zdGFuY2VvZiBIVE1MSGVhZEVsZW1lbnQpIHtcbiAgICBjb25zdCBbY2xlYW4sIHNldENsZWFuXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gICAgY29uc3QgY2xlYW51cCA9ICgpID0+IHNldENsZWFuKHRydWUpO1xuICAgIGNyZWF0ZVJvb3QoKGRpc3Bvc2UyKSA9PiBpbnNlcnQobW91bnQsICgpID0+ICFjbGVhbigpID8gcmVuZGVyUG9ydGFsKCkoKSA6IGRpc3Bvc2UyKCksIG51bGwpKTtcbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0KVxuICAgICAgICBxdWV1ZU1pY3JvdGFzayhjbGVhbnVwKTtcbiAgICAgIGVsc2VcbiAgICAgICAgY2xlYW51cCgpO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQocHJvcHMuaXNTVkcgPyBcImdcIiA6IFwiZGl2XCIsIHByb3BzLmlzU1ZHKSwgcmVuZGVyUm9vdCA9IHVzZVNoYWRvdyAmJiBjb250YWluZXIuYXR0YWNoU2hhZG93ID8gY29udGFpbmVyLmF0dGFjaFNoYWRvdyh7XG4gICAgICBtb2RlOiBcIm9wZW5cIlxuICAgIH0pIDogY29udGFpbmVyO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb250YWluZXIsIFwiXyRob3N0XCIsIHtcbiAgICAgIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIG1hcmtlci5wYXJlbnROb2RlO1xuICAgICAgfSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIGluc2VydChyZW5kZXJSb290LCByZW5kZXJQb3J0YWwoKSk7XG4gICAgbW91bnQuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcbiAgICBwcm9wcy5yZWYgJiYgcHJvcHMucmVmKGNvbnRhaW5lcik7XG4gICAgb25DbGVhbnVwKCgpID0+IG1vdW50LnJlbW92ZUNoaWxkKGNvbnRhaW5lcikpO1xuICB9XG4gIHJldHVybiBtYXJrZXI7XG59XG5mdW5jdGlvbiBEeW5hbWljKHByb3BzKSB7XG4gIGNvbnN0IFtwMiwgb3RoZXJzXSA9IHNwbGl0UHJvcHMocHJvcHMsIFtcImNvbXBvbmVudFwiXSk7XG4gIGNvbnN0IGNhY2hlZCA9IGNyZWF0ZU1lbW8oKCkgPT4gcDIuY29tcG9uZW50KTtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IGNvbXBvbmVudCA9IGNhY2hlZCgpO1xuICAgIHN3aXRjaCAodHlwZW9mIGNvbXBvbmVudCkge1xuICAgICAgY2FzZSBcImZ1bmN0aW9uXCI6XG4gICAgICAgIHJldHVybiB1bnRyYWNrKCgpID0+IGNvbXBvbmVudChvdGhlcnMpKTtcbiAgICAgIGNhc2UgXCJzdHJpbmdcIjpcbiAgICAgICAgY29uc3QgaXNTdmcgPSBTVkdFbGVtZW50cy5oYXMoY29tcG9uZW50KTtcbiAgICAgICAgY29uc3QgZWwgPSBzaGFyZWRDb25maWcuY29udGV4dCA/IGdldE5leHRFbGVtZW50KCkgOiBjcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgaXNTdmcpO1xuICAgICAgICBzcHJlYWQoZWwsIG90aGVycywgaXNTdmcpO1xuICAgICAgICByZXR1cm4gZWw7XG4gICAgfVxuICB9KTtcbn1cbnZhciBUSEVNRSA9IC8qIEBfX1BVUkVfXyAqLyAoKFRIRU1FMikgPT4ge1xuICBUSEVNRTJbXCJEQVJLXCJdID0gXCJEQVJLXCI7XG4gIFRIRU1FMltcIkxJR0hUXCJdID0gXCJMSUdIVFwiO1xuICByZXR1cm4gVEhFTUUyO1xufSkoVEhFTUUgfHwge30pO1xubGV0IGUgPSB7IGRhdGE6IFwiXCIgfSwgdCA9ICh0MikgPT4gXCJvYmplY3RcIiA9PSB0eXBlb2Ygd2luZG93ID8gKCh0MiA/IHQyLnF1ZXJ5U2VsZWN0b3IoXCIjX2dvb2JlclwiKSA6IHdpbmRvdy5fZ29vYmVyKSB8fCBPYmplY3QuYXNzaWduKCh0MiB8fCBkb2N1bWVudC5oZWFkKS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIikpLCB7IGlubmVySFRNTDogXCIgXCIsIGlkOiBcIl9nb29iZXJcIiB9KSkuZmlyc3RDaGlsZCA6IHQyIHx8IGUsIGwgPSAvKD86KFtcXHUwMDgwLVxcdUZGRkZcXHctJUBdKykgKjo/ICooW157O10rPyk7fChbXjt9e10qPykgKnspfCh9XFxzKikvZywgYSA9IC9cXC9cXCpbXl0qP1xcKlxcL3wgICsvZywgbiA9IC9cXG4rL2csIG8gPSAoZTIsIHQyKSA9PiB7XG4gIGxldCByID0gXCJcIiwgbDIgPSBcIlwiLCBhMiA9IFwiXCI7XG4gIGZvciAobGV0IG4yIGluIGUyKSB7XG4gICAgbGV0IGMyID0gZTJbbjJdO1xuICAgIFwiQFwiID09IG4yWzBdID8gXCJpXCIgPT0gbjJbMV0gPyByID0gbjIgKyBcIiBcIiArIGMyICsgXCI7XCIgOiBsMiArPSBcImZcIiA9PSBuMlsxXSA/IG8oYzIsIG4yKSA6IG4yICsgXCJ7XCIgKyBvKGMyLCBcImtcIiA9PSBuMlsxXSA/IFwiXCIgOiB0MikgKyBcIn1cIiA6IFwib2JqZWN0XCIgPT0gdHlwZW9mIGMyID8gbDIgKz0gbyhjMiwgdDIgPyB0Mi5yZXBsYWNlKC8oW14sXSkrL2csIChlMykgPT4gbjIucmVwbGFjZSgvKF46LiopfChbXixdKSsvZywgKHQzKSA9PiAvJi8udGVzdCh0MykgPyB0My5yZXBsYWNlKC8mL2csIGUzKSA6IGUzID8gZTMgKyBcIiBcIiArIHQzIDogdDMpKSA6IG4yKSA6IG51bGwgIT0gYzIgJiYgKG4yID0gL14tLS8udGVzdChuMikgPyBuMiA6IG4yLnJlcGxhY2UoL1tBLVpdL2csIFwiLSQmXCIpLnRvTG93ZXJDYXNlKCksIGEyICs9IG8ucCA/IG8ucChuMiwgYzIpIDogbjIgKyBcIjpcIiArIGMyICsgXCI7XCIpO1xuICB9XG4gIHJldHVybiByICsgKHQyICYmIGEyID8gdDIgKyBcIntcIiArIGEyICsgXCJ9XCIgOiBhMikgKyBsMjtcbn0sIGMgPSB7fSwgcyA9IChlMikgPT4ge1xuICBpZiAoXCJvYmplY3RcIiA9PSB0eXBlb2YgZTIpIHtcbiAgICBsZXQgdDIgPSBcIlwiO1xuICAgIGZvciAobGV0IHIgaW4gZTIpXG4gICAgICB0MiArPSByICsgcyhlMltyXSk7XG4gICAgcmV0dXJuIHQyO1xuICB9XG4gIHJldHVybiBlMjtcbn0sIGkgPSAoZTIsIHQyLCByLCBpMiwgcDIpID0+IHtcbiAgbGV0IHUyID0gcyhlMiksIGQgPSBjW3UyXSB8fCAoY1t1Ml0gPSAoKGUzKSA9PiB7XG4gICAgbGV0IHQzID0gMCwgcjIgPSAxMTtcbiAgICBmb3IgKDsgdDMgPCBlMy5sZW5ndGg7IClcbiAgICAgIHIyID0gMTAxICogcjIgKyBlMy5jaGFyQ29kZUF0KHQzKyspID4+PiAwO1xuICAgIHJldHVybiBcImdvXCIgKyByMjtcbiAgfSkodTIpKTtcbiAgaWYgKCFjW2RdKSB7XG4gICAgbGV0IHQzID0gdTIgIT09IGUyID8gZTIgOiAoKGUzKSA9PiB7XG4gICAgICBsZXQgdDQsIHIyLCBvMiA9IFt7fV07XG4gICAgICBmb3IgKDsgdDQgPSBsLmV4ZWMoZTMucmVwbGFjZShhLCBcIlwiKSk7IClcbiAgICAgICAgdDRbNF0gPyBvMi5zaGlmdCgpIDogdDRbM10gPyAocjIgPSB0NFszXS5yZXBsYWNlKG4sIFwiIFwiKS50cmltKCksIG8yLnVuc2hpZnQobzJbMF1bcjJdID0gbzJbMF1bcjJdIHx8IHt9KSkgOiBvMlswXVt0NFsxXV0gPSB0NFsyXS5yZXBsYWNlKG4sIFwiIFwiKS50cmltKCk7XG4gICAgICByZXR1cm4gbzJbMF07XG4gICAgfSkoZTIpO1xuICAgIGNbZF0gPSBvKHAyID8geyBbXCJAa2V5ZnJhbWVzIFwiICsgZF06IHQzIH0gOiB0MywgciA/IFwiXCIgOiBcIi5cIiArIGQpO1xuICB9XG4gIGxldCBmID0gciAmJiBjLmcgPyBjLmcgOiBudWxsO1xuICByZXR1cm4gciAmJiAoYy5nID0gY1tkXSksICgoZTMsIHQzLCByMiwgbDIpID0+IHtcbiAgICBsMiA/IHQzLmRhdGEgPSB0My5kYXRhLnJlcGxhY2UobDIsIGUzKSA6IC0xID09PSB0My5kYXRhLmluZGV4T2YoZTMpICYmICh0My5kYXRhID0gcjIgPyBlMyArIHQzLmRhdGEgOiB0My5kYXRhICsgZTMpO1xuICB9KShjW2RdLCB0MiwgaTIsIGYpLCBkO1xufSwgcCA9IChlMiwgdDIsIHIpID0+IGUyLnJlZHVjZSgoZTMsIGwyLCBhMikgPT4ge1xuICBsZXQgbjIgPSB0MlthMl07XG4gIGlmIChuMiAmJiBuMi5jYWxsKSB7XG4gICAgbGV0IGU0ID0gbjIociksIHQzID0gZTQgJiYgZTQucHJvcHMgJiYgZTQucHJvcHMuY2xhc3NOYW1lIHx8IC9eZ28vLnRlc3QoZTQpICYmIGU0O1xuICAgIG4yID0gdDMgPyBcIi5cIiArIHQzIDogZTQgJiYgXCJvYmplY3RcIiA9PSB0eXBlb2YgZTQgPyBlNC5wcm9wcyA/IFwiXCIgOiBvKGU0LCBcIlwiKSA6IGZhbHNlID09PSBlNCA/IFwiXCIgOiBlNDtcbiAgfVxuICByZXR1cm4gZTMgKyBsMiArIChudWxsID09IG4yID8gXCJcIiA6IG4yKTtcbn0sIFwiXCIpO1xuZnVuY3Rpb24gdShlMikge1xuICBsZXQgciA9IHRoaXMgfHwge30sIGwyID0gZTIuY2FsbCA/IGUyKHIucCkgOiBlMjtcbiAgcmV0dXJuIGkobDIudW5zaGlmdCA/IGwyLnJhdyA/IHAobDIsIFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSwgci5wKSA6IGwyLnJlZHVjZSgoZTMsIHQyKSA9PiBPYmplY3QuYXNzaWduKGUzLCB0MiAmJiB0Mi5jYWxsID8gdDIoci5wKSA6IHQyKSwge30pIDogbDIsIHQoci50YXJnZXQpLCByLmcsIHIubywgci5rKTtcbn1cbnUuYmluZCh7IGc6IDEgfSk7XG5sZXQgaCA9IHUuYmluZCh7IGs6IDEgfSk7XG5jb25zdCBUaGVtZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5mdW5jdGlvbiBUaGVtZVByb3ZpZGVyKHByb3BzKSB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoVGhlbWVDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IHByb3BzLnRoZW1lLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jaGlsZHJlbjtcbiAgICB9XG4gIH0pO1xufVxuZnVuY3Rpb24gdXNlVGhlbWUoKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG59XG5mdW5jdGlvbiBtYWtlU3R5bGVkKHRhZykge1xuICBsZXQgX2N0eCA9IHRoaXMgfHwge307XG4gIHJldHVybiAoLi4uYXJncykgPT4ge1xuICAgIGNvbnN0IFN0eWxlZCA9IChwcm9wcykgPT4ge1xuICAgICAgY29uc3QgdGhlbWUgPSB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG4gICAgICBjb25zdCB3aXRoVGhlbWUgPSBtZXJnZVByb3BzKHByb3BzLCB7IHRoZW1lIH0pO1xuICAgICAgY29uc3QgY2xvbmUgPSBtZXJnZVByb3BzKHdpdGhUaGVtZSwge1xuICAgICAgICBnZXQgY2xhc3MoKSB7XG4gICAgICAgICAgY29uc3QgcENsYXNzID0gd2l0aFRoZW1lLmNsYXNzLCBhcHBlbmQgPSBcImNsYXNzXCIgaW4gd2l0aFRoZW1lICYmIC9eZ29bMC05XSsvLnRlc3QocENsYXNzKTtcbiAgICAgICAgICBsZXQgY2xhc3NOYW1lMiA9IHUuYXBwbHkoXG4gICAgICAgICAgICB7IHRhcmdldDogX2N0eC50YXJnZXQsIG86IGFwcGVuZCwgcDogd2l0aFRoZW1lLCBnOiBfY3R4LmcgfSxcbiAgICAgICAgICAgIGFyZ3NcbiAgICAgICAgICApO1xuICAgICAgICAgIHJldHVybiBbcENsYXNzLCBjbGFzc05hbWUyXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgY29uc3QgW2xvY2FsLCBuZXdQcm9wc10gPSBzcGxpdFByb3BzKGNsb25lLCBbXCJhc1wiLCBcInRoZW1lXCJdKTtcbiAgICAgIGNvbnN0IGh0bWxQcm9wcyA9IG5ld1Byb3BzO1xuICAgICAgY29uc3QgY3JlYXRlVGFnID0gbG9jYWwuYXMgfHwgdGFnO1xuICAgICAgbGV0IGVsO1xuICAgICAgaWYgKHR5cGVvZiBjcmVhdGVUYWcgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBlbCA9IGNyZWF0ZVRhZyhodG1sUHJvcHMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAge1xuICAgICAgICAgIGlmIChfY3R4LmcgPT0gMSkge1xuICAgICAgICAgICAgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGNyZWF0ZVRhZyk7XG4gICAgICAgICAgICBzcHJlYWQoZWwsIGh0bWxQcm9wcyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsID0gRHluYW1pYyhtZXJnZVByb3BzKHsgY29tcG9uZW50OiBjcmVhdGVUYWcgfSwgaHRtbFByb3BzKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gZWw7XG4gICAgfTtcbiAgICBTdHlsZWQuY2xhc3MgPSAocHJvcHMpID0+IHtcbiAgICAgIHJldHVybiB1bnRyYWNrKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIHUuYXBwbHkoeyB0YXJnZXQ6IF9jdHgudGFyZ2V0LCBwOiBwcm9wcywgZzogX2N0eC5nIH0sIGFyZ3MpO1xuICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gU3R5bGVkO1xuICB9O1xufVxuY29uc3Qgc3R5bGVkID0gbmV3IFByb3h5KG1ha2VTdHlsZWQsIHtcbiAgZ2V0KHRhcmdldCwgdGFnKSB7XG4gICAgcmV0dXJuIHRhcmdldCh0YWcpO1xuICB9XG59KTtcbmZ1bmN0aW9uIGNyZWF0ZUdsb2JhbFN0eWxlcygpIHtcbiAgY29uc3QgZm4gPSBtYWtlU3R5bGVkLmNhbGwoeyBnOiAxIH0sIFwiZGl2XCIpLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gIHJldHVybiBmdW5jdGlvbiBHbG9iYWxTdHlsZXMyKHByb3BzKSB7XG4gICAgZm4ocHJvcHMpO1xuICAgIHJldHVybiBudWxsO1xuICB9O1xufVxuY29uc3QgZ2xvYmFsU3R5bGVzVGFnID0gXCJ0Yy1yb290XCI7XG5jb25zdCBkaXNhYmxlU2Nyb2xsQ2xhc3MgPSBcInRjLWRpc2FibGUtc2Nyb2xsXCI7XG5jb25zdCB1c2luZ01vdXNlQ2xhc3MgPSBcInRjLXVzaW5nLW1vdXNlXCI7XG5jb25zdCBHbG9iYWxTdHlsZXMgPSAoKSA9PiB7XG4gIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCAoKSA9PiBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQodXNpbmdNb3VzZUNsYXNzKSk7XG4gIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgKGV2ZW50KSA9PiB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gXCJUYWJcIikge1xuICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKHVzaW5nTW91c2VDbGFzcyk7XG4gICAgfVxuICB9KTtcbiAgY29uc3QgU3R5bGVzID0gY3JlYXRlR2xvYmFsU3R5bGVzYFxuICAgICR7Z2xvYmFsU3R5bGVzVGFnfSAqIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBcbiAgICAgICAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1JvYm90bycsICdIZWx2ZXRpY2EgTmV1ZScsIEFyaWFsLCBUYWhvbWEsIFZlcmRhbmEsIHNhbnMtc2VyaWY7XG4gICAgICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAgICAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOyAgICAgICAgXG4gICAgICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgfVxuICAgIFxuICAgICR7Z2xvYmFsU3R5bGVzVGFnfSBpbWcge1xuICAgICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcbiAgICB9ICAgXG4gXG4gICAgJHtnbG9iYWxTdHlsZXNUYWd9ICo6Zm9jdXMge1xuICAgICAgICBvdXRsaW5lOiAjMDhmIGF1dG8gMnB4O1xuICAgIH1cbiAgICBcbiAgICAke2dsb2JhbFN0eWxlc1RhZ30gbGkge1xuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIH1cbiAgICBcbiAgICAke2dsb2JhbFN0eWxlc1RhZ30gYnV0dG9uIHtcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG4gICAgXG4gICAgYm9keS4ke2Rpc2FibGVTY3JvbGxDbGFzc30ge1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7IFxuICAgICAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgIH1cbiAgICBcbiAgICBib2R5LiR7dXNpbmdNb3VzZUNsYXNzfSAke2dsb2JhbFN0eWxlc1RhZ30gKjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgfVxuYDtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdHlsZXMsIHt9KTtcbn07XG5mdW5jdGlvbiBoZXhUb1JnYihoZXgpIHtcbiAgaWYgKGhleFswXSA9PT0gXCIjXCIpIHtcbiAgICBoZXggPSBoZXguc2xpY2UoMSk7XG4gIH1cbiAgY29uc3QgYmlnaW50ID0gcGFyc2VJbnQoaGV4LCAxNik7XG4gIGNvbnN0IHIgPSBiaWdpbnQgPj4gMTYgJiAyNTU7XG4gIGNvbnN0IGcgPSBiaWdpbnQgPj4gOCAmIDI1NTtcbiAgY29uc3QgYiA9IGJpZ2ludCAmIDI1NTtcbiAgcmV0dXJuIFtyLCBnLCBiXS5qb2luKFwiLFwiKTtcbn1cbmZ1bmN0aW9uIHJnYmEoY29sb3IsIG9wYWNpdHkpIHtcbiAgaWYgKGNvbG9yWzBdID09PSBcIiNcIikge1xuICAgIGNvbG9yID0gaGV4VG9SZ2IoY29sb3IpO1xuICB9XG4gIHJldHVybiBgcmdiYSgke2NvbG9yfSwgJHtvcGFjaXR5fSlgO1xufVxuZnVuY3Rpb24gdG9QeCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKSArIFwicHhcIjtcbn1cbmNvbnN0IF9Jbk1lbW9yeVN0b3JhZ2UgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdG9yYWdlXCIsIHt9KTtcbiAgfVxuICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XG4gICAgaWYgKCFfSW5NZW1vcnlTdG9yYWdlLmluc3RhbmNlKSB7XG4gICAgICBfSW5NZW1vcnlTdG9yYWdlLmluc3RhbmNlID0gbmV3IF9Jbk1lbW9yeVN0b3JhZ2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIF9Jbk1lbW9yeVN0b3JhZ2UuaW5zdGFuY2U7XG4gIH1cbiAgZ2V0IGxlbmd0aCgpIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5zdG9yYWdlKS5sZW5ndGg7XG4gIH1cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5zdG9yYWdlID0ge307XG4gIH1cbiAgZ2V0SXRlbShrZXkpIHtcbiAgICB2YXIgX2EyO1xuICAgIHJldHVybiAoX2EyID0gdGhpcy5zdG9yYWdlW2tleV0pICE9IG51bGwgPyBfYTIgOiBudWxsO1xuICB9XG4gIGtleShpbmRleCkge1xuICAgIHZhciBfYTI7XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMuc3RvcmFnZSk7XG4gICAgaWYgKGluZGV4IDwgMCB8fCBpbmRleCA+PSBrZXlzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiAoX2EyID0ga2V5c1tpbmRleF0pICE9IG51bGwgPyBfYTIgOiBudWxsO1xuICB9XG4gIHJlbW92ZUl0ZW0oa2V5KSB7XG4gICAgZGVsZXRlIHRoaXMuc3RvcmFnZVtrZXldO1xuICB9XG4gIHNldEl0ZW0oa2V5LCB2YWx1ZSkge1xuICAgIHRoaXMuc3RvcmFnZVtrZXldID0gdmFsdWU7XG4gIH1cbn07XG5sZXQgSW5NZW1vcnlTdG9yYWdlID0gX0luTWVtb3J5U3RvcmFnZTtcbl9fcHVibGljRmllbGQoSW5NZW1vcnlTdG9yYWdlLCBcImluc3RhbmNlXCIpO1xuY2xhc3MgVG9uQ29ubmVjdFVJRXJyb3IgZXh0ZW5kcyBUb25Db25uZWN0RXJyb3Ige1xuICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgc3VwZXIoLi4uYXJncyk7XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIFRvbkNvbm5lY3RVSUVycm9yLnByb3RvdHlwZSk7XG4gIH1cbn1cbmZ1bmN0aW9uIGxvZ0RlYnVnKC4uLmFyZ3MpIHtcbiAge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmRlYnVnKFwiW1RPTl9DT05ORUNUX1VJXVwiLCAuLi5hcmdzKTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gbG9nRXJyb3IoLi4uYXJncykge1xuICB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJbVE9OX0NPTk5FQ1RfVUldXCIsIC4uLmFyZ3MpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBsb2dXYXJuaW5nKC4uLmFyZ3MpIHtcbiAge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJbVE9OX0NPTk5FQ1RfVUldXCIsIC4uLmFyZ3MpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBvcGVuTGluayhocmVmLCB0YXJnZXQgPSBcIl9zZWxmXCIpIHtcbiAgbG9nRGVidWcoXCJvcGVuTGlua1wiLCBocmVmLCB0YXJnZXQpO1xuICB3aW5kb3cub3BlbihocmVmLCB0YXJnZXQsIFwibm9vcGVuZXIgbm9yZWZlcnJlclwiKTtcbn1cbmZ1bmN0aW9uIG9wZW5MaW5rQmxhbmsoaHJlZikge1xuICBvcGVuTGluayhocmVmLCBcIl9ibGFua1wiKTtcbn1cbmZ1bmN0aW9uIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayhocmVmLCBmYWxsYmFjaykge1xuICBjb25zdCBkb0ZhbGxiYWNrID0gKCkgPT4ge1xuICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikgfHwgaXNPUyhcImFuZHJvaWRcIikgJiYgaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBmYWxsYmFjaygpO1xuICB9O1xuICBjb25zdCBmYWxsYmFja1RpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IGRvRmFsbGJhY2soKSwgMjAwKTtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsICgpID0+IGNsZWFyVGltZW91dChmYWxsYmFja1RpbWVvdXQpLCB7IG9uY2U6IHRydWUgfSk7XG4gIG9wZW5MaW5rKGhyZWYsIFwiX3NlbGZcIik7XG59XG5mdW5jdGlvbiBnZXRTeXN0ZW1UaGVtZSgpIHtcbiAgaWYgKHdpbmRvdy5tYXRjaE1lZGlhICYmIHdpbmRvdy5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBsaWdodClcIikubWF0Y2hlcykge1xuICAgIHJldHVybiBUSEVNRS5MSUdIVDtcbiAgfVxuICByZXR1cm4gVEhFTUUuREFSSztcbn1cbmZ1bmN0aW9uIHN1YnNjcmliZVRvVGhlbWVDaGFuZ2UoY2FsbGJhY2spIHtcbiAgY29uc3QgaGFuZGxlciA9IChldmVudCkgPT4gY2FsbGJhY2soZXZlbnQubWF0Y2hlcyA/IFRIRU1FLkRBUksgOiBUSEVNRS5MSUdIVCk7XG4gIHdpbmRvdy5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIGhhbmRsZXIpO1xuICByZXR1cm4gKCkgPT4gd2luZG93Lm1hdGNoTWVkaWEoXCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspXCIpLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgaGFuZGxlcik7XG59XG5mdW5jdGlvbiBkaXNhYmxlU2Nyb2xsKCkge1xuICBpZiAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbEhlaWdodCA9PT0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCkge1xuICAgIHJldHVybjtcbiAgfVxuICBkb2N1bWVudC5ib2R5LnN0eWxlLnRvcCA9IHRvUHgoLWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3ApO1xuICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoZGlzYWJsZVNjcm9sbENsYXNzKTtcbn1cbmZ1bmN0aW9uIGVuYWJsZVNjcm9sbCgpIHtcbiAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKGRpc2FibGVTY3JvbGxDbGFzcyk7XG4gIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUbyh7IHRvcDogLXBhcnNlRmxvYXQoZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5ib2R5KS50b3ApIH0pO1xuICBkb2N1bWVudC5ib2R5LnN0eWxlLnRvcCA9IFwiYXV0b1wiO1xufVxuZnVuY3Rpb24gZml4TW9iaWxlU2FmYXJpQWN0aXZlVHJhbnNpdGlvbigpIHtcbiAgaWYgKCFkb2N1bWVudC5ib2R5Lmhhc0F0dHJpYnV0ZShcIm9udG91Y2hzdGFydFwiKSkge1xuICAgIGRvY3VtZW50LmJvZHkuc2V0QXR0cmlidXRlKFwib250b3VjaHN0YXJ0XCIsIFwiXCIpO1xuICB9XG59XG5mdW5jdGlvbiBkZWZpbmVTdHlsZXNSb290KCkge1xuICBjdXN0b21FbGVtZW50cy5kZWZpbmUoZ2xvYmFsU3R5bGVzVGFnLCBjbGFzcyBUY1Jvb3RFbGVtZW50IGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICB9KTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZU1hY3JvdGFzayhjYWxsYmFjaykge1xuICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgIHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVzb2x2ZSkpO1xuICAgIGNhbGxiYWNrKCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gY3JlYXRlTWFjcm90YXNrQXN5bmMoY2FsbGJhY2spIHtcbiAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICB5aWVsZCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlc29sdmUpKTtcbiAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgfSk7XG59XG5mdW5jdGlvbiBwcmVsb2FkSW1hZ2VzKGltYWdlcykge1xuICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gXCJjb21wbGV0ZVwiKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IGNyZWF0ZU1hY3JvdGFzaygoKSA9PiBwcmVsb2FkSW1hZ2VzKGltYWdlcykpLCB7XG4gICAgICBvbmNlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgaW1hZ2VzLmZvckVhY2goKGltZykgPT4ge1xuICAgICAgY29uc3Qgbm9kZSA9IG5ldyB3aW5kb3cuSW1hZ2UoKTtcbiAgICAgIG5vZGUuc3JjID0gaW1nO1xuICAgIH0pO1xuICB9XG59XG5mdW5jdGlvbiBnZXRXaW5kb3ckMSgpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4gd2luZG93O1xuICB9XG4gIHJldHVybiB2b2lkIDA7XG59XG5mdW5jdGlvbiB0cnlHZXRMb2NhbFN0b3JhZ2UoKSB7XG4gIGlmIChpc0xvY2FsU3RvcmFnZUF2YWlsYWJsZSgpKSB7XG4gICAgcmV0dXJuIGxvY2FsU3RvcmFnZTtcbiAgfVxuICBpZiAoaXNOb2RlSnMoKSkge1xuICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihcbiAgICAgIFwiYGxvY2FsU3RvcmFnZWAgaXMgdW5hdmFpbGFibGUsIGJ1dCBpdCBpcyByZXF1aXJlZCBmb3IgVG9uQ29ubmVjdC4gRm9yIG1vcmUgZGV0YWlscywgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS90b24tY29ubmVjdC9zZGsvdHJlZS9tYWluL3BhY2thZ2VzL3NkayNpbml0LWNvbm5lY3RvclwiXG4gICAgKTtcbiAgfVxuICByZXR1cm4gSW5NZW1vcnlTdG9yYWdlLmdldEluc3RhbmNlKCk7XG59XG5mdW5jdGlvbiBpc0xvY2FsU3RvcmFnZUF2YWlsYWJsZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gdHlwZW9mIGxvY2FsU3RvcmFnZSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgfSBjYXRjaCAoZTIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbmZ1bmN0aW9uIGlzTm9kZUpzKCkge1xuICByZXR1cm4gdHlwZW9mIHByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIgJiYgcHJvY2Vzcy52ZXJzaW9ucyAhPSBudWxsICYmIHByb2Nlc3MudmVyc2lvbnMubm9kZSAhPSBudWxsO1xufVxuZnVuY3Rpb24gZ2V0VXNlckFnZW50KCkge1xuICB2YXIgX2EyLCBfYjIsIF9jMjtcbiAgY29uc3QgcmVzdWx0cyA9IG5ldyBVQVBhcnNlcigpLmdldFJlc3VsdCgpO1xuICBjb25zdCBvc05hbWUgPSAoX2EyID0gcmVzdWx0cy5vcy5uYW1lKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRvTG93ZXJDYXNlKCk7XG4gIGNvbnN0IGRldmljZU1vZGVsID0gKF9iMiA9IHJlc3VsdHMuZGV2aWNlLm1vZGVsKSA9PSBudWxsID8gdm9pZCAwIDogX2IyLnRvTG93ZXJDYXNlKCk7XG4gIGxldCBvcztcbiAgc3dpdGNoICh0cnVlKSB7XG4gICAgY2FzZSBkZXZpY2VNb2RlbCA9PT0gXCJpcGFkXCI6XG4gICAgICBvcyA9IFwiaXBhZFwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBvc05hbWUgPT09IFwiaW9zXCI6XG4gICAgICBvcyA9IFwiaW9zXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIG9zTmFtZSA9PT0gXCJhbmRyb2lkXCI6XG4gICAgICBvcyA9IFwiYW5kcm9pZFwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBvc05hbWUgPT09IFwibWFjIG9zXCI6XG4gICAgICBvcyA9IFwibWFjb3NcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2Ugb3NOYW1lID09PSBcImxpbnV4XCI6XG4gICAgICBvcyA9IFwibGludXhcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgKG9zTmFtZSA9PSBudWxsID8gdm9pZCAwIDogb3NOYW1lLmluY2x1ZGVzKFwid2luZG93c1wiKSk6XG4gICAgICBvcyA9IFwid2luZG93c1wiO1xuICAgICAgYnJlYWs7XG4gIH1cbiAgY29uc3QgYnJvd3Nlck5hbWUgPSAoX2MyID0gcmVzdWx0cy5icm93c2VyLm5hbWUpID09IG51bGwgPyB2b2lkIDAgOiBfYzIudG9Mb3dlckNhc2UoKTtcbiAgbGV0IGJyb3dzZXI7XG4gIHN3aXRjaCAodHJ1ZSkge1xuICAgIGNhc2UgYnJvd3Nlck5hbWUgPT09IFwiY2hyb21lXCI6XG4gICAgICBicm93c2VyID0gXCJjaHJvbWVcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgYnJvd3Nlck5hbWUgPT09IFwiZmlyZWZveFwiOlxuICAgICAgYnJvd3NlciA9IFwiZmlyZWZveFwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAoYnJvd3Nlck5hbWUgPT0gbnVsbCA/IHZvaWQgMCA6IGJyb3dzZXJOYW1lLmluY2x1ZGVzKFwic2FmYXJpXCIpKTpcbiAgICAgIGJyb3dzZXIgPSBcInNhZmFyaVwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAoYnJvd3Nlck5hbWUgPT0gbnVsbCA/IHZvaWQgMCA6IGJyb3dzZXJOYW1lLmluY2x1ZGVzKFwib3BlcmFcIikpOlxuICAgICAgYnJvd3NlciA9IFwib3BlcmFcIjtcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiB7XG4gICAgb3MsXG4gICAgYnJvd3NlclxuICB9O1xufVxuZnVuY3Rpb24gaXNPUyguLi5vcykge1xuICByZXR1cm4gb3MuaW5jbHVkZXMoZ2V0VXNlckFnZW50KCkub3MpO1xufVxuZnVuY3Rpb24gaXNCcm93c2VyKC4uLmJyb3dzZXIpIHtcbiAgcmV0dXJuIGJyb3dzZXIuaW5jbHVkZXMoZ2V0VXNlckFnZW50KCkuYnJvd3Nlcik7XG59XG5mdW5jdGlvbiB0b0RlZXBsaW5rKHVuaXZlcnNhbExpbmssIGRlZXBsaW5rKSB7XG4gIGNvbnN0IHVybCA9IG5ldyBVUkwodW5pdmVyc2FsTGluayk7XG4gIHJldHVybiBkZWVwbGluayArIHVybC5zZWFyY2g7XG59XG5jbGFzcyBXYWxsZXRJbmZvU3RvcmFnZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJsb2NhbFN0b3JhZ2VcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0b3JhZ2VLZXlcIiwgXCJ0b24tY29ubmVjdC11aV93YWxsZXQtaW5mb1wiKTtcbiAgICB0aGlzLmxvY2FsU3RvcmFnZSA9IHRyeUdldExvY2FsU3RvcmFnZSgpO1xuICB9XG4gIHNldFdhbGxldEluZm8od2FsbGV0SW5mbykge1xuICAgIHRoaXMubG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5zdG9yYWdlS2V5LCBKU09OLnN0cmluZ2lmeSh3YWxsZXRJbmZvKSk7XG4gIH1cbiAgZ2V0V2FsbGV0SW5mbygpIHtcbiAgICBjb25zdCB3YWxsZXRJbmZvU3RyaW5nID0gdGhpcy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXkpO1xuICAgIGlmICghd2FsbGV0SW5mb1N0cmluZykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBKU09OLnBhcnNlKHdhbGxldEluZm9TdHJpbmcpO1xuICB9XG4gIHJlbW92ZVdhbGxldEluZm8oKSB7XG4gICAgdGhpcy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLnN0b3JhZ2VLZXkpO1xuICB9XG59XG5jbGFzcyBQcmVmZXJyZWRXYWxsZXRTdG9yYWdlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImxvY2FsU3RvcmFnZVwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RvcmFnZUtleVwiLCBcInRvbi1jb25uZWN0LXVpX3ByZWZlcnJlZC13YWxsZXRcIik7XG4gICAgdGhpcy5sb2NhbFN0b3JhZ2UgPSB0cnlHZXRMb2NhbFN0b3JhZ2UoKTtcbiAgfVxuICBzZXRQcmVmZXJyZWRXYWxsZXRBcHBOYW1lKG5hbWUpIHtcbiAgICB0aGlzLmxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuc3RvcmFnZUtleSwgbmFtZSk7XG4gIH1cbiAgZ2V0UHJlZmVycmVkV2FsbGV0QXBwTmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXkpIHx8IHZvaWQgMDtcbiAgfVxufVxuY2xhc3MgTGFzdFNlbGVjdGVkV2FsbGV0SW5mb1N0b3JhZ2Uge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibG9jYWxTdG9yYWdlXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdG9yYWdlS2V5XCIsIFwidG9uLWNvbm5lY3QtdWlfbGFzdC1zZWxlY3RlZC13YWxsZXQtaW5mb1wiKTtcbiAgICB0aGlzLmxvY2FsU3RvcmFnZSA9IHRyeUdldExvY2FsU3RvcmFnZSgpO1xuICB9XG4gIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8od2FsbGV0SW5mbykge1xuICAgIHRoaXMubG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5zdG9yYWdlS2V5LCBKU09OLnN0cmluZ2lmeSh3YWxsZXRJbmZvKSk7XG4gIH1cbiAgZ2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbygpIHtcbiAgICBjb25zdCB3YWxsZXRJbmZvU3RyaW5nID0gdGhpcy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXkpO1xuICAgIGlmICghd2FsbGV0SW5mb1N0cmluZykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBKU09OLnBhcnNlKHdhbGxldEluZm9TdHJpbmcpO1xuICB9XG4gIHJlbW92ZUxhc3RTZWxlY3RlZFdhbGxldEluZm8oKSB7XG4gICAgdGhpcy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLnN0b3JhZ2VLZXkpO1xuICB9XG59XG5jb25zdCBbd2FsbGV0c01vZGFsU3RhdGUsIHNldFdhbGxldHNNb2RhbFN0YXRlXSA9IGNyZWF0ZVNpZ25hbCh7XG4gIHN0YXR1czogXCJjbG9zZWRcIixcbiAgY2xvc2VSZWFzb246IG51bGxcbn0pO1xuY29uc3QgZ2V0V2FsbGV0c01vZGFsSXNPcGVuZWQgPSBjcmVhdGVNZW1vKCgpID0+IHdhbGxldHNNb2RhbFN0YXRlKCkuc3RhdHVzID09PSBcIm9wZW5lZFwiKTtcbmNvbnN0IFtzaW5nbGVXYWxsZXRNb2RhbFN0YXRlLCBzZXRTaW5nbGVXYWxsZXRNb2RhbFN0YXRlXSA9IGNyZWF0ZVNpZ25hbCh7XG4gIHN0YXR1czogXCJjbG9zZWRcIixcbiAgY2xvc2VSZWFzb246IG51bGxcbn0pO1xuY29uc3QgZ2V0U2luZ2xlV2FsbGV0TW9kYWxJc09wZW5lZCA9IGNyZWF0ZU1lbW8oXG4gICgpID0+IHNpbmdsZVdhbGxldE1vZGFsU3RhdGUoKS5zdGF0dXMgPT09IFwib3BlbmVkXCJcbik7XG5jb25zdCBnZXRTaW5nbGVXYWxsZXRNb2RhbFdhbGxldEluZm8gPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgY29uc3Qgc3RhdGUgPSBzaW5nbGVXYWxsZXRNb2RhbFN0YXRlKCk7XG4gIGlmIChzdGF0ZS5zdGF0dXMgPT09IFwib3BlbmVkXCIpIHtcbiAgICByZXR1cm4gc3RhdGUud2FsbGV0SW5mbztcbiAgfVxuICByZXR1cm4gbnVsbDtcbn0pO1xubGV0IGxhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IG5ldyBMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZSgpIDogdm9pZCAwO1xuY29uc3QgW2xhc3RTZWxlY3RlZFdhbGxldEluZm8sIF9zZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvXSA9IGNyZWF0ZVNpZ25hbCgobGFzdFNlbGVjdGVkV2FsbGV0SW5mb1N0b3JhZ2UgPT0gbnVsbCA/IHZvaWQgMCA6IGxhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlLmdldExhc3RTZWxlY3RlZFdhbGxldEluZm8oKSkgfHwgbnVsbCk7XG5jb25zdCBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvID0gKHdhbGxldEluZm8pID0+IHtcbiAgaWYgKCFsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZSkge1xuICAgIGxhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlID0gbmV3IExhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlKCk7XG4gIH1cbiAgaWYgKHdhbGxldEluZm8pIHtcbiAgICBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZS5zZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKHdhbGxldEluZm8pO1xuICB9IGVsc2Uge1xuICAgIGxhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlLnJlbW92ZUxhc3RTZWxlY3RlZFdhbGxldEluZm8oKTtcbiAgfVxuICBfc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyh3YWxsZXRJbmZvKTtcbn07XG5jb25zdCBbYWN0aW9uLCBzZXRBY3Rpb25dID0gY3JlYXRlU2lnbmFsKG51bGwpO1xuY29uc3QgY29tbW9uJDEgPSB7XG4gIGNsb3NlOiBcIkNsb3NlXCIsXG4gIG9wZW5XYWxsZXQ6IFwiT3BlbiB3YWxsZXRcIixcbiAgY29weUxpbms6IFwiQ29weSBMaW5rXCIsXG4gIGxpbmtDb3BpZWQ6IFwiTGluayBDb3BpZWRcIixcbiAgY29waWVkOiBcIkNvcGllZFwiLFxuICB5b3VyV2FsbGV0OiBcIllvdXIgV2FsbGV0XCIsXG4gIHJldHJ5OiBcIlJldHJ5XCIsXG4gIGdldDogXCJHRVRcIixcbiAgbW9iaWxlOiBcIk1vYmlsZVwiLFxuICBicm93c2VyRXh0ZW5zaW9uOiBcIkJyb3dzZXIgRXh0ZW5zaW9uXCIsXG4gIGRlc2t0b3A6IFwiRGVza3RvcFwiXG59O1xuY29uc3QgYnV0dG9uJDEgPSB7XG4gIGNvbm5lY3RXYWxsZXQ6IFwiQ29ubmVjdCBXYWxsZXRcIixcbiAgZHJvcGRvd246IHtcbiAgICBjb3B5OiBcIkNvcHkgYWRkcmVzc1wiLFxuICAgIGNvcGllZDogXCJBZGRyZXNzIGNvcGllZCFcIixcbiAgICBkaXNjb25uZWN0OiBcIkRpc2Nvbm5lY3RcIlxuICB9XG59O1xuY29uc3Qgbm90aWZpY2F0aW9ucyQxID0ge1xuICBjb25maXJtOiB7XG4gICAgaGVhZGVyOiBcIk9wZW4ge3sgbmFtZSB9fSB0b1xceEEwY29uZmlybSB0aGVcXHhBMHRyYW5zYWN0aW9uLlwiXG4gIH0sXG4gIHRyYW5zYWN0aW9uU2VudDoge1xuICAgIGhlYWRlcjogXCJUcmFuc2FjdGlvbiBzZW50XCIsXG4gICAgdGV4dDogXCJZb3VyIHRyYW5zYWN0aW9uXFx4QTB3aWxsIGJlXFx4QTBwcm9jZXNzZWQgaW5cXHhBMGFcXHhBMGZldyBzZWNvbmRzLlwiXG4gIH0sXG4gIHRyYW5zYWN0aW9uQ2FuY2VsZWQ6IHtcbiAgICBoZWFkZXI6IFwiVHJhbnNhY3Rpb24gY2FuY2VsZWRcIixcbiAgICB0ZXh0OiBcIlRoZXJlIHdpbGwgYmUgbm8gY2hhbmdlcyB0b1xceEEweW91ciBhY2NvdW50LlwiXG4gIH1cbn07XG5jb25zdCB3YWxsZXRJdGVtJDEgPSB7XG4gIHdhbGxldE9uOiBcIldhbGxldCBpblwiLFxuICByZWNlbnQ6IFwiUmVjZW50XCIsXG4gIGluc3RhbGxlZDogXCJJbnN0YWxsZWRcIixcbiAgcG9wdWxhcjogXCJQb3B1bGFyXCJcbn07XG5jb25zdCB3YWxsZXRNb2RhbCQxID0ge1xuICBsb2FkaW5nOiBcIkxvYWRpbmcgd2FsbGV0c1wiLFxuICB3YWxsZXRzOiBcIldhbGxldHNcIixcbiAgbW9iaWxlVW5pdmVyc2FsTW9kYWw6IHtcbiAgICBjb25uZWN0WW91cldhbGxldDogXCJDb25uZWN0IHlvdXIgVE9OXFx4QTB3YWxsZXRcIixcbiAgICBvcGVuV2FsbGV0T25UZWxlZ3JhbU9yU2VsZWN0OiBcIlVzZSBXYWxsZXQgaW4gVGVsZWdyYW0gb3IgY2hvb3NlIG90aGVyIGFwcGxpY2F0aW9uXCIsXG4gICAgb3BlbldhbGxldE9uVGVsZWdyYW06IFwiQ29ubmVjdCBXYWxsZXQgaW4gVGVsZWdyYW1cIixcbiAgICBjaG9vc2VPdGhlckFwcGxpY2F0aW9uOiBcIkNob29zZSBvdGhlciBhcHBsaWNhdGlvblwiLFxuICAgIG9wZW5MaW5rOiBcIk9wZW4gTGlua1wiLFxuICAgIHNjYW46IFwiU2NhbiB3aXRoIHlvdXIgbW9iaWxlXFx4QTB3YWxsZXRcIlxuICB9LFxuICBkZXNrdG9wVW5pdmVyc2FsTW9kYWw6IHtcbiAgICBjb25uZWN0WW91cldhbGxldDogXCJDb25uZWN0IHlvdXIgVE9OIHdhbGxldFwiLFxuICAgIHNjYW46IFwiU2NhbiB3aXRoIHlvdXIgbW9iaWxlIHdhbGxldFwiLFxuICAgIGF2YWlsYWJsZVdhbGxldHM6IFwiQXZhaWxhYmxlIHdhbGxldHNcIlxuICB9LFxuICBtb2JpbGVDb25uZWN0aW9uTW9kYWw6IHtcbiAgICBzaG93UVI6IFwiU2hvdyBRUiBDb2RlXCIsXG4gICAgc2NhblFSOiBcIlNjYW4gdGhlXFx4QTBRUiBjb2RlIGJlbG93IHdpdGggeW91ciBwaG9uZVxcdTIwMTlzXFx4QTBvclxceEEwe3sgbmFtZSB9fVxcdTIwMTlzIGNhbWVyYVwiLFxuICAgIGNvbnRpbnVlSW46IFwiQ29udGludWUgaW4ge3sgbmFtZSB9fVxcdTIwMjZcIixcbiAgICBjb25uZWN0aW9uRGVjbGluZWQ6IFwiQ29ubmVjdGlvbiBkZWNsaW5lZFwiXG4gIH0sXG4gIGRlc2t0b3BDb25uZWN0aW9uTW9kYWw6IHtcbiAgICBzY2FuUVI6IFwiU2NhbiB0aGVcXHhBMFFSIGNvZGUgYmVsb3cgd2l0aCB5b3VyIHBob25lXFx1MjAxOXNcXHhBMG9yXFx4QTB7eyBuYW1lIH19XFx1MjAxOXMgY2FtZXJhXCIsXG4gICAgY29udGludWVJbkV4dGVuc2lvbjogXCJDb250aW51ZSBpblxceEEwe3sgbmFtZSB9fSBicm93c2VyIGV4dGVuc2lvblxcdTIwMjZcIixcbiAgICBkb250SGF2ZUV4dGVuc2lvbjogXCJTZWVtcyB5b3UgZG9uJ3QgaGF2ZSBpbnN0YWxsZWQge3sgbmFtZSB9fVxceEEwYnJvd3NlclxceEEwZXh0ZW5zaW9uXCIsXG4gICAgZ2V0V2FsbGV0OiBcIkdldCB7eyBuYW1lIH19XCIsXG4gICAgY29udGludWVPbkRlc2t0b3A6IFwiQ29udGludWUgaW5cXHhBMHt7IG5hbWUgfX0gb24gZGVza3RvcFxcdTIwMjZcIixcbiAgICBvcGVuV2FsbGV0T25UZWxlZ3JhbTogXCJDb25uZWN0IFdhbGxldCBpbiBUZWxlZ3JhbSBvbiBkZXNrdG9wXCIsXG4gICAgY29ubmVjdGlvbkRlY2xpbmVkOiBcIkNvbm5lY3Rpb24gZGVjbGluZWRcIlxuICB9LFxuICBpbmZvTW9kYWw6IHtcbiAgICB3aGF0SXNBV2FsbGV0OiBcIldoYXQgaXMgYSB3YWxsZXRcIixcbiAgICBzZWN1cmVEaWdpdGFsQXNzZXRzOiBcIlNlY3VyZSBkaWdpdGFsIGFzc2V0cyBzdG9yYWdlXCIsXG4gICAgd2FsbGV0UHJvdGVjdHM6IFwiQSB3YWxsZXQgcHJvdGVjdHMgYW5kIG1hbmFnZXMgeW91ciBkaWdpdGFsIGFzc2V0c1xceEEwaW5jbHVkaW5nIFRPTiwgdG9rZW5zIGFuZCBjb2xsZWN0YWJsZXMuXCIsXG4gICAgY29udHJvbElkZW50aXR5OiBcIkNvbnRyb2wgeW91ciBXZWIzIGlkZW50aXR5XCIsXG4gICAgbWFuYWdlSWRlbnRpdHk6IFwiTWFuYWdlIHlvdXIgZGlnaXRhbCBpZGVudGl0eSBhbmQgYWNjZXNzIGRlY2VudHJhbGl6ZWQgYXBwbGljYXRpb25zIHdpdGggZWFzZS4gTWFpbnRhaW4gY29udHJvbCBvdmVyIHlvdXIgZGF0YSBhbmQgZW5nYWdlIHNlY3VyZWx5IGluXFx4QTB0aGVcXHhBMGJsb2NrY2hhaW4gZWNvc3lzdGVtLlwiLFxuICAgIGVmZm9ydGxlc3NDcnlwdG9UcmFuc2FjdGlvbnM6IFwiRWZmb3J0bGVzcyBjcnlwdG8gdHJhbnNhY3Rpb25zXCIsXG4gICAgZWFzaWx5U2VuZDogXCJFYXNpbHkgc2VuZCwgcmVjZWl2ZSwgbW9uaXRvciB5b3VyIGNyeXB0b2N1cnJlbmNpZXMuXFx4QTBTdHJlYW1saW5lIHlvdXIgb3BlcmF0aW9ucyB3aXRoXFx4QTBkZWNlbnRyYWxpemVkIGFwcGxpY2F0aW9ucy5cIixcbiAgICBnZXRBV2FsbGV0OiBcIkdldCBhIFdhbGxldFwiXG4gIH1cbn07XG5jb25zdCBhY3Rpb25Nb2RhbCQxID0ge1xuICBjb25maXJtVHJhbnNhY3Rpb246IHtcbiAgICBoZWFkZXI6IFwiQ29uZmlybSB0aGVcXHhBMHRyYW5zYWN0aW9uIGluXFx4QTB7eyBuYW1lIH19XCIsXG4gICAgdGV4dDogXCJJdCB3aWxsIG9ubHkgdGFrZSBhXFx4QTBtb21lbnQuXCJcbiAgfSxcbiAgdHJhbnNhY3Rpb25TZW50OiBcIiRub3RpZmljYXRpb25zLnRyYW5zYWN0aW9uU2VudFwiLFxuICB0cmFuc2FjdGlvbkNhbmNlbGVkOiBcIiRub3RpZmljYXRpb25zLnRyYW5zYWN0aW9uQ2FuY2VsZWRcIlxufTtcbmNvbnN0IGVuID0ge1xuICBjb21tb246IGNvbW1vbiQxLFxuICBidXR0b246IGJ1dHRvbiQxLFxuICBub3RpZmljYXRpb25zOiBub3RpZmljYXRpb25zJDEsXG4gIHdhbGxldEl0ZW06IHdhbGxldEl0ZW0kMSxcbiAgd2FsbGV0TW9kYWw6IHdhbGxldE1vZGFsJDEsXG4gIGFjdGlvbk1vZGFsOiBhY3Rpb25Nb2RhbCQxXG59O1xuY29uc3QgY29tbW9uID0ge1xuICBjbG9zZTogXCJcXHUwNDE3XFx1MDQzMFxcdTA0M0FcXHUwNDQwXFx1MDQ0QlxcdTA0NDJcXHUwNDRDXCIsXG4gIG9wZW5XYWxsZXQ6IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDNBXFx1MDQ0MFxcdTA0NEJcXHUwNDQyXFx1MDQ0QyBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBXCIsXG4gIGNvcHlMaW5rOiBcIlxcdTA0MjFcXHUwNDNBXFx1MDQzRVxcdTA0M0ZcXHUwNDM4XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0NDJcXHUwNDRDXCIsXG4gIGxpbmtDb3BpZWQ6IFwiXFx1MDQyMVxcdTA0NDFcXHUwNDRCXFx1MDQzQlxcdTA0M0FcXHUwNDMwIFxcdTA0NDFcXHUwNDNBXFx1MDQzRVxcdTA0M0ZcXHUwNDM4XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0M0RcXHUwNDMwXCIsXG4gIGNvcGllZDogXCJcXHUwNDIxXFx1MDQzQVxcdTA0M0VcXHUwNDNGXFx1MDQzOFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDNEXFx1MDQzRVwiLFxuICB5b3VyV2FsbGV0OiBcIlxcdTA0MTJcXHUwNDMwXFx1MDQ0OCBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBXCIsXG4gIHJldHJ5OiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzMlxcdTA0NDJcXHUwNDNFXFx1MDQ0MFxcdTA0MzhcXHUwNDQyXFx1MDQ0Q1wiLFxuICBnZXQ6IFwiXFx1MDQyMVxcdTA0M0FcXHUwNDMwXFx1MDQ0N1xcdTA0MzBcXHUwNDQyXFx1MDQ0Q1wiLFxuICBtb2JpbGU6IFwiXFx1MDQxQ1xcdTA0M0VcXHUwNDMxXFx1MDQzOFxcdTA0M0JcXHUwNDRDXFx1MDQzRFxcdTA0NEJcXHUwNDM5XCIsXG4gIGJyb3dzZXJFeHRlbnNpb246IFwiXFx1MDQyMFxcdTA0MzBcXHUwNDQxXFx1MDQ0OFxcdTA0MzhcXHUwNDQwXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNVwiLFxuICBkZXNrdG9wOiBcIlxcdTA0MTRcXHUwNDM1XFx1MDQ0MVxcdTA0M0FcXHUwNDQyXFx1MDQzRVxcdTA0M0ZcIlxufTtcbmNvbnN0IGJ1dHRvbiA9IHtcbiAgY29ubmVjdFdhbGxldDogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDRDIFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0FcIixcbiAgZHJvcGRvd246IHtcbiAgICBjb3B5OiBcIlxcdTA0MjFcXHUwNDNBXFx1MDQzRVxcdTA0M0ZcXHUwNDM4XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0NDJcXHUwNDRDIFxcdTA0MzBcXHUwNDM0XFx1MDQ0MFxcdTA0MzVcXHUwNDQxXCIsXG4gICAgY29waWVkOiBcIlxcdTA0MTBcXHUwNDM0XFx1MDQ0MFxcdTA0MzVcXHUwNDQxIFxcdTA0NDFcXHUwNDNBXFx1MDQzRVxcdTA0M0ZcXHUwNDM4XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0M0QhXCIsXG4gICAgZGlzY29ubmVjdDogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0NDdcXHUwNDM4XFx1MDQ0MlxcdTA0NEMgXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQVwiXG4gIH1cbn07XG5jb25zdCBub3RpZmljYXRpb25zID0ge1xuICBjb25maXJtOiB7XG4gICAgaGVhZGVyOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQVxcdTA0NDBcXHUwNDNFXFx1MDQzOVxcdTA0NDJcXHUwNDM1IHt7IG5hbWUgfX0sIFxcdTA0NDdcXHUwNDQyXFx1MDQzRVxcdTA0MzFcXHUwNDRCXFx4QTBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDQyXFx1MDQzMlxcdTA0MzVcXHUwNDQwXFx1MDQzNFxcdTA0MzhcXHUwNDQyXFx1MDQ0QyBcXHUwNDQyXFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzN1xcdTA0MzBcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDRFLlwiXG4gIH0sXG4gIHRyYW5zYWN0aW9uU2VudDoge1xuICAgIGhlYWRlcjogXCJcXHUwNDIyXFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzN1xcdTA0MzBcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDRGIFxcdTA0M0VcXHUwNDQyXFx1MDQzRlxcdTA0NDBcXHUwNDMwXFx1MDQzMlxcdTA0M0JcXHUwNDM1XFx1MDQzRFxcdTA0MzBcIixcbiAgICB0ZXh0OiBcIlxcdTA0MTJcXHUwNDMwXFx1MDQ0OFxcdTA0MzAgXFx1MDQ0MlxcdTA0NDBcXHUwNDMwXFx1MDQzRFxcdTA0MzdcXHUwNDMwXFx1MDQzQVxcdTA0NDZcXHUwNDM4XFx1MDQ0RlxceEEwXFx1MDQzMVxcdTA0NDNcXHUwNDM0XFx1MDQzNVxcdTA0NDIgXFx1MDQzRVxcdTA0MzFcXHUwNDQwXFx1MDQzMFxcdTA0MzFcXHUwNDNFXFx1MDQ0MlxcdTA0MzBcXHUwNDNEXFx1MDQzMCBcXHUwNDQ3XFx1MDQzNVxcdTA0NDBcXHUwNDM1XFx1MDQzN1xceEEwXFx1MDQzRFxcdTA0MzVcXHUwNDQxXFx1MDQzQVxcdTA0M0VcXHUwNDNCXFx1MDQ0Q1xcdTA0M0FcXHUwNDNFIFxcdTA0NDFcXHUwNDM1XFx1MDQzQVxcdTA0NDNcXHUwNDNEXFx1MDQzNC5cIlxuICB9LFxuICB0cmFuc2FjdGlvbkNhbmNlbGVkOiB7XG4gICAgaGVhZGVyOiBcIlxcdTA0MjJcXHUwNDQwXFx1MDQzMFxcdTA0M0RcXHUwNDM3XFx1MDQzMFxcdTA0M0FcXHUwNDQ2XFx1MDQzOFxcdTA0NEYgXFx1MDQzRVxcdTA0NDJcXHUwNDNDXFx1MDQzNVxcdTA0M0RcXHUwNDM1XFx1MDQzRFxcdTA0MzBcIixcbiAgICB0ZXh0OiBcIlxcdTA0MjFcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDNFXFx1MDQ0RlxcdTA0M0RcXHUwNDM4XFx1MDQzNSBcXHUwNDMyXFx1MDQzMFxcdTA0NDhcXHUwNDM1XFx1MDQzM1xcdTA0M0UgXFx1MDQ0MVxcdTA0NDdcXHUwNDUxXFx1MDQ0MlxcdTA0MzAgXFx1MDQzRFxcdTA0MzVcXHhBMFxcdTA0MzhcXHUwNDM3XFx1MDQzQ1xcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0NDJcXHUwNDQxXFx1MDQ0Ri5cIlxuICB9XG59O1xuY29uc3Qgd2FsbGV0SXRlbSA9IHtcbiAgd2FsbGV0T246IFwiV2FsbGV0IFxcdTA0MzJcIixcbiAgcmVjZW50OiBcIlxcdTA0MURcXHUwNDM1XFx1MDQzNFxcdTA0MzBcXHUwNDMyXFx1MDQzRFxcdTA0MzhcXHUwNDM5XCIsXG4gIGluc3RhbGxlZDogXCJcXHUwNDIzXFx1MDQ0MVxcdTA0NDJcXHUwNDMwXFx1MDQzRFxcdTA0M0VcXHUwNDMyXFx1MDQzQlxcdTA0MzVcXHUwNDNEXCIsXG4gIHBvcHVsYXI6IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDNGXFx1MDQ0M1xcdTA0M0JcXHUwNDRGXFx1MDQ0MFxcdTA0MzVcXHUwNDNEXCJcbn07XG5jb25zdCB3YWxsZXRNb2RhbCA9IHtcbiAgbG9hZGluZzogXCJcXHUwNDFBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NENcXHUwNDNBXFx1MDQzOCBcXHUwNDM3XFx1MDQzMFxcdTA0MzNcXHUwNDQwXFx1MDQ0M1xcdTA0MzZcXHUwNDMwXFx1MDQ0RVxcdTA0NDJcXHUwNDQxXFx1MDQ0RlwiLFxuICB3YWxsZXRzOiBcIlxcdTA0MUFcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0FcXHUwNDM4XCIsXG4gIG1vYmlsZVVuaXZlcnNhbE1vZGFsOiB7XG4gICAgY29ubmVjdFlvdXJXYWxsZXQ6IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDM0XFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0MzhcXHUwNDQyXFx1MDQzNSBUT05cXHhBMFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0FcIixcbiAgICBvcGVuV2FsbGV0T25UZWxlZ3JhbU9yU2VsZWN0OiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzNFxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0NDdcXHUwNDM4XFx1MDQ0MlxcdTA0MzUgV2FsbGV0IFxcdTA0MzJcXHhBMFRlbGVncmFtIFxcdTA0MzhcXHUwNDNCXFx1MDQzOFxceEEwXFx1MDQzMlxcdTA0NEJcXHUwNDMxXFx1MDQzNVxcdTA0NDBcXHUwNDM1XFx1MDQ0MlxcdTA0MzUgXFx1MDQzNFxcdTA0NDBcXHUwNDQzXFx1MDQzM1xcdTA0M0VcXHUwNDM1IFxcdTA0M0ZcXHUwNDQwXFx1MDQzOFxcdTA0M0JcXHUwNDNFXFx1MDQzNlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0MzVcIixcbiAgICBvcGVuV2FsbGV0T25UZWxlZ3JhbTogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDQwXFx1MDQ0QlxcdTA0NDJcXHUwNDRDIFdhbGxldCBcXHUwNDMyIFRlbGVncmFtXCIsXG4gICAgY2hvb3NlT3RoZXJBcHBsaWNhdGlvbjogXCJcXHUwNDEyXFx1MDQ0QlxcdTA0MzFcXHUwNDM1XFx1MDQ0MFxcdTA0MzhcXHUwNDQyXFx1MDQzNSBcXHUwNDM0XFx1MDQ0MFxcdTA0NDNcXHUwNDMzXFx1MDQzRVxcdTA0MzUgXFx1MDQzRlxcdTA0NDBcXHUwNDM4XFx1MDQzQlxcdTA0M0VcXHUwNDM2XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNVwiLFxuICAgIG9wZW5MaW5rOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQVxcdTA0NDBcXHUwNDRCXFx1MDQ0MlxcdTA0NENcIixcbiAgICBzY2FuOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQ0MVxcdTA0M0FcXHUwNDMwXFx1MDQzRFxcdTA0MzhcXHUwNDQwXFx1MDQ0M1xcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDNBXFx1MDQzMFxcdTA0M0NcXHUwNDM1XFx1MDQ0MFxcdTA0M0VcXHUwNDM5IFxcdTA0MzJcXHUwNDMwXFx1MDQ0OFxcdTA0MzVcXHUwNDMzXFx1MDQzRVxceEEwXFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQzNVxcdTA0NDRcXHUwNDNFXFx1MDQzRFxcdTA0MzBcIlxuICB9LFxuICBkZXNrdG9wVW5pdmVyc2FsTW9kYWw6IHtcbiAgICBjb25uZWN0WW91cldhbGxldDogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFRPTiBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBXCIsXG4gICAgc2NhbjogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0NDFcXHUwNDNBXFx1MDQzMFxcdTA0M0RcXHUwNDM4XFx1MDQ0MFxcdTA0NDNcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgUVItXFx1MDQzQVxcdTA0M0VcXHUwNDM0IFxcdTA0M0FcXHUwNDMwXFx1MDQzQ1xcdTA0MzVcXHUwNDQwXFx1MDQzRVxcdTA0MzkgXFx1MDQzMlxcdTA0MzBcXHUwNDQ4XFx1MDQzNVxcdTA0MzNcXHUwNDNFXFx4QTBcXHUwNDQyXFx1MDQzNVxcdTA0M0JcXHUwNDM1XFx1MDQ0NFxcdTA0M0VcXHUwNDNEXFx1MDQzMFwiLFxuICAgIGF2YWlsYWJsZVdhbGxldHM6IFwiXFx1MDQxNFxcdTA0M0VcXHUwNDQxXFx1MDQ0MlxcdTA0NDNcXHUwNDNGXFx1MDQzRFxcdTA0NEJcXHUwNDM1IFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0FcXHUwNDM4XCJcbiAgfSxcbiAgbW9iaWxlQ29ubmVjdGlvbk1vZGFsOiB7XG4gICAgc2hvd1FSOiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzQVxcdTA0MzBcXHUwNDM3XFx1MDQzMFxcdTA0NDJcXHUwNDRDIFFSLVxcdTA0M0FcXHUwNDNFXFx1MDQzNFwiLFxuICAgIHNjYW5RUjogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0NDFcXHUwNDNBXFx1MDQzMFxcdTA0M0RcXHUwNDM4XFx1MDQ0MFxcdTA0NDNcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgUVItXFx1MDQzQVxcdTA0M0VcXHUwNDM0IFxcdTA0M0RcXHUwNDM4XFx1MDQzNlxcdTA0MzUgXFx1MDQzQVxcdTA0MzBcXHUwNDNDXFx1MDQzNVxcdTA0NDBcXHUwNDNFXFx1MDQzOSBcXHUwNDMyXFx4QTBcXHUwNDNGXFx1MDQ0MFxcdTA0MzhcXHUwNDNCXFx1MDQzRVxcdTA0MzZcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM4IHt7IG5hbWUgfX0sIFxcdTA0MzhcXHUwNDNCXFx1MDQzOFxceEEwXFx1MDQzQVxcdTA0MzBcXHUwNDNDXFx1MDQzNVxcdTA0NDBcXHUwNDNFXFx1MDQzOSBcXHUwNDQyXFx1MDQzNVxcdTA0M0JcXHUwNDM1XFx1MDQ0NFxcdTA0M0VcXHUwNDNEXFx1MDQzMFwiLFxuICAgIGNvbnRpbnVlSW46IFwiXFx1MDQxRlxcdTA0NDBcXHUwNDNFXFx1MDQzNFxcdTA0M0VcXHUwNDNCXFx1MDQzNlxcdTA0MzhcXHUwNDQyXFx1MDQzNSBcXHUwNDMyIHt7IG5hbWUgfX1cXHUyMDI2XCIsXG4gICAgY29ubmVjdGlvbkRlY2xpbmVkOiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzNFxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0NDdcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM1IFxcdTA0M0VcXHUwNDQyXFx1MDQzQVxcdTA0M0JcXHUwNDNFXFx1MDQzRFxcdTA0MzVcXHUwNDNEXFx1MDQzRVwiXG4gIH0sXG4gIGRlc2t0b3BDb25uZWN0aW9uTW9kYWw6IHtcbiAgICBzY2FuUVI6IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDQxXFx1MDQzQVxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0NDBcXHUwNDQzXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFFSLVxcdTA0M0FcXHUwNDNFXFx1MDQzNCBcXHUwNDNEXFx1MDQzOFxcdTA0MzZcXHUwNDM1IFxcdTA0M0FcXHUwNDMwXFx1MDQzQ1xcdTA0MzVcXHUwNDQwXFx1MDQzRVxcdTA0MzkgXFx1MDQzMlxceEEwXFx1MDQzRlxcdTA0NDBcXHUwNDM4XFx1MDQzQlxcdTA0M0VcXHUwNDM2XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzOCB7eyBuYW1lIH19LCBcXHUwNDM4XFx1MDQzQlxcdTA0MzhcXHhBMFxcdTA0M0FcXHUwNDMwXFx1MDQzQ1xcdTA0MzVcXHUwNDQwXFx1MDQzRVxcdTA0MzkgXFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQzNVxcdTA0NDRcXHUwNDNFXFx1MDQzRFxcdTA0MzBcIixcbiAgICBjb250aW51ZUluRXh0ZW5zaW9uOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQVxcdTA0NDBcXHUwNDNFXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0MzFcXHUwNDQwXFx1MDQzMFxcdTA0NDNcXHUwNDM3XFx1MDQzNVxcdTA0NDBcXHUwNDNEXFx1MDQzRVxcdTA0MzUgXFx1MDQ0MFxcdTA0MzBcXHUwNDQxXFx1MDQ0OFxcdTA0MzhcXHUwNDQwXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNSB7eyBuYW1lIH19XCIsXG4gICAgZG9udEhhdmVFeHRlbnNpb246IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDQ1XFx1MDQzRVxcdTA0MzZcXHUwNDM1LCBcXHUwNDQzIFxcdTA0MzJcXHUwNDMwXFx1MDQ0MSBcXHUwNDNEXFx1MDQzNVxceEEwXFx1MDQ0M1xcdTA0NDFcXHUwNDQyXFx1MDQzMFxcdTA0M0RcXHUwNDNFXFx1MDQzMlxcdTA0M0JcXHUwNDM1XFx1MDQzRFxcdTA0M0UgXFx1MDQzMVxcdTA0NDBcXHUwNDMwXFx1MDQ0M1xcdTA0MzdcXHUwNDM1XFx1MDQ0MFxcdTA0M0RcXHUwNDNFXFx1MDQzNVxceEEwXFx1MDQ0MFxcdTA0MzBcXHUwNDQxXFx1MDQ0OFxcdTA0MzhcXHUwNDQwXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNVxceEEwe3sgbmFtZSB9fVwiLFxuICAgIGdldFdhbGxldDogXCJcXHUwNDIxXFx1MDQzQVxcdTA0MzBcXHUwNDQ3XFx1MDQzMFxcdTA0NDJcXHUwNDRDIHt7IG5hbWUgfX1cIixcbiAgICBjb250aW51ZU9uRGVza3RvcDogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDQwXFx1MDQzRVxcdTA0MzlcXHUwNDQyXFx1MDQzNSB7eyBuYW1lIH19IFxcdTA0M0RcXHUwNDMwXFx4QTBcXHUwNDNBXFx1MDQzRVxcdTA0M0NcXHUwNDNGXFx1MDQ0Q1xcdTA0NEVcXHUwNDQyXFx1MDQzNVxcdTA0NDBcXHUwNDM1XFx1MjAyNlwiLFxuICAgIG9wZW5XYWxsZXRPblRlbGVncmFtOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQVxcdTA0NDBcXHUwNDRCXFx1MDQ0MlxcdTA0NEMgV2FsbGV0IFxcdTA0MzJcXHhBMFRlbGVncmFtXCIsXG4gICAgY29ubmVjdGlvbkRlY2xpbmVkOiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzNFxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0NDdcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM1IFxcdTA0M0VcXHUwNDQyXFx1MDQzQVxcdTA0M0JcXHUwNDNFXFx1MDQzRFxcdTA0MzVcXHUwNDNEXFx1MDQzRVwiXG4gIH0sXG4gIGluZm9Nb2RhbDoge1xuICAgIHdoYXRJc0FXYWxsZXQ6IFwiXFx1MDQyN1xcdTA0NDJcXHUwNDNFIFxcdTA0NDJcXHUwNDMwXFx1MDQzQVxcdTA0M0VcXHUwNDM1IFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0E/XCIsXG4gICAgc2VjdXJlRGlnaXRhbEFzc2V0czogXCJcXHUwNDFEXFx1MDQzMFxcdTA0MzRcXHUwNDM1XFx1MDQzNlxcdTA0M0RcXHUwNDNFXFx1MDQzNSBcXHUwNDQ1XFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0M0JcXHUwNDM4XFx1MDQ0OVxcdTA0MzUgXFx1MDQ0NlxcdTA0MzhcXHUwNDQ0XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQ0QlxcdTA0NDUgXFx1MDQzMFxcdTA0M0FcXHUwNDQyXFx1MDQzOFxcdTA0MzJcXHUwNDNFXFx1MDQzMlwiLFxuICAgIHdhbGxldFByb3RlY3RzOiBcIlxcdTA0MUFcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0EgXFx1MDQzN1xcdTA0MzBcXHUwNDQ5XFx1MDQzOFxcdTA0NDlcXHUwNDMwXFx1MDQzNVxcdTA0NDIgXFx1MDQzMlxcdTA0MzBcXHUwNDQ4XFx1MDQzOCBcXHUwNDQ2XFx1MDQzOFxcdTA0NDRcXHUwNDQwXFx1MDQzRVxcdTA0MzJcXHUwNDRCXFx1MDQzNSBcXHUwNDMwXFx1MDQzQVxcdTA0NDJcXHUwNDM4XFx1MDQzMlxcdTA0NEIsIFxcdTA0MzJcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzMFxcdTA0NEYgVE9OLCBcXHUwNDQyXFx1MDQzRVxcdTA0M0FcXHUwNDM1XFx1MDQzRFxcdTA0NEIgXFx1MDQzOFxceEEwXFx1MDQzRlxcdTA0NDBcXHUwNDM1XFx1MDQzNFxcdTA0M0NcXHUwNDM1XFx1MDQ0MlxcdTA0NEIgXFx1MDQzQVxcdTA0M0VcXHUwNDNCXFx1MDQzQlxcdTA0MzVcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDNFXFx1MDQzRFxcdTA0MzhcXHUwNDQwXFx1MDQzRVxcdTA0MzJcXHUwNDMwXFx1MDQzRFxcdTA0MzhcXHUwNDRGLCBcXHUwNDM4XFx4QTBcXHUwNDQzXFx1MDQzRlxcdTA0NDBcXHUwNDMwXFx1MDQzMlxcdTA0M0JcXHUwNDRGXFx1MDQzNVxcdTA0NDIgXFx1MDQzOFxcdTA0M0NcXHUwNDM4LlwiLFxuICAgIGNvbnRyb2xJZGVudGl0eTogXCJcXHUwNDFBXFx1MDQzRVxcdTA0M0RcXHUwNDQyXFx1MDQ0MFxcdTA0M0VcXHUwNDNCXFx1MDQ0QyBcXHUwNDQxXFx1MDQzMlxcdTA0M0VcXHUwNDM1XFx1MDQzOSBcXHUwNDNCXFx1MDQzOFxcdTA0NDdcXHUwNDNEXFx1MDQzRVxcdTA0NDFcXHUwNDQyXFx1MDQzOCBXZWIzXCIsXG4gICAgbWFuYWdlSWRlbnRpdHk6IFwiXFx1MDQyM1xcdTA0M0ZcXHUwNDQwXFx1MDQzMFxcdTA0MzJcXHUwNDNCXFx1MDQ0RlxcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDQxXFx1MDQzMlxcdTA0M0VcXHUwNDM1XFx1MDQzOSBcXHUwNDQ2XFx1MDQzOFxcdTA0NDRcXHUwNDQwXFx1MDQzRVxcdTA0MzJcXHUwNDNFXFx1MDQzOSBcXHUwNDM4XFx1MDQzNFxcdTA0MzVcXHUwNDNEXFx1MDQ0MlxcdTA0MzhcXHUwNDQ0XFx1MDQzOFxcdTA0M0FcXHUwNDMwXFx1MDQ0NlxcdTA0MzhcXHUwNDM1XFx1MDQzOSBcXHUwNDM4XFx4QTBcXHUwNDQxXFx4QTBcXHUwNDNCXFx1MDQzNVxcdTA0MzNcXHUwNDNBXFx1MDQzRVxcdTA0NDFcXHUwNDQyXFx1MDQ0Q1xcdTA0NEUgXFx1MDQzRlxcdTA0M0VcXHUwNDNCXFx1MDQ0M1xcdTA0NDdcXHUwNDMwXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0MzRcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDQzXFx1MDQzRiBcXHUwNDNBXFx4QTBcXHUwNDM0XFx1MDQzNVxcdTA0NDZcXHUwNDM1XFx1MDQzRFxcdTA0NDJcXHUwNDQwXFx1MDQzMFxcdTA0M0JcXHUwNDM4XFx1MDQzN1xcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0M0RcXHUwNDNEXFx1MDQ0QlxcdTA0M0MgXFx1MDQzRlxcdTA0NDBcXHUwNDM4XFx1MDQzQlxcdTA0M0VcXHUwNDM2XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQ0RlxcdTA0M0MuIFxcdTA0MjFcXHUwNDNFXFx1MDQ0NVxcdTA0NDBcXHUwNDMwXFx1MDQzRFxcdTA0NEZcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgXFx1MDQzQVxcdTA0M0VcXHUwNDNEXFx1MDQ0MlxcdTA0NDBcXHUwNDNFXFx1MDQzQlxcdTA0NEMgXFx1MDQzRFxcdTA0MzBcXHUwNDM0XFx4QTBcXHUwNDQxXFx1MDQzMlxcdTA0M0VcXHUwNDM4XFx1MDQzQ1xcdTA0MzggXFx1MDQzNFxcdTA0MzBcXHUwNDNEXFx1MDQzRFxcdTA0NEJcXHUwNDNDXFx1MDQzOCBcXHUwNDM4XFx4QTBcXHUwNDMxXFx1MDQzNVxcdTA0MzdcXHUwNDNFXFx1MDQzRlxcdTA0MzBcXHUwNDQxXFx1MDQzRFxcdTA0M0UgXFx1MDQ0M1xcdTA0NDdcXHUwNDMwXFx1MDQ0MVxcdTA0NDJcXHUwNDMyXFx1MDQ0M1xcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDMyXFx4QTBcXHUwNDREXFx1MDQzQVxcdTA0M0VcXHUwNDQxXFx1MDQzOFxcdTA0NDFcXHUwNDQyXFx1MDQzNVxcdTA0M0NcXHUwNDM1XFx4QTBcXHUwNDMxXFx1MDQzQlxcdTA0M0VcXHUwNDNBXFx1MDQ0N1xcdTA0MzVcXHUwNDM5XFx1MDQzRFxcdTA0MzAuXCIsXG4gICAgZWZmb3J0bGVzc0NyeXB0b1RyYW5zYWN0aW9uczogXCJcXHUwNDFGXFx1MDQ0MFxcdTA0M0VcXHUwNDQxXFx1MDQ0MlxcdTA0NEJcXHUwNDM1IFxcdTA0M0FcXHUwNDQwXFx1MDQzOFxcdTA0M0ZcXHUwNDQyXFx1MDQzRVxcdTA0NDJcXHUwNDQwXFx1MDQzMFxcdTA0M0RcXHUwNDM3XFx1MDQzMFxcdTA0M0FcXHUwNDQ2XFx1MDQzOFxcdTA0MzhcIixcbiAgICBlYXNpbHlTZW5kOiBcIlxcdTA0MUJcXHUwNDM1XFx1MDQzM1xcdTA0M0FcXHUwNDNFIFxcdTA0M0VcXHUwNDQyXFx1MDQzRlxcdTA0NDBcXHUwNDMwXFx1MDQzMlxcdTA0M0JcXHUwNDRGXFx1MDQzOVxcdTA0NDJcXHUwNDM1LCBcXHUwNDNGXFx1MDQzRVxcdTA0M0JcXHUwNDQzXFx1MDQ0N1xcdTA0MzBcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgXFx1MDQzOFxceEEwXFx1MDQzRVxcdTA0NDJcXHUwNDQxXFx1MDQzQlxcdTA0MzVcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDMwXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0NDFcXHUwNDMyXFx1MDQzRVxcdTA0MzggXFx1MDQzQVxcdTA0NDBcXHUwNDM4XFx1MDQzRlxcdTA0NDJcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDNCXFx1MDQ0RVxcdTA0NDJcXHUwNDRCLiBcXHUwNDFFXFx1MDQzRlxcdTA0NDJcXHUwNDM4XFx1MDQzQ1xcdTA0MzhcXHUwNDM3XFx1MDQzOFxcdTA0NDBcXHUwNDQzXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0NDFcXHUwNDMyXFx1MDQzRVxcdTA0MzggXFx1MDQzRVxcdTA0M0ZcXHUwNDM1XFx1MDQ0MFxcdTA0MzBcXHUwNDQ2XFx1MDQzOFxcdTA0MzggXFx1MDQ0MVxceEEwXFx1MDQzRlxcdTA0M0VcXHUwNDNDXFx1MDQzRVxcdTA0NDlcXHUwNDRDXFx1MDQ0RSBcXHUwNDM0XFx1MDQzNVxcdTA0NDZcXHUwNDM1XFx1MDQzRFxcdTA0NDJcXHUwNDQwXFx1MDQzMFxcdTA0M0JcXHUwNDM4XFx1MDQzN1xcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0M0RcXHUwNDNEXFx1MDQ0QlxcdTA0NDUgXFx1MDQzRlxcdTA0NDBcXHUwNDM4XFx1MDQzQlxcdTA0M0VcXHUwNDM2XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzOS5cIixcbiAgICBnZXRBV2FsbGV0OiBcIlxcdTA0MjFcXHUwNDNBXFx1MDQzMFxcdTA0NDdcXHUwNDMwXFx1MDQ0MlxcdTA0NEMgXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQVwiXG4gIH1cbn07XG5jb25zdCBhY3Rpb25Nb2RhbCA9IHtcbiAgY29uZmlybVRyYW5zYWN0aW9uOiB7XG4gICAgaGVhZGVyOiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzNFxcdTA0NDJcXHUwNDMyXFx1MDQzNVxcdTA0NDBcXHUwNDM0XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0MzRcXHUwNDM1XFx1MDQzOVxcdTA0NDFcXHUwNDQyXFx1MDQzMlxcdTA0MzhcXHUwNDM1IFxcdTA0MzJcXHhBMHt7IG5hbWUgfX1cIixcbiAgICB0ZXh0OiBcIlxcdTA0MkRcXHUwNDQyXFx1MDQzRSBcXHUwNDM3XFx1MDQzMFxcdTA0MzlcXHUwNDNDXFx1MDQzNVxcdTA0NDIgXFx1MDQzRlxcdTA0MzBcXHUwNDQwXFx1MDQ0MyBcXHUwNDQxXFx1MDQzNVxcdTA0M0FcXHUwNDQzXFx1MDQzRFxcdTA0MzQuXCJcbiAgfSxcbiAgdHJhbnNhY3Rpb25TZW50OiBcIiRub3RpZmljYXRpb25zLnRyYW5zYWN0aW9uU2VudFwiLFxuICB0cmFuc2FjdGlvbkNhbmNlbGVkOiBcIiRub3RpZmljYXRpb25zLnRyYW5zYWN0aW9uQ2FuY2VsZWRcIlxufTtcbmNvbnN0IHJ1ID0ge1xuICBjb21tb24sXG4gIGJ1dHRvbixcbiAgbm90aWZpY2F0aW9ucyxcbiAgd2FsbGV0SXRlbSxcbiAgd2FsbGV0TW9kYWwsXG4gIGFjdGlvbk1vZGFsXG59O1xuY29uc3QgaTE4bkRpY3Rpb25hcnkgPSB7XG4gIGVuOiBwYXJzZURpY3Rpb25hcnkoZW4pLFxuICBydTogcGFyc2VEaWN0aW9uYXJ5KHJ1KVxufTtcbmZ1bmN0aW9uIHBhcnNlRGljdGlvbmFyeShkaWN0aW9uYXJ5KSB7XG4gIGNvbnN0IHJlZlN5bWJvbCA9IFwiJFwiO1xuICBjb25zdCBpdGVyYXRlID0gKHN1YkRpY3Rpb25hcnkpID0+IHtcbiAgICBPYmplY3QuZW50cmllcyhzdWJEaWN0aW9uYXJ5KS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiYgdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhdGUodmFsdWUpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBpZiAodmFsdWVbMF0gPT09IHJlZlN5bWJvbCkge1xuICAgICAgICAgIGNvbnN0IHBhdGggPSB2YWx1ZS5zbGljZSgxKS5zcGxpdChcIi5cIik7XG4gICAgICAgICAgbGV0IG9iaiA9IGRpY3Rpb25hcnk7XG4gICAgICAgICAgcGF0aC5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICBpZiAoaXRlbSBpbiBvYmopIHtcbiAgICAgICAgICAgICAgb2JqID0gb2JqW2l0ZW1dO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgICAgIGBDYW5ub3QgcGFyc2UgdHJhbnNsYXRpb25zOiB0aGVyZSBpcyBubyBwcm9wZXJ0eSAke2l0ZW19IGluIHRyYW5zbGF0aW9uYFxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHN1YkRpY3Rpb25hcnlba2V5XSA9IG9iajtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUuc2xpY2UoMCwgMikgPT09IGBcXFxcJHtyZWZTeW1ib2x9YCkge1xuICAgICAgICAgIHN1YkRpY3Rpb25hcnlba2V5XSA9IHZhbHVlLnNsaWNlKDEpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG4gIGl0ZXJhdGUoZGljdGlvbmFyeSk7XG4gIHJldHVybiBkaWN0aW9uYXJ5O1xufVxuY29uc3QgQ29ubmVjdG9yQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbmNvbnN0ICRSQVcgPSBTeW1ib2woXCJzdG9yZS1yYXdcIiksICROT0RFID0gU3ltYm9sKFwic3RvcmUtbm9kZVwiKSwgJE5BTUUgPSBTeW1ib2woXCJzdG9yZS1uYW1lXCIpO1xuZnVuY3Rpb24gd3JhcCQxKHZhbHVlLCBuYW1lKSB7XG4gIGxldCBwMiA9IHZhbHVlWyRQUk9YWV07XG4gIGlmICghcDIpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodmFsdWUsICRQUk9YWSwge1xuICAgICAgdmFsdWU6IHAyID0gbmV3IFByb3h5KHZhbHVlLCBwcm94eVRyYXBzJDEpXG4gICAgfSk7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKSwgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHZhbHVlKTtcbiAgICAgIGZvciAobGV0IGkyID0gMCwgbDIgPSBrZXlzLmxlbmd0aDsgaTIgPCBsMjsgaTIrKykge1xuICAgICAgICBjb25zdCBwcm9wID0ga2V5c1tpMl07XG4gICAgICAgIGlmIChkZXNjW3Byb3BdLmdldCkge1xuICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh2YWx1ZSwgcHJvcCwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogZGVzY1twcm9wXS5lbnVtZXJhYmxlLFxuICAgICAgICAgICAgZ2V0OiBkZXNjW3Byb3BdLmdldC5iaW5kKHAyKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBwMjtcbn1cbmZ1bmN0aW9uIGlzV3JhcHBhYmxlKG9iaikge1xuICBsZXQgcHJvdG87XG4gIHJldHVybiBvYmogIT0gbnVsbCAmJiB0eXBlb2Ygb2JqID09PSBcIm9iamVjdFwiICYmIChvYmpbJFBST1hZXSB8fCAhKHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaikpIHx8IHByb3RvID09PSBPYmplY3QucHJvdG90eXBlIHx8IEFycmF5LmlzQXJyYXkob2JqKSk7XG59XG5mdW5jdGlvbiB1bndyYXAoaXRlbSwgc2V0ID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKSkge1xuICBsZXQgcmVzdWx0LCB1bndyYXBwZWQsIHYsIHByb3A7XG4gIGlmIChyZXN1bHQgPSBpdGVtICE9IG51bGwgJiYgaXRlbVskUkFXXSlcbiAgICByZXR1cm4gcmVzdWx0O1xuICBpZiAoIWlzV3JhcHBhYmxlKGl0ZW0pIHx8IHNldC5oYXMoaXRlbSkpXG4gICAgcmV0dXJuIGl0ZW07XG4gIGlmIChBcnJheS5pc0FycmF5KGl0ZW0pKSB7XG4gICAgaWYgKE9iamVjdC5pc0Zyb3plbihpdGVtKSlcbiAgICAgIGl0ZW0gPSBpdGVtLnNsaWNlKDApO1xuICAgIGVsc2VcbiAgICAgIHNldC5hZGQoaXRlbSk7XG4gICAgZm9yIChsZXQgaTIgPSAwLCBsMiA9IGl0ZW0ubGVuZ3RoOyBpMiA8IGwyOyBpMisrKSB7XG4gICAgICB2ID0gaXRlbVtpMl07XG4gICAgICBpZiAoKHVud3JhcHBlZCA9IHVud3JhcCh2LCBzZXQpKSAhPT0gdilcbiAgICAgICAgaXRlbVtpMl0gPSB1bndyYXBwZWQ7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChPYmplY3QuaXNGcm96ZW4oaXRlbSkpXG4gICAgICBpdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgaXRlbSk7XG4gICAgZWxzZVxuICAgICAgc2V0LmFkZChpdGVtKTtcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoaXRlbSksIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpdGVtKTtcbiAgICBmb3IgKGxldCBpMiA9IDAsIGwyID0ga2V5cy5sZW5ndGg7IGkyIDwgbDI7IGkyKyspIHtcbiAgICAgIHByb3AgPSBrZXlzW2kyXTtcbiAgICAgIGlmIChkZXNjW3Byb3BdLmdldClcbiAgICAgICAgY29udGludWU7XG4gICAgICB2ID0gaXRlbVtwcm9wXTtcbiAgICAgIGlmICgodW53cmFwcGVkID0gdW53cmFwKHYsIHNldCkpICE9PSB2KVxuICAgICAgICBpdGVtW3Byb3BdID0gdW53cmFwcGVkO1xuICAgIH1cbiAgfVxuICByZXR1cm4gaXRlbTtcbn1cbmZ1bmN0aW9uIGdldERhdGFOb2Rlcyh0YXJnZXQpIHtcbiAgbGV0IG5vZGVzID0gdGFyZ2V0WyROT0RFXTtcbiAgaWYgKCFub2RlcylcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCAkTk9ERSwge1xuICAgICAgdmFsdWU6IG5vZGVzID0ge31cbiAgICB9KTtcbiAgcmV0dXJuIG5vZGVzO1xufVxuZnVuY3Rpb24gZ2V0RGF0YU5vZGUobm9kZXMsIHByb3BlcnR5LCB2YWx1ZSkge1xuICByZXR1cm4gbm9kZXNbcHJvcGVydHldIHx8IChub2Rlc1twcm9wZXJ0eV0gPSBjcmVhdGVEYXRhTm9kZSh2YWx1ZSkpO1xufVxuZnVuY3Rpb24gcHJveHlEZXNjcmlwdG9yJDEodGFyZ2V0LCBwcm9wZXJ0eSkge1xuICBjb25zdCBkZXNjID0gUmVmbGVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBwcm9wZXJ0eSk7XG4gIGlmICghZGVzYyB8fCBkZXNjLmdldCB8fCAhZGVzYy5jb25maWd1cmFibGUgfHwgcHJvcGVydHkgPT09ICRQUk9YWSB8fCBwcm9wZXJ0eSA9PT0gJE5PREUgfHwgcHJvcGVydHkgPT09ICROQU1FKVxuICAgIHJldHVybiBkZXNjO1xuICBkZWxldGUgZGVzYy52YWx1ZTtcbiAgZGVsZXRlIGRlc2Mud3JpdGFibGU7XG4gIGRlc2MuZ2V0ID0gKCkgPT4gdGFyZ2V0WyRQUk9YWV1bcHJvcGVydHldO1xuICByZXR1cm4gZGVzYztcbn1cbmZ1bmN0aW9uIHRyYWNrU2VsZih0YXJnZXQpIHtcbiAgaWYgKGdldExpc3RlbmVyKCkpIHtcbiAgICBjb25zdCBub2RlcyA9IGdldERhdGFOb2Rlcyh0YXJnZXQpO1xuICAgIChub2Rlcy5fIHx8IChub2Rlcy5fID0gY3JlYXRlRGF0YU5vZGUoKSkpKCk7XG4gIH1cbn1cbmZ1bmN0aW9uIG93bktleXModGFyZ2V0KSB7XG4gIHRyYWNrU2VsZih0YXJnZXQpO1xuICByZXR1cm4gUmVmbGVjdC5vd25LZXlzKHRhcmdldCk7XG59XG5mdW5jdGlvbiBjcmVhdGVEYXRhTm9kZSh2YWx1ZSkge1xuICBjb25zdCBbczIsIHNldF0gPSBjcmVhdGVTaWduYWwodmFsdWUsIHtcbiAgICBlcXVhbHM6IGZhbHNlLFxuICAgIGludGVybmFsOiB0cnVlXG4gIH0pO1xuICBzMi4kID0gc2V0O1xuICByZXR1cm4gczI7XG59XG5jb25zdCBwcm94eVRyYXBzJDEgPSB7XG4gIGdldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikge1xuICAgIGlmIChwcm9wZXJ0eSA9PT0gJFJBVylcbiAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgaWYgKHByb3BlcnR5ID09PSAkUFJPWFkpXG4gICAgICByZXR1cm4gcmVjZWl2ZXI7XG4gICAgaWYgKHByb3BlcnR5ID09PSAkVFJBQ0spIHtcbiAgICAgIHRyYWNrU2VsZih0YXJnZXQpO1xuICAgICAgcmV0dXJuIHJlY2VpdmVyO1xuICAgIH1cbiAgICBjb25zdCBub2RlcyA9IGdldERhdGFOb2Rlcyh0YXJnZXQpO1xuICAgIGNvbnN0IHRyYWNrZWQgPSBub2Rlcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSk7XG4gICAgbGV0IHZhbHVlID0gdHJhY2tlZCA/IG5vZGVzW3Byb3BlcnR5XSgpIDogdGFyZ2V0W3Byb3BlcnR5XTtcbiAgICBpZiAocHJvcGVydHkgPT09ICROT0RFIHx8IHByb3BlcnR5ID09PSBcIl9fcHJvdG9fX1wiKVxuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIGlmICghdHJhY2tlZCkge1xuICAgICAgY29uc3QgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBwcm9wZXJ0eSk7XG4gICAgICBpZiAoZ2V0TGlzdGVuZXIoKSAmJiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIgfHwgdGFyZ2V0Lmhhc093blByb3BlcnR5KHByb3BlcnR5KSkgJiYgIShkZXNjICYmIGRlc2MuZ2V0KSlcbiAgICAgICAgdmFsdWUgPSBnZXREYXRhTm9kZShub2RlcywgcHJvcGVydHksIHZhbHVlKSgpO1xuICAgIH1cbiAgICByZXR1cm4gaXNXcmFwcGFibGUodmFsdWUpID8gd3JhcCQxKHZhbHVlKSA6IHZhbHVlO1xuICB9LFxuICBoYXModGFyZ2V0LCBwcm9wZXJ0eSkge1xuICAgIGlmIChwcm9wZXJ0eSA9PT0gJFJBVyB8fCBwcm9wZXJ0eSA9PT0gJFBST1hZIHx8IHByb3BlcnR5ID09PSAkVFJBQ0sgfHwgcHJvcGVydHkgPT09ICROT0RFIHx8IHByb3BlcnR5ID09PSBcIl9fcHJvdG9fX1wiKVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgdGhpcy5nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgdGFyZ2V0KTtcbiAgICByZXR1cm4gcHJvcGVydHkgaW4gdGFyZ2V0O1xuICB9LFxuICBzZXQoKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG4gIGRlbGV0ZVByb3BlcnR5KCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuICBvd25LZXlzLFxuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6IHByb3h5RGVzY3JpcHRvciQxXG59O1xuZnVuY3Rpb24gc2V0UHJvcGVydHkoc3RhdGUsIHByb3BlcnR5LCB2YWx1ZSwgZGVsZXRpbmcgPSBmYWxzZSkge1xuICBpZiAoIWRlbGV0aW5nICYmIHN0YXRlW3Byb3BlcnR5XSA9PT0gdmFsdWUpXG4gICAgcmV0dXJuO1xuICBjb25zdCBwcmV2ID0gc3RhdGVbcHJvcGVydHldLCBsZW4gPSBzdGF0ZS5sZW5ndGg7XG4gIGlmICh2YWx1ZSA9PT0gdm9pZCAwKVxuICAgIGRlbGV0ZSBzdGF0ZVtwcm9wZXJ0eV07XG4gIGVsc2VcbiAgICBzdGF0ZVtwcm9wZXJ0eV0gPSB2YWx1ZTtcbiAgbGV0IG5vZGVzID0gZ2V0RGF0YU5vZGVzKHN0YXRlKSwgbm9kZTtcbiAgaWYgKG5vZGUgPSBnZXREYXRhTm9kZShub2RlcywgcHJvcGVydHksIHByZXYpKVxuICAgIG5vZGUuJCgoKSA9PiB2YWx1ZSk7XG4gIGlmIChBcnJheS5pc0FycmF5KHN0YXRlKSAmJiBzdGF0ZS5sZW5ndGggIT09IGxlbilcbiAgICAobm9kZSA9IGdldERhdGFOb2RlKG5vZGVzLCBcImxlbmd0aFwiLCBsZW4pKSAmJiBub2RlLiQoc3RhdGUubGVuZ3RoKTtcbiAgKG5vZGUgPSBub2Rlcy5fKSAmJiBub2RlLiQoKTtcbn1cbmZ1bmN0aW9uIG1lcmdlU3RvcmVOb2RlKHN0YXRlLCB2YWx1ZSkge1xuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModmFsdWUpO1xuICBmb3IgKGxldCBpMiA9IDA7IGkyIDwga2V5cy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICBjb25zdCBrZXkgPSBrZXlzW2kyXTtcbiAgICBzZXRQcm9wZXJ0eShzdGF0ZSwga2V5LCB2YWx1ZVtrZXldKTtcbiAgfVxufVxuZnVuY3Rpb24gdXBkYXRlQXJyYXkoY3VycmVudCwgbmV4dCkge1xuICBpZiAodHlwZW9mIG5leHQgPT09IFwiZnVuY3Rpb25cIilcbiAgICBuZXh0ID0gbmV4dChjdXJyZW50KTtcbiAgbmV4dCA9IHVud3JhcChuZXh0KTtcbiAgaWYgKEFycmF5LmlzQXJyYXkobmV4dCkpIHtcbiAgICBpZiAoY3VycmVudCA9PT0gbmV4dClcbiAgICAgIHJldHVybjtcbiAgICBsZXQgaTIgPSAwLCBsZW4gPSBuZXh0Lmxlbmd0aDtcbiAgICBmb3IgKDsgaTIgPCBsZW47IGkyKyspIHtcbiAgICAgIGNvbnN0IHZhbHVlID0gbmV4dFtpMl07XG4gICAgICBpZiAoY3VycmVudFtpMl0gIT09IHZhbHVlKVxuICAgICAgICBzZXRQcm9wZXJ0eShjdXJyZW50LCBpMiwgdmFsdWUpO1xuICAgIH1cbiAgICBzZXRQcm9wZXJ0eShjdXJyZW50LCBcImxlbmd0aFwiLCBsZW4pO1xuICB9IGVsc2VcbiAgICBtZXJnZVN0b3JlTm9kZShjdXJyZW50LCBuZXh0KTtcbn1cbmZ1bmN0aW9uIHVwZGF0ZVBhdGgoY3VycmVudCwgcGF0aCwgdHJhdmVyc2VkID0gW10pIHtcbiAgbGV0IHBhcnQsIHByZXYgPSBjdXJyZW50O1xuICBpZiAocGF0aC5sZW5ndGggPiAxKSB7XG4gICAgcGFydCA9IHBhdGguc2hpZnQoKTtcbiAgICBjb25zdCBwYXJ0VHlwZSA9IHR5cGVvZiBwYXJ0LCBpc0FycmF5ID0gQXJyYXkuaXNBcnJheShjdXJyZW50KTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShwYXJ0KSkge1xuICAgICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHBhcnQubGVuZ3RoOyBpMisrKSB7XG4gICAgICAgIHVwZGF0ZVBhdGgoY3VycmVudCwgW3BhcnRbaTJdXS5jb25jYXQocGF0aCksIHRyYXZlcnNlZCk7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIGlmIChpc0FycmF5ICYmIHBhcnRUeXBlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBjdXJyZW50Lmxlbmd0aDsgaTIrKykge1xuICAgICAgICBpZiAocGFydChjdXJyZW50W2kyXSwgaTIpKVxuICAgICAgICAgIHVwZGF0ZVBhdGgoY3VycmVudCwgW2kyXS5jb25jYXQocGF0aCksIHRyYXZlcnNlZCk7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIGlmIChpc0FycmF5ICYmIHBhcnRUeXBlID09PSBcIm9iamVjdFwiKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGZyb20gPSAwLFxuICAgICAgICB0byA9IGN1cnJlbnQubGVuZ3RoIC0gMSxcbiAgICAgICAgYnkgPSAxXG4gICAgICB9ID0gcGFydDtcbiAgICAgIGZvciAobGV0IGkyID0gZnJvbTsgaTIgPD0gdG87IGkyICs9IGJ5KSB7XG4gICAgICAgIHVwZGF0ZVBhdGgoY3VycmVudCwgW2kyXS5jb25jYXQocGF0aCksIHRyYXZlcnNlZCk7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIGlmIChwYXRoLmxlbmd0aCA+IDEpIHtcbiAgICAgIHVwZGF0ZVBhdGgoY3VycmVudFtwYXJ0XSwgcGF0aCwgW3BhcnRdLmNvbmNhdCh0cmF2ZXJzZWQpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcHJldiA9IGN1cnJlbnRbcGFydF07XG4gICAgdHJhdmVyc2VkID0gW3BhcnRdLmNvbmNhdCh0cmF2ZXJzZWQpO1xuICB9XG4gIGxldCB2YWx1ZSA9IHBhdGhbMF07XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhbHVlID0gdmFsdWUocHJldiwgdHJhdmVyc2VkKTtcbiAgICBpZiAodmFsdWUgPT09IHByZXYpXG4gICAgICByZXR1cm47XG4gIH1cbiAgaWYgKHBhcnQgPT09IHZvaWQgMCAmJiB2YWx1ZSA9PSB2b2lkIDApXG4gICAgcmV0dXJuO1xuICB2YWx1ZSA9IHVud3JhcCh2YWx1ZSk7XG4gIGlmIChwYXJ0ID09PSB2b2lkIDAgfHwgaXNXcmFwcGFibGUocHJldikgJiYgaXNXcmFwcGFibGUodmFsdWUpICYmICFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIG1lcmdlU3RvcmVOb2RlKHByZXYsIHZhbHVlKTtcbiAgfSBlbHNlXG4gICAgc2V0UHJvcGVydHkoY3VycmVudCwgcGFydCwgdmFsdWUpO1xufVxuZnVuY3Rpb24gY3JlYXRlU3RvcmUoLi4uW3N0b3JlLCBvcHRpb25zXSkge1xuICBjb25zdCB1bndyYXBwZWRTdG9yZSA9IHVud3JhcChzdG9yZSB8fCB7fSk7XG4gIGNvbnN0IGlzQXJyYXkgPSBBcnJheS5pc0FycmF5KHVud3JhcHBlZFN0b3JlKTtcbiAgY29uc3Qgd3JhcHBlZFN0b3JlID0gd3JhcCQxKHVud3JhcHBlZFN0b3JlKTtcbiAgZnVuY3Rpb24gc2V0U3RvcmUoLi4uYXJncykge1xuICAgIGJhdGNoKCgpID0+IHtcbiAgICAgIGlzQXJyYXkgJiYgYXJncy5sZW5ndGggPT09IDEgPyB1cGRhdGVBcnJheSh1bndyYXBwZWRTdG9yZSwgYXJnc1swXSkgOiB1cGRhdGVQYXRoKHVud3JhcHBlZFN0b3JlLCBhcmdzKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gW3dyYXBwZWRTdG9yZSwgc2V0U3RvcmVdO1xufVxuY29uc3QgZGVmYXVsdExpZ2h0Q29sb3JzU2V0ID0ge1xuICBjb25zdGFudDoge1xuICAgIGJsYWNrOiBcIiMwMDAwMDBcIixcbiAgICB3aGl0ZTogXCIjRkZGRkZGXCJcbiAgfSxcbiAgY29ubmVjdEJ1dHRvbjoge1xuICAgIGJhY2tncm91bmQ6IFwiIzAwOThFQVwiLFxuICAgIGZvcmVncm91bmQ6IFwiI0ZGRkZGRlwiXG4gIH0sXG4gIGFjY2VudDogXCIjMDA5OEVBXCIsXG4gIHRlbGVncmFtQnV0dG9uOiBcIiMwMDk4RUFcIixcbiAgaWNvbjoge1xuICAgIHByaW1hcnk6IFwiIzBGMEYwRlwiLFxuICAgIHNlY29uZGFyeTogXCIjN0E4OTk5XCIsXG4gICAgdGVydGlhcnk6IFwiI0MxQ0FEMlwiLFxuICAgIHN1Y2Nlc3M6IFwiIzI5Q0M2QVwiLFxuICAgIGVycm9yOiBcIiNGNUE3M0JcIlxuICB9LFxuICBiYWNrZ3JvdW5kOiB7XG4gICAgcHJpbWFyeTogXCIjRkZGRkZGXCIsXG4gICAgc2Vjb25kYXJ5OiBcIiNGMUYzRjVcIixcbiAgICBzZWdtZW50OiBcIiNGRkZGRkZcIixcbiAgICB0aW50OiBcIiNGMUYzRjVcIixcbiAgICBxcjogXCIjRjFGM0Y1XCJcbiAgfSxcbiAgdGV4dDoge1xuICAgIHByaW1hcnk6IFwiIzBGMEYwRlwiLFxuICAgIHNlY29uZGFyeTogXCIjNkE3Nzg1XCJcbiAgfVxufTtcbmNvbnN0IGRlZmF1bHREYXJrQ29sb3JzU2V0ID0ge1xuICBjb25zdGFudDoge1xuICAgIGJsYWNrOiBcIiMwMDAwMDBcIixcbiAgICB3aGl0ZTogXCIjRkZGRkZGXCJcbiAgfSxcbiAgY29ubmVjdEJ1dHRvbjoge1xuICAgIGJhY2tncm91bmQ6IFwiIzAwOThFQVwiLFxuICAgIGZvcmVncm91bmQ6IFwiI0ZGRkZGRlwiXG4gIH0sXG4gIGFjY2VudDogXCIjRTVFNUVBXCIsXG4gIHRlbGVncmFtQnV0dG9uOiBcIiMzMUE2RjVcIixcbiAgaWNvbjoge1xuICAgIHByaW1hcnk6IFwiI0U1RTVFQVwiLFxuICAgIHNlY29uZGFyeTogXCIjOTA5MDk5XCIsXG4gICAgdGVydGlhcnk6IFwiIzQzNDM0N1wiLFxuICAgIHN1Y2Nlc3M6IFwiIzI5Q0M2QVwiLFxuICAgIGVycm9yOiBcIiNGNUE3M0JcIlxuICB9LFxuICBiYWNrZ3JvdW5kOiB7XG4gICAgcHJpbWFyeTogXCIjMTIxMjE0XCIsXG4gICAgc2Vjb25kYXJ5OiBcIiMxODE4MUFcIixcbiAgICBzZWdtZW50OiBcIiMyNjI2MjlcIixcbiAgICB0aW50OiBcIiMyMjIyMjRcIixcbiAgICBxcjogXCIjRkZGRkZGXCJcbiAgfSxcbiAgdGV4dDoge1xuICAgIHByaW1hcnk6IFwiI0U1RTVFQVwiLFxuICAgIHNlY29uZGFyeTogXCIjN0Q3RDg1XCJcbiAgfVxufTtcbi8qIVxuICogaXMtcGxhaW4tb2JqZWN0IDxodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9pcy1wbGFpbi1vYmplY3Q+XG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTcsIEpvbiBTY2hsaW5rZXJ0LlxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5mdW5jdGlvbiBpc09iamVjdChvMikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8yKSA9PT0gXCJbb2JqZWN0IE9iamVjdF1cIjtcbn1cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3QobzIpIHtcbiAgdmFyIGN0b3IsIHByb3Q7XG4gIGlmIChpc09iamVjdChvMikgPT09IGZhbHNlKVxuICAgIHJldHVybiBmYWxzZTtcbiAgY3RvciA9IG8yLmNvbnN0cnVjdG9yO1xuICBpZiAoY3RvciA9PT0gdm9pZCAwKVxuICAgIHJldHVybiB0cnVlO1xuICBwcm90ID0gY3Rvci5wcm90b3R5cGU7XG4gIGlmIChpc09iamVjdChwcm90KSA9PT0gZmFsc2UpXG4gICAgcmV0dXJuIGZhbHNlO1xuICBpZiAocHJvdC5oYXNPd25Qcm9wZXJ0eShcImlzUHJvdG90eXBlT2ZcIikgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gbWVyZ2VPcHRpb25zKG9wdGlvbnMsIGRlZmF1bHRPcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIHJldHVybiBkZWZhdWx0T3B0aW9ucztcbiAgfVxuICBjb25zdCBvdmVyd3JpdGVNZXJnZSA9IChfLCBzb3VyY2VBcnJheSwgX18pID0+IHNvdXJjZUFycmF5O1xuICByZXR1cm4gZGVlcG1lcmdlKGRlZmF1bHRPcHRpb25zLCBvcHRpb25zLCB7XG4gICAgYXJyYXlNZXJnZTogb3ZlcndyaXRlTWVyZ2UsXG4gICAgaXNNZXJnZWFibGVPYmplY3Q6IGlzUGxhaW5PYmplY3RcbiAgfSk7XG59XG5jb25zdCBbdGhlbWVTdGF0ZSwgc2V0VGhlbWVTdGF0ZV0gPSBjcmVhdGVTdG9yZSh7XG4gIHRoZW1lOiBUSEVNRS5MSUdIVCxcbiAgY29sb3JzOiBkZWZhdWx0TGlnaHRDb2xvcnNTZXQsXG4gIGJvcmRlclJhZGl1czogXCJtXCJcbn0pO1xuY29uc3QgdGhlbWVDb2xvcnNNYXBwaW5nRGVmYXVsdCA9IHtcbiAgW1RIRU1FLkxJR0hUXTogZGVmYXVsdExpZ2h0Q29sb3JzU2V0LFxuICBbVEhFTUUuREFSS106IGRlZmF1bHREYXJrQ29sb3JzU2V0XG59O1xuY29uc3QgdGhlbWVDdXN0b21Db2xvcnMgPSB7XG4gIFtUSEVNRS5MSUdIVF06IHZvaWQgMCxcbiAgW1RIRU1FLkRBUktdOiB2b2lkIDBcbn07XG5mdW5jdGlvbiBzZXRUaGVtZSh0aGVtZSwgY29sb3JzU2V0KSB7XG4gIGlmIChjb2xvcnNTZXQpIHtcbiAgICB0aGVtZUN1c3RvbUNvbG9yc1tUSEVNRS5EQVJLXSA9IG1lcmdlT3B0aW9ucyhcbiAgICAgIGNvbG9yc1NldFtUSEVNRS5EQVJLXSxcbiAgICAgIHRoZW1lQ3VzdG9tQ29sb3JzW1RIRU1FLkRBUktdXG4gICAgKTtcbiAgICB0aGVtZUN1c3RvbUNvbG9yc1tUSEVNRS5MSUdIVF0gPSBtZXJnZU9wdGlvbnMoXG4gICAgICBjb2xvcnNTZXRbVEhFTUUuTElHSFRdLFxuICAgICAgdGhlbWVDdXN0b21Db2xvcnNbVEhFTUUuTElHSFRdXG4gICAgKTtcbiAgfVxuICBzZXRUaGVtZVN0YXRlKHtcbiAgICB0aGVtZSxcbiAgICBjb2xvcnM6IG1lcmdlT3B0aW9ucyh0aGVtZUN1c3RvbUNvbG9yc1t0aGVtZV0sIHRoZW1lQ29sb3JzTWFwcGluZ0RlZmF1bHRbdGhlbWVdKVxuICB9KTtcbn1cbmZ1bmN0aW9uIHNldEJvcmRlclJhZGl1cyhib3JkZXJSYWRpdXMpIHtcbiAgc2V0VGhlbWVTdGF0ZSh7IGJvcmRlclJhZGl1cyB9KTtcbn1cbmZ1bmN0aW9uIHNldENvbG9ycyhjb2xvcnNTZXQpIHtcbiAgdGhlbWVDdXN0b21Db2xvcnNbVEhFTUUuREFSS10gPSBtZXJnZU9wdGlvbnMoXG4gICAgY29sb3JzU2V0W1RIRU1FLkRBUktdLFxuICAgIHRoZW1lQ3VzdG9tQ29sb3JzW1RIRU1FLkRBUktdXG4gICk7XG4gIHRoZW1lQ3VzdG9tQ29sb3JzW1RIRU1FLkxJR0hUXSA9IG1lcmdlT3B0aW9ucyhcbiAgICBjb2xvcnNTZXRbVEhFTUUuTElHSFRdLFxuICAgIHRoZW1lQ3VzdG9tQ29sb3JzW1RIRU1FLkxJR0hUXVxuICApO1xuICBzZXRUaGVtZVN0YXRlKChzdGF0ZSkgPT4gKHtcbiAgICBjb2xvcnM6IG1lcmdlT3B0aW9ucyhcbiAgICAgIHRoZW1lQ3VzdG9tQ29sb3JzW3N0YXRlLnRoZW1lXSxcbiAgICAgIHRoZW1lQ29sb3JzTWFwcGluZ0RlZmF1bHRbc3RhdGUudGhlbWVdXG4gICAgKVxuICB9KSk7XG59XG5jb25zdCBJbWFnZVBsYWNlaG9sZGVyID0gc3R5bGVkLmRpdmBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQuc2Vjb25kYXJ5fTtcbmA7XG5jb25zdCBJbWFnZSA9IChwcm9wcykgPT4ge1xuICBsZXQgaW1nUmVmO1xuICBjb25zdCBbaW1hZ2UsIHNldEltYWdlXSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBpbWcgPSBuZXcgd2luZG93LkltYWdlKCk7XG4gICAgaW1nLnNyYyA9IHByb3BzLnNyYztcbiAgICBpbWcuYWx0ID0gcHJvcHMuYWx0IHx8IFwiXCI7XG4gICAgaW1nLnNldEF0dHJpYnV0ZShcImRyYWdnYWJsZVwiLCBcImZhbHNlXCIpO1xuICAgIGlmIChwcm9wcy5jbGFzcykge1xuICAgICAgaW1nLmNsYXNzTGlzdC5hZGQocHJvcHMuY2xhc3MpO1xuICAgIH1cbiAgICBpZiAoaW1nLmNvbXBsZXRlKSB7XG4gICAgICByZXR1cm4gc2V0SW1hZ2UoaW1nKTtcbiAgICB9XG4gICAgaW1nLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IHNldEltYWdlKGltZykpO1xuICAgIHJldHVybiAoKSA9PiBpbWcucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4gc2V0SW1hZ2UoaW1nKSk7XG4gIH0pO1xuICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgZ2V0IHdoZW4oKSB7XG4gICAgICByZXR1cm4gaW1hZ2UoKTtcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBpbWFnZSgpO1xuICAgIH1cbiAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgZ2V0IHdoZW4oKSB7XG4gICAgICByZXR1cm4gIWltYWdlKCk7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEltYWdlUGxhY2Vob2xkZXIsIHtcbiAgICAgICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICAgICAgfSxcbiAgICAgICAgcmVmKHIkKSB7XG4gICAgICAgICAgY29uc3QgX3JlZiQgPSBpbWdSZWY7XG4gICAgICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgPyBfcmVmJChyJCkgOiBpbWdSZWYgPSByJDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9KV07XG59O1xubGV0IGluaXRQYXJhbXMgPSB7fTtcbnRyeSB7XG4gIGxldCBsb2NhdGlvbkhhc2ggPSBsb2NhdGlvbi5oYXNoLnRvU3RyaW5nKCk7XG4gIGluaXRQYXJhbXMgPSB1cmxQYXJzZUhhc2hQYXJhbXMobG9jYXRpb25IYXNoKTtcbn0gY2F0Y2ggKGUyKSB7XG59XG5sZXQgdG1hUGxhdGZvcm0gPSBcInVua25vd25cIjtcbmlmIChpbml0UGFyYW1zID09IG51bGwgPyB2b2lkIDAgOiBpbml0UGFyYW1zLnRnV2ViQXBwUGxhdGZvcm0pIHtcbiAgdG1hUGxhdGZvcm0gPSAoX2EgPSBpbml0UGFyYW1zLnRnV2ViQXBwUGxhdGZvcm0pICE9IG51bGwgPyBfYSA6IFwidW5rbm93blwiO1xufVxuaWYgKHRtYVBsYXRmb3JtID09PSBcInVua25vd25cIikge1xuICBjb25zdCB3aW5kb3cyID0gZ2V0V2luZG93JDEoKTtcbiAgdG1hUGxhdGZvcm0gPSAoX2QgPSAoX2MgPSAoX2IgPSB3aW5kb3cyID09IG51bGwgPyB2b2lkIDAgOiB3aW5kb3cyLlRlbGVncmFtKSA9PSBudWxsID8gdm9pZCAwIDogX2IuV2ViQXBwKSA9PSBudWxsID8gdm9pZCAwIDogX2MucGxhdGZvcm0pICE9IG51bGwgPyBfZCA6IFwidW5rbm93blwiO1xufVxubGV0IHdlYkFwcFZlcnNpb24gPSBcIjYuMFwiO1xuaWYgKGluaXRQYXJhbXMgPT0gbnVsbCA/IHZvaWQgMCA6IGluaXRQYXJhbXMudGdXZWJBcHBWZXJzaW9uKSB7XG4gIHdlYkFwcFZlcnNpb24gPSBpbml0UGFyYW1zLnRnV2ViQXBwVmVyc2lvbjtcbn1cbmlmICghd2ViQXBwVmVyc2lvbikge1xuICBjb25zdCB3aW5kb3cyID0gZ2V0V2luZG93JDEoKTtcbiAgd2ViQXBwVmVyc2lvbiA9IChfZyA9IChfZiA9IChfZSA9IHdpbmRvdzIgPT0gbnVsbCA/IHZvaWQgMCA6IHdpbmRvdzIuVGVsZWdyYW0pID09IG51bGwgPyB2b2lkIDAgOiBfZS5XZWJBcHApID09IG51bGwgPyB2b2lkIDAgOiBfZi52ZXJzaW9uKSAhPSBudWxsID8gX2cgOiBcIjYuMFwiO1xufVxuZnVuY3Rpb24gaXNUbWFQbGF0Zm9ybSguLi5wbGF0Zm9ybXMpIHtcbiAgcmV0dXJuIHBsYXRmb3Jtcy5pbmNsdWRlcyh0bWFQbGF0Zm9ybSk7XG59XG5mdW5jdGlvbiBpc0luVE1BKCkge1xuICB2YXIgX2EyO1xuICByZXR1cm4gdG1hUGxhdGZvcm0gIT09IFwidW5rbm93blwiIHx8ICEhKChfYTIgPSBnZXRXaW5kb3ckMSgpKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLlRlbGVncmFtV2Vidmlld1Byb3h5KTtcbn1cbmZ1bmN0aW9uIGlzSW5UZWxlZ3JhbUJyb3dzZXIoKSB7XG4gIHZhciBfYTI7XG4gIGNvbnN0IGlzVGVsZWdyYW1XZWJ2aWV3ID0gISEoKF9hMiA9IGdldFdpbmRvdyQxKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuVGVsZWdyYW1XZWJ2aWV3KTtcbiAgcmV0dXJuIChpc0luVE1BKCkgfHwgaXNUZWxlZ3JhbVdlYnZpZXcpICYmIHRtYVBsYXRmb3JtID09PSBcInVua25vd25cIjtcbn1cbmZ1bmN0aW9uIHNlbmRFeHBhbmQoKSB7XG4gIHBvc3RFdmVudChcIndlYl9hcHBfZXhwYW5kXCIsIHt9KTtcbn1cbmZ1bmN0aW9uIHNlbmRPcGVuVGVsZWdyYW1MaW5rKGxpbmssIGZhbGxiYWNrKSB7XG4gIGNvbnN0IHVybCA9IG5ldyBVUkwobGluayk7XG4gIGlmICh1cmwucHJvdG9jb2wgIT09IFwiaHR0cDpcIiAmJiB1cmwucHJvdG9jb2wgIT09IFwiaHR0cHM6XCIpIHtcbiAgICBpZiAoZmFsbGJhY2spIHtcbiAgICAgIHJldHVybiBmYWxsYmFjaygpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoYFVybCBwcm90b2NvbCBpcyBub3Qgc3VwcG9ydGVkOiAke3VybH1gKTtcbiAgfVxuICBpZiAodXJsLmhvc3RuYW1lICE9PSBcInQubWVcIikge1xuICAgIGlmIChmYWxsYmFjaykge1xuICAgICAgcmV0dXJuIGZhbGxiYWNrKCk7XG4gICAgfVxuICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihgVXJsIGhvc3QgaXMgbm90IHN1cHBvcnRlZDogJHt1cmx9YCk7XG4gIH1cbiAgY29uc3QgcGF0aEZ1bGwgPSB1cmwucGF0aG5hbWUgKyB1cmwuc2VhcmNoO1xuICBpZiAoaXNJZnJhbWUoKSB8fCB2ZXJzaW9uQXRMZWFzdChcIjYuMVwiKSkge1xuICAgIHBvc3RFdmVudChcIndlYl9hcHBfb3Blbl90Z19saW5rXCIsIHsgcGF0aF9mdWxsOiBwYXRoRnVsbCB9KTtcbiAgfSBlbHNlIHtcbiAgICBvcGVuTGlua0JsYW5rKFwiaHR0cHM6Ly90Lm1lXCIgKyBwYXRoRnVsbCk7XG4gIH1cbn1cbmZ1bmN0aW9uIGlzSWZyYW1lKCkge1xuICB0cnkge1xuICAgIGNvbnN0IHdpbmRvdzIgPSBnZXRXaW5kb3ckMSgpO1xuICAgIGlmICghd2luZG93Mikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gd2luZG93Mi5wYXJlbnQgIT0gbnVsbCAmJiB3aW5kb3cyICE9PSB3aW5kb3cyLnBhcmVudDtcbiAgfSBjYXRjaCAoZTIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbmZ1bmN0aW9uIHBvc3RFdmVudChldmVudFR5cGUsIGV2ZW50RGF0YSkge1xuICB0cnkge1xuICAgIGNvbnN0IHdpbmRvdzIgPSBnZXRXaW5kb3ckMSgpO1xuICAgIGlmICghd2luZG93Mikge1xuICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKGBDYW4ndCBwb3N0IGV2ZW50IHRvIHBhcmVudCB3aW5kb3c6IHdpbmRvdyBpcyBub3QgZGVmaW5lZGApO1xuICAgIH1cbiAgICBpZiAod2luZG93Mi5UZWxlZ3JhbVdlYnZpZXdQcm94eSAhPT0gdm9pZCAwKSB7XG4gICAgICBsb2dEZWJ1ZyhcInBvc3RFdmVudFwiLCBldmVudFR5cGUsIGV2ZW50RGF0YSk7XG4gICAgICB3aW5kb3cyLlRlbGVncmFtV2Vidmlld1Byb3h5LnBvc3RFdmVudChldmVudFR5cGUsIEpTT04uc3RyaW5naWZ5KGV2ZW50RGF0YSkpO1xuICAgIH0gZWxzZSBpZiAod2luZG93Mi5leHRlcm5hbCAmJiBcIm5vdGlmeVwiIGluIHdpbmRvdzIuZXh0ZXJuYWwpIHtcbiAgICAgIGxvZ0RlYnVnKFwicG9zdEV2ZW50XCIsIGV2ZW50VHlwZSwgZXZlbnREYXRhKTtcbiAgICAgIHdpbmRvdzIuZXh0ZXJuYWwubm90aWZ5KEpTT04uc3RyaW5naWZ5KHsgZXZlbnRUeXBlLCBldmVudERhdGEgfSkpO1xuICAgIH0gZWxzZSBpZiAoaXNJZnJhbWUoKSkge1xuICAgICAgY29uc3QgdHJ1c3RlZFRhcmdldCA9IFwiKlwiO1xuICAgICAgY29uc3QgbWVzc2FnZSA9IEpTT04uc3RyaW5naWZ5KHsgZXZlbnRUeXBlLCBldmVudERhdGEgfSk7XG4gICAgICBsb2dEZWJ1ZyhcInBvc3RFdmVudFwiLCBldmVudFR5cGUsIGV2ZW50RGF0YSk7XG4gICAgICB3aW5kb3cyLnBhcmVudC5wb3N0TWVzc2FnZShtZXNzYWdlLCB0cnVzdGVkVGFyZ2V0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKGBDYW4ndCBwb3N0IGV2ZW50IHRvIFRNQWApO1xuICAgIH1cbiAgfSBjYXRjaCAoZTIpIHtcbiAgICBsb2dFcnJvcihgQ2FuJ3QgcG9zdCBldmVudCB0byBwYXJlbnQgd2luZG93OiAke2UyfWApO1xuICB9XG59XG5mdW5jdGlvbiB1cmxQYXJzZUhhc2hQYXJhbXMobG9jYXRpb25IYXNoKSB7XG4gIGxvY2F0aW9uSGFzaCA9IGxvY2F0aW9uSGFzaC5yZXBsYWNlKC9eIy8sIFwiXCIpO1xuICBsZXQgcGFyYW1zID0ge307XG4gIGlmICghbG9jYXRpb25IYXNoLmxlbmd0aCkge1xuICAgIHJldHVybiBwYXJhbXM7XG4gIH1cbiAgaWYgKGxvY2F0aW9uSGFzaC5pbmRleE9mKFwiPVwiKSA8IDAgJiYgbG9jYXRpb25IYXNoLmluZGV4T2YoXCI/XCIpIDwgMCkge1xuICAgIHBhcmFtcy5fcGF0aCA9IHVybFNhZmVEZWNvZGUobG9jYXRpb25IYXNoKTtcbiAgICByZXR1cm4gcGFyYW1zO1xuICB9XG4gIGxldCBxSW5kZXggPSBsb2NhdGlvbkhhc2guaW5kZXhPZihcIj9cIik7XG4gIGlmIChxSW5kZXggPj0gMCkge1xuICAgIGxldCBwYXRoUGFyYW0gPSBsb2NhdGlvbkhhc2guc3Vic3RyKDAsIHFJbmRleCk7XG4gICAgcGFyYW1zLl9wYXRoID0gdXJsU2FmZURlY29kZShwYXRoUGFyYW0pO1xuICAgIGxvY2F0aW9uSGFzaCA9IGxvY2F0aW9uSGFzaC5zdWJzdHIocUluZGV4ICsgMSk7XG4gIH1cbiAgbGV0IHF1ZXJ5X3BhcmFtcyA9IHVybFBhcnNlUXVlcnlTdHJpbmcobG9jYXRpb25IYXNoKTtcbiAgZm9yIChsZXQgayBpbiBxdWVyeV9wYXJhbXMpIHtcbiAgICBwYXJhbXNba10gPSBxdWVyeV9wYXJhbXNba107XG4gIH1cbiAgcmV0dXJuIHBhcmFtcztcbn1cbmZ1bmN0aW9uIHVybFNhZmVEZWNvZGUodXJsZW5jb2RlZCkge1xuICB0cnkge1xuICAgIHVybGVuY29kZWQgPSB1cmxlbmNvZGVkLnJlcGxhY2UoL1xcKy9nLCBcIiUyMFwiKTtcbiAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHVybGVuY29kZWQpO1xuICB9IGNhdGNoIChlMikge1xuICAgIHJldHVybiB1cmxlbmNvZGVkO1xuICB9XG59XG5mdW5jdGlvbiB1cmxQYXJzZVF1ZXJ5U3RyaW5nKHF1ZXJ5U3RyaW5nKSB7XG4gIGxldCBwYXJhbXMgPSB7fTtcbiAgaWYgKCFxdWVyeVN0cmluZy5sZW5ndGgpIHtcbiAgICByZXR1cm4gcGFyYW1zO1xuICB9XG4gIGxldCBxdWVyeVN0cmluZ1BhcmFtcyA9IHF1ZXJ5U3RyaW5nLnNwbGl0KFwiJlwiKTtcbiAgbGV0IGkyLCBwYXJhbSwgcGFyYW1OYW1lLCBwYXJhbVZhbHVlO1xuICBmb3IgKGkyID0gMDsgaTIgPCBxdWVyeVN0cmluZ1BhcmFtcy5sZW5ndGg7IGkyKyspIHtcbiAgICBwYXJhbSA9IHF1ZXJ5U3RyaW5nUGFyYW1zW2kyXS5zcGxpdChcIj1cIik7XG4gICAgcGFyYW1OYW1lID0gdXJsU2FmZURlY29kZShwYXJhbVswXSk7XG4gICAgcGFyYW1WYWx1ZSA9IHBhcmFtWzFdID09IG51bGwgPyBudWxsIDogdXJsU2FmZURlY29kZShwYXJhbVsxXSk7XG4gICAgcGFyYW1zW3BhcmFtTmFtZV0gPSBwYXJhbVZhbHVlO1xuICB9XG4gIHJldHVybiBwYXJhbXM7XG59XG5mdW5jdGlvbiB2ZXJzaW9uQ29tcGFyZSh2MSwgdjIpIHtcbiAgaWYgKHR5cGVvZiB2MSAhPT0gXCJzdHJpbmdcIilcbiAgICB2MSA9IFwiXCI7XG4gIGlmICh0eXBlb2YgdjIgIT09IFwic3RyaW5nXCIpXG4gICAgdjIgPSBcIlwiO1xuICBsZXQgdjFMaXN0ID0gdjEucmVwbGFjZSgvXlxccyt8XFxzKyQvZywgXCJcIikuc3BsaXQoXCIuXCIpO1xuICBsZXQgdjJMaXN0ID0gdjIucmVwbGFjZSgvXlxccyt8XFxzKyQvZywgXCJcIikuc3BsaXQoXCIuXCIpO1xuICBsZXQgYTIsIGkyLCBwMSwgcDI7XG4gIGEyID0gTWF0aC5tYXgodjFMaXN0Lmxlbmd0aCwgdjJMaXN0Lmxlbmd0aCk7XG4gIGZvciAoaTIgPSAwOyBpMiA8IGEyOyBpMisrKSB7XG4gICAgcDEgPSBwYXJzZUludCh2MUxpc3RbaTJdKSB8fCAwO1xuICAgIHAyID0gcGFyc2VJbnQodjJMaXN0W2kyXSkgfHwgMDtcbiAgICBpZiAocDEgPT09IHAyKVxuICAgICAgY29udGludWU7XG4gICAgaWYgKHAxID4gcDIpXG4gICAgICByZXR1cm4gMTtcbiAgICByZXR1cm4gLTE7XG4gIH1cbiAgcmV0dXJuIDA7XG59XG5mdW5jdGlvbiB2ZXJzaW9uQXRMZWFzdCh2ZXIpIHtcbiAgcmV0dXJuIHZlcnNpb25Db21wYXJlKHdlYkFwcFZlcnNpb24sIHZlcikgPj0gMDtcbn1cbmNvbnN0IG1heFdpZHRoID0ge1xuICBtb2JpbGU6IDQ0MCxcbiAgdGFibGV0OiAxMDIwXG59O1xuZnVuY3Rpb24gaXNEZXZpY2UoZGV2aWNlKSB7XG4gIGNvbnN0IHdpbmRvdzIgPSBnZXRXaW5kb3ckMSgpO1xuICBpZiAoIXdpbmRvdzIpIHtcbiAgICByZXR1cm4gZGV2aWNlID09PSBcImRlc2t0b3BcIjtcbiAgfVxuICBpZiAoaXNUbWFQbGF0Zm9ybShcIndlYmFcIikpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBjb25zdCB3aWR0aCA9IHdpbmRvdzIuaW5uZXJXaWR0aDtcbiAgc3dpdGNoIChkZXZpY2UpIHtcbiAgICBjYXNlIFwiZGVza3RvcFwiOlxuICAgICAgcmV0dXJuIHdpZHRoID4gbWF4V2lkdGgudGFibGV0O1xuICAgIGNhc2UgXCJ0YWJsZXRcIjpcbiAgICAgIHJldHVybiB3aWR0aCA+IG1heFdpZHRoLm1vYmlsZTtcbiAgICBkZWZhdWx0OlxuICAgIGNhc2UgXCJtb2JpbGVcIjpcbiAgICAgIHJldHVybiB3aWR0aCA8PSBtYXhXaWR0aC5tb2JpbGUgfHwgaXNPUyhcImlvc1wiLCBcImFuZHJvaWRcIiwgXCJpcGFkXCIpO1xuICB9XG59XG5mdW5jdGlvbiBtZWRpYShkZXZpY2UpIHtcbiAgc3dpdGNoIChkZXZpY2UpIHtcbiAgICBjYXNlIFwibW9iaWxlXCI6XG4gICAgICByZXR1cm4gYEBtZWRpYSAobWF4LXdpZHRoOiAke21heFdpZHRoLm1vYmlsZX1weClgO1xuICAgIGNhc2UgXCJ0YWJsZXRcIjpcbiAgICAgIHJldHVybiBgQG1lZGlhIChtYXgtd2lkdGg6ICR7bWF4V2lkdGgudGFibGV0fXB4KSAobWluLXdpZHRoOiAke21heFdpZHRoLm1vYmlsZX1weClgO1xuICAgIGRlZmF1bHQ6XG4gICAgY2FzZSBcImRlc2t0b3BcIjpcbiAgICAgIHJldHVybiBgQG1lZGlhIChtaW4td2lkdGg6ICR7bWF4V2lkdGgudGFibGV0fXB4KWA7XG4gIH1cbn1cbmNvbnN0IG1lZGlhVG91Y2ggPSBcIkBtZWRpYSAoaG92ZXI6IG5vbmUpXCI7XG5jb25zdCBtZWRpYU5vdFRvdWNoID0gXCJAbWVkaWEgbm90IGFsbCBhbmQgKGhvdmVyOiBub25lKVwiO1xuY29uc3QgYm9yZGVycyQ1ID0ge1xuICBtOiBcIjEwMHZoXCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3Qgc2NhbGVWYWx1ZXMgPSB7XG4gIHM6IDAuMDIsXG4gIG06IDAuMDRcbn07XG5jb25zdCBCdXR0b25TdHlsZWQkMSA9IHN0eWxlZC5idXR0b25gXG4gICAgZGlzcGxheTogJHsocHJvcHMpID0+IHByb3BzLmxlZnRJY29uIHx8IHByb3BzLnJpZ2h0SWNvbiA/IFwiZmxleFwiIDogXCJpbmxpbmUtYmxvY2tcIn07XG4gICAgZ2FwOiAkeyhwcm9wcykgPT4gcHJvcHMubGVmdEljb24gfHwgcHJvcHMucmlnaHRJY29uID8gXCI2cHhcIiA6IFwidW5zZXRcIn07XG4gICAgYWxpZ24taXRlbXM6ICR7KHByb3BzKSA9PiBwcm9wcy5sZWZ0SWNvbiB8fCBwcm9wcy5yaWdodEljb24gPyBcImNlbnRlclwiIDogXCJ1bnNldFwifTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICR7KHByb3BzKSA9PiBwcm9wcy5sZWZ0SWNvbiB8fCBwcm9wcy5yaWdodEljb24gPyBcInNwYWNlLWJldHdlZW5cIiA6IFwidW5zZXRcIn07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLmFwcGVhcmFuY2UgPT09IFwiZmxhdFwiID8gXCJ0cmFuc3BhcmVudFwiIDogcHJvcHMuYXBwZWFyYW5jZSA9PT0gXCJzZWNvbmRhcnlcIiA/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnRpbnQgOiByZ2JhKHByb3BzLnRoZW1lLmNvbG9ycy5hY2NlbnQsIDAuMTIpfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLmFwcGVhcmFuY2UgPT09IFwic2Vjb25kYXJ5XCIgPyBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5wcmltYXJ5IDogcHJvcHMudGhlbWUuY29sb3JzLmFjY2VudH07XG5cbiAgICBwYWRkaW5nOiAkeyhwcm9wcykgPT4gcHJvcHMuYXBwZWFyYW5jZSA9PT0gXCJmbGF0XCIgPyBcIjBcIiA6IFwiOXB4IDE2cHhcIn07XG4gICAgcGFkZGluZy1sZWZ0OiAkeyhwcm9wcykgPT4gcHJvcHMubGVmdEljb24gJiYgcHJvcHMuYXBwZWFyYW5jZSAhPT0gXCJmbGF0XCIgPyBcIjEycHhcIiA6IFwiMTZweFwifTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMucmlnaHRJY29uICYmIHByb3BzLmFwcGVhcmFuY2UgIT09IFwiZmxhdFwiID8gXCIxMnB4XCIgOiBcIjE2cHhcIn07XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBib3JkZXJzJDVbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgY3Vyc29yOiAkeyhwcm9wcykgPT4gcHJvcHMuZGlzYWJsZWQgPyBcIm5vdC1hbGxvd2VkXCIgOiBcInBvaW50ZXJcIn07XG5cbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgZm9udC13ZWlnaHQ6IDUxMDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcblxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEyNXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAke21lZGlhTm90VG91Y2h9IHtcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiBwcm9wcy5kaXNhYmxlZCA/IFwidW5zZXRcIiA6IGBzY2FsZSgkezEgKyBzY2FsZVZhbHVlc1twcm9wcy5zY2FsZV19KWB9O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJjphY3RpdmUge1xuICAgICAgICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiBwcm9wcy5kaXNhYmxlZCA/IFwidW5zZXRcIiA6IGBzY2FsZSgkezEgLSBzY2FsZVZhbHVlc1twcm9wcy5zY2FsZV19KWB9O1xuICAgIH1cblxuICAgICR7bWVkaWFUb3VjaH0ge1xuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiBwcm9wcy5kaXNhYmxlZCA/IFwidW5zZXRcIiA6IGBzY2FsZSgkezEgLSBzY2FsZVZhbHVlc1twcm9wcy5zY2FsZV0gKiAyfSlgfTtcbiAgICAgICAgfVxuICAgIH1cbmA7XG5mdW5jdGlvbiB1c2VEYXRhQXR0cmlidXRlcyhwcm9wcykge1xuICBjb25zdCBrZXlzID0gdW50cmFjaygoKSA9PiBPYmplY3Qua2V5cyhwcm9wcykuZmlsdGVyKChrZXkpID0+IGtleS5zdGFydHNXaXRoKFwiZGF0YS1cIikpKTtcbiAgY29uc3QgW2RhdGFBdHRyc10gPSBzcGxpdFByb3BzKHByb3BzLCBrZXlzKTtcbiAgcmV0dXJuIGRhdGFBdHRycztcbn1cbmNvbnN0IEJ1dHRvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBkYXRhQXR0cnMgPSB1c2VEYXRhQXR0cmlidXRlcyhwcm9wcyk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uU3R5bGVkJDEsIG1lcmdlUHJvcHMoe1xuICAgIGdldCBhcHBlYXJhbmNlKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmFwcGVhcmFuY2UgfHwgXCJwcmltYXJ5XCI7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBvbkNsaWNrOiAoZTIpID0+IHtcbiAgICAgIHZhciBfYTI7XG4gICAgICByZXR1cm4gKF9hMiA9IHByb3BzLm9uQ2xpY2spID09IG51bGwgPyB2b2lkIDAgOiBfYTIuY2FsbChwcm9wcywgZTIpO1xuICAgIH0sXG4gICAgb25Nb3VzZUVudGVyOiAoZTIpID0+IHtcbiAgICAgIHZhciBfYTI7XG4gICAgICByZXR1cm4gKF9hMiA9IHByb3BzLm9uTW91c2VFbnRlcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5jYWxsKHByb3BzLCBlMik7XG4gICAgfSxcbiAgICBvbk1vdXNlTGVhdmU6IChlMikgPT4ge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIHJldHVybiAoX2EyID0gcHJvcHMub25Nb3VzZUxlYXZlKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmNhbGwocHJvcHMsIGUyKTtcbiAgICB9LFxuICAgIHJlZihyJCkge1xuICAgICAgY29uc3QgX3JlZiQgPSBwcm9wcy5yZWY7XG4gICAgICB0eXBlb2YgX3JlZiQgPT09IFwiZnVuY3Rpb25cIiA/IF9yZWYkKHIkKSA6IHByb3BzLnJlZiA9IHIkO1xuICAgIH0sXG4gICAgZ2V0IGRpc2FibGVkKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmRpc2FibGVkO1xuICAgIH0sXG4gICAgZ2V0IHNjYWxlKCkge1xuICAgICAgcmV0dXJuIHByb3BzLnNjYWxlIHx8IFwibVwiO1xuICAgIH0sXG4gICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgcmV0dXJuICEhcHJvcHMubGVmdEljb247XG4gICAgfSxcbiAgICBnZXQgcmlnaHRJY29uKCkge1xuICAgICAgcmV0dXJuICEhcHJvcHMucmlnaHRJY29uO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLWJ1dHRvblwiOiBcInRydWVcIlxuICB9LCBkYXRhQXR0cnMsIHtcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZU1lbW8oKCkgPT4gcHJvcHMubGVmdEljb24pLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLmNoaWxkcmVuKSwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy5yaWdodEljb24pXTtcbiAgICB9XG4gIH0pKTtcbn07XG5mdW5jdGlvbiBuZXh0RnJhbWUoZm4pIHtcbiAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZm4pO1xuICB9KTtcbn1cbmNvbnN0IFRyYW5zaXRpb24gPSAocHJvcHMpID0+IHtcbiAgbGV0IGVsO1xuICBsZXQgZmlyc3QgPSB0cnVlO1xuICBjb25zdCBbczEsIHNldDFdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFtzMiwgc2V0Ml0gPSBjcmVhdGVTaWduYWwoKTtcbiAgY29uc3QgcmVzb2x2ZWQgPSBjaGlsZHJlbigoKSA9PiBwcm9wcy5jaGlsZHJlbik7XG4gIGNvbnN0IHtcbiAgICBvbkJlZm9yZUVudGVyLFxuICAgIG9uRW50ZXIsXG4gICAgb25BZnRlckVudGVyLFxuICAgIG9uQmVmb3JlRXhpdCxcbiAgICBvbkV4aXQsXG4gICAgb25BZnRlckV4aXRcbiAgfSA9IHByb3BzO1xuICBjb25zdCBjbGFzc25hbWVzID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgbmFtZSA9IHByb3BzLm5hbWUgfHwgXCJzXCI7XG4gICAgcmV0dXJuIHtcbiAgICAgIGVudGVyQWN0aXZlQ2xhc3M6IHByb3BzLmVudGVyQWN0aXZlQ2xhc3MgfHwgbmFtZSArIFwiLWVudGVyLWFjdGl2ZVwiLFxuICAgICAgZW50ZXJDbGFzczogcHJvcHMuZW50ZXJDbGFzcyB8fCBuYW1lICsgXCItZW50ZXJcIixcbiAgICAgIGVudGVyVG9DbGFzczogcHJvcHMuZW50ZXJUb0NsYXNzIHx8IG5hbWUgKyBcIi1lbnRlci10b1wiLFxuICAgICAgZXhpdEFjdGl2ZUNsYXNzOiBwcm9wcy5leGl0QWN0aXZlQ2xhc3MgfHwgbmFtZSArIFwiLWV4aXQtYWN0aXZlXCIsXG4gICAgICBleGl0Q2xhc3M6IHByb3BzLmV4aXRDbGFzcyB8fCBuYW1lICsgXCItZXhpdFwiLFxuICAgICAgZXhpdFRvQ2xhc3M6IHByb3BzLmV4aXRUb0NsYXNzIHx8IG5hbWUgKyBcIi1leGl0LXRvXCJcbiAgICB9O1xuICB9KTtcbiAgZnVuY3Rpb24gZW50ZXJUcmFuc2l0aW9uKGVsMiwgcHJldikge1xuICAgIGlmICghZmlyc3QgfHwgcHJvcHMuYXBwZWFyKSB7XG4gICAgICBsZXQgZW5kVHJhbnNpdGlvbiA9IGZ1bmN0aW9uKGUyKSB7XG4gICAgICAgIGlmIChlbDIgJiYgKCFlMiB8fCBlMi50YXJnZXQgPT09IGVsMikpIHtcbiAgICAgICAgICBlbDIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgZWwyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhbmltYXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgZWwyLmNsYXNzTGlzdC5yZW1vdmUoLi4uZW50ZXJBY3RpdmVDbGFzc2VzKTtcbiAgICAgICAgICBlbDIuY2xhc3NMaXN0LnJlbW92ZSguLi5lbnRlclRvQ2xhc3Nlcyk7XG4gICAgICAgICAgYmF0Y2goKCkgPT4ge1xuICAgICAgICAgICAgczEoKSAhPT0gZWwyICYmIHNldDEoZWwyKTtcbiAgICAgICAgICAgIHMyKCkgPT09IGVsMiAmJiBzZXQyKHZvaWQgMCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgb25BZnRlckVudGVyICYmIG9uQWZ0ZXJFbnRlcihlbDIpO1xuICAgICAgICAgIGlmIChwcm9wcy5tb2RlID09PSBcImlub3V0XCIpXG4gICAgICAgICAgICBleGl0VHJhbnNpdGlvbihlbDIsIHByZXYpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgY29uc3QgZW50ZXJDbGFzc2VzID0gY2xhc3NuYW1lcygpLmVudGVyQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgICAgY29uc3QgZW50ZXJBY3RpdmVDbGFzc2VzID0gY2xhc3NuYW1lcygpLmVudGVyQWN0aXZlQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgICAgY29uc3QgZW50ZXJUb0NsYXNzZXMgPSBjbGFzc25hbWVzKCkuZW50ZXJUb0NsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICAgIG9uQmVmb3JlRW50ZXIgJiYgb25CZWZvcmVFbnRlcihlbDIpO1xuICAgICAgZWwyLmNsYXNzTGlzdC5hZGQoLi4uZW50ZXJDbGFzc2VzKTtcbiAgICAgIGVsMi5jbGFzc0xpc3QuYWRkKC4uLmVudGVyQWN0aXZlQ2xhc3Nlcyk7XG4gICAgICBuZXh0RnJhbWUoKCkgPT4ge1xuICAgICAgICBlbDIuY2xhc3NMaXN0LnJlbW92ZSguLi5lbnRlckNsYXNzZXMpO1xuICAgICAgICBlbDIuY2xhc3NMaXN0LmFkZCguLi5lbnRlclRvQ2xhc3Nlcyk7XG4gICAgICAgIG9uRW50ZXIgJiYgb25FbnRlcihlbDIsICgpID0+IGVuZFRyYW5zaXRpb24oKSk7XG4gICAgICAgIGlmICghb25FbnRlciB8fCBvbkVudGVyLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICBlbDIuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgZWwyLmFkZEV2ZW50TGlzdGVuZXIoXCJhbmltYXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICBwcmV2ICYmICFwcm9wcy5tb2RlID8gc2V0MihlbDIpIDogc2V0MShlbDIpO1xuICB9XG4gIGZ1bmN0aW9uIGV4aXRUcmFuc2l0aW9uKGVsMiwgcHJldikge1xuICAgIGNvbnN0IGV4aXRDbGFzc2VzID0gY2xhc3NuYW1lcygpLmV4aXRDbGFzcy5zcGxpdChcIiBcIik7XG4gICAgY29uc3QgZXhpdEFjdGl2ZUNsYXNzZXMgPSBjbGFzc25hbWVzKCkuZXhpdEFjdGl2ZUNsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBjb25zdCBleGl0VG9DbGFzc2VzID0gY2xhc3NuYW1lcygpLmV4aXRUb0NsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBpZiAoIXByZXYucGFyZW50Tm9kZSlcbiAgICAgIHJldHVybiBlbmRUcmFuc2l0aW9uKCk7XG4gICAgb25CZWZvcmVFeGl0ICYmIG9uQmVmb3JlRXhpdChwcmV2KTtcbiAgICBwcmV2LmNsYXNzTGlzdC5hZGQoLi4uZXhpdENsYXNzZXMpO1xuICAgIHByZXYuY2xhc3NMaXN0LmFkZCguLi5leGl0QWN0aXZlQ2xhc3Nlcyk7XG4gICAgbmV4dEZyYW1lKCgpID0+IHtcbiAgICAgIHByZXYuY2xhc3NMaXN0LnJlbW92ZSguLi5leGl0Q2xhc3Nlcyk7XG4gICAgICBwcmV2LmNsYXNzTGlzdC5hZGQoLi4uZXhpdFRvQ2xhc3Nlcyk7XG4gICAgfSk7XG4gICAgb25FeGl0ICYmIG9uRXhpdChwcmV2LCAoKSA9PiBlbmRUcmFuc2l0aW9uKCkpO1xuICAgIGlmICghb25FeGl0IHx8IG9uRXhpdC5sZW5ndGggPCAyKSB7XG4gICAgICBwcmV2LmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgcHJldi5hZGRFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBlbmRUcmFuc2l0aW9uKGUyKSB7XG4gICAgICBpZiAoIWUyIHx8IGUyLnRhcmdldCA9PT0gcHJldikge1xuICAgICAgICBwcmV2LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICBwcmV2LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhbmltYXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgIHByZXYuY2xhc3NMaXN0LnJlbW92ZSguLi5leGl0QWN0aXZlQ2xhc3Nlcyk7XG4gICAgICAgIHByZXYuY2xhc3NMaXN0LnJlbW92ZSguLi5leGl0VG9DbGFzc2VzKTtcbiAgICAgICAgczEoKSA9PT0gcHJldiAmJiBzZXQxKHZvaWQgMCk7XG4gICAgICAgIG9uQWZ0ZXJFeGl0ICYmIG9uQWZ0ZXJFeGl0KHByZXYpO1xuICAgICAgICBpZiAocHJvcHMubW9kZSA9PT0gXCJvdXRpblwiKVxuICAgICAgICAgIGVudGVyVHJhbnNpdGlvbihlbDIsIHByZXYpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBjcmVhdGVDb21wdXRlZCgocHJldikgPT4ge1xuICAgIGVsID0gcmVzb2x2ZWQoKTtcbiAgICB3aGlsZSAodHlwZW9mIGVsID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICBlbCA9IGVsKCk7XG4gICAgcmV0dXJuIHVudHJhY2soKCkgPT4ge1xuICAgICAgaWYgKGVsICYmIGVsICE9PSBwcmV2KSB7XG4gICAgICAgIGlmIChwcm9wcy5tb2RlICE9PSBcIm91dGluXCIpXG4gICAgICAgICAgZW50ZXJUcmFuc2l0aW9uKGVsLCBwcmV2KTtcbiAgICAgICAgZWxzZSBpZiAoZmlyc3QpXG4gICAgICAgICAgc2V0MShlbCk7XG4gICAgICB9XG4gICAgICBpZiAocHJldiAmJiBwcmV2ICE9PSBlbCAmJiBwcm9wcy5tb2RlICE9PSBcImlub3V0XCIpXG4gICAgICAgIGV4aXRUcmFuc2l0aW9uKGVsLCBwcmV2KTtcbiAgICAgIGZpcnN0ID0gZmFsc2U7XG4gICAgICByZXR1cm4gZWw7XG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gW3MxLCBzMl07XG59O1xuZnVuY3Rpb24gZ2V0UmVjdChlbGVtZW50KSB7XG4gIGNvbnN0IHtcbiAgICB0b3AsXG4gICAgYm90dG9tLFxuICAgIGxlZnQsXG4gICAgcmlnaHQsXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH0gPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBjb25zdCBwYXJlbnRSZWN0ID0gZWxlbWVudC5wYXJlbnROb2RlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICByZXR1cm4ge1xuICAgIHRvcDogdG9wIC0gcGFyZW50UmVjdC50b3AsXG4gICAgYm90dG9tLFxuICAgIGxlZnQ6IGxlZnQgLSBwYXJlbnRSZWN0LmxlZnQsXG4gICAgcmlnaHQsXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH07XG59XG5jb25zdCBUcmFuc2l0aW9uR3JvdXAgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgcmVzb2x2ZWQgPSBjaGlsZHJlbigoKSA9PiBwcm9wcy5jaGlsZHJlbik7XG4gIGNvbnN0IGNsYXNzbmFtZXMgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBjb25zdCBuYW1lID0gcHJvcHMubmFtZSB8fCBcInNcIjtcbiAgICByZXR1cm4ge1xuICAgICAgZW50ZXJBY3RpdmVDbGFzczogcHJvcHMuZW50ZXJBY3RpdmVDbGFzcyB8fCBuYW1lICsgXCItZW50ZXItYWN0aXZlXCIsXG4gICAgICBlbnRlckNsYXNzOiBwcm9wcy5lbnRlckNsYXNzIHx8IG5hbWUgKyBcIi1lbnRlclwiLFxuICAgICAgZW50ZXJUb0NsYXNzOiBwcm9wcy5lbnRlclRvQ2xhc3MgfHwgbmFtZSArIFwiLWVudGVyLXRvXCIsXG4gICAgICBleGl0QWN0aXZlQ2xhc3M6IHByb3BzLmV4aXRBY3RpdmVDbGFzcyB8fCBuYW1lICsgXCItZXhpdC1hY3RpdmVcIixcbiAgICAgIGV4aXRDbGFzczogcHJvcHMuZXhpdENsYXNzIHx8IG5hbWUgKyBcIi1leGl0XCIsXG4gICAgICBleGl0VG9DbGFzczogcHJvcHMuZXhpdFRvQ2xhc3MgfHwgbmFtZSArIFwiLWV4aXQtdG9cIixcbiAgICAgIG1vdmVDbGFzczogcHJvcHMubW92ZUNsYXNzIHx8IG5hbWUgKyBcIi1tb3ZlXCJcbiAgICB9O1xuICB9KTtcbiAgY29uc3Qge1xuICAgIG9uQmVmb3JlRW50ZXIsXG4gICAgb25FbnRlcixcbiAgICBvbkFmdGVyRW50ZXIsXG4gICAgb25CZWZvcmVFeGl0LFxuICAgIG9uRXhpdCxcbiAgICBvbkFmdGVyRXhpdFxuICB9ID0gcHJvcHM7XG4gIGNvbnN0IFtjb21iaW5lZCwgc2V0Q29tYmluZWRdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGxldCBwMiA9IFtdO1xuICBsZXQgZmlyc3QgPSB0cnVlO1xuICBjcmVhdGVDb21wdXRlZCgoKSA9PiB7XG4gICAgY29uc3QgYzIgPSByZXNvbHZlZCgpO1xuICAgIGNvbnN0IGNvbWIgPSBbLi4uYzJdO1xuICAgIGNvbnN0IG5leHQgPSBuZXcgU2V0KGMyKTtcbiAgICBjb25zdCBwcmV2ID0gbmV3IFNldChwMik7XG4gICAgY29uc3QgZW50ZXJDbGFzc2VzID0gY2xhc3NuYW1lcygpLmVudGVyQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgIGNvbnN0IGVudGVyQWN0aXZlQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5lbnRlckFjdGl2ZUNsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBjb25zdCBlbnRlclRvQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5lbnRlclRvQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgIGNvbnN0IGV4aXRDbGFzc2VzID0gY2xhc3NuYW1lcygpLmV4aXRDbGFzcy5zcGxpdChcIiBcIik7XG4gICAgY29uc3QgZXhpdEFjdGl2ZUNsYXNzZXMgPSBjbGFzc25hbWVzKCkuZXhpdEFjdGl2ZUNsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBjb25zdCBleGl0VG9DbGFzc2VzID0gY2xhc3NuYW1lcygpLmV4aXRUb0NsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgYzIubGVuZ3RoOyBpMisrKSB7XG4gICAgICBjb25zdCBlbCA9IGMyW2kyXTtcbiAgICAgIGlmICghZmlyc3QgJiYgIXByZXYuaGFzKGVsKSkge1xuICAgICAgICBsZXQgZW5kVHJhbnNpdGlvbiA9IGZ1bmN0aW9uKGUyKSB7XG4gICAgICAgICAgaWYgKGVsICYmICghZTIgfHwgZTIudGFyZ2V0ID09PSBlbCkpIHtcbiAgICAgICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoLi4uZW50ZXJBY3RpdmVDbGFzc2VzKTtcbiAgICAgICAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoLi4uZW50ZXJUb0NsYXNzZXMpO1xuICAgICAgICAgICAgb25BZnRlckVudGVyICYmIG9uQWZ0ZXJFbnRlcihlbCk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBvbkJlZm9yZUVudGVyICYmIG9uQmVmb3JlRW50ZXIoZWwpO1xuICAgICAgICBlbC5jbGFzc0xpc3QuYWRkKC4uLmVudGVyQ2xhc3Nlcyk7XG4gICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoLi4uZW50ZXJBY3RpdmVDbGFzc2VzKTtcbiAgICAgICAgbmV4dEZyYW1lKCgpID0+IHtcbiAgICAgICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKC4uLmVudGVyQ2xhc3Nlcyk7XG4gICAgICAgICAgZWwuY2xhc3NMaXN0LmFkZCguLi5lbnRlclRvQ2xhc3Nlcyk7XG4gICAgICAgICAgb25FbnRlciAmJiBvbkVudGVyKGVsLCAoKSA9PiBlbmRUcmFuc2l0aW9uKCkpO1xuICAgICAgICAgIGlmICghb25FbnRlciB8fCBvbkVudGVyLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgcDIubGVuZ3RoOyBpMisrKSB7XG4gICAgICBjb25zdCBvbGQgPSBwMltpMl07XG4gICAgICBpZiAoIW5leHQuaGFzKG9sZCkgJiYgb2xkLnBhcmVudE5vZGUpIHtcbiAgICAgICAgbGV0IGVuZFRyYW5zaXRpb24gPSBmdW5jdGlvbihlMikge1xuICAgICAgICAgIGlmICghZTIgfHwgZTIudGFyZ2V0ID09PSBvbGQpIHtcbiAgICAgICAgICAgIG9sZC5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICAgIG9sZC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgICAgb2xkLmNsYXNzTGlzdC5yZW1vdmUoLi4uZXhpdEFjdGl2ZUNsYXNzZXMpO1xuICAgICAgICAgICAgb2xkLmNsYXNzTGlzdC5yZW1vdmUoLi4uZXhpdFRvQ2xhc3Nlcyk7XG4gICAgICAgICAgICBvbkFmdGVyRXhpdCAmJiBvbkFmdGVyRXhpdChvbGQpO1xuICAgICAgICAgICAgcDIgPSBwMi5maWx0ZXIoKGkzKSA9PiBpMyAhPT0gb2xkKTtcbiAgICAgICAgICAgIHNldENvbWJpbmVkKHAyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGNvbWIuc3BsaWNlKGkyLCAwLCBvbGQpO1xuICAgICAgICBvbkJlZm9yZUV4aXQgJiYgb25CZWZvcmVFeGl0KG9sZCk7XG4gICAgICAgIG9sZC5jbGFzc0xpc3QuYWRkKC4uLmV4aXRDbGFzc2VzKTtcbiAgICAgICAgb2xkLmNsYXNzTGlzdC5hZGQoLi4uZXhpdEFjdGl2ZUNsYXNzZXMpO1xuICAgICAgICBuZXh0RnJhbWUoKCkgPT4ge1xuICAgICAgICAgIG9sZC5jbGFzc0xpc3QucmVtb3ZlKC4uLmV4aXRDbGFzc2VzKTtcbiAgICAgICAgICBvbGQuY2xhc3NMaXN0LmFkZCguLi5leGl0VG9DbGFzc2VzKTtcbiAgICAgICAgfSk7XG4gICAgICAgIG9uRXhpdCAmJiBvbkV4aXQob2xkLCAoKSA9PiBlbmRUcmFuc2l0aW9uKCkpO1xuICAgICAgICBpZiAoIW9uRXhpdCB8fCBvbkV4aXQubGVuZ3RoIDwgMikge1xuICAgICAgICAgIG9sZC5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICBvbGQuYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBwMiA9IGNvbWI7XG4gICAgc2V0Q29tYmluZWQoY29tYik7XG4gIH0pO1xuICBjcmVhdGVFZmZlY3QoKG5vZGVzKSA9PiB7XG4gICAgY29uc3QgYzIgPSBjb21iaW5lZCgpO1xuICAgIGMyLmZvckVhY2goKGNoaWxkKSA9PiB7XG4gICAgICBsZXQgbjI7XG4gICAgICBpZiAoIShuMiA9IG5vZGVzLmdldChjaGlsZCkpKSB7XG4gICAgICAgIG5vZGVzLnNldChjaGlsZCwgbjIgPSB7XG4gICAgICAgICAgcG9zOiBnZXRSZWN0KGNoaWxkKSxcbiAgICAgICAgICBuZXc6ICFmaXJzdFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAobjIubmV3KSB7XG4gICAgICAgIG4yLm5ldyA9IGZhbHNlO1xuICAgICAgICBuMi5uZXdQb3MgPSBnZXRSZWN0KGNoaWxkKTtcbiAgICAgIH1cbiAgICAgIGlmIChuMi5uZXcpIHtcbiAgICAgICAgY2hpbGQuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgKCkgPT4ge1xuICAgICAgICAgIG4yLm5ldyA9IGZhbHNlO1xuICAgICAgICAgIGNoaWxkLnBhcmVudE5vZGUgJiYgKG4yLm5ld1BvcyA9IGdldFJlY3QoY2hpbGQpKTtcbiAgICAgICAgfSwge1xuICAgICAgICAgIG9uY2U6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBuMi5uZXdQb3MgJiYgKG4yLnBvcyA9IG4yLm5ld1Bvcyk7XG4gICAgICBuMi5uZXdQb3MgPSBnZXRSZWN0KGNoaWxkKTtcbiAgICB9KTtcbiAgICBpZiAoZmlyc3QpIHtcbiAgICAgIGZpcnN0ID0gZmFsc2U7XG4gICAgICByZXR1cm4gbm9kZXM7XG4gICAgfVxuICAgIGMyLmZvckVhY2goKGNoaWxkKSA9PiB7XG4gICAgICBjb25zdCBjMyA9IG5vZGVzLmdldChjaGlsZCk7XG4gICAgICBjb25zdCBvbGRQb3MgPSBjMy5wb3M7XG4gICAgICBjb25zdCBuZXdQb3MgPSBjMy5uZXdQb3M7XG4gICAgICBjb25zdCBkeCA9IG9sZFBvcy5sZWZ0IC0gbmV3UG9zLmxlZnQ7XG4gICAgICBjb25zdCBkeSA9IG9sZFBvcy50b3AgLSBuZXdQb3MudG9wO1xuICAgICAgaWYgKGR4IHx8IGR5KSB7XG4gICAgICAgIGMzLm1vdmVkID0gdHJ1ZTtcbiAgICAgICAgY29uc3QgczIgPSBjaGlsZC5zdHlsZTtcbiAgICAgICAgczIudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgke2R4fXB4LCR7ZHl9cHgpYDtcbiAgICAgICAgczIudHJhbnNpdGlvbkR1cmF0aW9uID0gXCIwc1wiO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0O1xuICAgIGMyLmZvckVhY2goKGNoaWxkKSA9PiB7XG4gICAgICBjb25zdCBjMyA9IG5vZGVzLmdldChjaGlsZCk7XG4gICAgICBpZiAoYzMubW92ZWQpIHtcbiAgICAgICAgbGV0IGVuZFRyYW5zaXRpb24gPSBmdW5jdGlvbihlMikge1xuICAgICAgICAgIGlmIChlMiAmJiBlMi50YXJnZXQgIT09IGNoaWxkIHx8ICFjaGlsZC5wYXJlbnROb2RlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGlmICghZTIgfHwgL3RyYW5zZm9ybSQvLnRlc3QoZTIucHJvcGVydHlOYW1lKSkge1xuICAgICAgICAgICAgY2hpbGQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgICBjaGlsZC5jbGFzc0xpc3QucmVtb3ZlKC4uLm1vdmVDbGFzc2VzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGMzLm1vdmVkID0gZmFsc2U7XG4gICAgICAgIGNvbnN0IHMyID0gY2hpbGQuc3R5bGU7XG4gICAgICAgIGNvbnN0IG1vdmVDbGFzc2VzID0gY2xhc3NuYW1lcygpLm1vdmVDbGFzcy5zcGxpdChcIiBcIik7XG4gICAgICAgIGNoaWxkLmNsYXNzTGlzdC5hZGQoLi4ubW92ZUNsYXNzZXMpO1xuICAgICAgICBzMi50cmFuc2Zvcm0gPSBzMi50cmFuc2l0aW9uRHVyYXRpb24gPSBcIlwiO1xuICAgICAgICBjaGlsZC5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbm9kZXM7XG4gIH0sIC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCkpO1xuICByZXR1cm4gY29tYmluZWQ7XG59O1xuZnVuY3Rpb24gY2xpY2tPdXRzaWRlJDEoZWwsIGFjY2Vzc29yKSB7XG4gIGNvbnN0IG9uQ2xpY2sgPSAoZTIpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIHJldHVybiAhZWwuY29udGFpbnMoZTIudGFyZ2V0KSAmJiAoKF9hMiA9IGFjY2Vzc29yKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYTIoKSk7XG4gIH07XG4gIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uQ2xpY2spO1xuICBvbkNsZWFudXAoKCkgPT4gZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25DbGljaykpO1xufVxuZnVuY3Rpb24gZXNjUHJlc3NlZChfLCBhY2Nlc3Nvcikge1xuICBjb25zdCBvbktleVByZXNzID0gKGUyKSA9PiB7XG4gICAgdmFyIF9hMiwgX2IyO1xuICAgIGlmIChlMi5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIChfYTIgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmJsdXIoKTtcbiAgICAgIChfYjIgPSBhY2Nlc3NvcigpKSA9PSBudWxsID8gdm9pZCAwIDogX2IyKCk7XG4gICAgfVxuICB9O1xuICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIG9uS2V5UHJlc3MpO1xuICBvbkNsZWFudXAoKCkgPT4gZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBvbktleVByZXNzKSk7XG59XG5mdW5jdGlvbiBhbmRyb2lkQmFja0hhbmRsZXIkMShfLCBjb25maWcpIHtcbiAgY29uc3Qge1xuICAgIGlzRW5hYmxlZCxcbiAgICBvbkNsb3NlXG4gIH0gPSBjb25maWcoKTtcbiAgaWYgKCFpc0VuYWJsZWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgdXNlck9TSXNBbmRyb2lkID0gZ2V0VXNlckFnZW50KCkub3MgPT09IFwiYW5kcm9pZFwiO1xuICBpZiAoIXVzZXJPU0lzQW5kcm9pZCkge1xuICAgIHJldHVybjtcbiAgfVxuICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoUk9VVEVfU1RBVEUsIFwiXCIpO1xuICBjb25zdCBwb3BzdGF0ZUhhbmRsZXIgPSAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIG9uQ2xvc2UoKTtcbiAgfTtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJwb3BzdGF0ZVwiLCBwb3BzdGF0ZUhhbmRsZXIsIHtcbiAgICBvbmNlOiB0cnVlXG4gIH0pO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9wc3RhdGVcIiwgcG9wc3RhdGVIYW5kbGVyKTtcbiAgICBjcmVhdGVNYWNyb3Rhc2soKCkgPT4ge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIGlmICgoKF9hMiA9IHdpbmRvdy5oaXN0b3J5LnN0YXRlKSA9PSBudWxsID8gdm9pZCAwIDogX2EyW1JPVVRFX1NUQVRFX0tFWV0pID09PSB0cnVlKSB7XG4gICAgICAgIHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59XG5jb25zdCBST1VURV9TVEFURV9LRVkgPSBcImFuZHJvaWRCYWNrSGFuZGxlclwiO1xuY29uc3QgUk9VVEVfU1RBVEUgPSB7XG4gIFtST1VURV9TVEFURV9LRVldOiB0cnVlXG59O1xuY29uc3QgX3RtcGwkJHUgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2Zz48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMTAuMjEyMiAxNC4zNDA3QzEwLjUzODQgMTQuMDg1NCAxMC41OTU5IDEzLjYxNCAxMC4zNDA2IDEzLjI4NzhMNi4yMDIzNyA4LjAwMDAzTDEwLjM0MDYgMi43MTIyN0MxMC41OTU5IDIuMzg2MDcgMTAuNTM4NCAxLjkxNDY5IDEwLjIxMjIgMS42NTk0QzkuODg2MDQgMS40MDQxMiA5LjQxNDY1IDEuNDYxNjEgOS4xNTkzNyAxLjc4NzhMNC42NTkzNyA3LjUzNzhDNC40NDY4OCA3LjgwOTMyIDQuNDQ2ODggOC4xOTA3NCA0LjY1OTM3IDguNDYyMjZMOS4xNTkzNyAxNC4yMTIzQzkuNDE0NjUgMTQuNTM4NSA5Ljg4NjA0IDE0LjU5NTkgMTAuMjEyMiAxNC4zNDA3WlwiPjwvcGF0aD48L3N2Zz5gLCA0LCB0cnVlKTtcbmNvbnN0IHJvdGF0aW9uRGVncmVlcyA9IHtcbiAgbGVmdDogMCxcbiAgdG9wOiA5MCxcbiAgcmlnaHQ6IDE4MCxcbiAgYm90dG9tOiAyNzBcbn07XG5jb25zdCBBcnJvd0ljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIGNvbnN0IGRpcmVjdGlvbiA9ICgpID0+IHByb3BzLmRpcmVjdGlvbiB8fCBcImxlZnRcIjtcbiAgY29uc3QgU3ZnID0gc3R5bGVkKFwic3ZnXCIpYFxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgkeyhwcm9wczIpID0+IHJvdGF0aW9uRGVncmVlc1twcm9wczIuc3ZnRGlyZWN0aW9uXX1kZWcpO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xcyBlYXNlLWluLW91dDtcbiAgICBgO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN2Zywge1xuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgd2lkdGg6IFwiMTZcIixcbiAgICBoZWlnaHQ6IFwiMTZcIixcbiAgICB2aWV3Qm94OiBcIjAgMCAxNiAxNlwiLFxuICAgIGZpbGw6IFwibm9uZVwiLFxuICAgIGdldCBzdmdEaXJlY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZGlyZWN0aW9uKCk7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICBjb25zdCBfZWwkID0gX3RtcGwkJHUuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgICByZXR1cm4gX2VsJDtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IF90bXBsJCR0ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0yLjcxOTY2IDIuNzE5NjhDMy4wMTI1NSAyLjQyNjc4IDMuNDg3NDMgMi40MjY3NyAzLjc4MDMyIDIuNzE5NjZMOC4wMDAwMiA2LjkzOTI1TDEyLjIxOTcgMi43MTk2N0MxMi41MTI2IDIuNDI2NzcgMTIuOTg3NCAyLjQyNjc4IDEzLjI4MDMgMi43MTk2N0MxMy41NzMyIDMuMDEyNTcgMTMuNTczMiAzLjQ4NzQ0IDEzLjI4MDMgMy43ODAzM0w5LjA2MDY4IDcuOTk5OTFMMTMuMjgwMyAxMi4yMTk3QzEzLjU3MzIgMTIuNTEyNiAxMy41NzMyIDEyLjk4NzQgMTMuMjgwMyAxMy4yODAzQzEyLjk4NzQgMTMuNTczMiAxMi41MTI2IDEzLjU3MzIgMTIuMjE5NyAxMy4yODAzTDguMDAwMDIgOS4wNjA1N0wzLjc4MDMzIDEzLjI4MDNDMy40ODc0NCAxMy41NzMyIDMuMDEyNTcgMTMuNTczMiAyLjcxOTY3IDEzLjI4MDNDMi40MjY3OCAxMi45ODc0IDIuNDI2NzcgMTIuNTEyNiAyLjcxOTY3IDEyLjIxOTdMNi45MzkzNiA3Ljk5OTkxTDIuNzE5NjggMy43ODAzNEMyLjQyNjc4IDMuNDg3NDUgMi40MjY3NyAzLjAxMjU3IDIuNzE5NjYgMi43MTk2OFpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBDbG9zZUljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkdC5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBJY29uQnV0dG9uU3R5bGVkID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB3aWR0aDogMzJweDtcbiAgICBoZWlnaHQ6IDMycHg7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC50aW50fTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTI1cyBlYXNlLWluLW91dDtcblxuICAgICR7bWVkaWFOb3RUb3VjaH0ge1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG4gICAgfVxuXG4gICAgJHttZWRpYVRvdWNofSB7XG4gICAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Mik7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuY29uc3QgSWNvbkJ1dHRvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBkYXRhQXR0cnMgPSB1c2VEYXRhQXR0cmlidXRlcyhwcm9wcyk7XG4gIGNvbnN0IGljb24gPSAoKSA9PiBwcm9wcy5pY29uIHx8IFwiY2xvc2VcIjtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJY29uQnV0dG9uU3R5bGVkLCBtZXJnZVByb3BzKHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsaWNrKCksXG4gICAgXCJkYXRhLXRjLWljb24tYnV0dG9uXCI6IFwidHJ1ZVwiXG4gIH0sIGRhdGFBdHRycywge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuICEhcHJvcHMuY2hpbGRyZW47XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMuY2hpbGRyZW47XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXByb3BzLmNoaWxkcmVuO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTd2l0Y2gsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBpY29uKCkgPT09IFwiY2xvc2VcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ2xvc2VJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBmaWxsKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5maWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBpY29uKCkgPT09IFwiYXJyb3dcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQXJyb3dJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBmaWxsKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5maWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBpY29uKCkgPT09IFwicXVlc3Rpb25cIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUXVlc3Rpb25JY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBmaWxsKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5maWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiB0eXBlb2YgaWNvbigpICE9PSBcInN0cmluZ1wiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGljb24oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSkpO1xufTtcbmNvbnN0IGJvcmRlcnMkNCA9IHtcbiAgbTogXCIyNHB4XCIsXG4gIHM6IFwiMTZweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IE1vZGFsQmFja2dyb3VuZFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogMTAwMDtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgIHBhZGRpbmc6IDIwcHggMDtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICB9XG5gO1xuY29uc3QgTW9kYWxXcmFwcGVyQ2xhc3MgPSB1YFxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDE2cHggcmdiYSgwLCAwLCAwLCAwLjA4KSwgMCAxNnB4IDY0cHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgbWFyZ2luOiBhdXRvO1xuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgICAgICAgbWFyZ2luOiBhdXRvIDAgMCAwO1xuICAgIH1cbmA7XG5jb25zdCBNb2RhbEJvZHlTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtaW4taGVpZ2h0OiAxMDBweDtcbiAgICB3aWR0aDogNDE2cHg7XG4gICAgcGFkZGluZzogNDRweCA1NnB4IDI0cHg7XG5cbiAgICBib3gtc2hhZG93OiAwIDJweCA4cHggMCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBib3JkZXJzJDRbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbmA7XG5jb25zdCBDbG9zZUJ1dHRvblN0eWxlZCA9IHN0eWxlZChJY29uQnV0dG9uKWBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDE2cHg7XG4gICAgdG9wOiAxNnB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6IDE2cHggMTZweCAxNnB4IDE4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMCAwICR7KHByb3BzKSA9PiBib3JkZXJzJDRbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX1cbiAgICAgICAgJHsocHJvcHMpID0+IGJvcmRlcnMkNFtwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbmA7XG5jb25zdCBRdWVzdGlvbkJ1dHRvblN0eWxlZCA9IHN0eWxlZChJY29uQnV0dG9uKWBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcmdiYShwcm9wcy50aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnksIDAuMTIpfTtcbmA7XG5jbGFzcyBBbmltYXRpb25UaW1lbGluZU5vb3Age1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY3VycmVudFRpbWVcIiwgMCk7XG4gIH1cbn1cbmNvbnN0IF9BbmltYXRpb25Ob29wID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY3VycmVudFRpbWVcIiwgMCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInBsYXliYWNrUmF0ZVwiLCAxKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RhcnRUaW1lXCIsIG51bGwpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ0aW1lbGluZVwiLCBuZXcgQW5pbWF0aW9uVGltZWxpbmVOb29wKCkpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJmaW5pc2hlZFwiLCBQcm9taXNlLnJlc29sdmUodGhpcykpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJlZmZlY3RcIiwgbnVsbCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlkXCIsIFwiXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJwZW5kaW5nXCIsIGZhbHNlKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicGxheVN0YXRlXCIsIFwiZmluaXNoZWRcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJlcGxhY2VTdGF0ZVwiLCBcImFjdGl2ZVwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVhZHlcIiwgUHJvbWlzZS5yZXNvbHZlKHRoaXMpKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwib25jYW5jZWxcIiwgbnVsbCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm9uZmluaXNoXCIsIG51bGwpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJvbnJlbW92ZVwiLCBudWxsKTtcbiAgfVxuICBzdGF0aWMgY3JlYXRlKCkge1xuICAgIGlmICghX0FuaW1hdGlvbk5vb3AuX2luc3RhbmNlKSB7XG4gICAgICBsb2dXYXJuaW5nKFxuICAgICAgICBcIkFuaW1hdGlvbiBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgZW52aXJvbm1lbnQ6IHBsZWFzZSBjb25zaWRlciB1c2luZyB0aGUgYHdlYi1hbmltYXRpb25zLWpzYCBwb2x5ZmlsbCB0byBwcm92aWRlIGEgZmFsbGJhY2sgaW1wbGVtZW50YXRpb24gb2YgdGhlIFdlYiBBbmltYXRpb25zIEFQSS5cIlxuICAgICAgKTtcbiAgICAgIF9BbmltYXRpb25Ob29wLl9pbnN0YW5jZSA9IG5ldyBfQW5pbWF0aW9uTm9vcCgpO1xuICAgIH1cbiAgICByZXR1cm4gX0FuaW1hdGlvbk5vb3AuX2luc3RhbmNlO1xuICB9XG4gIGNhbmNlbCgpIHtcbiAgfVxuICBmaW5pc2goKSB7XG4gIH1cbiAgcGF1c2UoKSB7XG4gIH1cbiAgcGxheSgpIHtcbiAgfVxuICByZXZlcnNlKCkge1xuICB9XG4gIGFkZEV2ZW50TGlzdGVuZXIoX3R5cGUsIF9saXN0ZW5lciwgX29wdGlvbnMpIHtcbiAgfVxuICBkaXNwYXRjaEV2ZW50KF9ldmVudCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZW1vdmVFdmVudExpc3RlbmVyKF90eXBlLCBfY2FsbGJhY2ssIF9vcHRpb25zKSB7XG4gIH1cbiAgdXBkYXRlUGxheWJhY2tSYXRlKF9wbGF5YmFja1JhdGUpIHtcbiAgfVxuICBjb21taXRTdHlsZXMoKSB7XG4gIH1cbiAgcGVyc2lzdCgpIHtcbiAgfVxufTtcbmxldCBBbmltYXRpb25Ob29wID0gX0FuaW1hdGlvbk5vb3A7XG5fX3B1YmxpY0ZpZWxkKEFuaW1hdGlvbk5vb3AsIFwiX2luc3RhbmNlXCIsIG51bGwpO1xuZnVuY3Rpb24gYW5pbWF0ZShlbGVtZW50LCBrZXlmcmFtZXMsIG9wdGlvbnMpIHtcbiAgaWYgKFwiYW5pbWF0ZVwiIGluIGVsZW1lbnQpIHtcbiAgICByZXR1cm4gZWxlbWVudC5hbmltYXRlKGtleWZyYW1lcywgb3B0aW9ucyk7XG4gIH1cbiAgcmV0dXJuIEFuaW1hdGlvbk5vb3AuY3JlYXRlKCk7XG59XG5jb25zdCBfdG1wbCQkcyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8ZGl2PjwvZGl2PmApO1xuY29uc3QgY2xpY2tPdXRzaWRlID0gY2xpY2tPdXRzaWRlJDE7XG5jb25zdCBrZXlQcmVzc2VkID0gZXNjUHJlc3NlZDtcbmNvbnN0IGFuZHJvaWRCYWNrSGFuZGxlciA9IGFuZHJvaWRCYWNrSGFuZGxlciQxO1xuY29uc3QgTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBkYXRhQXR0cnMgPSB1c2VEYXRhQXR0cmlidXRlcyhwcm9wcyk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHByb3BzLm9wZW5lZCkge1xuICAgICAgZGlzYWJsZVNjcm9sbCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbmFibGVTY3JvbGwoKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zaXRpb24sIHtcbiAgICBvbkJlZm9yZUVudGVyOiAoZWwpID0+IHtcbiAgICAgIGNvbnN0IGR1cmF0aW9uID0gaXNEZXZpY2UoXCJtb2JpbGVcIikgPyAyMDAgOiAxMDA7XG4gICAgICBhbmltYXRlKGVsLCBbe1xuICAgICAgICBvcGFjaXR5OiAwXG4gICAgICB9LCB7XG4gICAgICAgIG9wYWNpdHk6IDFcbiAgICAgIH1dLCB7XG4gICAgICAgIGR1cmF0aW9uXG4gICAgICB9KTtcbiAgICAgIGlmIChpc0RldmljZShcIm1vYmlsZVwiKSkge1xuICAgICAgICBhbmltYXRlKGVsLmZpcnN0RWxlbWVudENoaWxkLCBbe1xuICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKDM5MHB4KVwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgwKVwiXG4gICAgICAgIH1dLCB7XG4gICAgICAgICAgZHVyYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBvbkV4aXQ6IChlbCwgZG9uZSkgPT4ge1xuICAgICAgY29uc3QgZHVyYXRpb24gPSBpc0RldmljZShcIm1vYmlsZVwiKSA/IDIwMCA6IDEwMDtcbiAgICAgIGNvbnN0IGJhY2tncm91bmRBbmltYXRpb24gPSBhbmltYXRlKGVsLCBbe1xuICAgICAgICBvcGFjaXR5OiAxXG4gICAgICB9LCB7XG4gICAgICAgIG9wYWNpdHk6IDBcbiAgICAgIH1dLCB7XG4gICAgICAgIGR1cmF0aW9uXG4gICAgICB9KTtcbiAgICAgIGlmIChpc0RldmljZShcIm1vYmlsZVwiKSkge1xuICAgICAgICBjb25zdCBjb250ZW50QW5pbWF0aW9uID0gYW5pbWF0ZShlbC5maXJzdEVsZW1lbnRDaGlsZCwgW3tcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgwKVwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgzOTBweClcIlxuICAgICAgICB9XSwge1xuICAgICAgICAgIGR1cmF0aW9uXG4gICAgICAgIH0pO1xuICAgICAgICBQcm9taXNlLmFsbChbYmFja2dyb3VuZEFuaW1hdGlvbi5maW5pc2hlZCwgY29udGVudEFuaW1hdGlvbi5maW5pc2hlZF0pLnRoZW4oZG9uZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBiYWNrZ3JvdW5kQW5pbWF0aW9uLmZpbmlzaGVkLnRoZW4oZG9uZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLm9wZW5lZDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTW9kYWxCYWNrZ3JvdW5kU3R5bGVkLCBtZXJnZVByb3BzKHtcbiAgICAgICAgICAgIFwiZGF0YS10Yy1tb2RhbFwiOiBcInRydWVcIlxuICAgICAgICAgIH0sIGRhdGFBdHRycywge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICBjb25zdCBfZWwkID0gX3RtcGwkJHMuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICB1c2UoYW5kcm9pZEJhY2tIYW5kbGVyLCBfZWwkLCAoKSA9PiAoe1xuICAgICAgICAgICAgICAgIGlzRW5hYmxlZDogcHJvcHMuZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyLFxuICAgICAgICAgICAgICAgIG9uQ2xvc2U6ICgpID0+IHByb3BzLm9uQ2xvc2UoKVxuICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgIHVzZShrZXlQcmVzc2VkLCBfZWwkLCAoKSA9PiAoKSA9PiBwcm9wcy5vbkNsb3NlKCkpO1xuICAgICAgICAgICAgICB1c2UoY2xpY2tPdXRzaWRlLCBfZWwkLCAoKSA9PiAoKSA9PiBwcm9wcy5vbkNsb3NlKCkpO1xuICAgICAgICAgICAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KE1vZGFsQm9keVN0eWxlZCwge1xuICAgICAgICAgICAgICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KENsb3NlQnV0dG9uU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgIGljb246IFwiY2xvc2VcIixcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4gcHJvcHMub25DbG9zZSgpXG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy5jaGlsZHJlbildO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIG51bGwpO1xuICAgICAgICAgICAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5vbkNsaWNrUXVlc3Rpb247XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1vZGFsRm9vdGVyU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChUb25Db25uZWN0QnJhbmQsIHt9KSwgY3JlYXRlQ29tcG9uZW50KFF1ZXN0aW9uQnV0dG9uU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgb25DbGljaygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLm9uQ2xpY2tRdWVzdGlvbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uOiBcInF1ZXN0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIG51bGwpO1xuICAgICAgICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gY2xhc3NOYW1lKF9lbCQsIGNuKE1vZGFsV3JhcHBlckNsYXNzLCB1YFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAke2JvcmRlcnMkNFt0aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuYmFja2dyb3VuZC50aW50fTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAke2JvcmRlcnMkNFt0aGVtZS5ib3JkZXJSYWRpdXNdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7Ym9yZGVycyQ0W3RoZW1lLmJvcmRlclJhZGl1c119IDAgMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGApKSk7XG4gICAgICAgICAgICAgIHJldHVybiBfZWwkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCB3cmFwcGVyQm9yZGVyUmFkaXVzID0ge1xuICBtOiBcIjIycHhcIixcbiAgczogXCIxMnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3Qgc2xpZGVyQm9yZGVyUmFkaXVzID0ge1xuICBtOiBcIjE4cHhcIixcbiAgczogXCI4cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBUYWJCYXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZTogMWZyIC8gMWZyIDFmcjtcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICAgIGdhcDogNHB4O1xuXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IDRweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gd3JhcHBlckJvcmRlclJhZGl1c1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5zZWNvbmRhcnl9O1xuYDtcbmNvbnN0IFNsaWRlclN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNHB4O1xuICAgIGxlZnQ6IDRweDtcblxuICAgIGhlaWdodDogY2FsYygxMDAlIC0gOHB4KTtcbiAgICB3aWR0aDogY2FsYyg1MCUgLSA0cHgpO1xuXG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IHNsaWRlckJvcmRlclJhZGl1c1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQuc2VnbWVudH07XG5cbiAgICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiBwcm9wcy5yaWdodCA/IFwidHJhbnNsYXRlWCgxMDAlKVwiIDogXCJ0cmFuc2xhdGVYKDApXCJ9O1xuXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTNzIGVhc2UtaW4tb3V0O1xuYDtcbmNvbnN0IElucHV0U3R5bGVkID0gc3R5bGVkLmlucHV0YFxuICAgIGRpc3BsYXk6IG5vbmU7XG5gO1xuY29uc3QgTGFiZWxTdHlsZWQgPSBzdHlsZWQubGFiZWxgXG4gICAgcGFkZGluZzogOXB4IDEycHg7XG4gICAgei1pbmRleDogMTtcblxuICAgIGN1cnNvcjogJHsocHJvcHMpID0+IHByb3BzLmlzQWN0aXZlID8gXCJkZWZhdWx0XCIgOiBcInBvaW50ZXJcIn07XG5cbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xM3MgZWFzZS1pbi1vdXQ7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgdHJhbnNmb3JtOiAkeyhwcm9wcykgPT4gcHJvcHMuaXNBY3RpdmUgPyBcIm5vbmVcIiA6IFwic2NhbGUoMS4wMjUpXCJ9O1xuICAgIH1cblxuICAgID4gKiB7XG4gICAgICAgICR7KHByb3BzKSA9PiAhcHJvcHMuaXNBY3RpdmUgPyBgY29sb3I6ICR7cHJvcHMudGhlbWUuY29sb3JzLnRleHQuc2Vjb25kYXJ5fTtgIDogXCJcIn1cbiAgICB9XG5gO1xuY29uc3QgVGFiQmFyID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IGdyb3VwTmFtZSA9IFwidGFiQmFyXCIgKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxZTQpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRhYkJhclN0eWxlZCwge1xuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIFwiZGF0YS10Yy10YWItYmFyXCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNsaWRlclN0eWxlZCwge1xuICAgICAgICBnZXQgcmlnaHQoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnNlbGVjdGVkVGFiSW5kZXggPT09IDE7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTGFiZWxTdHlsZWQsIHtcbiAgICAgICAgZ2V0IGlzQWN0aXZlKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5zZWxlY3RlZFRhYkluZGV4ID09PSAwO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSW5wdXRTdHlsZWQsIHtcbiAgICAgICAgICAgIHR5cGU6IFwicmFkaW9cIixcbiAgICAgICAgICAgIG5hbWU6IGdyb3VwTmFtZSxcbiAgICAgICAgICAgIGdldCBjaGVja2VkKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuc2VsZWN0ZWRUYWJJbmRleCA9PT0gMDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbklucHV0OiAoKSA9PiB7XG4gICAgICAgICAgICAgIHZhciBfYTI7XG4gICAgICAgICAgICAgIHJldHVybiAoX2EyID0gcHJvcHMub25TZWxlY3RlZFRhYkluZGV4Q2hhbmdlKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmNhbGwocHJvcHMsIDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLnRhYjEpXTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChMYWJlbFN0eWxlZCwge1xuICAgICAgICBnZXQgaXNBY3RpdmUoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnNlbGVjdGVkVGFiSW5kZXggPT09IDE7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChJbnB1dFN0eWxlZCwge1xuICAgICAgICAgICAgdHlwZTogXCJyYWRpb1wiLFxuICAgICAgICAgICAgZ2V0IGNoZWNrZWQoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5zZWxlY3RlZFRhYkluZGV4ID09PSAxO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG5hbWU6IGdyb3VwTmFtZSxcbiAgICAgICAgICAgIG9uSW5wdXQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgdmFyIF9hMjtcbiAgICAgICAgICAgICAgcmV0dXJuIChfYTIgPSBwcm9wcy5vblNlbGVjdGVkVGFiSW5kZXhDaGFuZ2UpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuY2FsbChwcm9wcywgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMudGFiMildO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBiYWNrZ3JvdW5kQm9yZGVycyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiMTJweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IGltYWdlQm9yZGVycyA9IHtcbiAgbTogXCIxMnB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgcXJOb3JtYWxTaXplID0gMjU2O1xuY29uc3QgaW1nU2l6ZURlZmF1bHQgPSA2MDtcbmNvbnN0IHBpY1NpemVEZWZhdWx0ID0gNDg7XG5jb25zdCBxclBhZGRpbmdUb3AgPSAyNDtcbmNvbnN0IENvcHlJY29uQnV0dG9uID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogNTJweDtcbiAgICBoZWlnaHQ6IDUycHg7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xMjVzIGVhc2UtaW4tb3V0O1xuYDtcbmNvbnN0IFFyQ29kZUJhY2tncm91bmQgPSBzdHlsZWQuYnV0dG9uYFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnFyfTtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYmFja2dyb3VuZEJvcmRlcnNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgcGFkZGluZzogJHt0b1B4KHFyUGFkZGluZ1RvcCl9IDA7XG4gICAgaGVpZ2h0OiAke3RvUHgocXJOb3JtYWxTaXplICsgcXJQYWRkaW5nVG9wICogMil9O1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm9yZGVyOiBub25lO1xuXG4gICAgJHttZWRpYU5vdFRvdWNofSB7XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgJHtDb3B5SWNvbkJ1dHRvbi5jbGFzc30ge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgICR7Q29weUljb25CdXR0b24uY2xhc3N9IHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAke21lZGlhVG91Y2h9IHtcbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgJHtDb3B5SWNvbkJ1dHRvbi5jbGFzc30ge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Mik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5gO1xuY29uc3QgUXJDb2RlV3JhcHBlciQyID0gc3R5bGVkLmRpdmBcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuXG4gICAgPiBkaXY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG5cbiAgICByZWN0IHtcbiAgICAgICAgZmlsbDogdHJhbnNwYXJlbnQ7XG4gICAgfVxuXG4gICAgcGF0aCB7XG4gICAgICAgIGZpbGw6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuY29uc3RhbnQuYmxhY2t9O1xuICAgIH1cbmA7XG5jb25zdCBJbWFnZUJhY2tncm91bmQgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogJHt0b1B4KGltZ1NpemVEZWZhdWx0KX07XG4gICAgaGVpZ2h0OiAke3RvUHgoaW1nU2l6ZURlZmF1bHQpfTtcbiAgICBiYWNrZ3JvdW5kOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucXJ9O1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuYDtcbmNvbnN0IEltYWdlU3R5bGVkJDMgPSBzdHlsZWQoSW1hZ2UpYFxuICAgIHdpZHRoOiAkeyhwcm9wcykgPT4gdG9QeChwcm9wcy5zaXplKX07XG4gICAgaGVpZ2h0OiAkeyhwcm9wcykgPT4gdG9QeChwcm9wcy5zaXplKX07XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGltYWdlQm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucXJ9O1xuYDtcbmNvbnN0IENvcGllZEJveFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMTRweDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogNnB4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogMThweDtcbiAgICBtaW4td2lkdGg6IDEyNnB4O1xuICAgIHBhZGRpbmc6IDlweCAxNnB4IDlweCAxMHB4O1xuXG4gICAgZmlsdGVyOiBkcm9wLXNoYWRvdygwcHggMnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMDgpKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQuc2VnbWVudH07XG5gO1xudmFyIHFyY29kZSQxID0geyBleHBvcnRzOiB7fSB9O1xuKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuICB2YXIgcXJjb2RlMiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBxcmNvZGUzID0gZnVuY3Rpb24odHlwZU51bWJlciwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwpIHtcbiAgICAgIHZhciBQQUQwID0gMjM2O1xuICAgICAgdmFyIFBBRDEgPSAxNztcbiAgICAgIHZhciBfdHlwZU51bWJlciA9IHR5cGVOdW1iZXI7XG4gICAgICB2YXIgX2Vycm9yQ29ycmVjdGlvbkxldmVsID0gUVJFcnJvckNvcnJlY3Rpb25MZXZlbFtlcnJvckNvcnJlY3Rpb25MZXZlbF07XG4gICAgICB2YXIgX21vZHVsZXMgPSBudWxsO1xuICAgICAgdmFyIF9tb2R1bGVDb3VudCA9IDA7XG4gICAgICB2YXIgX2RhdGFDYWNoZSA9IG51bGw7XG4gICAgICB2YXIgX2RhdGFMaXN0ID0gW107XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIHZhciBtYWtlSW1wbCA9IGZ1bmN0aW9uKHRlc3QsIG1hc2tQYXR0ZXJuKSB7XG4gICAgICAgIF9tb2R1bGVDb3VudCA9IF90eXBlTnVtYmVyICogNCArIDE3O1xuICAgICAgICBfbW9kdWxlcyA9IGZ1bmN0aW9uKG1vZHVsZUNvdW50KSB7XG4gICAgICAgICAgdmFyIG1vZHVsZXMgPSBuZXcgQXJyYXkobW9kdWxlQ291bnQpO1xuICAgICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IG1vZHVsZUNvdW50OyByb3cgKz0gMSkge1xuICAgICAgICAgICAgbW9kdWxlc1tyb3ddID0gbmV3IEFycmF5KG1vZHVsZUNvdW50KTtcbiAgICAgICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IG1vZHVsZUNvdW50OyBjb2wgKz0gMSkge1xuICAgICAgICAgICAgICBtb2R1bGVzW3Jvd11bY29sXSA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBtb2R1bGVzO1xuICAgICAgICB9KF9tb2R1bGVDb3VudCk7XG4gICAgICAgIHNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4oMCwgMCk7XG4gICAgICAgIHNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4oX21vZHVsZUNvdW50IC0gNywgMCk7XG4gICAgICAgIHNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4oMCwgX21vZHVsZUNvdW50IC0gNyk7XG4gICAgICAgIHNldHVwUG9zaXRpb25BZGp1c3RQYXR0ZXJuKCk7XG4gICAgICAgIHNldHVwVGltaW5nUGF0dGVybigpO1xuICAgICAgICBzZXR1cFR5cGVJbmZvKHRlc3QsIG1hc2tQYXR0ZXJuKTtcbiAgICAgICAgaWYgKF90eXBlTnVtYmVyID49IDcpIHtcbiAgICAgICAgICBzZXR1cFR5cGVOdW1iZXIodGVzdCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKF9kYXRhQ2FjaGUgPT0gbnVsbCkge1xuICAgICAgICAgIF9kYXRhQ2FjaGUgPSBjcmVhdGVEYXRhKF90eXBlTnVtYmVyLCBfZXJyb3JDb3JyZWN0aW9uTGV2ZWwsIF9kYXRhTGlzdCk7XG4gICAgICAgIH1cbiAgICAgICAgbWFwRGF0YShfZGF0YUNhY2hlLCBtYXNrUGF0dGVybik7XG4gICAgICB9O1xuICAgICAgdmFyIHNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4gPSBmdW5jdGlvbihyb3csIGNvbCkge1xuICAgICAgICBmb3IgKHZhciByID0gLTE7IHIgPD0gNzsgciArPSAxKSB7XG4gICAgICAgICAgaWYgKHJvdyArIHIgPD0gLTEgfHwgX21vZHVsZUNvdW50IDw9IHJvdyArIHIpXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICBmb3IgKHZhciBjMiA9IC0xOyBjMiA8PSA3OyBjMiArPSAxKSB7XG4gICAgICAgICAgICBpZiAoY29sICsgYzIgPD0gLTEgfHwgX21vZHVsZUNvdW50IDw9IGNvbCArIGMyKVxuICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIGlmICgwIDw9IHIgJiYgciA8PSA2ICYmIChjMiA9PSAwIHx8IGMyID09IDYpIHx8IDAgPD0gYzIgJiYgYzIgPD0gNiAmJiAociA9PSAwIHx8IHIgPT0gNikgfHwgMiA8PSByICYmIHIgPD0gNCAmJiAyIDw9IGMyICYmIGMyIDw9IDQpIHtcbiAgICAgICAgICAgICAgX21vZHVsZXNbcm93ICsgcl1bY29sICsgYzJdID0gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIF9tb2R1bGVzW3JvdyArIHJdW2NvbCArIGMyXSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBnZXRCZXN0TWFza1BhdHRlcm4gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIG1pbkxvc3RQb2ludCA9IDA7XG4gICAgICAgIHZhciBwYXR0ZXJuID0gMDtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IDg7IGkyICs9IDEpIHtcbiAgICAgICAgICBtYWtlSW1wbCh0cnVlLCBpMik7XG4gICAgICAgICAgdmFyIGxvc3RQb2ludCA9IFFSVXRpbC5nZXRMb3N0UG9pbnQoX3RoaXMpO1xuICAgICAgICAgIGlmIChpMiA9PSAwIHx8IG1pbkxvc3RQb2ludCA+IGxvc3RQb2ludCkge1xuICAgICAgICAgICAgbWluTG9zdFBvaW50ID0gbG9zdFBvaW50O1xuICAgICAgICAgICAgcGF0dGVybiA9IGkyO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGF0dGVybjtcbiAgICAgIH07XG4gICAgICB2YXIgc2V0dXBUaW1pbmdQYXR0ZXJuID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGZvciAodmFyIHIgPSA4OyByIDwgX21vZHVsZUNvdW50IC0gODsgciArPSAxKSB7XG4gICAgICAgICAgaWYgKF9tb2R1bGVzW3JdWzZdICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBfbW9kdWxlc1tyXVs2XSA9IHIgJSAyID09IDA7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgYzIgPSA4OyBjMiA8IF9tb2R1bGVDb3VudCAtIDg7IGMyICs9IDEpIHtcbiAgICAgICAgICBpZiAoX21vZHVsZXNbNl1bYzJdICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBfbW9kdWxlc1s2XVtjMl0gPSBjMiAlIDIgPT0gMDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBzZXR1cFBvc2l0aW9uQWRqdXN0UGF0dGVybiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgcG9zID0gUVJVdGlsLmdldFBhdHRlcm5Qb3NpdGlvbihfdHlwZU51bWJlcik7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBwb3MubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBwb3MubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgICAgIHZhciByb3cgPSBwb3NbaTJdO1xuICAgICAgICAgICAgdmFyIGNvbCA9IHBvc1tqXTtcbiAgICAgICAgICAgIGlmIChfbW9kdWxlc1tyb3ddW2NvbF0gIT0gbnVsbCkge1xuICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAodmFyIHIgPSAtMjsgciA8PSAyOyByICs9IDEpIHtcbiAgICAgICAgICAgICAgZm9yICh2YXIgYzIgPSAtMjsgYzIgPD0gMjsgYzIgKz0gMSkge1xuICAgICAgICAgICAgICAgIGlmIChyID09IC0yIHx8IHIgPT0gMiB8fCBjMiA9PSAtMiB8fCBjMiA9PSAyIHx8IHIgPT0gMCAmJiBjMiA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICBfbW9kdWxlc1tyb3cgKyByXVtjb2wgKyBjMl0gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBfbW9kdWxlc1tyb3cgKyByXVtjb2wgKyBjMl0gPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgc2V0dXBUeXBlTnVtYmVyID0gZnVuY3Rpb24odGVzdCkge1xuICAgICAgICB2YXIgYml0cyA9IFFSVXRpbC5nZXRCQ0hUeXBlTnVtYmVyKF90eXBlTnVtYmVyKTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IDE4OyBpMiArPSAxKSB7XG4gICAgICAgICAgdmFyIG1vZCA9ICF0ZXN0ICYmIChiaXRzID4+IGkyICYgMSkgPT0gMTtcbiAgICAgICAgICBfbW9kdWxlc1tNYXRoLmZsb29yKGkyIC8gMyldW2kyICUgMyArIF9tb2R1bGVDb3VudCAtIDggLSAzXSA9IG1vZDtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgMTg7IGkyICs9IDEpIHtcbiAgICAgICAgICB2YXIgbW9kID0gIXRlc3QgJiYgKGJpdHMgPj4gaTIgJiAxKSA9PSAxO1xuICAgICAgICAgIF9tb2R1bGVzW2kyICUgMyArIF9tb2R1bGVDb3VudCAtIDggLSAzXVtNYXRoLmZsb29yKGkyIC8gMyldID0gbW9kO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIHNldHVwVHlwZUluZm8gPSBmdW5jdGlvbih0ZXN0LCBtYXNrUGF0dGVybikge1xuICAgICAgICB2YXIgZGF0YSA9IF9lcnJvckNvcnJlY3Rpb25MZXZlbCA8PCAzIHwgbWFza1BhdHRlcm47XG4gICAgICAgIHZhciBiaXRzID0gUVJVdGlsLmdldEJDSFR5cGVJbmZvKGRhdGEpO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgMTU7IGkyICs9IDEpIHtcbiAgICAgICAgICB2YXIgbW9kID0gIXRlc3QgJiYgKGJpdHMgPj4gaTIgJiAxKSA9PSAxO1xuICAgICAgICAgIGlmIChpMiA8IDYpIHtcbiAgICAgICAgICAgIF9tb2R1bGVzW2kyXVs4XSA9IG1vZDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGkyIDwgOCkge1xuICAgICAgICAgICAgX21vZHVsZXNbaTIgKyAxXVs4XSA9IG1vZDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgX21vZHVsZXNbX21vZHVsZUNvdW50IC0gMTUgKyBpMl1bOF0gPSBtb2Q7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCAxNTsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBtb2QgPSAhdGVzdCAmJiAoYml0cyA+PiBpMiAmIDEpID09IDE7XG4gICAgICAgICAgaWYgKGkyIDwgOCkge1xuICAgICAgICAgICAgX21vZHVsZXNbOF1bX21vZHVsZUNvdW50IC0gaTIgLSAxXSA9IG1vZDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGkyIDwgOSkge1xuICAgICAgICAgICAgX21vZHVsZXNbOF1bMTUgLSBpMiAtIDEgKyAxXSA9IG1vZDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgX21vZHVsZXNbOF1bMTUgLSBpMiAtIDFdID0gbW9kO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBfbW9kdWxlc1tfbW9kdWxlQ291bnQgLSA4XVs4XSA9ICF0ZXN0O1xuICAgICAgfTtcbiAgICAgIHZhciBtYXBEYXRhID0gZnVuY3Rpb24oZGF0YSwgbWFza1BhdHRlcm4pIHtcbiAgICAgICAgdmFyIGluYyA9IC0xO1xuICAgICAgICB2YXIgcm93ID0gX21vZHVsZUNvdW50IC0gMTtcbiAgICAgICAgdmFyIGJpdEluZGV4ID0gNztcbiAgICAgICAgdmFyIGJ5dGVJbmRleCA9IDA7XG4gICAgICAgIHZhciBtYXNrRnVuYyA9IFFSVXRpbC5nZXRNYXNrRnVuY3Rpb24obWFza1BhdHRlcm4pO1xuICAgICAgICBmb3IgKHZhciBjb2wgPSBfbW9kdWxlQ291bnQgLSAxOyBjb2wgPiAwOyBjb2wgLT0gMikge1xuICAgICAgICAgIGlmIChjb2wgPT0gNilcbiAgICAgICAgICAgIGNvbCAtPSAxO1xuICAgICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBjMiA9IDA7IGMyIDwgMjsgYzIgKz0gMSkge1xuICAgICAgICAgICAgICBpZiAoX21vZHVsZXNbcm93XVtjb2wgLSBjMl0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHZhciBkYXJrID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKGJ5dGVJbmRleCA8IGRhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICBkYXJrID0gKGRhdGFbYnl0ZUluZGV4XSA+Pj4gYml0SW5kZXggJiAxKSA9PSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgbWFzayA9IG1hc2tGdW5jKHJvdywgY29sIC0gYzIpO1xuICAgICAgICAgICAgICAgIGlmIChtYXNrKSB7XG4gICAgICAgICAgICAgICAgICBkYXJrID0gIWRhcms7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF9tb2R1bGVzW3Jvd11bY29sIC0gYzJdID0gZGFyaztcbiAgICAgICAgICAgICAgICBiaXRJbmRleCAtPSAxO1xuICAgICAgICAgICAgICAgIGlmIChiaXRJbmRleCA9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgYnl0ZUluZGV4ICs9IDE7XG4gICAgICAgICAgICAgICAgICBiaXRJbmRleCA9IDc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByb3cgKz0gaW5jO1xuICAgICAgICAgICAgaWYgKHJvdyA8IDAgfHwgX21vZHVsZUNvdW50IDw9IHJvdykge1xuICAgICAgICAgICAgICByb3cgLT0gaW5jO1xuICAgICAgICAgICAgICBpbmMgPSAtaW5jO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgY3JlYXRlQnl0ZXMgPSBmdW5jdGlvbihidWZmZXIsIHJzQmxvY2tzKSB7XG4gICAgICAgIHZhciBvZmZzZXQgPSAwO1xuICAgICAgICB2YXIgbWF4RGNDb3VudCA9IDA7XG4gICAgICAgIHZhciBtYXhFY0NvdW50ID0gMDtcbiAgICAgICAgdmFyIGRjZGF0YSA9IG5ldyBBcnJheShyc0Jsb2Nrcy5sZW5ndGgpO1xuICAgICAgICB2YXIgZWNkYXRhID0gbmV3IEFycmF5KHJzQmxvY2tzLmxlbmd0aCk7XG4gICAgICAgIGZvciAodmFyIHIgPSAwOyByIDwgcnNCbG9ja3MubGVuZ3RoOyByICs9IDEpIHtcbiAgICAgICAgICB2YXIgZGNDb3VudCA9IHJzQmxvY2tzW3JdLmRhdGFDb3VudDtcbiAgICAgICAgICB2YXIgZWNDb3VudCA9IHJzQmxvY2tzW3JdLnRvdGFsQ291bnQgLSBkY0NvdW50O1xuICAgICAgICAgIG1heERjQ291bnQgPSBNYXRoLm1heChtYXhEY0NvdW50LCBkY0NvdW50KTtcbiAgICAgICAgICBtYXhFY0NvdW50ID0gTWF0aC5tYXgobWF4RWNDb3VudCwgZWNDb3VudCk7XG4gICAgICAgICAgZGNkYXRhW3JdID0gbmV3IEFycmF5KGRjQ291bnQpO1xuICAgICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBkY2RhdGFbcl0ubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgICBkY2RhdGFbcl1baTJdID0gMjU1ICYgYnVmZmVyLmdldEJ1ZmZlcigpW2kyICsgb2Zmc2V0XTtcbiAgICAgICAgICB9XG4gICAgICAgICAgb2Zmc2V0ICs9IGRjQ291bnQ7XG4gICAgICAgICAgdmFyIHJzUG9seSA9IFFSVXRpbC5nZXRFcnJvckNvcnJlY3RQb2x5bm9taWFsKGVjQ291bnQpO1xuICAgICAgICAgIHZhciByYXdQb2x5ID0gcXJQb2x5bm9taWFsKGRjZGF0YVtyXSwgcnNQb2x5LmdldExlbmd0aCgpIC0gMSk7XG4gICAgICAgICAgdmFyIG1vZFBvbHkgPSByYXdQb2x5Lm1vZChyc1BvbHkpO1xuICAgICAgICAgIGVjZGF0YVtyXSA9IG5ldyBBcnJheShyc1BvbHkuZ2V0TGVuZ3RoKCkgLSAxKTtcbiAgICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgZWNkYXRhW3JdLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgICAgdmFyIG1vZEluZGV4ID0gaTIgKyBtb2RQb2x5LmdldExlbmd0aCgpIC0gZWNkYXRhW3JdLmxlbmd0aDtcbiAgICAgICAgICAgIGVjZGF0YVtyXVtpMl0gPSBtb2RJbmRleCA+PSAwID8gbW9kUG9seS5nZXRBdChtb2RJbmRleCkgOiAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgdG90YWxDb2RlQ291bnQgPSAwO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgcnNCbG9ja3MubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgdG90YWxDb2RlQ291bnQgKz0gcnNCbG9ja3NbaTJdLnRvdGFsQ291bnQ7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRhdGEgPSBuZXcgQXJyYXkodG90YWxDb2RlQ291bnQpO1xuICAgICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgbWF4RGNDb3VudDsgaTIgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIHIgPSAwOyByIDwgcnNCbG9ja3MubGVuZ3RoOyByICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChpMiA8IGRjZGF0YVtyXS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgZGF0YVtpbmRleF0gPSBkY2RhdGFbcl1baTJdO1xuICAgICAgICAgICAgICBpbmRleCArPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgbWF4RWNDb3VudDsgaTIgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIHIgPSAwOyByIDwgcnNCbG9ja3MubGVuZ3RoOyByICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChpMiA8IGVjZGF0YVtyXS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgZGF0YVtpbmRleF0gPSBlY2RhdGFbcl1baTJdO1xuICAgICAgICAgICAgICBpbmRleCArPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgIH07XG4gICAgICB2YXIgY3JlYXRlRGF0YSA9IGZ1bmN0aW9uKHR5cGVOdW1iZXIyLCBlcnJvckNvcnJlY3Rpb25MZXZlbDIsIGRhdGFMaXN0KSB7XG4gICAgICAgIHZhciByc0Jsb2NrcyA9IFFSUlNCbG9jay5nZXRSU0Jsb2Nrcyh0eXBlTnVtYmVyMiwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwyKTtcbiAgICAgICAgdmFyIGJ1ZmZlciA9IHFyQml0QnVmZmVyKCk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBkYXRhTGlzdC5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICB2YXIgZGF0YSA9IGRhdGFMaXN0W2kyXTtcbiAgICAgICAgICBidWZmZXIucHV0KGRhdGEuZ2V0TW9kZSgpLCA0KTtcbiAgICAgICAgICBidWZmZXIucHV0KGRhdGEuZ2V0TGVuZ3RoKCksIFFSVXRpbC5nZXRMZW5ndGhJbkJpdHMoZGF0YS5nZXRNb2RlKCksIHR5cGVOdW1iZXIyKSk7XG4gICAgICAgICAgZGF0YS53cml0ZShidWZmZXIpO1xuICAgICAgICB9XG4gICAgICAgIHZhciB0b3RhbERhdGFDb3VudCA9IDA7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCByc0Jsb2Nrcy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICB0b3RhbERhdGFDb3VudCArPSByc0Jsb2Nrc1tpMl0uZGF0YUNvdW50O1xuICAgICAgICB9XG4gICAgICAgIGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgPiB0b3RhbERhdGFDb3VudCAqIDgpIHtcbiAgICAgICAgICB0aHJvdyBcImNvZGUgbGVuZ3RoIG92ZXJmbG93LiAoXCIgKyBidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgKyBcIj5cIiArIHRvdGFsRGF0YUNvdW50ICogOCArIFwiKVwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgKyA0IDw9IHRvdGFsRGF0YUNvdW50ICogOCkge1xuICAgICAgICAgIGJ1ZmZlci5wdXQoMCwgNCk7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSAlIDggIT0gMCkge1xuICAgICAgICAgIGJ1ZmZlci5wdXRCaXQoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgaWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSA+PSB0b3RhbERhdGFDb3VudCAqIDgpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgICBidWZmZXIucHV0KFBBRDAsIDgpO1xuICAgICAgICAgIGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgPj0gdG90YWxEYXRhQ291bnQgKiA4KSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgICAgYnVmZmVyLnB1dChQQUQxLCA4KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY3JlYXRlQnl0ZXMoYnVmZmVyLCByc0Jsb2Nrcyk7XG4gICAgICB9O1xuICAgICAgX3RoaXMuYWRkRGF0YSA9IGZ1bmN0aW9uKGRhdGEsIG1vZGUpIHtcbiAgICAgICAgbW9kZSA9IG1vZGUgfHwgXCJCeXRlXCI7XG4gICAgICAgIHZhciBuZXdEYXRhID0gbnVsbDtcbiAgICAgICAgc3dpdGNoIChtb2RlKSB7XG4gICAgICAgICAgY2FzZSBcIk51bWVyaWNcIjpcbiAgICAgICAgICAgIG5ld0RhdGEgPSBxck51bWJlcihkYXRhKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJBbHBoYW51bWVyaWNcIjpcbiAgICAgICAgICAgIG5ld0RhdGEgPSBxckFscGhhTnVtKGRhdGEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkJ5dGVcIjpcbiAgICAgICAgICAgIG5ld0RhdGEgPSBxcjhCaXRCeXRlKGRhdGEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkthbmppXCI6XG4gICAgICAgICAgICBuZXdEYXRhID0gcXJLYW5qaShkYXRhKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBcIm1vZGU6XCIgKyBtb2RlO1xuICAgICAgICB9XG4gICAgICAgIF9kYXRhTGlzdC5wdXNoKG5ld0RhdGEpO1xuICAgICAgICBfZGF0YUNhY2hlID0gbnVsbDtcbiAgICAgIH07XG4gICAgICBfdGhpcy5pc0RhcmsgPSBmdW5jdGlvbihyb3csIGNvbCkge1xuICAgICAgICBpZiAocm93IDwgMCB8fCBfbW9kdWxlQ291bnQgPD0gcm93IHx8IGNvbCA8IDAgfHwgX21vZHVsZUNvdW50IDw9IGNvbCkge1xuICAgICAgICAgIHRocm93IHJvdyArIFwiLFwiICsgY29sO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfbW9kdWxlc1tyb3ddW2NvbF07XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0TW9kdWxlQ291bnQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9tb2R1bGVDb3VudDtcbiAgICAgIH07XG4gICAgICBfdGhpcy5tYWtlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChfdHlwZU51bWJlciA8IDEpIHtcbiAgICAgICAgICB2YXIgdHlwZU51bWJlcjIgPSAxO1xuICAgICAgICAgIGZvciAoOyB0eXBlTnVtYmVyMiA8IDQwOyB0eXBlTnVtYmVyMisrKSB7XG4gICAgICAgICAgICB2YXIgcnNCbG9ja3MgPSBRUlJTQmxvY2suZ2V0UlNCbG9ja3ModHlwZU51bWJlcjIsIF9lcnJvckNvcnJlY3Rpb25MZXZlbCk7XG4gICAgICAgICAgICB2YXIgYnVmZmVyID0gcXJCaXRCdWZmZXIoKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBfZGF0YUxpc3QubGVuZ3RoOyBpMisrKSB7XG4gICAgICAgICAgICAgIHZhciBkYXRhID0gX2RhdGFMaXN0W2kyXTtcbiAgICAgICAgICAgICAgYnVmZmVyLnB1dChkYXRhLmdldE1vZGUoKSwgNCk7XG4gICAgICAgICAgICAgIGJ1ZmZlci5wdXQoZGF0YS5nZXRMZW5ndGgoKSwgUVJVdGlsLmdldExlbmd0aEluQml0cyhkYXRhLmdldE1vZGUoKSwgdHlwZU51bWJlcjIpKTtcbiAgICAgICAgICAgICAgZGF0YS53cml0ZShidWZmZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHRvdGFsRGF0YUNvdW50ID0gMDtcbiAgICAgICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCByc0Jsb2Nrcy5sZW5ndGg7IGkyKyspIHtcbiAgICAgICAgICAgICAgdG90YWxEYXRhQ291bnQgKz0gcnNCbG9ja3NbaTJdLmRhdGFDb3VudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgPD0gdG90YWxEYXRhQ291bnQgKiA4KSB7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBfdHlwZU51bWJlciA9IHR5cGVOdW1iZXIyO1xuICAgICAgICB9XG4gICAgICAgIG1ha2VJbXBsKGZhbHNlLCBnZXRCZXN0TWFza1BhdHRlcm4oKSk7XG4gICAgICB9O1xuICAgICAgX3RoaXMuY3JlYXRlVGFibGVUYWcgPSBmdW5jdGlvbihjZWxsU2l6ZSwgbWFyZ2luKSB7XG4gICAgICAgIGNlbGxTaXplID0gY2VsbFNpemUgfHwgMjtcbiAgICAgICAgbWFyZ2luID0gdHlwZW9mIG1hcmdpbiA9PSBcInVuZGVmaW5lZFwiID8gY2VsbFNpemUgKiA0IDogbWFyZ2luO1xuICAgICAgICB2YXIgcXJIdG1sID0gXCJcIjtcbiAgICAgICAgcXJIdG1sICs9ICc8dGFibGUgc3R5bGU9XCInO1xuICAgICAgICBxckh0bWwgKz0gXCIgYm9yZGVyLXdpZHRoOiAwcHg7IGJvcmRlci1zdHlsZTogbm9uZTtcIjtcbiAgICAgICAgcXJIdG1sICs9IFwiIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XCI7XG4gICAgICAgIHFySHRtbCArPSBcIiBwYWRkaW5nOiAwcHg7IG1hcmdpbjogXCIgKyBtYXJnaW4gKyBcInB4O1wiO1xuICAgICAgICBxckh0bWwgKz0gJ1wiPic7XG4gICAgICAgIHFySHRtbCArPSBcIjx0Ym9keT5cIjtcbiAgICAgICAgZm9yICh2YXIgciA9IDA7IHIgPCBfdGhpcy5nZXRNb2R1bGVDb3VudCgpOyByICs9IDEpIHtcbiAgICAgICAgICBxckh0bWwgKz0gXCI8dHI+XCI7XG4gICAgICAgICAgZm9yICh2YXIgYzIgPSAwOyBjMiA8IF90aGlzLmdldE1vZHVsZUNvdW50KCk7IGMyICs9IDEpIHtcbiAgICAgICAgICAgIHFySHRtbCArPSAnPHRkIHN0eWxlPVwiJztcbiAgICAgICAgICAgIHFySHRtbCArPSBcIiBib3JkZXItd2lkdGg6IDBweDsgYm9yZGVyLXN0eWxlOiBub25lO1wiO1xuICAgICAgICAgICAgcXJIdG1sICs9IFwiIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XCI7XG4gICAgICAgICAgICBxckh0bWwgKz0gXCIgcGFkZGluZzogMHB4OyBtYXJnaW46IDBweDtcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSBcIiB3aWR0aDogXCIgKyBjZWxsU2l6ZSArIFwicHg7XCI7XG4gICAgICAgICAgICBxckh0bWwgKz0gXCIgaGVpZ2h0OiBcIiArIGNlbGxTaXplICsgXCJweDtcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSBcIiBiYWNrZ3JvdW5kLWNvbG9yOiBcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSBfdGhpcy5pc0RhcmsociwgYzIpID8gXCIjMDAwMDAwXCIgOiBcIiNmZmZmZmZcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSBcIjtcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSAnXCIvPic7XG4gICAgICAgICAgfVxuICAgICAgICAgIHFySHRtbCArPSBcIjwvdHI+XCI7XG4gICAgICAgIH1cbiAgICAgICAgcXJIdG1sICs9IFwiPC90Ym9keT5cIjtcbiAgICAgICAgcXJIdG1sICs9IFwiPC90YWJsZT5cIjtcbiAgICAgICAgcmV0dXJuIHFySHRtbDtcbiAgICAgIH07XG4gICAgICBfdGhpcy5jcmVhdGVTdmdUYWcgPSBmdW5jdGlvbihjZWxsU2l6ZSwgbWFyZ2luLCBhbHQsIHRpdGxlKSB7XG4gICAgICAgIHZhciBvcHRzID0ge307XG4gICAgICAgIGlmICh0eXBlb2YgYXJndW1lbnRzWzBdID09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICBvcHRzID0gYXJndW1lbnRzWzBdO1xuICAgICAgICAgIGNlbGxTaXplID0gb3B0cy5jZWxsU2l6ZTtcbiAgICAgICAgICBtYXJnaW4gPSBvcHRzLm1hcmdpbjtcbiAgICAgICAgICBhbHQgPSBvcHRzLmFsdDtcbiAgICAgICAgICB0aXRsZSA9IG9wdHMudGl0bGU7XG4gICAgICAgIH1cbiAgICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAyO1xuICAgICAgICBtYXJnaW4gPSB0eXBlb2YgbWFyZ2luID09IFwidW5kZWZpbmVkXCIgPyBjZWxsU2l6ZSAqIDQgOiBtYXJnaW47XG4gICAgICAgIGFsdCA9IHR5cGVvZiBhbHQgPT09IFwic3RyaW5nXCIgPyB7IHRleHQ6IGFsdCB9IDogYWx0IHx8IHt9O1xuICAgICAgICBhbHQudGV4dCA9IGFsdC50ZXh0IHx8IG51bGw7XG4gICAgICAgIGFsdC5pZCA9IGFsdC50ZXh0ID8gYWx0LmlkIHx8IFwicXJjb2RlLWRlc2NyaXB0aW9uXCIgOiBudWxsO1xuICAgICAgICB0aXRsZSA9IHR5cGVvZiB0aXRsZSA9PT0gXCJzdHJpbmdcIiA/IHsgdGV4dDogdGl0bGUgfSA6IHRpdGxlIHx8IHt9O1xuICAgICAgICB0aXRsZS50ZXh0ID0gdGl0bGUudGV4dCB8fCBudWxsO1xuICAgICAgICB0aXRsZS5pZCA9IHRpdGxlLnRleHQgPyB0aXRsZS5pZCB8fCBcInFyY29kZS10aXRsZVwiIDogbnVsbDtcbiAgICAgICAgdmFyIHNpemUgPSBfdGhpcy5nZXRNb2R1bGVDb3VudCgpICogY2VsbFNpemUgKyBtYXJnaW4gKiAyO1xuICAgICAgICB2YXIgYzIsIG1jLCByLCBtciwgcXJTdmcgPSBcIlwiLCByZWN0O1xuICAgICAgICByZWN0ID0gXCJsXCIgKyBjZWxsU2l6ZSArIFwiLDAgMCxcIiArIGNlbGxTaXplICsgXCIgLVwiICsgY2VsbFNpemUgKyBcIiwwIDAsLVwiICsgY2VsbFNpemUgKyBcInogXCI7XG4gICAgICAgIHFyU3ZnICs9ICc8c3ZnIHZlcnNpb249XCIxLjFcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCInO1xuICAgICAgICBxclN2ZyArPSAhb3B0cy5zY2FsYWJsZSA/ICcgd2lkdGg9XCInICsgc2l6ZSArICdweFwiIGhlaWdodD1cIicgKyBzaXplICsgJ3B4XCInIDogXCJcIjtcbiAgICAgICAgcXJTdmcgKz0gJyB2aWV3Qm94PVwiMCAwICcgKyBzaXplICsgXCIgXCIgKyBzaXplICsgJ1wiICc7XG4gICAgICAgIHFyU3ZnICs9ICcgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaW5ZTWluIG1lZXRcIic7XG4gICAgICAgIHFyU3ZnICs9IHRpdGxlLnRleHQgfHwgYWx0LnRleHQgPyAnIHJvbGU9XCJpbWdcIiBhcmlhLWxhYmVsbGVkYnk9XCInICsgZXNjYXBlWG1sKFt0aXRsZS5pZCwgYWx0LmlkXS5qb2luKFwiIFwiKS50cmltKCkpICsgJ1wiJyA6IFwiXCI7XG4gICAgICAgIHFyU3ZnICs9IFwiPlwiO1xuICAgICAgICBxclN2ZyArPSB0aXRsZS50ZXh0ID8gJzx0aXRsZSBpZD1cIicgKyBlc2NhcGVYbWwodGl0bGUuaWQpICsgJ1wiPicgKyBlc2NhcGVYbWwodGl0bGUudGV4dCkgKyBcIjwvdGl0bGU+XCIgOiBcIlwiO1xuICAgICAgICBxclN2ZyArPSBhbHQudGV4dCA/ICc8ZGVzY3JpcHRpb24gaWQ9XCInICsgZXNjYXBlWG1sKGFsdC5pZCkgKyAnXCI+JyArIGVzY2FwZVhtbChhbHQudGV4dCkgKyBcIjwvZGVzY3JpcHRpb24+XCIgOiBcIlwiO1xuICAgICAgICBxclN2ZyArPSAnPHJlY3Qgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PVwiMTAwJVwiIGZpbGw9XCJ3aGl0ZVwiIGN4PVwiMFwiIGN5PVwiMFwiLz4nO1xuICAgICAgICBxclN2ZyArPSAnPHBhdGggZD1cIic7XG4gICAgICAgIGZvciAociA9IDA7IHIgPCBfdGhpcy5nZXRNb2R1bGVDb3VudCgpOyByICs9IDEpIHtcbiAgICAgICAgICBtciA9IHIgKiBjZWxsU2l6ZSArIG1hcmdpbjtcbiAgICAgICAgICBmb3IgKGMyID0gMDsgYzIgPCBfdGhpcy5nZXRNb2R1bGVDb3VudCgpOyBjMiArPSAxKSB7XG4gICAgICAgICAgICBpZiAoX3RoaXMuaXNEYXJrKHIsIGMyKSkge1xuICAgICAgICAgICAgICBtYyA9IGMyICogY2VsbFNpemUgKyBtYXJnaW47XG4gICAgICAgICAgICAgIHFyU3ZnICs9IFwiTVwiICsgbWMgKyBcIixcIiArIG1yICsgcmVjdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXJTdmcgKz0gJ1wiIHN0cm9rZT1cInRyYW5zcGFyZW50XCIgZmlsbD1cImJsYWNrXCIvPic7XG4gICAgICAgIHFyU3ZnICs9IFwiPC9zdmc+XCI7XG4gICAgICAgIHJldHVybiBxclN2ZztcbiAgICAgIH07XG4gICAgICBfdGhpcy5jcmVhdGVEYXRhVVJMID0gZnVuY3Rpb24oY2VsbFNpemUsIG1hcmdpbikge1xuICAgICAgICBjZWxsU2l6ZSA9IGNlbGxTaXplIHx8IDI7XG4gICAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gXCJ1bmRlZmluZWRcIiA/IGNlbGxTaXplICogNCA6IG1hcmdpbjtcbiAgICAgICAgdmFyIHNpemUgPSBfdGhpcy5nZXRNb2R1bGVDb3VudCgpICogY2VsbFNpemUgKyBtYXJnaW4gKiAyO1xuICAgICAgICB2YXIgbWluMiA9IG1hcmdpbjtcbiAgICAgICAgdmFyIG1heDIgPSBzaXplIC0gbWFyZ2luO1xuICAgICAgICByZXR1cm4gY3JlYXRlRGF0YVVSTChzaXplLCBzaXplLCBmdW5jdGlvbih4LCB5KSB7XG4gICAgICAgICAgaWYgKG1pbjIgPD0geCAmJiB4IDwgbWF4MiAmJiBtaW4yIDw9IHkgJiYgeSA8IG1heDIpIHtcbiAgICAgICAgICAgIHZhciBjMiA9IE1hdGguZmxvb3IoKHggLSBtaW4yKSAvIGNlbGxTaXplKTtcbiAgICAgICAgICAgIHZhciByID0gTWF0aC5mbG9vcigoeSAtIG1pbjIpIC8gY2VsbFNpemUpO1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLmlzRGFyayhyLCBjMikgPyAwIDogMTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5jcmVhdGVJbWdUYWcgPSBmdW5jdGlvbihjZWxsU2l6ZSwgbWFyZ2luLCBhbHQpIHtcbiAgICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAyO1xuICAgICAgICBtYXJnaW4gPSB0eXBlb2YgbWFyZ2luID09IFwidW5kZWZpbmVkXCIgPyBjZWxsU2l6ZSAqIDQgOiBtYXJnaW47XG4gICAgICAgIHZhciBzaXplID0gX3RoaXMuZ2V0TW9kdWxlQ291bnQoKSAqIGNlbGxTaXplICsgbWFyZ2luICogMjtcbiAgICAgICAgdmFyIGltZyA9IFwiXCI7XG4gICAgICAgIGltZyArPSBcIjxpbWdcIjtcbiAgICAgICAgaW1nICs9ICcgc3JjPVwiJztcbiAgICAgICAgaW1nICs9IF90aGlzLmNyZWF0ZURhdGFVUkwoY2VsbFNpemUsIG1hcmdpbik7XG4gICAgICAgIGltZyArPSAnXCInO1xuICAgICAgICBpbWcgKz0gJyB3aWR0aD1cIic7XG4gICAgICAgIGltZyArPSBzaXplO1xuICAgICAgICBpbWcgKz0gJ1wiJztcbiAgICAgICAgaW1nICs9ICcgaGVpZ2h0PVwiJztcbiAgICAgICAgaW1nICs9IHNpemU7XG4gICAgICAgIGltZyArPSAnXCInO1xuICAgICAgICBpZiAoYWx0KSB7XG4gICAgICAgICAgaW1nICs9ICcgYWx0PVwiJztcbiAgICAgICAgICBpbWcgKz0gZXNjYXBlWG1sKGFsdCk7XG4gICAgICAgICAgaW1nICs9ICdcIic7XG4gICAgICAgIH1cbiAgICAgICAgaW1nICs9IFwiLz5cIjtcbiAgICAgICAgcmV0dXJuIGltZztcbiAgICAgIH07XG4gICAgICB2YXIgZXNjYXBlWG1sID0gZnVuY3Rpb24oczIpIHtcbiAgICAgICAgdmFyIGVzY2FwZWQgPSBcIlwiO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgczIubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgdmFyIGMyID0gczIuY2hhckF0KGkyKTtcbiAgICAgICAgICBzd2l0Y2ggKGMyKSB7XG4gICAgICAgICAgICBjYXNlIFwiPFwiOlxuICAgICAgICAgICAgICBlc2NhcGVkICs9IFwiJmx0O1wiO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCI+XCI6XG4gICAgICAgICAgICAgIGVzY2FwZWQgKz0gXCImZ3Q7XCI7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIiZcIjpcbiAgICAgICAgICAgICAgZXNjYXBlZCArPSBcIiZhbXA7XCI7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnXCInOlxuICAgICAgICAgICAgICBlc2NhcGVkICs9IFwiJnF1b3Q7XCI7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgZXNjYXBlZCArPSBjMjtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlc2NhcGVkO1xuICAgICAgfTtcbiAgICAgIHZhciBfY3JlYXRlSGFsZkFTQ0lJID0gZnVuY3Rpb24obWFyZ2luKSB7XG4gICAgICAgIHZhciBjZWxsU2l6ZSA9IDE7XG4gICAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gXCJ1bmRlZmluZWRcIiA/IGNlbGxTaXplICogMiA6IG1hcmdpbjtcbiAgICAgICAgdmFyIHNpemUgPSBfdGhpcy5nZXRNb2R1bGVDb3VudCgpICogY2VsbFNpemUgKyBtYXJnaW4gKiAyO1xuICAgICAgICB2YXIgbWluMiA9IG1hcmdpbjtcbiAgICAgICAgdmFyIG1heDIgPSBzaXplIC0gbWFyZ2luO1xuICAgICAgICB2YXIgeSwgeCwgcjEsIHIyLCBwMjtcbiAgICAgICAgdmFyIGJsb2NrcyA9IHtcbiAgICAgICAgICBcIlxcdTI1ODhcXHUyNTg4XCI6IFwiXFx1MjU4OFwiLFxuICAgICAgICAgIFwiXFx1MjU4OCBcIjogXCJcXHUyNTgwXCIsXG4gICAgICAgICAgXCIgXFx1MjU4OFwiOiBcIlxcdTI1ODRcIixcbiAgICAgICAgICBcIiAgXCI6IFwiIFwiXG4gICAgICAgIH07XG4gICAgICAgIHZhciBibG9ja3NMYXN0TGluZU5vTWFyZ2luID0ge1xuICAgICAgICAgIFwiXFx1MjU4OFxcdTI1ODhcIjogXCJcXHUyNTgwXCIsXG4gICAgICAgICAgXCJcXHUyNTg4IFwiOiBcIlxcdTI1ODBcIixcbiAgICAgICAgICBcIiBcXHUyNTg4XCI6IFwiIFwiLFxuICAgICAgICAgIFwiICBcIjogXCIgXCJcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGFzY2lpID0gXCJcIjtcbiAgICAgICAgZm9yICh5ID0gMDsgeSA8IHNpemU7IHkgKz0gMikge1xuICAgICAgICAgIHIxID0gTWF0aC5mbG9vcigoeSAtIG1pbjIpIC8gY2VsbFNpemUpO1xuICAgICAgICAgIHIyID0gTWF0aC5mbG9vcigoeSArIDEgLSBtaW4yKSAvIGNlbGxTaXplKTtcbiAgICAgICAgICBmb3IgKHggPSAwOyB4IDwgc2l6ZTsgeCArPSAxKSB7XG4gICAgICAgICAgICBwMiA9IFwiXFx1MjU4OFwiO1xuICAgICAgICAgICAgaWYgKG1pbjIgPD0geCAmJiB4IDwgbWF4MiAmJiBtaW4yIDw9IHkgJiYgeSA8IG1heDIgJiYgX3RoaXMuaXNEYXJrKHIxLCBNYXRoLmZsb29yKCh4IC0gbWluMikgLyBjZWxsU2l6ZSkpKSB7XG4gICAgICAgICAgICAgIHAyID0gXCIgXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWluMiA8PSB4ICYmIHggPCBtYXgyICYmIG1pbjIgPD0geSArIDEgJiYgeSArIDEgPCBtYXgyICYmIF90aGlzLmlzRGFyayhyMiwgTWF0aC5mbG9vcigoeCAtIG1pbjIpIC8gY2VsbFNpemUpKSkge1xuICAgICAgICAgICAgICBwMiArPSBcIiBcIjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHAyICs9IFwiXFx1MjU4OFwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXNjaWkgKz0gbWFyZ2luIDwgMSAmJiB5ICsgMSA+PSBtYXgyID8gYmxvY2tzTGFzdExpbmVOb01hcmdpbltwMl0gOiBibG9ja3NbcDJdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBhc2NpaSArPSBcIlxcblwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzaXplICUgMiAmJiBtYXJnaW4gPiAwKSB7XG4gICAgICAgICAgcmV0dXJuIGFzY2lpLnN1YnN0cmluZygwLCBhc2NpaS5sZW5ndGggLSBzaXplIC0gMSkgKyBBcnJheShzaXplICsgMSkuam9pbihcIlxcdTI1ODBcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFzY2lpLnN1YnN0cmluZygwLCBhc2NpaS5sZW5ndGggLSAxKTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5jcmVhdGVBU0NJSSA9IGZ1bmN0aW9uKGNlbGxTaXplLCBtYXJnaW4pIHtcbiAgICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAxO1xuICAgICAgICBpZiAoY2VsbFNpemUgPCAyKSB7XG4gICAgICAgICAgcmV0dXJuIF9jcmVhdGVIYWxmQVNDSUkobWFyZ2luKTtcbiAgICAgICAgfVxuICAgICAgICBjZWxsU2l6ZSAtPSAxO1xuICAgICAgICBtYXJnaW4gPSB0eXBlb2YgbWFyZ2luID09IFwidW5kZWZpbmVkXCIgPyBjZWxsU2l6ZSAqIDIgOiBtYXJnaW47XG4gICAgICAgIHZhciBzaXplID0gX3RoaXMuZ2V0TW9kdWxlQ291bnQoKSAqIGNlbGxTaXplICsgbWFyZ2luICogMjtcbiAgICAgICAgdmFyIG1pbjIgPSBtYXJnaW47XG4gICAgICAgIHZhciBtYXgyID0gc2l6ZSAtIG1hcmdpbjtcbiAgICAgICAgdmFyIHksIHgsIHIsIHAyO1xuICAgICAgICB2YXIgd2hpdGUgPSBBcnJheShjZWxsU2l6ZSArIDEpLmpvaW4oXCJcXHUyNTg4XFx1MjU4OFwiKTtcbiAgICAgICAgdmFyIGJsYWNrID0gQXJyYXkoY2VsbFNpemUgKyAxKS5qb2luKFwiICBcIik7XG4gICAgICAgIHZhciBhc2NpaSA9IFwiXCI7XG4gICAgICAgIHZhciBsaW5lID0gXCJcIjtcbiAgICAgICAgZm9yICh5ID0gMDsgeSA8IHNpemU7IHkgKz0gMSkge1xuICAgICAgICAgIHIgPSBNYXRoLmZsb29yKCh5IC0gbWluMikgLyBjZWxsU2l6ZSk7XG4gICAgICAgICAgbGluZSA9IFwiXCI7XG4gICAgICAgICAgZm9yICh4ID0gMDsgeCA8IHNpemU7IHggKz0gMSkge1xuICAgICAgICAgICAgcDIgPSAxO1xuICAgICAgICAgICAgaWYgKG1pbjIgPD0geCAmJiB4IDwgbWF4MiAmJiBtaW4yIDw9IHkgJiYgeSA8IG1heDIgJiYgX3RoaXMuaXNEYXJrKHIsIE1hdGguZmxvb3IoKHggLSBtaW4yKSAvIGNlbGxTaXplKSkpIHtcbiAgICAgICAgICAgICAgcDIgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGluZSArPSBwMiA/IHdoaXRlIDogYmxhY2s7XG4gICAgICAgICAgfVxuICAgICAgICAgIGZvciAociA9IDA7IHIgPCBjZWxsU2l6ZTsgciArPSAxKSB7XG4gICAgICAgICAgICBhc2NpaSArPSBsaW5lICsgXCJcXG5cIjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFzY2lpLnN1YnN0cmluZygwLCBhc2NpaS5sZW5ndGggLSAxKTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5yZW5kZXJUbzJkQ29udGV4dCA9IGZ1bmN0aW9uKGNvbnRleHQsIGNlbGxTaXplKSB7XG4gICAgICAgIGNlbGxTaXplID0gY2VsbFNpemUgfHwgMjtcbiAgICAgICAgdmFyIGxlbmd0aCA9IF90aGlzLmdldE1vZHVsZUNvdW50KCk7XG4gICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IGxlbmd0aDsgcm93KyspIHtcbiAgICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBsZW5ndGg7IGNvbCsrKSB7XG4gICAgICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IF90aGlzLmlzRGFyayhyb3csIGNvbCkgPyBcImJsYWNrXCIgOiBcIndoaXRlXCI7XG4gICAgICAgICAgICBjb250ZXh0LmZpbGxSZWN0KHJvdyAqIGNlbGxTaXplLCBjb2wgKiBjZWxsU2l6ZSwgY2VsbFNpemUsIGNlbGxTaXplKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfTtcbiAgICBxcmNvZGUzLnN0cmluZ1RvQnl0ZXNGdW5jcyA9IHtcbiAgICAgIFwiZGVmYXVsdFwiOiBmdW5jdGlvbihzMikge1xuICAgICAgICB2YXIgYnl0ZXMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHMyLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBjMiA9IHMyLmNoYXJDb2RlQXQoaTIpO1xuICAgICAgICAgIGJ5dGVzLnB1c2goYzIgJiAyNTUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBieXRlcztcbiAgICAgIH1cbiAgICB9O1xuICAgIHFyY29kZTMuc3RyaW5nVG9CeXRlcyA9IHFyY29kZTMuc3RyaW5nVG9CeXRlc0Z1bmNzW1wiZGVmYXVsdFwiXTtcbiAgICBxcmNvZGUzLmNyZWF0ZVN0cmluZ1RvQnl0ZXMgPSBmdW5jdGlvbih1bmljb2RlRGF0YSwgbnVtQ2hhcnMpIHtcbiAgICAgIHZhciB1bmljb2RlTWFwID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBiaW4gPSBiYXNlNjREZWNvZGVJbnB1dFN0cmVhbSh1bmljb2RlRGF0YSk7XG4gICAgICAgIHZhciByZWFkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIGIgPSBiaW4ucmVhZCgpO1xuICAgICAgICAgIGlmIChiID09IC0xKVxuICAgICAgICAgICAgdGhyb3cgXCJlb2ZcIjtcbiAgICAgICAgICByZXR1cm4gYjtcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGNvdW50ID0gMDtcbiAgICAgICAgdmFyIHVuaWNvZGVNYXAyID0ge307XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgdmFyIGIwID0gYmluLnJlYWQoKTtcbiAgICAgICAgICBpZiAoYjAgPT0gLTEpXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB2YXIgYjEgPSByZWFkKCk7XG4gICAgICAgICAgdmFyIGIyID0gcmVhZCgpO1xuICAgICAgICAgIHZhciBiMyA9IHJlYWQoKTtcbiAgICAgICAgICB2YXIgayA9IFN0cmluZy5mcm9tQ2hhckNvZGUoYjAgPDwgOCB8IGIxKTtcbiAgICAgICAgICB2YXIgdiA9IGIyIDw8IDggfCBiMztcbiAgICAgICAgICB1bmljb2RlTWFwMltrXSA9IHY7XG4gICAgICAgICAgY291bnQgKz0gMTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY291bnQgIT0gbnVtQ2hhcnMpIHtcbiAgICAgICAgICB0aHJvdyBjb3VudCArIFwiICE9IFwiICsgbnVtQ2hhcnM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuaWNvZGVNYXAyO1xuICAgICAgfSgpO1xuICAgICAgdmFyIHVua25vd25DaGFyID0gXCI/XCIuY2hhckNvZGVBdCgwKTtcbiAgICAgIHJldHVybiBmdW5jdGlvbihzMikge1xuICAgICAgICB2YXIgYnl0ZXMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHMyLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBjMiA9IHMyLmNoYXJDb2RlQXQoaTIpO1xuICAgICAgICAgIGlmIChjMiA8IDEyOCkge1xuICAgICAgICAgICAgYnl0ZXMucHVzaChjMik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciBiID0gdW5pY29kZU1hcFtzMi5jaGFyQXQoaTIpXTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgYiA9PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICAgIGlmICgoYiAmIDI1NSkgPT0gYikge1xuICAgICAgICAgICAgICAgIGJ5dGVzLnB1c2goYik7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYnl0ZXMucHVzaChiID4+PiA4KTtcbiAgICAgICAgICAgICAgICBieXRlcy5wdXNoKGIgJiAyNTUpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBieXRlcy5wdXNoKHVua25vd25DaGFyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgICAgfTtcbiAgICB9O1xuICAgIHZhciBRUk1vZGUgPSB7XG4gICAgICBNT0RFX05VTUJFUjogMSA8PCAwLFxuICAgICAgTU9ERV9BTFBIQV9OVU06IDEgPDwgMSxcbiAgICAgIE1PREVfOEJJVF9CWVRFOiAxIDw8IDIsXG4gICAgICBNT0RFX0tBTkpJOiAxIDw8IDNcbiAgICB9O1xuICAgIHZhciBRUkVycm9yQ29ycmVjdGlvbkxldmVsID0ge1xuICAgICAgTDogMSxcbiAgICAgIE06IDAsXG4gICAgICBROiAzLFxuICAgICAgSDogMlxuICAgIH07XG4gICAgdmFyIFFSTWFza1BhdHRlcm4gPSB7XG4gICAgICBQQVRURVJOMDAwOiAwLFxuICAgICAgUEFUVEVSTjAwMTogMSxcbiAgICAgIFBBVFRFUk4wMTA6IDIsXG4gICAgICBQQVRURVJOMDExOiAzLFxuICAgICAgUEFUVEVSTjEwMDogNCxcbiAgICAgIFBBVFRFUk4xMDE6IDUsXG4gICAgICBQQVRURVJOMTEwOiA2LFxuICAgICAgUEFUVEVSTjExMTogN1xuICAgIH07XG4gICAgdmFyIFFSVXRpbCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIFBBVFRFUk5fUE9TSVRJT05fVEFCTEUgPSBbXG4gICAgICAgIFtdLFxuICAgICAgICBbNiwgMThdLFxuICAgICAgICBbNiwgMjJdLFxuICAgICAgICBbNiwgMjZdLFxuICAgICAgICBbNiwgMzBdLFxuICAgICAgICBbNiwgMzRdLFxuICAgICAgICBbNiwgMjIsIDM4XSxcbiAgICAgICAgWzYsIDI0LCA0Ml0sXG4gICAgICAgIFs2LCAyNiwgNDZdLFxuICAgICAgICBbNiwgMjgsIDUwXSxcbiAgICAgICAgWzYsIDMwLCA1NF0sXG4gICAgICAgIFs2LCAzMiwgNThdLFxuICAgICAgICBbNiwgMzQsIDYyXSxcbiAgICAgICAgWzYsIDI2LCA0NiwgNjZdLFxuICAgICAgICBbNiwgMjYsIDQ4LCA3MF0sXG4gICAgICAgIFs2LCAyNiwgNTAsIDc0XSxcbiAgICAgICAgWzYsIDMwLCA1NCwgNzhdLFxuICAgICAgICBbNiwgMzAsIDU2LCA4Ml0sXG4gICAgICAgIFs2LCAzMCwgNTgsIDg2XSxcbiAgICAgICAgWzYsIDM0LCA2MiwgOTBdLFxuICAgICAgICBbNiwgMjgsIDUwLCA3MiwgOTRdLFxuICAgICAgICBbNiwgMjYsIDUwLCA3NCwgOThdLFxuICAgICAgICBbNiwgMzAsIDU0LCA3OCwgMTAyXSxcbiAgICAgICAgWzYsIDI4LCA1NCwgODAsIDEwNl0sXG4gICAgICAgIFs2LCAzMiwgNTgsIDg0LCAxMTBdLFxuICAgICAgICBbNiwgMzAsIDU4LCA4NiwgMTE0XSxcbiAgICAgICAgWzYsIDM0LCA2MiwgOTAsIDExOF0sXG4gICAgICAgIFs2LCAyNiwgNTAsIDc0LCA5OCwgMTIyXSxcbiAgICAgICAgWzYsIDMwLCA1NCwgNzgsIDEwMiwgMTI2XSxcbiAgICAgICAgWzYsIDI2LCA1MiwgNzgsIDEwNCwgMTMwXSxcbiAgICAgICAgWzYsIDMwLCA1NiwgODIsIDEwOCwgMTM0XSxcbiAgICAgICAgWzYsIDM0LCA2MCwgODYsIDExMiwgMTM4XSxcbiAgICAgICAgWzYsIDMwLCA1OCwgODYsIDExNCwgMTQyXSxcbiAgICAgICAgWzYsIDM0LCA2MiwgOTAsIDExOCwgMTQ2XSxcbiAgICAgICAgWzYsIDMwLCA1NCwgNzgsIDEwMiwgMTI2LCAxNTBdLFxuICAgICAgICBbNiwgMjQsIDUwLCA3NiwgMTAyLCAxMjgsIDE1NF0sXG4gICAgICAgIFs2LCAyOCwgNTQsIDgwLCAxMDYsIDEzMiwgMTU4XSxcbiAgICAgICAgWzYsIDMyLCA1OCwgODQsIDExMCwgMTM2LCAxNjJdLFxuICAgICAgICBbNiwgMjYsIDU0LCA4MiwgMTEwLCAxMzgsIDE2Nl0sXG4gICAgICAgIFs2LCAzMCwgNTgsIDg2LCAxMTQsIDE0MiwgMTcwXVxuICAgICAgXTtcbiAgICAgIHZhciBHMTUgPSAxIDw8IDEwIHwgMSA8PCA4IHwgMSA8PCA1IHwgMSA8PCA0IHwgMSA8PCAyIHwgMSA8PCAxIHwgMSA8PCAwO1xuICAgICAgdmFyIEcxOCA9IDEgPDwgMTIgfCAxIDw8IDExIHwgMSA8PCAxMCB8IDEgPDwgOSB8IDEgPDwgOCB8IDEgPDwgNSB8IDEgPDwgMiB8IDEgPDwgMDtcbiAgICAgIHZhciBHMTVfTUFTSyA9IDEgPDwgMTQgfCAxIDw8IDEyIHwgMSA8PCAxMCB8IDEgPDwgNCB8IDEgPDwgMTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgdmFyIGdldEJDSERpZ2l0ID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICB2YXIgZGlnaXQgPSAwO1xuICAgICAgICB3aGlsZSAoZGF0YSAhPSAwKSB7XG4gICAgICAgICAgZGlnaXQgKz0gMTtcbiAgICAgICAgICBkYXRhID4+Pj0gMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGlnaXQ7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0QkNIVHlwZUluZm8gPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgIHZhciBkID0gZGF0YSA8PCAxMDtcbiAgICAgICAgd2hpbGUgKGdldEJDSERpZ2l0KGQpIC0gZ2V0QkNIRGlnaXQoRzE1KSA+PSAwKSB7XG4gICAgICAgICAgZCBePSBHMTUgPDwgZ2V0QkNIRGlnaXQoZCkgLSBnZXRCQ0hEaWdpdChHMTUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoZGF0YSA8PCAxMCB8IGQpIF4gRzE1X01BU0s7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0QkNIVHlwZU51bWJlciA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgdmFyIGQgPSBkYXRhIDw8IDEyO1xuICAgICAgICB3aGlsZSAoZ2V0QkNIRGlnaXQoZCkgLSBnZXRCQ0hEaWdpdChHMTgpID49IDApIHtcbiAgICAgICAgICBkIF49IEcxOCA8PCBnZXRCQ0hEaWdpdChkKSAtIGdldEJDSERpZ2l0KEcxOCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRhdGEgPDwgMTIgfCBkO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmdldFBhdHRlcm5Qb3NpdGlvbiA9IGZ1bmN0aW9uKHR5cGVOdW1iZXIpIHtcbiAgICAgICAgcmV0dXJuIFBBVFRFUk5fUE9TSVRJT05fVEFCTEVbdHlwZU51bWJlciAtIDFdO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmdldE1hc2tGdW5jdGlvbiA9IGZ1bmN0aW9uKG1hc2tQYXR0ZXJuKSB7XG4gICAgICAgIHN3aXRjaCAobWFza1BhdHRlcm4pIHtcbiAgICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjAwMDpcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihpMiwgaikge1xuICAgICAgICAgICAgICByZXR1cm4gKGkyICsgaikgJSAyID09IDA7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIGNhc2UgUVJNYXNrUGF0dGVybi5QQVRURVJOMDAxOlxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGkyLCBqKSB7XG4gICAgICAgICAgICAgIHJldHVybiBpMiAlIDIgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4wMTA6XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oaTIsIGopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGogJSAzID09IDA7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIGNhc2UgUVJNYXNrUGF0dGVybi5QQVRURVJOMDExOlxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGkyLCBqKSB7XG4gICAgICAgICAgICAgIHJldHVybiAoaTIgKyBqKSAlIDMgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4xMDA6XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oaTIsIGopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIChNYXRoLmZsb29yKGkyIC8gMikgKyBNYXRoLmZsb29yKGogLyAzKSkgJSAyID09IDA7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIGNhc2UgUVJNYXNrUGF0dGVybi5QQVRURVJOMTAxOlxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGkyLCBqKSB7XG4gICAgICAgICAgICAgIHJldHVybiBpMiAqIGogJSAyICsgaTIgKiBqICUgMyA9PSAwO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjExMDpcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihpMiwgaikge1xuICAgICAgICAgICAgICByZXR1cm4gKGkyICogaiAlIDIgKyBpMiAqIGogJSAzKSAlIDIgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4xMTE6XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oaTIsIGopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIChpMiAqIGogJSAzICsgKGkyICsgaikgJSAyKSAlIDIgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IFwiYmFkIG1hc2tQYXR0ZXJuOlwiICsgbWFza1BhdHRlcm47XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRFcnJvckNvcnJlY3RQb2x5bm9taWFsID0gZnVuY3Rpb24oZXJyb3JDb3JyZWN0TGVuZ3RoKSB7XG4gICAgICAgIHZhciBhMiA9IHFyUG9seW5vbWlhbChbMV0sIDApO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgZXJyb3JDb3JyZWN0TGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgYTIgPSBhMi5tdWx0aXBseShxclBvbHlub21pYWwoWzEsIFFSTWF0aC5nZXhwKGkyKV0sIDApKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYTI7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0TGVuZ3RoSW5CaXRzID0gZnVuY3Rpb24obW9kZSwgdHlwZSkge1xuICAgICAgICBpZiAoMSA8PSB0eXBlICYmIHR5cGUgPCAxMCkge1xuICAgICAgICAgIHN3aXRjaCAobW9kZSkge1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9OVU1CRVI6XG4gICAgICAgICAgICAgIHJldHVybiAxMDtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfQUxQSEFfTlVNOlxuICAgICAgICAgICAgICByZXR1cm4gOTtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfOEJJVF9CWVRFOlxuICAgICAgICAgICAgICByZXR1cm4gODtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfS0FOSkk6XG4gICAgICAgICAgICAgIHJldHVybiA4O1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgdGhyb3cgXCJtb2RlOlwiICsgbW9kZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA8IDI3KSB7XG4gICAgICAgICAgc3dpdGNoIChtb2RlKSB7XG4gICAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFX05VTUJFUjpcbiAgICAgICAgICAgICAgcmV0dXJuIDEyO1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9BTFBIQV9OVU06XG4gICAgICAgICAgICAgIHJldHVybiAxMTtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfOEJJVF9CWVRFOlxuICAgICAgICAgICAgICByZXR1cm4gMTY7XG4gICAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFX0tBTkpJOlxuICAgICAgICAgICAgICByZXR1cm4gMTA7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICB0aHJvdyBcIm1vZGU6XCIgKyBtb2RlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmICh0eXBlIDwgNDEpIHtcbiAgICAgICAgICBzd2l0Y2ggKG1vZGUpIHtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfTlVNQkVSOlxuICAgICAgICAgICAgICByZXR1cm4gMTQ7XG4gICAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFX0FMUEhBX05VTTpcbiAgICAgICAgICAgICAgcmV0dXJuIDEzO1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV84QklUX0JZVEU6XG4gICAgICAgICAgICAgIHJldHVybiAxNjtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfS0FOSkk6XG4gICAgICAgICAgICAgIHJldHVybiAxMjtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIHRocm93IFwibW9kZTpcIiArIG1vZGU7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IFwidHlwZTpcIiArIHR5cGU7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMb3N0UG9pbnQgPSBmdW5jdGlvbihxcmNvZGU0KSB7XG4gICAgICAgIHZhciBtb2R1bGVDb3VudCA9IHFyY29kZTQuZ2V0TW9kdWxlQ291bnQoKTtcbiAgICAgICAgdmFyIGxvc3RQb2ludCA9IDA7XG4gICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IG1vZHVsZUNvdW50OyByb3cgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IG1vZHVsZUNvdW50OyBjb2wgKz0gMSkge1xuICAgICAgICAgICAgdmFyIHNhbWVDb3VudCA9IDA7XG4gICAgICAgICAgICB2YXIgZGFyayA9IHFyY29kZTQuaXNEYXJrKHJvdywgY29sKTtcbiAgICAgICAgICAgIGZvciAodmFyIHIgPSAtMTsgciA8PSAxOyByICs9IDEpIHtcbiAgICAgICAgICAgICAgaWYgKHJvdyArIHIgPCAwIHx8IG1vZHVsZUNvdW50IDw9IHJvdyArIHIpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBmb3IgKHZhciBjMiA9IC0xOyBjMiA8PSAxOyBjMiArPSAxKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNvbCArIGMyIDwgMCB8fCBtb2R1bGVDb3VudCA8PSBjb2wgKyBjMikge1xuICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChyID09IDAgJiYgYzIgPT0gMCkge1xuICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChkYXJrID09IHFyY29kZTQuaXNEYXJrKHJvdyArIHIsIGNvbCArIGMyKSkge1xuICAgICAgICAgICAgICAgICAgc2FtZUNvdW50ICs9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2FtZUNvdW50ID4gNSkge1xuICAgICAgICAgICAgICBsb3N0UG9pbnQgKz0gMyArIHNhbWVDb3VudCAtIDU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IG1vZHVsZUNvdW50IC0gMTsgcm93ICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudCAtIDE7IGNvbCArPSAxKSB7XG4gICAgICAgICAgICB2YXIgY291bnQgPSAwO1xuICAgICAgICAgICAgaWYgKHFyY29kZTQuaXNEYXJrKHJvdywgY29sKSlcbiAgICAgICAgICAgICAgY291bnQgKz0gMTtcbiAgICAgICAgICAgIGlmIChxcmNvZGU0LmlzRGFyayhyb3cgKyAxLCBjb2wpKVxuICAgICAgICAgICAgICBjb3VudCArPSAxO1xuICAgICAgICAgICAgaWYgKHFyY29kZTQuaXNEYXJrKHJvdywgY29sICsgMSkpXG4gICAgICAgICAgICAgIGNvdW50ICs9IDE7XG4gICAgICAgICAgICBpZiAocXJjb2RlNC5pc0Rhcmsocm93ICsgMSwgY29sICsgMSkpXG4gICAgICAgICAgICAgIGNvdW50ICs9IDE7XG4gICAgICAgICAgICBpZiAoY291bnQgPT0gMCB8fCBjb3VudCA9PSA0KSB7XG4gICAgICAgICAgICAgIGxvc3RQb2ludCArPSAzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBtb2R1bGVDb3VudDsgcm93ICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudCAtIDY7IGNvbCArPSAxKSB7XG4gICAgICAgICAgICBpZiAocXJjb2RlNC5pc0Rhcmsocm93LCBjb2wpICYmICFxcmNvZGU0LmlzRGFyayhyb3csIGNvbCArIDEpICYmIHFyY29kZTQuaXNEYXJrKHJvdywgY29sICsgMikgJiYgcXJjb2RlNC5pc0Rhcmsocm93LCBjb2wgKyAzKSAmJiBxcmNvZGU0LmlzRGFyayhyb3csIGNvbCArIDQpICYmICFxcmNvZGU0LmlzRGFyayhyb3csIGNvbCArIDUpICYmIHFyY29kZTQuaXNEYXJrKHJvdywgY29sICsgNikpIHtcbiAgICAgICAgICAgICAgbG9zdFBvaW50ICs9IDQwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudDsgY29sICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBtb2R1bGVDb3VudCAtIDY7IHJvdyArPSAxKSB7XG4gICAgICAgICAgICBpZiAocXJjb2RlNC5pc0Rhcmsocm93LCBjb2wpICYmICFxcmNvZGU0LmlzRGFyayhyb3cgKyAxLCBjb2wpICYmIHFyY29kZTQuaXNEYXJrKHJvdyArIDIsIGNvbCkgJiYgcXJjb2RlNC5pc0Rhcmsocm93ICsgMywgY29sKSAmJiBxcmNvZGU0LmlzRGFyayhyb3cgKyA0LCBjb2wpICYmICFxcmNvZGU0LmlzRGFyayhyb3cgKyA1LCBjb2wpICYmIHFyY29kZTQuaXNEYXJrKHJvdyArIDYsIGNvbCkpIHtcbiAgICAgICAgICAgICAgbG9zdFBvaW50ICs9IDQwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgZGFya0NvdW50ID0gMDtcbiAgICAgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgbW9kdWxlQ291bnQ7IGNvbCArPSAxKSB7XG4gICAgICAgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbW9kdWxlQ291bnQ7IHJvdyArPSAxKSB7XG4gICAgICAgICAgICBpZiAocXJjb2RlNC5pc0Rhcmsocm93LCBjb2wpKSB7XG4gICAgICAgICAgICAgIGRhcmtDb3VudCArPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgcmF0aW8gPSBNYXRoLmFicygxMDAgKiBkYXJrQ291bnQgLyBtb2R1bGVDb3VudCAvIG1vZHVsZUNvdW50IC0gNTApIC8gNTtcbiAgICAgICAgbG9zdFBvaW50ICs9IHJhdGlvICogMTA7XG4gICAgICAgIHJldHVybiBsb3N0UG9pbnQ7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH0oKTtcbiAgICB2YXIgUVJNYXRoID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgRVhQX1RBQkxFID0gbmV3IEFycmF5KDI1Nik7XG4gICAgICB2YXIgTE9HX1RBQkxFID0gbmV3IEFycmF5KDI1Nik7XG4gICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgODsgaTIgKz0gMSkge1xuICAgICAgICBFWFBfVEFCTEVbaTJdID0gMSA8PCBpMjtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGkyID0gODsgaTIgPCAyNTY7IGkyICs9IDEpIHtcbiAgICAgICAgRVhQX1RBQkxFW2kyXSA9IEVYUF9UQUJMRVtpMiAtIDRdIF4gRVhQX1RBQkxFW2kyIC0gNV0gXiBFWFBfVEFCTEVbaTIgLSA2XSBeIEVYUF9UQUJMRVtpMiAtIDhdO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IDI1NTsgaTIgKz0gMSkge1xuICAgICAgICBMT0dfVEFCTEVbRVhQX1RBQkxFW2kyXV0gPSBpMjtcbiAgICAgIH1cbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgX3RoaXMuZ2xvZyA9IGZ1bmN0aW9uKG4yKSB7XG4gICAgICAgIGlmIChuMiA8IDEpIHtcbiAgICAgICAgICB0aHJvdyBcImdsb2coXCIgKyBuMiArIFwiKVwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBMT0dfVEFCTEVbbjJdO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmdleHAgPSBmdW5jdGlvbihuMikge1xuICAgICAgICB3aGlsZSAobjIgPCAwKSB7XG4gICAgICAgICAgbjIgKz0gMjU1O1xuICAgICAgICB9XG4gICAgICAgIHdoaWxlIChuMiA+PSAyNTYpIHtcbiAgICAgICAgICBuMiAtPSAyNTU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEVYUF9UQUJMRVtuMl07XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH0oKTtcbiAgICBmdW5jdGlvbiBxclBvbHlub21pYWwobnVtLCBzaGlmdCkge1xuICAgICAgaWYgKHR5cGVvZiBudW0ubGVuZ3RoID09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgdGhyb3cgbnVtLmxlbmd0aCArIFwiL1wiICsgc2hpZnQ7XG4gICAgICB9XG4gICAgICB2YXIgX251bSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgb2Zmc2V0ID0gMDtcbiAgICAgICAgd2hpbGUgKG9mZnNldCA8IG51bS5sZW5ndGggJiYgbnVtW29mZnNldF0gPT0gMCkge1xuICAgICAgICAgIG9mZnNldCArPSAxO1xuICAgICAgICB9XG4gICAgICAgIHZhciBfbnVtMiA9IG5ldyBBcnJheShudW0ubGVuZ3RoIC0gb2Zmc2V0ICsgc2hpZnQpO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgbnVtLmxlbmd0aCAtIG9mZnNldDsgaTIgKz0gMSkge1xuICAgICAgICAgIF9udW0yW2kyXSA9IG51bVtpMiArIG9mZnNldF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9udW0yO1xuICAgICAgfSgpO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5nZXRBdCA9IGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgIHJldHVybiBfbnVtW2luZGV4XTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMZW5ndGggPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9udW0ubGVuZ3RoO1xuICAgICAgfTtcbiAgICAgIF90aGlzLm11bHRpcGx5ID0gZnVuY3Rpb24oZTIpIHtcbiAgICAgICAgdmFyIG51bTIgPSBuZXcgQXJyYXkoX3RoaXMuZ2V0TGVuZ3RoKCkgKyBlMi5nZXRMZW5ndGgoKSAtIDEpO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgX3RoaXMuZ2V0TGVuZ3RoKCk7IGkyICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGUyLmdldExlbmd0aCgpOyBqICs9IDEpIHtcbiAgICAgICAgICAgIG51bTJbaTIgKyBqXSBePSBRUk1hdGguZ2V4cChRUk1hdGguZ2xvZyhfdGhpcy5nZXRBdChpMikpICsgUVJNYXRoLmdsb2coZTIuZ2V0QXQoaikpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHFyUG9seW5vbWlhbChudW0yLCAwKTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5tb2QgPSBmdW5jdGlvbihlMikge1xuICAgICAgICBpZiAoX3RoaXMuZ2V0TGVuZ3RoKCkgLSBlMi5nZXRMZW5ndGgoKSA8IDApIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJhdGlvID0gUVJNYXRoLmdsb2coX3RoaXMuZ2V0QXQoMCkpIC0gUVJNYXRoLmdsb2coZTIuZ2V0QXQoMCkpO1xuICAgICAgICB2YXIgbnVtMiA9IG5ldyBBcnJheShfdGhpcy5nZXRMZW5ndGgoKSk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBfdGhpcy5nZXRMZW5ndGgoKTsgaTIgKz0gMSkge1xuICAgICAgICAgIG51bTJbaTJdID0gX3RoaXMuZ2V0QXQoaTIpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBlMi5nZXRMZW5ndGgoKTsgaTIgKz0gMSkge1xuICAgICAgICAgIG51bTJbaTJdIF49IFFSTWF0aC5nZXhwKFFSTWF0aC5nbG9nKGUyLmdldEF0KGkyKSkgKyByYXRpbyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHFyUG9seW5vbWlhbChudW0yLCAwKS5tb2QoZTIpO1xuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgdmFyIFFSUlNCbG9jayA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIFJTX0JMT0NLX1RBQkxFID0gW1xuICAgICAgICBbMSwgMjYsIDE5XSxcbiAgICAgICAgWzEsIDI2LCAxNl0sXG4gICAgICAgIFsxLCAyNiwgMTNdLFxuICAgICAgICBbMSwgMjYsIDldLFxuICAgICAgICBbMSwgNDQsIDM0XSxcbiAgICAgICAgWzEsIDQ0LCAyOF0sXG4gICAgICAgIFsxLCA0NCwgMjJdLFxuICAgICAgICBbMSwgNDQsIDE2XSxcbiAgICAgICAgWzEsIDcwLCA1NV0sXG4gICAgICAgIFsxLCA3MCwgNDRdLFxuICAgICAgICBbMiwgMzUsIDE3XSxcbiAgICAgICAgWzIsIDM1LCAxM10sXG4gICAgICAgIFsxLCAxMDAsIDgwXSxcbiAgICAgICAgWzIsIDUwLCAzMl0sXG4gICAgICAgIFsyLCA1MCwgMjRdLFxuICAgICAgICBbNCwgMjUsIDldLFxuICAgICAgICBbMSwgMTM0LCAxMDhdLFxuICAgICAgICBbMiwgNjcsIDQzXSxcbiAgICAgICAgWzIsIDMzLCAxNSwgMiwgMzQsIDE2XSxcbiAgICAgICAgWzIsIDMzLCAxMSwgMiwgMzQsIDEyXSxcbiAgICAgICAgWzIsIDg2LCA2OF0sXG4gICAgICAgIFs0LCA0MywgMjddLFxuICAgICAgICBbNCwgNDMsIDE5XSxcbiAgICAgICAgWzQsIDQzLCAxNV0sXG4gICAgICAgIFsyLCA5OCwgNzhdLFxuICAgICAgICBbNCwgNDksIDMxXSxcbiAgICAgICAgWzIsIDMyLCAxNCwgNCwgMzMsIDE1XSxcbiAgICAgICAgWzQsIDM5LCAxMywgMSwgNDAsIDE0XSxcbiAgICAgICAgWzIsIDEyMSwgOTddLFxuICAgICAgICBbMiwgNjAsIDM4LCAyLCA2MSwgMzldLFxuICAgICAgICBbNCwgNDAsIDE4LCAyLCA0MSwgMTldLFxuICAgICAgICBbNCwgNDAsIDE0LCAyLCA0MSwgMTVdLFxuICAgICAgICBbMiwgMTQ2LCAxMTZdLFxuICAgICAgICBbMywgNTgsIDM2LCAyLCA1OSwgMzddLFxuICAgICAgICBbNCwgMzYsIDE2LCA0LCAzNywgMTddLFxuICAgICAgICBbNCwgMzYsIDEyLCA0LCAzNywgMTNdLFxuICAgICAgICBbMiwgODYsIDY4LCAyLCA4NywgNjldLFxuICAgICAgICBbNCwgNjksIDQzLCAxLCA3MCwgNDRdLFxuICAgICAgICBbNiwgNDMsIDE5LCAyLCA0NCwgMjBdLFxuICAgICAgICBbNiwgNDMsIDE1LCAyLCA0NCwgMTZdLFxuICAgICAgICBbNCwgMTAxLCA4MV0sXG4gICAgICAgIFsxLCA4MCwgNTAsIDQsIDgxLCA1MV0sXG4gICAgICAgIFs0LCA1MCwgMjIsIDQsIDUxLCAyM10sXG4gICAgICAgIFszLCAzNiwgMTIsIDgsIDM3LCAxM10sXG4gICAgICAgIFsyLCAxMTYsIDkyLCAyLCAxMTcsIDkzXSxcbiAgICAgICAgWzYsIDU4LCAzNiwgMiwgNTksIDM3XSxcbiAgICAgICAgWzQsIDQ2LCAyMCwgNiwgNDcsIDIxXSxcbiAgICAgICAgWzcsIDQyLCAxNCwgNCwgNDMsIDE1XSxcbiAgICAgICAgWzQsIDEzMywgMTA3XSxcbiAgICAgICAgWzgsIDU5LCAzNywgMSwgNjAsIDM4XSxcbiAgICAgICAgWzgsIDQ0LCAyMCwgNCwgNDUsIDIxXSxcbiAgICAgICAgWzEyLCAzMywgMTEsIDQsIDM0LCAxMl0sXG4gICAgICAgIFszLCAxNDUsIDExNSwgMSwgMTQ2LCAxMTZdLFxuICAgICAgICBbNCwgNjQsIDQwLCA1LCA2NSwgNDFdLFxuICAgICAgICBbMTEsIDM2LCAxNiwgNSwgMzcsIDE3XSxcbiAgICAgICAgWzExLCAzNiwgMTIsIDUsIDM3LCAxM10sXG4gICAgICAgIFs1LCAxMDksIDg3LCAxLCAxMTAsIDg4XSxcbiAgICAgICAgWzUsIDY1LCA0MSwgNSwgNjYsIDQyXSxcbiAgICAgICAgWzUsIDU0LCAyNCwgNywgNTUsIDI1XSxcbiAgICAgICAgWzExLCAzNiwgMTIsIDcsIDM3LCAxM10sXG4gICAgICAgIFs1LCAxMjIsIDk4LCAxLCAxMjMsIDk5XSxcbiAgICAgICAgWzcsIDczLCA0NSwgMywgNzQsIDQ2XSxcbiAgICAgICAgWzE1LCA0MywgMTksIDIsIDQ0LCAyMF0sXG4gICAgICAgIFszLCA0NSwgMTUsIDEzLCA0NiwgMTZdLFxuICAgICAgICBbMSwgMTM1LCAxMDcsIDUsIDEzNiwgMTA4XSxcbiAgICAgICAgWzEwLCA3NCwgNDYsIDEsIDc1LCA0N10sXG4gICAgICAgIFsxLCA1MCwgMjIsIDE1LCA1MSwgMjNdLFxuICAgICAgICBbMiwgNDIsIDE0LCAxNywgNDMsIDE1XSxcbiAgICAgICAgWzUsIDE1MCwgMTIwLCAxLCAxNTEsIDEyMV0sXG4gICAgICAgIFs5LCA2OSwgNDMsIDQsIDcwLCA0NF0sXG4gICAgICAgIFsxNywgNTAsIDIyLCAxLCA1MSwgMjNdLFxuICAgICAgICBbMiwgNDIsIDE0LCAxOSwgNDMsIDE1XSxcbiAgICAgICAgWzMsIDE0MSwgMTEzLCA0LCAxNDIsIDExNF0sXG4gICAgICAgIFszLCA3MCwgNDQsIDExLCA3MSwgNDVdLFxuICAgICAgICBbMTcsIDQ3LCAyMSwgNCwgNDgsIDIyXSxcbiAgICAgICAgWzksIDM5LCAxMywgMTYsIDQwLCAxNF0sXG4gICAgICAgIFszLCAxMzUsIDEwNywgNSwgMTM2LCAxMDhdLFxuICAgICAgICBbMywgNjcsIDQxLCAxMywgNjgsIDQyXSxcbiAgICAgICAgWzE1LCA1NCwgMjQsIDUsIDU1LCAyNV0sXG4gICAgICAgIFsxNSwgNDMsIDE1LCAxMCwgNDQsIDE2XSxcbiAgICAgICAgWzQsIDE0NCwgMTE2LCA0LCAxNDUsIDExN10sXG4gICAgICAgIFsxNywgNjgsIDQyXSxcbiAgICAgICAgWzE3LCA1MCwgMjIsIDYsIDUxLCAyM10sXG4gICAgICAgIFsxOSwgNDYsIDE2LCA2LCA0NywgMTddLFxuICAgICAgICBbMiwgMTM5LCAxMTEsIDcsIDE0MCwgMTEyXSxcbiAgICAgICAgWzE3LCA3NCwgNDZdLFxuICAgICAgICBbNywgNTQsIDI0LCAxNiwgNTUsIDI1XSxcbiAgICAgICAgWzM0LCAzNywgMTNdLFxuICAgICAgICBbNCwgMTUxLCAxMjEsIDUsIDE1MiwgMTIyXSxcbiAgICAgICAgWzQsIDc1LCA0NywgMTQsIDc2LCA0OF0sXG4gICAgICAgIFsxMSwgNTQsIDI0LCAxNCwgNTUsIDI1XSxcbiAgICAgICAgWzE2LCA0NSwgMTUsIDE0LCA0NiwgMTZdLFxuICAgICAgICBbNiwgMTQ3LCAxMTcsIDQsIDE0OCwgMTE4XSxcbiAgICAgICAgWzYsIDczLCA0NSwgMTQsIDc0LCA0Nl0sXG4gICAgICAgIFsxMSwgNTQsIDI0LCAxNiwgNTUsIDI1XSxcbiAgICAgICAgWzMwLCA0NiwgMTYsIDIsIDQ3LCAxN10sXG4gICAgICAgIFs4LCAxMzIsIDEwNiwgNCwgMTMzLCAxMDddLFxuICAgICAgICBbOCwgNzUsIDQ3LCAxMywgNzYsIDQ4XSxcbiAgICAgICAgWzcsIDU0LCAyNCwgMjIsIDU1LCAyNV0sXG4gICAgICAgIFsyMiwgNDUsIDE1LCAxMywgNDYsIDE2XSxcbiAgICAgICAgWzEwLCAxNDIsIDExNCwgMiwgMTQzLCAxMTVdLFxuICAgICAgICBbMTksIDc0LCA0NiwgNCwgNzUsIDQ3XSxcbiAgICAgICAgWzI4LCA1MCwgMjIsIDYsIDUxLCAyM10sXG4gICAgICAgIFszMywgNDYsIDE2LCA0LCA0NywgMTddLFxuICAgICAgICBbOCwgMTUyLCAxMjIsIDQsIDE1MywgMTIzXSxcbiAgICAgICAgWzIyLCA3MywgNDUsIDMsIDc0LCA0Nl0sXG4gICAgICAgIFs4LCA1MywgMjMsIDI2LCA1NCwgMjRdLFxuICAgICAgICBbMTIsIDQ1LCAxNSwgMjgsIDQ2LCAxNl0sXG4gICAgICAgIFszLCAxNDcsIDExNywgMTAsIDE0OCwgMTE4XSxcbiAgICAgICAgWzMsIDczLCA0NSwgMjMsIDc0LCA0Nl0sXG4gICAgICAgIFs0LCA1NCwgMjQsIDMxLCA1NSwgMjVdLFxuICAgICAgICBbMTEsIDQ1LCAxNSwgMzEsIDQ2LCAxNl0sXG4gICAgICAgIFs3LCAxNDYsIDExNiwgNywgMTQ3LCAxMTddLFxuICAgICAgICBbMjEsIDczLCA0NSwgNywgNzQsIDQ2XSxcbiAgICAgICAgWzEsIDUzLCAyMywgMzcsIDU0LCAyNF0sXG4gICAgICAgIFsxOSwgNDUsIDE1LCAyNiwgNDYsIDE2XSxcbiAgICAgICAgWzUsIDE0NSwgMTE1LCAxMCwgMTQ2LCAxMTZdLFxuICAgICAgICBbMTksIDc1LCA0NywgMTAsIDc2LCA0OF0sXG4gICAgICAgIFsxNSwgNTQsIDI0LCAyNSwgNTUsIDI1XSxcbiAgICAgICAgWzIzLCA0NSwgMTUsIDI1LCA0NiwgMTZdLFxuICAgICAgICBbMTMsIDE0NSwgMTE1LCAzLCAxNDYsIDExNl0sXG4gICAgICAgIFsyLCA3NCwgNDYsIDI5LCA3NSwgNDddLFxuICAgICAgICBbNDIsIDU0LCAyNCwgMSwgNTUsIDI1XSxcbiAgICAgICAgWzIzLCA0NSwgMTUsIDI4LCA0NiwgMTZdLFxuICAgICAgICBbMTcsIDE0NSwgMTE1XSxcbiAgICAgICAgWzEwLCA3NCwgNDYsIDIzLCA3NSwgNDddLFxuICAgICAgICBbMTAsIDU0LCAyNCwgMzUsIDU1LCAyNV0sXG4gICAgICAgIFsxOSwgNDUsIDE1LCAzNSwgNDYsIDE2XSxcbiAgICAgICAgWzE3LCAxNDUsIDExNSwgMSwgMTQ2LCAxMTZdLFxuICAgICAgICBbMTQsIDc0LCA0NiwgMjEsIDc1LCA0N10sXG4gICAgICAgIFsyOSwgNTQsIDI0LCAxOSwgNTUsIDI1XSxcbiAgICAgICAgWzExLCA0NSwgMTUsIDQ2LCA0NiwgMTZdLFxuICAgICAgICBbMTMsIDE0NSwgMTE1LCA2LCAxNDYsIDExNl0sXG4gICAgICAgIFsxNCwgNzQsIDQ2LCAyMywgNzUsIDQ3XSxcbiAgICAgICAgWzQ0LCA1NCwgMjQsIDcsIDU1LCAyNV0sXG4gICAgICAgIFs1OSwgNDYsIDE2LCAxLCA0NywgMTddLFxuICAgICAgICBbMTIsIDE1MSwgMTIxLCA3LCAxNTIsIDEyMl0sXG4gICAgICAgIFsxMiwgNzUsIDQ3LCAyNiwgNzYsIDQ4XSxcbiAgICAgICAgWzM5LCA1NCwgMjQsIDE0LCA1NSwgMjVdLFxuICAgICAgICBbMjIsIDQ1LCAxNSwgNDEsIDQ2LCAxNl0sXG4gICAgICAgIFs2LCAxNTEsIDEyMSwgMTQsIDE1MiwgMTIyXSxcbiAgICAgICAgWzYsIDc1LCA0NywgMzQsIDc2LCA0OF0sXG4gICAgICAgIFs0NiwgNTQsIDI0LCAxMCwgNTUsIDI1XSxcbiAgICAgICAgWzIsIDQ1LCAxNSwgNjQsIDQ2LCAxNl0sXG4gICAgICAgIFsxNywgMTUyLCAxMjIsIDQsIDE1MywgMTIzXSxcbiAgICAgICAgWzI5LCA3NCwgNDYsIDE0LCA3NSwgNDddLFxuICAgICAgICBbNDksIDU0LCAyNCwgMTAsIDU1LCAyNV0sXG4gICAgICAgIFsyNCwgNDUsIDE1LCA0NiwgNDYsIDE2XSxcbiAgICAgICAgWzQsIDE1MiwgMTIyLCAxOCwgMTUzLCAxMjNdLFxuICAgICAgICBbMTMsIDc0LCA0NiwgMzIsIDc1LCA0N10sXG4gICAgICAgIFs0OCwgNTQsIDI0LCAxNCwgNTUsIDI1XSxcbiAgICAgICAgWzQyLCA0NSwgMTUsIDMyLCA0NiwgMTZdLFxuICAgICAgICBbMjAsIDE0NywgMTE3LCA0LCAxNDgsIDExOF0sXG4gICAgICAgIFs0MCwgNzUsIDQ3LCA3LCA3NiwgNDhdLFxuICAgICAgICBbNDMsIDU0LCAyNCwgMjIsIDU1LCAyNV0sXG4gICAgICAgIFsxMCwgNDUsIDE1LCA2NywgNDYsIDE2XSxcbiAgICAgICAgWzE5LCAxNDgsIDExOCwgNiwgMTQ5LCAxMTldLFxuICAgICAgICBbMTgsIDc1LCA0NywgMzEsIDc2LCA0OF0sXG4gICAgICAgIFszNCwgNTQsIDI0LCAzNCwgNTUsIDI1XSxcbiAgICAgICAgWzIwLCA0NSwgMTUsIDYxLCA0NiwgMTZdXG4gICAgICBdO1xuICAgICAgdmFyIHFyUlNCbG9jayA9IGZ1bmN0aW9uKHRvdGFsQ291bnQsIGRhdGFDb3VudCkge1xuICAgICAgICB2YXIgX3RoaXMyID0ge307XG4gICAgICAgIF90aGlzMi50b3RhbENvdW50ID0gdG90YWxDb3VudDtcbiAgICAgICAgX3RoaXMyLmRhdGFDb3VudCA9IGRhdGFDb3VudDtcbiAgICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICAgIH07XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIHZhciBnZXRSc0Jsb2NrVGFibGUgPSBmdW5jdGlvbih0eXBlTnVtYmVyLCBlcnJvckNvcnJlY3Rpb25MZXZlbCkge1xuICAgICAgICBzd2l0Y2ggKGVycm9yQ29ycmVjdGlvbkxldmVsKSB7XG4gICAgICAgICAgY2FzZSBRUkVycm9yQ29ycmVjdGlvbkxldmVsLkw6XG4gICAgICAgICAgICByZXR1cm4gUlNfQkxPQ0tfVEFCTEVbKHR5cGVOdW1iZXIgLSAxKSAqIDQgKyAwXTtcbiAgICAgICAgICBjYXNlIFFSRXJyb3JDb3JyZWN0aW9uTGV2ZWwuTTpcbiAgICAgICAgICAgIHJldHVybiBSU19CTE9DS19UQUJMRVsodHlwZU51bWJlciAtIDEpICogNCArIDFdO1xuICAgICAgICAgIGNhc2UgUVJFcnJvckNvcnJlY3Rpb25MZXZlbC5ROlxuICAgICAgICAgICAgcmV0dXJuIFJTX0JMT0NLX1RBQkxFWyh0eXBlTnVtYmVyIC0gMSkgKiA0ICsgMl07XG4gICAgICAgICAgY2FzZSBRUkVycm9yQ29ycmVjdGlvbkxldmVsLkg6XG4gICAgICAgICAgICByZXR1cm4gUlNfQkxPQ0tfVEFCTEVbKHR5cGVOdW1iZXIgLSAxKSAqIDQgKyAzXTtcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLmdldFJTQmxvY2tzID0gZnVuY3Rpb24odHlwZU51bWJlciwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwpIHtcbiAgICAgICAgdmFyIHJzQmxvY2sgPSBnZXRSc0Jsb2NrVGFibGUodHlwZU51bWJlciwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwpO1xuICAgICAgICBpZiAodHlwZW9mIHJzQmxvY2sgPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIHRocm93IFwiYmFkIHJzIGJsb2NrIEAgdHlwZU51bWJlcjpcIiArIHR5cGVOdW1iZXIgKyBcIi9lcnJvckNvcnJlY3Rpb25MZXZlbDpcIiArIGVycm9yQ29ycmVjdGlvbkxldmVsO1xuICAgICAgICB9XG4gICAgICAgIHZhciBsZW5ndGggPSByc0Jsb2NrLmxlbmd0aCAvIDM7XG4gICAgICAgIHZhciBsaXN0ID0gW107XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBsZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICB2YXIgY291bnQgPSByc0Jsb2NrW2kyICogMyArIDBdO1xuICAgICAgICAgIHZhciB0b3RhbENvdW50ID0gcnNCbG9ja1tpMiAqIDMgKyAxXTtcbiAgICAgICAgICB2YXIgZGF0YUNvdW50ID0gcnNCbG9ja1tpMiAqIDMgKyAyXTtcbiAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGNvdW50OyBqICs9IDEpIHtcbiAgICAgICAgICAgIGxpc3QucHVzaChxclJTQmxvY2sodG90YWxDb3VudCwgZGF0YUNvdW50KSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsaXN0O1xuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9KCk7XG4gICAgdmFyIHFyQml0QnVmZmVyID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgX2J1ZmZlciA9IFtdO1xuICAgICAgdmFyIF9sZW5ndGggPSAwO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5nZXRCdWZmZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9idWZmZXI7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0QXQgPSBmdW5jdGlvbihpbmRleCkge1xuICAgICAgICB2YXIgYnVmSW5kZXggPSBNYXRoLmZsb29yKGluZGV4IC8gOCk7XG4gICAgICAgIHJldHVybiAoX2J1ZmZlcltidWZJbmRleF0gPj4+IDcgLSBpbmRleCAlIDggJiAxKSA9PSAxO1xuICAgICAgfTtcbiAgICAgIF90aGlzLnB1dCA9IGZ1bmN0aW9uKG51bSwgbGVuZ3RoKSB7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBsZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBfdGhpcy5wdXRCaXQoKG51bSA+Pj4gbGVuZ3RoIC0gaTIgLSAxICYgMSkgPT0gMSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMZW5ndGhJbkJpdHMgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9sZW5ndGg7XG4gICAgICB9O1xuICAgICAgX3RoaXMucHV0Qml0ID0gZnVuY3Rpb24oYml0KSB7XG4gICAgICAgIHZhciBidWZJbmRleCA9IE1hdGguZmxvb3IoX2xlbmd0aCAvIDgpO1xuICAgICAgICBpZiAoX2J1ZmZlci5sZW5ndGggPD0gYnVmSW5kZXgpIHtcbiAgICAgICAgICBfYnVmZmVyLnB1c2goMCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJpdCkge1xuICAgICAgICAgIF9idWZmZXJbYnVmSW5kZXhdIHw9IDEyOCA+Pj4gX2xlbmd0aCAlIDg7XG4gICAgICAgIH1cbiAgICAgICAgX2xlbmd0aCArPSAxO1xuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHZhciBxck51bWJlciA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHZhciBfbW9kZSA9IFFSTW9kZS5NT0RFX05VTUJFUjtcbiAgICAgIHZhciBfZGF0YSA9IGRhdGE7XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIF90aGlzLmdldE1vZGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9tb2RlO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmdldExlbmd0aCA9IGZ1bmN0aW9uKGJ1ZmZlcikge1xuICAgICAgICByZXR1cm4gX2RhdGEubGVuZ3RoO1xuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgICAgIHZhciBkYXRhMiA9IF9kYXRhO1xuICAgICAgICB2YXIgaTIgPSAwO1xuICAgICAgICB3aGlsZSAoaTIgKyAyIDwgZGF0YTIubGVuZ3RoKSB7XG4gICAgICAgICAgYnVmZmVyLnB1dChzdHJUb051bShkYXRhMi5zdWJzdHJpbmcoaTIsIGkyICsgMykpLCAxMCk7XG4gICAgICAgICAgaTIgKz0gMztcbiAgICAgICAgfVxuICAgICAgICBpZiAoaTIgPCBkYXRhMi5sZW5ndGgpIHtcbiAgICAgICAgICBpZiAoZGF0YTIubGVuZ3RoIC0gaTIgPT0gMSkge1xuICAgICAgICAgICAgYnVmZmVyLnB1dChzdHJUb051bShkYXRhMi5zdWJzdHJpbmcoaTIsIGkyICsgMSkpLCA0KTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEyLmxlbmd0aCAtIGkyID09IDIpIHtcbiAgICAgICAgICAgIGJ1ZmZlci5wdXQoc3RyVG9OdW0oZGF0YTIuc3Vic3RyaW5nKGkyLCBpMiArIDIpKSwgNyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIHN0clRvTnVtID0gZnVuY3Rpb24oczIpIHtcbiAgICAgICAgdmFyIG51bSA9IDA7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBzMi5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBudW0gPSBudW0gKiAxMCArIGNoYXRUb051bShzMi5jaGFyQXQoaTIpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVtO1xuICAgICAgfTtcbiAgICAgIHZhciBjaGF0VG9OdW0gPSBmdW5jdGlvbihjMikge1xuICAgICAgICBpZiAoXCIwXCIgPD0gYzIgJiYgYzIgPD0gXCI5XCIpIHtcbiAgICAgICAgICByZXR1cm4gYzIuY2hhckNvZGVBdCgwKSAtIFwiMFwiLmNoYXJDb2RlQXQoMCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgXCJpbGxlZ2FsIGNoYXIgOlwiICsgYzI7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIHFyQWxwaGFOdW0gPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgX21vZGUgPSBRUk1vZGUuTU9ERV9BTFBIQV9OVU07XG4gICAgICB2YXIgX2RhdGEgPSBkYXRhO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5nZXRNb2RlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfbW9kZTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMZW5ndGggPSBmdW5jdGlvbihidWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIF9kYXRhLmxlbmd0aDtcbiAgICAgIH07XG4gICAgICBfdGhpcy53cml0ZSA9IGZ1bmN0aW9uKGJ1ZmZlcikge1xuICAgICAgICB2YXIgczIgPSBfZGF0YTtcbiAgICAgICAgdmFyIGkyID0gMDtcbiAgICAgICAgd2hpbGUgKGkyICsgMSA8IHMyLmxlbmd0aCkge1xuICAgICAgICAgIGJ1ZmZlci5wdXQoXG4gICAgICAgICAgICBnZXRDb2RlKHMyLmNoYXJBdChpMikpICogNDUgKyBnZXRDb2RlKHMyLmNoYXJBdChpMiArIDEpKSxcbiAgICAgICAgICAgIDExXG4gICAgICAgICAgKTtcbiAgICAgICAgICBpMiArPSAyO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpMiA8IHMyLmxlbmd0aCkge1xuICAgICAgICAgIGJ1ZmZlci5wdXQoZ2V0Q29kZShzMi5jaGFyQXQoaTIpKSwgNik7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgZ2V0Q29kZSA9IGZ1bmN0aW9uKGMyKSB7XG4gICAgICAgIGlmIChcIjBcIiA8PSBjMiAmJiBjMiA8PSBcIjlcIikge1xuICAgICAgICAgIHJldHVybiBjMi5jaGFyQ29kZUF0KDApIC0gXCIwXCIuY2hhckNvZGVBdCgwKTtcbiAgICAgICAgfSBlbHNlIGlmIChcIkFcIiA8PSBjMiAmJiBjMiA8PSBcIlpcIikge1xuICAgICAgICAgIHJldHVybiBjMi5jaGFyQ29kZUF0KDApIC0gXCJBXCIuY2hhckNvZGVBdCgwKSArIDEwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN3aXRjaCAoYzIpIHtcbiAgICAgICAgICAgIGNhc2UgXCIgXCI6XG4gICAgICAgICAgICAgIHJldHVybiAzNjtcbiAgICAgICAgICAgIGNhc2UgXCIkXCI6XG4gICAgICAgICAgICAgIHJldHVybiAzNztcbiAgICAgICAgICAgIGNhc2UgXCIlXCI6XG4gICAgICAgICAgICAgIHJldHVybiAzODtcbiAgICAgICAgICAgIGNhc2UgXCIqXCI6XG4gICAgICAgICAgICAgIHJldHVybiAzOTtcbiAgICAgICAgICAgIGNhc2UgXCIrXCI6XG4gICAgICAgICAgICAgIHJldHVybiA0MDtcbiAgICAgICAgICAgIGNhc2UgXCItXCI6XG4gICAgICAgICAgICAgIHJldHVybiA0MTtcbiAgICAgICAgICAgIGNhc2UgXCIuXCI6XG4gICAgICAgICAgICAgIHJldHVybiA0MjtcbiAgICAgICAgICAgIGNhc2UgXCIvXCI6XG4gICAgICAgICAgICAgIHJldHVybiA0MztcbiAgICAgICAgICAgIGNhc2UgXCI6XCI6XG4gICAgICAgICAgICAgIHJldHVybiA0NDtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIHRocm93IFwiaWxsZWdhbCBjaGFyIDpcIiArIGMyO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHZhciBxcjhCaXRCeXRlID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgdmFyIF9tb2RlID0gUVJNb2RlLk1PREVfOEJJVF9CWVRFO1xuICAgICAgdmFyIF9ieXRlcyA9IHFyY29kZTMuc3RyaW5nVG9CeXRlcyhkYXRhKTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgX3RoaXMuZ2V0TW9kZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX21vZGU7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0TGVuZ3RoID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBfYnl0ZXMubGVuZ3RoO1xuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBfYnl0ZXMubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgYnVmZmVyLnB1dChfYnl0ZXNbaTJdLCA4KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHZhciBxckthbmppID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgdmFyIF9tb2RlID0gUVJNb2RlLk1PREVfS0FOSkk7XG4gICAgICB2YXIgc3RyaW5nVG9CeXRlcyA9IHFyY29kZTMuc3RyaW5nVG9CeXRlc0Z1bmNzW1wiU0pJU1wiXTtcbiAgICAgIGlmICghc3RyaW5nVG9CeXRlcykge1xuICAgICAgICB0aHJvdyBcInNqaXMgbm90IHN1cHBvcnRlZC5cIjtcbiAgICAgIH1cbiAgICAgICFmdW5jdGlvbihjMiwgY29kZSkge1xuICAgICAgICB2YXIgdGVzdCA9IHN0cmluZ1RvQnl0ZXMoYzIpO1xuICAgICAgICBpZiAodGVzdC5sZW5ndGggIT0gMiB8fCAodGVzdFswXSA8PCA4IHwgdGVzdFsxXSkgIT0gY29kZSkge1xuICAgICAgICAgIHRocm93IFwic2ppcyBub3Qgc3VwcG9ydGVkLlwiO1xuICAgICAgICB9XG4gICAgICB9KFwiXFx1NTNDQlwiLCAzODcyNik7XG4gICAgICB2YXIgX2J5dGVzID0gc3RyaW5nVG9CeXRlcyhkYXRhKTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgX3RoaXMuZ2V0TW9kZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX21vZGU7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0TGVuZ3RoID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgICAgIHJldHVybiB+fihfYnl0ZXMubGVuZ3RoIC8gMik7XG4gICAgICB9O1xuICAgICAgX3RoaXMud3JpdGUgPSBmdW5jdGlvbihidWZmZXIpIHtcbiAgICAgICAgdmFyIGRhdGEyID0gX2J5dGVzO1xuICAgICAgICB2YXIgaTIgPSAwO1xuICAgICAgICB3aGlsZSAoaTIgKyAxIDwgZGF0YTIubGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIGMyID0gKDI1NSAmIGRhdGEyW2kyXSkgPDwgOCB8IDI1NSAmIGRhdGEyW2kyICsgMV07XG4gICAgICAgICAgaWYgKDMzMDg4IDw9IGMyICYmIGMyIDw9IDQwOTU2KSB7XG4gICAgICAgICAgICBjMiAtPSAzMzA4ODtcbiAgICAgICAgICB9IGVsc2UgaWYgKDU3NDA4IDw9IGMyICYmIGMyIDw9IDYwMzUxKSB7XG4gICAgICAgICAgICBjMiAtPSA0OTQ3MjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgXCJpbGxlZ2FsIGNoYXIgYXQgXCIgKyAoaTIgKyAxKSArIFwiL1wiICsgYzI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGMyID0gKGMyID4+PiA4ICYgMjU1KSAqIDE5MiArIChjMiAmIDI1NSk7XG4gICAgICAgICAgYnVmZmVyLnB1dChjMiwgMTMpO1xuICAgICAgICAgIGkyICs9IDI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGkyIDwgZGF0YTIubGVuZ3RoKSB7XG4gICAgICAgICAgdGhyb3cgXCJpbGxlZ2FsIGNoYXIgYXQgXCIgKyAoaTIgKyAxKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHZhciBieXRlQXJyYXlPdXRwdXRTdHJlYW0gPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBfYnl0ZXMgPSBbXTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgX3RoaXMud3JpdGVCeXRlID0gZnVuY3Rpb24oYikge1xuICAgICAgICBfYnl0ZXMucHVzaChiICYgMjU1KTtcbiAgICAgIH07XG4gICAgICBfdGhpcy53cml0ZVNob3J0ID0gZnVuY3Rpb24oaTIpIHtcbiAgICAgICAgX3RoaXMud3JpdGVCeXRlKGkyKTtcbiAgICAgICAgX3RoaXMud3JpdGVCeXRlKGkyID4+PiA4KTtcbiAgICAgIH07XG4gICAgICBfdGhpcy53cml0ZUJ5dGVzID0gZnVuY3Rpb24oYiwgb2ZmLCBsZW4pIHtcbiAgICAgICAgb2ZmID0gb2ZmIHx8IDA7XG4gICAgICAgIGxlbiA9IGxlbiB8fCBiLmxlbmd0aDtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGxlbjsgaTIgKz0gMSkge1xuICAgICAgICAgIF90aGlzLndyaXRlQnl0ZShiW2kyICsgb2ZmXSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy53cml0ZVN0cmluZyA9IGZ1bmN0aW9uKHMyKSB7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBzMi5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBfdGhpcy53cml0ZUJ5dGUoczIuY2hhckNvZGVBdChpMikpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgX3RoaXMudG9CeXRlQXJyYXkgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9ieXRlcztcbiAgICAgIH07XG4gICAgICBfdGhpcy50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgczIgPSBcIlwiO1xuICAgICAgICBzMiArPSBcIltcIjtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IF9ieXRlcy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBpZiAoaTIgPiAwKSB7XG4gICAgICAgICAgICBzMiArPSBcIixcIjtcbiAgICAgICAgICB9XG4gICAgICAgICAgczIgKz0gX2J5dGVzW2kyXTtcbiAgICAgICAgfVxuICAgICAgICBzMiArPSBcIl1cIjtcbiAgICAgICAgcmV0dXJuIHMyO1xuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHZhciBiYXNlNjRFbmNvZGVPdXRwdXRTdHJlYW0gPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBfYnVmZmVyID0gMDtcbiAgICAgIHZhciBfYnVmbGVuID0gMDtcbiAgICAgIHZhciBfbGVuZ3RoID0gMDtcbiAgICAgIHZhciBfYmFzZTY0ID0gXCJcIjtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgdmFyIHdyaXRlRW5jb2RlZCA9IGZ1bmN0aW9uKGIpIHtcbiAgICAgICAgX2Jhc2U2NCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGVuY29kZShiICYgNjMpKTtcbiAgICAgIH07XG4gICAgICB2YXIgZW5jb2RlID0gZnVuY3Rpb24objIpIHtcbiAgICAgICAgaWYgKG4yIDwgMClcbiAgICAgICAgICA7XG4gICAgICAgIGVsc2UgaWYgKG4yIDwgMjYpIHtcbiAgICAgICAgICByZXR1cm4gNjUgKyBuMjtcbiAgICAgICAgfSBlbHNlIGlmIChuMiA8IDUyKSB7XG4gICAgICAgICAgcmV0dXJuIDk3ICsgKG4yIC0gMjYpO1xuICAgICAgICB9IGVsc2UgaWYgKG4yIDwgNjIpIHtcbiAgICAgICAgICByZXR1cm4gNDggKyAobjIgLSA1Mik7XG4gICAgICAgIH0gZWxzZSBpZiAobjIgPT0gNjIpIHtcbiAgICAgICAgICByZXR1cm4gNDM7XG4gICAgICAgIH0gZWxzZSBpZiAobjIgPT0gNjMpIHtcbiAgICAgICAgICByZXR1cm4gNDc7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgXCJuOlwiICsgbjI7XG4gICAgICB9O1xuICAgICAgX3RoaXMud3JpdGVCeXRlID0gZnVuY3Rpb24objIpIHtcbiAgICAgICAgX2J1ZmZlciA9IF9idWZmZXIgPDwgOCB8IG4yICYgMjU1O1xuICAgICAgICBfYnVmbGVuICs9IDg7XG4gICAgICAgIF9sZW5ndGggKz0gMTtcbiAgICAgICAgd2hpbGUgKF9idWZsZW4gPj0gNikge1xuICAgICAgICAgIHdyaXRlRW5jb2RlZChfYnVmZmVyID4+PiBfYnVmbGVuIC0gNik7XG4gICAgICAgICAgX2J1ZmxlbiAtPSA2O1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgX3RoaXMuZmx1c2ggPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKF9idWZsZW4gPiAwKSB7XG4gICAgICAgICAgd3JpdGVFbmNvZGVkKF9idWZmZXIgPDwgNiAtIF9idWZsZW4pO1xuICAgICAgICAgIF9idWZmZXIgPSAwO1xuICAgICAgICAgIF9idWZsZW4gPSAwO1xuICAgICAgICB9XG4gICAgICAgIGlmIChfbGVuZ3RoICUgMyAhPSAwKSB7XG4gICAgICAgICAgdmFyIHBhZGxlbiA9IDMgLSBfbGVuZ3RoICUgMztcbiAgICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgcGFkbGVuOyBpMiArPSAxKSB7XG4gICAgICAgICAgICBfYmFzZTY0ICs9IFwiPVwiO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfYmFzZTY0O1xuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHZhciBiYXNlNjREZWNvZGVJbnB1dFN0cmVhbSA9IGZ1bmN0aW9uKHN0cikge1xuICAgICAgdmFyIF9zdHIgPSBzdHI7XG4gICAgICB2YXIgX3BvcyA9IDA7XG4gICAgICB2YXIgX2J1ZmZlciA9IDA7XG4gICAgICB2YXIgX2J1ZmxlbiA9IDA7XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIF90aGlzLnJlYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgd2hpbGUgKF9idWZsZW4gPCA4KSB7XG4gICAgICAgICAgaWYgKF9wb3MgPj0gX3N0ci5sZW5ndGgpIHtcbiAgICAgICAgICAgIGlmIChfYnVmbGVuID09IDApIHtcbiAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgXCJ1bmV4cGVjdGVkIGVuZCBvZiBmaWxlLi9cIiArIF9idWZsZW47XG4gICAgICAgICAgfVxuICAgICAgICAgIHZhciBjMiA9IF9zdHIuY2hhckF0KF9wb3MpO1xuICAgICAgICAgIF9wb3MgKz0gMTtcbiAgICAgICAgICBpZiAoYzIgPT0gXCI9XCIpIHtcbiAgICAgICAgICAgIF9idWZsZW4gPSAwO1xuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgIH0gZWxzZSBpZiAoYzIubWF0Y2goL15cXHMkLykpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBfYnVmZmVyID0gX2J1ZmZlciA8PCA2IHwgZGVjb2RlKGMyLmNoYXJDb2RlQXQoMCkpO1xuICAgICAgICAgIF9idWZsZW4gKz0gNjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbjIgPSBfYnVmZmVyID4+PiBfYnVmbGVuIC0gOCAmIDI1NTtcbiAgICAgICAgX2J1ZmxlbiAtPSA4O1xuICAgICAgICByZXR1cm4gbjI7XG4gICAgICB9O1xuICAgICAgdmFyIGRlY29kZSA9IGZ1bmN0aW9uKGMyKSB7XG4gICAgICAgIGlmICg2NSA8PSBjMiAmJiBjMiA8PSA5MCkge1xuICAgICAgICAgIHJldHVybiBjMiAtIDY1O1xuICAgICAgICB9IGVsc2UgaWYgKDk3IDw9IGMyICYmIGMyIDw9IDEyMikge1xuICAgICAgICAgIHJldHVybiBjMiAtIDk3ICsgMjY7XG4gICAgICAgIH0gZWxzZSBpZiAoNDggPD0gYzIgJiYgYzIgPD0gNTcpIHtcbiAgICAgICAgICByZXR1cm4gYzIgLSA0OCArIDUyO1xuICAgICAgICB9IGVsc2UgaWYgKGMyID09IDQzKSB7XG4gICAgICAgICAgcmV0dXJuIDYyO1xuICAgICAgICB9IGVsc2UgaWYgKGMyID09IDQ3KSB7XG4gICAgICAgICAgcmV0dXJuIDYzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IFwiYzpcIiArIGMyO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIGdpZkltYWdlID0gZnVuY3Rpb24od2lkdGgsIGhlaWdodCkge1xuICAgICAgdmFyIF93aWR0aCA9IHdpZHRoO1xuICAgICAgdmFyIF9oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICB2YXIgX2RhdGEgPSBuZXcgQXJyYXkod2lkdGggKiBoZWlnaHQpO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5zZXRQaXhlbCA9IGZ1bmN0aW9uKHgsIHksIHBpeGVsKSB7XG4gICAgICAgIF9kYXRhW3kgKiBfd2lkdGggKyB4XSA9IHBpeGVsO1xuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlID0gZnVuY3Rpb24ob3V0KSB7XG4gICAgICAgIG91dC53cml0ZVN0cmluZyhcIkdJRjg3YVwiKTtcbiAgICAgICAgb3V0LndyaXRlU2hvcnQoX3dpZHRoKTtcbiAgICAgICAgb3V0LndyaXRlU2hvcnQoX2hlaWdodCk7XG4gICAgICAgIG91dC53cml0ZUJ5dGUoMTI4KTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgyNTUpO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDI1NSk7XG4gICAgICAgIG91dC53cml0ZUJ5dGUoMjU1KTtcbiAgICAgICAgb3V0LndyaXRlU3RyaW5nKFwiLFwiKTtcbiAgICAgICAgb3V0LndyaXRlU2hvcnQoMCk7XG4gICAgICAgIG91dC53cml0ZVNob3J0KDApO1xuICAgICAgICBvdXQud3JpdGVTaG9ydChfd2lkdGgpO1xuICAgICAgICBvdXQud3JpdGVTaG9ydChfaGVpZ2h0KTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgdmFyIGx6d01pbkNvZGVTaXplID0gMjtcbiAgICAgICAgdmFyIHJhc3RlciA9IGdldExaV1Jhc3RlcihsendNaW5Db2RlU2l6ZSk7XG4gICAgICAgIG91dC53cml0ZUJ5dGUobHp3TWluQ29kZVNpemUpO1xuICAgICAgICB2YXIgb2Zmc2V0ID0gMDtcbiAgICAgICAgd2hpbGUgKHJhc3Rlci5sZW5ndGggLSBvZmZzZXQgPiAyNTUpIHtcbiAgICAgICAgICBvdXQud3JpdGVCeXRlKDI1NSk7XG4gICAgICAgICAgb3V0LndyaXRlQnl0ZXMocmFzdGVyLCBvZmZzZXQsIDI1NSk7XG4gICAgICAgICAgb2Zmc2V0ICs9IDI1NTtcbiAgICAgICAgfVxuICAgICAgICBvdXQud3JpdGVCeXRlKHJhc3Rlci5sZW5ndGggLSBvZmZzZXQpO1xuICAgICAgICBvdXQud3JpdGVCeXRlcyhyYXN0ZXIsIG9mZnNldCwgcmFzdGVyLmxlbmd0aCAtIG9mZnNldCk7XG4gICAgICAgIG91dC53cml0ZUJ5dGUoMCk7XG4gICAgICAgIG91dC53cml0ZVN0cmluZyhcIjtcIik7XG4gICAgICB9O1xuICAgICAgdmFyIGJpdE91dHB1dFN0cmVhbSA9IGZ1bmN0aW9uKG91dCkge1xuICAgICAgICB2YXIgX291dCA9IG91dDtcbiAgICAgICAgdmFyIF9iaXRMZW5ndGggPSAwO1xuICAgICAgICB2YXIgX2JpdEJ1ZmZlciA9IDA7XG4gICAgICAgIHZhciBfdGhpczIgPSB7fTtcbiAgICAgICAgX3RoaXMyLndyaXRlID0gZnVuY3Rpb24oZGF0YSwgbGVuZ3RoKSB7XG4gICAgICAgICAgaWYgKGRhdGEgPj4+IGxlbmd0aCAhPSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBcImxlbmd0aCBvdmVyXCI7XG4gICAgICAgICAgfVxuICAgICAgICAgIHdoaWxlIChfYml0TGVuZ3RoICsgbGVuZ3RoID49IDgpIHtcbiAgICAgICAgICAgIF9vdXQud3JpdGVCeXRlKDI1NSAmIChkYXRhIDw8IF9iaXRMZW5ndGggfCBfYml0QnVmZmVyKSk7XG4gICAgICAgICAgICBsZW5ndGggLT0gOCAtIF9iaXRMZW5ndGg7XG4gICAgICAgICAgICBkYXRhID4+Pj0gOCAtIF9iaXRMZW5ndGg7XG4gICAgICAgICAgICBfYml0QnVmZmVyID0gMDtcbiAgICAgICAgICAgIF9iaXRMZW5ndGggPSAwO1xuICAgICAgICAgIH1cbiAgICAgICAgICBfYml0QnVmZmVyID0gZGF0YSA8PCBfYml0TGVuZ3RoIHwgX2JpdEJ1ZmZlcjtcbiAgICAgICAgICBfYml0TGVuZ3RoID0gX2JpdExlbmd0aCArIGxlbmd0aDtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMyLmZsdXNoID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYgKF9iaXRMZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBfb3V0LndyaXRlQnl0ZShfYml0QnVmZmVyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpczI7XG4gICAgICB9O1xuICAgICAgdmFyIGdldExaV1Jhc3RlciA9IGZ1bmN0aW9uKGx6d01pbkNvZGVTaXplKSB7XG4gICAgICAgIHZhciBjbGVhckNvZGUgPSAxIDw8IGx6d01pbkNvZGVTaXplO1xuICAgICAgICB2YXIgZW5kQ29kZSA9ICgxIDw8IGx6d01pbkNvZGVTaXplKSArIDE7XG4gICAgICAgIHZhciBiaXRMZW5ndGggPSBsendNaW5Db2RlU2l6ZSArIDE7XG4gICAgICAgIHZhciB0YWJsZSA9IGx6d1RhYmxlKCk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBjbGVhckNvZGU7IGkyICs9IDEpIHtcbiAgICAgICAgICB0YWJsZS5hZGQoU3RyaW5nLmZyb21DaGFyQ29kZShpMikpO1xuICAgICAgICB9XG4gICAgICAgIHRhYmxlLmFkZChTdHJpbmcuZnJvbUNoYXJDb2RlKGNsZWFyQ29kZSkpO1xuICAgICAgICB0YWJsZS5hZGQoU3RyaW5nLmZyb21DaGFyQ29kZShlbmRDb2RlKSk7XG4gICAgICAgIHZhciBieXRlT3V0ID0gYnl0ZUFycmF5T3V0cHV0U3RyZWFtKCk7XG4gICAgICAgIHZhciBiaXRPdXQgPSBiaXRPdXRwdXRTdHJlYW0oYnl0ZU91dCk7XG4gICAgICAgIGJpdE91dC53cml0ZShjbGVhckNvZGUsIGJpdExlbmd0aCk7XG4gICAgICAgIHZhciBkYXRhSW5kZXggPSAwO1xuICAgICAgICB2YXIgczIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKF9kYXRhW2RhdGFJbmRleF0pO1xuICAgICAgICBkYXRhSW5kZXggKz0gMTtcbiAgICAgICAgd2hpbGUgKGRhdGFJbmRleCA8IF9kYXRhLmxlbmd0aCkge1xuICAgICAgICAgIHZhciBjMiA9IFN0cmluZy5mcm9tQ2hhckNvZGUoX2RhdGFbZGF0YUluZGV4XSk7XG4gICAgICAgICAgZGF0YUluZGV4ICs9IDE7XG4gICAgICAgICAgaWYgKHRhYmxlLmNvbnRhaW5zKHMyICsgYzIpKSB7XG4gICAgICAgICAgICBzMiA9IHMyICsgYzI7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJpdE91dC53cml0ZSh0YWJsZS5pbmRleE9mKHMyKSwgYml0TGVuZ3RoKTtcbiAgICAgICAgICAgIGlmICh0YWJsZS5zaXplKCkgPCA0MDk1KSB7XG4gICAgICAgICAgICAgIGlmICh0YWJsZS5zaXplKCkgPT0gMSA8PCBiaXRMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBiaXRMZW5ndGggKz0gMTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB0YWJsZS5hZGQoczIgKyBjMik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzMiA9IGMyO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBiaXRPdXQud3JpdGUodGFibGUuaW5kZXhPZihzMiksIGJpdExlbmd0aCk7XG4gICAgICAgIGJpdE91dC53cml0ZShlbmRDb2RlLCBiaXRMZW5ndGgpO1xuICAgICAgICBiaXRPdXQuZmx1c2goKTtcbiAgICAgICAgcmV0dXJuIGJ5dGVPdXQudG9CeXRlQXJyYXkoKTtcbiAgICAgIH07XG4gICAgICB2YXIgbHp3VGFibGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIF9tYXAgPSB7fTtcbiAgICAgICAgdmFyIF9zaXplID0gMDtcbiAgICAgICAgdmFyIF90aGlzMiA9IHt9O1xuICAgICAgICBfdGhpczIuYWRkID0gZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgaWYgKF90aGlzMi5jb250YWlucyhrZXkpKSB7XG4gICAgICAgICAgICB0aHJvdyBcImR1cCBrZXk6XCIgKyBrZXk7XG4gICAgICAgICAgfVxuICAgICAgICAgIF9tYXBba2V5XSA9IF9zaXplO1xuICAgICAgICAgIF9zaXplICs9IDE7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzMi5zaXplID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIF9zaXplO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpczIuaW5kZXhPZiA9IGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgIHJldHVybiBfbWFwW2tleV07XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzMi5jb250YWlucyA9IGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgIHJldHVybiB0eXBlb2YgX21hcFtrZXldICE9IFwidW5kZWZpbmVkXCI7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpczI7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIGNyZWF0ZURhdGFVUkwgPSBmdW5jdGlvbih3aWR0aCwgaGVpZ2h0LCBnZXRQaXhlbCkge1xuICAgICAgdmFyIGdpZiA9IGdpZkltYWdlKHdpZHRoLCBoZWlnaHQpO1xuICAgICAgZm9yICh2YXIgeSA9IDA7IHkgPCBoZWlnaHQ7IHkgKz0gMSkge1xuICAgICAgICBmb3IgKHZhciB4ID0gMDsgeCA8IHdpZHRoOyB4ICs9IDEpIHtcbiAgICAgICAgICBnaWYuc2V0UGl4ZWwoeCwgeSwgZ2V0UGl4ZWwoeCwgeSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB2YXIgYiA9IGJ5dGVBcnJheU91dHB1dFN0cmVhbSgpO1xuICAgICAgZ2lmLndyaXRlKGIpO1xuICAgICAgdmFyIGJhc2U2NCA9IGJhc2U2NEVuY29kZU91dHB1dFN0cmVhbSgpO1xuICAgICAgdmFyIGJ5dGVzID0gYi50b0J5dGVBcnJheSgpO1xuICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGJ5dGVzLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICBiYXNlNjQud3JpdGVCeXRlKGJ5dGVzW2kyXSk7XG4gICAgICB9XG4gICAgICBiYXNlNjQuZmx1c2goKTtcbiAgICAgIHJldHVybiBcImRhdGE6aW1hZ2UvZ2lmO2Jhc2U2NCxcIiArIGJhc2U2NDtcbiAgICB9O1xuICAgIHJldHVybiBxcmNvZGUzO1xuICB9KCk7XG4gICFmdW5jdGlvbigpIHtcbiAgICBxcmNvZGUyLnN0cmluZ1RvQnl0ZXNGdW5jc1tcIlVURi04XCJdID0gZnVuY3Rpb24oczIpIHtcbiAgICAgIGZ1bmN0aW9uIHRvVVRGOEFycmF5KHN0cikge1xuICAgICAgICB2YXIgdXRmOCA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgc3RyLmxlbmd0aDsgaTIrKykge1xuICAgICAgICAgIHZhciBjaGFyY29kZSA9IHN0ci5jaGFyQ29kZUF0KGkyKTtcbiAgICAgICAgICBpZiAoY2hhcmNvZGUgPCAxMjgpXG4gICAgICAgICAgICB1dGY4LnB1c2goY2hhcmNvZGUpO1xuICAgICAgICAgIGVsc2UgaWYgKGNoYXJjb2RlIDwgMjA0OCkge1xuICAgICAgICAgICAgdXRmOC5wdXNoKFxuICAgICAgICAgICAgICAxOTIgfCBjaGFyY29kZSA+PiA2LFxuICAgICAgICAgICAgICAxMjggfCBjaGFyY29kZSAmIDYzXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0gZWxzZSBpZiAoY2hhcmNvZGUgPCA1NTI5NiB8fCBjaGFyY29kZSA+PSA1NzM0NCkge1xuICAgICAgICAgICAgdXRmOC5wdXNoKFxuICAgICAgICAgICAgICAyMjQgfCBjaGFyY29kZSA+PiAxMixcbiAgICAgICAgICAgICAgMTI4IHwgY2hhcmNvZGUgPj4gNiAmIDYzLFxuICAgICAgICAgICAgICAxMjggfCBjaGFyY29kZSAmIDYzXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpMisrO1xuICAgICAgICAgICAgY2hhcmNvZGUgPSA2NTUzNiArICgoY2hhcmNvZGUgJiAxMDIzKSA8PCAxMCB8IHN0ci5jaGFyQ29kZUF0KGkyKSAmIDEwMjMpO1xuICAgICAgICAgICAgdXRmOC5wdXNoKFxuICAgICAgICAgICAgICAyNDAgfCBjaGFyY29kZSA+PiAxOCxcbiAgICAgICAgICAgICAgMTI4IHwgY2hhcmNvZGUgPj4gMTIgJiA2MyxcbiAgICAgICAgICAgICAgMTI4IHwgY2hhcmNvZGUgPj4gNiAmIDYzLFxuICAgICAgICAgICAgICAxMjggfCBjaGFyY29kZSAmIDYzXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdXRmODtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0b1VURjhBcnJheShzMik7XG4gICAgfTtcbiAgfSgpO1xuICAoZnVuY3Rpb24oZmFjdG9yeSkge1xuICAgIHtcbiAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICAgIH1cbiAgfSkoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHFyY29kZTI7XG4gIH0pO1xufSkocXJjb2RlJDEpO1xuY29uc3QgcXJjb2RlID0gcXJjb2RlJDEuZXhwb3J0cztcbmZ1bmN0aW9uIGNvcHlUb0NsaXBib2FyZCh0ZXh0KSB7XG4gIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghKG5hdmlnYXRvciA9PSBudWxsID8gdm9pZCAwIDogbmF2aWdhdG9yLmNsaXBib2FyZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiQ2xpcGJvYXJkIEFQSSBub3QgYXZhaWxhYmxlXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHlpZWxkIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KHRleHQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICAgIGZhbGxiYWNrQ29weVRleHRUb0NsaXBib2FyZCh0ZXh0KTtcbiAgfSk7XG59XG5mdW5jdGlvbiBmYWxsYmFja0NvcHlUZXh0VG9DbGlwYm9hcmQodGV4dCkge1xuICBjb25zdCB0ZXh0QXJlYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKTtcbiAgdGV4dEFyZWEudmFsdWUgPSB0ZXh0O1xuICB0ZXh0QXJlYS5zdHlsZS50b3AgPSBcIjBcIjtcbiAgdGV4dEFyZWEuc3R5bGUubGVmdCA9IFwiMFwiO1xuICB0ZXh0QXJlYS5zdHlsZS5wb3NpdGlvbiA9IFwiZml4ZWRcIjtcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0ZXh0QXJlYSk7XG4gIHRleHRBcmVhLmZvY3VzKCk7XG4gIHRleHRBcmVhLnNlbGVjdCgpO1xuICB0cnkge1xuICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKFwiY29weVwiKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRleHRBcmVhKTtcbiAgfVxufVxuY29uc3QgX3RtcGwkJHIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGRpdj48L2Rpdj5gKTtcbmNvbnN0IFFSQ29kZSA9IChwcm9wcykgPT4ge1xuICBsZXQgcXJDb2RlQ2FudmFzUmVmO1xuICBsZXQgcXJDb2RlV3JhcHBlclJlZjtcbiAgbGV0IGltYWdlUmVmO1xuICBjb25zdCBbY29weUJ1dHRvbk9wZW5lZCwgc2V0Q29weUJ1dHRvbk9wZW5lZF0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBbcGljU2l6ZSwgc2V0UGljU2l6ZV0gPSBjcmVhdGVTaWduYWwocGljU2l6ZURlZmF1bHQpO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGVycm9yQ29ycmVjdGlvbkxldmVsID0gXCJMXCI7XG4gICAgY29uc3QgY2VsbFNpemUgPSA0O1xuICAgIGNvbnN0IHFyID0gcXJjb2RlKDAsIGVycm9yQ29ycmVjdGlvbkxldmVsKTtcbiAgICBxci5hZGREYXRhKHByb3BzLnNvdXJjZVVybCk7XG4gICAgcXIubWFrZSgpO1xuICAgIHFyQ29kZUNhbnZhc1JlZi5pbm5lckhUTUwgPSBxci5jcmVhdGVTdmdUYWcoY2VsbFNpemUsIDApO1xuICAgIGNvbnN0IHFyU2l6ZSA9IHFyQ29kZUNhbnZhc1JlZi5maXJzdEVsZW1lbnRDaGlsZC5jbGllbnRXaWR0aDtcbiAgICBjb25zdCBzY2FsZSA9IE1hdGgucm91bmQocXJOb3JtYWxTaXplIC8gcXJTaXplICogMWU1KSAvIDFlNTtcbiAgICBpZiAoaW1hZ2VSZWYpIHtcbiAgICAgIGNvbnN0IGltZ1NpemUgPSBNYXRoLmNlaWwoaW1nU2l6ZURlZmF1bHQgLyAoc2NhbGUgKiBjZWxsU2l6ZSkpICogY2VsbFNpemU7XG4gICAgICBjb25zdCBpbWdPZmZzZXQgPSB0b1B4KE1hdGguY2VpbCgocXJTaXplIC0gaW1nU2l6ZSkgLyAoMiAqIGNlbGxTaXplKSkgKiBjZWxsU2l6ZSk7XG4gICAgICBpbWFnZVJlZi5zdHlsZS50b3AgPSBpbWdPZmZzZXQ7XG4gICAgICBpbWFnZVJlZi5zdHlsZS5sZWZ0ID0gaW1nT2Zmc2V0O1xuICAgICAgaW1hZ2VSZWYuc3R5bGUuaGVpZ2h0ID0gdG9QeChpbWdTaXplKTtcbiAgICAgIGltYWdlUmVmLnN0eWxlLndpZHRoID0gdG9QeChpbWdTaXplKTtcbiAgICAgIHNldFBpY1NpemUoTWF0aC5yb3VuZChwaWNTaXplRGVmYXVsdCAvIHNjYWxlKSk7XG4gICAgfVxuICAgIHFyQ29kZVdyYXBwZXJSZWYuc3R5bGUudHJhbnNmb3JtID0gYHNjYWxlKCR7c2NhbGV9KWA7XG4gIH0pO1xuICBsZXQgdGltZW91dElkID0gbnVsbDtcbiAgY29uc3Qgb25Db3B5Q2xpY2sgPSAoKSA9PiB7XG4gICAgc2V0Q29weUJ1dHRvbk9wZW5lZCh0cnVlKTtcbiAgICBjb3B5VG9DbGlwYm9hcmQocHJvcHMuc291cmNlVXJsKTtcbiAgICBpZiAodGltZW91dElkICE9IG51bGwpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgIH1cbiAgICB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHNldENvcHlCdXR0b25PcGVuZWQoZmFsc2UpLCAxNTAwKTtcbiAgfTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRckNvZGVCYWNrZ3JvdW5kLCB7XG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgb25DbGljazogb25Db3B5Q2xpY2ssXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoUXJDb2RlV3JhcHBlciQyLCB7XG4gICAgICAgIHJlZihyJCkge1xuICAgICAgICAgIGNvbnN0IF9yZWYkID0gcXJDb2RlV3JhcHBlclJlZjtcbiAgICAgICAgICB0eXBlb2YgX3JlZiQgPT09IFwiZnVuY3Rpb25cIiA/IF9yZWYkKHIkKSA6IHFyQ29kZVdyYXBwZXJSZWYgPSByJDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkci5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICBjb25zdCBfcmVmJDIgPSBxckNvZGVDYW52YXNSZWY7XG4gICAgICAgICAgICB0eXBlb2YgX3JlZiQyID09PSBcImZ1bmN0aW9uXCIgPyB1c2UoX3JlZiQyLCBfZWwkKSA6IHFyQ29kZUNhbnZhc1JlZiA9IF9lbCQ7XG4gICAgICAgICAgICByZXR1cm4gX2VsJDtcbiAgICAgICAgICB9KSgpLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5pbWFnZVVybDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoSW1hZ2VCYWNrZ3JvdW5kLCB7XG4gICAgICAgICAgICAgICAgcmVmKHIkKSB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBfcmVmJDMgPSBpbWFnZVJlZjtcbiAgICAgICAgICAgICAgICAgIHR5cGVvZiBfcmVmJDMgPT09IFwiZnVuY3Rpb25cIiA/IF9yZWYkMyhyJCkgOiBpbWFnZVJlZiA9IHIkO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJbWFnZVN0eWxlZCQzLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmltYWdlVXJsO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBhbHQ6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGdldCBzaXplKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwaWNTaXplKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFRyYW5zaXRpb24sIHtcbiAgICAgICAgb25CZWZvcmVFbnRlcjogKGVsKSA9PiB7XG4gICAgICAgICAgYW5pbWF0ZShlbCwgW3tcbiAgICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKC01MCUsIDQ0cHgpXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZSgtNTAlLCAwKVwiXG4gICAgICAgICAgfV0sIHtcbiAgICAgICAgICAgIGR1cmF0aW9uOiAxNTAsXG4gICAgICAgICAgICBlYXNpbmc6IFwiZWFzZS1vdXRcIlxuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBvbkV4aXQ6IChlbCwgZG9uZSkgPT4ge1xuICAgICAgICAgIGFuaW1hdGUoZWwsIFt7XG4gICAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZSgtNTAlLCAwKVwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoLTUwJSwgNDRweClcIlxuICAgICAgICAgIH1dLCB7XG4gICAgICAgICAgICBkdXJhdGlvbjogMTUwLFxuICAgICAgICAgICAgZWFzaW5nOiBcImVhc2Utb3V0XCJcbiAgICAgICAgICB9KS5maW5pc2hlZC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjb3B5QnV0dG9uT3BlbmVkKCkgJiYgIXByb3BzLmRpc2FibGVDb3B5O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChDb3BpZWRCb3hTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTdWNjZXNzSWNvbiwge1xuICAgICAgICAgICAgICAgICAgICBzaXplOiBcInhzXCJcbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGV4dCwge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24ubGlua0NvcGllZFwiLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJMaW5rIENvcGllZFwiXG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiAhcHJvcHMuZGlzYWJsZUNvcHk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KENvcHlJY29uQnV0dG9uLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ29weUxpZ2h0SWNvbiwge30pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG52YXIgZGVlcFJlYWRPYmplY3QgPSAob2JqLCBwYXRoLCBkZWZhdWx0VmFsdWUpID0+IHtcbiAgY29uc3QgdmFsdWUgPSBwYXRoLnRyaW0oKS5zcGxpdChcIi5cIikucmVkdWNlKChhMiwgYikgPT4gYTIgPyBhMltiXSA6IHZvaWQgMCwgb2JqKTtcbiAgcmV0dXJuIHZhbHVlICE9PSB2b2lkIDAgPyB2YWx1ZSA6IGRlZmF1bHRWYWx1ZTtcbn07XG52YXIgdGVtcGxhdGUgPSAoc3RyLCBwYXJhbXMsIHJlZyA9IC97eyguKj8pfX0vZykgPT4gc3RyLnJlcGxhY2UocmVnLCAoXywga2V5KSA9PiBkZWVwUmVhZE9iamVjdChwYXJhbXMsIGtleSwgXCJcIikpO1xudmFyIGNyZWF0ZUkxOG5Db250ZXh0ID0gKGluaXQgPSB7fSwgbGFuZyA9IG5hdmlnYXRvci5sYW5ndWFnZSBpbiBpbml0ID8gbmF2aWdhdG9yLmxhbmd1YWdlIDogT2JqZWN0LmtleXMoaW5pdClbMF0pID0+IHtcbiAgY29uc3QgW2xvY2FsZSwgc2V0TG9jYWxlXSA9IGNyZWF0ZVNpZ25hbChsYW5nKTtcbiAgY29uc3QgW2RpY3QsIHNldERpY3RdID0gY3JlYXRlU3RvcmUoaW5pdCk7XG4gIGNvbnN0IHRyYW5zbGF0ZSA9IChrZXksIHBhcmFtcywgZGVmYXVsdFZhbHVlKSA9PiB7XG4gICAgY29uc3QgdmFsID0gZGVlcFJlYWRPYmplY3QoZGljdFtsb2NhbGUoKV0sIGtleSwgZGVmYXVsdFZhbHVlIHx8IFwiXCIpO1xuICAgIGlmICh0eXBlb2YgdmFsID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICByZXR1cm4gdmFsKHBhcmFtcyk7XG4gICAgaWYgKHR5cGVvZiB2YWwgPT09IFwic3RyaW5nXCIpXG4gICAgICByZXR1cm4gdGVtcGxhdGUodmFsLCBwYXJhbXMgfHwge30pO1xuICAgIHJldHVybiB2YWw7XG4gIH07XG4gIGNvbnN0IGFjdGlvbnMgPSB7XG4gICAgYWRkKGxhbmcyLCB0YWJsZSkge1xuICAgICAgc2V0RGljdChsYW5nMiwgKHQyKSA9PiBPYmplY3QuYXNzaWduKHQyIHx8IHt9LCB0YWJsZSkpO1xuICAgIH0sXG4gICAgbG9jYWxlOiAobGFuZzIpID0+IGxhbmcyID8gc2V0TG9jYWxlKGxhbmcyKSA6IGxvY2FsZSgpLFxuICAgIGRpY3Q6IChsYW5nMikgPT4gZGVlcFJlYWRPYmplY3QoZGljdCwgbGFuZzIpXG4gIH07XG4gIHJldHVybiBbdHJhbnNsYXRlLCBhY3Rpb25zXTtcbn07XG52YXIgSTE4bkNvbnRleHQgPSBjcmVhdGVDb250ZXh0KHt9KTtcbnZhciB1c2VJMThuID0gKCkgPT4gdXNlQ29udGV4dChJMThuQ29udGV4dCk7XG5jb25zdCBUZXh0U3R5bGVkJDMgPSBzdHlsZWQuZGl2YFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogJHsocHJvcHMpID0+IHByb3BzLmZvbnRXZWlnaHR9O1xuICAgIGZvbnQtc2l6ZTogJHsocHJvcHMpID0+IHByb3BzLmZvbnRTaXplfTtcbiAgICBsaW5lLWhlaWdodDogJHsocHJvcHMpID0+IHByb3BzLmxpbmVIZWlnaHR9O1xuXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy5jb2xvcn07XG5gO1xuY29uc3QgVGV4dCA9IChpbnB1dHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBbdDJdID0gdXNlSTE4bigpO1xuICBsZXQgdGV4dFJlZjtcbiAgY29uc3QgY29sb3IgPSAoKSA9PiBpbnB1dHMuY29sb3IgfHwgdGhlbWUuY29sb3JzLnRleHQucHJpbWFyeTtcbiAgY29uc3QgcHJvcHMgPSBtZXJnZVByb3BzKHtcbiAgICBmb250U2l6ZTogXCIxNHB4XCIsXG4gICAgZm9udFdlaWdodDogXCI1MTBcIixcbiAgICBsaW5lSGVpZ2h0OiBcIjEzMCVcIlxuICB9LCBpbnB1dHMpO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghdGV4dFJlZikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAocHJvcHMuY3Vyc29yID09PSBcInVuc2V0XCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGdldENvbXB1dGVkU3R5bGUodGV4dFJlZikuY3Vyc29yICE9PSBcInBvaW50ZXJcIikge1xuICAgICAgdGV4dFJlZi5zdHlsZS5jdXJzb3IgPSBcImRlZmF1bHRcIjtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRleHRTdHlsZWQkMywge1xuICAgIGdldCBmb250U2l6ZSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5mb250U2l6ZTtcbiAgICB9LFxuICAgIGdldCBmb250V2VpZ2h0KCkge1xuICAgICAgcmV0dXJuIHByb3BzLmZvbnRXZWlnaHQ7XG4gICAgfSxcbiAgICBnZXQgbGluZUhlaWdodCgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5saW5lSGVpZ2h0O1xuICAgIH0sXG4gICAgZ2V0IGNvbG9yKCkge1xuICAgICAgcmV0dXJuIGNvbG9yKCk7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICByZWYociQpIHtcbiAgICAgIGNvbnN0IF9yZWYkID0gdGV4dFJlZjtcbiAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiID8gX3JlZiQociQpIDogdGV4dFJlZiA9IHIkO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLXRleHRcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhcHJvcHMudHJhbnNsYXRpb25LZXkpKCkgPyB0Mihwcm9wcy50cmFuc2xhdGlvbktleSwgcHJvcHMudHJhbnNsYXRpb25WYWx1ZXMsIChfYTIgPSBwcm9wcy5jaGlsZHJlbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi50b1N0cmluZygpKSA6IHByb3BzLmNoaWxkcmVuO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgSW1hZ2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICY6OmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm9yZGVyOiAwLjVweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDgpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiBpbmhlcml0O1xuICAgIH1cbmA7XG5jb25zdCBJbWFnZVN0eWxlZCQyID0gc3R5bGVkKEltYWdlKWBcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcbmA7XG5jb25zdCBXYWxsZXRJbWFnZSA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEltYWdlQ29udGFpbmVyLCB7XG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSW1hZ2VTdHlsZWQkMiwge1xuICAgICAgICBnZXQgc3JjKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5zcmM7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLmJhZGdlKV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBib3JkZXJzJDMgPSB7XG4gIG06IFwiMTZweFwiLFxuICBzOiBcIjEycHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBiYWRnZUJvcmRlcnMgPSB7XG4gIG06IFwiNnB4XCIsXG4gIHM6IFwiNnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgV2FsbGV0VWxDb250YWluZXIgPSBzdHlsZWQudWxgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBnYXA6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgICBwYWRkaW5nOiA4cHggMTJweCAxNnB4IDEycHg7XG4gICAgbWFyZ2luOiAwO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgZmxleC13cmFwOiBub3dyYXA7XG5cbiAgICAmJjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XG4gICAgc2Nyb2xsYmFyLXdpZHRoOiBub25lO1xuXG4gICAgPiBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIG1pbi13aWR0aDogNzhweDtcbiAgICAgICAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgICB9XG5cbiAgICA+IGxpID4gYnV0dG9uIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuYDtcbmNvbnN0IFdhbGxldEl0ZW1TdHlsZWQgPSBzdHlsZWQuYnV0dG9uYFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHVuc2V0O1xuICAgIHBhZGRpbmc6IDhweCA0cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLXdpZHRoOiA3OHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTI1cyBlYXNlLWluLW91dDtcblxuICAgICR7bWVkaWFOb3RUb3VjaH0ge1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG4gICAgfVxuXG4gICAgJHttZWRpYVRvdWNofSB7XG4gICAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Mik7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuY29uc3QgSW1hZ2VTdHlsZWQkMSA9IHN0eWxlZChXYWxsZXRJbWFnZSlgXG4gICAgd2lkdGg6IDYwcHg7XG4gICAgaGVpZ2h0OiA2MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBib3JkZXJzJDNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5jb25zdCBCYWRnZVN0eWxlZCA9IHN0eWxlZChJbWFnZSlgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAtNnB4O1xuICAgIGJvdHRvbTogLTZweDtcbiAgICB3aWR0aDogMjRweDtcbiAgICBoZWlnaHQ6IDI0cHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGJhZGdlQm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBib3gtc2hhZG93OiAwIDJweCA4cHggMCByZ2JhKDAsIDAsIDAsIDAuMDgpO1xuYDtcbmNvbnN0IFN0eWxlZFRleHQgPSBzdHlsZWQoVGV4dClgXG4gICAgbWF4LXdpZHRoOiA5MHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MTA7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICBtYXgtd2lkdGg6IDgwcHg7XG4gICAgfVxuYDtcbmNvbnN0IFN0eWxlZFNlY29uZExpbmUgPSBzdHlsZWQoVGV4dClgXG4gICAgZm9udC13ZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy5jb2xvclByaW1hcnkgPyBcIjUxMFwiIDogXCI0MDBcIn07XG4gICAgbWF4LXdpZHRoOiA5MHB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLmNvbG9yUHJpbWFyeSA/IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnByaW1hcnkgOiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICBtYXgtd2lkdGg6IDgwcHg7XG4gICAgfVxuYDtcbmNvbnN0IF90bXBsJCRxID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxkaXY+PC9kaXY+YCk7XG5jb25zdCBXYWxsZXRJdGVtID0gKHByb3BzKSA9PiB7XG4gIGxldCBjdHhSZWYgPSBudWxsO1xuICBjb25zdCBhZGp1c3RMZXR0ZXJTcGFjaW5nID0gKCkgPT4ge1xuICAgIGNvbnN0IG5hbWUgPSBjdHhSZWYgPT0gbnVsbCA/IHZvaWQgMCA6IGN0eFJlZi5xdWVyeVNlbGVjdG9yKFwiZGl2XCIpO1xuICAgIGlmIChuYW1lICYmIG5hbWUuc2Nyb2xsV2lkdGggPiBuYW1lLmNsaWVudFdpZHRoKSB7XG4gICAgICBsZXQgc3BhY2luZyA9IDA7XG4gICAgICBjb25zdCBtaW5TcGFjaW5nID0gLTAuNDtcbiAgICAgIGNvbnN0IHN0ZXAgPSAwLjA1O1xuICAgICAgd2hpbGUgKG5hbWUuc2Nyb2xsV2lkdGggPiBuYW1lLmNsaWVudFdpZHRoICYmIHNwYWNpbmcgPj0gbWluU3BhY2luZykge1xuICAgICAgICBzcGFjaW5nIC09IHN0ZXA7XG4gICAgICAgIG5hbWUuc3R5bGUubGV0dGVyU3BhY2luZyA9IGAke3NwYWNpbmd9cHhgO1xuICAgICAgfVxuICAgICAgaWYgKHNwYWNpbmcgIT09IDApIHtcbiAgICAgICAgc3BhY2luZyAtPSBzdGVwO1xuICAgICAgICBuYW1lLnN0eWxlLmxldHRlclNwYWNpbmcgPSBgJHtzcGFjaW5nfXB4YDtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIG9uTW91bnQoKCkgPT4gYWRqdXN0TGV0dGVyU3BhY2luZygpKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBhZGp1c3RMZXR0ZXJTcGFjaW5nKCk7XG4gIH0pO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFdhbGxldEl0ZW1TdHlsZWQsIHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsaWNrKCksXG4gICAgXCJkYXRhLXRjLXdhbGxldC1pdGVtXCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlTWVtbygoKSA9PiBjcmVhdGVNZW1vKCgpID0+IHR5cGVvZiBwcm9wcy5pY29uID09PSBcInN0cmluZ1wiKSgpID8gY3JlYXRlQ29tcG9uZW50KEltYWdlU3R5bGVkJDEsIHtcbiAgICAgICAgZ2V0IHNyYygpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMuaWNvbjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGJhZGdlKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhcHJvcHMuYmFkZ2VVcmwpKCkgJiYgY3JlYXRlQ29tcG9uZW50KEJhZGdlU3R5bGVkLCB7XG4gICAgICAgICAgICBnZXQgc3JjKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuYmFkZ2VVcmw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pIDogcHJvcHMuaWNvbiksICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkcS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgIHVzZSgoZWwpID0+IGN0eFJlZiA9IGVsLCBfZWwkKTtcbiAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChTdHlsZWRUZXh0LCB7XG4gICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgcmV0dXJuIHByb3BzLm5hbWU7XG4gICAgICAgICAgfVxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiBfZWwkO1xuICAgICAgfSkoKSwgY3JlYXRlTWVtbygoKSA9PiBjcmVhdGVNZW1vKCgpID0+ICEhcHJvcHMuc2Vjb25kTGluZSkoKSAmJiBjcmVhdGVDb21wb25lbnQoU3R5bGVkU2Vjb25kTGluZSwge1xuICAgICAgICBnZXQgY29sb3JQcmltYXJ5KCkge1xuICAgICAgICAgIHZhciBfYTI7XG4gICAgICAgICAgcmV0dXJuIChfYTIgPSBwcm9wcy5zZWNvbmRMaW5lQ29sb3JQcmltYXJ5KSAhPSBudWxsID8gX2EyIDogdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5zZWNvbmRMaW5lO1xuICAgICAgICB9XG4gICAgICB9KSldO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgSDFTdHlsZWQkOSA9IHN0eWxlZC5oMWBcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDU5MDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7XG5cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnByaW1hcnl9O1xuXG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xuYDtcbmNvbnN0IEgxID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkOSwge1xuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIFwiZGF0YS10Yy1oMVwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFwcm9wcy50cmFuc2xhdGlvbktleSkoKSA/IHQyKHByb3BzLnRyYW5zbGF0aW9uS2V5LCBwcm9wcy50cmFuc2xhdGlvblZhbHVlcywgKF9hMiA9IHByb3BzLmNoaWxkcmVuKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRvU3RyaW5nKCkpIDogcHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBIMlN0eWxlZCQ1ID0gc3R5bGVkLmgyYFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjJweDtcblxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQuc2Vjb25kYXJ5fTtcblxuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMzJweDtcblxuICAgIGN1cnNvcjogZGVmYXVsdDtcbmA7XG5jb25zdCBIMiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbdDJdID0gdXNlSTE4bigpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEgyU3R5bGVkJDUsIHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtaDJcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhcHJvcHMudHJhbnNsYXRpb25LZXkpKCkgPyB0Mihwcm9wcy50cmFuc2xhdGlvbktleSwgcHJvcHMudHJhbnNsYXRpb25WYWx1ZXMsIChfYTIgPSBwcm9wcy5jaGlsZHJlbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi50b1N0cmluZygpKSA6IHByb3BzLmNoaWxkcmVuO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgSDNTdHlsZWQkMSA9IHN0eWxlZC5oM2BcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDUxMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XG5cbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnByaW1hcnl9O1xuXG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xuYDtcbmNvbnN0IEgzID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSDNTdHlsZWQkMSwge1xuICAgIFwiZGF0YS10Yy1oM1wiOiBcInRydWVcIixcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFwcm9wcy50cmFuc2xhdGlvbktleSkoKSA/IHQyKHByb3BzLnRyYW5zbGF0aW9uS2V5LCBwcm9wcy50cmFuc2xhdGlvblZhbHVlcywgKF9hMiA9IHByb3BzLmNoaWxkcmVuKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRvU3RyaW5nKCkpIDogcHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBfdG1wbCQkcCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiMjRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMTQuMTgzOSAxNy43MDY5QzEzLjY0MDUgMTguNjUwNyAxMy4zNjg4IDE5LjEyMjYgMTMuMDU5MSAxOS4zNDhDMTIuNDI3OCAxOS44MDc0IDExLjU3MjMgMTkuODA3NCAxMC45NDEgMTkuMzQ4QzEwLjYzMTIgMTkuMTIyNiAxMC4zNTk1IDE4LjY1MDcgOS44MTYxMyAxNy43MDY5TDUuNTIwNjYgMTAuMjQ2NEM0Ljc2ODY0IDguOTQwMjQgNC4zOTI2MyA4LjI4NzE3IDQuMzM3NjIgNy43NTg5NEM0LjIyNTUgNi42ODIzNiA0LjgxODk0IDUuNjU1OTEgNS44MDc4OCA1LjIxNTg5QzYuMjkzMDkgNSA3LjA0NjY3IDUgOC41NTM4MyA1SDE1LjQ0NjJDMTYuOTUzNCA1IDE3LjcwNjkgNSAxOC4xOTIyIDUuMjE1ODlDMTkuMTgxMSA1LjY1NTkxIDE5Ljc3NDUgNi42ODIzNiAxOS42NjI0IDcuNzU4OTRDMTkuNjA3NCA4LjI4NzE3IDE5LjIzMTQgOC45NDAyNCAxOC40Nzk0IDEwLjI0NjRMMTQuMTgzOSAxNy43MDY5Wk0xMS4xIDE2LjM0MTJMNi41NjEzOSA4LjQ4MDAyQzYuMzE5OTUgOC4wNjE4NSA2LjE5OTI0IDcuODUyNzYgNi4xODE0NiA3LjY4MzY1QzYuMTQ1MjMgNy4zMzg5NiA2LjMzNTA3IDcuMDEwMTUgNi42NTE2OSA2Ljg2OTE5QzYuODA3MDMgNi44MDAwMiA3LjA0ODQ3IDYuODAwMDIgNy41MzEzMyA2LjgwMDAySDcuNTMxMzRMMTEuMSA2LjgwMDAyVjE2LjM0MTJaTTEyLjkgMTYuMzQxMkwxNy40Mzg3IDguNDgwMDJDMTcuNjgwMSA4LjA2MTg1IDE3LjgwMDggNy44NTI3NiAxNy44MTg2IDcuNjgzNjVDMTcuODU0OCA3LjMzODk2IDE3LjY2NSA3LjAxMDE1IDE3LjM0ODQgNi44NjkxOUMxNy4xOTMgNi44MDAwMiAxNi45NTE2IDYuODAwMDIgMTYuNDY4NyA2LjgwMDAyTDEyLjkgNi44MDAwMlYxNi4zNDEyWlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IFRvbkljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5wcmltYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJHAuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJG8gPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIGZpbGw9XCJub25lXCI+PGcgY2xpcC1wYXRoPVwidXJsKCNjbGlwMF8zNzgzXzIwNDUpXCI+PGNpcmNsZSBjeD1cIjhcIiBjeT1cIjguMDAwOThcIiByPVwiOFwiPjwvY2lyY2xlPjxwYXRoIGQ9XCJNNC43NSA4LjUwMDk4TDcgMTAuNzUxTDExLjc1IDYuMDAwOThcIiBzdHJva2Utd2lkdGg9XCIxLjVcIiBzdHJva2UtbGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlLWxpbmVqb2luPVwicm91bmRcIj48L3BhdGg+PC9nPjxkZWZzPjxjbGlwUGF0aCBpZD1cImNsaXAwXzM3ODNfMjA0NVwiPjxyZWN0IHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIGZpbGw9XCJ3aGl0ZVwiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwIDAuMDAwOTc2NTYyKVwiPjwvcmVjdD48L2NsaXBQYXRoPjwvZGVmcz48L3N2Zz5gKSwgX3RtcGwkMiQzID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxjaXJjbGUgY3g9XCIxMlwiIGN5PVwiMTJcIiByPVwiMTFcIj48L2NpcmNsZT48cGF0aCBkPVwiTTE3LjEzNjQgOS42MzY0QzE3LjQ4NzkgOS4yODQ5MyAxNy40ODc5IDguNzE1MDggMTcuMTM2NCA4LjM2MzYxQzE2Ljc4NDkgOC4wMTIxNCAxNi4yMTUxIDguMDEyMTQgMTUuODYzNiA4LjM2MzYxTDEwIDE0LjIyNzJMOC4xMzY0IDEyLjM2MzZDNy43ODQ5MyAxMi4wMTIxIDcuMjE1MDggMTIuMDEyMSA2Ljg2MzYxIDEyLjM2MzZDNi41MTIxNCAxMi43MTUxIDYuNTEyMTQgMTMuMjg0OSA2Ljg2MzYxIDEzLjYzNjRMOS4zNjM2MSAxNi4xMzY0QzkuNzE1MDggMTYuNDg3OSAxMC4yODQ5IDE2LjQ4NzkgMTAuNjM2NCAxNi4xMzY0TDE3LjEzNjQgOS42MzY0WlwiPjwvcGF0aD48L3N2Zz5gKSwgX3RtcGwkMyQyID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCI3MlwiIGhlaWdodD1cIjcyXCIgdmlld0JveD1cIjAgMCA3MiA3MlwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxjaXJjbGUgY3g9XCIzNlwiIGN5PVwiMzZcIiByPVwiMzNcIj48L2NpcmNsZT48cGF0aCBkPVwiTTUwLjkxNDIgMjguNDE0MkM1MS42OTUzIDI3LjYzMzIgNTEuNjk1MyAyNi4zNjY4IDUwLjkxNDIgMjUuNTg1OEM1MC4xMzMyIDI0LjgwNDcgNDguODY2OCAyNC44MDQ3IDQ4LjA4NTggMjUuNTg1OEwzMCA0My42NzE2TDIzLjkxNDIgMzcuNTg1OEMyMy4xMzMyIDM2LjgwNDcgMjEuODY2OCAzNi44MDQ3IDIxLjA4NTggMzcuNTg1OEMyMC4zMDQ3IDM4LjM2NjggMjAuMzA0NyAzOS42MzMyIDIxLjA4NTggNDAuNDE0MkwyOC41ODU4IDQ3LjkxNDJDMjkuMzY2OCA0OC42OTUzIDMwLjYzMzIgNDguNjk1MyAzMS40MTQyIDQ3LjkxNDJMNTAuOTE0MiAyOC40MTQyWlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IFN1Y2Nlc3NJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3Qgc2l6ZSA9ICgpID0+IHByb3BzLnNpemUgfHwgXCJzXCI7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnN1Y2Nlc3M7XG4gIHJldHVybiBjcmVhdGVNZW1vKCgoKSA9PiB7XG4gICAgY29uc3QgX2MkID0gY3JlYXRlTWVtbygoKSA9PiBzaXplKCkgPT09IFwieHNcIik7XG4gICAgcmV0dXJuICgpID0+IF9jJCgpID8gKCgpID0+IHtcbiAgICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkby5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkLCBfZWwkMyA9IF9lbCQyLmZpcnN0Q2hpbGQsIF9lbCQ0ID0gX2VsJDMubmV4dFNpYmxpbmc7XG4gICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICBjb25zdCBfdiQgPSBwcm9wcy5jbGFzcywgX3YkMiA9IGZpbGwoKSwgX3YkMyA9IHRoZW1lLmNvbG9ycy5jb25zdGFudC53aGl0ZTtcbiAgICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImNsYXNzXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDMsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgICBfdiQzICE9PSBfcCQuX3YkMyAmJiBzZXRBdHRyaWJ1dGUoX2VsJDQsIFwic3Ryb2tlXCIsIF9wJC5fdiQzID0gX3YkMyk7XG4gICAgICAgIHJldHVybiBfcCQ7XG4gICAgICB9LCB7XG4gICAgICAgIF92JDogdm9pZCAwLFxuICAgICAgICBfdiQyOiB2b2lkIDAsXG4gICAgICAgIF92JDM6IHZvaWQgMFxuICAgICAgfSk7XG4gICAgICByZXR1cm4gX2VsJDtcbiAgICB9KSgpIDogKCgpID0+IHtcbiAgICAgIGNvbnN0IF9jJDIgPSBjcmVhdGVNZW1vKCgpID0+IHNpemUoKSA9PT0gXCJzXCIpO1xuICAgICAgcmV0dXJuICgpID0+IF9jJDIoKSA/ICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IF9lbCQ1ID0gX3RtcGwkMiQzLmNsb25lTm9kZSh0cnVlKSwgX2VsJDYgPSBfZWwkNS5maXJzdENoaWxkLCBfZWwkNyA9IF9lbCQ2Lm5leHRTaWJsaW5nO1xuICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgIGNvbnN0IF92JDQgPSBwcm9wcy5jbGFzcywgX3YkNSA9IGZpbGwoKSwgX3YkNiA9IHRoZW1lLmNvbG9ycy5jb25zdGFudC53aGl0ZTtcbiAgICAgICAgICBfdiQ0ICE9PSBfcCQuX3YkNCAmJiBzZXRBdHRyaWJ1dGUoX2VsJDUsIFwiY2xhc3NcIiwgX3AkLl92JDQgPSBfdiQ0KTtcbiAgICAgICAgICBfdiQ1ICE9PSBfcCQuX3YkNSAmJiBzZXRBdHRyaWJ1dGUoX2VsJDYsIFwiZmlsbFwiLCBfcCQuX3YkNSA9IF92JDUpO1xuICAgICAgICAgIF92JDYgIT09IF9wJC5fdiQ2ICYmIHNldEF0dHJpYnV0ZShfZWwkNywgXCJmaWxsXCIsIF9wJC5fdiQ2ID0gX3YkNik7XG4gICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgfSwge1xuICAgICAgICAgIF92JDQ6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ1OiB2b2lkIDAsXG4gICAgICAgICAgX3YkNjogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gX2VsJDU7XG4gICAgICB9KSgpIDogKCgpID0+IHtcbiAgICAgICAgY29uc3QgX2VsJDggPSBfdG1wbCQzJDIuY2xvbmVOb2RlKHRydWUpLCBfZWwkOSA9IF9lbCQ4LmZpcnN0Q2hpbGQsIF9lbCQxMCA9IF9lbCQ5Lm5leHRTaWJsaW5nO1xuICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgIGNvbnN0IF92JDcgPSBwcm9wcy5jbGFzcywgX3YkOCA9IGZpbGwoKSwgX3YkOSA9IHRoZW1lLmNvbG9ycy5jb25zdGFudC53aGl0ZTtcbiAgICAgICAgICBfdiQ3ICE9PSBfcCQuX3YkNyAmJiBzZXRBdHRyaWJ1dGUoX2VsJDgsIFwiY2xhc3NcIiwgX3AkLl92JDcgPSBfdiQ3KTtcbiAgICAgICAgICBfdiQ4ICE9PSBfcCQuX3YkOCAmJiBzZXRBdHRyaWJ1dGUoX2VsJDksIFwiZmlsbFwiLCBfcCQuX3YkOCA9IF92JDgpO1xuICAgICAgICAgIF92JDkgIT09IF9wJC5fdiQ5ICYmIHNldEF0dHJpYnV0ZShfZWwkMTAsIFwiZmlsbFwiLCBfcCQuX3YkOSA9IF92JDkpO1xuICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgIH0sIHtcbiAgICAgICAgICBfdiQ3OiB2b2lkIDAsXG4gICAgICAgICAgX3YkODogdm9pZCAwLFxuICAgICAgICAgIF92JDk6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9lbCQ4O1xuICAgICAgfSkoKTtcbiAgICB9KSgpO1xuICB9KSgpKTtcbn07XG5jb25zdCBfdG1wbCQkbiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiNzJcIiBoZWlnaHQ9XCI3MlwiIHZpZXdCb3g9XCIwIDAgNzIgNzJcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48Y2lyY2xlIGN4PVwiMzZcIiBjeT1cIjM2XCIgcj1cIjMzXCI+PC9jaXJjbGU+PHBhdGggZD1cIk0yNC4wODU4IDI2LjkxNDJDMjMuMzA0NyAyNi4xMzMyIDIzLjMwNDcgMjQuODY2OCAyNC4wODU4IDI0LjA4NThDMjQuODY2OCAyMy4zMDQ3IDI2LjEzMzIgMjMuMzA0NyAyNi45MTQyIDI0LjA4NThMMzYgMzMuMTcxNkw0NS4wODU4IDI0LjA4NThDNDUuODY2OCAyMy4zMDQ3IDQ3LjEzMzIgMjMuMzA0NyA0Ny45MTQyIDI0LjA4NThDNDguNjk1MyAyNC44NjY4IDQ4LjY5NTMgMjYuMTMzMiA0Ny45MTQyIDI2LjkxNDJMMzguODI4NCAzNkw0Ny45MTQyIDQ1LjA4NThDNDguNjk1MyA0NS44NjY4IDQ4LjY5NTMgNDcuMTMzMiA0Ny45MTQyIDQ3LjkxNDJDNDcuMTMzMiA0OC42OTUzIDQ1Ljg2NjggNDguNjk1MyA0NS4wODU4IDQ3LjkxNDJMMzYgMzguODI4NEwyNi45MTQyIDQ3LjkxNDJDMjYuMTMzMiA0OC42OTUzIDI0Ljg2NjggNDguNjk1MyAyNC4wODU4IDQ3LjkxNDJDMjMuMzA0NyA0Ny4xMzMyIDIzLjMwNDcgNDUuODY2OCAyNC4wODU4IDQ1LjA4NThMMzMuMTcxNiAzNkwyNC4wODU4IDI2LjkxNDJaXCI+PC9wYXRoPjwvc3ZnPmApLCBfdG1wbCQyJDIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCI0OFwiIGhlaWdodD1cIjQ4XCIgdmlld0JveD1cIjAgMCA0OCA0OFwiIGZpbGw9XCJub25lXCI+PGNpcmNsZSBjeD1cIjI0XCIgY3k9XCIyNC4wMDFcIiByPVwiMjJcIj48L2NpcmNsZT48cGF0aCBkPVwiTTI0IDI0LjAwMUwzMS41IDE2LjUwMU0yNCAyNC4wMDFMMTYuNSAxNi41MDFNMjQgMjQuMDAxTDE2LjUgMzEuNTAxTTI0IDI0LjAwMUwzMS41IDMxLjUwMVwiIHN0cm9rZS13aWR0aD1cIjNcIiBzdHJva2UtbGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlLWxpbmVqb2luPVwicm91bmRcIj48L3BhdGg+PC9zdmc+YCksIF90bXBsJDMkMSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiMjRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48Y2lyY2xlIGN4PVwiMTJcIiBjeT1cIjEyXCIgcj1cIjExXCI+PC9jaXJjbGU+PHBhdGggZD1cIk03Ljg2MzYxIDkuMTM2NEM3LjUxMjE0IDguNzg0OTMgNy41MTIxNCA4LjIxNTA4IDcuODYzNjEgNy44NjM2MUM4LjIxNTA4IDcuNTEyMTQgOC43ODQ5MyA3LjUxMjE0IDkuMTM2NCA3Ljg2MzYxTDEyIDEwLjcyNzJMMTQuODYzNiA3Ljg2MzYxQzE1LjIxNTEgNy41MTIxNCAxNS43ODQ5IDcuNTEyMTQgMTYuMTM2NCA3Ljg2MzYxQzE2LjQ4NzkgOC4yMTUwOCAxNi40ODc5IDguNzg0OTMgMTYuMTM2NCA5LjEzNjRMMTMuMjcyOCAxMkwxNi4xMzY0IDE0Ljg2MzZDMTYuNDg3OSAxNS4yMTUxIDE2LjQ4NzkgMTUuNzg0OSAxNi4xMzY0IDE2LjEzNjRDMTUuNzg0OSAxNi40ODc5IDE1LjIxNTEgMTYuNDg3OSAxNC44NjM2IDE2LjEzNjRMMTIgMTMuMjcyOEw5LjEzNjQgMTYuMTM2NEM4Ljc4NDkzIDE2LjQ4NzkgOC4yMTUwOCAxNi40ODc5IDcuODYzNjEgMTYuMTM2NEM3LjUxMjE0IDE1Ljc4NDkgNy41MTIxNCAxNS4yMTUxIDcuODYzNjEgMTQuODYzNkwxMC43MjcyIDEyTDcuODYzNjEgOS4xMzY0WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IEVycm9ySWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IHNpemUgPSAoKSA9PiBwcm9wcy5zaXplIHx8IFwibVwiO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5lcnJvcjtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCgpID0+IHtcbiAgICBjb25zdCBfYyQgPSBjcmVhdGVNZW1vKCgpID0+IHNpemUoKSA9PT0gXCJtXCIpO1xuICAgIHJldHVybiAoKSA9PiBfYyQoKSA/ICgoKSA9PiB7XG4gICAgICBjb25zdCBfZWwkID0gX3RtcGwkJG4uY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZCwgX2VsJDMgPSBfZWwkMi5uZXh0U2libGluZztcbiAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgIGNvbnN0IF92JCA9IHByb3BzLmNsYXNzLCBfdiQyID0gZmlsbCgpLCBfdiQzID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICAgICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQsIFwiY2xhc3NcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICAgIF92JDMgIT09IF9wJC5fdiQzICYmIHNldEF0dHJpYnV0ZShfZWwkMywgXCJmaWxsXCIsIF9wJC5fdiQzID0gX3YkMyk7XG4gICAgICAgIHJldHVybiBfcCQ7XG4gICAgICB9LCB7XG4gICAgICAgIF92JDogdm9pZCAwLFxuICAgICAgICBfdiQyOiB2b2lkIDAsXG4gICAgICAgIF92JDM6IHZvaWQgMFxuICAgICAgfSk7XG4gICAgICByZXR1cm4gX2VsJDtcbiAgICB9KSgpIDogKCgpID0+IHtcbiAgICAgIGNvbnN0IF9jJDIgPSBjcmVhdGVNZW1vKCgpID0+IHNpemUoKSA9PT0gXCJzXCIpO1xuICAgICAgcmV0dXJuICgpID0+IF9jJDIoKSA/ICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IF9lbCQ0ID0gX3RtcGwkMiQyLmNsb25lTm9kZSh0cnVlKSwgX2VsJDUgPSBfZWwkNC5maXJzdENoaWxkLCBfZWwkNiA9IF9lbCQ1Lm5leHRTaWJsaW5nO1xuICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgIGNvbnN0IF92JDQgPSBwcm9wcy5jbGFzcywgX3YkNSA9IGZpbGwoKSwgX3YkNiA9IHRoZW1lLmNvbG9ycy5jb25zdGFudC53aGl0ZTtcbiAgICAgICAgICBfdiQ0ICE9PSBfcCQuX3YkNCAmJiBzZXRBdHRyaWJ1dGUoX2VsJDQsIFwiY2xhc3NcIiwgX3AkLl92JDQgPSBfdiQ0KTtcbiAgICAgICAgICBfdiQ1ICE9PSBfcCQuX3YkNSAmJiBzZXRBdHRyaWJ1dGUoX2VsJDUsIFwiZmlsbFwiLCBfcCQuX3YkNSA9IF92JDUpO1xuICAgICAgICAgIF92JDYgIT09IF9wJC5fdiQ2ICYmIHNldEF0dHJpYnV0ZShfZWwkNiwgXCJzdHJva2VcIiwgX3AkLl92JDYgPSBfdiQ2KTtcbiAgICAgICAgICByZXR1cm4gX3AkO1xuICAgICAgICB9LCB7XG4gICAgICAgICAgX3YkNDogdm9pZCAwLFxuICAgICAgICAgIF92JDU6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ2OiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBfZWwkNDtcbiAgICAgIH0pKCkgOiAoKCkgPT4ge1xuICAgICAgICBjb25zdCBfZWwkNyA9IF90bXBsJDMkMS5jbG9uZU5vZGUodHJ1ZSksIF9lbCQ4ID0gX2VsJDcuZmlyc3RDaGlsZCwgX2VsJDkgPSBfZWwkOC5uZXh0U2libGluZztcbiAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgICBjb25zdCBfdiQ3ID0gcHJvcHMuY2xhc3MsIF92JDggPSBmaWxsKCksIF92JDkgPSB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGU7XG4gICAgICAgICAgX3YkNyAhPT0gX3AkLl92JDcgJiYgc2V0QXR0cmlidXRlKF9lbCQ3LCBcImNsYXNzXCIsIF9wJC5fdiQ3ID0gX3YkNyk7XG4gICAgICAgICAgX3YkOCAhPT0gX3AkLl92JDggJiYgc2V0QXR0cmlidXRlKF9lbCQ4LCBcImZpbGxcIiwgX3AkLl92JDggPSBfdiQ4KTtcbiAgICAgICAgICBfdiQ5ICE9PSBfcCQuX3YkOSAmJiBzZXRBdHRyaWJ1dGUoX2VsJDksIFwiZmlsbFwiLCBfcCQuX3YkOSA9IF92JDkpO1xuICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgIH0sIHtcbiAgICAgICAgICBfdiQ3OiB2b2lkIDAsXG4gICAgICAgICAgX3YkODogdm9pZCAwLFxuICAgICAgICAgIF92JDk6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9lbCQ3O1xuICAgICAgfSkoKTtcbiAgICB9KSgpO1xuICB9KSgpKTtcbn07XG5jb25zdCBfdG1wbCQkbSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiMjRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48cGF0aCBkPVwiTTE1LjU1IDUuODUxMjNDMTguOTQ1OSA3LjgxMTg0IDIwLjEwOTQgMTIuMTU0MSAxOC4xNDg4IDE1LjU1QzE2LjE4ODIgMTguOTQ1OSAxMS44NDU5IDIwLjEwOTQgOC40NDk5OCAxOC4xNDg4QzguMDE5NTIgMTcuOTAwMyA3LjQ2OTA5IDE4LjA0NzggNy4yMjA1NiAxOC40NzgyQzYuOTcyMDMgMTguOTA4NyA3LjExOTUyIDE5LjQ1OTEgNy41NDk5OCAxOS43MDc2QzExLjgwNjggMjIuMTY1MyAxNy4yNDk5IDIwLjcwNjggMTkuNzA3NiAxNi40NUMyMi4xNjUzIDEyLjE5MzIgMjAuNzA2OCA2Ljc1MDA1IDE2LjQ1IDQuMjkyMzlDMTIuMTkzMiAxLjgzNDcyIDYuNzUwMDMgMy4yOTMyMSA0LjI5MjM2IDcuNTUwMDFDNC4wNDM4MyA3Ljk4MDQ3IDQuMTkxMzIgOC41MzA5MSA0LjYyMTc4IDguNzc5NDNDNS4wNTIyNCA5LjAyNzk2IDUuNjAyNjggOC44ODA0OCA1Ljg1MTIgOC40NTAwMUM3LjgxMTgxIDUuMDU0MTMgMTIuMTU0MSAzLjg5MDYyIDE1LjU1IDUuODUxMjNaXCI+PC9wYXRoPjwvc3ZnPmApLCBfdG1wbCQyJDEgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCI0NFwiIGhlaWdodD1cIjQ0XCIgdmlld0JveD1cIjAgMCA0NCA0NFwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTIyIDIuOTk5NTFDMTEuNTA2NiAyLjk5OTUxIDMgMTEuNTA2MSAzIDIxLjk5OTVDMyAzMi40OTI5IDExLjUwNjYgNDAuOTk5NSAyMiA0MC45OTk1QzIyLjgyODQgNDAuOTk5NSAyMy41IDQxLjY3MTEgMjMuNSA0Mi40OTk1QzIzLjUgNDMuMzI3OSAyMi44Mjg0IDQzLjk5OTUgMjIgNDMuOTk5NUM5Ljg0OTc0IDQzLjk5OTUgMCAzNC4xNDk4IDAgMjEuOTk5NUMwIDkuODQ5MjUgOS44NDk3NCAtMC4wMDA0ODgyODEgMjIgLTAuMDAwNDg4MjgxQzM0LjE1MDMgLTAuMDAwNDg4MjgxIDQ0IDkuODQ5MjUgNDQgMjEuOTk5NUM0NCAyMi44Mjc5IDQzLjMyODQgMjMuNDk5NSA0Mi41IDIzLjQ5OTVDNDEuNjcxNiAyMy40OTk1IDQxIDIyLjgyNzkgNDEgMjEuOTk5NUM0MSAxMS41MDYxIDMyLjQ5MzQgMi45OTk1MSAyMiAyLjk5OTUxWlwiPjwvcGF0aD48L3N2Zz5gKSwgX3RtcGwkMyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiNzJcIiBoZWlnaHQ9XCI3MlwiIHZpZXdCb3g9XCIwIDAgNzIgNzJcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48cGF0aCBkPVwiTTI0IDU2Ljc4NDZDMzUuNDc5IDYzLjQxMiA1MC4xNTcyIDU5LjQ3OSA1Ni43ODQ2IDQ3Ljk5OTlDNjMuNDEyIDM2LjUyMDkgNTkuNDc5IDIxLjg0MjcgNDggMTUuMjE1M0MzNi41MjEgOC41ODc5MSAyMS44NDI4IDEyLjUyMDkgMTUuMjE1NCAyMy45OTk5XCIgc3Ryb2tlLXdpZHRoPVwiNFwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2UtbGluZWpvaW49XCJyb3VuZFwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IExvYWRlckljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBzaXplID0gKCkgPT4gcHJvcHMuc2l6ZSB8fCBcInhzXCI7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnRlcnRpYXJ5O1xuICBjb25zdCByb3RhdGVBbmltYXRpb24gPSBoYFxuICAgICAgICAwJSB7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgICAgIH1cbiAgICAgICAgMTAwJSB7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICAgICAgfVxuICAgIGA7XG4gIGNvbnN0IHN2Z0NsYXNzID0gdWBcbiAgICAgICAgYW5pbWF0aW9uOiAke3JvdGF0ZUFuaW1hdGlvbn0gMXMgbGluZWFyIGluZmluaXRlO1xuICAgIGA7XG4gIHJldHVybiBjcmVhdGVNZW1vKCgoKSA9PiB7XG4gICAgY29uc3QgX2MkID0gY3JlYXRlTWVtbygoKSA9PiBzaXplKCkgPT09IFwieHNcIik7XG4gICAgcmV0dXJuICgpID0+IF9jJCgpID8gKCgpID0+IHtcbiAgICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkbS5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgY29uc3QgX3YkID0gY24oc3ZnQ2xhc3MsIHByb3BzLmNsYXNzKSwgX3YkMiA9IGZpbGwoKTtcbiAgICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImNsYXNzXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgICByZXR1cm4gX3AkO1xuICAgICAgfSwge1xuICAgICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgICAgX3YkMjogdm9pZCAwXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBfZWwkO1xuICAgIH0pKCkgOiAoKCkgPT4ge1xuICAgICAgY29uc3QgX2MkMiA9IGNyZWF0ZU1lbW8oKCkgPT4gc2l6ZSgpID09PSBcInNcIik7XG4gICAgICByZXR1cm4gKCkgPT4gX2MkMigpID8gKCgpID0+IHtcbiAgICAgICAgY29uc3QgX2VsJDMgPSBfdG1wbCQyJDEuY2xvbmVOb2RlKHRydWUpLCBfZWwkNCA9IF9lbCQzLmZpcnN0Q2hpbGQ7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgICAgY29uc3QgX3YkMyA9IGNuKHN2Z0NsYXNzLCBwcm9wcy5jbGFzcyksIF92JDQgPSBmaWxsKCk7XG4gICAgICAgICAgX3YkMyAhPT0gX3AkLl92JDMgJiYgc2V0QXR0cmlidXRlKF9lbCQzLCBcImNsYXNzXCIsIF9wJC5fdiQzID0gX3YkMyk7XG4gICAgICAgICAgX3YkNCAhPT0gX3AkLl92JDQgJiYgc2V0QXR0cmlidXRlKF9lbCQ0LCBcImZpbGxcIiwgX3AkLl92JDQgPSBfdiQ0KTtcbiAgICAgICAgICByZXR1cm4gX3AkO1xuICAgICAgICB9LCB7XG4gICAgICAgICAgX3YkMzogdm9pZCAwLFxuICAgICAgICAgIF92JDQ6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9lbCQzO1xuICAgICAgfSkoKSA6ICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IF9lbCQ1ID0gX3RtcGwkMy5jbG9uZU5vZGUodHJ1ZSksIF9lbCQ2ID0gX2VsJDUuZmlyc3RDaGlsZDtcbiAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgICBjb25zdCBfdiQ1ID0gY24oc3ZnQ2xhc3MsIHByb3BzLmNsYXNzKSwgX3YkNiA9IGZpbGwoKTtcbiAgICAgICAgICBfdiQ1ICE9PSBfcCQuX3YkNSAmJiBzZXRBdHRyaWJ1dGUoX2VsJDUsIFwiY2xhc3NcIiwgX3AkLl92JDUgPSBfdiQ1KTtcbiAgICAgICAgICBfdiQ2ICE9PSBfcCQuX3YkNiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDYsIFwic3Ryb2tlXCIsIF9wJC5fdiQ2ID0gX3YkNik7XG4gICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgfSwge1xuICAgICAgICAgIF92JDU6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ2OiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBfZWwkNTtcbiAgICAgIH0pKCk7XG4gICAgfSkoKTtcbiAgfSkoKSk7XG59O1xuY29uc3QgX3RtcGwkJGwgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjE1OFwiIGhlaWdodD1cIjI4XCIgdmlld0JveD1cIjAgMCAxNTggMjhcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMjggMTQuMDAxQzI4IDIxLjczMyAyMS43MzIgMjguMDAxIDE0IDI4LjAwMUM2LjI2ODAxIDI4LjAwMSAwIDIxLjczMyAwIDE0LjAwMUMwIDYuMjY4OTkgNi4yNjgwMSAwLjAwMDk3NjU2MiAxNCAwLjAwMDk3NjU2MkMyMS43MzIgMC4wMDA5NzY1NjIgMjggNi4yNjg5OSAyOCAxNC4wMDFaTTkuMjE5MzEgOC4wMDA5OEgxOC43ODAxSDE4Ljc4MTNDMjAuNTM4IDguMDAwOTggMjEuNjUyMiA5Ljg5OTY2IDIwLjc2OTEgMTEuNDMwMkwxNC44NjcyIDIxLjY1NzZDMTQuNDgyMiAyMi4zMjU0IDEzLjUxNzIgMjIuMzI1NCAxMy4xMzIyIDIxLjY1NzZMNy4yMzE1OCAxMS40MzAyQzYuMzQ3MjEgOS44OTcyNiA3LjQ2MTQgOC4wMDA5OCA5LjIxOTMxIDguMDAwOThaTTEzLjEyNjIgMTguNTg4MlY5Ljc0ODA2SDkuMjE4MTFDOC43ODk3NiA5Ljc0ODA2IDguNTM3MDggMTAuMjAyOSA4Ljc0MTYzIDEwLjU1NzhMMTEuODQyMyAxNi4xMDM1TDEzLjEyNjIgMTguNTg4MlpNMTYuMTU1OSAxNi4xMDQ3TDE5LjI1NTQgMTAuNTU2NkMxOS40NTk5IDEwLjIwMTcgMTkuMjA3MyA5Ljc0Njg1IDE4Ljc3ODkgOS43NDY4NUgxNC44NzA5VjE4LjU5MDZMMTYuMTU1OSAxNi4xMDQ3WlwiIGZpbGw9XCIjMDA5OEVBXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMTguNzgwMiA4LjAwMDk4SDkuMjE5MzZDNy40NjE0NSA4LjAwMDk4IDYuMzQ3MjcgOS44OTcyNiA3LjIzMTY0IDExLjQzMDJMMTMuMTMyMiAyMS42NTc2QzEzLjUxNzMgMjIuMzI1NCAxNC40ODIzIDIyLjMyNTQgMTQuODY3MyAyMS42NTc2TDIwLjc2OTEgMTEuNDMwMkMyMS42NTIzIDkuODk5NjYgMjAuNTM4MSA4LjAwMDk4IDE4Ljc4MTQgOC4wMDA5OEgxOC43ODAyWk0xMy4xMjc0IDE4LjU5MDZMMTEuODQyNCAxNi4xMDM1TDguNzQxNjggMTAuNTU3OEM4LjUzNzE0IDEwLjIwMjkgOC43ODk4MSA5Ljc0ODA2IDkuMjE4MTYgOS43NDgwNkgxMy4xMjYyVjE4LjU5MThMMTMuMTI3NCAxOC41OTA2Wk0xOS4yNTU1IDEwLjU1NjZMMTYuMTU2IDE2LjEwNDdMMTQuODcwOSAxOC41OTA2VjkuNzQ2ODVIMTguNzc5QzE5LjIwNzMgOS43NDY4NSAxOS40NiAxMC4yMDE3IDE5LjI1NTUgMTAuNTU2NlpcIiBmaWxsPVwid2hpdGVcIj48L3BhdGg+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTUxLjc0ODMgMjIuMTk2N0M1NS43MTgyIDIyLjE5NjcgNTguOTYwOSAxOC45NTQgNTguOTYwOSAxNC45ODQxQzU4Ljk2MDkgMTEuMDE0MiA1NS43MTgyIDcuNzcxNDggNTEuNzQ4MyA3Ljc3MTQ4QzQ3Ljc1ODggNy43NzE0OCA0NC41MzU3IDExLjAxNDIgNDQuNTM1NyAxNC45ODQxQzQ0LjUzNTcgMTguOTU0IDQ3Ljc1ODggMjIuMTk2NyA1MS43NDgzIDIyLjE5NjdaTTUxLjc0ODMgMTkuMTcwMkM0OS40Njg2IDE5LjE3MDIgNDcuNjgwMiAxNy4yNDQyIDQ3LjY4MDIgMTQuOTg0MUM0Ny42ODAyIDEyLjcyNCA0OS40Njg2IDEwLjc5OCA1MS43NDgzIDEwLjc5OEM1NC4wMDg0IDEwLjc5OCA1NS43OTY4IDEyLjcyNCA1NS43OTY4IDE0Ljk4NDFDNTUuNzk2OCAxNy4yNDQyIDU0LjAwODQgMTkuMTcwMiA1MS43NDgzIDE5LjE3MDJaTTM3LjA2OTggMjEuOTYwOUg0MC4yMTQyVjEwLjk5NDZINDQuMjg0M1Y4LjAwNzMySDMzVjEwLjk5NDZIMzcuMDY5OFYyMS45NjA5Wk02OS45Mzc5IDguMDA3MzJINzMuMDgyM1YyMS45NjA5SDcwLjM4OTlMNjMuNTkgMTMuMzMzM1YyMS45NjA5SDYwLjQ2NTJWOC4wMDczMkg2My4xNTc2TDY5LjkzNzkgMTYuNjE1M1Y4LjAwNzMyWk03OS4yMjU5IDE0Ljk4ODdDNzkuMjI1OSAxMC45MjAyIDgyLjM1MSA3Ljc3NTM5IDg2LjQ5ODIgNy43NzUzOUM4OS44NTkyIDcuNzc1MzkgOTIuNTUxOSA5Ljk1NzA5IDkzLjIyMDIgMTIuNjg5MUg5MC43NDM3QzkwLjE1NCAxMS4wOTcxIDg4LjQ2MzcgOS45OTY0IDg2LjQ5ODIgOS45OTY0QzgzLjU4OTMgOS45OTY0IDgxLjU0NTIgMTIuMTc4MSA4MS41NDUyIDE0Ljk4ODdDODEuNTQ1MiAxNy43OTk0IDgzLjU4OTMgMTkuOTgxMSA4Ni40OTgyIDE5Ljk4MTFDODguNDYzNyAxOS45ODExIDkwLjE1NCAxOC44ODA0IDkwLjc0MzcgMTcuMjg4NEg5My4yMjAyQzkyLjU1MTkgMjAuMDIwNCA4OS44NTkyIDIyLjIwMjEgODYuNDk4MiAyMi4yMDIxQzgyLjM1MSAyMi4yMDIxIDc5LjIyNTkgMTkuMDU3MyA3OS4yMjU5IDE0Ljk4ODdaTTEwNC41ODQgMTcuMDUyNUMxMDQuNTg0IDE5LjkwMjUgMTAyLjM0MyAyMi4xNjI4IDk5LjQzNDIgMjIuMTYyOEM5Ni41MjUzIDIyLjE2MjggOTQuMjg0NiAxOS45MDI1IDk0LjI4NDYgMTcuMDUyNUM5NC4yODQ2IDE0LjIwMjUgOTYuNTI1MyAxMS45NDIyIDk5LjQzNDIgMTEuOTQyMkMxMDIuMzQzIDExLjk0MjIgMTA0LjU4NCAxNC4yMDI1IDEwNC41ODQgMTcuMDUyNVpNOTYuNDY2MyAxNy4wNTI1Qzk2LjQ2NjMgMTguODAxOCA5Ny42ODQ5IDIwLjE1OCA5OS40MzQyIDIwLjE1OEMxMDEuMTY0IDIwLjE1OCAxMDIuMzgyIDE4LjgwMTggMTAyLjM4MiAxNy4wNTI1QzEwMi4zODIgMTUuMzAzMiAxMDEuMTY0IDEzLjk0NyA5OS40MzQyIDEzLjk0N0M5Ny42ODQ5IDEzLjk0NyA5Ni40NjYzIDE1LjMwMzIgOTYuNDY2MyAxNy4wNTI1Wk0xMDguNjI2IDEyLjEzODhIMTA2LjQ2M1YyMS45NjYySDEwOC42MjZWMTcuMTMxMUMxMDguNjI2IDE1LjAyODEgMTA5LjcyNiAxMy45MDc3IDExMS4xNjEgMTMuOTA3N0MxMTIuNDE5IDEzLjkwNzcgMTEzLjIwNSAxNC44NTEyIDExMy4yMDUgMTYuNDAzOVYyMS45NjYySDExNS4zNjdWMTYuMDUwMUMxMTUuMzY3IDEzLjU1MzkgMTEzLjg5MyAxMS45NDIyIDExMS42MTMgMTEuOTQyMkMxMTAuMzM1IDExLjk0MjIgMTA5LjIxNSAxMi40OTI2IDEwOC42MjYgMTMuNDc1M1YxMi4xMzg4Wk0xMTcuODM5IDEyLjEzODhIMTIwLjAwMVYxMy40NzUzQzEyMC41OSAxMi40OTI2IDEyMS43MTEgMTEuOTQyMiAxMjIuOTg4IDExLjk0MjJDMTI1LjI2OCAxMS45NDIyIDEyNi43NDIgMTMuNTUzOSAxMjYuNzQyIDE2LjA1MDFWMjEuOTY2MkgxMjQuNThWMTYuNDAzOUMxMjQuNTggMTQuODUxMiAxMjMuNzk0IDEzLjkwNzcgMTIyLjUzNiAxMy45MDc3QzEyMS4xMDEgMTMuOTA3NyAxMjAuMDAxIDE1LjAyODEgMTIwLjAwMSAxNy4xMzExVjIxLjk2NjJIMTE3LjgzOVYxMi4xMzg4Wk0xMzMuNTU4IDIyLjE2MjhDMTM2LjA1NCAyMi4xNjI4IDEzNy44MjMgMjAuNzI4IDEzOC4zNzMgMTguODgwNEgxMzYuMTEzQzEzNS42NjEgMTkuODIzOCAxMzQuNzE3IDIwLjI1NjMgMTMzLjYzNiAyMC4yNTYzQzEzMS44ODcgMjAuMjU2MyAxMzAuNzQ3IDE5LjA3NyAxMzAuNjY4IDE3LjU4MzJIMTM4LjQ5MUMxMzguNjg4IDE0LjI0MTkgMTM2LjU4NSAxMS45NDIyIDEzMy41NzcgMTEuOTQyMkMxMzAuNTUxIDExLjk0MjIgMTI4LjUyNiAxNC4xNDM2IDEyOC41MjYgMTcuMDUyNUMxMjguNTI2IDIwLjAwMDcgMTMwLjYyOSAyMi4xNjI4IDEzMy41NTggMjIuMTYyOFpNMTMwLjc0NyAxNi4wNTAxQzEzMS4wNDIgMTQuNTM2NyAxMzIuMTYyIDEzLjc1MDUgMTMzLjUxOCAxMy43NTA1QzEzNC43MTcgMTMuNzUwNSAxMzUuODM4IDE0LjQ1ODEgMTM2LjE3MiAxNi4wNTAxSDEzMC43NDdaTTE0OS44NTEgMTguMzY5NEMxNDkuMzIgMjAuNTUxMSAxNDcuNDUzIDIyLjE2MjggMTQ0Ljg1OSAyMi4xNjI4QzE0MS44NzEgMjIuMTYyOCAxMzkuNzA5IDE5Ljg4MjggMTM5LjcwOSAxNy4wNTI1QzEzOS43MDkgMTQuMjIyMiAxNDEuODcxIDExLjk0MjIgMTQ0Ljg1OSAxMS45NDIyQzE0Ny40NTMgMTEuOTQyMiAxNDkuMzIgMTMuNTUzOSAxNDkuODUxIDE1LjczNTZIMTQ3LjU3MUMxNDcuMTc4IDE0LjY3NDMgMTQ2LjIxNSAxMy45MDc3IDE0NC44NTkgMTMuOTA3N0MxNDMuMTA5IDEzLjkwNzcgMTQxLjkxIDE1LjIyNDYgMTQxLjkxIDE3LjA1MjVDMTQxLjkxIDE4Ljg4MDQgMTQzLjEwOSAyMC4xOTczIDE0NC44NTkgMjAuMTk3M0MxNDYuMjE1IDIwLjE5NzMgMTQ3LjE3OCAxOS40MzA3IDE0Ny41NzEgMTguMzY5NEgxNDkuODUxWk0xNTUuNzUgMjIuMDY0NUMxNTYuNDE4IDIyLjA2NDUgMTU2LjkyOSAyMS45ODU5IDE1Ny4zNjIgMjEuODQ4M1YxOS45MjIxQzE1Ny4wNDcgMjAuMDQwMSAxNTYuNjE1IDIwLjExODcgMTU2LjIwMiAyMC4xMTg3QzE1NS4wODIgMjAuMTE4NyAxNTQuNTUxIDE5LjY2NjYgMTU0LjU1MSAxOC40NDhWMTQuMDY1SDE1Ny4zNjJWMTIuMTM4OEgxNTQuNTUxVjkuNDA2NzVIMTUyLjM4OVYxMi4xMzg4SDE1MC4zNDVWMTQuMDY1SDE1Mi4zODlWMTguODAxOEMxNTIuMzg5IDIxLjAyMjggMTUzLjg2MyAyMi4wNjQ1IDE1NS43NSAyMi4wNjQ1WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IFRvbkNvbm5lY3RCcmFuZCA9ICgpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gdGhlbWUudGhlbWUgPT09IFRIRU1FLkRBUksgPyB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGUgOiB0aGVtZS5jb2xvcnMuY29uc3RhbnQuYmxhY2s7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkbC5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkLCBfZWwkMyA9IF9lbCQyLm5leHRTaWJsaW5nLCBfZWwkNCA9IF9lbCQzLm5leHRTaWJsaW5nO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDQsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkayA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNNS41NjYwOCA0LjQyNTg0QzUuODI1MjcgMy4zMjE1OCA2LjgxNzYgMi41IDguMDAwMDEgMi41QzkuMzgwNzIgMi41IDEwLjUgMy42MTkyOSAxMC41IDVDMTAuNSA1LjYzMDI2IDEwLjMzOTEgNi4wMzg2IDEwLjEyNjQgNi4zNDQ1NUM5LjkwMDE4IDYuNjY5OTMgOS41ODU2MSA2LjkyNDc4IDkuMTg4NjQgNy4yMDg3N0M5LjEyNTc5IDcuMjUzNzIgOS4wNTg3MyA3LjMwMDI1IDguOTg4NyA3LjM0ODgzQzguMjczOTIgNy44NDQ3MiA3LjI1MDAxIDguNTU1MDcgNy4yNTAwMSAxMFYxMC4yNUM3LjI1MDAxIDEwLjY2NDIgNy41ODU4IDExIDguMDAwMDEgMTFDOC40MTQyMiAxMSA4Ljc1MDAxIDEwLjY2NDIgOC43NTAwMSAxMC4yNVYxMEM4Ljc1MDAxIDkuMzY1MDIgOS4xMDc3NyA5LjEwOTYgOS45NDU1NCA4LjUxMTQ5TDEwLjA2MTQgOC40Mjg3M0MxMC40NzY5IDguMTMxNDcgMTAuOTc0OCA3Ljc1MTk0IDExLjM1OCA3LjIwMDc2QzExLjc1NDcgNi42MzAxNSAxMiA1LjkxOTczIDEyIDVDMTIgMi43OTA4NiAxMC4yMDkxIDEgOC4wMDAwMSAxQzYuMTA1NjQgMSA0LjUyMDUgMi4zMTYxNSA0LjEwNTc3IDQuMDgzMDhDNC4wMTExMiA0LjQ4NjM0IDQuMjYxMjkgNC44ODk5NyA0LjY2NDU0IDQuOTg0NjJDNS4wNjc4IDUuMDc5MjcgNS40NzE0MyA0LjgyOTEgNS41NjYwOCA0LjQyNTg0Wk04LjAwMDAxIDE1QzguNjA3NTIgMTUgOS4xMDAwMSAxNC41MDc1IDkuMTAwMDEgMTMuOUM5LjEwMDAxIDEzLjI5MjUgOC42MDc1MiAxMi44IDguMDAwMDEgMTIuOEM3LjM5MjQ5IDEyLjggNi45MDAwMSAxMy4yOTI1IDYuOTAwMDEgMTMuOUM2LjkwMDAxIDE0LjUwNzUgNy4zOTI0OSAxNSA4LjAwMDAxIDE1WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IFF1ZXN0aW9uSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnNlY29uZGFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRrLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRqID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk05Ljk4MTU2IDguNzVDOS44NDg1NCAxMS40MzI4IDkuMDEyMDYgMTMuNSA4IDEzLjVDNi45ODc5NCAxMy41IDYuMTUxNDYgMTEuNDMyOCA2LjAxODQ0IDguNzVIOS45ODE1NlpNMTEuNDgzMiA4Ljc1QzExLjQyMTcgMTAuMTE1NSAxMS4xOTI5IDExLjM4NjkgMTAuODIzOSAxMi40MDE3QzEwLjc3MzQgMTIuNTQwNSAxMC43MTg4IDEyLjY3ODkgMTAuNjU5NSAxMi44MTU0QzEyLjE0NTQgMTEuOTkzIDEzLjIxMDMgMTAuNTAyOSAxMy40NDkzIDguNzVIMTEuNDgzMlpNMTMuNDQ5MyA3LjI1SDExLjQ4MzJDMTEuNDIxNyA1Ljg4NDUzIDExLjE5MjkgNC42MTMxNCAxMC44MjM5IDMuNTk4M0MxMC43NzM0IDMuNDU5NSAxMC43MTg4IDMuMzIxMTEgMTAuNjU5NSAzLjE4NDU5QzEyLjE0NTQgNC4wMDY5NyAxMy4yMTAzIDUuNDk3MDkgMTMuNDQ5MyA3LjI1Wk05Ljk4MTU2IDcuMjVINi4wMTg0NEM2LjE1MTQ0IDQuNTY3NjQgNi45ODc2OSAyLjUwMDYyIDcuOTk5NTUgMi41SDhDOS4wMTIwNiAyLjUgOS44NDg1NCA0LjU2NzI0IDkuOTgxNTYgNy4yNVpNNC41MTY3OCA3LjI1QzQuNTc4MjYgNS44ODQ1MyA0LjgwNzA2IDQuNjEzMTQgNS4xNzYxIDMuNTk4M0M1LjIyNjU3IDMuNDU5NSA1LjI4MTI0IDMuMzIxMTEgNS4zNDA1IDMuMTg0NTlDMy44NTQ2MyA0LjAwNjk3IDIuNzg5NzIgNS40OTcwOSAyLjU1MDcxIDcuMjVINC41MTY3OFpNMi41NTA3MSA4Ljc1QzIuNzg5NzIgMTAuNTAyOSAzLjg1NDYzIDExLjk5MyA1LjM0MDUgMTIuODE1NEM1LjI4MTI0IDEyLjY3ODkgNS4yMjY1NyAxMi41NDA1IDUuMTc2MSAxMi40MDE3QzQuODA3MDYgMTEuMzg2OSA0LjU3ODI2IDEwLjExNTUgNC41MTY3OCA4Ljc1SDIuNTUwNzFaTTE1IDhDMTUgMTEuODY2IDExLjg2NiAxNSA4IDE1QzQuMTM0MDEgMTUgMSAxMS44NjYgMSA4QzEgNC4xMzQwMSA0LjEzNDAxIDEgOCAxQzExLjg2NiAxIDE1IDQuMTM0MDEgMTUgOFpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBCcm93c2VySWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnByaW1hcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkai5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkaSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMi41IDQuOEMyLjUgMy4xMTk4NCAyLjUgMi4yNzk3NiAyLjgyNjk4IDEuNjM4MDNDMy4xMTQ2IDEuMDczNTQgMy41NzM1NCAwLjYxNDYwMSA0LjEzODAzIDAuMzI2OThDNC43Nzk3NiAwIDUuNjE5ODQgMCA3LjMgMEg4LjdDMTAuMzgwMiAwIDExLjIyMDIgMCAxMS44NjIgMC4zMjY5OEMxMi40MjY1IDAuNjE0NjAxIDEyLjg4NTQgMS4wNzM1NCAxMy4xNzMgMS42MzgwM0MxMy41IDIuMjc5NzYgMTMuNSAzLjExOTg0IDEzLjUgNC44VjExLjJDMTMuNSAxMi44ODAyIDEzLjUgMTMuNzIwMiAxMy4xNzMgMTQuMzYyQzEyLjg4NTQgMTQuOTI2NSAxMi40MjY1IDE1LjM4NTQgMTEuODYyIDE1LjY3M0MxMS4yMjAyIDE2IDEwLjM4MDIgMTYgOC43IDE2SDcuM0M1LjYxOTg0IDE2IDQuNzc5NzYgMTYgNC4xMzgwMyAxNS42NzNDMy41NzM1NCAxNS4zODU0IDMuMTE0NiAxNC45MjY1IDIuODI2OTggMTQuMzYyQzIuNSAxMy43MjAyIDIuNSAxMi44ODAyIDIuNSAxMS4yVjQuOFpNNCAzLjlDNCAzLjA1OTkyIDQgMi42Mzk4OCA0LjE2MzQ5IDIuMzE5MDFDNC4zMDczIDIuMDM2NzcgNC41MzY3NyAxLjgwNzMgNC44MTkwMSAxLjY2MzQ5QzUuMTM5ODggMS41IDUuNTU5OTIgMS41IDYuNCAxLjVIOS42QzEwLjQ0MDEgMS41IDEwLjg2MDEgMS41IDExLjE4MSAxLjY2MzQ5QzExLjQ2MzIgMS44MDczIDExLjY5MjcgMi4wMzY3NyAxMS44MzY1IDIuMzE5MDFDMTIgMi42Mzk4OCAxMiAzLjA1OTkyIDEyIDMuOVYxMi4xQzEyIDEyLjk0MDEgMTIgMTMuMzYwMSAxMS44MzY1IDEzLjY4MUMxMS42OTI3IDEzLjk2MzIgMTEuNDYzMiAxNC4xOTI3IDExLjE4MSAxNC4zMzY1QzEwLjg2MDEgMTQuNSAxMC40NDAxIDE0LjUgOS42IDE0LjVINi40QzUuNTU5OTIgMTQuNSA1LjEzOTg4IDE0LjUgNC44MTkwMSAxNC4zMzY1QzQuNTM2NzcgMTQuMTkyNyA0LjMwNzMgMTMuOTYzMiA0LjE2MzQ5IDEzLjY4MUM0IDEzLjM2MDEgNCAxMi45NDAxIDQgMTIuMVYzLjlaTTcgMi41QzYuNTg1NzkgMi41IDYuMjUgMi44MzU3OSA2LjI1IDMuMjVDNi4yNSAzLjY2NDIxIDYuNTg1NzkgNCA3IDRIOUM5LjQxNDIxIDQgOS43NSAzLjY2NDIxIDkuNzUgMy4yNUM5Ljc1IDIuODM1NzkgOS40MTQyMSAyLjUgOSAyLjVIN1pcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBNb2JpbGVJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24ucHJpbWFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRpLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRoID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xLjUgNi44QzEuNSA1LjExOTg0IDEuNSA0LjI3OTc2IDEuODI2OTggMy42MzgwM0MyLjExNDYgMy4wNzM1NCAyLjU3MzU0IDIuNjE0NiAzLjEzODAzIDIuMzI2OThDMy43Nzk3NiAyIDQuNjE5ODQgMiA2LjMgMkg5LjdDMTEuMzgwMiAyIDEyLjIyMDIgMiAxMi44NjIgMi4zMjY5OEMxMy40MjY1IDIuNjE0NiAxMy44ODU0IDMuMDczNTQgMTQuMTczIDMuNjM4MDNDMTQuNSA0LjI3OTc2IDE0LjUgNS4xMTk4NCAxNC41IDYuOFYxMS41SDE1LjI1QzE1LjY2NDIgMTEuNSAxNiAxMS44MzU4IDE2IDEyLjI1QzE2IDEyLjY2NDIgMTUuNjY0MiAxMyAxNS4yNSAxM0gwLjc1QzAuMzM1Nzg2IDEzIDAgMTIuNjY0MiAwIDEyLjI1QzAgMTEuODM1OCAwLjMzNTc4NiAxMS41IDAuNzUgMTEuNUgxLjVWNi44Wk0zIDExLjVIMTNWNS45QzEzIDUuMDU5OTIgMTMgNC42Mzk4OCAxMi44MzY1IDQuMzE5MDFDMTIuNjkyNyA0LjAzNjc3IDEyLjQ2MzIgMy44MDczIDEyLjE4MSAzLjY2MzQ5QzExLjg2MDEgMy41IDExLjQ0MDEgMy41IDEwLjYgMy41SDUuNEM0LjU1OTkyIDMuNSA0LjEzOTg4IDMuNSAzLjgxOTAxIDMuNjYzNDlDMy41MzY3NyAzLjgwNzMgMy4zMDczIDQuMDM2NzcgMy4xNjM0OSA0LjMxOTAxQzMgNC42Mzk4OCAzIDUuMDU5OTIgMyA1LjlWMTEuNVpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBEZXNrdG9wSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnByaW1hcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkaC5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkZyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjE3XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE3IDE2XCIgZmlsbD1cIm5vbmVcIj48ZyBjbGlwLXBhdGg9XCJ1cmwoI2NsaXAwXzM2NzZfMTYwMylcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMTUuNSAxLjI1MDQ5QzE1LjUgMC44MzYyNzUgMTUuMTY0MiAwLjUwMDQ4OCAxNC43NSAwLjUwMDQ4OEMxNC4zMzU4IDAuNTAwNDg4IDE0IDAuODM2Mjc1IDE0IDEuMjUwNDlWMy42NzAxMkMxMi43MTg3IDIuMDQ0ODcgMTAuNzMxOCAxLjAwMDQ5IDguNSAxLjAwMDQ5QzQuNjM0MDEgMS4wMDA0OSAxLjUgNC4xMzQ1IDEuNSA4LjAwMDQ5QzEuNSAxMS44NjY1IDQuNjM0MDEgMTUuMDAwNSA4LjUgMTUuMDAwNUMxMS42ODQ0IDE1LjAwMDUgMTQuMzcwMyAxMi44NzQ4IDE1LjIxOTkgOS45NjY2MUMxNS4zMzYxIDkuNTY5MDIgMTUuMTA3OSA5LjE1MjU0IDE0LjcxMDMgOS4wMzYzOEMxNC4zMTI3IDguOTIwMjMgMTMuODk2MiA5LjE0ODM4IDEzLjc4MDEgOS41NDU5N0MxMy4xMTIzIDExLjgzMTkgMTEgMTMuNTAwNSA4LjUgMTMuNTAwNUM1LjQ2MjQzIDEzLjUwMDUgMyAxMS4wMzgxIDMgOC4wMDA0OUMzIDQuOTYyOTIgNS40NjI0MyAyLjUwMDQ5IDguNSAyLjUwMDQ5QzEwLjMyMSAyLjUwMDQ5IDExLjkzNjMgMy4zODU1IDEyLjkzNzcgNC43NTA0OUgxMC41QzEwLjA4NTggNC43NTA0OSA5Ljc1IDUuMDg2MjcgOS43NSA1LjUwMDQ5QzkuNzUgNS45MTQ3IDEwLjA4NTggNi4yNTA0OSAxMC41IDYuMjUwNDlIMTQuNzVDMTUuMTY0MiA2LjI1MDQ5IDE1LjUgNS45MTQ3IDE1LjUgNS41MDA0OVYxLjI1MDQ5WlwiPjwvcGF0aD48L2c+PGRlZnM+PGNsaXBQYXRoIGlkPVwiY2xpcDBfMzY3Nl8xNjAzXCI+PHJlY3Qgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgZmlsbD1cIndoaXRlXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAuNSAwLjAwMDQ4ODI4MSlcIj48L3JlY3Q+PC9jbGlwUGF0aD48L2RlZnM+PC9zdmc+YCk7XG5jb25zdCBSZXRyeUljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuYWNjZW50O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGcuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZCwgX2VsJDMgPSBfZWwkMi5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDMsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkZiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMTMgNC4wNjExOVY2Ljc1MDUzQzEzIDcuMTY0NzQgMTMuMzM1OCA3LjUwMDUzIDEzLjc1IDcuNTAwNTNDMTQuMTY0MiA3LjUwMDUzIDE0LjUgNy4xNjQ3NCAxNC41IDYuNzUwNTNWMi43NTA1M0wxNC41IDIuNzI4MDdDMTQuNTAwMSAyLjYzMTkxIDE0LjUwMDMgMi40OTYyNyAxNC40ODQyIDIuMzc2MjdDMTQuNDYzOCAyLjIyNTAzIDE0LjQwNjMgMS45OTI2MSAxNC4yMDcxIDEuNzkzNDJDMTQuMDA3OSAxLjU5NDIzIDEzLjc3NTUgMS41MzY3IDEzLjYyNDMgMS41MTYzN0MxMy41MDQzIDEuNTAwMjMgMTMuMzY4NiAxLjUwMDM5IDEzLjI3MjUgMS41MDA1MUwxMy4yNSAxLjUwMDUzSDkuMjVDOC44MzU3OSAxLjUwMDUzIDguNSAxLjgzNjMxIDguNSAyLjI1MDUzQzguNSAyLjY2NDc0IDguODM1NzkgMy4wMDA1MyA5LjI1IDMuMDAwNTNIMTEuOTM5M0w3LjIxOTY3IDcuNzIwMkM2LjkyNjc4IDguMDEzMDkgNi45MjY3OCA4LjQ4Nzk2IDcuMjE5NjcgOC43ODA4NkM3LjUxMjU2IDkuMDczNzUgNy45ODc0NCA5LjA3Mzc1IDguMjgwMzMgOC43ODA4NkwxMyA0LjA2MTE5Wk01Ljg1IDEuNTAwNTNINS44MTkwM0g1LjgxODk5QzUuMjE1MjggMS41MDA1MiA0LjcxNzAyIDEuNTAwNTEgNC4zMTExMyAxLjUzMzY3QzMuODg5NTYgMS41NjgxMiAzLjUwMjAzIDEuNjQyMDQgMy4xMzgwMyAxLjgyNzUxQzIuNTczNTQgMi4xMTUxMyAyLjExNDYgMi41NzQwNyAxLjgyNjk4IDMuMTM4NTZDMS42NDE1MSAzLjUwMjU2IDEuNTY3NTkgMy44OTAwOSAxLjUzMzE1IDQuMzExNjZDMS40OTk5OCA0LjcxNzU1IDEuNDk5OTkgNS4yMTU4MSAxLjUgNS44MTk1M1Y1LjgxOTU1VjUuODUwNTNWMTAuMTUwNVYxMC4xODE1VjEwLjE4MTVDMS40OTk5OSAxMC43ODUyIDEuNDk5OTggMTEuMjgzNSAxLjUzMzE1IDExLjY4OTRDMS41Njc1OSAxMi4xMTEgMS42NDE1MSAxMi40OTg1IDEuODI2OTggMTIuODYyNUMyLjExNDYgMTMuNDI3IDIuNTczNTQgMTMuODg1OSAzLjEzODAzIDE0LjE3MzVDMy41MDIwMyAxNC4zNTkgMy44ODk1NiAxNC40MzI5IDQuMzExMTMgMTQuNDY3NEM0LjcxNzAyIDE0LjUwMDUgNS4yMTUyNyAxNC41MDA1IDUuODE4OTcgMTQuNTAwNUg1LjgxOTAxSDUuODVIMTAuMTVIMTAuMTgxSDEwLjE4MUMxMC43ODQ3IDE0LjUwMDUgMTEuMjgzIDE0LjUwMDUgMTEuNjg4OSAxNC40Njc0QzEyLjExMDQgMTQuNDMyOSAxMi40OTggMTQuMzU5IDEyLjg2MiAxNC4xNzM1QzEzLjQyNjUgMTMuODg1OSAxMy44ODU0IDEzLjQyNyAxNC4xNzMgMTIuODYyNUMxNC4zNTg1IDEyLjQ5ODUgMTQuNDMyNCAxMi4xMTEgMTQuNDY2OSAxMS42ODk0QzE0LjUgMTEuMjgzNSAxNC41IDEwLjc4NTMgMTQuNSAxMC4xODE2VjEwLjE4MTVWMTAuMTUwNVY5Ljc1MDUzQzE0LjUgOS4zMzYzMSAxNC4xNjQyIDkuMDAwNTMgMTMuNzUgOS4wMDA1M0MxMy4zMzU4IDkuMDAwNTMgMTMgOS4zMzYzMSAxMyA5Ljc1MDUzVjEwLjE1MDVDMTMgMTAuNzkzIDEyLjk5OTQgMTEuMjI5NyAxMi45NzE4IDExLjU2NzJDMTIuOTQ1IDExLjg5NjEgMTIuODk2MyAxMi4wNjQyIDEyLjgzNjUgMTIuMTgxNUMxMi42OTI3IDEyLjQ2MzggMTIuNDYzMiAxMi42OTMyIDEyLjE4MSAxMi44MzdDMTIuMDYzNyAxMi44OTY4IDExLjg5NTUgMTIuOTQ1NSAxMS41NjY3IDEyLjk3MjRDMTEuMjI5MiAxMi45OTk5IDEwLjc5MjQgMTMuMDAwNSAxMC4xNSAxMy4wMDA1SDUuODVDNS4yMDc1NyAxMy4wMDA1IDQuNzcwODUgMTIuOTk5OSA0LjQzMzI4IDEyLjk3MjRDNC4xMDQ0NyAxMi45NDU1IDMuOTM2MzIgMTIuODk2OCAzLjgxOTAyIDEyLjgzN0MzLjUzNjc3IDEyLjY5MzIgMy4zMDczIDEyLjQ2MzggMy4xNjM0OSAxMi4xODE1QzMuMTAzNzIgMTIuMDY0MiAzLjA1NTAzIDExLjg5NjEgMy4wMjgxNiAxMS41NjcyQzMuMDAwNTggMTEuMjI5NyAzIDEwLjc5MyAzIDEwLjE1MDVWNS44NTA1M0MzIDUuMjA4MDkgMy4wMDA1OCA0Ljc3MTM3IDMuMDI4MTYgNC40MzM4MUMzLjA1NTAzIDQuMTA0OTkgMy4xMDM3MiAzLjkzNjg0IDMuMTYzNDkgMy44MTk1NEMzLjMwNzMgMy41MzczIDMuNTM2NzcgMy4zMDc4MyAzLjgxOTAyIDMuMTY0MDJDMy45MzYzMiAzLjEwNDI1IDQuMTA0NDcgMy4wNTU1NiA0LjQzMzI4IDMuMDI4NjlDNC43NzA4NSAzLjAwMTExIDUuMjA3NTcgMy4wMDA1MyA1Ljg1IDMuMDAwNTNINi4yNUM2LjY2NDIyIDMuMDAwNTMgNyAyLjY2NDc0IDcgMi4yNTA1M0M3IDEuODM2MzEgNi42NjQyMiAxLjUwMDUzIDYuMjUgMS41MDA1M0g1Ljg1WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IExpbmtJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmFjY2VudDtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRmLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRlID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTdcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTcgMTZcIiBmaWxsPVwibm9uZVwiPjxnIGNsaXAtcGF0aD1cInVybCgjY2xpcDBfMzY3Nl8xMjc0KVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xLjgyNjk4IDIuNjM5MDFDMS41IDMuMjgwNzQgMS41IDQuMTIwODIgMS41IDUuODAwOThWOC44MDA5OFY5LjAwMDk4VjEwLjIwMUMxLjUgMTEuODgxMSAxLjUgMTIuNzIxMiAxLjgyNjk4IDEzLjM2MjlDMi4xMTQ2IDEzLjkyNzQgMi41NzM1NCAxNC4zODY0IDMuMTM4MDMgMTQuNjc0QzMuNzc5NzYgMTUuMDAxIDQuNjE5ODQgMTUuMDAxIDYuMyAxNS4wMDFIMTEuN0MxMy4zODAyIDE1LjAwMSAxNC4yMjAyIDE1LjAwMSAxNC44NjIgMTQuNjc0QzE1LjQyNjUgMTQuMzg2NCAxNS44ODU0IDEzLjkyNzQgMTYuMTczIDEzLjM2MjlDMTYuNSAxMi43MjEyIDE2LjUgMTEuODgxMSAxNi41IDEwLjIwMVY4LjgwMDk4QzE2LjUgNy4xMjA4MiAxNi41IDYuMjgwNzQgMTYuMTczIDUuNjM5MDFDMTUuODg1NCA1LjA3NDUyIDE1LjQyNjUgNC42MTU1OCAxNC44NjIgNC4zMjc5NkMxNC43NDMgNC4yNjczMyAxNC42MTcyIDQuMjE3OTUgMTQuNDgwNSA0LjE3NzcyQzE0LjQ1MDEgMy40OTQ0OSAxNC4zNzIyIDMuMDI5OTQgMTQuMTczIDIuNjM5MDFDMTMuODg1NCAyLjA3NDUyIDEzLjQyNjUgMS42MTU1OCAxMi44NjIgMS4zMjc5NkMxMi4yMjAyIDEuMDAwOTggMTEuMzgwMiAxLjAwMDk4IDkuNyAxLjAwMDk4SDYuM0M0LjYxOTg0IDEuMDAwOTggMy43Nzk3NiAxLjAwMDk4IDMuMTM4MDMgMS4zMjc5NkMyLjU3MzU0IDEuNjE1NTggMi4xMTQ2IDIuMDc0NTIgMS44MjY5OCAyLjYzOTAxWk0xMi45ODYxIDQuMDA5NDJDMTIuOTY4NCAzLjcxMDggMTIuOTI4MSAzLjQ5OTgyIDEyLjgzNjUgMy4zMTk5OUMxMi42OTI3IDMuMDM3NzUgMTIuNDYzMiAyLjgwODI4IDEyLjE4MSAyLjY2NDQ3QzExLjg2MDEgMi41MDA5OCAxMS40NDAxIDIuNTAwOTggMTAuNiAyLjUwMDk4SDUuNEM0LjU1OTkyIDIuNTAwOTggNC4xMzk4OCAyLjUwMDk4IDMuODE5MDEgMi42NjQ0N0MzLjUzNjc3IDIuODA4MjggMy4zMDczIDMuMDM3NzUgMy4xNjM0OSAzLjMxOTk5QzMuMDM2MTUgMy41Njk5MSAzLjAwNzk5IDMuODggMy4wMDE3NyA0LjQwMTg4QzMuMDQ2NDYgNC4zNzYxMiAzLjA5MTg5IDQuMzUxNDYgMy4xMzgwMyA0LjMyNzk2QzMuNzc5NzYgNC4wMDA5OCA0LjYxOTg0IDQuMDAwOTggNi4zIDQuMDAwOThIMTEuN0MxMi4xOTY2IDQuMDAwOTggMTIuNjE5NyA0LjAwMDk4IDEyLjk4NjEgNC4wMDk0MlpNMyA3LjkwMDk4VjguMTAwOThDMyA4LjQ3NDY4IDMgOC43NjUyNyAzLjAxNDM5IDkuMDAwOThIM1YxMS4xMDFDMyAxMS45NDExIDMgMTIuMzYxMSAzLjE2MzQ5IDEyLjY4MkMzLjMwNzMgMTIuOTY0MiAzLjUzNjc3IDEzLjE5MzcgMy44MTkwMSAxMy4zMzc1QzQuMTM5ODggMTMuNTAxIDQuNTU5OTIgMTMuNTAxIDUuNCAxMy41MDFIMTIuNkMxMy40NDAxIDEzLjUwMSAxMy44NjAxIDEzLjUwMSAxNC4xODEgMTMuMzM3NUMxNC40NjMyIDEzLjE5MzcgMTQuNjkyNyAxMi45NjQyIDE0LjgzNjUgMTIuNjgyQzE1IDEyLjM2MTEgMTUgMTEuOTQxMSAxNSAxMS4xMDFWNy45MDA5OEMxNSA3LjA2MDkgMTUgNi42NDA4NiAxNC44MzY1IDYuMzE5OTlDMTQuNjkyNyA2LjAzNzc1IDE0LjQ2MzIgNS44MDgyOCAxNC4xODEgNS42NjQ0N0MxMy44NjAxIDUuNTAwOTggMTMuNDQwMSA1LjUwMDk4IDEyLjYgNS41MDA5OEg1LjRDNC41NTk5MiA1LjUwMDk4IDQuMTM5ODggNS41MDA5OCAzLjgxOTAxIDUuNjY0NDdDMy41MzY3NyA1LjgwODI4IDMuMzA3MyA2LjAzNzc1IDMuMTYzNDkgNi4zMTk5OUMzIDYuNjQwODYgMyA3LjA2MDkgMyA3LjkwMDk4Wk0xMC41IDkuNzUwOThDMTAuNSA5LjMzNjc2IDEwLjgzNTggOS4wMDA5OCAxMS4yNSA5LjAwMDk4SDEyLjc1QzEzLjE2NDIgOS4wMDA5OCAxMy41IDkuMzM2NzYgMTMuNSA5Ljc1MDk4QzEzLjUgMTAuMTY1MiAxMy4xNjQyIDEwLjUwMSAxMi43NSAxMC41MDFIMTEuMjVDMTAuODM1OCAxMC41MDEgMTAuNSAxMC4xNjUyIDEwLjUgOS43NTA5OFpcIj48L3BhdGg+PC9nPjxkZWZzPjxjbGlwUGF0aCBpZD1cImNsaXAwXzM2NzZfMTI3NFwiPjxyZWN0IHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIGZpbGw9XCJ3aGl0ZVwiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLjUgMC4wMDA5NzY1NjIpXCI+PC9yZWN0PjwvY2xpcFBhdGg+PC9kZWZzPjwvc3ZnPmApO1xuY29uc3QgV2FsbGV0SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5hY2NlbnQ7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkZS5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkLCBfZWwkMyA9IF9lbCQyLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMywgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRkID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiNDhcIiBoZWlnaHQ9XCI0OFwiIHZpZXdCb3g9XCIwIDAgNDggNDhcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0zOS42MzE5IDE2Ljg3MTlDMzguMzIxMiAxNi4yMDQxIDM2LjcwMDIgMTYuMDQ3OCAzNCAxNi4wMTEyVjExQzM0IDUuNDc3MTUgMjkuNTIyOCAxIDI0IDFDMTguNDc3MiAxIDE0IDUuNDc3MTUgMTQgMTFWMTYuMDExMkMxMS4yOTk4IDE2LjA0NzggOS42Nzg4IDE2LjIwNDEgOC4zNjgwOCAxNi44NzE5QzYuODYyNzggMTcuNjM4OSA1LjYzODkzIDE4Ljg2MjggNC44NzE5NSAyMC4zNjgxQzQgMjIuMDc5NCA0IDI0LjMxOTYgNCAyOC44VjMyLjJDNCAzNi42ODA0IDQgMzguOTIwNiA0Ljg3MTk1IDQwLjYzMTlDNS42Mzg5MyA0Mi4xMzcyIDYuODYyNzggNDMuMzYxMSA4LjM2ODA4IDQ0LjEyODFDMTAuMDc5NCA0NSAxMi4zMTk2IDQ1IDE2LjggNDVIMzEuMkMzNS42ODA0IDQ1IDM3LjkyMDYgNDUgMzkuNjMxOSA0NC4xMjgxQzQxLjEzNzIgNDMuMzYxMSA0Mi4zNjExIDQyLjEzNzIgNDMuMTI4MSA0MC42MzE5QzQ0IDM4LjkyMDYgNDQgMzYuNjgwNCA0NCAzMi4yVjI4LjhDNDQgMjQuMzE5NiA0NCAyMi4wNzk0IDQzLjEyODEgMjAuMzY4MUM0Mi4zNjExIDE4Ljg2MjggNDEuMTM3MiAxNy42Mzg5IDM5LjYzMTkgMTYuODcxOVpNMzEgMTFWMTZIMTdWMTFDMTcgNy4xMzQwMSAyMC4xMzQgNCAyNCA0QzI3Ljg2NiA0IDMxIDcuMTM0MDEgMzEgMTFaTTcuNTQ0OTcgMjEuNzNDNyAyMi43OTk2IDcgMjQuMTk5NyA3IDI3VjM0QzcgMzYuODAwMyA3IDM4LjIwMDQgNy41NDQ5NyAzOS4yN0M4LjAyNDMzIDQwLjIxMDggOC43ODkyNCA0MC45NzU3IDkuNzMwMDUgNDEuNDU1QzEwLjc5OTYgNDIgMTIuMTk5NyA0MiAxNSA0MkgzM0MzNS44MDAzIDQyIDM3LjIwMDQgNDIgMzguMjcgNDEuNDU1QzM5LjIxMDggNDAuOTc1NyAzOS45NzU3IDQwLjIxMDggNDAuNDU1IDM5LjI3QzQxIDM4LjIwMDQgNDEgMzYuODAwMyA0MSAzNFYyN0M0MSAyNC4xOTk3IDQxIDIyLjc5OTYgNDAuNDU1IDIxLjczQzM5Ljk3NTcgMjAuNzg5MiAzOS4yMTA4IDIwLjAyNDMgMzguMjcgMTkuNTQ1QzM3LjIwMDQgMTkgMzUuODAwMyAxOSAzMyAxOUgxNUMxMi4xOTk3IDE5IDEwLjc5OTYgMTkgOS43MzAwNSAxOS41NDVDOC43ODkyNCAyMC4wMjQzIDguMDI0MzMgMjAuNzg5MiA3LjU0NDk3IDIxLjczWk0yNCAyNEMyMy4xNzE2IDI0IDIyLjUgMjQuNjcxNiAyMi41IDI1LjVWMjkuNUMyMi41IDMwLjMyODQgMjMuMTcxNiAzMSAyNCAzMUMyNC44Mjg0IDMxIDI1LjUgMzAuMzI4NCAyNS41IDI5LjVWMjUuNUMyNS41IDI0LjY3MTYgMjQuODI4NCAyNCAyNCAyNFpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBTZWN1cml0eUljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkZC5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQgPSBwcm9wcy5jbGFzcywgX3YkMiA9IGZpbGwoKTtcbiAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJjbGFzc1wiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICByZXR1cm4gX3AkO1xuICAgIH0sIHtcbiAgICAgIF92JDogdm9pZCAwLFxuICAgICAgX3YkMjogdm9pZCAwXG4gICAgfSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGMgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCI0OFwiIGhlaWdodD1cIjQ4XCIgdmlld0JveD1cIjAgMCA0OCA0OFwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTM3LjQ4NSAzNy4zODQ5QzQwLjg5NCAzMy45NTA2IDQzIDI5LjIyMTIgNDMgMjRDNDMgMTMuNTA2NiAzNC40OTM0IDUgMjQgNUMxMy41MDY2IDUgNSAxMy41MDY2IDUgMjRDNSAyOS4yMjEzIDcuMTA2MSAzMy45NTA3IDEwLjUxNTEgMzcuMzg1QzEzLjM1ODMgMzIuOTQzOCAxOC4zMzU0IDMwIDI0LjAwMDEgMzBDMjkuNjY0NyAzMCAzNC42NDE4IDMyLjk0MzcgMzcuNDg1IDM3LjM4NDlaTTM1LjE4MDkgMzkuMzYzNUMzMi45MTQzIDM1LjU1MzIgMjguNzU1NCAzMyAyNC4wMDAxIDMzQzE5LjI0NDggMzMgMTUuMDg1OCAzNS41NTMzIDEyLjgxOTMgMzkuMzYzNkMxNS45NTY0IDQxLjY1MDYgMTkuODIwNiA0MyAyNCA0M0MyOC4xNzk1IDQzIDMyLjA0MzcgNDEuNjUwNSAzNS4xODA5IDM5LjM2MzVaTTI0IDQ2QzM2LjE1MDMgNDYgNDYgMzYuMTUwMyA0NiAyNEM0NiAxMS44NDk3IDM2LjE1MDMgMiAyNCAyQzExLjg0OTcgMiAyIDExLjg0OTcgMiAyNEMyIDM2LjE1MDMgMTEuODQ5NyA0NiAyNCA0NlpNMjQgMjRDMjYuNzYxNCAyNCAyOSAyMS43NjE0IDI5IDE5QzI5IDE2LjIzODYgMjYuNzYxNCAxNCAyNCAxNEMyMS4yMzg2IDE0IDE5IDE2LjIzODYgMTkgMTlDMTkgMjEuNzYxNCAyMS4yMzg2IDI0IDI0IDI0Wk0yNCAyN0MyOC40MTgzIDI3IDMyIDIzLjQxODMgMzIgMTlDMzIgMTQuNTgxNyAyOC40MTgzIDExIDI0IDExQzE5LjU4MTcgMTEgMTYgMTQuNTgxNyAxNiAxOUMxNiAyMy40MTgzIDE5LjU4MTcgMjcgMjQgMjdaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgUGVyc29uYWxpdHlJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGMuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgY29uc3QgX3YkID0gcHJvcHMuY2xhc3MsIF92JDIgPSBmaWxsKCk7XG4gICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQsIFwiY2xhc3NcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRiID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiNDhcIiBoZWlnaHQ9XCI0OFwiIHZpZXdCb3g9XCIwIDAgNDggNDhcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0zNC41NjA3IDQuNDM5MzRDMzMuOTc0OSAzLjg1MzU1IDMzLjAyNTEgMy44NTM1NSAzMi40MzkzIDQuNDM5MzRDMzEuODUzNiA1LjAyNTEzIDMxLjg1MzYgNS45NzQ4NyAzMi40MzkzIDYuNTYwNjZMMzcuODc4NyAxMkgxMC41QzkuNjcxNTcgMTIgOSAxMi42NzE2IDkgMTMuNUM5IDE0LjMyODQgOS42NzE1NyAxNSAxMC41IDE1SDM3Ljg3ODdMMzIuNDM5MyAyMC40MzkzQzMxLjg1MzYgMjEuMDI1MSAzMS44NTM2IDIxLjk3NDkgMzIuNDM5MyAyMi41NjA3QzMzLjAyNTEgMjMuMTQ2NCAzMy45NzQ5IDIzLjE0NjQgMzQuNTYwNyAyMi41NjA3TDQyLjU2MDcgMTQuNTYwN0M0My4xNDY0IDEzLjk3NDkgNDMuMTQ2NCAxMy4wMjUxIDQyLjU2MDcgMTIuNDM5M0wzNC41NjA3IDQuNDM5MzRaTTEzLjQzOTMgMjUuNDM5M0MxNC4wMjUxIDI0Ljg1MzYgMTQuOTc0OSAyNC44NTM2IDE1LjU2MDcgMjUuNDM5M0MxNi4xNDY0IDI2LjAyNTEgMTYuMTQ2NCAyNi45NzQ5IDE1LjU2MDcgMjcuNTYwN0wxMC4xMjEzIDMzSDM3LjVDMzguMzI4NCAzMyAzOSAzMy42NzE2IDM5IDM0LjVDMzkgMzUuMzI4NCAzOC4zMjg0IDM2IDM3LjUgMzZIMTAuMTIxM0wxNS41NjA3IDQxLjQzOTNDMTYuMTQ2NCA0Mi4wMjUxIDE2LjE0NjQgNDIuOTc0OSAxNS41NjA3IDQzLjU2MDdDMTQuOTc0OSA0NC4xNDY0IDE0LjAyNTEgNDQuMTQ2NCAxMy40MzkzIDQzLjU2MDdMNS40MzkzNCAzNS41NjA3QzQuODUzNTUgMzQuOTc0OSA0Ljg1MzU1IDM0LjAyNTEgNS40MzkzNCAzMy40MzkzTDEzLjQzOTMgMjUuNDM5M1pcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBTd2FwSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnNlY29uZGFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRiLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgIGNvbnN0IF92JCA9IHByb3BzLmNsYXNzLCBfdiQyID0gZmlsbCgpO1xuICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImNsYXNzXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgIHJldHVybiBfcCQ7XG4gICAgfSwge1xuICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICBfdiQyOiB2b2lkIDBcbiAgICB9KTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkYSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjI4XCIgaGVpZ2h0PVwiMjhcIiB2aWV3Qm94PVwiMCAwIDI4IDI4XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMS43NSAxMi4wMDJDMS43NSA5LjIwMTY5IDEuNzUgNy44MDE1NiAyLjI5NDk3IDYuNzMyQzIuNzc0MzMgNS43OTExOSAzLjUzOTI0IDUuMDI2MjkgNC40ODAwNSA0LjU0NjkyQzUuNTQ5NjEgNC4wMDE5NSA2Ljk0OTc0IDQuMDAxOTUgOS43NSA0LjAwMTk1SDE3LjI1QzIwLjA1MDMgNC4wMDE5NSAyMS40NTA0IDQuMDAxOTUgMjIuNTIgNC41NDY5MkMyMy40NjA4IDUuMDI2MjkgMjQuMjI1NyA1Ljc5MTE5IDI0LjcwNSA2LjczMkMyNC44MjU2IDYuOTY4NjEgMjQuOTE5NSA3LjIyMTQgMjQuOTkyNiA3LjUwMTk1SDIxLjVDMTkuNjM3NyA3LjUwMTk1IDE4LjcwNjUgNy41MDE5NSAxNy45NjA5IDcuNzczMzRDMTYuNzExIDguMjI4MjggMTUuNzI2MyA5LjIxMjkxIDE1LjI3MTQgMTAuNDYyOUMxNSAxMS4yMDg1IDE1IDEyLjEzOTYgMTUgMTQuMDAyQzE1IDE1Ljg2NDMgMTUgMTYuNzk1NCAxNS4yNzE0IDE3LjU0MUMxNS43MjYzIDE4Ljc5MSAxNi43MTEgMTkuNzc1NiAxNy45NjA5IDIwLjIzMDZDMTguNzA2NSAyMC41MDIgMTkuNjM3NyAyMC41MDIgMjEuNSAyMC41MDJIMjQuOTkyNkMyNC45MTk1IDIwLjc4MjUgMjQuODI1NiAyMS4wMzUzIDI0LjcwNSAyMS4yNzE5QzI0LjIyNTcgMjIuMjEyNyAyMy40NjA4IDIyLjk3NzYgMjIuNTIgMjMuNDU3QzIxLjQ1MDQgMjQuMDAyIDIwLjA1MDMgMjQuMDAyIDE3LjI1IDI0LjAwMkg5Ljc1QzYuOTQ5NzQgMjQuMDAyIDUuNTQ5NjEgMjQuMDAyIDQuNDgwMDUgMjMuNDU3QzMuNTM5MjQgMjIuOTc3NiAyLjc3NDMzIDIyLjIxMjcgMi4yOTQ5NyAyMS4yNzE5QzEuNzUgMjAuMjAyMyAxLjc1IDE4LjgwMjIgMS43NSAxNi4wMDJWMTIuMDAyWk0xNi40OTk5IDEzLjgwMkMxNi40OTk5IDEyLjEyMTggMTYuNDk5OSAxMS4yODE3IDE2LjgyNjkgMTAuNjRDMTcuMTE0NSAxMC4wNzU1IDE3LjU3MzUgOS42MTY1NiAxOC4xMzggOS4zMjg5NEMxOC43Nzk3IDkuMDAxOTYgMTkuNjE5OCA5LjAwMTk2IDIxLjI5OTkgOS4wMDE5NkgyMy4xOTk5QzI0Ljg4MDEgOS4wMDE5NiAyNS43MjAyIDkuMDAxOTYgMjYuMzYxOSA5LjMyODk0QzI2LjkyNjQgOS42MTY1NiAyNy4zODUzIDEwLjA3NTUgMjcuNjczIDEwLjY0QzI3Ljk5OTkgMTEuMjgxNyAyNy45OTk5IDEyLjEyMTggMjcuOTk5OSAxMy44MDJWMTQuMjAyQzI3Ljk5OTkgMTUuODgyMSAyNy45OTk5IDE2LjcyMjIgMjcuNjczIDE3LjM2MzlDMjcuMzg1MyAxNy45Mjg0IDI2LjkyNjQgMTguMzg3NCAyNi4zNjE5IDE4LjY3NUMyNS43MjAyIDE5LjAwMiAyNC44ODAxIDE5LjAwMiAyMy4xOTk5IDE5LjAwMkgyMS4yOTk5QzE5LjYxOTggMTkuMDAyIDE4Ljc3OTcgMTkuMDAyIDE4LjEzOCAxOC42NzVDMTcuNTczNSAxOC4zODc0IDE3LjExNDUgMTcuOTI4NCAxNi44MjY5IDE3LjM2MzlDMTYuNDk5OSAxNi43MjIyIDE2LjQ5OTkgMTUuODgyMSAxNi40OTk5IDE0LjIwMlYxMy44MDJaTTIyLjQ5OTkgMTQuMDAyQzIyLjQ5OTkgMTQuOTY4NSAyMS43MTY0IDE1Ljc1MiAyMC43NDk5IDE1Ljc1MkMxOS43ODM0IDE1Ljc1MiAxOC45OTk5IDE0Ljk2ODUgMTguOTk5OSAxNC4wMDJDMTguOTk5OSAxMy4wMzU1IDE5Ljc4MzQgMTIuMjUyIDIwLjc0OTkgMTIuMjUyQzIxLjcxNjQgMTIuMjUyIDIyLjQ5OTkgMTMuMDM1NSAyMi40OTk5IDE0LjAwMlpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBBdFdhbGxldEljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGU7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkYS5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQgPSBwcm9wcy5jbGFzcywgX3YkMiA9IGZpbGwoKTtcbiAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJjbGFzc1wiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICByZXR1cm4gX3AkO1xuICAgIH0sIHtcbiAgICAgIF92JDogdm9pZCAwLFxuICAgICAgX3YkMjogdm9pZCAwXG4gICAgfSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJDkgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIyOFwiIGhlaWdodD1cIjI4XCIgdmlld0JveD1cIjAgMCAyOCAyOFwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xMC4wMDAxIDEwLjAwMDFDMTAuMDAxNiA4LjAyMzMzIDEwLjAyNjcgNi45ODcxOSAxMC40MzYgNi4xODQwNEMxMC44MTk1IDUuNDMxMzkgMTEuNDMxNCA0LjgxOTQ3IDEyLjE4NCA0LjQzNTk3QzEzLjAzOTcgNCAxNC4xNTk4IDQgMTYuNCA0SDE3LjZDMTkuODQwMiA0IDIwLjk2MDMgNCAyMS44MTYgNC40MzU5N0MyMi41Njg2IDQuODE5NDcgMjMuMTgwNSA1LjQzMTM5IDIzLjU2NCA2LjE4NDA0QzI0IDcuMDM5NjkgMjQgOC4xNTk3OSAyNCAxMC40VjExLjZDMjQgMTMuODQwMiAyNCAxNC45NjAzIDIzLjU2NCAxNS44MTZDMjMuMTgwNSAxNi41Njg2IDIyLjU2ODYgMTcuMTgwNSAyMS44MTYgMTcuNTY0QzIxLjAxMjggMTcuOTczMyAxOS45NzY3IDE3Ljk5ODQgMTcuOTk5OSAxNy45OTk5QzE3Ljk5ODQgMTkuOTc2NyAxNy45NzMzIDIxLjAxMjggMTcuNTY0IDIxLjgxNkMxNy4xODA1IDIyLjU2ODYgMTYuNTY4NiAyMy4xODA1IDE1LjgxNiAyMy41NjRDMTQuOTYwMyAyNCAxMy44NDAyIDI0IDExLjYgMjRIMTAuNEM4LjE1OTc5IDI0IDcuMDM5NjkgMjQgNi4xODQwNCAyMy41NjRDNS40MzEzOSAyMy4xODA1IDQuODE5NDcgMjIuNTY4NiA0LjQzNTk3IDIxLjgxNkM0IDIwLjk2MDMgNCAxOS44NDAyIDQgMTcuNlYxNi40QzQgMTQuMTU5OCA0IDEzLjAzOTcgNC40MzU5NyAxMi4xODRDNC44MTk0NyAxMS40MzE0IDUuNDMxMzkgMTAuODE5NSA2LjE4NDA0IDEwLjQzNkM2Ljk4NzE5IDEwLjAyNjcgOC4wMjMzMyAxMC4wMDE2IDEwLjAwMDEgMTAuMDAwMVpNMTAgMTEuNUg5LjVDOC4wOTk4NyAxMS41IDcuMzk5OCAxMS41IDYuODY1MDIgMTEuNzcyNUM2LjM5NDYyIDEyLjAxMjIgNi4wMTIxNyAxMi4zOTQ2IDUuNzcyNDggMTIuODY1QzUuNSAxMy4zOTk4IDUuNSAxNC4wOTk5IDUuNSAxNS41VjE4LjVDNS41IDE5LjkwMDEgNS41IDIwLjYwMDIgNS43NzI0OCAyMS4xMzVDNi4wMTIxNyAyMS42MDU0IDYuMzk0NjIgMjEuOTg3OCA2Ljg2NTAyIDIyLjIyNzVDNy4zOTk4IDIyLjUgOC4wOTk4NyAyMi41IDkuNSAyMi41SDEyLjVDMTMuOTAwMSAyMi41IDE0LjYwMDIgMjIuNSAxNS4xMzUgMjIuMjI3NUMxNS42MDU0IDIxLjk4NzggMTUuOTg3OCAyMS42MDU0IDE2LjIyNzUgMjEuMTM1QzE2LjUgMjAuNjAwMiAxNi41IDE5LjkwMDEgMTYuNSAxOC41VjE4SDE2LjRDMTQuMTU5OCAxOCAxMy4wMzk3IDE4IDEyLjE4NCAxNy41NjRDMTEuNDMxNCAxNy4xODA1IDEwLjgxOTUgMTYuNTY4NiAxMC40MzYgMTUuODE2QzEwIDE0Ljk2MDMgMTAgMTMuODQwMiAxMCAxMS42VjExLjVaTTExLjUgOS41QzExLjUgOC4wOTk4NyAxMS41IDcuMzk5OCAxMS43NzI1IDYuODY1MDJDMTIuMDEyMiA2LjM5NDYyIDEyLjM5NDYgNi4wMTIxNyAxMi44NjUgNS43NzI0OEMxMy4zOTk4IDUuNSAxNC4wOTk5IDUuNSAxNS41IDUuNUgxOC41QzE5LjkwMDEgNS41IDIwLjYwMDIgNS41IDIxLjEzNSA1Ljc3MjQ4QzIxLjYwNTQgNi4wMTIxNyAyMS45ODc4IDYuMzk0NjIgMjIuMjI3NSA2Ljg2NTAyQzIyLjUgNy4zOTk4IDIyLjUgOC4wOTk4NyAyMi41IDkuNVYxMi41QzIyLjUgMTMuOTAwMSAyMi41IDE0LjYwMDIgMjIuMjI3NSAxNS4xMzVDMjEuOTg3OCAxNS42MDU0IDIxLjYwNTQgMTUuOTg3OCAyMS4xMzUgMTYuMjI3NUMyMC42MDAyIDE2LjUgMTkuOTAwMSAxNi41IDE4LjUgMTYuNUgxNS41QzE0LjA5OTkgMTYuNSAxMy4zOTk4IDE2LjUgMTIuODY1IDE2LjIyNzVDMTIuMzk0NiAxNS45ODc4IDEyLjAxMjIgMTUuNjA1NCAxMS43NzI1IDE1LjEzNUMxMS41IDE0LjYwMDIgMTEuNSAxMy45MDAxIDExLjUgMTIuNVY5LjVaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgQ29weUxpZ2h0SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnNlY29uZGFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCQ5LmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgIGNvbnN0IF92JCA9IGZpbGwoKSwgX3YkMiA9IGZpbGwoKTtcbiAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJmaWxsXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgIHJldHVybiBfcCQ7XG4gICAgfSwge1xuICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICBfdiQyOiB2b2lkIDBcbiAgICB9KTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkOCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTdcIiB2aWV3Qm94PVwiMCAwIDE2IDE3XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMSA0LjEyNjk1QzEgMy4wNzc1NCAxIDIuNTUyODQgMS4xOTIwMiAyLjE0Njg0QzEuMzg5ODYgMS43Mjg1NiAxLjcyNjYgMS4zOTE4MSAyLjE0NDg5IDEuMTkzOTdDMi41NTA4OCAxLjAwMTk1IDMuMDc1NTkgMS4wMDE5NSA0LjEyNSAxLjAwMTk1QzUuMTc0NDEgMS4wMDE5NSA1LjY5OTEyIDEuMDAxOTUgNi4xMDUxMSAxLjE5Mzk3QzYuNTIzNCAxLjM5MTgxIDYuODYwMTQgMS43Mjg1NiA3LjA1Nzk4IDIuMTQ2ODRDNy4yNSAyLjU1Mjg0IDcuMjUgMy4wNzc1NCA3LjI1IDQuMTI2OTVDNy4yNSA1LjE3NjM2IDcuMjUgNS43MDEwNyA3LjA1Nzk4IDYuMTA3MDZDNi44NjAxNCA2LjUyNTM1IDYuNTIzNCA2Ljg2MjEgNi4xMDUxMSA3LjA1OTkzQzUuNjk5MTIgNy4yNTE5NSA1LjE3NDQxIDcuMjUxOTUgNC4xMjUgNy4yNTE5NUMzLjA3NTU5IDcuMjUxOTUgMi41NTA4OCA3LjI1MTk1IDIuMTQ0ODkgNy4wNTk5M0MxLjcyNjYgNi44NjIxIDEuMzg5ODYgNi41MjUzNSAxLjE5MjAyIDYuMTA3MDZDMSA1LjcwMTA3IDEgNS4xNzYzNiAxIDQuMTI2OTVaTTIuNSAzLjMwMTk1QzIuNSAzLjAyMTkzIDIuNSAyLjg4MTkxIDIuNTU0NSAyLjc3NDk2QzIuNjAyNDMgMi42ODA4OCAyLjY3ODkyIDIuNjA0MzkgMi43NzMgMi41NTY0NUMyLjg3OTk2IDIuNTAxOTUgMy4wMTk5NyAyLjUwMTk1IDMuMyAyLjUwMTk1SDQuOTVDNS4yMzAwMyAyLjUwMTk1IDUuMzcwMDQgMi41MDE5NSA1LjQ3NyAyLjU1NjQ1QzUuNTcxMDggMi42MDQzOSA1LjY0NzU3IDIuNjgwODggNS42OTU1IDIuNzc0OTZDNS43NSAyLjg4MTkxIDUuNzUgMy4wMjE5MyA1Ljc1IDMuMzAxOTVWNC45NTE5NUM1Ljc1IDUuMjMxOTggNS43NSA1LjM3MTk5IDUuNjk1NSA1LjQ3ODk1QzUuNjQ3NTcgNS41NzMwMyA1LjU3MTA4IDUuNjQ5NTIgNS40NzcgNS42OTc0NkM1LjM3MDA0IDUuNzUxOTUgNS4yMzAwMyA1Ljc1MTk1IDQuOTUgNS43NTE5NUgzLjNDMy4wMTk5NyA1Ljc1MTk1IDIuODc5OTYgNS43NTE5NSAyLjc3MyA1LjY5NzQ2QzIuNjc4OTIgNS42NDk1MiAyLjYwMjQzIDUuNTczMDMgMi41NTQ1IDUuNDc4OTVDMi41IDUuMzcxOTkgMi41IDUuMjMxOTggMi41IDQuOTUxOTVWMy4zMDE5NVpNMSAxMS44NzdDMSAxMC44Mjc1IDEgMTAuMzAyOCAxLjE5MjAyIDkuODk2ODRDMS4zODk4NiA5LjQ3ODU2IDEuNzI2NiA5LjE0MTgxIDIuMTQ0ODkgOC45NDM5N0MyLjU1MDg4IDguNzUxOTUgMy4wNzU1OSA4Ljc1MTk1IDQuMTI1IDguNzUxOTVDNS4xNzQ0MSA4Ljc1MTk1IDUuNjk5MTIgOC43NTE5NSA2LjEwNTExIDguOTQzOTdDNi41MjM0IDkuMTQxODEgNi44NjAxNCA5LjQ3ODU2IDcuMDU3OTggOS44OTY4NEM3LjI1IDEwLjMwMjggNy4yNSAxMC44Mjc1IDcuMjUgMTEuODc3QzcuMjUgMTIuOTI2NCA3LjI1IDEzLjQ1MTEgNy4wNTc5OCAxMy44NTcxQzYuODYwMTQgMTQuMjc1MyA2LjUyMzQgMTQuNjEyMSA2LjEwNTExIDE0LjgwOTlDNS42OTkxMiAxNS4wMDIgNS4xNzQ0MSAxNS4wMDIgNC4xMjUgMTUuMDAyQzMuMDc1NTkgMTUuMDAyIDIuNTUwODggMTUuMDAyIDIuMTQ0ODkgMTQuODA5OUMxLjcyNjYgMTQuNjEyMSAxLjM4OTg2IDE0LjI3NTMgMS4xOTIwMiAxMy44NTcxQzEgMTMuNDUxMSAxIDEyLjkyNjQgMSAxMS44NzdaTTIuNSAxMS4wNTJDMi41IDEwLjc3MTkgMi41IDEwLjYzMTkgMi41NTQ1IDEwLjUyNUMyLjYwMjQzIDEwLjQzMDkgMi42Nzg5MiAxMC4zNTQ0IDIuNzczIDEwLjMwNjRDMi44Nzk5NiAxMC4yNTIgMy4wMTk5NyAxMC4yNTIgMy4zIDEwLjI1Mkg0Ljk1QzUuMjMwMDMgMTAuMjUyIDUuMzcwMDQgMTAuMjUyIDUuNDc3IDEwLjMwNjRDNS41NzEwOCAxMC4zNTQ0IDUuNjQ3NTcgMTAuNDMwOSA1LjY5NTUgMTAuNTI1QzUuNzUgMTAuNjMxOSA1Ljc1IDEwLjc3MTkgNS43NSAxMS4wNTJWMTIuNzAyQzUuNzUgMTIuOTgyIDUuNzUgMTMuMTIyIDUuNjk1NSAxMy4yMjg5QzUuNjQ3NTcgMTMuMzIzIDUuNTcxMDggMTMuMzk5NSA1LjQ3NyAxMy40NDc1QzUuMzcwMDQgMTMuNTAyIDUuMjMwMDMgMTMuNTAyIDQuOTUgMTMuNTAySDMuM0MzLjAxOTk3IDEzLjUwMiAyLjg3OTk2IDEzLjUwMiAyLjc3MyAxMy40NDc1QzIuNjc4OTIgMTMuMzk5NSAyLjYwMjQzIDEzLjMyMyAyLjU1NDUgMTMuMjI4OUMyLjUgMTMuMTIyIDIuNSAxMi45ODIgMi41IDEyLjcwMlYxMS4wNTJaTTguOTQyMDIgMi4xNDY4NEM4Ljc1IDIuNTUyODQgOC43NSAzLjA3NzU0IDguNzUgNC4xMjY5NUM4Ljc1IDUuMTc2MzYgOC43NSA1LjcwMTA3IDguOTQyMDIgNi4xMDcwNkM5LjEzOTg2IDYuNTI1MzUgOS40NzY2IDYuODYyMSA5Ljg5NDg5IDcuMDU5OTNDMTAuMzAwOSA3LjI1MTk1IDEwLjgyNTYgNy4yNTE5NSAxMS44NzUgNy4yNTE5NUMxMi45MjQ0IDcuMjUxOTUgMTMuNDQ5MSA3LjI1MTk1IDEzLjg1NTEgNy4wNTk5M0MxNC4yNzM0IDYuODYyMSAxNC42MTAxIDYuNTI1MzUgMTQuODA4IDYuMTA3MDZDMTUgNS43MDEwNyAxNSA1LjE3NjM2IDE1IDQuMTI2OTVDMTUgMy4wNzc1NCAxNSAyLjU1Mjg0IDE0LjgwOCAyLjE0Njg0QzE0LjYxMDEgMS43Mjg1NiAxNC4yNzM0IDEuMzkxODEgMTMuODU1MSAxLjE5Mzk3QzEzLjQ0OTEgMS4wMDE5NSAxMi45MjQ0IDEuMDAxOTUgMTEuODc1IDEuMDAxOTVDMTAuODI1NiAxLjAwMTk1IDEwLjMwMDkgMS4wMDE5NSA5Ljg5NDg5IDEuMTkzOTdDOS40NzY2IDEuMzkxODEgOS4xMzk4NiAxLjcyODU2IDguOTQyMDIgMi4xNDY4NFpNMTAuMzA0NSAyLjc3NDk2QzEwLjI1IDIuODgxOTEgMTAuMjUgMy4wMjE5MyAxMC4yNSAzLjMwMTk1VjQuOTUxOTVDMTAuMjUgNS4yMzE5OCAxMC4yNSA1LjM3MTk5IDEwLjMwNDUgNS40Nzg5NUMxMC4zNTI0IDUuNTczMDMgMTAuNDI4OSA1LjY0OTUyIDEwLjUyMyA1LjY5NzQ2QzEwLjYzIDUuNzUxOTUgMTAuNzcgNS43NTE5NSAxMS4wNSA1Ljc1MTk1SDEyLjdDMTIuOTggNS43NTE5NSAxMy4xMiA1Ljc1MTk1IDEzLjIyNyA1LjY5NzQ2QzEzLjMyMTEgNS42NDk1MiAxMy4zOTc2IDUuNTczMDMgMTMuNDQ1NSA1LjQ3ODk1QzEzLjUgNS4zNzE5OSAxMy41IDUuMjMxOTggMTMuNSA0Ljk1MTk1VjMuMzAxOTVDMTMuNSAzLjAyMTkzIDEzLjUgMi44ODE5MSAxMy40NDU1IDIuNzc0OTZDMTMuMzk3NiAyLjY4MDg4IDEzLjMyMTEgMi42MDQzOSAxMy4yMjcgMi41NTY0NUMxMy4xMiAyLjUwMTk1IDEyLjk4IDIuNTAxOTUgMTIuNyAyLjUwMTk1SDExLjA1QzEwLjc3IDIuNTAxOTUgMTAuNjMgMi41MDE5NSAxMC41MjMgMi41NTY0NUMxMC40Mjg5IDIuNjA0MzkgMTAuMzUyNCAyLjY4MDg4IDEwLjMwNDUgMi43NzQ5NlpNOC44MDcyNyA5LjEzNTE4QzguNzUgOS4yNjI0MiA4Ljc1IDkuNDI1NiA4Ljc1IDkuNzUxOTVDOC43NSAxMC4wNzgzIDguNzUgMTAuMjQxNSA4LjgwNzI3IDEwLjM2ODdDOC44NzI0NSAxMC41MTM2IDguOTg4NCAxMC42Mjk1IDkuMTMzMjMgMTAuNjk0N0M5LjI2MDQ3IDEwLjc1MiA5LjQyMzY1IDEwLjc1MiA5Ljc1IDEwLjc1MkMxMC4wNzY0IDEwLjc1MiAxMC4yMzk1IDEwLjc1MiAxMC4zNjY4IDEwLjY5NDdDMTAuNTExNiAxMC42Mjk1IDEwLjYyNzYgMTAuNTEzNiAxMC42OTI3IDEwLjM2ODdDMTAuNzUgMTAuMjQxNSAxMC43NSAxMC4wNzgzIDEwLjc1IDkuNzUxOTVDMTAuNzUgOS40MjU2IDEwLjc1IDkuMjYyNDIgMTAuNjkyNyA5LjEzNTE4QzEwLjYyNzYgOC45OTAzNSAxMC41MTE2IDguODc0NCAxMC4zNjY4IDguODA5MjJDMTAuMjM5NSA4Ljc1MTk1IDEwLjA3NjQgOC43NTE5NSA5Ljc1IDguNzUxOTVDOS40MjM2NSA4Ljc1MTk1IDkuMjYwNDcgOC43NTE5NSA5LjEzMzIzIDguODA5MjJDOC45ODg0IDguODc0NCA4Ljg3MjQ1IDguOTkwMzUgOC44MDcyNyA5LjEzNTE4Wk0xMC44NyAxMS44NzcxQzEwLjg3IDExLjU0NiAxMC44NyAxMS4zODA1IDEwLjkyODkgMTEuMjUxN0MxMC45OTM4IDExLjEwOTggMTEuMTA3NyAxMC45OTU5IDExLjI0OTcgMTAuOTMxQzExLjM3ODQgMTAuODcyMSAxMS41NDM5IDEwLjg3MjEgMTEuODc1IDEwLjg3MjFDMTIuMjA2MSAxMC44NzIxIDEyLjM3MTYgMTAuODcyMSAxMi41MDAzIDEwLjkzMUMxMi42NDIzIDEwLjk5NTkgMTIuNzU2MiAxMS4xMDk4IDEyLjgyMTEgMTEuMjUxN0MxMi44OCAxMS4zODA1IDEyLjg4IDExLjU0NiAxMi44OCAxMS44NzcxQzEyLjg4IDEyLjIwODEgMTIuODggMTIuMzczNyAxMi44MjExIDEyLjUwMjRDMTIuNzU2MiAxMi42NDQ0IDEyLjY0MjMgMTIuNzU4MyAxMi41MDAzIDEyLjgyMzJDMTIuMzcxNiAxMi44ODIxIDEyLjIwNjEgMTIuODgyMSAxMS44NzUgMTIuODgyMUMxMS41NDM5IDEyLjg4MjEgMTEuMzc4NCAxMi44ODIxIDExLjI0OTcgMTIuODIzMkMxMS4xMDc3IDEyLjc1ODMgMTAuOTkzOCAxMi42NDQ0IDEwLjkyODkgMTIuNTAyNEMxMC44NyAxMi4zNzM3IDEwLjg3IDEyLjIwODEgMTAuODcgMTEuODc3MVpNOC44MDcyNyAxMy4zODUyQzguNzUgMTMuNTEyNCA4Ljc1IDEzLjY3NTYgOC43NSAxNC4wMDJDOC43NSAxNC4zMjgzIDguNzUgMTQuNDkxNSA4LjgwNzI3IDE0LjYxODdDOC44NzI0NSAxNC43NjM2IDguOTg4NCAxNC44Nzk1IDkuMTMzMjMgMTQuOTQ0N0M5LjI2MDQ3IDE1LjAwMiA5LjQyMzY1IDE1LjAwMiA5Ljc1IDE1LjAwMkMxMC4wNzY0IDE1LjAwMiAxMC4yMzk1IDE1LjAwMiAxMC4zNjY4IDE0Ljk0NDdDMTAuNTExNiAxNC44Nzk1IDEwLjYyNzYgMTQuNzYzNiAxMC42OTI3IDE0LjYxODdDMTAuNzUgMTQuNDkxNSAxMC43NSAxNC4zMjgzIDEwLjc1IDE0LjAwMkMxMC43NSAxMy42NzU2IDEwLjc1IDEzLjUxMjQgMTAuNjkyNyAxMy4zODUyQzEwLjYyNzYgMTMuMjQwNCAxMC41MTE2IDEzLjEyNDQgMTAuMzY2OCAxMy4wNTkyQzEwLjIzOTUgMTMuMDAyIDEwLjA3NjQgMTMuMDAyIDkuNzUgMTMuMDAyQzkuNDIzNjUgMTMuMDAyIDkuMjYwNDcgMTMuMDAyIDkuMTMzMjMgMTMuMDU5MkM4Ljk4ODQgMTMuMTI0NCA4Ljg3MjQ1IDEzLjI0MDQgOC44MDcyNyAxMy4zODUyWk0xMyA5Ljc1MTk1QzEzIDkuNDI1NiAxMyA5LjI2MjQyIDEzLjA1NzMgOS4xMzUxOEMxMy4xMjI0IDguOTkwMzUgMTMuMjM4NCA4Ljg3NDQgMTMuMzgzMiA4LjgwOTIyQzEzLjUxMDUgOC43NTE5NSAxMy42NzM2IDguNzUxOTUgMTQgOC43NTE5NUMxNC4zMjY0IDguNzUxOTUgMTQuNDg5NSA4Ljc1MTk1IDE0LjYxNjggOC44MDkyMkMxNC43NjE2IDguODc0NCAxNC44Nzc2IDguOTkwMzUgMTQuOTQyNyA5LjEzNTE4QzE1IDkuMjYyNDIgMTUgOS40MjU2IDE1IDkuNzUxOTVDMTUgMTAuMDc4MyAxNSAxMC4yNDE1IDE0Ljk0MjcgMTAuMzY4N0MxNC44Nzc2IDEwLjUxMzYgMTQuNzYxNiAxMC42Mjk1IDE0LjYxNjggMTAuNjk0N0MxNC40ODk1IDEwLjc1MiAxNC4zMjY0IDEwLjc1MiAxNCAxMC43NTJDMTMuNjczNiAxMC43NTIgMTMuNTEwNSAxMC43NTIgMTMuMzgzMiAxMC42OTQ3QzEzLjIzODQgMTAuNjI5NSAxMy4xMjI0IDEwLjUxMzYgMTMuMDU3MyAxMC4zNjg3QzEzIDEwLjI0MTUgMTMgMTAuMDc4MyAxMyA5Ljc1MTk1Wk0xMy4wNTczIDEzLjM4NTJDMTMgMTMuNTEyNCAxMyAxMy42NzU2IDEzIDE0LjAwMkMxMyAxNC4zMjgzIDEzIDE0LjQ5MTUgMTMuMDU3MyAxNC42MTg3QzEzLjEyMjQgMTQuNzYzNiAxMy4yMzg0IDE0Ljg3OTUgMTMuMzgzMiAxNC45NDQ3QzEzLjUxMDUgMTUuMDAyIDEzLjY3MzYgMTUuMDAyIDE0IDE1LjAwMkMxNC4zMjY0IDE1LjAwMiAxNC40ODk1IDE1LjAwMiAxNC42MTY4IDE0Ljk0NDdDMTQuNzYxNiAxNC44Nzk1IDE0Ljg3NzYgMTQuNzYzNiAxNC45NDI3IDE0LjYxODdDMTUgMTQuNDkxNSAxNSAxNC4zMjgzIDE1IDE0LjAwMkMxNSAxMy42NzU2IDE1IDEzLjUxMjQgMTQuOTQyNyAxMy4zODUyQzE0Ljg3NzYgMTMuMjQwNCAxNC43NjE2IDEzLjEyNDQgMTQuNjE2OCAxMy4wNTkyQzE0LjQ4OTUgMTMuMDAyIDE0LjMyNjQgMTMuMDAyIDE0IDEzLjAwMkMxMy42NzM2IDEzLjAwMiAxMy41MTA1IDEzLjAwMiAxMy4zODMyIDEzLjA1OTJDMTMuMjM4NCAxMy4xMjQ0IDEzLjEyMjQgMTMuMjQwNCAxMy4wNTczIDEzLjM4NTJaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgUVJJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJDguY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgY29udGFpbmVyQm9yZGVycyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiMTJweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IHdhbGxldEJvcmRlcnMgPSB7XG4gIG06IFwiNnB4XCIsXG4gIHM6IFwiNnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgRm91cldhbGxldHNDYXJkID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogNjBweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgcGFkZGluZzogOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gY29udGFpbmVyQm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQudGludH07XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlOiAxZnIgMWZyIC8gMWZyIDFmcjtcbiAgICBnYXA6IDRweDtcbmA7XG5jb25zdCBGb3VyV2FsbGV0c0ltYWdlID0gc3R5bGVkKFdhbGxldEltYWdlKWBcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IHdhbGxldEJvcmRlcnNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5gO1xuY29uc3QgRm91cldhbGxldHNJdGVtID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoV2FsbGV0SXRlbSwge1xuICAgIGdldCBuYW1lKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmxhYmVsTGluZTE7XG4gICAgfSxcbiAgICBnZXQgc2Vjb25kTGluZSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5sYWJlbExpbmUyO1xuICAgIH0sXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEZvdXJXYWxsZXRzQ2FyZCwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChGb3IsIHtcbiAgICAgICAgICAgIGVhY2g6IFswLCAxLCAyLCAzXSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiAoaW5kZXgpID0+IGNyZWF0ZUNvbXBvbmVudChGb3VyV2FsbGV0c0ltYWdlLCB7XG4gICAgICAgICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmltYWdlc1tpbmRleF07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb25DbGljazogKCkgPT4gcHJvcHMub25DbGljaygpXG4gIH0pO1xufTtcbmNvbnN0IEFUX1dBTExFVF9BUFBfTkFNRSA9IFwidGVsZWdyYW0td2FsbGV0XCI7XG5jb25zdCBJTUcgPSB7XG4gIFRPTjogXCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vdG9uLWNvbm5lY3Qvc2RrL21haW4vYXNzZXRzL3Rvbi1pY29uLTQ4LnBuZ1wiLFxuICBURzogXCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vdG9uLWNvbm5lY3Qvc2RrL21haW4vYXNzZXRzL3RnLnBuZ1wiXG59O1xuY29uc3QgV2FsbGV0TGFiZWxlZEl0ZW0gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3QyXSA9IHVzZUkxOG4oKTtcbiAgY29uc3Qgd2FsbGV0c1NlY29uZExpbmUgPSAoKSA9PiB7XG4gICAgaWYgKHByb3BzLndhbGxldC5hcHBOYW1lID09PSBBVF9XQUxMRVRfQVBQX05BTUUpIHtcbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIGlmIChcImlzUHJlZmVycmVkXCIgaW4gcHJvcHMud2FsbGV0ICYmIHByb3BzLndhbGxldC5pc1ByZWZlcnJlZCkge1xuICAgICAgcmV0dXJuIHQyKFwid2FsbGV0SXRlbS5yZWNlbnRcIiwge30sIFwiUmVjZW50XCIpO1xuICAgIH1cbiAgICBpZiAoaXNXYWxsZXRJbmZvQ3VycmVudGx5SW5qZWN0ZWQocHJvcHMud2FsbGV0KSkge1xuICAgICAgcmV0dXJuIHQyKFwid2FsbGV0SXRlbS5pbnN0YWxsZWRcIiwge30sIFwiSW5zdGFsbGVkXCIpO1xuICAgIH1cbiAgICBpZiAocHJvcHMud2FsbGV0Lm5hbWUgPT09IFwiVG9ua2VlcGVyXCIpIHtcbiAgICAgIHJldHVybiB0MihcIndhbGxldEl0ZW0ucG9wdWxhclwiLCB7fSwgXCJQb3B1bGFyXCIpO1xuICAgIH1cbiAgICByZXR1cm4gdm9pZCAwO1xuICB9O1xuICByZXR1cm4gY3JlYXRlTWVtbygoKCkgPT4ge1xuICAgIGNvbnN0IF9jJCA9IGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0LmFwcE5hbWUgPT09IEFUX1dBTExFVF9BUFBfTkFNRSk7XG4gICAgcmV0dXJuICgpID0+IF9jJCgpID8gY3JlYXRlQ29tcG9uZW50KFdhbGxldEl0ZW0sIHtcbiAgICAgIGdldCBpY29uKCkge1xuICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0LmltYWdlVXJsO1xuICAgICAgfSxcbiAgICAgIGdldCBuYW1lKCkge1xuICAgICAgICByZXR1cm4gdDIoXCJ3YWxsZXRJdGVtLndhbGxldE9uXCIsIHt9LCBcIldhbGxldCBpblwiKTtcbiAgICAgIH0sXG4gICAgICBzZWNvbmRMaW5lOiBcIlRlbGVncmFtXCIsXG4gICAgICBnZXQgYmFkZ2VVcmwoKSB7XG4gICAgICAgIHJldHVybiBJTUcuVEc7XG4gICAgICB9LFxuICAgICAgb25DbGljazogKCkgPT4gcHJvcHMub25DbGljaygpXG4gICAgfSkgOiBjcmVhdGVDb21wb25lbnQoV2FsbGV0SXRlbSwge1xuICAgICAgZ2V0IGljb24oKSB7XG4gICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuaW1hZ2VVcmw7XG4gICAgICB9LFxuICAgICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQubmFtZTtcbiAgICAgIH0sXG4gICAgICBnZXQgc2Vjb25kTGluZSgpIHtcbiAgICAgICAgcmV0dXJuIHdhbGxldHNTZWNvbmRMaW5lKCk7XG4gICAgICB9LFxuICAgICAgc2Vjb25kTGluZUNvbG9yUHJpbWFyeTogZmFsc2UsXG4gICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsaWNrKClcbiAgICB9KTtcbiAgfSkoKSk7XG59O1xuY29uc3QgU2Nyb2xsQ29udGFpbmVyU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMTAwJTtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIG1heC1oZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy5tYXhIZWlnaHR9O1xuXG4gICAgc2Nyb2xsYmFyLXdpZHRoOiBub25lO1xuICAgICYmOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgJiY6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgfVxuXG4gICAgJiY6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5gO1xuY29uc3QgU2Nyb2xsRGl2aWRlciA9IHN0eWxlZC5kaXZgXG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgbWFyZ2luOiAwIC0yNHB4O1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKyA0OHB4KTtcbiAgICBvcGFjaXR5OiAwLjA4O1xuICAgIGJhY2tncm91bmQ6ICR7KHByb3BzKSA9PiBwcm9wcy5pc1Nob3duID8gcHJvcHMudGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5IDogXCJ0cmFuc3BhcmVudFwifTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMTVzIGVhc2UtaW4tb3V0O1xuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbmA7XG5jb25zdCBbd2luZG93SGVpZ2h0LCBzZXRXaW5kb3dIZWlnaHRdID0gY3JlYXRlU2lnbmFsKCgoX2ggPSBnZXRXaW5kb3ckMSgpKSA9PSBudWxsID8gdm9pZCAwIDogX2guaW5uZXJIZWlnaHQpIHx8IDApO1xuaWYgKGdldFdpbmRvdyQxKCkpIHtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgKCkgPT4gc2V0V2luZG93SGVpZ2h0KHdpbmRvdy5pbm5lckhlaWdodCkpO1xufVxuY29uc3QgW2lzTW9iaWxlLCBzZXRJc01vYmlsZV0gPSBjcmVhdGVTaWduYWwoaXNEZXZpY2UoXCJtb2JpbGVcIikpO1xuY29uc3QgdXBkYXRlSXNNb2JpbGUgPSAoKSA9PiBzZXRJc01vYmlsZShpc0RldmljZShcIm1vYmlsZVwiKSk7XG5pZiAoZ2V0V2luZG93JDEoKSkge1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCAoKSA9PiB1cGRhdGVJc01vYmlsZSgpKTtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IHVwZGF0ZUlzTW9iaWxlKCksIHsgb25jZTogdHJ1ZSB9KTtcbn1cbmNvbnN0IFNjcm9sbENvbnRhaW5lciA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbc2Nyb2xsZWQsIHNldFNjcm9sbGVkXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IG9uU2Nyb2xsID0gKGUyKSA9PiB7XG4gICAgc2V0U2Nyb2xsZWQoZTIudGFyZ2V0LnNjcm9sbFRvcCA+IDApO1xuICB9O1xuICBjb25zdCBvZmZzZXQgPSAoKSA9PiBpc01vYmlsZSgpID8gMTUwIDogMjAwO1xuICBjb25zdCBtYXhIZWlnaHQgPSAoKSA9PiBwcm9wcy5tYXhIZWlnaHQgIT09IHZvaWQgMCA/IGAke3Byb3BzLm1heEhlaWdodH1weGAgOiBgJHt3aW5kb3dIZWlnaHQoKSAtIG9mZnNldCgpfXB4YDtcbiAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2Nyb2xsRGl2aWRlciwge1xuICAgIGdldCBpc1Nob3duKCkge1xuICAgICAgcmV0dXJuIHNjcm9sbGVkKCk7XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KFNjcm9sbENvbnRhaW5lclN0eWxlZCwge1xuICAgIGdldCBtYXhIZWlnaHQoKSB7XG4gICAgICByZXR1cm4gbWF4SGVpZ2h0KCk7XG4gICAgfSxcbiAgICBvblNjcm9sbCxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICB9KV07XG59O1xuY29uc3QgQVN0eWxlZCA9IHN0eWxlZC5hYFxuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5zZXQ7XG5gO1xuY29uc3QgTGluayA9IChwcm9wcykgPT4ge1xuICBjb25zdCBhdHRyaWJ1dGVzID0gKCkgPT4gcHJvcHMuYmxhbmsgPyB7XG4gICAgcmVsOiBcIm5vcmVmZXJyZXIgbm9vcGVuZXJcIlxuICB9IDoge307XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoQVN0eWxlZCwgbWVyZ2VQcm9wcyh7XG4gICAgZ2V0IGhyZWYoKSB7XG4gICAgICByZXR1cm4gcHJvcHMuaHJlZjtcbiAgICB9LFxuICAgIGdldCB0YXJnZXQoKSB7XG4gICAgICByZXR1cm4gcHJvcHMuYmxhbmsgPyBcIl9ibGFua1wiIDogXCJfc2VsZlwiO1xuICAgIH0sXG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH1cbiAgfSwgYXR0cmlidXRlcywge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jaGlsZHJlbjtcbiAgICB9XG4gIH0pKTtcbn07XG5jb25zdCBUb25Db25uZWN0VWlDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuY29uc3QgX3RtcGwkJDcgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTcuNzYyMjggMi4wOTk5OEgxMC4yMzc4QzExLjA0NTggMi4wOTk5NyAxMS43MDY3IDIuMDk5OTYgMTIuMjQzOCAyLjE0Mzg0QzEyLjc5OTcgMi4xODkyNiAxMy4zMDE3IDIuMjg2MTQgMTMuNzcwNiAyLjUyNTA1QzE0LjUwNDUgMi44OTg5NiAxNS4xMDExIDMuNDk1NTggMTUuNDc1IDQuMjI5NDFDMTUuNzEzOSA0LjY5ODMgMTUuODEwOCA1LjIwMDM4IDE1Ljg1NjIgNS43NTYyOUMxNS45MDAxIDYuMjkzMzcgMTUuOTAwMSA2Ljk1NDIyIDE1LjkwMDEgNy43NjIyN1Y4LjFIMTYuMjM3N0MxNy4wNDU3IDguMDk5OTkgMTcuNzA2NiA4LjA5OTk4IDE4LjI0MzcgOC4xNDM4NkMxOC43OTk2IDguMTg5MjggMTkuMzAxNyA4LjI4NjE2IDE5Ljc3MDUgOC41MjUwN0MyMC41MDQ0IDguODk4OTggMjEuMTAxIDkuNDk1NiAyMS40NzQ5IDEwLjIyOTRDMjEuNzEzOCAxMC42OTgzIDIxLjgxMDcgMTEuMjAwNCAyMS44NTYxIDExLjc1NjNDMjEuOSAxMi4yOTM0IDIxLjkgMTIuOTU0MiAyMS45IDEzLjc2MjNWMTYuMjM3N0MyMS45IDE3LjA0NTggMjEuOSAxNy43MDY2IDIxLjg1NjEgMTguMjQzN0MyMS44MTA3IDE4Ljc5OTYgMjEuNzEzOCAxOS4zMDE3IDIxLjQ3NDkgMTkuNzcwNkMyMS4xMDEgMjAuNTA0NCAyMC41MDQ0IDIxLjEwMSAxOS43NzA1IDIxLjQ3NDlDMTkuMzAxNyAyMS43MTM4IDE4Ljc5OTYgMjEuODEwNyAxOC4yNDM3IDIxLjg1NjFDMTcuNzA2NiAyMS45IDE3LjA0NTggMjEuOSAxNi4yMzc4IDIxLjlIMTMuNzYyM0MxMi45NTQzIDIxLjkgMTIuMjkzNCAyMS45IDExLjc1NjMgMjEuODU2MUMxMS4yMDA0IDIxLjgxMDcgMTAuNjk4MyAyMS43MTM4IDEwLjIyOTQgMjEuNDc0OUM5LjQ5NTYxIDIxLjEwMSA4Ljg5ODk4IDIwLjUwNDQgOC41MjUwOCAxOS43NzA2QzguMjg2MTYgMTkuMzAxNyA4LjE4OTI4IDE4Ljc5OTYgOC4xNDM4NiAxOC4yNDM3QzguMDk5OTggMTcuNzA2NiA4LjA5OTk5IDE3LjA0NTggOC4xIDE2LjIzNzdWMTUuOUg3Ljc2MjI3QzYuOTU0MjYgMTUuOSA2LjI5MzM1IDE1LjkgNS43NTYyOSAxNS44NTYxQzUuMjAwMzggMTUuODEwNyA0LjY5ODMgMTUuNzEzOCA0LjIyOTQxIDE1LjQ3NDlDMy40OTU1OCAxNS4xMDEgMi44OTg5NiAxNC41MDQ0IDIuNTI1MDUgMTMuNzcwNUMyLjI4NjE0IDEzLjMwMTcgMi4xODkyNiAxMi43OTk2IDIuMTQzODQgMTIuMjQzN0MyLjA5OTk2IDExLjcwNjYgMi4wOTk5NyAxMS4wNDU4IDIuMDk5OTggMTAuMjM3N1Y3Ljc2MjI4QzIuMDk5OTcgNi45NTQyNCAyLjA5OTk2IDYuMjkzMzYgMi4xNDM4NCA1Ljc1NjI5QzIuMTg5MjYgNS4yMDAzOCAyLjI4NjE0IDQuNjk4MyAyLjUyNTA1IDQuMjI5NDFDMi44OTg5NiAzLjQ5NTU4IDMuNDk1NTggMi44OTg5NiA0LjIyOTQxIDIuNTI1MDVDNC42OTgzIDIuMjg2MTQgNS4yMDAzOCAyLjE4OTI2IDUuNzU2MjkgMi4xNDM4NEM2LjI5MzM2IDIuMDk5OTYgNi45NTQyNSAyLjA5OTk3IDcuNzYyMjggMi4wOTk5OFpNOC4xIDE0LjFWMTMuNzYyM0M4LjA5OTk5IDEyLjk1NDIgOC4wOTk5OCAxMi4yOTM0IDguMTQzODYgMTEuNzU2M0M4LjE4OTI4IDExLjIwMDQgOC4yODYxNiAxMC42OTgzIDguNTI1MDggMTAuMjI5NEM4Ljg5ODk4IDkuNDk1NiA5LjQ5NTYxIDguODk4OTggMTAuMjI5NCA4LjUyNTA3QzEwLjY5ODMgOC4yODYxNiAxMS4yMDA0IDguMTg5MjggMTEuNzU2MyA4LjE0Mzg2QzEyLjI5MzQgOC4wOTk5OCAxMi45NTQyIDguMDk5OTkgMTMuNzYyMyA4LjFIMTQuMTAwMVY3Ljc5OTk4QzE0LjEwMDEgNi45NDUwNSAxNC4wOTk0IDYuMzU3OTggMTQuMDYyMiA1LjkwMjg3QzE0LjAyNTkgNS40NTgyNyAxMy45NTkzIDUuMjE5NDQgMTMuODcxMiA1LjA0NjZDMTMuNjY5OSA0LjY1MTQ2IDEzLjM0ODYgNC4zMzAyIDEyLjk1MzUgNC4xMjg4NkMxMi43ODA2IDQuMDQwNzkgMTIuNTQxOCAzLjk3NDE5IDEyLjA5NzIgMy45Mzc4NkMxMS42NDIxIDMuOTAwNjggMTEuMDU1IDMuODk5OTggMTAuMjAwMSAzLjg5OTk4SDcuNzk5OThDNi45NDUwNSAzLjg5OTk4IDYuMzU3OTggMy45MDA2OCA1LjkwMjg3IDMuOTM3ODZDNS40NTgyNyAzLjk3NDE5IDUuMjE5NDQgNC4wNDA3OSA1LjA0NjYgNC4xMjg4NkM0LjY1MTQ2IDQuMzMwMiA0LjMzMDIgNC42NTE0NiA0LjEyODg2IDUuMDQ2NkM0LjA0MDc5IDUuMjE5NDQgMy45NzQxOSA1LjQ1ODI3IDMuOTM3ODYgNS45MDI4N0MzLjkwMDY4IDYuMzU3OTggMy44OTk5OCA2Ljk0NTA1IDMuODk5OTggNy43OTk5OFYxMC4yQzMuODk5OTggMTEuMDU0OSAzLjkwMDY4IDExLjY0MiAzLjkzNzg2IDEyLjA5NzFDMy45NzQxOSAxMi41NDE3IDQuMDQwNzkgMTIuNzgwNSA0LjEyODg2IDEyLjk1MzRDNC4zMzAyIDEzLjM0ODUgNC42NTE0NiAxMy42Njk4IDUuMDQ2NiAxMy44NzExQzUuMjE5NDQgMTMuOTU5MiA1LjQ1ODI3IDE0LjAyNTggNS45MDI4NyAxNC4wNjIxQzYuMzU3OTggMTQuMDk5MyA2Ljk0NTA1IDE0LjEgNy43OTk5OCAxNC4xSDguMVpNMTEuMDQ2NiAxMC4xMjg5QzExLjIxOTUgMTAuMDQwOCAxMS40NTgzIDkuOTc0MjEgMTEuOTAyOSA5LjkzNzg4QzEyLjM1OCA5LjkwMDcgMTIuOTQ1MSA5LjkgMTMuOCA5LjlIMTYuMkMxNy4wNTQ5IDkuOSAxNy42NDIgOS45MDA3IDE4LjA5NzEgOS45Mzc4OEMxOC41NDE3IDkuOTc0MjEgMTguNzgwNSAxMC4wNDA4IDE4Ljk1MzQgMTAuMTI4OUMxOS4zNDg1IDEwLjMzMDIgMTkuNjY5OCAxMC42NTE1IDE5Ljg3MTEgMTEuMDQ2NkMxOS45NTkyIDExLjIxOTUgMjAuMDI1OCAxMS40NTgzIDIwLjA2MjEgMTEuOTAyOUMyMC4wOTkzIDEyLjM1OCAyMC4xIDEyLjk0NTEgMjAuMSAxMy44VjE2LjJDMjAuMSAxNy4wNTQ5IDIwLjA5OTMgMTcuNjQyIDIwLjA2MjEgMTguMDk3MUMyMC4wMjU4IDE4LjU0MTcgMTkuOTU5MiAxOC43ODA1IDE5Ljg3MTEgMTguOTUzNEMxOS42Njk4IDE5LjM0ODUgMTkuMzQ4NSAxOS42Njk4IDE4Ljk1MzQgMTkuODcxMUMxOC43ODA1IDE5Ljk1OTIgMTguNTQxNyAyMC4wMjU4IDE4LjA5NzEgMjAuMDYyMUMxNy42NDIgMjAuMDk5MyAxNy4wNTQ5IDIwLjEgMTYuMiAyMC4xSDEzLjhDMTIuOTQ1MSAyMC4xIDEyLjM1OCAyMC4wOTkzIDExLjkwMjkgMjAuMDYyMUMxMS40NTgzIDIwLjAyNTggMTEuMjE5NSAxOS45NTkyIDExLjA0NjYgMTkuODcxMUMxMC42NTE1IDE5LjY2OTggMTAuMzMwMiAxOS4zNDg1IDEwLjEyODkgMTguOTUzNEMxMC4wNDA4IDE4Ljc4MDUgOS45NzQyMSAxOC41NDE3IDkuOTM3ODggMTguMDk3MUM5LjkwMDcgMTcuNjQyIDkuOSAxNy4wNTQ5IDkuOSAxNi4yVjEzLjhDOS45IDEyLjk0NTEgOS45MDA3IDEyLjM1OCA5LjkzNzg4IDExLjkwMjlDOS45NzQyMSAxMS40NTgzIDEwLjA0MDggMTEuMjE5NSAxMC4xMjg5IDExLjA0NjZDMTAuMzMwMiAxMC42NTE1IDEwLjY1MTUgMTAuMzMwMiAxMS4wNDY2IDEwLjEyODlaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgQ29weUljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5wcmltYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJDcuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgY29uc3QgX3YkID0gcHJvcHMuY2xhc3MsIF92JDIgPSBmaWxsKCk7XG4gICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQsIFwiY2xhc3NcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCQ2ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxwYXRoIGQ9XCJNOC43NjI0IDMuMTAwMDFDNy45NTQzNSAzLjEgNy4yOTM0OSAzLjA5OTk5IDYuNzU2NDIgMy4xNDM4N0M2LjIwMDUgMy4xODkyOSA1LjY5ODQyIDMuMjg2MTcgNS4yMjk1NCAzLjUyNTA4QzQuNDk1NyAzLjg5ODk5IDMuODk5MDggNC40OTU2MSAzLjUyNTE3IDUuMjI5NDRDMy4yODYyNiA1LjY5ODMzIDMuMTg5MzggNi4yMDA0MSAzLjE0Mzk2IDYuNzU2MzJDMy4xMDAwOCA3LjI5MzQgMy4xMDAwOSA3Ljk1NDI0IDMuMTAwMSA4Ljc2MjI5VjE1LjIzNzdDMy4xMDAwOSAxNi4wNDU4IDMuMTAwMDggMTYuNzA2NiAzLjE0Mzk2IDE3LjI0MzdDMy4xODkzOCAxNy43OTk2IDMuMjg2MjYgMTguMzAxNyAzLjUyNTE3IDE4Ljc3MDZDMy44OTkwOCAxOS41MDQ0IDQuNDk1NyAyMC4xMDEgNS4yMjk1NCAyMC40NzQ5QzUuNjk4NDIgMjAuNzEzOCA2LjIwMDUgMjAuODEwNyA2Ljc1NjQyIDIwLjg1NjFDNy4yOTM0OSAyMC45IDcuOTU0MzQgMjAuOSA4Ljc2MjM5IDIwLjlIMTIuMDAwMUMxMi40OTcyIDIwLjkgMTIuOTAwMSAyMC40OTcxIDEyLjkwMDEgMjBDMTIuOTAwMSAxOS41MDMgMTIuNDk3MiAxOS4xIDEyLjAwMDEgMTkuMUg4LjgwMDFDNy45NDUxNyAxOS4xIDcuMzU4MSAxOS4wOTkzIDYuOTAyOTkgMTkuMDYyMUM2LjQ1ODM5IDE5LjAyNTggNi4yMTk1NiAxOC45NTkyIDYuMDQ2NzIgMTguODcxMUM1LjY1MTU4IDE4LjY2OTggNS4zMzAzMiAxOC4zNDg1IDUuMTI4OTggMTcuOTUzNEM1LjA0MDkyIDE3Ljc4MDUgNC45NzQzMSAxNy41NDE3IDQuOTM3OTggMTcuMDk3MUM0LjkwMDggMTYuNjQyIDQuOTAwMSAxNi4wNTQ5IDQuOTAwMSAxNS4yVjguODAwMDFDNC45MDAxIDcuOTQ1MDggNC45MDA4IDcuMzU4MDEgNC45Mzc5OCA2LjkwMjlDNC45NzQzMSA2LjQ1ODMgNS4wNDA5MiA2LjIxOTQ3IDUuMTI4OTggNi4wNDY2M0M1LjMzMDMyIDUuNjUxNDkgNS42NTE1OCA1LjMzMDIzIDYuMDQ2NzIgNS4xMjg4OUM2LjIxOTU2IDUuMDQwODIgNi40NTgzOSA0Ljk3NDIyIDYuOTAyOTkgNC45Mzc4OUM3LjM1ODEgNC45MDA3MSA3Ljk0NTE3IDQuOTAwMDEgOC44MDAxIDQuOTAwMDFIMTIuMDAwMUMxMi40OTcyIDQuOTAwMDEgMTIuOTAwMSA0LjQ5NzA2IDEyLjkwMDEgNC4wMDAwMUMxMi45MDAxIDMuNTAyOTUgMTIuNDk3MiAzLjEwMDAxIDEyLjAwMDEgMy4xMDAwMUg4Ljc2MjRaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMTcuNjM2NCA3LjM2MzZDMTcuMjg0OSA3LjAxMjEyIDE2LjcxNTEgNy4wMTIxMiAxNi4zNjM2IDcuMzYzNkMxNi4wMTIxIDcuNzE1MDcgMTYuMDEyMSA4LjI4NDkyIDE2LjM2MzYgOC42MzYzOUwxOC44MjcyIDExLjFIOS4wMDAwMUM4LjUwMjk1IDExLjEgOC4xMDAwMSAxMS41MDI5IDguMTAwMDEgMTJDOC4xMDAwMSAxMi40OTcgOC41MDI5NSAxMi45IDkuMDAwMDEgMTIuOUgxOC44MjcyTDE2LjM2MzYgMTUuMzYzNkMxNi4wMTIxIDE1LjcxNTEgMTYuMDEyMSAxNi4yODQ5IDE2LjM2MzYgMTYuNjM2NEMxNi43MTUxIDE2Ljk4NzkgMTcuMjg0OSAxNi45ODc5IDE3LjYzNjQgMTYuNjM2NEwyMS42MzY0IDEyLjYzNjRDMjEuOTg3OSAxMi4yODQ5IDIxLjk4NzkgMTEuNzE1MSAyMS42MzY0IDExLjM2MzZMMTcuNjM2NCA3LjM2MzZaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgRGlzY29ubmVjdEljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5wcmltYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJDYuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZCwgX2VsJDMgPSBfZWwkMi5uZXh0U2libGluZztcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgY29uc3QgX3YkID0gZmlsbCgpLCBfdiQyID0gZmlsbCgpO1xuICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQzLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgIHJldHVybiBfcCQ7XG4gICAgfSwge1xuICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICBfdiQyOiB2b2lkIDBcbiAgICB9KTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBob3ZlckJvcmRlcnMkMSA9IHtcbiAgbTogXCI4cHhcIixcbiAgczogXCI0cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBkcm9wZG93bkJvcmRlcnMgPSB7XG4gIG06IFwiMTZweFwiLFxuICBzOiBcIjhweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IEFjY291bnRCdXR0b25Ecm9wZG93blN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDI1NnB4O1xuICAgIGJveC1zaGFkb3c6IDAgNHB4IDI0cHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gZHJvcGRvd25Cb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9XG4gICAgICAgICAgIFxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQucHJpbWFyeX1cbmA7XG5jb25zdCBVbFN0eWxlZCA9IHN0eWxlZC51bGBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucHJpbWFyeX07XG4gICAgcGFkZGluZzogOHB4O1xuYDtcbmNvbnN0IE1lbnVCdXR0b25TdHlsZWQgPSBzdHlsZWQuYnV0dG9uYFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDhweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiA4cHg7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucHJpbWFyeX07XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBob3ZlckJvcmRlcnMkMVtwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yLCB0cmFuc2Zvcm0gMC4xcyBlYXNlLWluLW91dDtcblxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQuc2Vjb25kYXJ5fTtcbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG4gICAgfVxuYDtcbmNvbnN0IF90bXBsJCQ1ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxsaT48L2xpPmApO1xuY29uc3QgTWVudUl0ZW1UZXh0ID0gKHByb3BzKSA9PiBjcmVhdGVDb21wb25lbnQoVGV4dCwge1xuICBnZXQgdHJhbnNsYXRpb25LZXkoKSB7XG4gICAgcmV0dXJuIHByb3BzLnRyYW5zbGF0aW9uS2V5O1xuICB9LFxuICBmb250U2l6ZTogXCIxNXB4XCIsXG4gIGZvbnRXZWlnaHQ6IFwiNTkwXCIsXG4gIGdldCBjaGlsZHJlbigpIHtcbiAgICByZXR1cm4gcHJvcHMuY2hpbGRyZW47XG4gIH1cbn0pO1xuY29uc3QgQWNjb3VudEJ1dHRvbkRyb3Bkb3duID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRvbkNvbm5lY3RVaSA9IHVzZUNvbnRleHQoVG9uQ29ubmVjdFVpQ29udGV4dCk7XG4gIGNvbnN0IFtpc0NvcGllZFNob3duLCBzZXRJc0NvcGllZFNob3duXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IG9uQ29weSA9ICgpID0+IF9fYXN5bmModm9pZCAwLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgIGNvbnN0IHVzZXJGcmllbmRseUFkZHJlc3MgPSB0b1VzZXJGcmllbmRseUFkZHJlc3ModG9uQ29ubmVjdFVpLmFjY291bnQuYWRkcmVzcywgdG9uQ29ubmVjdFVpLmFjY291bnQuY2hhaW4gPT09IENIQUlOLlRFU1RORVQpO1xuICAgIHlpZWxkIGNvcHlUb0NsaXBib2FyZCh1c2VyRnJpZW5kbHlBZGRyZXNzKTtcbiAgICBzZXRJc0NvcGllZFNob3duKHRydWUpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4gc2V0SXNDb3BpZWRTaG93bihmYWxzZSksIDFlMyk7XG4gIH0pO1xuICBjb25zdCBvbkRpc2Nvbm5lY3QgPSAoKSA9PiB7XG4gICAgdG9uQ29ubmVjdFVpLmRpc2Nvbm5lY3QoKTtcbiAgICBwcm9wcy5vbkNsb3NlKCk7XG4gIH07XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWNjb3VudEJ1dHRvbkRyb3Bkb3duU3R5bGVkLCB7XG4gICAgcmVmKHIkKSB7XG4gICAgICBjb25zdCBfcmVmJCA9IHByb3BzLnJlZjtcbiAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiID8gX3JlZiQociQpIDogcHJvcHMucmVmID0gciQ7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtZHJvcGRvd25cIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChVbFN0eWxlZCwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFsoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCQ1LmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgIGluc2VydChfZWwkLCBjcmVhdGVDb21wb25lbnQoTWVudUJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBvbkNvcHkoKSxcbiAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KENvcHlJY29uLCB7fSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFpc0NvcGllZFNob3duKCk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1lbnVJdGVtVGV4dCwge1xuICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImJ1dHRvbi5kcm9wZG93bi5jb3B5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ29weSBhZGRyZXNzXCJcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzQ29waWVkU2hvd24oKTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTWVudUl0ZW1UZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiYnV0dG9uLmRyb3Bkb3duLmNvcGllZFwiLFxuICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkFkZHJlc3MgY29waWVkIVwiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgICAgICAgfSkoKSwgKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IF9lbCQyID0gX3RtcGwkJDUuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgaW5zZXJ0KF9lbCQyLCBjcmVhdGVDb21wb25lbnQoTWVudUJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBvbkRpc2Nvbm5lY3QoKSxcbiAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KERpc2Nvbm5lY3RJY29uLCB7fSksIGNyZWF0ZUNvbXBvbmVudChNZW51SXRlbVRleHQsIHtcbiAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImJ1dHRvbi5kcm9wZG93bi5kaXNjb25uZWN0XCIsXG4gICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJEaXNjb25uZWN0XCJcbiAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIHJldHVybiBfZWwkMjtcbiAgICAgICAgICB9KSgpXTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBib3JkZXJzJDIgPSB7XG4gIG06IFwiMTZweFwiLFxuICBzOiBcIjhweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IE5vdGlmaWNhdGlvblN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDI1NnB4O1xuICAgIHBhZGRpbmc6IDEycHggMTZweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogOXB4O1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9O1xuICAgIGJveC1zaGFkb3c6IDAgNHB4IDI0cHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYm9yZGVycyQyW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuYDtcbmNvbnN0IE5vdGlmaWNhdGlvbkNvbnRlbnRTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxOTJweDtcblxuICAgID4gaDMge1xuICAgICAgICBmb250LXNpemU6IDE1cHg7XG4gICAgfVxuYDtcbmNvbnN0IFRleHRTdHlsZWQkMiA9IHN0eWxlZChUZXh0KWBcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuYDtcbmNvbnN0IE5vdGlmaWNhdGlvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBkYXRhQXR0cnMgPSB1c2VEYXRhQXR0cmlidXRlcyhwcm9wcyk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoTm90aWZpY2F0aW9uU3R5bGVkLCBtZXJnZVByb3BzKHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtbm90aWZpY2F0aW9uXCI6IFwidHJ1ZVwiXG4gIH0sIGRhdGFBdHRycywge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KE5vdGlmaWNhdGlvbkNvbnRlbnRTdHlsZWQsIHtcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEgzLCB7XG4gICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25LZXkoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5oZWFkZXIudHJhbnNsYXRpb25LZXk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuaGVhZGVyLnRyYW5zbGF0aW9uVmFsdWVzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmNoaWxkcmVuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy50ZXh0O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUZXh0U3R5bGVkJDIsIHtcbiAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25LZXkoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMudGV4dC50cmFuc2xhdGlvbktleTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy50ZXh0LnRyYW5zbGF0aW9uVmFsdWVzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy5pY29uKV07XG4gICAgfVxuICB9KSk7XG59O1xuY29uc3QgTG9hZGVySWNvblN0eWxlZCQyID0gc3R5bGVkKExvYWRlckljb24pYFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbmA7XG5jb25zdCBDb25maXJtT3BlcmF0aW9uTm90aWZpY2F0aW9uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRvbkNvbm5lY3RVSSA9IHVzZUNvbnRleHQoVG9uQ29ubmVjdFVpQ29udGV4dCk7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIGNvbnN0IG5hbWUgPSAoKSA9PiB0b25Db25uZWN0VUkud2FsbGV0ICYmIFwibmFtZVwiIGluIHRvbkNvbm5lY3RVSS53YWxsZXQgPyB0b25Db25uZWN0VUkud2FsbGV0Lm5hbWUgOiB0MihcImNvbW1vbi55b3VyV2FsbGV0XCIsIHt9LCBcIllvdXIgd2FsbGV0XCIpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE5vdGlmaWNhdGlvbiwge1xuICAgIGdldCBoZWFkZXIoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0cmFuc2xhdGlvbktleTogXCJub3RpZmljYXRpb25zLmNvbmZpcm0uaGVhZGVyXCIsXG4gICAgICAgIHRyYW5zbGF0aW9uVmFsdWVzOiB7XG4gICAgICAgICAgbmFtZTogbmFtZSgpXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBnZXQgaWNvbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVySWNvblN0eWxlZCQyLCB7fSk7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtbm90aWZpY2F0aW9uLWNvbmZpcm1cIjogXCJ0cnVlXCIsXG4gICAgY2hpbGRyZW46IFwiQ29uZmlybSBvcGVyYXRpb24gaW4geW91ciB3YWxsZXRcIlxuICB9KTtcbn07XG5jb25zdCBFcnJvckljb25TdHlsZWQkMiA9IHN0eWxlZChFcnJvckljb24pYFxuICAgIG1hcmdpbi10b3A6IDJweDtcbmA7XG5jb25zdCBFcnJvclRyYW5zYWN0aW9uTm90aWZpY2F0aW9uID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoTm90aWZpY2F0aW9uLCB7XG4gICAgaGVhZGVyOiB7XG4gICAgICB0cmFuc2xhdGlvbktleTogXCJub3RpZmljYXRpb25zLnRyYW5zYWN0aW9uQ2FuY2VsZWQuaGVhZGVyXCJcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIm5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25DYW5jZWxlZC50ZXh0XCJcbiAgICB9LFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChFcnJvckljb25TdHlsZWQkMiwge1xuICAgICAgICBzaXplOiBcInhzXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLW5vdGlmaWNhdGlvbi10eC1jYW5jZWxsZWRcIjogXCJ0cnVlXCIsXG4gICAgY2hpbGRyZW46IFwiVHJhbnNhY3Rpb24gY2FuY2VsbGVkXCJcbiAgfSk7XG59O1xuY29uc3QgU3VjY2Vzc0ljb25TdHlsZWQgPSBzdHlsZWQoU3VjY2Vzc0ljb24pYFxuICAgIG1hcmdpbi10b3A6IDJweDtcbmA7XG5jb25zdCBTdWNjZXNzVHJhbnNhY3Rpb25Ob3RpZmljYXRpb24gPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChOb3RpZmljYXRpb24sIHtcbiAgICBoZWFkZXI6IHtcbiAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIm5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25TZW50LmhlYWRlclwiXG4gICAgfSxcbiAgICB0ZXh0OiB7XG4gICAgICB0cmFuc2xhdGlvbktleTogXCJub3RpZmljYXRpb25zLnRyYW5zYWN0aW9uU2VudC50ZXh0XCJcbiAgICB9LFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdWNjZXNzSWNvblN0eWxlZCwge30pO1xuICAgIH0sXG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLW5vdGlmaWNhdGlvbi10eC1zZW50XCI6IFwidHJ1ZVwiLFxuICAgIGNoaWxkcmVuOiBcIlRyYW5zYWN0aW9uIHNlbnRcIlxuICB9KTtcbn07XG5jb25zdCBOb3RpZmljYXRpb25DbGFzcyA9IHVgXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC04cHgpO1xuICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG5gO1xuY29uc3QgZGVmYXVsdENvbmZpZyA9IHtcbiAgdGltZW91dDogNDUwMFxufTtcbmNvbnN0IFtsYXRlc3RBY3Rpb24sIHNldExhdGVzdEFjdGlvbl0gPSBjcmVhdGVTaWduYWwobnVsbCk7XG5mdW5jdGlvbiB1c2VPcGVuZWROb3RpZmljYXRpb25zKGNvbmZpZykge1xuICBjb25zdCB7IHRpbWVvdXQgfSA9IF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCBkZWZhdWx0Q29uZmlnKSwgY29uZmlnKTtcbiAgY29uc3QgW29wZW5lZE5vdGlmaWNhdGlvbnMsIHNldE9wZW5lZE5vdGlmaWNhdGlvbnNdID0gY3JlYXRlU2lnbmFsKFtdKTtcbiAgY29uc3QgW3RpbWVvdXRJZHMsIHNldFRpbWVvdXRJZHNdID0gY3JlYXRlU2lnbmFsKFtdKTtcbiAgY3JlYXRlRWZmZWN0KFxuICAgIG9uKGFjdGlvbiwgKGFjdGlvbjIpID0+IHtcbiAgICAgIHZhciBfYTI7XG4gICAgICBpZiAoIWFjdGlvbjIgfHwgIWFjdGlvbjIuc2hvd05vdGlmaWNhdGlvbikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAobGF0ZXN0QWN0aW9uKCkgPT09IGFjdGlvbjIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKCgoX2EyID0gbGF0ZXN0QWN0aW9uKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYTIubmFtZSkgPT09IFwiY29uZmlybS10cmFuc2FjdGlvblwiICYmIGFjdGlvbjIubmFtZSA9PT0gXCJjb25maXJtLXRyYW5zYWN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgc2V0TGF0ZXN0QWN0aW9uKGFjdGlvbjIpO1xuICAgICAgc2V0T3BlbmVkTm90aWZpY2F0aW9ucyhcbiAgICAgICAgKG9wZW5lZE5vdGlmaWNhdGlvbnMyKSA9PiBvcGVuZWROb3RpZmljYXRpb25zMi5maWx0ZXIoKG4yKSA9PiBuMi5hY3Rpb24gIT09IFwiY29uZmlybS10cmFuc2FjdGlvblwiKVxuICAgICAgKTtcbiAgICAgIGNvbnN0IG5vdGlmaWNhdGlvbiA9IHsgYWN0aW9uOiBhY3Rpb24yLm5hbWUgfTtcbiAgICAgIHNldE9wZW5lZE5vdGlmaWNhdGlvbnMoKG9wZW5lZE5vdGlmaWNhdGlvbnMyKSA9PiBbLi4ub3BlbmVkTm90aWZpY2F0aW9uczIsIG5vdGlmaWNhdGlvbl0pO1xuICAgICAgY29uc3QgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHNldE9wZW5lZE5vdGlmaWNhdGlvbnMoXG4gICAgICAgICAgKG9wZW5lZE5vdGlmaWNhdGlvbnMyKSA9PiBvcGVuZWROb3RpZmljYXRpb25zMi5maWx0ZXIoKG4yKSA9PiBuMiAhPT0gbm90aWZpY2F0aW9uKVxuICAgICAgICApO1xuICAgICAgICBzZXRUaW1lb3V0SWRzKCh0aW1lb3V0SWRzMikgPT4gdGltZW91dElkczIuZmlsdGVyKChpZCkgPT4gaWQgIT09IHRpbWVvdXRJZCkpO1xuICAgICAgfSwgdGltZW91dCk7XG4gICAgICBzZXRUaW1lb3V0SWRzKCh0aW1lb3V0SWRzMikgPT4gWy4uLnRpbWVvdXRJZHMyLCB0aW1lb3V0SWRdKTtcbiAgICB9KVxuICApO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIHRpbWVvdXRJZHMoKS5mb3JFYWNoKChpZCkgPT4gY2xlYXJUaW1lb3V0KGlkKSk7XG4gIH0pO1xuICByZXR1cm4gb3BlbmVkTm90aWZpY2F0aW9ucztcbn1cbmNvbnN0IF90bXBsJCQ0ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxkaXYgZGF0YS10Yy1saXN0LW5vdGlmaWNhdGlvbnM9XCJ0cnVlXCI+PC9kaXY+YCk7XG5jb25zdCBOb3RpZmljYXRpb25zID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IG9wZW5lZE5vdGlmaWNhdGlvbnMgPSB1c2VPcGVuZWROb3RpZmljYXRpb25zKCk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkNC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChUcmFuc2l0aW9uR3JvdXAsIHtcbiAgICAgIG9uQmVmb3JlRW50ZXI6IChlbCkgPT4ge1xuICAgICAgICBhbmltYXRlKGVsLCBbe1xuICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMClcIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgtOHB4KVwiXG4gICAgICAgIH1dLCB7XG4gICAgICAgICAgZHVyYXRpb246IDIwMFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBvbkV4aXQ6IChlbCwgZG9uZSkgPT4ge1xuICAgICAgICBjb25zdCBhMiA9IGFuaW1hdGUoZWwsIFt7XG4gICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgtOHB4KVwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKC0zMHB4KVwiXG4gICAgICAgIH1dLCB7XG4gICAgICAgICAgZHVyYXRpb246IDIwMFxuICAgICAgICB9KTtcbiAgICAgICAgYTIuZmluaXNoZWQudGhlbihkb25lKTtcbiAgICAgIH0sXG4gICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9yLCB7XG4gICAgICAgICAgZ2V0IGVhY2goKSB7XG4gICAgICAgICAgICByZXR1cm4gb3BlbmVkTm90aWZpY2F0aW9ucygpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hpbGRyZW46IChvcGVuZWROb3RpZmljYXRpb24pID0+IGNyZWF0ZUNvbXBvbmVudChTd2l0Y2gsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBvcGVuZWROb3RpZmljYXRpb24uYWN0aW9uID09PSBcInRyYW5zYWN0aW9uLXNlbnRcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3VjY2Vzc1RyYW5zYWN0aW9uTm90aWZpY2F0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogTm90aWZpY2F0aW9uQ2xhc3NcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wZW5lZE5vdGlmaWNhdGlvbi5hY3Rpb24gPT09IFwidHJhbnNhY3Rpb24tY2FuY2VsZWRcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRXJyb3JUcmFuc2FjdGlvbk5vdGlmaWNhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICBcImNsYXNzXCI6IE5vdGlmaWNhdGlvbkNsYXNzXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBvcGVuZWROb3RpZmljYXRpb24uYWN0aW9uID09PSBcImNvbmZpcm0tdHJhbnNhY3Rpb25cIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ29uZmlybU9wZXJhdGlvbk5vdGlmaWNhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICBcImNsYXNzXCI6IE5vdGlmaWNhdGlvbkNsYXNzXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KSk7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGNsYXNzTmFtZShfZWwkLCBwcm9wcy5jbGFzcykpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IEFjY291bnRCdXR0b25TdHlsZWQgPSBzdHlsZWQoQnV0dG9uKWBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmNvbm5lY3RCdXR0b24uYmFja2dyb3VuZH07XG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuY29ubmVjdEJ1dHRvbi5mb3JlZ3JvdW5kfTtcbiAgICBib3gtc2hhZG93OiAkeyhwcm9wcykgPT4gYDAgNHB4IDI0cHggJHtyZ2JhKHByb3BzLnRoZW1lLmNvbG9ycy5jb25zdGFudC5ibGFjaywgMC4xNil9YH07XG4gICAgcGFkZGluZzogOHB4IDE2cHggOHB4IDEycHg7XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiA0cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuYDtcbmNvbnN0IERyb3Bkb3duQnV0dG9uU3R5bGVkID0gc3R5bGVkKEFjY291bnRCdXR0b25TdHlsZWQpYFxuICAgIHBhZGRpbmc6IDEycHggMTZweDtcbiAgICBtaW4td2lkdGg6IDE0OHB4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5wcmltYXJ5fTtcbmA7XG5jb25zdCBMb2FkZXJCdXR0b25TdHlsZWQkMSA9IHN0eWxlZChCdXR0b24pYFxuICAgIG1pbi13aWR0aDogMTQ4cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9O1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmNvbm5lY3RCdXR0b24uZm9yZWdyb3VuZH07XG4gICAgYm94LXNoYWRvdzogJHsocHJvcHMpID0+IGAwIDRweCAyNHB4ICR7cmdiYShwcm9wcy50aGVtZS5jb2xvcnMuY29uc3RhbnQuYmxhY2ssIDAuMTYpfWB9O1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuYDtcbmNvbnN0IExvYWRlckljb25TdHlsZWQkMSA9IHN0eWxlZChMb2FkZXJJY29uKWBcbiAgICBoZWlnaHQ6IDE4cHg7XG4gICAgd2lkdGg6IDE4cHg7XG5gO1xuY29uc3QgRHJvcGRvd25Db250YWluZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IERyb3Bkb3duU3R5bGVkID0gc3R5bGVkKEFjY291bnRCdXR0b25Ecm9wZG93bilgXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG1hcmdpbi10b3A6IDEycHg7XG5gO1xuY29uc3QgTm90aWZpY2F0aW9uc1N0eWxlZCA9IHN0eWxlZChOb3RpZmljYXRpb25zKWBcbiAgICA+IGRpdjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgfVxuYDtcbmZ1bmN0aW9uIGdldFNpZGUocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQuc3BsaXQoXCItXCIpWzBdO1xufVxuZnVuY3Rpb24gZ2V0QWxpZ25tZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KFwiLVwiKVsxXTtcbn1cbmZ1bmN0aW9uIGdldE1haW5BeGlzRnJvbVBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIFtcInRvcFwiLCBcImJvdHRvbVwiXS5pbmNsdWRlcyhnZXRTaWRlKHBsYWNlbWVudCkpID8gXCJ4XCIgOiBcInlcIjtcbn1cbmZ1bmN0aW9uIGdldExlbmd0aEZyb21BeGlzKGF4aXMpIHtcbiAgcmV0dXJuIGF4aXMgPT09IFwieVwiID8gXCJoZWlnaHRcIiA6IFwid2lkdGhcIjtcbn1cbmZ1bmN0aW9uIGNvbXB1dGVDb29yZHNGcm9tUGxhY2VtZW50KF9yZWYsIHBsYWNlbWVudCwgcnRsKSB7XG4gIGxldCB7XG4gICAgcmVmZXJlbmNlLFxuICAgIGZsb2F0aW5nXG4gIH0gPSBfcmVmO1xuICBjb25zdCBjb21tb25YID0gcmVmZXJlbmNlLnggKyByZWZlcmVuY2Uud2lkdGggLyAyIC0gZmxvYXRpbmcud2lkdGggLyAyO1xuICBjb25zdCBjb21tb25ZID0gcmVmZXJlbmNlLnkgKyByZWZlcmVuY2UuaGVpZ2h0IC8gMiAtIGZsb2F0aW5nLmhlaWdodCAvIDI7XG4gIGNvbnN0IG1haW5BeGlzID0gZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50KHBsYWNlbWVudCk7XG4gIGNvbnN0IGxlbmd0aCA9IGdldExlbmd0aEZyb21BeGlzKG1haW5BeGlzKTtcbiAgY29uc3QgY29tbW9uQWxpZ24gPSByZWZlcmVuY2VbbGVuZ3RoXSAvIDIgLSBmbG9hdGluZ1tsZW5ndGhdIC8gMjtcbiAgY29uc3Qgc2lkZSA9IGdldFNpZGUocGxhY2VtZW50KTtcbiAgY29uc3QgaXNWZXJ0aWNhbCA9IG1haW5BeGlzID09PSBcInhcIjtcbiAgbGV0IGNvb3JkcztcbiAgc3dpdGNoIChzaWRlKSB7XG4gICAgY2FzZSBcInRvcFwiOlxuICAgICAgY29vcmRzID0ge1xuICAgICAgICB4OiBjb21tb25YLFxuICAgICAgICB5OiByZWZlcmVuY2UueSAtIGZsb2F0aW5nLmhlaWdodFxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJib3R0b21cIjpcbiAgICAgIGNvb3JkcyA9IHtcbiAgICAgICAgeDogY29tbW9uWCxcbiAgICAgICAgeTogcmVmZXJlbmNlLnkgKyByZWZlcmVuY2UuaGVpZ2h0XG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcInJpZ2h0XCI6XG4gICAgICBjb29yZHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54ICsgcmVmZXJlbmNlLndpZHRoLFxuICAgICAgICB5OiBjb21tb25ZXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImxlZnRcIjpcbiAgICAgIGNvb3JkcyA9IHtcbiAgICAgICAgeDogcmVmZXJlbmNlLnggLSBmbG9hdGluZy53aWR0aCxcbiAgICAgICAgeTogY29tbW9uWVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBjb29yZHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54LFxuICAgICAgICB5OiByZWZlcmVuY2UueVxuICAgICAgfTtcbiAgfVxuICBzd2l0Y2ggKGdldEFsaWdubWVudChwbGFjZW1lbnQpKSB7XG4gICAgY2FzZSBcInN0YXJ0XCI6XG4gICAgICBjb29yZHNbbWFpbkF4aXNdIC09IGNvbW1vbkFsaWduICogKHJ0bCAmJiBpc1ZlcnRpY2FsID8gLTEgOiAxKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgIGNvb3Jkc1ttYWluQXhpc10gKz0gY29tbW9uQWxpZ24gKiAocnRsICYmIGlzVmVydGljYWwgPyAtMSA6IDEpO1xuICAgICAgYnJlYWs7XG4gIH1cbiAgcmV0dXJuIGNvb3Jkcztcbn1cbmNvbnN0IGNvbXB1dGVQb3NpdGlvbiQxID0gKHJlZmVyZW5jZSwgZmxvYXRpbmcsIGNvbmZpZykgPT4gX19hc3luYyh2b2lkIDAsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gIGNvbnN0IHtcbiAgICBwbGFjZW1lbnQgPSBcImJvdHRvbVwiLFxuICAgIHN0cmF0ZWd5ID0gXCJhYnNvbHV0ZVwiLFxuICAgIG1pZGRsZXdhcmUgPSBbXSxcbiAgICBwbGF0Zm9ybTogcGxhdGZvcm0yXG4gIH0gPSBjb25maWc7XG4gIGNvbnN0IHZhbGlkTWlkZGxld2FyZSA9IG1pZGRsZXdhcmUuZmlsdGVyKEJvb2xlYW4pO1xuICBjb25zdCBydGwgPSB5aWVsZCBwbGF0Zm9ybTIuaXNSVEwgPT0gbnVsbCA/IHZvaWQgMCA6IHBsYXRmb3JtMi5pc1JUTChmbG9hdGluZyk7XG4gIGlmICh7fS5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBpZiAocGxhdGZvcm0yID09IG51bGwpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoW1wiRmxvYXRpbmcgVUk6IGBwbGF0Zm9ybWAgcHJvcGVydHkgd2FzIG5vdCBwYXNzZWQgdG8gY29uZmlnLiBJZiB5b3VcIiwgXCJ3YW50IHRvIHVzZSBGbG9hdGluZyBVSSBvbiB0aGUgd2ViLCBpbnN0YWxsIEBmbG9hdGluZy11aS9kb21cIiwgXCJpbnN0ZWFkIG9mIHRoZSAvY29yZSBwYWNrYWdlLiBPdGhlcndpc2UsIHlvdSBjYW4gY3JlYXRlIHlvdXIgb3duXCIsIFwiYHBsYXRmb3JtYDogaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy9wbGF0Zm9ybVwiXS5qb2luKFwiIFwiKSk7XG4gICAgfVxuICAgIGlmICh2YWxpZE1pZGRsZXdhcmUuZmlsdGVyKChfcmVmKSA9PiB7XG4gICAgICBsZXQge1xuICAgICAgICBuYW1lXG4gICAgICB9ID0gX3JlZjtcbiAgICAgIHJldHVybiBuYW1lID09PSBcImF1dG9QbGFjZW1lbnRcIiB8fCBuYW1lID09PSBcImZsaXBcIjtcbiAgICB9KS5sZW5ndGggPiAxKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoW1wiRmxvYXRpbmcgVUk6IGR1cGxpY2F0ZSBgZmxpcGAgYW5kL29yIGBhdXRvUGxhY2VtZW50YCBtaWRkbGV3YXJlXCIsIFwiZGV0ZWN0ZWQuIFRoaXMgd2lsbCBsZWFkIHRvIGFuIGluZmluaXRlIGxvb3AuIEVuc3VyZSBvbmx5IG9uZSBvZlwiLCBcImVpdGhlciBoYXMgYmVlbiBwYXNzZWQgdG8gdGhlIGBtaWRkbGV3YXJlYCBhcnJheS5cIl0uam9pbihcIiBcIikpO1xuICAgIH1cbiAgICBpZiAoIXJlZmVyZW5jZSB8fCAhZmxvYXRpbmcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoW1wiRmxvYXRpbmcgVUk6IFRoZSByZWZlcmVuY2UgYW5kL29yIGZsb2F0aW5nIGVsZW1lbnQgd2FzIG5vdCBkZWZpbmVkXCIsIFwid2hlbiBgY29tcHV0ZVBvc2l0aW9uKClgIHdhcyBjYWxsZWQuIEVuc3VyZSB0aGF0IGJvdGggZWxlbWVudHMgaGF2ZVwiLCBcImJlZW4gY3JlYXRlZCBhbmQgY2FuIGJlIG1lYXN1cmVkLlwiXS5qb2luKFwiIFwiKSk7XG4gICAgfVxuICB9XG4gIGxldCByZWN0cyA9IHlpZWxkIHBsYXRmb3JtMi5nZXRFbGVtZW50UmVjdHMoe1xuICAgIHJlZmVyZW5jZSxcbiAgICBmbG9hdGluZyxcbiAgICBzdHJhdGVneVxuICB9KTtcbiAgbGV0IHtcbiAgICB4LFxuICAgIHlcbiAgfSA9IGNvbXB1dGVDb29yZHNGcm9tUGxhY2VtZW50KHJlY3RzLCBwbGFjZW1lbnQsIHJ0bCk7XG4gIGxldCBzdGF0ZWZ1bFBsYWNlbWVudCA9IHBsYWNlbWVudDtcbiAgbGV0IG1pZGRsZXdhcmVEYXRhID0ge307XG4gIGxldCByZXNldENvdW50ID0gMDtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHZhbGlkTWlkZGxld2FyZS5sZW5ndGg7IGkyKyspIHtcbiAgICBjb25zdCB7XG4gICAgICBuYW1lLFxuICAgICAgZm5cbiAgICB9ID0gdmFsaWRNaWRkbGV3YXJlW2kyXTtcbiAgICBjb25zdCB7XG4gICAgICB4OiBuZXh0WCxcbiAgICAgIHk6IG5leHRZLFxuICAgICAgZGF0YSxcbiAgICAgIHJlc2V0XG4gICAgfSA9IHlpZWxkIGZuKHtcbiAgICAgIHgsXG4gICAgICB5LFxuICAgICAgaW5pdGlhbFBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgcGxhY2VtZW50OiBzdGF0ZWZ1bFBsYWNlbWVudCxcbiAgICAgIHN0cmF0ZWd5LFxuICAgICAgbWlkZGxld2FyZURhdGEsXG4gICAgICByZWN0cyxcbiAgICAgIHBsYXRmb3JtOiBwbGF0Zm9ybTIsXG4gICAgICBlbGVtZW50czoge1xuICAgICAgICByZWZlcmVuY2UsXG4gICAgICAgIGZsb2F0aW5nXG4gICAgICB9XG4gICAgfSk7XG4gICAgeCA9IG5leHRYICE9IG51bGwgPyBuZXh0WCA6IHg7XG4gICAgeSA9IG5leHRZICE9IG51bGwgPyBuZXh0WSA6IHk7XG4gICAgbWlkZGxld2FyZURhdGEgPSBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBtaWRkbGV3YXJlRGF0YSksIHtcbiAgICAgIFtuYW1lXTogX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe30sIG1pZGRsZXdhcmVEYXRhW25hbWVdKSwgZGF0YSlcbiAgICB9KTtcbiAgICBpZiAoe30uTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBpZiAocmVzZXRDb3VudCA+IDUwKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihbXCJGbG9hdGluZyBVSTogVGhlIG1pZGRsZXdhcmUgbGlmZWN5Y2xlIGFwcGVhcnMgdG8gYmUgcnVubmluZyBpbiBhblwiLCBcImluZmluaXRlIGxvb3AuIFRoaXMgaXMgdXN1YWxseSBjYXVzZWQgYnkgYSBgcmVzZXRgIGNvbnRpbnVhbGx5XCIsIFwiYmVpbmcgcmV0dXJuZWQgd2l0aG91dCBhIGJyZWFrIGNvbmRpdGlvbi5cIl0uam9pbihcIiBcIikpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAocmVzZXQgJiYgcmVzZXRDb3VudCA8PSA1MCkge1xuICAgICAgcmVzZXRDb3VudCsrO1xuICAgICAgaWYgKHR5cGVvZiByZXNldCA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICBpZiAocmVzZXQucGxhY2VtZW50KSB7XG4gICAgICAgICAgc3RhdGVmdWxQbGFjZW1lbnQgPSByZXNldC5wbGFjZW1lbnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc2V0LnJlY3RzKSB7XG4gICAgICAgICAgcmVjdHMgPSByZXNldC5yZWN0cyA9PT0gdHJ1ZSA/IHlpZWxkIHBsYXRmb3JtMi5nZXRFbGVtZW50UmVjdHMoe1xuICAgICAgICAgICAgcmVmZXJlbmNlLFxuICAgICAgICAgICAgZmxvYXRpbmcsXG4gICAgICAgICAgICBzdHJhdGVneVxuICAgICAgICAgIH0pIDogcmVzZXQucmVjdHM7XG4gICAgICAgIH1cbiAgICAgICAgKHtcbiAgICAgICAgICB4LFxuICAgICAgICAgIHlcbiAgICAgICAgfSA9IGNvbXB1dGVDb29yZHNGcm9tUGxhY2VtZW50KHJlY3RzLCBzdGF0ZWZ1bFBsYWNlbWVudCwgcnRsKSk7XG4gICAgICB9XG4gICAgICBpMiA9IC0xO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgeCxcbiAgICB5LFxuICAgIHBsYWNlbWVudDogc3RhdGVmdWxQbGFjZW1lbnQsXG4gICAgc3RyYXRlZ3ksXG4gICAgbWlkZGxld2FyZURhdGFcbiAgfTtcbn0pO1xuZnVuY3Rpb24gcmVjdFRvQ2xpZW50UmVjdChyZWN0KSB7XG4gIHJldHVybiBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCByZWN0KSwge1xuICAgIHRvcDogcmVjdC55LFxuICAgIGxlZnQ6IHJlY3QueCxcbiAgICByaWdodDogcmVjdC54ICsgcmVjdC53aWR0aCxcbiAgICBib3R0b206IHJlY3QueSArIHJlY3QuaGVpZ2h0XG4gIH0pO1xufVxuZnVuY3Rpb24gZ2V0V2luZG93KG5vZGUpIHtcbiAgdmFyIF9ub2RlJG93bmVyRG9jdW1lbnQ7XG4gIHJldHVybiAoKF9ub2RlJG93bmVyRG9jdW1lbnQgPSBub2RlLm93bmVyRG9jdW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfbm9kZSRvd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KSB8fCB3aW5kb3c7XG59XG5mdW5jdGlvbiBnZXRDb21wdXRlZFN0eWxlJDEoZWxlbWVudCkge1xuICByZXR1cm4gZ2V0V2luZG93KGVsZW1lbnQpLmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XG59XG5mdW5jdGlvbiBnZXROb2RlTmFtZShub2RlKSB7XG4gIHJldHVybiBpc05vZGUobm9kZSkgPyAobm9kZS5ub2RlTmFtZSB8fCBcIlwiKS50b0xvd2VyQ2FzZSgpIDogXCJcIjtcbn1cbmxldCB1YVN0cmluZztcbmZ1bmN0aW9uIGdldFVBU3RyaW5nKCkge1xuICBpZiAodWFTdHJpbmcpIHtcbiAgICByZXR1cm4gdWFTdHJpbmc7XG4gIH1cbiAgY29uc3QgdWFEYXRhID0gbmF2aWdhdG9yLnVzZXJBZ2VudERhdGE7XG4gIGlmICh1YURhdGEgJiYgQXJyYXkuaXNBcnJheSh1YURhdGEuYnJhbmRzKSkge1xuICAgIHVhU3RyaW5nID0gdWFEYXRhLmJyYW5kcy5tYXAoKGl0ZW0pID0+IGl0ZW0uYnJhbmQgKyBcIi9cIiArIGl0ZW0udmVyc2lvbikuam9pbihcIiBcIik7XG4gICAgcmV0dXJuIHVhU3RyaW5nO1xuICB9XG4gIHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50O1xufVxuZnVuY3Rpb24gaXNIVE1MRWxlbWVudCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBnZXRXaW5kb3codmFsdWUpLkhUTUxFbGVtZW50O1xufVxuZnVuY3Rpb24gaXNFbGVtZW50KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIGdldFdpbmRvdyh2YWx1ZSkuRWxlbWVudDtcbn1cbmZ1bmN0aW9uIGlzTm9kZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBnZXRXaW5kb3codmFsdWUpLk5vZGU7XG59XG5mdW5jdGlvbiBpc1NoYWRvd1Jvb3Qobm9kZSkge1xuICBpZiAodHlwZW9mIFNoYWRvd1Jvb3QgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgY29uc3QgT3duRWxlbWVudCA9IGdldFdpbmRvdyhub2RlKS5TaGFkb3dSb290O1xuICByZXR1cm4gbm9kZSBpbnN0YW5jZW9mIE93bkVsZW1lbnQgfHwgbm9kZSBpbnN0YW5jZW9mIFNoYWRvd1Jvb3Q7XG59XG5mdW5jdGlvbiBpc092ZXJmbG93RWxlbWVudChlbGVtZW50KSB7XG4gIGNvbnN0IHtcbiAgICBvdmVyZmxvdyxcbiAgICBvdmVyZmxvd1gsXG4gICAgb3ZlcmZsb3dZLFxuICAgIGRpc3BsYXlcbiAgfSA9IGdldENvbXB1dGVkU3R5bGUkMShlbGVtZW50KTtcbiAgcmV0dXJuIC9hdXRvfHNjcm9sbHxvdmVybGF5fGhpZGRlbi8udGVzdChvdmVyZmxvdyArIG92ZXJmbG93WSArIG92ZXJmbG93WCkgJiYgIVtcImlubGluZVwiLCBcImNvbnRlbnRzXCJdLmluY2x1ZGVzKGRpc3BsYXkpO1xufVxuZnVuY3Rpb24gaXNUYWJsZUVsZW1lbnQoZWxlbWVudCkge1xuICByZXR1cm4gW1widGFibGVcIiwgXCJ0ZFwiLCBcInRoXCJdLmluY2x1ZGVzKGdldE5vZGVOYW1lKGVsZW1lbnQpKTtcbn1cbmZ1bmN0aW9uIGlzQ29udGFpbmluZ0Jsb2NrKGVsZW1lbnQpIHtcbiAgY29uc3QgaXNGaXJlZm94ID0gL2ZpcmVmb3gvaS50ZXN0KGdldFVBU3RyaW5nKCkpO1xuICBjb25zdCBjc3MgPSBnZXRDb21wdXRlZFN0eWxlJDEoZWxlbWVudCk7XG4gIGNvbnN0IGJhY2tkcm9wRmlsdGVyID0gY3NzLmJhY2tkcm9wRmlsdGVyIHx8IGNzcy5XZWJraXRCYWNrZHJvcEZpbHRlcjtcbiAgcmV0dXJuIGNzcy50cmFuc2Zvcm0gIT09IFwibm9uZVwiIHx8IGNzcy5wZXJzcGVjdGl2ZSAhPT0gXCJub25lXCIgfHwgKGJhY2tkcm9wRmlsdGVyID8gYmFja2Ryb3BGaWx0ZXIgIT09IFwibm9uZVwiIDogZmFsc2UpIHx8IGlzRmlyZWZveCAmJiBjc3Mud2lsbENoYW5nZSA9PT0gXCJmaWx0ZXJcIiB8fCBpc0ZpcmVmb3ggJiYgKGNzcy5maWx0ZXIgPyBjc3MuZmlsdGVyICE9PSBcIm5vbmVcIiA6IGZhbHNlKSB8fCBbXCJ0cmFuc2Zvcm1cIiwgXCJwZXJzcGVjdGl2ZVwiXS5zb21lKCh2YWx1ZSkgPT4gY3NzLndpbGxDaGFuZ2UuaW5jbHVkZXModmFsdWUpKSB8fCBbXCJwYWludFwiLCBcImxheW91dFwiLCBcInN0cmljdFwiLCBcImNvbnRlbnRcIl0uc29tZShcbiAgICAodmFsdWUpID0+IHtcbiAgICAgIGNvbnN0IGNvbnRhaW4gPSBjc3MuY29udGFpbjtcbiAgICAgIHJldHVybiBjb250YWluICE9IG51bGwgPyBjb250YWluLmluY2x1ZGVzKHZhbHVlKSA6IGZhbHNlO1xuICAgIH1cbiAgKTtcbn1cbmZ1bmN0aW9uIGlzTGF5b3V0Vmlld3BvcnQoKSB7XG4gIHJldHVybiAhL14oKD8hY2hyb21lfGFuZHJvaWQpLikqc2FmYXJpL2kudGVzdChnZXRVQVN0cmluZygpKTtcbn1cbmZ1bmN0aW9uIGlzTGFzdFRyYXZlcnNhYmxlTm9kZShub2RlKSB7XG4gIHJldHVybiBbXCJodG1sXCIsIFwiYm9keVwiLCBcIiNkb2N1bWVudFwiXS5pbmNsdWRlcyhnZXROb2RlTmFtZShub2RlKSk7XG59XG5jb25zdCBtaW4gPSBNYXRoLm1pbjtcbmNvbnN0IG1heCA9IE1hdGgubWF4O1xuY29uc3Qgcm91bmQgPSBNYXRoLnJvdW5kO1xuY29uc3QgRkFMTEJBQ0tfU0NBTEUgPSB7XG4gIHg6IDEsXG4gIHk6IDFcbn07XG5mdW5jdGlvbiBnZXRTY2FsZShlbGVtZW50KSB7XG4gIGNvbnN0IGRvbUVsZW1lbnQgPSAhaXNFbGVtZW50KGVsZW1lbnQpICYmIGVsZW1lbnQuY29udGV4dEVsZW1lbnQgPyBlbGVtZW50LmNvbnRleHRFbGVtZW50IDogaXNFbGVtZW50KGVsZW1lbnQpID8gZWxlbWVudCA6IG51bGw7XG4gIGlmICghZG9tRWxlbWVudCkge1xuICAgIHJldHVybiBGQUxMQkFDS19TQ0FMRTtcbiAgfVxuICBjb25zdCByZWN0ID0gZG9tRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgY29uc3QgY3NzID0gZ2V0Q29tcHV0ZWRTdHlsZSQxKGRvbUVsZW1lbnQpO1xuICBpZiAoY3NzLmJveFNpemluZyAhPT0gXCJib3JkZXItYm94XCIpIHtcbiAgICBpZiAoIWlzSFRNTEVsZW1lbnQoZG9tRWxlbWVudCkpIHtcbiAgICAgIHJldHVybiBGQUxMQkFDS19TQ0FMRTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IGRvbUVsZW1lbnQub2Zmc2V0V2lkdGggPiAwID8gcm91bmQocmVjdC53aWR0aCkgLyBkb21FbGVtZW50Lm9mZnNldFdpZHRoIHx8IDEgOiAxLFxuICAgICAgeTogZG9tRWxlbWVudC5vZmZzZXRIZWlnaHQgPiAwID8gcm91bmQocmVjdC5oZWlnaHQpIC8gZG9tRWxlbWVudC5vZmZzZXRIZWlnaHQgfHwgMSA6IDFcbiAgICB9O1xuICB9XG4gIGxldCB4ID0gcmVjdC53aWR0aCAvIHBhcnNlRmxvYXQoY3NzLndpZHRoKTtcbiAgbGV0IHkgPSByZWN0LmhlaWdodCAvIHBhcnNlRmxvYXQoY3NzLmhlaWdodCk7XG4gIGlmICgheCB8fCAhTnVtYmVyLmlzRmluaXRlKHgpKSB7XG4gICAgeCA9IDE7XG4gIH1cbiAgaWYgKCF5IHx8ICFOdW1iZXIuaXNGaW5pdGUoeSkpIHtcbiAgICB5ID0gMTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHgsXG4gICAgeVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIGluY2x1ZGVTY2FsZSwgaXNGaXhlZFN0cmF0ZWd5LCBvZmZzZXRQYXJlbnQpIHtcbiAgdmFyIF93aW4kdmlzdWFsVmlld3BvcnQkbywgX3dpbiR2aXN1YWxWaWV3cG9ydCwgX3dpbiR2aXN1YWxWaWV3cG9ydCRvMiwgX3dpbiR2aXN1YWxWaWV3cG9ydDI7XG4gIGlmIChpbmNsdWRlU2NhbGUgPT09IHZvaWQgMCkge1xuICAgIGluY2x1ZGVTY2FsZSA9IGZhbHNlO1xuICB9XG4gIGlmIChpc0ZpeGVkU3RyYXRlZ3kgPT09IHZvaWQgMCkge1xuICAgIGlzRml4ZWRTdHJhdGVneSA9IGZhbHNlO1xuICB9XG4gIGNvbnN0IGNsaWVudFJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBsZXQgc2NhbGUgPSBGQUxMQkFDS19TQ0FMRTtcbiAgaWYgKGluY2x1ZGVTY2FsZSkge1xuICAgIGlmIChvZmZzZXRQYXJlbnQpIHtcbiAgICAgIGlmIChpc0VsZW1lbnQob2Zmc2V0UGFyZW50KSkge1xuICAgICAgICBzY2FsZSA9IGdldFNjYWxlKG9mZnNldFBhcmVudCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHNjYWxlID0gZ2V0U2NhbGUoZWxlbWVudCk7XG4gICAgfVxuICB9XG4gIGNvbnN0IHdpbiA9IGlzRWxlbWVudChlbGVtZW50KSA/IGdldFdpbmRvdyhlbGVtZW50KSA6IHdpbmRvdztcbiAgY29uc3QgYWRkVmlzdWFsT2Zmc2V0cyA9ICFpc0xheW91dFZpZXdwb3J0KCkgJiYgaXNGaXhlZFN0cmF0ZWd5O1xuICBjb25zdCB4ID0gKGNsaWVudFJlY3QubGVmdCArIChhZGRWaXN1YWxPZmZzZXRzID8gKF93aW4kdmlzdWFsVmlld3BvcnQkbyA9IChfd2luJHZpc3VhbFZpZXdwb3J0ID0gd2luLnZpc3VhbFZpZXdwb3J0KSA9PSBudWxsID8gdm9pZCAwIDogX3dpbiR2aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0KSAhPSBudWxsID8gX3dpbiR2aXN1YWxWaWV3cG9ydCRvIDogMCA6IDApKSAvIHNjYWxlLng7XG4gIGNvbnN0IHkgPSAoY2xpZW50UmVjdC50b3AgKyAoYWRkVmlzdWFsT2Zmc2V0cyA/IChfd2luJHZpc3VhbFZpZXdwb3J0JG8yID0gKF93aW4kdmlzdWFsVmlld3BvcnQyID0gd2luLnZpc3VhbFZpZXdwb3J0KSA9PSBudWxsID8gdm9pZCAwIDogX3dpbiR2aXN1YWxWaWV3cG9ydDIub2Zmc2V0VG9wKSAhPSBudWxsID8gX3dpbiR2aXN1YWxWaWV3cG9ydCRvMiA6IDAgOiAwKSkgLyBzY2FsZS55O1xuICBjb25zdCB3aWR0aCA9IGNsaWVudFJlY3Qud2lkdGggLyBzY2FsZS54O1xuICBjb25zdCBoZWlnaHQgPSBjbGllbnRSZWN0LmhlaWdodCAvIHNjYWxlLnk7XG4gIHJldHVybiB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHRvcDogeSxcbiAgICByaWdodDogeCArIHdpZHRoLFxuICAgIGJvdHRvbTogeSArIGhlaWdodCxcbiAgICBsZWZ0OiB4LFxuICAgIHgsXG4gICAgeVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0RG9jdW1lbnRFbGVtZW50KG5vZGUpIHtcbiAgcmV0dXJuICgoaXNOb2RlKG5vZGUpID8gbm9kZS5vd25lckRvY3VtZW50IDogbm9kZS5kb2N1bWVudCkgfHwgd2luZG93LmRvY3VtZW50KS5kb2N1bWVudEVsZW1lbnQ7XG59XG5mdW5jdGlvbiBnZXROb2RlU2Nyb2xsKGVsZW1lbnQpIHtcbiAgaWYgKGlzRWxlbWVudChlbGVtZW50KSkge1xuICAgIHJldHVybiB7XG4gICAgICBzY3JvbGxMZWZ0OiBlbGVtZW50LnNjcm9sbExlZnQsXG4gICAgICBzY3JvbGxUb3A6IGVsZW1lbnQuc2Nyb2xsVG9wXG4gICAgfTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHNjcm9sbExlZnQ6IGVsZW1lbnQucGFnZVhPZmZzZXQsXG4gICAgc2Nyb2xsVG9wOiBlbGVtZW50LnBhZ2VZT2Zmc2V0XG4gIH07XG59XG5mdW5jdGlvbiBnZXRXaW5kb3dTY3JvbGxCYXJYKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGdldEJvdW5kaW5nQ2xpZW50UmVjdChnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkpLmxlZnQgKyBnZXROb2RlU2Nyb2xsKGVsZW1lbnQpLnNjcm9sbExlZnQ7XG59XG5mdW5jdGlvbiBnZXRSZWN0UmVsYXRpdmVUb09mZnNldFBhcmVudChlbGVtZW50LCBvZmZzZXRQYXJlbnQsIHN0cmF0ZWd5KSB7XG4gIGNvbnN0IGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ID0gaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBjb25zdCBkb2N1bWVudEVsZW1lbnQgPSBnZXREb2N1bWVudEVsZW1lbnQob2Zmc2V0UGFyZW50KTtcbiAgY29uc3QgcmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCB0cnVlLCBzdHJhdGVneSA9PT0gXCJmaXhlZFwiLCBvZmZzZXRQYXJlbnQpO1xuICBsZXQgc2Nyb2xsID0ge1xuICAgIHNjcm9sbExlZnQ6IDAsXG4gICAgc2Nyb2xsVG9wOiAwXG4gIH07XG4gIGNvbnN0IG9mZnNldHMgPSB7XG4gICAgeDogMCxcbiAgICB5OiAwXG4gIH07XG4gIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCB8fCAhaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgJiYgc3RyYXRlZ3kgIT09IFwiZml4ZWRcIikge1xuICAgIGlmIChnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpICE9PSBcImJvZHlcIiB8fCBpc092ZXJmbG93RWxlbWVudChkb2N1bWVudEVsZW1lbnQpKSB7XG4gICAgICBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKG9mZnNldFBhcmVudCk7XG4gICAgfVxuICAgIGlmIChpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCkpIHtcbiAgICAgIGNvbnN0IG9mZnNldFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3Qob2Zmc2V0UGFyZW50LCB0cnVlKTtcbiAgICAgIG9mZnNldHMueCA9IG9mZnNldFJlY3QueCArIG9mZnNldFBhcmVudC5jbGllbnRMZWZ0O1xuICAgICAgb2Zmc2V0cy55ID0gb2Zmc2V0UmVjdC55ICsgb2Zmc2V0UGFyZW50LmNsaWVudFRvcDtcbiAgICB9IGVsc2UgaWYgKGRvY3VtZW50RWxlbWVudCkge1xuICAgICAgb2Zmc2V0cy54ID0gZ2V0V2luZG93U2Nyb2xsQmFyWChkb2N1bWVudEVsZW1lbnQpO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIHg6IHJlY3QubGVmdCArIHNjcm9sbC5zY3JvbGxMZWZ0IC0gb2Zmc2V0cy54LFxuICAgIHk6IHJlY3QudG9wICsgc2Nyb2xsLnNjcm9sbFRvcCAtIG9mZnNldHMueSxcbiAgICB3aWR0aDogcmVjdC53aWR0aCxcbiAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0XG4gIH07XG59XG5mdW5jdGlvbiBnZXRQYXJlbnROb2RlKG5vZGUpIHtcbiAgaWYgKGdldE5vZGVOYW1lKG5vZGUpID09PSBcImh0bWxcIikge1xuICAgIHJldHVybiBub2RlO1xuICB9XG4gIGNvbnN0IHJlc3VsdCA9IG5vZGUuYXNzaWduZWRTbG90IHx8IG5vZGUucGFyZW50Tm9kZSB8fCAoaXNTaGFkb3dSb290KG5vZGUpID8gbm9kZS5ob3N0IDogbnVsbCkgfHwgZ2V0RG9jdW1lbnRFbGVtZW50KG5vZGUpO1xuICByZXR1cm4gaXNTaGFkb3dSb290KHJlc3VsdCkgPyByZXN1bHQuaG9zdCA6IHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGdldFRydWVPZmZzZXRQYXJlbnQoZWxlbWVudCkge1xuICBpZiAoIWlzSFRNTEVsZW1lbnQoZWxlbWVudCkgfHwgZ2V0Q29tcHV0ZWRTdHlsZSQxKGVsZW1lbnQpLnBvc2l0aW9uID09PSBcImZpeGVkXCIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gZWxlbWVudC5vZmZzZXRQYXJlbnQ7XG59XG5mdW5jdGlvbiBnZXRDb250YWluaW5nQmxvY2soZWxlbWVudCkge1xuICBsZXQgY3VycmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGVsZW1lbnQpO1xuICB3aGlsZSAoaXNIVE1MRWxlbWVudChjdXJyZW50Tm9kZSkgJiYgIWlzTGFzdFRyYXZlcnNhYmxlTm9kZShjdXJyZW50Tm9kZSkpIHtcbiAgICBpZiAoaXNDb250YWluaW5nQmxvY2soY3VycmVudE5vZGUpKSB7XG4gICAgICByZXR1cm4gY3VycmVudE5vZGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnROb2RlID0gZ2V0UGFyZW50Tm9kZShjdXJyZW50Tm9kZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufVxuZnVuY3Rpb24gZ2V0T2Zmc2V0UGFyZW50KGVsZW1lbnQpIHtcbiAgY29uc3Qgd2luZG93MiA9IGdldFdpbmRvdyhlbGVtZW50KTtcbiAgbGV0IG9mZnNldFBhcmVudCA9IGdldFRydWVPZmZzZXRQYXJlbnQoZWxlbWVudCk7XG4gIHdoaWxlIChvZmZzZXRQYXJlbnQgJiYgaXNUYWJsZUVsZW1lbnQob2Zmc2V0UGFyZW50KSAmJiBnZXRDb21wdXRlZFN0eWxlJDEob2Zmc2V0UGFyZW50KS5wb3NpdGlvbiA9PT0gXCJzdGF0aWNcIikge1xuICAgIG9mZnNldFBhcmVudCA9IGdldFRydWVPZmZzZXRQYXJlbnQob2Zmc2V0UGFyZW50KTtcbiAgfVxuICBpZiAob2Zmc2V0UGFyZW50ICYmIChnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpID09PSBcImh0bWxcIiB8fCBnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpID09PSBcImJvZHlcIiAmJiBnZXRDb21wdXRlZFN0eWxlJDEob2Zmc2V0UGFyZW50KS5wb3NpdGlvbiA9PT0gXCJzdGF0aWNcIiAmJiAhaXNDb250YWluaW5nQmxvY2sob2Zmc2V0UGFyZW50KSkpIHtcbiAgICByZXR1cm4gd2luZG93MjtcbiAgfVxuICByZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGdldENvbnRhaW5pbmdCbG9jayhlbGVtZW50KSB8fCB3aW5kb3cyO1xufVxuZnVuY3Rpb24gZ2V0RGltZW5zaW9ucyhlbGVtZW50KSB7XG4gIGlmIChpc0hUTUxFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHdpZHRoOiBlbGVtZW50Lm9mZnNldFdpZHRoLFxuICAgICAgaGVpZ2h0OiBlbGVtZW50Lm9mZnNldEhlaWdodFxuICAgIH07XG4gIH1cbiAgY29uc3QgcmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50KTtcbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogcmVjdC53aWR0aCxcbiAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0XG4gIH07XG59XG5mdW5jdGlvbiBjb252ZXJ0T2Zmc2V0UGFyZW50UmVsYXRpdmVSZWN0VG9WaWV3cG9ydFJlbGF0aXZlUmVjdChfcmVmKSB7XG4gIGxldCB7XG4gICAgcmVjdCxcbiAgICBvZmZzZXRQYXJlbnQsXG4gICAgc3RyYXRlZ3lcbiAgfSA9IF9yZWY7XG4gIGNvbnN0IGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ID0gaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBjb25zdCBkb2N1bWVudEVsZW1lbnQgPSBnZXREb2N1bWVudEVsZW1lbnQob2Zmc2V0UGFyZW50KTtcbiAgaWYgKG9mZnNldFBhcmVudCA9PT0gZG9jdW1lbnRFbGVtZW50KSB7XG4gICAgcmV0dXJuIHJlY3Q7XG4gIH1cbiAgbGV0IHNjcm9sbCA9IHtcbiAgICBzY3JvbGxMZWZ0OiAwLFxuICAgIHNjcm9sbFRvcDogMFxuICB9O1xuICBsZXQgc2NhbGUgPSB7XG4gICAgeDogMSxcbiAgICB5OiAxXG4gIH07XG4gIGNvbnN0IG9mZnNldHMgPSB7XG4gICAgeDogMCxcbiAgICB5OiAwXG4gIH07XG4gIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCB8fCAhaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgJiYgc3RyYXRlZ3kgIT09IFwiZml4ZWRcIikge1xuICAgIGlmIChnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpICE9PSBcImJvZHlcIiB8fCBpc092ZXJmbG93RWxlbWVudChkb2N1bWVudEVsZW1lbnQpKSB7XG4gICAgICBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKG9mZnNldFBhcmVudCk7XG4gICAgfVxuICAgIGlmIChpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCkpIHtcbiAgICAgIGNvbnN0IG9mZnNldFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3Qob2Zmc2V0UGFyZW50KTtcbiAgICAgIHNjYWxlID0gZ2V0U2NhbGUob2Zmc2V0UGFyZW50KTtcbiAgICAgIG9mZnNldHMueCA9IG9mZnNldFJlY3QueCArIG9mZnNldFBhcmVudC5jbGllbnRMZWZ0O1xuICAgICAgb2Zmc2V0cy55ID0gb2Zmc2V0UmVjdC55ICsgb2Zmc2V0UGFyZW50LmNsaWVudFRvcDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogcmVjdC53aWR0aCAqIHNjYWxlLngsXG4gICAgaGVpZ2h0OiByZWN0LmhlaWdodCAqIHNjYWxlLnksXG4gICAgeDogcmVjdC54ICogc2NhbGUueCAtIHNjcm9sbC5zY3JvbGxMZWZ0ICogc2NhbGUueCArIG9mZnNldHMueCxcbiAgICB5OiByZWN0LnkgKiBzY2FsZS55IC0gc2Nyb2xsLnNjcm9sbFRvcCAqIHNjYWxlLnkgKyBvZmZzZXRzLnlcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldFZpZXdwb3J0UmVjdChlbGVtZW50LCBzdHJhdGVneSkge1xuICBjb25zdCB3aW4gPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIGNvbnN0IGh0bWwgPSBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCk7XG4gIGNvbnN0IHZpc3VhbFZpZXdwb3J0ID0gd2luLnZpc3VhbFZpZXdwb3J0O1xuICBsZXQgd2lkdGggPSBodG1sLmNsaWVudFdpZHRoO1xuICBsZXQgaGVpZ2h0ID0gaHRtbC5jbGllbnRIZWlnaHQ7XG4gIGxldCB4ID0gMDtcbiAgbGV0IHkgPSAwO1xuICBpZiAodmlzdWFsVmlld3BvcnQpIHtcbiAgICB3aWR0aCA9IHZpc3VhbFZpZXdwb3J0LndpZHRoO1xuICAgIGhlaWdodCA9IHZpc3VhbFZpZXdwb3J0LmhlaWdodDtcbiAgICBjb25zdCBsYXlvdXRWaWV3cG9ydCA9IGlzTGF5b3V0Vmlld3BvcnQoKTtcbiAgICBpZiAobGF5b3V0Vmlld3BvcnQgfHwgIWxheW91dFZpZXdwb3J0ICYmIHN0cmF0ZWd5ID09PSBcImZpeGVkXCIpIHtcbiAgICAgIHggPSB2aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0O1xuICAgICAgeSA9IHZpc3VhbFZpZXdwb3J0Lm9mZnNldFRvcDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgeCxcbiAgICB5XG4gIH07XG59XG5mdW5jdGlvbiBnZXREb2N1bWVudFJlY3QoZWxlbWVudCkge1xuICB2YXIgX2VsZW1lbnQkb3duZXJEb2N1bWVuO1xuICBjb25zdCBodG1sID0gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpO1xuICBjb25zdCBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKGVsZW1lbnQpO1xuICBjb25zdCBib2R5ID0gKF9lbGVtZW50JG93bmVyRG9jdW1lbiA9IGVsZW1lbnQub3duZXJEb2N1bWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9lbGVtZW50JG93bmVyRG9jdW1lbi5ib2R5O1xuICBjb25zdCB3aWR0aCA9IG1heChodG1sLnNjcm9sbFdpZHRoLCBodG1sLmNsaWVudFdpZHRoLCBib2R5ID8gYm9keS5zY3JvbGxXaWR0aCA6IDAsIGJvZHkgPyBib2R5LmNsaWVudFdpZHRoIDogMCk7XG4gIGNvbnN0IGhlaWdodCA9IG1heChodG1sLnNjcm9sbEhlaWdodCwgaHRtbC5jbGllbnRIZWlnaHQsIGJvZHkgPyBib2R5LnNjcm9sbEhlaWdodCA6IDAsIGJvZHkgPyBib2R5LmNsaWVudEhlaWdodCA6IDApO1xuICBsZXQgeCA9IC1zY3JvbGwuc2Nyb2xsTGVmdCArIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCk7XG4gIGNvbnN0IHkgPSAtc2Nyb2xsLnNjcm9sbFRvcDtcbiAgaWYgKGdldENvbXB1dGVkU3R5bGUkMShib2R5IHx8IGh0bWwpLmRpcmVjdGlvbiA9PT0gXCJydGxcIikge1xuICAgIHggKz0gbWF4KGh0bWwuY2xpZW50V2lkdGgsIGJvZHkgPyBib2R5LmNsaWVudFdpZHRoIDogMCkgLSB3aWR0aDtcbiAgfVxuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICB4LFxuICAgIHlcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldE5lYXJlc3RPdmVyZmxvd0FuY2VzdG9yKG5vZGUpIHtcbiAgY29uc3QgcGFyZW50Tm9kZSA9IGdldFBhcmVudE5vZGUobm9kZSk7XG4gIGlmIChpc0xhc3RUcmF2ZXJzYWJsZU5vZGUocGFyZW50Tm9kZSkpIHtcbiAgICByZXR1cm4gbm9kZS5vd25lckRvY3VtZW50LmJvZHk7XG4gIH1cbiAgaWYgKGlzSFRNTEVsZW1lbnQocGFyZW50Tm9kZSkgJiYgaXNPdmVyZmxvd0VsZW1lbnQocGFyZW50Tm9kZSkpIHtcbiAgICByZXR1cm4gcGFyZW50Tm9kZTtcbiAgfVxuICByZXR1cm4gZ2V0TmVhcmVzdE92ZXJmbG93QW5jZXN0b3IocGFyZW50Tm9kZSk7XG59XG5mdW5jdGlvbiBnZXRPdmVyZmxvd0FuY2VzdG9ycyhub2RlLCBsaXN0KSB7XG4gIHZhciBfbm9kZSRvd25lckRvY3VtZW50O1xuICBpZiAobGlzdCA9PT0gdm9pZCAwKSB7XG4gICAgbGlzdCA9IFtdO1xuICB9XG4gIGNvbnN0IHNjcm9sbGFibGVBbmNlc3RvciA9IGdldE5lYXJlc3RPdmVyZmxvd0FuY2VzdG9yKG5vZGUpO1xuICBjb25zdCBpc0JvZHkgPSBzY3JvbGxhYmxlQW5jZXN0b3IgPT09ICgoX25vZGUkb3duZXJEb2N1bWVudCA9IG5vZGUub3duZXJEb2N1bWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9ub2RlJG93bmVyRG9jdW1lbnQuYm9keSk7XG4gIGNvbnN0IHdpbiA9IGdldFdpbmRvdyhzY3JvbGxhYmxlQW5jZXN0b3IpO1xuICBpZiAoaXNCb2R5KSB7XG4gICAgcmV0dXJuIGxpc3QuY29uY2F0KHdpbiwgd2luLnZpc3VhbFZpZXdwb3J0IHx8IFtdLCBpc092ZXJmbG93RWxlbWVudChzY3JvbGxhYmxlQW5jZXN0b3IpID8gc2Nyb2xsYWJsZUFuY2VzdG9yIDogW10pO1xuICB9XG4gIHJldHVybiBsaXN0LmNvbmNhdChzY3JvbGxhYmxlQW5jZXN0b3IsIGdldE92ZXJmbG93QW5jZXN0b3JzKHNjcm9sbGFibGVBbmNlc3RvcikpO1xufVxuZnVuY3Rpb24gZ2V0SW5uZXJCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCwgc3RyYXRlZ3kpIHtcbiAgY29uc3QgY2xpZW50UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCB0cnVlLCBzdHJhdGVneSA9PT0gXCJmaXhlZFwiKTtcbiAgY29uc3QgdG9wID0gY2xpZW50UmVjdC50b3AgKyBlbGVtZW50LmNsaWVudFRvcDtcbiAgY29uc3QgbGVmdCA9IGNsaWVudFJlY3QubGVmdCArIGVsZW1lbnQuY2xpZW50TGVmdDtcbiAgY29uc3Qgc2NhbGUgPSBpc0hUTUxFbGVtZW50KGVsZW1lbnQpID8gZ2V0U2NhbGUoZWxlbWVudCkgOiB7XG4gICAgeDogMSxcbiAgICB5OiAxXG4gIH07XG4gIGNvbnN0IHdpZHRoID0gZWxlbWVudC5jbGllbnRXaWR0aCAqIHNjYWxlLng7XG4gIGNvbnN0IGhlaWdodCA9IGVsZW1lbnQuY2xpZW50SGVpZ2h0ICogc2NhbGUueTtcbiAgY29uc3QgeCA9IGxlZnQgKiBzY2FsZS54O1xuICBjb25zdCB5ID0gdG9wICogc2NhbGUueTtcbiAgcmV0dXJuIHtcbiAgICB0b3A6IHksXG4gICAgbGVmdDogeCxcbiAgICByaWdodDogeCArIHdpZHRoLFxuICAgIGJvdHRvbTogeSArIGhlaWdodCxcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH07XG59XG5mdW5jdGlvbiBnZXRDbGllbnRSZWN0RnJvbUNsaXBwaW5nQW5jZXN0b3IoZWxlbWVudCwgY2xpcHBpbmdBbmNlc3Rvciwgc3RyYXRlZ3kpIHtcbiAgaWYgKGNsaXBwaW5nQW5jZXN0b3IgPT09IFwidmlld3BvcnRcIikge1xuICAgIHJldHVybiByZWN0VG9DbGllbnRSZWN0KGdldFZpZXdwb3J0UmVjdChlbGVtZW50LCBzdHJhdGVneSkpO1xuICB9XG4gIGlmIChpc0VsZW1lbnQoY2xpcHBpbmdBbmNlc3RvcikpIHtcbiAgICByZXR1cm4gZ2V0SW5uZXJCb3VuZGluZ0NsaWVudFJlY3QoY2xpcHBpbmdBbmNlc3Rvciwgc3RyYXRlZ3kpO1xuICB9XG4gIHJldHVybiByZWN0VG9DbGllbnRSZWN0KGdldERvY3VtZW50UmVjdChnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkpKTtcbn1cbmZ1bmN0aW9uIGdldENsaXBwaW5nRWxlbWVudEFuY2VzdG9ycyhlbGVtZW50LCBjYWNoZSkge1xuICBjb25zdCBjYWNoZWRSZXN1bHQgPSBjYWNoZS5nZXQoZWxlbWVudCk7XG4gIGlmIChjYWNoZWRSZXN1bHQpIHtcbiAgICByZXR1cm4gY2FjaGVkUmVzdWx0O1xuICB9XG4gIGxldCByZXN1bHQgPSBnZXRPdmVyZmxvd0FuY2VzdG9ycyhlbGVtZW50KS5maWx0ZXIoKGVsKSA9PiBpc0VsZW1lbnQoZWwpICYmIGdldE5vZGVOYW1lKGVsKSAhPT0gXCJib2R5XCIpO1xuICBsZXQgY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgPSBudWxsO1xuICBjb25zdCBlbGVtZW50SXNGaXhlZCA9IGdldENvbXB1dGVkU3R5bGUkMShlbGVtZW50KS5wb3NpdGlvbiA9PT0gXCJmaXhlZFwiO1xuICBsZXQgY3VycmVudE5vZGUgPSBlbGVtZW50SXNGaXhlZCA/IGdldFBhcmVudE5vZGUoZWxlbWVudCkgOiBlbGVtZW50O1xuICB3aGlsZSAoaXNFbGVtZW50KGN1cnJlbnROb2RlKSAmJiAhaXNMYXN0VHJhdmVyc2FibGVOb2RlKGN1cnJlbnROb2RlKSkge1xuICAgIGNvbnN0IGNvbXB1dGVkU3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlJDEoY3VycmVudE5vZGUpO1xuICAgIGNvbnN0IGNvbnRhaW5pbmdCbG9jayA9IGlzQ29udGFpbmluZ0Jsb2NrKGN1cnJlbnROb2RlKTtcbiAgICBjb25zdCBzaG91bGREcm9wQ3VycmVudE5vZGUgPSBlbGVtZW50SXNGaXhlZCA/ICFjb250YWluaW5nQmxvY2sgJiYgIWN1cnJlbnRDb250YWluaW5nQmxvY2tDb21wdXRlZFN0eWxlIDogIWNvbnRhaW5pbmdCbG9jayAmJiBjb21wdXRlZFN0eWxlLnBvc2l0aW9uID09PSBcInN0YXRpY1wiICYmICEhY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgJiYgW1wiYWJzb2x1dGVcIiwgXCJmaXhlZFwiXS5pbmNsdWRlcyhjdXJyZW50Q29udGFpbmluZ0Jsb2NrQ29tcHV0ZWRTdHlsZS5wb3NpdGlvbik7XG4gICAgaWYgKHNob3VsZERyb3BDdXJyZW50Tm9kZSkge1xuICAgICAgcmVzdWx0ID0gcmVzdWx0LmZpbHRlcigoYW5jZXN0b3IpID0+IGFuY2VzdG9yICE9PSBjdXJyZW50Tm9kZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnRDb250YWluaW5nQmxvY2tDb21wdXRlZFN0eWxlID0gY29tcHV0ZWRTdHlsZTtcbiAgICB9XG4gICAgY3VycmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGN1cnJlbnROb2RlKTtcbiAgfVxuICBjYWNoZS5zZXQoZWxlbWVudCwgcmVzdWx0KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGdldENsaXBwaW5nUmVjdChfcmVmKSB7XG4gIGxldCB7XG4gICAgZWxlbWVudCxcbiAgICBib3VuZGFyeSxcbiAgICByb290Qm91bmRhcnksXG4gICAgc3RyYXRlZ3lcbiAgfSA9IF9yZWY7XG4gIGNvbnN0IGVsZW1lbnRDbGlwcGluZ0FuY2VzdG9ycyA9IGJvdW5kYXJ5ID09PSBcImNsaXBwaW5nQW5jZXN0b3JzXCIgPyBnZXRDbGlwcGluZ0VsZW1lbnRBbmNlc3RvcnMoZWxlbWVudCwgdGhpcy5fYykgOiBbXS5jb25jYXQoYm91bmRhcnkpO1xuICBjb25zdCBjbGlwcGluZ0FuY2VzdG9ycyA9IFsuLi5lbGVtZW50Q2xpcHBpbmdBbmNlc3RvcnMsIHJvb3RCb3VuZGFyeV07XG4gIGNvbnN0IGZpcnN0Q2xpcHBpbmdBbmNlc3RvciA9IGNsaXBwaW5nQW5jZXN0b3JzWzBdO1xuICBjb25zdCBjbGlwcGluZ1JlY3QgPSBjbGlwcGluZ0FuY2VzdG9ycy5yZWR1Y2UoKGFjY1JlY3QsIGNsaXBwaW5nQW5jZXN0b3IpID0+IHtcbiAgICBjb25zdCByZWN0ID0gZ2V0Q2xpZW50UmVjdEZyb21DbGlwcGluZ0FuY2VzdG9yKGVsZW1lbnQsIGNsaXBwaW5nQW5jZXN0b3IsIHN0cmF0ZWd5KTtcbiAgICBhY2NSZWN0LnRvcCA9IG1heChyZWN0LnRvcCwgYWNjUmVjdC50b3ApO1xuICAgIGFjY1JlY3QucmlnaHQgPSBtaW4ocmVjdC5yaWdodCwgYWNjUmVjdC5yaWdodCk7XG4gICAgYWNjUmVjdC5ib3R0b20gPSBtaW4ocmVjdC5ib3R0b20sIGFjY1JlY3QuYm90dG9tKTtcbiAgICBhY2NSZWN0LmxlZnQgPSBtYXgocmVjdC5sZWZ0LCBhY2NSZWN0LmxlZnQpO1xuICAgIHJldHVybiBhY2NSZWN0O1xuICB9LCBnZXRDbGllbnRSZWN0RnJvbUNsaXBwaW5nQW5jZXN0b3IoZWxlbWVudCwgZmlyc3RDbGlwcGluZ0FuY2VzdG9yLCBzdHJhdGVneSkpO1xuICByZXR1cm4ge1xuICAgIHdpZHRoOiBjbGlwcGluZ1JlY3QucmlnaHQgLSBjbGlwcGluZ1JlY3QubGVmdCxcbiAgICBoZWlnaHQ6IGNsaXBwaW5nUmVjdC5ib3R0b20gLSBjbGlwcGluZ1JlY3QudG9wLFxuICAgIHg6IGNsaXBwaW5nUmVjdC5sZWZ0LFxuICAgIHk6IGNsaXBwaW5nUmVjdC50b3BcbiAgfTtcbn1cbmNvbnN0IHBsYXRmb3JtID0ge1xuICBnZXRDbGlwcGluZ1JlY3QsXG4gIGNvbnZlcnRPZmZzZXRQYXJlbnRSZWxhdGl2ZVJlY3RUb1ZpZXdwb3J0UmVsYXRpdmVSZWN0LFxuICBpc0VsZW1lbnQsXG4gIGdldERpbWVuc2lvbnMsXG4gIGdldE9mZnNldFBhcmVudCxcbiAgZ2V0RG9jdW1lbnRFbGVtZW50LFxuICBnZXRTY2FsZSxcbiAgZ2V0RWxlbWVudFJlY3RzKF9yZWYpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgbGV0IHtcbiAgICAgICAgcmVmZXJlbmNlLFxuICAgICAgICBmbG9hdGluZyxcbiAgICAgICAgc3RyYXRlZ3lcbiAgICAgIH0gPSBfcmVmO1xuICAgICAgY29uc3QgZ2V0T2Zmc2V0UGFyZW50Rm4gPSB0aGlzLmdldE9mZnNldFBhcmVudCB8fCBnZXRPZmZzZXRQYXJlbnQ7XG4gICAgICBjb25zdCBnZXREaW1lbnNpb25zRm4gPSB0aGlzLmdldERpbWVuc2lvbnM7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZWZlcmVuY2U6IGdldFJlY3RSZWxhdGl2ZVRvT2Zmc2V0UGFyZW50KHJlZmVyZW5jZSwgeWllbGQgZ2V0T2Zmc2V0UGFyZW50Rm4oZmxvYXRpbmcpLCBzdHJhdGVneSksXG4gICAgICAgIGZsb2F0aW5nOiBfX3NwcmVhZFZhbHVlcyh7XG4gICAgICAgICAgeDogMCxcbiAgICAgICAgICB5OiAwXG4gICAgICAgIH0sIHlpZWxkIGdldERpbWVuc2lvbnNGbihmbG9hdGluZykpXG4gICAgICB9O1xuICAgIH0pO1xuICB9LFxuICBnZXRDbGllbnRSZWN0czogKGVsZW1lbnQpID0+IEFycmF5LmZyb20oZWxlbWVudC5nZXRDbGllbnRSZWN0cygpKSxcbiAgaXNSVEw6IChlbGVtZW50KSA9PiBnZXRDb21wdXRlZFN0eWxlJDEoZWxlbWVudCkuZGlyZWN0aW9uID09PSBcInJ0bFwiXG59O1xuZnVuY3Rpb24gYXV0b1VwZGF0ZShyZWZlcmVuY2UsIGZsb2F0aW5nLCB1cGRhdGUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBjb25zdCB7XG4gICAgYW5jZXN0b3JTY3JvbGw6IF9hbmNlc3RvclNjcm9sbCA9IHRydWUsXG4gICAgYW5jZXN0b3JSZXNpemUgPSB0cnVlLFxuICAgIGVsZW1lbnRSZXNpemUgPSB0cnVlLFxuICAgIGFuaW1hdGlvbkZyYW1lID0gZmFsc2VcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGFuY2VzdG9yU2Nyb2xsID0gX2FuY2VzdG9yU2Nyb2xsICYmICFhbmltYXRpb25GcmFtZTtcbiAgY29uc3QgYW5jZXN0b3JzID0gYW5jZXN0b3JTY3JvbGwgfHwgYW5jZXN0b3JSZXNpemUgPyBbLi4uaXNFbGVtZW50KHJlZmVyZW5jZSkgPyBnZXRPdmVyZmxvd0FuY2VzdG9ycyhyZWZlcmVuY2UpIDogcmVmZXJlbmNlLmNvbnRleHRFbGVtZW50ID8gZ2V0T3ZlcmZsb3dBbmNlc3RvcnMocmVmZXJlbmNlLmNvbnRleHRFbGVtZW50KSA6IFtdLCAuLi5nZXRPdmVyZmxvd0FuY2VzdG9ycyhmbG9hdGluZyldIDogW107XG4gIGFuY2VzdG9ycy5mb3JFYWNoKChhbmNlc3RvcikgPT4ge1xuICAgIGFuY2VzdG9yU2Nyb2xsICYmIGFuY2VzdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgdXBkYXRlLCB7XG4gICAgICBwYXNzaXZlOiB0cnVlXG4gICAgfSk7XG4gICAgYW5jZXN0b3JSZXNpemUgJiYgYW5jZXN0b3IuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB1cGRhdGUpO1xuICB9KTtcbiAgbGV0IG9ic2VydmVyID0gbnVsbDtcbiAgaWYgKGVsZW1lbnRSZXNpemUpIHtcbiAgICBsZXQgaW5pdGlhbFVwZGF0ZSA9IHRydWU7XG4gICAgb2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoKCkgPT4ge1xuICAgICAgaWYgKCFpbml0aWFsVXBkYXRlKSB7XG4gICAgICAgIHVwZGF0ZSgpO1xuICAgICAgfVxuICAgICAgaW5pdGlhbFVwZGF0ZSA9IGZhbHNlO1xuICAgIH0pO1xuICAgIGlzRWxlbWVudChyZWZlcmVuY2UpICYmICFhbmltYXRpb25GcmFtZSAmJiBvYnNlcnZlci5vYnNlcnZlKHJlZmVyZW5jZSk7XG4gICAgaWYgKCFpc0VsZW1lbnQocmVmZXJlbmNlKSAmJiByZWZlcmVuY2UuY29udGV4dEVsZW1lbnQgJiYgIWFuaW1hdGlvbkZyYW1lKSB7XG4gICAgICBvYnNlcnZlci5vYnNlcnZlKHJlZmVyZW5jZS5jb250ZXh0RWxlbWVudCk7XG4gICAgfVxuICAgIG9ic2VydmVyLm9ic2VydmUoZmxvYXRpbmcpO1xuICB9XG4gIGxldCBmcmFtZUlkO1xuICBsZXQgcHJldlJlZlJlY3QgPSBhbmltYXRpb25GcmFtZSA/IGdldEJvdW5kaW5nQ2xpZW50UmVjdChyZWZlcmVuY2UpIDogbnVsbDtcbiAgaWYgKGFuaW1hdGlvbkZyYW1lKSB7XG4gICAgZnJhbWVMb29wKCk7XG4gIH1cbiAgZnVuY3Rpb24gZnJhbWVMb29wKCkge1xuICAgIGNvbnN0IG5leHRSZWZSZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KHJlZmVyZW5jZSk7XG4gICAgaWYgKHByZXZSZWZSZWN0ICYmIChuZXh0UmVmUmVjdC54ICE9PSBwcmV2UmVmUmVjdC54IHx8IG5leHRSZWZSZWN0LnkgIT09IHByZXZSZWZSZWN0LnkgfHwgbmV4dFJlZlJlY3Qud2lkdGggIT09IHByZXZSZWZSZWN0LndpZHRoIHx8IG5leHRSZWZSZWN0LmhlaWdodCAhPT0gcHJldlJlZlJlY3QuaGVpZ2h0KSkge1xuICAgICAgdXBkYXRlKCk7XG4gICAgfVxuICAgIHByZXZSZWZSZWN0ID0gbmV4dFJlZlJlY3Q7XG4gICAgZnJhbWVJZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShmcmFtZUxvb3ApO1xuICB9XG4gIHVwZGF0ZSgpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIHZhciBfb2JzZXJ2ZXI7XG4gICAgYW5jZXN0b3JzLmZvckVhY2goKGFuY2VzdG9yKSA9PiB7XG4gICAgICBhbmNlc3RvclNjcm9sbCAmJiBhbmNlc3Rvci5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIHVwZGF0ZSk7XG4gICAgICBhbmNlc3RvclJlc2l6ZSAmJiBhbmNlc3Rvci5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIHVwZGF0ZSk7XG4gICAgfSk7XG4gICAgKF9vYnNlcnZlciA9IG9ic2VydmVyKSA9PSBudWxsID8gdm9pZCAwIDogX29ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICBvYnNlcnZlciA9IG51bGw7XG4gICAgaWYgKGFuaW1hdGlvbkZyYW1lKSB7XG4gICAgICBjYW5jZWxBbmltYXRpb25GcmFtZShmcmFtZUlkKTtcbiAgICB9XG4gIH07XG59XG5jb25zdCBjb21wdXRlUG9zaXRpb24gPSAocmVmZXJlbmNlLCBmbG9hdGluZywgb3B0aW9ucykgPT4ge1xuICBjb25zdCBjYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gIGNvbnN0IG1lcmdlZE9wdGlvbnMgPSBfX3NwcmVhZFZhbHVlcyh7XG4gICAgcGxhdGZvcm1cbiAgfSwgb3B0aW9ucyk7XG4gIGNvbnN0IHBsYXRmb3JtV2l0aENhY2hlID0gX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWVyZ2VkT3B0aW9ucy5wbGF0Zm9ybSksIHtcbiAgICBfYzogY2FjaGVcbiAgfSk7XG4gIHJldHVybiBjb21wdXRlUG9zaXRpb24kMShyZWZlcmVuY2UsIGZsb2F0aW5nLCBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBtZXJnZWRPcHRpb25zKSwge1xuICAgIHBsYXRmb3JtOiBwbGF0Zm9ybVdpdGhDYWNoZVxuICB9KSk7XG59O1xuZnVuY3Rpb24gUChsMiwgdTIsIGUyKSB7XG4gIGxldCBjMiA9ICgpID0+IHtcbiAgICB2YXIgdDI7XG4gICAgcmV0dXJuICh0MiA9IGUyID09IG51bGwgPyB2b2lkIDAgOiBlMi5wbGFjZW1lbnQpICE9IG51bGwgPyB0MiA6IFwiYm90dG9tXCI7XG4gIH0sIGQgPSAoKSA9PiB7XG4gICAgdmFyIHQyO1xuICAgIHJldHVybiAodDIgPSBlMiA9PSBudWxsID8gdm9pZCAwIDogZTIuc3RyYXRlZ3kpICE9IG51bGwgPyB0MiA6IFwiYWJzb2x1dGVcIjtcbiAgfSwgW24yLCBvMl0gPSBjcmVhdGVTaWduYWwoeyB4OiBudWxsLCB5OiBudWxsLCBwbGFjZW1lbnQ6IGMyKCksIHN0cmF0ZWd5OiBkKCksIG1pZGRsZXdhcmVEYXRhOiB7fSB9KSwgW3gsIEZdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgbGV0IHQyID0geCgpO1xuICAgIGlmICh0MilcbiAgICAgIHRocm93IHQyLnZhbHVlO1xuICB9KTtcbiAgbGV0IHMyID0gY3JlYXRlTWVtbygoKSA9PiAobDIoKSwgdTIoKSwge30pKTtcbiAgZnVuY3Rpb24gaTIoKSB7XG4gICAgbGV0IHQyID0gbDIoKSwgciA9IHUyKCk7XG4gICAgaWYgKHQyICYmIHIpIHtcbiAgICAgIGxldCBhMiA9IHMyKCk7XG4gICAgICBjb21wdXRlUG9zaXRpb24odDIsIHIsIHsgbWlkZGxld2FyZTogZTIgPT0gbnVsbCA/IHZvaWQgMCA6IGUyLm1pZGRsZXdhcmUsIHBsYWNlbWVudDogYzIoKSwgc3RyYXRlZ3k6IGQoKSB9KS50aGVuKChtKSA9PiB7XG4gICAgICAgIGEyID09PSBzMigpICYmIG8yKG0pO1xuICAgICAgfSwgKG0pID0+IHtcbiAgICAgICAgRihtKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBsZXQgdDIgPSBsMigpLCByID0gdTIoKTtcbiAgICBpZiAoZTIgPT0gbnVsbCB8fCBlMi5taWRkbGV3YXJlLCBjMigpLCBkKCksIHQyICYmIHIpXG4gICAgICBpZiAoZTIgIT0gbnVsbCAmJiBlMi53aGlsZUVsZW1lbnRzTW91bnRlZCkge1xuICAgICAgICBsZXQgYTIgPSBlMi53aGlsZUVsZW1lbnRzTW91bnRlZCh0MiwgciwgaTIpO1xuICAgICAgICBhMiAmJiBvbkNsZWFudXAoYTIpO1xuICAgICAgfSBlbHNlXG4gICAgICAgIGkyKCk7XG4gIH0pLCB7IGdldCB4KCkge1xuICAgIHJldHVybiBuMigpLng7XG4gIH0sIGdldCB5KCkge1xuICAgIHJldHVybiBuMigpLnk7XG4gIH0sIGdldCBwbGFjZW1lbnQoKSB7XG4gICAgcmV0dXJuIG4yKCkucGxhY2VtZW50O1xuICB9LCBnZXQgc3RyYXRlZ3koKSB7XG4gICAgcmV0dXJuIG4yKCkuc3RyYXRlZ3k7XG4gIH0sIGdldCBtaWRkbGV3YXJlRGF0YSgpIHtcbiAgICByZXR1cm4gbjIoKS5taWRkbGV3YXJlRGF0YTtcbiAgfSwgdXBkYXRlOiBpMiB9O1xufVxuY29uc3QgX3RtcGwkJDMgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHRjLXJvb3QgZGF0YS10Yy1kcm9wZG93bi1jb250YWluZXI9XCJ0cnVlXCI+PC90Yy1yb290PmApO1xuY29uc3QgQWNjb3VudEJ1dHRvbiA9ICgpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBjb25uZWN0b3IgPSB1c2VDb250ZXh0KENvbm5lY3RvckNvbnRleHQpO1xuICBjb25zdCB0b25Db25uZWN0VUkgPSB1c2VDb250ZXh0KFRvbkNvbm5lY3RVaUNvbnRleHQpO1xuICBjb25zdCBbaXNPcGVuZWQsIHNldElzT3BlbmVkXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IFthY2NvdW50LCBzZXRBY2NvdW50XSA9IGNyZWF0ZVNpZ25hbChjb25uZWN0b3IuYWNjb3VudCk7XG4gIGNvbnN0IFtyZXN0b3JpbmdQcm9jZXNzLCBzZXRSZXN0b3JpbmdQcm9jZXNzXSA9IGNyZWF0ZVNpZ25hbCghY29ubmVjdG9yLmFjY291bnQpO1xuICBsZXQgZHJvcERvd25SZWY7XG4gIGNvbnN0IFtmbG9hdGluZywgc2V0RmxvYXRpbmddID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFthbmNob3IsIHNldEFuY2hvcl0gPSBjcmVhdGVTaWduYWwoKTtcbiAgY29uc3QgcG9zaXRpb24gPSBQKGFuY2hvciwgZmxvYXRpbmcsIHtcbiAgICB3aGlsZUVsZW1lbnRzTW91bnRlZDogYXV0b1VwZGF0ZSxcbiAgICBwbGFjZW1lbnQ6IFwiYm90dG9tLWVuZFwiXG4gIH0pO1xuICBjb25zdCBub3JtYWxpemVkQWRkcmVzcyA9ICgpID0+IHtcbiAgICBjb25zdCBhY2MgPSBhY2NvdW50KCk7XG4gICAgaWYgKGFjYykge1xuICAgICAgY29uc3QgdXNlckZyaWVuZGx5QWRkcmVzcyA9IHRvVXNlckZyaWVuZGx5QWRkcmVzcyhhY2MuYWRkcmVzcywgYWNjLmNoYWluID09PSBDSEFJTi5URVNUTkVUKTtcbiAgICAgIHJldHVybiB1c2VyRnJpZW5kbHlBZGRyZXNzLnNsaWNlKDAsIDQpICsgXCJcXHUyMDI2XCIgKyB1c2VyRnJpZW5kbHlBZGRyZXNzLnNsaWNlKC00KTtcbiAgICB9XG4gICAgcmV0dXJuIFwiXCI7XG4gIH07XG4gIHRvbkNvbm5lY3RVSS5jb25uZWN0aW9uUmVzdG9yZWQudGhlbigoKSA9PiBzZXRSZXN0b3JpbmdQcm9jZXNzKGZhbHNlKSk7XG4gIGNvbnN0IHVuc3Vic2NyaWJlID0gY29ubmVjdG9yLm9uU3RhdHVzQ2hhbmdlKCh3YWxsZXQpID0+IHtcbiAgICBpZiAoIXdhbGxldCkge1xuICAgICAgc2V0SXNPcGVuZWQoZmFsc2UpO1xuICAgICAgc2V0QWNjb3VudChudWxsKTtcbiAgICAgIHNldFJlc3RvcmluZ1Byb2Nlc3MoZmFsc2UpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZXRBY2NvdW50KHdhbGxldC5hY2NvdW50KTtcbiAgICBzZXRSZXN0b3JpbmdQcm9jZXNzKGZhbHNlKTtcbiAgfSk7XG4gIGNvbnN0IG9uQ2xpY2sgPSAoZTIpID0+IHtcbiAgICBpZiAoIWFjY291bnQoKSB8fCAhaXNPcGVuZWQoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBjbGlja1RvQnV0dG9uID0gYW5jaG9yKCkuY29udGFpbnMoZTIudGFyZ2V0KTtcbiAgICBjb25zdCBjbGlja1RvRHJvcGRvd24gPSBkcm9wRG93blJlZi5jb250YWlucyhlMi50YXJnZXQpO1xuICAgIGlmICghY2xpY2tUb0J1dHRvbiAmJiAhY2xpY2tUb0Ryb3Bkb3duKSB7XG4gICAgICBzZXRJc09wZW5lZChmYWxzZSk7XG4gICAgfVxuICB9O1xuICBvbk1vdW50KCgpID0+IHtcbiAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvbkNsaWNrKTtcbiAgfSk7XG4gIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25DbGljayk7XG4gICAgdW5zdWJzY3JpYmUoKTtcbiAgfSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoRHluYW1pYywge1xuICAgIGNvbXBvbmVudDogZ2xvYmFsU3R5bGVzVGFnLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3RvcmluZ1Byb2Nlc3MoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVyQnV0dG9uU3R5bGVkJDEsIHtcbiAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlLFxuICAgICAgICAgICAgXCJkYXRhLXRjLWNvbm5lY3QtYnV0dG9uLWxvYWRpbmdcIjogXCJ0cnVlXCIsXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVySWNvblN0eWxlZCQxLCB7fSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXJlc3RvcmluZ1Byb2Nlc3MoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gIWFjY291bnQoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWNjb3VudEJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHRvbkNvbm5lY3RVSS5vcGVuTW9kYWwoKSxcbiAgICAgICAgICAgICAgICBcImRhdGEtdGMtY29ubmVjdC1idXR0b25cIjogXCJ0cnVlXCIsXG4gICAgICAgICAgICAgICAgc2NhbGU6IFwic1wiLFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFRvbkljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGZpbGwoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoZW1lLmNvbG9ycy5jb25uZWN0QnV0dG9uLmZvcmVncm91bmQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGV4dCwge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJidXR0b24uY29ubmVjdFdhbGxldFwiLFxuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogXCIxNXB4XCIsXG4gICAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ6IFwiMThweFwiLFxuICAgICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBcIjU5MFwiLFxuICAgICAgICAgICAgICAgICAgICBnZXQgY29sb3IoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoZW1lLmNvbG9ycy5jb25uZWN0QnV0dG9uLmZvcmVncm91bmQ7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3Qgd2FsbGV0XCJcbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBhY2NvdW50KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KERyb3Bkb3duQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoRHJvcGRvd25CdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4gc2V0SXNPcGVuZWQoKHYpID0+ICF2KSxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiBzZXRBbmNob3IsXG4gICAgICAgICAgICAgICAgICAgIFwiZGF0YS10Yy1kcm9wZG93bi1idXR0b25cIjogXCJ0cnVlXCIsXG4gICAgICAgICAgICAgICAgICAgIHNjYWxlOiBcInNcIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFRleHQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiBcIjE1cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IFwiNTkwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiBcIjE4cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vcm1hbGl6ZWRBZGRyZXNzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChBcnJvd0ljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbjogXCJib3R0b21cIlxuICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChQb3J0YWwsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IF9lbCQgPSB1bnRyYWNrKCgpID0+IGRvY3VtZW50LmltcG9ydE5vZGUoX3RtcGwkJDMsIHRydWUpKTtcbiAgICAgICAgICAgICAgICAgICAgICB1c2Uoc2V0RmxvYXRpbmcsIF9lbCQpO1xuICAgICAgICAgICAgICAgICAgICAgIF9lbCQuc3R5bGUuc2V0UHJvcGVydHkoXCJ6LWluZGV4XCIsIFwiOTk5XCIpO1xuICAgICAgICAgICAgICAgICAgICAgIF9lbCQuXyRvd25lciA9IGdldE93bmVyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChUcmFuc2l0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkJlZm9yZUVudGVyOiAoZWwpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYW5pbWF0ZShlbCwgW3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKC04cHgpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxNTBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25FeGl0OiAoZWwsIGRvbmUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYTIgPSBhbmltYXRlKGVsLCBbe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgtOHB4KVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1dLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDE1MFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYTIuZmluaXNoZWQudGhlbihkb25lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzT3BlbmVkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KERyb3Bkb3duU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBoaWRkZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFpc09wZW5lZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsb3NlOiAoKSA9PiBzZXRJc09wZW5lZChmYWxzZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZihyJCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IF9yZWYkID0gZHJvcERvd25SZWY7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgPyBfcmVmJChyJCkgOiBkcm9wRG93blJlZiA9IHIkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pLCBudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KE5vdGlmaWNhdGlvbnNTdHlsZWQsIHt9KSwgbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfYTIsIF9iMjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IF92JCA9IHBvc2l0aW9uLnN0cmF0ZWd5LCBfdiQyID0gYCR7KF9hMiA9IHBvc2l0aW9uLnkpICE9IG51bGwgPyBfYTIgOiAwfXB4YCwgX3YkMyA9IGAkeyhfYjIgPSBwb3NpdGlvbi54KSAhPSBudWxsID8gX2IyIDogMH1weGA7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdiQgIT09IF9wJC5fdiQgJiYgX2VsJC5zdHlsZS5zZXRQcm9wZXJ0eShcInBvc2l0aW9uXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgX2VsJC5zdHlsZS5zZXRQcm9wZXJ0eShcInRvcFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3YkMyAhPT0gX3AkLl92JDMgJiYgX2VsJC5zdHlsZS5zZXRQcm9wZXJ0eShcImxlZnRcIiwgX3AkLl92JDMgPSBfdiQzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBfdiQyOiB2b2lkIDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBfdiQzOiB2b2lkIDBcbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2VsJDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBTdHlsZWRNb2RhbCA9IHN0eWxlZChNb2RhbClgXG4gICAgcGFkZGluZy1sZWZ0OiAyNHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDI0cHg7XG4gICAgcGFkZGluZy10b3A6IDE4cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMDtcblxuICAgICAgICBtaW4taGVpZ2h0OiAzNjRweDtcbiAgICB9XG5gO1xuY29uc3QgSDFTdHlsZWQkOCA9IHN0eWxlZChIMSlgXG4gICAgbWFyZ2luLXRvcDogMTJweDtcblxuICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xuICAgIH1cbmA7XG5jb25zdCBMb2FkZXJDb250YWluZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIG1hcmdpbjogMzBweCAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIGhlaWdodDogMTYwcHg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuYDtcbnN0eWxlZChUZXh0KWBcbiAgICBtaW4td2lkdGg6IDg0cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtd2VpZ2h0OiA1OTA7XG5gO1xuc3R5bGVkKFRhYkJhcilgXG4gICAgbWFyZ2luOiAwIGF1dG8gMjJweDtcbmA7XG5jb25zdCBbYXBwU3RhdGUsIHNldEFwcFN0YXRlXSA9IGNyZWF0ZVN0b3JlKHtcbiAgYnV0dG9uUm9vdElkOiBudWxsLFxuICBsYW5ndWFnZTogXCJlblwiLFxuICByZXR1cm5TdHJhdGVneTogXCJiYWNrXCIsXG4gIHR3YVJldHVyblVybDogdm9pZCAwLFxuICB3YWxsZXRzTGlzdENvbmZpZ3VyYXRpb246IHt9LFxuICBlbmFibGVBbmRyb2lkQmFja0hhbmRsZXI6IHRydWVcbn0pO1xuZnVuY3Rpb24gdW5pcShhcnJheSkge1xuICByZXR1cm4gWy4uLm5ldyBTZXQoYXJyYXkpXTtcbn1cbmZ1bmN0aW9uIG1lcmdlQ29uY2F0KGlkS2V5LCBhcnJheTEsIGFycmF5Mikge1xuICByZXR1cm4gYXJyYXkxLm1hcCgoaXRlbTEpID0+IHtcbiAgICBjb25zdCBpdGVtMiA9IGFycmF5Mi5maW5kKChlbGVtKSA9PiBlbGVtW2lkS2V5XSA9PT0gaXRlbTFbaWRLZXldKTtcbiAgICBhcnJheTIgPSBhcnJheTIuZmlsdGVyKChlbGVtKSA9PiBlbGVtW2lkS2V5XSAhPT0gaXRlbTFbaWRLZXldKTtcbiAgICByZXR1cm4gaXRlbTIgPT09IHZvaWQgMCA/IGl0ZW0xIDogaXRlbTI7XG4gIH0pLmNvbmNhdChhcnJheTIpO1xufVxuZnVuY3Rpb24gdWlXYWxsZXRUb1dhbGxldEluZm8odWlXYWxsZXQpIHtcbiAgaWYgKFwianNCcmlkZ2VLZXlcIiBpbiB1aVdhbGxldCkge1xuICAgIHJldHVybiBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCB1aVdhbGxldCksIHtcbiAgICAgIGluamVjdGVkOiBUb25Db25uZWN0LmlzV2FsbGV0SW5qZWN0ZWQodWlXYWxsZXQuanNCcmlkZ2VLZXkpLFxuICAgICAgZW1iZWRkZWQ6IFRvbkNvbm5lY3QuaXNJbnNpZGVXYWxsZXRCcm93c2VyKHVpV2FsbGV0LmpzQnJpZGdlS2V5KVxuICAgIH0pO1xuICB9XG4gIHJldHVybiB1aVdhbGxldDtcbn1cbmZ1bmN0aW9uIGFwcGx5V2FsbGV0c0xpc3RDb25maWd1cmF0aW9uKHdhbGxldHNMaXN0LCBjb25maWd1cmF0aW9uKSB7XG4gIHZhciBfYTI7XG4gIGlmICghY29uZmlndXJhdGlvbikge1xuICAgIHJldHVybiB3YWxsZXRzTGlzdDtcbiAgfVxuICBpZiAoKF9hMiA9IGNvbmZpZ3VyYXRpb24uaW5jbHVkZVdhbGxldHMpID09IG51bGwgPyB2b2lkIDAgOiBfYTIubGVuZ3RoKSB7XG4gICAgd2FsbGV0c0xpc3QgPSBtZXJnZUNvbmNhdChcbiAgICAgIFwibmFtZVwiLFxuICAgICAgd2FsbGV0c0xpc3QsXG4gICAgICBjb25maWd1cmF0aW9uLmluY2x1ZGVXYWxsZXRzLm1hcCh1aVdhbGxldFRvV2FsbGV0SW5mbylcbiAgICApO1xuICB9XG4gIHJldHVybiB3YWxsZXRzTGlzdDtcbn1cbmZ1bmN0aW9uIHN1cHBvcnRzRGVza3RvcCh3YWxsZXRJbmZvKSB7XG4gIHJldHVybiB3YWxsZXRJbmZvLnBsYXRmb3Jtcy5zb21lKCh3KSA9PiBbXCJtYWNvc1wiLCBcImxpbnV4XCIsIFwid2luZG93c1wiXS5pbmNsdWRlcyh3KSk7XG59XG5mdW5jdGlvbiBzdXBwb3J0c01vYmlsZSh3YWxsZXRJbmZvKSB7XG4gIHJldHVybiB3YWxsZXRJbmZvLnBsYXRmb3Jtcy5zb21lKCh3KSA9PiBbXCJpb3NcIiwgXCJhbmRyb2lkXCJdLmluY2x1ZGVzKHcpKTtcbn1cbmZ1bmN0aW9uIHN1cHBvcnRzRXh0ZW5zaW9uKHdhbGxldEluZm8pIHtcbiAgcmV0dXJuIHdhbGxldEluZm8ucGxhdGZvcm1zLnNvbWUoKHcpID0+IFtcImNocm9tZVwiLCBcImZpcmVmb3hcIiwgXCJzYWZhcmlcIl0uaW5jbHVkZXModykpO1xufVxuZnVuY3Rpb24gZXFXYWxsZXROYW1lKHdhbGxldDEsIG5hbWUpIHtcbiAgaWYgKCFuYW1lKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB3YWxsZXQxLm5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpIHx8IHdhbGxldDEuYXBwTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lLnRvTG93ZXJDYXNlKCk7XG59XG5jb25zdCBEZXNrdG9wU2VsZWN0V2FsbGV0TW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IEgxU3R5bGVkJDcgPSBzdHlsZWQoSDEpYFxuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG5gO1xuc3R5bGVkLmRpdmBcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBtYXJnaW46IDAgLTI0cHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArIDQ4cHgpO1xuICAgIG9wYWNpdHk6IDAuMTI7XG4gICAgYmFja2dyb3VuZDogJHsocHJvcHMpID0+IHByb3BzLmlzU2hvd24gPyBwcm9wcy50aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnkgOiBcInRyYW5zcGFyZW50XCJ9O1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4xNXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbmA7XG5jb25zdCBXYWxsZXRzVWwgPSBzdHlsZWQudWxgXG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgOTJweCk7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xuICAgIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgcm93LWdhcDogOHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDAgMCAxNnB4O1xuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuXG4gICAgPiBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xuICAgIH1cblxuICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMWZyKTtcbiAgICAgICAgZ2FwOiAwO1xuICAgICAgICBwYWRkaW5nOiA4cHggMTJweCAxNnB4O1xuICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG5cbiAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICBtaW4td2lkdGg6IDc4cHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICB9XG5cbiAgICAgICAgPiBsaSA+ICoge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuc3R5bGVkKEJ1dHRvbilgXG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIGF1dG8gMXB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbmA7XG5jb25zdCBTdHlsZWRJY29uQnV0dG9uJDMgPSBzdHlsZWQoSWNvbkJ1dHRvbilgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTZweDtcbiAgICBsZWZ0OiAxNnB4O1xuYDtcbmNvbnN0IFdhbGxldExhYmVsZWRJdGVtU3R5bGVkID0gc3R5bGVkKFdhbGxldExhYmVsZWRJdGVtKWBcbiAgICBoZWlnaHQ6IDEwMCU7XG5gO1xuY29uc3QgX3RtcGwkJDIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGxpPjwvbGk+YCk7XG5jb25zdCBBbGxXYWxsZXRzTGlzdE1vZGFsID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IG1heEhlaWdodCA9ICgpID0+IGlzTW9iaWxlKCkgPyB2b2lkIDAgOiA1MTA7XG4gIGNvbnN0IHdhbGxldHNMaXN0ID0gKCkgPT4gaXNNb2JpbGUoKSA/IHByb3BzLndhbGxldHNMaXN0LmZpbHRlcihzdXBwb3J0c01vYmlsZSkgOiBwcm9wcy53YWxsZXRzTGlzdDtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEZXNrdG9wU2VsZWN0V2FsbGV0TW9kYWxTdHlsZWQsIHtcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1saXN0XCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFN0eWxlZEljb25CdXR0b24kMywge1xuICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQmFjaygpXG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgxU3R5bGVkJDcsIHtcbiAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwud2FsbGV0c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJXYWxsZXRzXCJcbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2Nyb2xsQ29udGFpbmVyLCB7XG4gICAgICAgIGdldCBtYXhIZWlnaHQoKSB7XG4gICAgICAgICAgcmV0dXJuIG1heEhlaWdodCgpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRzVWwsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChGb3IsIHtcbiAgICAgICAgICAgICAgICBnZXQgZWFjaCgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiB3YWxsZXRzTGlzdCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46ICh3YWxsZXQpID0+ICgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBfZWwkID0gX3RtcGwkJDIuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRMYWJlbGVkSXRlbVN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICB3YWxsZXQsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uU2VsZWN0KHdhbGxldClcbiAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBfZWwkO1xuICAgICAgICAgICAgICAgIH0pKClcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IHRnQnV0dG9uQm9yZGVycyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiMTJweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IHRnSWNvbkJvcmRlcnMgPSB7XG4gIG06IFwiNnB4XCIsXG4gIHM6IFwiNnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgRGVza3RvcENvbm5lY3Rpb25Nb2RhbFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuYDtcbmNvbnN0IEJvZHlTdHlsZWQkMSA9IHN0eWxlZC5kaXZgXG4gICAgZmxleDogMTtcbiAgICBtYXJnaW4tdG9wOiAkeyhwcm9wcykgPT4gcHJvcHMucXIgPyBcIjBcIiA6IFwiMThweFwifTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtaW4taGVpZ2h0OiAyMzJweDtcbmA7XG5jb25zdCBRUkNvZGVTdHlsZWQkMSA9IHN0eWxlZChRUkNvZGUpYFxuICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XG5gO1xuY29uc3QgSDFTdHlsZWQkNiA9IHN0eWxlZChIMSlgXG4gICAgbWF4LXdpZHRoOiAyODhweDtcbiAgICBtYXJnaW46IDAgYXV0byAycHg7XG5gO1xuY29uc3QgSDJTdHlsZWQkNCA9IHN0eWxlZChIMilgXG4gICAgbWF4LXdpZHRoOiAyODhweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAwIGF1dG8gMjBweDtcbmA7XG5jb25zdCBTdHlsZWRJY29uQnV0dG9uJDIgPSBzdHlsZWQoSWNvbkJ1dHRvbilgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTZweDtcbiAgICBsZWZ0OiAxNnB4O1xuYDtcbmNvbnN0IEJ1dHRvbnNDb250YWluZXJTdHlsZWQkMSA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBnYXA6IDhweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbmA7XG5jb25zdCBCb3R0b21CdXR0b25zQ29udGFpbmVyU3R5bGVkID0gc3R5bGVkKEJ1dHRvbnNDb250YWluZXJTdHlsZWQkMSlgXG4gICAgcGFkZGluZy1ib3R0b206IDA7XG5gO1xuY29uc3QgRm9vdGVyQnV0dG9uJDEgPSBzdHlsZWQoQnV0dG9uKWBcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IExvYWRlclN0eWxlZCQxID0gc3R5bGVkKExvYWRlckljb24pYFxuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gICAgbWFyZ2luLXRvcDogMnB4O1xuYDtcbmNvbnN0IEVycm9ySWNvblN0eWxlZCQxID0gc3R5bGVkKEVycm9ySWNvbilgXG4gICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbmA7XG5jb25zdCBCb2R5VGV4dFN0eWxlZCQxID0gc3R5bGVkKEgyKWBcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG5gO1xuY29uc3QgVGdCdXR0b25TdHlsZWQgPSBzdHlsZWQoQnV0dG9uKWBcbiAgICBtYXJnaW4tdG9wOiAtOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMTJweCAxMnB4IDEycHggMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gdGdCdXR0b25Cb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbmA7XG5jb25zdCBUZ0ltYWdlU3R5bGVkID0gc3R5bGVkKEltYWdlKWBcbiAgICB3aWR0aDogMzJweDtcbiAgICBoZWlnaHQ6IDMycHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IHRnSWNvbkJvcmRlcnNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5gO1xuY29uc3QgVHJhbnNsYXRpb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3QyXSA9IHVzZUkxOG4oKTtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgcmV0dXJuIHQyKHByb3BzLnRyYW5zbGF0aW9uS2V5LCBwcm9wcy50cmFuc2xhdGlvblZhbHVlcywgKF9hMiA9IHByb3BzLmNoaWxkcmVuKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRvU3RyaW5nKCkpO1xuICB9KTtcbn07XG5mdW5jdGlvbiBhZGRSZXR1cm5TdHJhdGVneSh1cmwsIHN0cmF0ZWd5KSB7XG4gIGxldCByZXR1cm5TdHJhdGVneTtcbiAgaWYgKHR5cGVvZiBzdHJhdGVneSA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVyblN0cmF0ZWd5ID0gc3RyYXRlZ3k7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuU3RyYXRlZ3kgPSBpc0luVE1BKCkgPyBzdHJhdGVneS50d2FSZXR1cm5VcmwgfHwgc3RyYXRlZ3kucmV0dXJuU3RyYXRlZ3kgOiBcIm5vbmVcIjtcbiAgfVxuICBjb25zdCBuZXdVcmwgPSBhZGRRdWVyeVBhcmFtZXRlcih1cmwsIFwicmV0XCIsIHJldHVyblN0cmF0ZWd5KTtcbiAgaWYgKCFpc1RlbGVncmFtVXJsKHVybCkpIHtcbiAgICByZXR1cm4gbmV3VXJsO1xuICB9XG4gIGNvbnN0IGxhc3RQYXJhbSA9IG5ld1VybC5zbGljZShuZXdVcmwubGFzdEluZGV4T2YoXCImXCIpICsgMSk7XG4gIHJldHVybiBuZXdVcmwuc2xpY2UoMCwgbmV3VXJsLmxhc3RJbmRleE9mKFwiJlwiKSkgKyBcIi1cIiArIGVuY29kZVRlbGVncmFtVXJsUGFyYW1ldGVycyhsYXN0UGFyYW0pO1xufVxuZnVuY3Rpb24gcmVkaXJlY3RUb1RlbGVncmFtKHVuaXZlcnNhbExpbmssIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IF9fc3ByZWFkVmFsdWVzKHt9LCBvcHRpb25zKTtcbiAgY29uc3QgZGlyZWN0TGluayA9IGNvbnZlcnRUb1RHRGlyZWN0TGluayh1bml2ZXJzYWxMaW5rKTtcbiAgY29uc3QgZGlyZWN0TGlua1VybCA9IG5ldyBVUkwoZGlyZWN0TGluayk7XG4gIGlmICghZGlyZWN0TGlua1VybC5zZWFyY2hQYXJhbXMuaGFzKFwic3RhcnRhcHBcIikpIHtcbiAgICBkaXJlY3RMaW5rVXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoXCJzdGFydGFwcFwiLCBcInRvbmNvbm5lY3RcIik7XG4gIH1cbiAgaWYgKGlzSW5UZWxlZ3JhbUJyb3dzZXIoKSkge1xuICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImJhY2tcIjtcbiAgICBjb25zdCBsaW5rV2l0U3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneShkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpO1xuICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgfSBlbHNlIGlmIChpc0luVE1BKCkpIHtcbiAgICBpZiAoaXNUbWFQbGF0Zm9ybShcImlvc1wiLCBcImFuZHJvaWRcIiwgXCJtYWNvc1wiLCBcInRkZXNrdG9wXCIsIFwid2ViXCIpKSB7XG4gICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJiYWNrXCI7XG4gICAgICBjb25zdCBsaW5rV2l0U3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneShcbiAgICAgICAgZGlyZWN0TGlua1VybC50b1N0cmluZygpLFxuICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5XG4gICAgICApO1xuICAgICAgc2VuZE9wZW5UZWxlZ3JhbUxpbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICB9IGVsc2UgaWYgKGlzVG1hUGxhdGZvcm0oXCJ3ZWJhXCIpKSB7XG4gICAgICBzZW5kT3BlblRlbGVncmFtTGluayhhZGRSZXR1cm5TdHJhdGVneShkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksIG9wdGlvbnMpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3BlbkxpbmtCbGFuayhhZGRSZXR1cm5TdHJhdGVneShkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksIG9wdGlvbnMpKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKGlzT1MoXCJpb3NcIikpIHtcbiAgICAgIGlmIChvcHRpb25zLnJldHVyblN0cmF0ZWd5ID09PSBcImJhY2tcIikge1xuICAgICAgICBpZiAoaXNCcm93c2VyKFwic2FmYXJpXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiYmFja1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImdvb2dsZWNocm9tZTovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImZpcmVmb3hcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJmaXJlZm94Oi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwib3BlcmFcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJvcGVyYS1odHRwOi8vXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IGxvY2F0aW9uLmhyZWY7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGNvbnN0IGlzQ2hyb21lID0gaXNCcm93c2VyKFwiY2hyb21lXCIpO1xuICAgICAgY29uc3QgaXNGaXJlZm94ID0gaXNCcm93c2VyKFwiZmlyZWZveFwiKTtcbiAgICAgIGNvbnN0IHVzZURlZXBMaW5rID0gKGlzQ2hyb21lIHx8IGlzRmlyZWZveCkgJiYgIW9wdGlvbnMuZm9yY2VSZWRpcmVjdDtcbiAgICAgIGlmICh1c2VEZWVwTGluaykge1xuICAgICAgICBjb25zdCBsaW5rV2l0aFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koXG4gICAgICAgICAgZGlyZWN0TGlua1VybC50b1N0cmluZygpLFxuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3lcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgZGVlcExpbmsgPSBjb252ZXJ0VG9UR0RlZXBMaW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgICBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2soZGVlcExpbmssICgpID0+IG9wZW5MaW5rQmxhbmsobGlua1dpdGhTdHJhdGVneSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgbGlua1dpdGhTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KFxuICAgICAgICAgIGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSxcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5XG4gICAgICAgICk7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdGhTdHJhdGVneSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChpc09TKFwiYW5kcm9pZFwiKSkge1xuICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiYmFja1wiO1xuICAgICAgY29uc3QgaXNDaHJvbWUgPSBpc0Jyb3dzZXIoXCJjaHJvbWVcIik7XG4gICAgICBjb25zdCBpc0ZpcmVmb3ggPSBpc0Jyb3dzZXIoXCJmaXJlZm94XCIpO1xuICAgICAgY29uc3QgdXNlRGVlcExpbmsgPSAoaXNDaHJvbWUgfHwgaXNGaXJlZm94KSAmJiAhb3B0aW9ucy5mb3JjZVJlZGlyZWN0O1xuICAgICAgaWYgKHVzZURlZXBMaW5rKSB7XG4gICAgICAgIGNvbnN0IGxpbmtXaXRoU3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneShcbiAgICAgICAgICBkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksXG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneVxuICAgICAgICApO1xuICAgICAgICBjb25zdCBkZWVwTGluayA9IGNvbnZlcnRUb1RHRGVlcExpbmsobGlua1dpdGhTdHJhdGVneSk7XG4gICAgICAgIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayhkZWVwTGluaywgKCkgPT4gb3BlbkxpbmtCbGFuayhsaW5rV2l0aFN0cmF0ZWd5KSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBsaW5rV2l0aFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koXG4gICAgICAgICAgZGlyZWN0TGlua1VybC50b1N0cmluZygpLFxuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3lcbiAgICAgICAgKTtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0aFN0cmF0ZWd5KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzT1MoXCJpcGFkXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgaWYgKGlzQnJvd3NlcihcInNhZmFyaVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImJhY2tcIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJjaHJvbWVcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJnb29nbGVjaHJvbWU6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJmaXJlZm94XCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZmlyZWZveDovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcIm9wZXJhXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwib3BlcmEtaHR0cDovL1wiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBsb2NhdGlvbi5ocmVmO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBpc0Nocm9tZSA9IGlzQnJvd3NlcihcImNocm9tZVwiKTtcbiAgICAgIGNvbnN0IGlzRmlyZWZveCA9IGlzQnJvd3NlcihcImZpcmVmb3hcIik7XG4gICAgICBjb25zdCB1c2VEZWVwTGluayA9IChpc0Nocm9tZSB8fCBpc0ZpcmVmb3gpICYmICFvcHRpb25zLmZvcmNlUmVkaXJlY3Q7XG4gICAgICBjb25zdCBsaW5rV2l0aFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koXG4gICAgICAgIGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSxcbiAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneVxuICAgICAgKTtcbiAgICAgIGlmICh1c2VEZWVwTGluaykge1xuICAgICAgICBjb25zdCBkZWVwTGluayA9IGNvbnZlcnRUb1RHRGVlcExpbmsobGlua1dpdGhTdHJhdGVneSk7XG4gICAgICAgIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayhkZWVwTGluaywgKCkgPT4gb3BlbkxpbmtCbGFuayhsaW5rV2l0aFN0cmF0ZWd5KSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNPUyhcIm1hY29zXCIsIFwid2luZG93c1wiLCBcImxpbnV4XCIpKSB7XG4gICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJiYWNrXCI7XG4gICAgICBvcHRpb25zLnR3YVJldHVyblVybCA9IHZvaWQgMDtcbiAgICAgIGNvbnN0IGxpbmtXaXRoU3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneShcbiAgICAgICAgZGlyZWN0TGlua1VybC50b1N0cmluZygpLFxuICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5XG4gICAgICApO1xuICAgICAgaWYgKG9wdGlvbnMuZm9yY2VSZWRpcmVjdCkge1xuICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgZGVlcExpbmsgPSBjb252ZXJ0VG9UR0RlZXBMaW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgICBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2soZGVlcExpbmssICgpID0+IG9wZW5MaW5rQmxhbmsobGlua1dpdGhTdHJhdGVneSkpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBvcGVuTGlua0JsYW5rKGFkZFJldHVyblN0cmF0ZWd5KGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSwgb3B0aW9ucykpO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gcmVkaXJlY3RUb1dhbGxldCh1bml2ZXJzYWxMaW5rLCBkZWVwTGluaywgb3B0aW9ucywgc2V0T3Blbk1ldGhvZCkge1xuICBvcHRpb25zID0gX19zcHJlYWRWYWx1ZXMoe30sIG9wdGlvbnMpO1xuICBpZiAoaXNJblRlbGVncmFtQnJvd3NlcigpKSB7XG4gICAgaWYgKGlzT1MoXCJpb3NcIiwgXCJhbmRyb2lkXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwidGc6Ly9yZXNvbHZlXCI7XG4gICAgICB9XG4gICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICBvcGVuTGluayhhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KSwgXCJfc2VsZlwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSk7XG4gICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzSW5UTUEoKSkge1xuICAgIGlmIChpc1RtYVBsYXRmb3JtKFwiaW9zXCIsIFwiYW5kcm9pZFwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcInRnOi8vcmVzb2x2ZVwiO1xuICAgICAgfVxuICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSk7XG4gICAgICBzZW5kT3BlblRlbGVncmFtTGluayhsaW5rV2l0U3RyYXRlZ3ksICgpID0+IHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKGlzVG1hUGxhdGZvcm0oXCJtYWNvc1wiLCBcInRkZXNrdG9wXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwidGc6Ly9yZXNvbHZlXCI7XG4gICAgICB9XG4gICAgICBjb25zdCBsaW5rV2l0U3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KTtcbiAgICAgIGNvbnN0IHVzZURlZXBMaW5rID0gISFkZWVwTGluayAmJiAhb3B0aW9ucy5mb3JjZVJlZGlyZWN0O1xuICAgICAgaWYgKHVzZURlZXBMaW5rKSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJjdXN0b20tZGVlcGxpbmtcIik7XG4gICAgICAgIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayh0b0RlZXBsaW5rKGxpbmtXaXRTdHJhdGVneSwgZGVlcExpbmspLCAoKSA9PiB7XG4gICAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzVG1hUGxhdGZvcm0oXCJ3ZWJhXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgaWYgKGlzQnJvd3NlcihcInNhZmFyaVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBsb2NhdGlvbi5ocmVmO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImdvb2dsZWNocm9tZTovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImZpcmVmb3hcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJmaXJlZm94Oi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwib3BlcmFcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJvcGVyYS1odHRwOi8vXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IGxvY2F0aW9uLmhyZWY7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGNvbnN0IGxpbmtXaXRTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpO1xuICAgICAgY29uc3QgdXNlRGVlcExpbmsgPSAhIWRlZXBMaW5rICYmICFvcHRpb25zLmZvcmNlUmVkaXJlY3Q7XG4gICAgICBpZiAodXNlRGVlcExpbmspIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcImN1c3RvbS1kZWVwbGlua1wiKTtcbiAgICAgICAgb3BlbkRlZXBsaW5rV2l0aEZhbGxiYWNrKHRvRGVlcGxpbmsobGlua1dpdFN0cmF0ZWd5LCBkZWVwTGluayksICgpID0+IHtcbiAgICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNUbWFQbGF0Zm9ybShcIndlYlwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJjaHJvbWVcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJnb29nbGVjaHJvbWU6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJmaXJlZm94XCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZmlyZWZveDovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcIm9wZXJhXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwib3BlcmEtaHR0cDovL1wiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBsb2NhdGlvbi5ocmVmO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBsaW5rV2l0U3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KTtcbiAgICAgIGNvbnN0IHVzZURlZXBMaW5rID0gISFkZWVwTGluayAmJiAhb3B0aW9ucy5mb3JjZVJlZGlyZWN0O1xuICAgICAgaWYgKHVzZURlZXBMaW5rKSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJjdXN0b20tZGVlcGxpbmtcIik7XG4gICAgICAgIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayh0b0RlZXBsaW5rKGxpbmtXaXRTdHJhdGVneSwgZGVlcExpbmspLCAoKSA9PiB7XG4gICAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSk7XG4gICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChpc09TKFwiaW9zXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgaWYgKGlzQnJvd3NlcihcInNhZmFyaVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm5vbmVcIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJjaHJvbWVcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJnb29nbGVjaHJvbWU6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJmaXJlZm94XCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZmlyZWZveDovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcIm9wZXJhXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwib3BlcmEtaHR0cDovL1wiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBsb2NhdGlvbi5ocmVmO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgb3BlbkxpbmsoYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSksIFwiX3NlbGZcIik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsoYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSkpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNPUyhcImFuZHJvaWRcIikpIHtcbiAgICAgIGlmIChvcHRpb25zLnJldHVyblN0cmF0ZWd5ID09PSBcImJhY2tcIikge1xuICAgICAgICBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZ29vZ2xlY2hyb21lOi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImZpcmVmb3g6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJvcGVyYVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm9wZXJhLWh0dHA6Ly9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgb3BlbkxpbmtCbGFuayhhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KSk7XG4gICAgfSBlbHNlIGlmIChpc09TKFwiaXBhZFwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJub25lXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZ29vZ2xlY2hyb21lOi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImZpcmVmb3g6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJvcGVyYVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm9wZXJhLWh0dHA6Ly9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rKGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpLCBcIl9zZWxmXCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICBvcGVuTGlua0JsYW5rKGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzT1MoXCJtYWNvc1wiLCBcIndpbmRvd3NcIiwgXCJsaW51eFwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJub25lXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZ29vZ2xlY2hyb21lOi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImZpcmVmb3g6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJvcGVyYVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm9wZXJhLWh0dHA6Ly9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJub25lXCI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGNvbnN0IGxpbmtXaXRTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpO1xuICAgICAgY29uc3QgdXNlRGVlcExpbmsgPSAhIWRlZXBMaW5rICYmICFvcHRpb25zLmZvcmNlUmVkaXJlY3Q7XG4gICAgICBpZiAodXNlRGVlcExpbmspIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcImN1c3RvbS1kZWVwbGlua1wiKTtcbiAgICAgICAgb3BlbkRlZXBsaW5rV2l0aEZhbGxiYWNrKHRvRGVlcGxpbmsobGlua1dpdFN0cmF0ZWd5LCBkZWVwTGluayksICgpID0+IHtcbiAgICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICBvcGVuTGlua0JsYW5rKGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpKTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIGFkZFF1ZXJ5UGFyYW1ldGVyKHVybCwga2V5LCB2YWx1ZSkge1xuICBjb25zdCBwYXJzZWQgPSBuZXcgVVJMKHVybCk7XG4gIHBhcnNlZC5zZWFyY2hQYXJhbXMuYXBwZW5kKGtleSwgdmFsdWUpO1xuICByZXR1cm4gcGFyc2VkLnRvU3RyaW5nKCk7XG59XG5mdW5jdGlvbiBjb252ZXJ0VG9UR0RpcmVjdExpbmsodW5pdmVyc2FsTGluaykge1xuICBjb25zdCB1cmwgPSBuZXcgVVJMKHVuaXZlcnNhbExpbmspO1xuICBpZiAodXJsLnNlYXJjaFBhcmFtcy5oYXMoXCJhdHRhY2hcIikpIHtcbiAgICB1cmwuc2VhcmNoUGFyYW1zLmRlbGV0ZShcImF0dGFjaFwiKTtcbiAgICB1cmwucGF0aG5hbWUgKz0gXCIvc3RhcnRcIjtcbiAgfVxuICByZXR1cm4gdXJsLnRvU3RyaW5nKCk7XG59XG5mdW5jdGlvbiBjb252ZXJ0VG9UR0RlZXBMaW5rKGRpcmVjdExpbmspIHtcbiAgY29uc3QgcGFyc2VkID0gbmV3IFVSTChkaXJlY3RMaW5rKTtcbiAgY29uc3QgWywgZG9tYWluLCBhcHBuYW1lXSA9IHBhcnNlZC5wYXRobmFtZS5zcGxpdChcIi9cIik7XG4gIGNvbnN0IHN0YXJ0YXBwID0gcGFyc2VkLnNlYXJjaFBhcmFtcy5nZXQoXCJzdGFydGFwcFwiKTtcbiAgcmV0dXJuIGB0ZzovL3Jlc29sdmU/ZG9tYWluPSR7ZG9tYWlufSZhcHBuYW1lPSR7YXBwbmFtZX0mc3RhcnRhcHA9JHtzdGFydGFwcH1gO1xufVxuY29uc3QgRGVza3RvcENvbm5lY3Rpb25Nb2RhbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbbW9kZSwgc2V0TW9kZV0gPSBjcmVhdGVTaWduYWwoXCJtb2JpbGVcIik7XG4gIGNvbnN0IFtjb25uZWN0aW9uRXJyb3JlZCwgc2V0Q29ubmVjdGlvbkVycm9yZWRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3QgW3VuaXZlcnNhbExpbmssIHNldFVuaXZlcnNhbExpbmtdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFtmaXJzdENsaWNrLCBzZXRGaXJzdENsaWNrXSA9IGNyZWF0ZVNpZ25hbCh0cnVlKTtcbiAgY29uc3QgY29ubmVjdG9yID0gdXNlQ29udGV4dChDb25uZWN0b3JDb250ZXh0KTtcbiAgY29uc3QgdW5zdWJzY3JpYmUgPSBjb25uZWN0b3Iub25TdGF0dXNDaGFuZ2UoKCkgPT4ge1xuICB9LCAoKSA9PiB7XG4gICAgaWYgKHByb3BzLndhbGxldC5hcHBOYW1lICE9PSBBVF9XQUxMRVRfQVBQX05BTUUpIHtcbiAgICAgIHNldENvbm5lY3Rpb25FcnJvcmVkKHRydWUpO1xuICAgIH1cbiAgfSk7XG4gIG9uQ2xlYW51cCh1bnN1YnNjcmliZSk7XG4gIGNvbnN0IGdlbmVyYXRlVW5pdmVyc2FsTGluayA9ICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgdW5pdmVyc2FsTGluazIgPSBjb25uZWN0b3IuY29ubmVjdCh7XG4gICAgICAgIHVuaXZlcnNhbExpbms6IHByb3BzLndhbGxldC51bml2ZXJzYWxMaW5rLFxuICAgICAgICBicmlkZ2VVcmw6IHByb3BzLndhbGxldC5icmlkZ2VVcmxcbiAgICAgIH0sIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KTtcbiAgICAgIHNldFVuaXZlcnNhbExpbmsodW5pdmVyc2FsTGluazIpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9O1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh1bnRyYWNrKG1vZGUpICE9PSBcImV4dGVuc2lvblwiICYmIChzdXBwb3J0c01vYmlsZShwcm9wcy53YWxsZXQpIHx8IHN1cHBvcnRzRGVza3RvcChwcm9wcy53YWxsZXQpKSkge1xuICAgICAgZ2VuZXJhdGVVbml2ZXJzYWxMaW5rKCk7XG4gICAgfVxuICB9KTtcbiAgY29uc3Qgb25DbGlja01vYmlsZSA9ICgpID0+IHtcbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZChmYWxzZSk7XG4gICAgaWYgKG1vZGUoKSA9PT0gXCJleHRlbnNpb25cIikge1xuICAgICAgZ2VuZXJhdGVVbml2ZXJzYWxMaW5rKCk7XG4gICAgfVxuICAgIHNldE1vZGUoXCJtb2JpbGVcIik7XG4gICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBwcm9wcy53YWxsZXQpLCB7XG4gICAgICBvcGVuTWV0aG9kOiBcInFyY29kZVwiXG4gICAgfSkpO1xuICB9O1xuICBjb25zdCBvbkNsaWNrRGVza3RvcCA9ICgpID0+IHtcbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZChmYWxzZSk7XG4gICAgaWYgKG1vZGUoKSA9PT0gXCJleHRlbnNpb25cIikge1xuICAgICAgZ2VuZXJhdGVVbml2ZXJzYWxMaW5rKCk7XG4gICAgfVxuICAgIHNldE1vZGUoXCJkZXNrdG9wXCIpO1xuICAgIGlmIChpc1RlbGVncmFtVXJsKHVuaXZlcnNhbExpbmsoKSkpIHtcbiAgICAgIG9uQ2xpY2tUZWxlZ3JhbSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBmb3JjZVJlZGlyZWN0ID0gIWZpcnN0Q2xpY2soKTtcbiAgICAgIHNldEZpcnN0Q2xpY2soZmFsc2UpO1xuICAgICAgcmVkaXJlY3RUb1dhbGxldCh1bml2ZXJzYWxMaW5rKCksIHByb3BzLndhbGxldC5kZWVwTGluaywge1xuICAgICAgICByZXR1cm5TdHJhdGVneTogYXBwU3RhdGUucmV0dXJuU3RyYXRlZ3ksXG4gICAgICAgIGZvcmNlUmVkaXJlY3RcbiAgICAgIH0sIChtZXRob2QpID0+IHtcbiAgICAgICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBwcm9wcy53YWxsZXQpLCB7XG4gICAgICAgICAgb3Blbk1ldGhvZDogbWV0aG9kXG4gICAgICAgIH0pKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgY29uc3Qgb25DbGlja1RlbGVncmFtID0gKCkgPT4ge1xuICAgIGNvbnN0IGZvcmNlUmVkaXJlY3QgPSAhZmlyc3RDbGljaygpO1xuICAgIHNldEZpcnN0Q2xpY2soZmFsc2UpO1xuICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMud2FsbGV0KSwge1xuICAgICAgb3Blbk1ldGhvZDogXCJ1bml2ZXJzYWwtbGlua1wiXG4gICAgfSkpO1xuICAgIHJlZGlyZWN0VG9UZWxlZ3JhbSh1bml2ZXJzYWxMaW5rKCksIHtcbiAgICAgIHJldHVyblN0cmF0ZWd5OiBhcHBTdGF0ZS5yZXR1cm5TdHJhdGVneSxcbiAgICAgIHR3YVJldHVyblVybDogYXBwU3RhdGUudHdhUmV0dXJuVXJsLFxuICAgICAgZm9yY2VSZWRpcmVjdFxuICAgIH0pO1xuICB9O1xuICBjb25zdCBvbkNsaWNrRXh0ZW5zaW9uID0gKCkgPT4ge1xuICAgIHNldENvbm5lY3Rpb25FcnJvcmVkKGZhbHNlKTtcbiAgICBzZXRNb2RlKFwiZXh0ZW5zaW9uXCIpO1xuICAgIGlmIChpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZChwcm9wcy53YWxsZXQpKSB7XG4gICAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKHByb3BzLndhbGxldCk7XG4gICAgICBjb25uZWN0b3IuY29ubmVjdCh7XG4gICAgICAgIGpzQnJpZGdlS2V5OiBwcm9wcy53YWxsZXQuanNCcmlkZ2VLZXlcbiAgICAgIH0sIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KTtcbiAgICB9XG4gIH07XG4gIGlmIChzdXBwb3J0c01vYmlsZShwcm9wcy53YWxsZXQpKSB7XG4gICAgb25DbGlja01vYmlsZSgpO1xuICB9IGVsc2UgaWYgKHN1cHBvcnRzRXh0ZW5zaW9uKHByb3BzLndhbGxldCkpIHtcbiAgICBvbkNsaWNrRXh0ZW5zaW9uKCk7XG4gIH0gZWxzZSB7XG4gICAgb25DbGlja0Rlc2t0b3AoKTtcbiAgfVxuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KERlc2t0b3BDb25uZWN0aW9uTW9kYWxTdHlsZWQsIHtcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1jb25uZWN0aW9uLWRlc2t0b3BcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXByb3BzLmJhY2tEaXNhYmxlZDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3R5bGVkSWNvbkJ1dHRvbiQyLCB7XG4gICAgICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkJhY2tDbGljaygpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkNiwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5uYW1lO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIG1vZGUoKSA9PT0gXCJtb2JpbGVcIjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoSDJTdHlsZWQkNCwge1xuICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5zY2FuUVJcIixcbiAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtcIlNjYW4gdGhlIFFSIGNvZGUgYmVsb3cgd2l0aCB5b3VyIHBob25lXFx1MjAxOXMgb3IgXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpLCBcIlxcdTIwMTlzIGNhbWVyYVwiXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCb2R5U3R5bGVkJDEsIHtcbiAgICAgICAgZ2V0IHFyKCkge1xuICAgICAgICAgIHJldHVybiBtb2RlKCkgPT09IFwibW9iaWxlXCI7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN3aXRjaCwge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG1vZGUoKSA9PT0gXCJtb2JpbGVcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUVJDb2RlU3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZUNvcHk6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBnZXQgc291cmNlVXJsKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rKCksIFwibm9uZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGltYWdlVXJsKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuaW1hZ2VVcmw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb25FcnJvcmVkKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChFcnJvckljb25TdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICBzaXplOiBcInNcIlxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCb2R5VGV4dFN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BDb25uZWN0aW9uTW9kYWwuY29ubmVjdGlvbkRlY2xpbmVkXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3Rpb24gZGVjbGluZWRcIlxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCdXR0b25zQ29udGFpbmVyU3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUmV0cnlJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IG9uQ2xpY2soKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBtb2RlKCkgPT09IFwiZXh0ZW5zaW9uXCIgPyBvbkNsaWNrRXh0ZW5zaW9uIDogb25DbGlja0Rlc2t0b3A7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiY29tbW9uLnJldHJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUmV0cnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG1vZGUoKSA9PT0gXCJleHRlbnNpb25cIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzV2FsbGV0SW5mb0N1cnJlbnRseUluamVjdGVkKHByb3BzLndhbGxldCk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChMb2FkZXJTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJzXCJcbiAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJvZHlUZXh0U3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BDb25uZWN0aW9uTW9kYWwuY29udGludWVJbkV4dGVuc2lvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiQ29udGludWUgaW4gXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpLCBcIiBicm93c2VyIGV4dGVuc2lvblxcdTIwMjZcIl07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCdXR0b25zQ29udGFpbmVyU3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFJldHJ5SWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25DbGlja0V4dGVuc2lvbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5yZXRyeVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJSZXRyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhaXNXYWxsZXRJbmZvQ3VycmVudGx5SW5qZWN0ZWQocHJvcHMud2FsbGV0KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEJvZHlUZXh0U3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BDb25uZWN0aW9uTW9kYWwuZG9udEhhdmVFeHRlbnNpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcIlNlZW1zIHlvdSBkb24ndCBoYXZlIGluc3RhbGxlZCBcIiwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQubmFtZSksIFwiIGJyb3dzZXIgZXh0ZW5zaW9uXCJdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uc0NvbnRhaW5lclN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTGluaywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBocmVmKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5hYm91dFVybDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsYW5rOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCByaWdodEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMaW5rSWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbkNsaWNrRXh0ZW5zaW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5nZXRXYWxsZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcIkdldCBcIiwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQubmFtZSldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG1vZGUoKSA9PT0gXCJkZXNrdG9wXCI7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChMb2FkZXJJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwibVwiXG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJvZHlUZXh0U3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5jb250aW51ZU9uRGVza3RvcFwiLFxuICAgICAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXCJDb250aW51ZSBpbiBcIiwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQubmFtZSksIFwiIG9uIGRlc2t0b3BcXHUyMDI2XCJdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNDb250YWluZXJTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUmV0cnlJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25DbGlja0Rlc2t0b3AsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24ucmV0cnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJSZXRyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTGluaywge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGhyZWYoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuYWJvdXRVcmw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgYmxhbms6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHJpZ2h0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTGlua0ljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5nZXRXYWxsZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiR2V0IFwiLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndhbGxldC5uYW1lKV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0LmFwcE5hbWUgPT09IEFUX1dBTExFVF9BUFBfTkFNRTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVGdCdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgIGdldCByaWdodEljb24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVGdJbWFnZVN0eWxlZCwge1xuICAgICAgICAgICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gSU1HLlRHO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2NhbGU6IFwic1wiLFxuICAgICAgICAgICAgb25DbGljazogb25DbGlja1RlbGVncmFtLFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5vcGVuV2FsbGV0T25UZWxlZ3JhbVwiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIk9wZW4gV2FsbGV0IGluIFRlbGVncmFtIG9uIGRlc2t0b3BcIlxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuYXBwTmFtZSAhPT0gQVRfV0FMTEVUX0FQUF9OQU1FO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCb3R0b21CdXR0b25zQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+IG1vZGUoKSAhPT0gXCJtb2JpbGVcIikoKSAmJiBzdXBwb3J0c01vYmlsZShwcm9wcy53YWxsZXQpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChGb290ZXJCdXR0b24kMSwge1xuICAgICAgICAgICAgICAgICAgICBhcHBlYXJhbmNlOiBcInNlY29uZGFyeVwiLFxuICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNb2JpbGVJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uQ2xpY2tNb2JpbGUsXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24ubW9iaWxlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJNb2JpbGVcIlxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gbW9kZSgpICE9PSBcImV4dGVuc2lvblwiKSgpICYmIHN1cHBvcnRzRXh0ZW5zaW9uKHByb3BzLndhbGxldCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEZvb3RlckJ1dHRvbiQxLCB7XG4gICAgICAgICAgICAgICAgICAgIGFwcGVhcmFuY2U6IFwic2Vjb25kYXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJyb3dzZXJJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uQ2xpY2tFeHRlbnNpb24sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24uYnJvd3NlckV4dGVuc2lvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQnJvd3NlciBFeHRlbnNpb25cIlxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gbW9kZSgpICE9PSBcImRlc2t0b3BcIikoKSAmJiBzdXBwb3J0c0Rlc2t0b3AocHJvcHMud2FsbGV0KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9vdGVyQnV0dG9uJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgYXBwZWFyYW5jZTogXCJzZWNvbmRhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRGVza3RvcEljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25DbGlja0Rlc2t0b3AsXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24uZGVza3RvcFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiRGVza3RvcFwiXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBJbmZvTW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YGA7XG5jb25zdCBTdHlsZWRJY29uQnV0dG9uJDEgPSBzdHlsZWQoSWNvbkJ1dHRvbilgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTZweDtcbiAgICBsZWZ0OiAxNnB4O1xuYDtcbmNvbnN0IEgxU3R5bGVkJDUgPSBzdHlsZWQoSDEpYFxuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG5gO1xuY29uc3QgSW5mb0Jsb2NrID0gc3R5bGVkLmRpdmBcbiAgICBwYWRkaW5nOiAxNnB4IDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5gO1xuY29uc3QgSW5mb0Jsb2NrSWNvbkNsYXNzID0gdWBcbiAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xuYDtcbmNvbnN0IEgzU3R5bGVkID0gc3R5bGVkKEgzKWBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogNHB4O1xuYDtcbmNvbnN0IFRleHRTdHlsZWQkMSA9IHN0eWxlZChUZXh0KWBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWF4LXdpZHRoOiAzNTJweDtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG5gO1xuY29uc3QgQnV0dG9uc0Jsb2NrID0gc3R5bGVkLmRpdmBcbiAgICBwYWRkaW5nOiAxNnB4IDI0cHggMjRweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZ2FwOiA4cHg7XG5gO1xuY29uc3QgTElOS1MgPSB7XG4gIEdFVF9BX1dBTExFVDogXCJodHRwczovL3Rvbi5vcmcvd2FsbGV0cz9maWx0ZXJzW3dhbGxldF9mZWF0dXJlc11bc2x1Z11bJGluXT1kYXBwLWF1dGgmcGFnaW5hdGlvbltsaW1pdF09LTFcIlxufTtcbmNvbnN0IEluZm9Nb2RhbCA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEluZm9Nb2RhbFN0eWxlZCwge1xuICAgIFwiZGF0YS10Yy13YWxsZXRzLW1vZGFsLWluZm9cIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU3R5bGVkSWNvbkJ1dHRvbiQxLCB7XG4gICAgICAgIGljb246IFwiYXJyb3dcIixcbiAgICAgICAgb25DbGljazogKCkgPT4gcHJvcHMub25CYWNrQ2xpY2soKVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCQ1LCB7XG4gICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmluZm9Nb2RhbC53aGF0SXNBV2FsbGV0XCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIldoYXQgaXMgYSB3YWxsZXRcIlxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTY3JvbGxDb250YWluZXIsIHtcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEluZm9CbG9jaywge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTZWN1cml0eUljb24sIHtcbiAgICAgICAgICAgICAgICBcImNsYXNzXCI6IEluZm9CbG9ja0ljb25DbGFzc1xuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgzU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLnNlY3VyZURpZ2l0YWxBc3NldHNcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJTZWN1cmUgZGlnaXRhbCBhc3NldHMgc3RvcmFnZVwiXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGV4dFN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLndhbGxldFByb3RlY3RzXCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQSB3YWxsZXQgcHJvdGVjdHMgYW5kIG1hbmFnZXMgeW91ciBkaWdpdGFsIGFzc2V0cyBpbmNsdWRpbmcgVE9OLCB0b2tlbnMgYW5kIGNvbGxlY3RhYmxlcy5cIlxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChJbmZvQmxvY2ssIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoUGVyc29uYWxpdHlJY29uLCB7XG4gICAgICAgICAgICAgICAgXCJjbGFzc1wiOiBJbmZvQmxvY2tJY29uQ2xhc3NcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIM1N0eWxlZCwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmluZm9Nb2RhbC5jb250cm9sSWRlbnRpdHlcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDb250cm9sIHlvdXIgV2ViMyBpZGVudGl0eVwiXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGV4dFN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLm1hbmFnZUlkZW50aXR5XCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiTWFuYWdlIHlvdXIgZGlnaXRhbCBpZGVudGl0eSBhbmQgYWNjZXNzIGRlY2VudHJhbGl6ZWQgYXBwbGljYXRpb25zIHdpdGggZWFzZS4gTWFpbnRhaW4gY29udHJvbCBvdmVyIHlvdXIgZGF0YSBhbmQgZW5nYWdlIHNlY3VyZWx5IGluIHRoZSBibG9ja2NoYWluIGVjb3N5c3RlbS5cIlxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChJbmZvQmxvY2ssIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU3dhcEljb24sIHtcbiAgICAgICAgICAgICAgICBcImNsYXNzXCI6IEluZm9CbG9ja0ljb25DbGFzc1xuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgzU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLmVmZm9ydGxlc3NDcnlwdG9UcmFuc2FjdGlvbnNcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJFZmZvcnRsZXNzIGNyeXB0byB0cmFuc2FjdGlvbnNcIlxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFRleHRTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmluZm9Nb2RhbC5lYXNpbHlTZW5kXCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiRWFzaWx5IHNlbmQsIHJlY2VpdmUsIG1vbml0b3IgeW91ciBjcnlwdG9jdXJyZW5jaWVzLiBTdHJlYW1saW5lIHlvdXIgb3BlcmF0aW9ucyB3aXRoIGRlY2VudHJhbGl6ZWQgYXBwbGljYXRpb25zLlwiXG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNCbG9jaywge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExpbmssIHtcbiAgICAgICAgICAgICAgICBnZXQgaHJlZigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBMSU5LUy5HRVRfQV9XQUxMRVQ7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBibGFuazogdHJ1ZSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgcmlnaHRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoV2FsbGV0SWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLmdldEFXYWxsZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkdldCBhIFdhbGxldFwiXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBNb2JpbGVDb25uZWN0aW9uTW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YGA7XG5jb25zdCBCb2R5U3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBmbGV4OiAxO1xuICAgIG1hcmdpbi10b3A6IDE4cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogMjMycHg7XG5gO1xuY29uc3QgSDFTdHlsZWQkNCA9IHN0eWxlZChIMSlgXG4gICAgbWF4LXdpZHRoOiAyNjJweDtcbiAgICBtYXJnaW46IDAgYXV0byA4cHg7XG5gO1xuY29uc3QgU3R5bGVkSWNvbkJ1dHRvbiA9IHN0eWxlZChJY29uQnV0dG9uKWBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxNnB4O1xuICAgIGxlZnQ6IDE2cHg7XG5gO1xuY29uc3QgRm9vdGVyU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBwYWRkaW5nOiAxNnB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDEycHg7XG4gICAgYm9yZGVyLXRvcDogMC41cHggc29saWQgJHsocHJvcHMpID0+IHJnYmEocHJvcHMudGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5LCAwLjIpfTtcbmA7XG5jb25zdCBJbWFnZVN0eWxlZCA9IHN0eWxlZChJbWFnZSlgXG4gICAgd2lkdGg6IDM2cHg7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG5gO1xuY29uc3QgRm9vdGVyQnV0dG9uID0gc3R5bGVkKExpbmspYFxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuYDtcbmNvbnN0IExvYWRlclN0eWxlZCA9IHN0eWxlZChMb2FkZXJJY29uKWBcbiAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xuICAgIG1hcmdpbi10b3A6IDJweDtcbmA7XG5jb25zdCBFcnJvckljb25TdHlsZWQgPSBzdHlsZWQoRXJyb3JJY29uKWBcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuYDtcbmNvbnN0IEJvZHlUZXh0U3R5bGVkID0gc3R5bGVkKEgyKWBcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG5gO1xuY29uc3QgQnV0dG9uc0NvbnRhaW5lclN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBnYXA6IDhweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbmA7XG5jb25zdCBhY3Rpb25CdXR0b25Cb3JkZXJSYWRpdXMkMSA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgSDFTdHlsZWQkMyA9IHN0eWxlZChIMSlgXG4gICAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICAgIHBhZGRpbmc6IDAgNTJweDtcbmA7XG5jb25zdCBIMlN0eWxlZCQzID0gc3R5bGVkKEgyKWBcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgIHBhZGRpbmc6IDAgNjRweDtcbmA7XG5jb25zdCBRckNvZGVXcmFwcGVyJDEgPSBzdHlsZWQuZGl2YFxuICAgIHBhZGRpbmc6IDAgMjRweCAxNnB4O1xuYDtcbmNvbnN0IEJ1dHRvbnNXcmFwcGVyJDEgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBnYXA6IDE2cHg7XG4gICAgcGFkZGluZzogMCAyNHB4IDI0cHg7XG4gICAgbWFyZ2luLXRvcDogMDtcbmA7XG5jb25zdCBBY3Rpb25CdXR0b24kMSA9IHN0eWxlZChCdXR0b24pYFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNTZweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYWN0aW9uQnV0dG9uQm9yZGVyUmFkaXVzJDFbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHJnYmEocHJvcHMudGhlbWUuY29sb3JzLmFjY2VudCwgMC4xMil9O1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmFjY2VudH07XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgcGFkZGluZzogMTdweCAyMHB4IDE5cHggMjBweDtcbmA7XG5jb25zdCBNb2JpbGVDb25uZWN0aW9uUVIgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkMywge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBwcm9wcy53YWxsZXRJbmZvLm5hbWU7XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KEgyU3R5bGVkJDMsIHtcbiAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVDb25uZWN0aW9uTW9kYWwuc2NhblFSXCIsXG4gICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0SW5mby5uYW1lXG4gICAgICB9O1xuICAgIH0sXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtcIlNjYW4gdGhlIFFSIGNvZGUgYmVsb3cgd2l0aCB5b3VyIHBob25lXFx1MjAxOXMgb3IgXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0SW5mby5uYW1lKSwgXCJcXHUyMDE5cyBjYW1lcmFcIl07XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KFFyQ29kZVdyYXBwZXIkMSwge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUVJDb2RlLCB7XG4gICAgICAgIGdldCBpbWFnZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0SW5mby5pbWFnZVVybDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IHNvdXJjZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gYWRkUmV0dXJuU3RyYXRlZ3kocHJvcHMudW5pdmVyc2FsTGluaywgXCJub25lXCIpO1xuICAgICAgICB9LFxuICAgICAgICBkaXNhYmxlQ29weTogdHJ1ZVxuICAgICAgfSk7XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNXcmFwcGVyJDEsIHtcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChBY3Rpb25CdXR0b24kMSwge1xuICAgICAgICBhcHBlYXJhbmNlOiBcInNlY29uZGFyeVwiLFxuICAgICAgICBvbkNsaWNrOiAoKSA9PiB7XG4gICAgICAgICAgdmFyIF9hMjtcbiAgICAgICAgICByZXR1cm4gKF9hMiA9IHByb3BzLm9uT3BlbkxpbmspID09IG51bGwgPyB2b2lkIDAgOiBfYTIuY2FsbChwcm9wcyk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVVbml2ZXJzYWxNb2RhbC5vcGVuTGlua1wiLFxuICAgICAgICAgICAgY2hpbGRyZW46IFwiT3BlbiBMaW5rXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChBY3Rpb25CdXR0b24kMSwge1xuICAgICAgICBhcHBlYXJhbmNlOiBcInNlY29uZGFyeVwiLFxuICAgICAgICBvbkNsaWNrOiAoKSA9PiB7XG4gICAgICAgICAgdmFyIF9hMjtcbiAgICAgICAgICByZXR1cm4gKF9hMiA9IHByb3BzLm9uQ29weSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5jYWxsKHByb3BzKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvbktleSgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmlzQ29waWVkU2hvd24gIT09IHZvaWQgMCA/IFwiY29tbW9uLmNvcGllZFwiIDogXCJjb21tb24uY29weUxpbmtcIjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5pc0NvcGllZFNob3duICE9PSB2b2lkIDAgPyBcIkNvcGllZFwiIDogXCJDb3B5IExpbmtcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSldO1xufTtcbmNvbnN0IE1vYmlsZUNvbm5lY3Rpb25Nb2RhbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IFtmaXJzdENsaWNrLCBzZXRGaXJzdENsaWNrXSA9IGNyZWF0ZVNpZ25hbCh0cnVlKTtcbiAgY29uc3QgW3Nob3dRUiwgc2V0U2hvd1FSXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IFtjb25uZWN0aW9uRXJyb3JlZCwgc2V0Q29ubmVjdGlvbkVycm9yZWRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3QgY29ubmVjdG9yID0gdXNlQ29udGV4dChDb25uZWN0b3JDb250ZXh0KTtcbiAgY29uc3QgdW5zdWJzY3JpYmUgPSBjb25uZWN0b3Iub25TdGF0dXNDaGFuZ2UoKCkgPT4ge1xuICB9LCAoKSA9PiB7XG4gICAgc2V0Q29ubmVjdGlvbkVycm9yZWQodHJ1ZSk7XG4gIH0pO1xuICBjb25zdCB1bml2ZXJzYWxMaW5rID0gY3JlYXRlTWVtbygoKSA9PiBjb25uZWN0b3IuY29ubmVjdCh7XG4gICAgdW5pdmVyc2FsTGluazogcHJvcHMud2FsbGV0LnVuaXZlcnNhbExpbmssXG4gICAgYnJpZGdlVXJsOiBwcm9wcy53YWxsZXQuYnJpZGdlVXJsXG4gIH0sIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KSk7XG4gIGNvbnN0IG9uQ2xpY2tUZWxlZ3JhbSA9ICgpID0+IHtcbiAgICBjb25zdCBhbHdheXNGb3JjZVJlZGlyZWN0ID0gdHJ1ZTtcbiAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzLndhbGxldCksIHtcbiAgICAgIG9wZW5NZXRob2Q6IFwidW5pdmVyc2FsLWxpbmtcIlxuICAgIH0pKTtcbiAgICByZWRpcmVjdFRvVGVsZWdyYW0odW5pdmVyc2FsTGluaygpLCB7XG4gICAgICByZXR1cm5TdHJhdGVneTogYXBwU3RhdGUucmV0dXJuU3RyYXRlZ3ksXG4gICAgICB0d2FSZXR1cm5Vcmw6IGFwcFN0YXRlLnR3YVJldHVyblVybCxcbiAgICAgIGZvcmNlUmVkaXJlY3Q6IGFsd2F5c0ZvcmNlUmVkaXJlY3RcbiAgICB9KTtcbiAgfTtcbiAgY29uc3Qgb25SZXRyeSA9ICgpID0+IHtcbiAgICBjb25zdCBjdXJyZW50VW5pdmVyc2FsTGluayA9IHVuaXZlcnNhbExpbmsoKTtcbiAgICBpZiAoaXNUZWxlZ3JhbVVybChjdXJyZW50VW5pdmVyc2FsTGluaykpIHtcbiAgICAgIHJldHVybiBvbkNsaWNrVGVsZWdyYW0oKTtcbiAgICB9XG4gICAgc2V0Q29ubmVjdGlvbkVycm9yZWQoZmFsc2UpO1xuICAgIGNvbnN0IGZvcmNlUmVkaXJlY3QgPSAhZmlyc3RDbGljaygpO1xuICAgIHNldEZpcnN0Q2xpY2soZmFsc2UpO1xuICAgIHJlZGlyZWN0VG9XYWxsZXQodW5pdmVyc2FsTGluaygpLCBwcm9wcy53YWxsZXQuZGVlcExpbmssIHtcbiAgICAgIHJldHVyblN0cmF0ZWd5OiBhcHBTdGF0ZS5yZXR1cm5TdHJhdGVneSxcbiAgICAgIGZvcmNlUmVkaXJlY3RcbiAgICB9LCAobWV0aG9kKSA9PiB7XG4gICAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzLndhbGxldCksIHtcbiAgICAgICAgb3Blbk1ldGhvZDogbWV0aG9kXG4gICAgICB9KSk7XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IFtpc0NvcGllZFNob3duLCBzZXRJc0NvcGllZFNob3duXSA9IGNyZWF0ZVNpZ25hbCh2b2lkIDApO1xuICBjb25zdCBvbkNvcHkgPSAoKSA9PiBfX2FzeW5jKHZvaWQgMCwgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICBpZiAoaXNDb3BpZWRTaG93bigpICE9PSB2b2lkIDApIHtcbiAgICAgIGNsZWFyVGltZW91dChpc0NvcGllZFNob3duKCkpO1xuICAgIH1cbiAgICB5aWVsZCBjb3B5VG9DbGlwYm9hcmQodW5pdmVyc2FsTGluaygpKTtcbiAgICBjb25zdCB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHNldElzQ29waWVkU2hvd24odm9pZCAwKSwgMTUwMCk7XG4gICAgc2V0SXNDb3BpZWRTaG93bih0aW1lb3V0SWQpO1xuICB9KTtcbiAgY29uc3Qgb25PcGVuUVIgPSAoKSA9PiB7XG4gICAgc2V0Q29ubmVjdGlvbkVycm9yZWQoZmFsc2UpO1xuICAgIHNldFNob3dRUih0cnVlKTtcbiAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzLndhbGxldCksIHtcbiAgICAgIG9wZW5NZXRob2Q6IFwicXJjb2RlXCJcbiAgICB9KSk7XG4gIH07XG4gIGNvbnN0IG9uQ2xvc2VRUiA9ICgpID0+IHtcbiAgICBzZXRTaG93UVIoZmFsc2UpO1xuICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMud2FsbGV0KSwge1xuICAgICAgb3Blbk1ldGhvZDogXCJ1bml2ZXJzYWwtbGlua1wiXG4gICAgfSkpO1xuICB9O1xuICBjb25zdCBvbkJhY2sgPSAoKSA9PiB7XG4gICAgaWYgKHNob3dRUigpKSB7XG4gICAgICBvbkNsb3NlUVIoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHMub25CYWNrQ2xpY2soKTtcbiAgICB9XG4gIH07XG4gIG9uQ2xlYW51cCh1bnN1YnNjcmliZSk7XG4gIG9uUmV0cnkoKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNb2JpbGVDb25uZWN0aW9uTW9kYWxTdHlsZWQsIHtcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1jb25uZWN0aW9uLW1vYmlsZVwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiAhcHJvcHMuYmFja0Rpc2FibGVkIHx8IHNob3dRUigpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdHlsZWRJY29uQnV0dG9uLCB7XG4gICAgICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgICAgICBvbkNsaWNrOiBvbkJhY2tcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBzaG93UVIoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTW9iaWxlQ29ubmVjdGlvblFSLCB7XG4gICAgICAgICAgICBnZXQgdW5pdmVyc2FsTGluaygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHVuaXZlcnNhbExpbmsoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgd2FsbGV0SW5mbygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbk9wZW5MaW5rOiBvblJldHJ5LFxuICAgICAgICAgICAgb25Db3B5LFxuICAgICAgICAgICAgZ2V0IGlzQ29waWVkU2hvd24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBpc0NvcGllZFNob3duKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXNob3dRUigpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkNCwge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0Lm5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCb2R5U3R5bGVkLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uRXJyb3JlZCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoRXJyb3JJY29uU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwic1wiXG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJvZHlUZXh0U3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZUNvbm5lY3Rpb25Nb2RhbC5jb25uZWN0aW9uRGVjbGluZWRcIixcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdGlvbiBkZWNsaW5lZFwiXG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNDb250YWluZXJTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFJldHJ5SWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uUmV0cnksXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24ucmV0cnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJSZXRyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUVJJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGZpbGwoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhlbWUuY29sb3JzLmFjY2VudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uT3BlblFSLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlQ29ubmVjdGlvbk1vZGFsLnNob3dRUlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlNob3cgUVIgQ29kZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gIWNvbm5lY3Rpb25FcnJvcmVkKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChMb2FkZXJTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJzXCJcbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlQ29ubmVjdGlvbk1vZGFsLmNvbnRpbnVlSW5cIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiQ29udGludWUgaW4gXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpLCBcIlxcdTIwMjZcIl07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uc0NvbnRhaW5lclN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUmV0cnlJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25SZXRyeSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5yZXRyeVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJldHJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRUkljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgZmlsbCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGVtZS5jb2xvcnMuYWNjZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25PcGVuUVIsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVDb25uZWN0aW9uTW9kYWwuc2hvd1FSXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiU2hvdyBRUiBDb2RlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChGb290ZXJTdHlsZWQsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSW1hZ2VTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBnZXQgc3JjKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5pbWFnZVVybDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDMsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0Lm5hbWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEZvb3RlckJ1dHRvbiwge1xuICAgICAgICAgICAgICAgIGdldCBocmVmKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5hYm91dFVybDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJsYW5rOiB0cnVlLFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24uZ2V0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJHRVRcIlxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IGJvcmRlcnMkMSA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiMTJweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IHRnQm9yZGVycyA9IHtcbiAgbTogXCI2cHhcIixcbiAgczogXCI2cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5zdHlsZWQubGlgXG4gICAgd2lkdGg6IDgycHg7XG4gICAgbWluLXdpZHRoOiA4MnB4O1xuICAgIGhlaWdodDogMTI0cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogOHB4IDRweDtcblxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xcyBlYXNlLWluLW91dDtcblxuICAgICR7bWVkaWFOb3RUb3VjaH0ge1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG4gICAgfVxuXG4gICAgJHttZWRpYVRvdWNofSB7XG4gICAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Mik7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuY29uc3QgSDFTdHlsZWQkMiA9IHN0eWxlZChIMSlgXG4gICAgbWFyZ2luLXRvcDogMzhweDtcbiAgICBtYXJnaW4tYm90dG9tOiA0cHg7XG4gICAgcGFkZGluZzogMCAyNHB4O1xuYDtcbmNvbnN0IEgyU3R5bGVkJDIgPSBzdHlsZWQoSDIpYFxuICAgIG1hcmdpbjogJHsocHJvcHMpID0+IHtcbiAgdmFyIF9hMjtcbiAgcmV0dXJuIChfYTIgPSBwcm9wcy5tYXJnaW4pICE9IG51bGwgPyBfYTIgOiBcIjAgMCAyOHB4IDBcIjtcbn19O1xuICAgIHBhZGRpbmc6ICR7KHByb3BzKSA9PiB7XG4gIHZhciBfYTI7XG4gIHJldHVybiAoX2EyID0gcHJvcHMucGFkZGluZykgIT0gbnVsbCA/IF9hMiA6IFwiMCAyNHB4XCI7XG59fTtcbiAgICBtaW4taGVpZ2h0OiAkeyhwcm9wcykgPT4ge1xuICB2YXIgX2EyO1xuICByZXR1cm4gKF9hMiA9IHByb3BzLnBhZGRpbmcpICE9IG51bGwgPyBfYTIgOiBcIjQ0cHhcIjtcbn19O1xuICAgIG1heC13aWR0aDogJHsocHJvcHMpID0+IHByb3BzLm1heFdpZHRofXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAkeyhwcm9wcykgPT4gcHJvcHMubWF4V2lkdGggPyBcImF1dG9cIiA6IFwiMHB4XCJ9O1xuICAgIG1hcmdpbi1yaWdodDogJHsocHJvcHMpID0+IHByb3BzLm1heFdpZHRoID8gXCJhdXRvXCIgOiBcIjBweFwifTtcbmA7XG5zdHlsZWQoQnV0dG9uKWBcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDAgYXV0bztcbmA7XG5jb25zdCBUZWxlZ3JhbUJ1dHRvblN0eWxlZCA9IHN0eWxlZChCdXR0b24pYFxuICAgIG1hcmdpbjogMCAyOHB4IDI0cHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDU2cHgpO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBib3JkZXJzJDFbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgcGFkZGluZzogMTRweCAxNnB4IDE0cHggMTRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRlbGVncmFtQnV0dG9ufTtcblxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlfTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzNzVweCkge1xuICAgICAgICBtYXJnaW46IDAgMTZweCAyNHB4O1xuICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMzJweCk7XG4gICAgfVxuYDtcbmNvbnN0IFRHSW1hZ2VTdHlsZWQgPSBzdHlsZWQoSW1hZ2UpYFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiB0Z0JvcmRlcnNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgd2lkdGg6IDI0cHg7XG4gICAgaGVpZ2h0OiAyNHB4O1xuYDtcbmNvbnN0IFN0eWxlZExlZnRBY3Rpb25CdXR0b24gPSBzdHlsZWQoSWNvbkJ1dHRvbilgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTZweDtcbiAgICBsZWZ0OiAxNnB4O1xuYDtcbmNvbnN0IGFjdGlvbkJ1dHRvbkJvcmRlclJhZGl1cyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgSDFTdHlsZWQkMSA9IHN0eWxlZChIMSlgXG4gICAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICAgIHBhZGRpbmc6IDAgNTJweDtcbmA7XG5jb25zdCBIMlN0eWxlZCQxID0gc3R5bGVkKEgyKWBcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgIHBhZGRpbmc6IDAgNjRweDtcbmA7XG5jb25zdCBRckNvZGVXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgICBwYWRkaW5nOiAwIDI0cHggMTZweDtcbmA7XG5jb25zdCBCdXR0b25zV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGdhcDogMTZweDtcbiAgICBwYWRkaW5nOiAwIDI0cHggMjRweDtcbiAgICBtYXJnaW4tdG9wOiAwO1xuYDtcbmNvbnN0IEFjdGlvbkJ1dHRvbiA9IHN0eWxlZChCdXR0b24pYFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNTZweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYWN0aW9uQnV0dG9uQm9yZGVyUmFkaXVzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiByZ2JhKHByb3BzLnRoZW1lLmNvbG9ycy5hY2NlbnQsIDAuMTIpfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5hY2NlbnR9O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIHBhZGRpbmc6IDE3cHggMjBweCAxOXB4IDIwcHg7XG5gO1xuY29uc3QgTW9iaWxlVW5pdmVyc2FsUVIgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkMSwge1xuICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLmNvbm5lY3RZb3VyV2FsbGV0XCIsXG4gICAgY2hpbGRyZW46IFwiQ29ubmVjdCB5b3VyIFRPTiB3YWxsZXRcIlxuICB9KSwgY3JlYXRlQ29tcG9uZW50KEgyU3R5bGVkJDEsIHtcbiAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVVbml2ZXJzYWxNb2RhbC5zY2FuXCIsXG4gICAgY2hpbGRyZW46IFwiU2NhbiB3aXRoIHlvdXIgbW9iaWxlIHdhbGxldFwiXG4gIH0pLCBjcmVhdGVDb21wb25lbnQoUXJDb2RlV3JhcHBlciwge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUVJDb2RlLCB7XG4gICAgICAgIGdldCBpbWFnZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gSU1HLlRPTjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IHNvdXJjZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gYWRkUmV0dXJuU3RyYXRlZ3kocHJvcHMudW5pdmVyc2FsTGluaywgXCJub25lXCIpO1xuICAgICAgICB9LFxuICAgICAgICBkaXNhYmxlQ29weTogdHJ1ZVxuICAgICAgfSk7XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNXcmFwcGVyLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQWN0aW9uQnV0dG9uLCB7XG4gICAgICAgIGFwcGVhcmFuY2U6IFwic2Vjb25kYXJ5XCIsXG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uT3BlbkxpbmsoKSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLm9wZW5MaW5rXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJPcGVuIExpbmtcIlxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEFjdGlvbkJ1dHRvbiwge1xuICAgICAgICBhcHBlYXJhbmNlOiBcInNlY29uZGFyeVwiLFxuICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNvcHkoKSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvbktleSgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmlzQ29waWVkU2hvd24gIT09IHZvaWQgMCA/IFwiY29tbW9uLmNvcGllZFwiIDogXCJjb21tb24uY29weUxpbmtcIjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5pc0NvcGllZFNob3duICE9PSB2b2lkIDAgPyBcIkNvcGllZFwiIDogXCJDb3B5IExpbmtcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSldO1xufTtcbmZ1bmN0aW9uIGdldFVuaXF1ZUJyaWRnZXMod2FsbGV0c0xpc3QpIHtcbiAgY29uc3QgdW5pcXVlQnJpZGdlcyA9IG5ldyBTZXQoXG4gICAgd2FsbGV0c0xpc3QuZmlsdGVyKGlzV2FsbGV0SW5mb1JlbW90ZSkubWFwKChpdGVtKSA9PiBpdGVtLmJyaWRnZVVybClcbiAgKTtcbiAgcmV0dXJuIEFycmF5LmZyb20odW5pcXVlQnJpZGdlcykubWFwKChicmlkZ2VVcmwpID0+ICh7IGJyaWRnZVVybCB9KSk7XG59XG5mdW5jdGlvbiBicmlkZ2VzSXNFcXVhbChsZWZ0LCByaWdodCkge1xuICBjb25zdCBsZWZ0U2V0ID0gbmV3IFNldChsZWZ0ID09IG51bGwgPyB2b2lkIDAgOiBsZWZ0Lm1hcCgoaTIpID0+IGkyLmJyaWRnZVVybCkpO1xuICBjb25zdCByaWdodFNldCA9IG5ldyBTZXQocmlnaHQgPT0gbnVsbCA/IHZvaWQgMCA6IHJpZ2h0Lm1hcCgoaTIpID0+IGkyLmJyaWRnZVVybCkpO1xuICByZXR1cm4gbGVmdFNldC5zaXplID09PSByaWdodFNldC5zaXplICYmIFsuLi5sZWZ0U2V0XS5ldmVyeSgodmFsdWUpID0+IHJpZ2h0U2V0Lmhhcyh2YWx1ZSkpO1xufVxuY29uc3QgX3RtcGwkJDEgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGxpPjwvbGk+YCksIF90bXBsJDIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGRpdiBkYXRhLXRjLXdhbGxldHMtbW9kYWwtdW5pdmVyc2FsLW1vYmlsZT1cInRydWVcIj48L2Rpdj5gKTtcbmNvbnN0IE1vYmlsZVVuaXZlcnNhbE1vZGFsID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFtzaG93UVIsIHNldFNob3dRUl0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBbZmlyc3RDbGljaywgc2V0Rmlyc3RDbGlja10gPSBjcmVhdGVTaWduYWwodHJ1ZSk7XG4gIGNvbnN0IFt1bml2ZXJzYWxMaW5rLCBzZXRVbml2ZXJzYWxMaW5rXSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbiAgY29uc3QgY29ubmVjdG9yID0gYXBwU3RhdGUuY29ubmVjdG9yO1xuICBjb25zdCB3YWxsZXRzTGlzdCA9ICgpID0+IHByb3BzLndhbGxldHNMaXN0LmZpbHRlcigodykgPT4gc3VwcG9ydHNNb2JpbGUodykgJiYgdy5hcHBOYW1lICE9PSBBVF9XQUxMRVRfQVBQX05BTUUpO1xuICBjb25zdCBzaG91bGRTaG93TW9yZUJ1dHRvbiA9ICgpID0+IHdhbGxldHNMaXN0KCkubGVuZ3RoID4gNztcbiAgY29uc3Qgd2FsbGV0c0JyaWRnZXMgPSBjcmVhdGVNZW1vKCgpID0+IGdldFVuaXF1ZUJyaWRnZXMocHJvcHMud2FsbGV0c0xpc3QpLCBudWxsLCB7XG4gICAgZXF1YWxzOiBicmlkZ2VzSXNFcXVhbFxuICB9KTtcbiAgY29uc3QgZ2V0VW5pdmVyc2FsTGluayA9ICgpID0+IHtcbiAgICBpZiAoIXVuaXZlcnNhbExpbmsoKSkge1xuICAgICAgc2V0VW5pdmVyc2FsTGluayhjb25uZWN0b3IuY29ubmVjdCh3YWxsZXRzQnJpZGdlcygpLCBwcm9wcy5hZGRpdGlvbmFsUmVxdWVzdCkpO1xuICAgIH1cbiAgICByZXR1cm4gdW5pdmVyc2FsTGluaygpO1xuICB9O1xuICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKHtcbiAgICBvcGVuTWV0aG9kOiBcInVuaXZlcnNhbC1saW5rXCJcbiAgfSk7XG4gIGNvbnN0IFtpc0NvcGllZFNob3duLCBzZXRJc0NvcGllZFNob3duXSA9IGNyZWF0ZVNpZ25hbCh2b2lkIDApO1xuICBjb25zdCBvbkNvcHkgPSAoKSA9PiBfX2FzeW5jKHZvaWQgMCwgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICBpZiAoaXNDb3BpZWRTaG93bigpICE9PSB2b2lkIDApIHtcbiAgICAgIGNsZWFyVGltZW91dChpc0NvcGllZFNob3duKCkpO1xuICAgIH1cbiAgICB5aWVsZCBjb3B5VG9DbGlwYm9hcmQoZ2V0VW5pdmVyc2FsTGluaygpKTtcbiAgICBjb25zdCB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHNldElzQ29waWVkU2hvd24odm9pZCAwKSwgMTUwMCk7XG4gICAgc2V0SXNDb3BpZWRTaG93bih0aW1lb3V0SWQpO1xuICB9KTtcbiAgY29uc3Qgb25TZWxlY3RVbml2ZXJzYWwgPSAoKSA9PiB7XG4gICAgY29uc3QgZm9yY2VSZWRpcmVjdCA9ICFmaXJzdENsaWNrKCk7XG4gICAgc2V0Rmlyc3RDbGljayhmYWxzZSk7XG4gICAgcmVkaXJlY3RUb1dhbGxldChnZXRVbml2ZXJzYWxMaW5rKCksIHZvaWQgMCwge1xuICAgICAgcmV0dXJuU3RyYXRlZ3k6IGFwcFN0YXRlLnJldHVyblN0cmF0ZWd5LFxuICAgICAgZm9yY2VSZWRpcmVjdFxuICAgIH0sIChtZXRob2QpID0+IHtcbiAgICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oe1xuICAgICAgICBvcGVuTWV0aG9kOiBtZXRob2RcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuICBjb25zdCBvblNlbGVjdFRlbGVncmFtID0gKCkgPT4ge1xuICAgIHNldFVuaXZlcnNhbExpbmsobnVsbCk7XG4gICAgY29uc3QgYXRXYWxsZXQgPSBwcm9wcy53YWxsZXRzTGlzdC5maW5kKCh3YWxsZXQpID0+IHdhbGxldC5hcHBOYW1lID09PSBBVF9XQUxMRVRfQVBQX05BTUUpO1xuICAgIGlmICghYXRXYWxsZXQgfHwgIWlzV2FsbGV0SW5mb1JlbW90ZShhdFdhbGxldCkpIHtcbiAgICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihcIkB3YWxsZXQgYm90IG5vdCBmb3VuZCBpbiB0aGUgd2FsbGV0cyBsaXN0XCIpO1xuICAgIH1cbiAgICBjb25zdCB3YWxsZXRMaW5rID0gY29ubmVjdG9yLmNvbm5lY3Qoe1xuICAgICAgYnJpZGdlVXJsOiBhdFdhbGxldC5icmlkZ2VVcmwsXG4gICAgICB1bml2ZXJzYWxMaW5rOiBhdFdhbGxldC51bml2ZXJzYWxMaW5rXG4gICAgfSwgcHJvcHMuYWRkaXRpb25hbFJlcXVlc3QpO1xuICAgIGNvbnN0IGZvcmNlUmVkaXJlY3QgPSAhZmlyc3RDbGljaygpO1xuICAgIHNldEZpcnN0Q2xpY2soZmFsc2UpO1xuICAgIHJlZGlyZWN0VG9UZWxlZ3JhbSh3YWxsZXRMaW5rLCB7XG4gICAgICByZXR1cm5TdHJhdGVneTogYXBwU3RhdGUucmV0dXJuU3RyYXRlZ3ksXG4gICAgICB0d2FSZXR1cm5Vcmw6IGFwcFN0YXRlLnR3YVJldHVyblVybCxcbiAgICAgIGZvcmNlUmVkaXJlY3RcbiAgICB9KTtcbiAgfTtcbiAgY29uc3Qgb25PcGVuUVIgPSAoKSA9PiB7XG4gICAgc2V0U2hvd1FSKHRydWUpO1xuICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oe1xuICAgICAgb3Blbk1ldGhvZDogXCJxcmNvZGVcIlxuICAgIH0pO1xuICB9O1xuICBjb25zdCBvbkNsb3NlUVIgPSAoKSA9PiB7XG4gICAgc2V0U2hvd1FSKGZhbHNlKTtcbiAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKHtcbiAgICAgIG9wZW5NZXRob2Q6IFwidW5pdmVyc2FsLWxpbmtcIlxuICAgIH0pO1xuICB9O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkMi5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgcmV0dXJuIHNob3dRUigpO1xuICAgICAgfSxcbiAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU3R5bGVkTGVmdEFjdGlvbkJ1dHRvbiwge1xuICAgICAgICAgIGljb246IFwiYXJyb3dcIixcbiAgICAgICAgICBvbkNsaWNrOiBvbkNsb3NlUVJcbiAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNb2JpbGVVbml2ZXJzYWxRUiwge1xuICAgICAgICAgIGdldCB1bml2ZXJzYWxMaW5rKCkge1xuICAgICAgICAgICAgcmV0dXJuIGdldFVuaXZlcnNhbExpbmsoKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGdldCBpc0NvcGllZFNob3duKCkge1xuICAgICAgICAgICAgcmV0dXJuIGlzQ29waWVkU2hvd24oKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9uT3Blbkxpbms6IG9uU2VsZWN0VW5pdmVyc2FsLFxuICAgICAgICAgIG9uQ29weVxuICAgICAgICB9KV07XG4gICAgICB9XG4gICAgfSksIG51bGwpO1xuICAgIGluc2VydChfZWwkLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgIHJldHVybiAhc2hvd1FSKCk7XG4gICAgICB9LFxuICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTdHlsZWRMZWZ0QWN0aW9uQnV0dG9uLCB7XG4gICAgICAgICAgZ2V0IGljb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFFSSWNvbiwge30pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgb25DbGljazogb25PcGVuUVJcbiAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCQyLCB7XG4gICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlVW5pdmVyc2FsTW9kYWwuY29ubmVjdFlvdXJXYWxsZXRcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJDb25uZWN0IHlvdXIgVE9OIHdhbGxldFwiXG4gICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDJTdHlsZWQkMiwge1xuICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLm9wZW5XYWxsZXRPblRlbGVncmFtT3JTZWxlY3RcIixcbiAgICAgICAgICBtYXhXaWR0aDogMzIwLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIlVzZSBXYWxsZXQgaW4gVGVsZWdyYW0gb3IgY2hvb3NlIG90aGVyIGFwcGxpY2F0aW9uXCJcbiAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZWxlZ3JhbUJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQXRXYWxsZXRJY29uLCB7fSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBnZXQgcmlnaHRJY29uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUR0ltYWdlU3R5bGVkLCB7XG4gICAgICAgICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIElNRy5URztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBvbkNsaWNrOiBvblNlbGVjdFRlbGVncmFtLFxuICAgICAgICAgIHNjYWxlOiBcInNcIixcbiAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLm9wZW5XYWxsZXRPblRlbGVncmFtXCIsXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3QgV2FsbGV0IGluIFRlbGVncmFtXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIMlN0eWxlZCQyLCB7XG4gICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlVW5pdmVyc2FsTW9kYWwuY2hvb3NlT3RoZXJBcHBsaWNhdGlvblwiLFxuICAgICAgICAgIG1heFdpZHRoOiAzNDIsXG4gICAgICAgICAgcGFkZGluZzogXCIwIDI0cHggOHB4IDI0cHhcIixcbiAgICAgICAgICBtYXJnaW46IFwiMFwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkNob29zZSBvdGhlciBhcHBsaWNhdGlvblwiXG4gICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoV2FsbGV0VWxDb250YWluZXIsIHtcbiAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChGb3IsIHtcbiAgICAgICAgICAgICAgZ2V0IGVhY2goKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFzaG91bGRTaG93TW9yZUJ1dHRvbigpKSgpID8gd2FsbGV0c0xpc3QoKS5zbGljZSgwLCAzKSA6IHdhbGxldHNMaXN0KCk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiAod2FsbGV0KSA9PiAoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IF9lbCQzID0gX3RtcGwkJDEuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICAgIGluc2VydChfZWwkMywgY3JlYXRlQ29tcG9uZW50KFdhbGxldEl0ZW0sIHtcbiAgICAgICAgICAgICAgICAgIGdldCBpY29uKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gd2FsbGV0LmltYWdlVXJsO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGdldCBuYW1lKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gd2FsbGV0Lm5hbWU7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4gcHJvcHMub25TZWxlY3Qod2FsbGV0KVxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2VsJDM7XG4gICAgICAgICAgICAgIH0pKClcbiAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2hvdWxkU2hvd01vcmVCdXR0b24oKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IF9lbCQyID0gX3RtcGwkJDEuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICAgIGluc2VydChfZWwkMiwgY3JlYXRlQ29tcG9uZW50KEZvdXJXYWxsZXRzSXRlbSwge1xuICAgICAgICAgICAgICAgICAgbGFiZWxMaW5lMTogXCJWaWV3IGFsbFwiLFxuICAgICAgICAgICAgICAgICAgbGFiZWxMaW5lMjogXCJ3YWxsZXRzXCIsXG4gICAgICAgICAgICAgICAgICBnZXQgaW1hZ2VzKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gd2FsbGV0c0xpc3QoKS5zbGljZSgzLCA3KS5tYXAoKGkyKSA9PiBpMi5pbWFnZVVybCk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4gcHJvcHMub25TZWxlY3RBbGxXYWxsZXRzKClcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9lbCQyO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KV07XG4gICAgICAgICAgfVxuICAgICAgICB9KV07XG4gICAgICB9XG4gICAgfSksIG51bGwpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IGJvcmRlcnMgPSB7XG4gIG06IFwiMTZweFwiLFxuICBzOiBcIjhweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IGhvdmVyQm9yZGVycyA9IHtcbiAgbTogXCI4cHhcIixcbiAgczogXCI0cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBEZXNrdG9wVW5pdmVyc2FsTW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctYm90dG9tOiAxNnB4O1xuYDtcbmNvbnN0IEgyU3R5bGVkID0gc3R5bGVkKEgyKWBcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xuICAgIG1hcmdpbi10b3A6IDJweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuYDtcbmNvbnN0IEgyQXZhaWxhYmxlV2FsbGV0c1N0eWxlZCA9IHN0eWxlZChIMilgXG4gICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbmA7XG5jb25zdCBRUkNvZGVTdHlsZWQgPSBzdHlsZWQoUVJDb2RlKWBcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IFdhbGxldHNDb250YWluZXJTdHlsZWQgPSBzdHlsZWQudWxgXG4gICAgZGlzcGxheTogZmxleDtcbmA7XG5zdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiAxNnB4O1xuICAgIHdpZHRoOiAxMDAlO1xuYDtcbnN0eWxlZChCdXR0b24pYFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMCAxNnB4O1xuICAgIGhlaWdodDogNTZweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcblxuICAgICY6aG92ZXIge1xuICAgICAgICAkeyhwcm9wcykgPT4gcHJvcHMuZGlzYWJsZUV2ZW50c0FuaW1hdGlvbiA/IFwidHJhbnNmb3JtOiB1bnNldDtcIiA6IFwiXCJ9XG4gICAgfVxuXG4gICAgJjphY3RpdmUge1xuICAgICAgICAkeyhwcm9wcykgPT4gcHJvcHMuZGlzYWJsZUV2ZW50c0FuaW1hdGlvbiA/IFwidHJhbnNmb3JtOiB1bnNldDtcIiA6IFwiXCJ9XG4gICAgfVxuYDtcbnN0eWxlZC51bGBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAxMDAlO1xuICAgIGxlZnQ6IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDhweDtcbiAgICB3aWR0aDogMTg4cHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xNnB4KTtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5wcmltYXJ5fTtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBib3gtc2hhZG93OiAwIDRweCAyNHB4IHJnYmEoMCwgMCwgMCwgMC4xNik7XG5gO1xuc3R5bGVkLmxpYFxuICAgIHBhZGRpbmc6IDhweDtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDhweDtcblxuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gaG92ZXJCb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciwgdHJhbnNmb3JtIDAuMXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnNlY29uZGFyeX07XG4gICAgfVxuXG4gICAgJjphY3RpdmUge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTYpO1xuICAgIH1cbmA7XG5zdHlsZWQoSW1hZ2UpYFxuICAgIHdpZHRoOiAyNHB4O1xuICAgIGhlaWdodDogMjRweDtcblxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbmA7XG5zdHlsZWQuZGl2YFxuICAgIG1hcmdpbi10b3A6IDIzcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMXB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbmA7XG5zdHlsZWQoVGV4dClgXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbmA7XG5jb25zdCBfdG1wbCQgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGxpPjwvbGk+YCk7XG5jb25zdCBEZXNrdG9wVW5pdmVyc2FsTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3BvcHVwT3BlbmVkLCBzZXRQb3B1cE9wZW5lZF0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBjb25uZWN0b3IgPSBhcHBTdGF0ZS5jb25uZWN0b3I7XG4gIGNvbnN0IHdhbGxldHNCcmlkZ2VzID0gY3JlYXRlTWVtbygoKSA9PiBnZXRVbmlxdWVCcmlkZ2VzKHByb3BzLndhbGxldHNMaXN0KSwgbnVsbCwge1xuICAgIGVxdWFsczogYnJpZGdlc0lzRXF1YWxcbiAgfSk7XG4gIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oe1xuICAgIG9wZW5NZXRob2Q6IFwicXJjb2RlXCJcbiAgfSk7XG4gIGNvbnN0IHJlcXVlc3QgPSBjcmVhdGVNZW1vKCgpID0+IGNvbm5lY3Rvci5jb25uZWN0KHdhbGxldHNCcmlkZ2VzKCksIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoRGVza3RvcFVuaXZlcnNhbE1vZGFsU3R5bGVkLCB7XG4gICAgb25DbGljazogKCkgPT4gc2V0UG9wdXBPcGVuZWQoZmFsc2UpLFxuICAgIFwiZGF0YS10Yy13YWxsZXRzLW1vZGFsLXVuaXZlcnNhbC1kZXNrdG9wXCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEgxLCB7XG4gICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BVbml2ZXJzYWxNb2RhbC5jb25uZWN0WW91cldhbGxldFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJDb25uZWN0IHlvdXIgd2FsbGV0XCJcbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDJTdHlsZWQsIHtcbiAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcFVuaXZlcnNhbE1vZGFsLnNjYW5cIixcbiAgICAgICAgY2hpbGRyZW46IFwiU2NhbiB3aXRoIHlvdXIgbW9iaWxlIHdhbGxldFwiXG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFFSQ29kZVN0eWxlZCwge1xuICAgICAgICBnZXQgc291cmNlVXJsKCkge1xuICAgICAgICAgIHJldHVybiBhZGRSZXR1cm5TdHJhdGVneShyZXF1ZXN0KCksIFwibm9uZVwiKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGRpc2FibGVDb3B5KCkge1xuICAgICAgICAgIHJldHVybiBwb3B1cE9wZW5lZCgpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgaW1hZ2VVcmwoKSB7XG4gICAgICAgICAgcmV0dXJuIElNRy5UT047XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDJBdmFpbGFibGVXYWxsZXRzU3R5bGVkLCB7XG4gICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BVbml2ZXJzYWxNb2RhbC5hdmFpbGFibGVXYWxsZXRzXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkF2YWlsYWJsZSB3YWxsZXRzXCJcbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoV2FsbGV0c0NvbnRhaW5lclN0eWxlZCwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoRm9yLCB7XG4gICAgICAgICAgICBnZXQgZWFjaCgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldHNMaXN0LnNsaWNlKDAsIDMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiAod2FsbGV0KSA9PiAoKCkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBfZWwkID0gX3RtcGwkLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRMYWJlbGVkSXRlbSwge1xuICAgICAgICAgICAgICAgIHdhbGxldCxcbiAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vblNlbGVjdCh3YWxsZXQpXG4gICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgICAgICAgICB9KSgpXG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChGb3VyV2FsbGV0c0l0ZW0sIHtcbiAgICAgICAgICAgIGxhYmVsTGluZTE6IFwiVmlldyBhbGxcIixcbiAgICAgICAgICAgIGxhYmVsTGluZTI6IFwid2FsbGV0c1wiLFxuICAgICAgICAgICAgZ2V0IGltYWdlcygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldHNMaXN0LnNsaWNlKDMsIDcpLm1hcCgoaTIpID0+IGkyLmltYWdlVXJsKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vblNlbGVjdEFsbFdhbGxldHMoKVxuICAgICAgICAgIH0pXTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgV2FsbGV0c01vZGFsID0gKCkgPT4ge1xuICBjb25zdCB7XG4gICAgbG9jYWxlXG4gIH0gPSB1c2VJMThuKClbMV07XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiBsb2NhbGUoYXBwU3RhdGUubGFuZ3VhZ2UpKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoZ2V0V2FsbGV0c01vZGFsSXNPcGVuZWQoKSkge1xuICAgICAgdXBkYXRlSXNNb2JpbGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0U2VsZWN0ZWRXYWxsZXRJbmZvKG51bGwpO1xuICAgICAgc2V0U2VsZWN0ZWRUYWIoXCJ1bml2ZXJzYWxcIik7XG4gICAgICBzZXRJbmZvVGFiKGZhbHNlKTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBjb25uZWN0b3IgPSB1c2VDb250ZXh0KENvbm5lY3RvckNvbnRleHQpO1xuICBjb25zdCB0b25Db25uZWN0VUkgPSB1c2VDb250ZXh0KFRvbkNvbm5lY3RVaUNvbnRleHQpO1xuICBjb25zdCBbZmV0Y2hlZFdhbGxldHNMaXN0XSA9IGNyZWF0ZVJlc291cmNlKCgpID0+IHRvbkNvbm5lY3RVSS5nZXRXYWxsZXRzKCkpO1xuICBjb25zdCBbc2VsZWN0ZWRXYWxsZXRJbmZvLCBzZXRTZWxlY3RlZFdhbGxldEluZm9dID0gY3JlYXRlU2lnbmFsKG51bGwpO1xuICBjb25zdCBbc2VsZWN0ZWRUYWIsIHNldFNlbGVjdGVkVGFiXSA9IGNyZWF0ZVNpZ25hbChcInVuaXZlcnNhbFwiKTtcbiAgY29uc3QgW2luZm9UYWIsIHNldEluZm9UYWJdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3Qgd2FsbGV0c0xpc3QgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBpZiAoZmV0Y2hlZFdhbGxldHNMaXN0LnN0YXRlICE9PSBcInJlYWR5XCIpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBsZXQgd2FsbGV0c0xpc3QyID0gYXBwbHlXYWxsZXRzTGlzdENvbmZpZ3VyYXRpb24oZmV0Y2hlZFdhbGxldHNMaXN0KCksIGFwcFN0YXRlLndhbGxldHNMaXN0Q29uZmlndXJhdGlvbik7XG4gICAgY29uc3QgaW5qZWN0ZWRXYWxsZXRzID0gd2FsbGV0c0xpc3QyLmZpbHRlcihpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZCk7XG4gICAgY29uc3Qgbm90SW5qZWN0ZWRXYWxsZXRzID0gd2FsbGV0c0xpc3QyLmZpbHRlcigodykgPT4gIWlzV2FsbGV0SW5mb0N1cnJlbnRseUluamVjdGVkKHcpKTtcbiAgICB3YWxsZXRzTGlzdDIgPSAoaW5qZWN0ZWRXYWxsZXRzIHx8IFtdKS5jb25jYXQobm90SW5qZWN0ZWRXYWxsZXRzKTtcbiAgICBjb25zdCBwcmVmZXJyZWRXYWxsZXRBcHBOYW1lID0gYXBwU3RhdGUucHJlZmVycmVkV2FsbGV0QXBwTmFtZTtcbiAgICBjb25zdCBwcmVmZXJyZWRXYWxsZXQgPSB3YWxsZXRzTGlzdDIuZmluZCgoaXRlbSkgPT4gZXFXYWxsZXROYW1lKGl0ZW0sIHByZWZlcnJlZFdhbGxldEFwcE5hbWUpKTtcbiAgICBjb25zdCBzb21lV2FsbGV0c1dpdGhTYW1lTmFtZSA9IHdhbGxldHNMaXN0Mi5maWx0ZXIoKGl0ZW0pID0+IGVxV2FsbGV0TmFtZShpdGVtLCBwcmVmZXJyZWRXYWxsZXRBcHBOYW1lKSkubGVuZ3RoID49IDI7XG4gICAgaWYgKHByZWZlcnJlZFdhbGxldEFwcE5hbWUgJiYgcHJlZmVycmVkV2FsbGV0ICYmICFzb21lV2FsbGV0c1dpdGhTYW1lTmFtZSkge1xuICAgICAgd2FsbGV0c0xpc3QyID0gW19fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByZWZlcnJlZFdhbGxldCksIHtcbiAgICAgICAgaXNQcmVmZXJyZWQ6IHRydWVcbiAgICAgIH0pXS5jb25jYXQod2FsbGV0c0xpc3QyLmZpbHRlcigoaXRlbSkgPT4gIWVxV2FsbGV0TmFtZShpdGVtLCBwcmVmZXJyZWRXYWxsZXRBcHBOYW1lKSkpO1xuICAgIH1cbiAgICBjb25zdCBhdFdhbGxldCA9IHdhbGxldHNMaXN0Mi5maW5kKChpdGVtKSA9PiBlcVdhbGxldE5hbWUoaXRlbSwgQVRfV0FMTEVUX0FQUF9OQU1FKSk7XG4gICAgaWYgKGF0V2FsbGV0KSB7XG4gICAgICB3YWxsZXRzTGlzdDIgPSBbYXRXYWxsZXRdLmNvbmNhdCh3YWxsZXRzTGlzdDIuZmlsdGVyKChpdGVtKSA9PiAhZXFXYWxsZXROYW1lKGl0ZW0sIEFUX1dBTExFVF9BUFBfTkFNRSkpKTtcbiAgICB9XG4gICAgcmV0dXJuIHdhbGxldHNMaXN0MjtcbiAgfSk7XG4gIGNvbnN0IGFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZyA9ICgpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIHJldHVybiAoKF9hMiA9IGFwcFN0YXRlLmNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5zdGF0ZSkgPT09IFwibG9hZGluZ1wiO1xuICB9O1xuICBjb25zdCBhZGRpdGlvbmFsUmVxdWVzdCA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgaWYgKGFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZygpKSB7XG4gICAgICByZXR1cm4gdm9pZCAwO1xuICAgIH1cbiAgICByZXR1cm4gKF9hMiA9IGFwcFN0YXRlLmNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi52YWx1ZTtcbiAgfSk7XG4gIGNvbnN0IG9uQ2xvc2UgPSAoY2xvc2VSZWFzb24pID0+IHtcbiAgICB0b25Db25uZWN0VUkuY2xvc2VNb2RhbChjbG9zZVJlYXNvbik7XG4gIH07XG4gIGNvbnN0IHVuc3Vic2NyaWJlID0gY29ubmVjdG9yLm9uU3RhdHVzQ2hhbmdlKCh3YWxsZXQpID0+IHtcbiAgICBpZiAod2FsbGV0KSB7XG4gICAgICBvbkNsb3NlKFwid2FsbGV0LXNlbGVjdGVkXCIpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IG9uU2VsZWN0QWxsV2FsbGV0cyA9ICgpID0+IHtcbiAgICBzZXRTZWxlY3RlZFRhYihcImFsbC13YWxsZXRzXCIpO1xuICB9O1xuICBjb25zdCBvblNlbGVjdFVuaXZlcnNhbCA9ICgpID0+IHtcbiAgICBzZXRTZWxlY3RlZFRhYihcInVuaXZlcnNhbFwiKTtcbiAgfTtcbiAgY29uc3QgY2xlYXJTZWxlY3RlZFdhbGxldEluZm8gPSAoKSA9PiB7XG4gICAgc2V0U2VsZWN0ZWRXYWxsZXRJbmZvKG51bGwpO1xuICB9O1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIHNldFNlbGVjdGVkV2FsbGV0SW5mbyhudWxsKTtcbiAgICBzZXRJbmZvVGFiKGZhbHNlKTtcbiAgfSk7XG4gIG9uQ2xlYW51cCh1bnN1YnNjcmliZSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3R5bGVkTW9kYWwsIHtcbiAgICBnZXQgb3BlbmVkKCkge1xuICAgICAgcmV0dXJuIGdldFdhbGxldHNNb2RhbElzT3BlbmVkKCk7XG4gICAgfSxcbiAgICBnZXQgZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyKCkge1xuICAgICAgcmV0dXJuIGFwcFN0YXRlLmVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcjtcbiAgICB9LFxuICAgIG9uQ2xvc2U6ICgpID0+IG9uQ2xvc2UoXCJhY3Rpb24tY2FuY2VsbGVkXCIpLFxuICAgIG9uQ2xpY2tRdWVzdGlvbjogKCkgPT4gc2V0SW5mb1RhYigodikgPT4gIXYpLFxuICAgIFwiZGF0YS10Yy13YWxsZXRzLW1vZGFsLWNvbnRhaW5lclwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBpbmZvVGFiKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEluZm9Nb2RhbCwge1xuICAgICAgICAgICAgb25CYWNrQ2xpY2s6ICgpID0+IHNldEluZm9UYWIoZmFsc2UpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIWluZm9UYWIoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gYWRkaXRpb25hbFJlcXVlc3RMb2FkaW5nKCkgfHwgIXdhbGxldHNMaXN0KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCQ4LCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubG9hZGluZ1wiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIldhbGxldHMgbGlzdCBpcyBsb2FkaW5nXCJcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJDb250YWluZXJTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExvYWRlckljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJtXCJcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhIWFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZygpKSgpICYmIHdhbGxldHNMaXN0KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN3aXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzZWxlY3RlZFdhbGxldEluZm8oKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRHluYW1pYywge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNvbXBvbmVudCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzTW9iaWxlKCkgPyBNb2JpbGVDb25uZWN0aW9uTW9kYWwgOiBEZXNrdG9wQ29ubmVjdGlvbk1vZGFsO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3YWxsZXQoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzZWxlY3RlZFdhbGxldEluZm8oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgYWRkaXRpb25hbFJlcXVlc3QoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRpdGlvbmFsUmVxdWVzdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQmFja0NsaWNrOiBjbGVhclNlbGVjdGVkV2FsbGV0SW5mb1xuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzZWxlY3RlZFRhYigpID09PSBcInVuaXZlcnNhbFwiO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEeW5hbWljLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY29tcG9uZW50KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNNb2JpbGUoKSA/IE1vYmlsZVVuaXZlcnNhbE1vZGFsIDogRGVza3RvcFVuaXZlcnNhbE1vZGFsO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uU2VsZWN0OiBzZXRTZWxlY3RlZFdhbGxldEluZm8sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgd2FsbGV0c0xpc3QoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB3YWxsZXRzTGlzdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBhZGRpdGlvbmFsUmVxdWVzdCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFkZGl0aW9uYWxSZXF1ZXN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3RBbGxXYWxsZXRzXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGVkVGFiKCkgPT09IFwiYWxsLXdhbGxldHNcIjtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWxsV2FsbGV0c0xpc3RNb2RhbCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdhbGxldHNMaXN0KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gd2FsbGV0c0xpc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkJhY2s6IG9uU2VsZWN0VW5pdmVyc2FsLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Q6IHNldFNlbGVjdGVkV2FsbGV0SW5mb1xuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IEFjdGlvbk1vZGFsU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nLWJvdHRvbTogOHB4O1xuYDtcbmNvbnN0IEgxU3R5bGVkID0gc3R5bGVkKEgxKWBcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xuYDtcbmNvbnN0IFRleHRTdHlsZWQgPSBzdHlsZWQoVGV4dClgXG4gICAgZm9udC13ZWlnaHQ6IDUxMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1heC13aWR0aDogMjUwcHg7XG5cbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG5gO1xuY29uc3QgTG9hZGVyQnV0dG9uU3R5bGVkID0gc3R5bGVkKEJ1dHRvbilgXG4gICAgbWluLXdpZHRoOiAxMTJweDtcbiAgICBtYXJnaW4tdG9wOiAzMnB4O1xuYDtcbmNvbnN0IExvYWRlckljb25TdHlsZWQgPSBzdHlsZWQoTG9hZGVySWNvbilgXG4gICAgaGVpZ2h0OiAxNnB4O1xuICAgIHdpZHRoOiAxNnB4O1xuYDtcbmNvbnN0IEJ1dHRvblN0eWxlZCA9IHN0eWxlZChCdXR0b24pYFxuICAgIG1hcmdpbi10b3A6IDMycHg7XG5gO1xuY29uc3QgQWN0aW9uTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgZGF0YUF0dHJzID0gdXNlRGF0YUF0dHJpYnV0ZXMocHJvcHMpO1xuICBjb25zdCB0b25Db25uZWN0VUkgPSB1c2VDb250ZXh0KFRvbkNvbm5lY3RVaUNvbnRleHQpO1xuICBjb25zdCBbZmlyc3RDbGljaywgc2V0Rmlyc3RDbGlja10gPSBjcmVhdGVTaWduYWwodHJ1ZSk7XG4gIGNvbnN0IFtzZW50LCBzZXRTZW50XSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgY3VycmVudEFjdGlvbiA9IGFjdGlvbigpO1xuICAgIHNldFNlbnQoISFjdXJyZW50QWN0aW9uICYmIFwic2VudFwiIGluIGN1cnJlbnRBY3Rpb24gJiYgY3VycmVudEFjdGlvbi5zZW50KTtcbiAgfSk7XG4gIGxldCB1bml2ZXJzYWxMaW5rO1xuICBpZiAoKHRvbkNvbm5lY3RVSSA9PSBudWxsID8gdm9pZCAwIDogdG9uQ29ubmVjdFVJLndhbGxldCkgJiYgXCJ1bml2ZXJzYWxMaW5rXCIgaW4gdG9uQ29ubmVjdFVJLndhbGxldCAmJiAodG9uQ29ubmVjdFVJLndhbGxldC5vcGVuTWV0aG9kID09PSBcInVuaXZlcnNhbC1saW5rXCIgfHwgaXNUZWxlZ3JhbVVybCh0b25Db25uZWN0VUkud2FsbGV0LnVuaXZlcnNhbExpbmspICYmIGlzSW5UTUEoKSkpIHtcbiAgICB1bml2ZXJzYWxMaW5rID0gdG9uQ29ubmVjdFVJLndhbGxldC51bml2ZXJzYWxMaW5rO1xuICB9XG4gIGxldCBkZWVwTGluaztcbiAgaWYgKCh0b25Db25uZWN0VUkgPT0gbnVsbCA/IHZvaWQgMCA6IHRvbkNvbm5lY3RVSS53YWxsZXQpICYmIFwiZGVlcExpbmtcIiBpbiB0b25Db25uZWN0VUkud2FsbGV0ICYmICh0b25Db25uZWN0VUkud2FsbGV0Lm9wZW5NZXRob2QgPT09IFwiY3VzdG9tLWRlZXBsaW5rXCIgfHwgaXNUZWxlZ3JhbVVybCh0b25Db25uZWN0VUkud2FsbGV0LmRlZXBMaW5rKSAmJiBpc0luVE1BKCkpKSB7XG4gICAgZGVlcExpbmsgPSB0b25Db25uZWN0VUkud2FsbGV0LmRlZXBMaW5rO1xuICB9XG4gIGNvbnN0IG9uT3BlbldhbGxldCA9ICgpID0+IHtcbiAgICBjb25zdCBjdXJyZW50QWN0aW9uID0gYWN0aW9uKCk7XG4gICAgY29uc3QgcmV0dXJuU3RyYXRlZ3kgPSBcInJldHVyblN0cmF0ZWd5XCIgaW4gY3VycmVudEFjdGlvbiA/IGN1cnJlbnRBY3Rpb24ucmV0dXJuU3RyYXRlZ3kgOiBhcHBTdGF0ZS5yZXR1cm5TdHJhdGVneTtcbiAgICBjb25zdCBmb3JjZVJlZGlyZWN0ID0gIWZpcnN0Q2xpY2soKTtcbiAgICBzZXRGaXJzdENsaWNrKGZhbHNlKTtcbiAgICBpZiAoaXNUZWxlZ3JhbVVybCh1bml2ZXJzYWxMaW5rKSkge1xuICAgICAgcmVkaXJlY3RUb1RlbGVncmFtKHVuaXZlcnNhbExpbmssIHtcbiAgICAgICAgcmV0dXJuU3RyYXRlZ3ksXG4gICAgICAgIHR3YVJldHVyblVybDogXCJ0d2FSZXR1cm5VcmxcIiBpbiBjdXJyZW50QWN0aW9uID8gY3VycmVudEFjdGlvbi50d2FSZXR1cm5VcmwgOiBhcHBTdGF0ZS50d2FSZXR1cm5VcmwsXG4gICAgICAgIGZvcmNlUmVkaXJlY3RcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZWRpcmVjdFRvV2FsbGV0KHVuaXZlcnNhbExpbmssIGRlZXBMaW5rLCB7XG4gICAgICAgIHJldHVyblN0cmF0ZWd5LFxuICAgICAgICBmb3JjZVJlZGlyZWN0XG4gICAgICB9LCAoKSA9PiB7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWN0aW9uTW9kYWxTdHlsZWQsIG1lcmdlUHJvcHMoZGF0YUF0dHJzLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVNZW1vKCgpID0+IHByb3BzLmljb24pLCBjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQsIHtcbiAgICAgICAgZ2V0IHRyYW5zbGF0aW9uS2V5KCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5oZWFkZXJUcmFuc2xhdGlvbktleTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5oZWFkZXJUcmFuc2xhdGlvblZhbHVlcztcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZXh0U3R5bGVkLCB7XG4gICAgICAgIGdldCB0cmFuc2xhdGlvbktleSgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMudGV4dFRyYW5zbGF0aW9uS2V5O1xuICAgICAgICB9LFxuICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnRleHRUcmFuc2xhdGlvblZhbHVlcztcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiAhc2VudCgpICYmIChwcm9wcy5zaG93QnV0dG9uID09PSBcIm9wZW4td2FsbGV0XCIgJiYgdW5pdmVyc2FsTGluayB8fCBwcm9wcy5zaG93QnV0dG9uICE9PSBcIm9wZW4td2FsbGV0XCIpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJCdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlLFxuICAgICAgICAgICAgXCJkYXRhLXRjLWNvbm5lY3QtYnV0dG9uLWxvYWRpbmdcIjogXCJ0cnVlXCIsXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVySWNvblN0eWxlZCwge30pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHNlbnQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuc2hvd0J1dHRvbiAhPT0gXCJvcGVuLXdhbGxldFwiO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsb3NlKCksXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24uY2xvc2VcIixcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ2xvc2VcIlxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuc2hvd0J1dHRvbiA9PT0gXCJvcGVuLXdhbGxldFwiICYmIHVuaXZlcnNhbExpbms7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uT3BlbldhbGxldCxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5vcGVuV2FsbGV0XCIsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIk9wZW4gd2FsbGV0XCJcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KSk7XG59O1xuY29uc3QgQ29uZmlybVRyYW5zYWN0aW9uTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdG9uQ29ubmVjdFVJID0gdXNlQ29udGV4dChUb25Db25uZWN0VWlDb250ZXh0KTtcbiAgY29uc3QgW3QyXSA9IHVzZUkxOG4oKTtcbiAgY29uc3QgbmFtZSA9ICgpID0+IHRvbkNvbm5lY3RVSS53YWxsZXQgJiYgXCJuYW1lXCIgaW4gdG9uQ29ubmVjdFVJLndhbGxldCA/IHRvbkNvbm5lY3RVSS53YWxsZXQubmFtZSA6IHQyKFwiY29tbW9uLnlvdXJXYWxsZXRcIiwge30sIFwiWW91ciB3YWxsZXRcIik7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWN0aW9uTW9kYWwsIHtcbiAgICBoZWFkZXJUcmFuc2xhdGlvbktleTogXCJhY3Rpb25Nb2RhbC5jb25maXJtVHJhbnNhY3Rpb24uaGVhZGVyXCIsXG4gICAgZ2V0IGhlYWRlclRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogbmFtZSgpXG4gICAgICB9O1xuICAgIH0sXG4gICAgdGV4dFRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLmNvbmZpcm1UcmFuc2FjdGlvbi50ZXh0XCIsXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExvYWRlckljb24sIHtcbiAgICAgICAgc2l6ZTogXCJtXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb25DbG9zZTogKCkgPT4gcHJvcHMub25DbG9zZSgpLFxuICAgIHNob3dCdXR0b246IFwib3Blbi13YWxsZXRcIixcbiAgICBcImRhdGEtdGMtY29uZmlybS1tb2RhbFwiOiBcInRydWVcIlxuICB9KTtcbn07XG5jb25zdCBUcmFuc2FjdGlvbkNhbmNlbGVkTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBY3Rpb25Nb2RhbCwge1xuICAgIGhlYWRlclRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLnRyYW5zYWN0aW9uQ2FuY2VsZWQuaGVhZGVyXCIsXG4gICAgdGV4dFRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLnRyYW5zYWN0aW9uQ2FuY2VsZWQudGV4dFwiLFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChFcnJvckljb24sIHtcbiAgICAgICAgc2l6ZTogXCJtXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb25DbG9zZTogKCkgPT4gcHJvcHMub25DbG9zZSgpLFxuICAgIFwiZGF0YS10Yy10cmFuc2FjdGlvbi1jYW5jZWxlZC1tb2RhbFwiOiBcInRydWVcIlxuICB9KTtcbn07XG5jb25zdCBUcmFuc2FjdGlvblNlbnRNb2RhbCA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEFjdGlvbk1vZGFsLCB7XG4gICAgaGVhZGVyVHJhbnNsYXRpb25LZXk6IFwiYWN0aW9uTW9kYWwudHJhbnNhY3Rpb25TZW50LmhlYWRlclwiLFxuICAgIHRleHRUcmFuc2xhdGlvbktleTogXCJhY3Rpb25Nb2RhbC50cmFuc2FjdGlvblNlbnQudGV4dFwiLFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdWNjZXNzSWNvbiwge1xuICAgICAgICBzaXplOiBcIm1cIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbkNsb3NlOiAoKSA9PiBwcm9wcy5vbkNsb3NlKCksXG4gICAgXCJkYXRhLXRjLXRyYW5zYWN0aW9uLXNlbnQtbW9kYWxcIjogXCJ0cnVlXCJcbiAgfSk7XG59O1xuY29uc3QgQWN0aW9uc01vZGFsID0gKCkgPT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1vZGFsLCB7XG4gICAgZ2V0IG9wZW5lZCgpIHtcbiAgICAgIHZhciBfYTI7XG4gICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiBhY3Rpb24oKSAhPT0gbnVsbCkoKSAmJiAoKF9hMiA9IGFjdGlvbigpKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLm9wZW5Nb2RhbCkgPT09IHRydWU7XG4gICAgfSxcbiAgICBnZXQgZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyKCkge1xuICAgICAgcmV0dXJuIGFwcFN0YXRlLmVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcjtcbiAgICB9LFxuICAgIG9uQ2xvc2U6ICgpID0+IHNldEFjdGlvbihudWxsKSxcbiAgICBcImRhdGEtdGMtYWN0aW9ucy1tb2RhbC1jb250YWluZXJcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTd2l0Y2gsIHtcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFjdGlvbigpLm5hbWUgPT09IFwidHJhbnNhY3Rpb24tc2VudFwiO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2FjdGlvblNlbnRNb2RhbCwge1xuICAgICAgICAgICAgICAgIG9uQ2xvc2U6ICgpID0+IHNldEFjdGlvbihudWxsKVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFjdGlvbigpLm5hbWUgPT09IFwidHJhbnNhY3Rpb24tY2FuY2VsZWRcIjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNhY3Rpb25DYW5jZWxlZE1vZGFsLCB7XG4gICAgICAgICAgICAgICAgb25DbG9zZTogKCkgPT4gc2V0QWN0aW9uKG51bGwpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gYWN0aW9uKCkubmFtZSA9PT0gXCJjb25maXJtLXRyYW5zYWN0aW9uXCI7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KENvbmZpcm1UcmFuc2FjdGlvbk1vZGFsLCB7XG4gICAgICAgICAgICAgICAgb25DbG9zZTogKCkgPT4gc2V0QWN0aW9uKG51bGwpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBTaW5nbGVXYWxsZXRNb2RhbCA9ICgpID0+IHtcbiAgY29uc3Qge1xuICAgIGxvY2FsZVxuICB9ID0gdXNlSTE4bigpWzFdO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4gbG9jYWxlKGFwcFN0YXRlLmxhbmd1YWdlKSk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGdldFNpbmdsZVdhbGxldE1vZGFsSXNPcGVuZWQoKSkge1xuICAgICAgdXBkYXRlSXNNb2JpbGUoKTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBjb25uZWN0b3IgPSB1c2VDb250ZXh0KENvbm5lY3RvckNvbnRleHQpO1xuICBjb25zdCB0b25Db25uZWN0VUkgPSB1c2VDb250ZXh0KFRvbkNvbm5lY3RVaUNvbnRleHQpO1xuICBjb25zdCBbaW5mb1RhYiwgc2V0SW5mb1RhYl0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBhZGRpdGlvbmFsUmVxdWVzdExvYWRpbmcgPSAoKSA9PiB7XG4gICAgdmFyIF9hMjtcbiAgICByZXR1cm4gKChfYTIgPSBhcHBTdGF0ZS5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuc3RhdGUpID09PSBcImxvYWRpbmdcIjtcbiAgfTtcbiAgY29uc3QgYWRkaXRpb25hbFJlcXVlc3QgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIGlmIChhZGRpdGlvbmFsUmVxdWVzdExvYWRpbmcoKSkge1xuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgcmV0dXJuIChfYTIgPSBhcHBTdGF0ZS5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMpID09IG51bGwgPyB2b2lkIDAgOiBfYTIudmFsdWU7XG4gIH0pO1xuICBjb25zdCBvbkNsb3NlID0gKGNsb3NlUmVhc29uKSA9PiB7XG4gICAgdG9uQ29ubmVjdFVJLmNsb3NlU2luZ2xlV2FsbGV0TW9kYWwoY2xvc2VSZWFzb24pO1xuICB9O1xuICBjb25zdCB1bnN1YnNjcmliZSA9IGNvbm5lY3Rvci5vblN0YXR1c0NoYW5nZSgod2FsbGV0KSA9PiB7XG4gICAgaWYgKHdhbGxldCkge1xuICAgICAgb25DbG9zZShcIndhbGxldC1zZWxlY3RlZFwiKTtcbiAgICB9XG4gIH0pO1xuICBvbkNsZWFudXAodW5zdWJzY3JpYmUpO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIHNldEluZm9UYWIoZmFsc2UpO1xuICB9KTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdHlsZWRNb2RhbCwge1xuICAgIGdldCBvcGVuZWQoKSB7XG4gICAgICByZXR1cm4gZ2V0U2luZ2xlV2FsbGV0TW9kYWxJc09wZW5lZCgpO1xuICAgIH0sXG4gICAgZ2V0IGVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcigpIHtcbiAgICAgIHJldHVybiBhcHBTdGF0ZS5lbmFibGVBbmRyb2lkQmFja0hhbmRsZXI7XG4gICAgfSxcbiAgICBvbkNsb3NlOiAoKSA9PiBvbkNsb3NlKFwiYWN0aW9uLWNhbmNlbGxlZFwiKSxcbiAgICBvbkNsaWNrUXVlc3Rpb246ICgpID0+IHNldEluZm9UYWIoKHYpID0+ICF2KSxcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1jb250YWluZXJcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gaW5mb1RhYigpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJbmZvTW9kYWwsIHtcbiAgICAgICAgICAgIG9uQmFja0NsaWNrOiAoKSA9PiBzZXRJbmZvVGFiKGZhbHNlKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuICFpbmZvVGFiKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkOCwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmxvYWRpbmdcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJXYWxsZXRzIGxpc3QgaXMgbG9hZGluZ1wiXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTG9hZGVyQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwibVwiXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gIWFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEeW5hbWljLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGNvbXBvbmVudCgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBpc01vYmlsZSgpID8gTW9iaWxlQ29ubmVjdGlvbk1vZGFsIDogRGVza3RvcENvbm5lY3Rpb25Nb2RhbDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCB3YWxsZXQoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZ2V0U2luZ2xlV2FsbGV0TW9kYWxXYWxsZXRJbmZvKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgYWRkaXRpb25hbFJlcXVlc3QoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gYWRkaXRpb25hbFJlcXVlc3QoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uQmFja0NsaWNrOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBiYWNrRGlzYWJsZWQ6IHRydWVcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBBcHAgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdHJhbnNsYXRpb25zID0gY3JlYXRlSTE4bkNvbnRleHQoaTE4bkRpY3Rpb25hcnksIGFwcFN0YXRlLmxhbmd1YWdlKTtcbiAgZGVmaW5lU3R5bGVzUm9vdCgpO1xuICBmaXhNb2JpbGVTYWZhcmlBY3RpdmVUcmFuc2l0aW9uKCk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSTE4bkNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogdHJhbnNsYXRpb25zLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVG9uQ29ubmVjdFVpQ29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICBnZXQgdmFsdWUoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnRvbkNvbm5lY3RVSTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ29ubmVjdG9yQ29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICAgICAgZ2V0IHZhbHVlKCkge1xuICAgICAgICAgICAgICByZXR1cm4gYXBwU3RhdGUuY29ubmVjdG9yO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoR2xvYmFsU3R5bGVzLCB7fSksIGNyZWF0ZUNvbXBvbmVudChUaGVtZVByb3ZpZGVyLCB7XG4gICAgICAgICAgICAgICAgdGhlbWU6IHRoZW1lU3RhdGUsXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXBwU3RhdGUuYnV0dG9uUm9vdElkO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb3J0YWwsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBtb3VudCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGFwcFN0YXRlLmJ1dHRvblJvb3RJZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEFjY291bnRCdXR0b24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChEeW5hbWljLCB7XG4gICAgICAgICAgICAgICAgICAgIGNvbXBvbmVudDogZ2xvYmFsU3R5bGVzVGFnLFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoV2FsbGV0c01vZGFsLCB7fSksIGNyZWF0ZUNvbXBvbmVudChTaW5nbGVXYWxsZXRNb2RhbCwge30pLCBjcmVhdGVDb21wb25lbnQoQWN0aW9uc01vZGFsLCB7fSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3Qgd2lkZ2V0Q29udHJvbGxlciA9IHtcbiAgb3BlbldhbGxldHNNb2RhbDogKCkgPT4gdm9pZCBzZXRUaW1lb3V0KCgpID0+IHNldFdhbGxldHNNb2RhbFN0YXRlKHtcbiAgICBzdGF0dXM6IFwib3BlbmVkXCIsXG4gICAgY2xvc2VSZWFzb246IG51bGxcbiAgfSkpLFxuICBjbG9zZVdhbGxldHNNb2RhbDogKHJlYXNvbikgPT4gdm9pZCBzZXRUaW1lb3V0KCgpID0+IHNldFdhbGxldHNNb2RhbFN0YXRlKHtcbiAgICBzdGF0dXM6IFwiY2xvc2VkXCIsXG4gICAgY2xvc2VSZWFzb246IHJlYXNvblxuICB9KSksXG4gIG9wZW5TaW5nbGVXYWxsZXRNb2RhbDogKHdhbGxldEluZm8pID0+IHtcbiAgICB2b2lkIHNldFRpbWVvdXQoKCkgPT4gc2V0U2luZ2xlV2FsbGV0TW9kYWxTdGF0ZSh7XG4gICAgICBzdGF0dXM6IFwib3BlbmVkXCIsXG4gICAgICBjbG9zZVJlYXNvbjogbnVsbCxcbiAgICAgIHdhbGxldEluZm9cbiAgICB9KSk7XG4gIH0sXG4gIGNsb3NlU2luZ2xlV2FsbGV0TW9kYWw6IChyZWFzb24pID0+IHZvaWQgc2V0VGltZW91dCgoKSA9PiBzZXRTaW5nbGVXYWxsZXRNb2RhbFN0YXRlKHtcbiAgICBzdGF0dXM6IFwiY2xvc2VkXCIsXG4gICAgY2xvc2VSZWFzb246IHJlYXNvblxuICB9KSksXG4gIHNldEFjdGlvbjogKGFjdGlvbjIpID0+IHZvaWQgc2V0VGltZW91dCgoKSA9PiBzZXRBY3Rpb24oYWN0aW9uMikpLFxuICBjbGVhckFjdGlvbjogKCkgPT4gdm9pZCBzZXRUaW1lb3V0KCgpID0+IHNldEFjdGlvbihudWxsKSksXG4gIGdldFNlbGVjdGVkV2FsbGV0SW5mbzogKCkgPT4gbGFzdFNlbGVjdGVkV2FsbGV0SW5mbygpLFxuICByZW1vdmVTZWxlY3RlZFdhbGxldEluZm86ICgpID0+IHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8obnVsbCksXG4gIHJlbmRlckFwcDogKHJvb3QsIHRvbkNvbm5lY3RVSSkgPT4gcmVuZGVyKCgpID0+IGNyZWF0ZUNvbXBvbmVudChBcHAsIHtcbiAgICB0b25Db25uZWN0VUlcbiAgfSksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHJvb3QpKVxufTtcbmNsYXNzIFdhbGxldHNNb2RhbE1hbmFnZXIge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbm5lY3RvclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2tcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbnN1bWVyc1wiLCBbXSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRyYWNrZXJcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0YXRlXCIsIHdhbGxldHNNb2RhbFN0YXRlKCkpO1xuICAgIHRoaXMuY29ubmVjdG9yID0gb3B0aW9ucy5jb25uZWN0b3I7XG4gICAgdGhpcy50cmFja2VyID0gb3B0aW9ucy50cmFja2VyO1xuICAgIHRoaXMuc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2sgPSBvcHRpb25zLnNldENvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrO1xuICAgIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgICBjb25zdCBzdGF0ZSA9IHdhbGxldHNNb2RhbFN0YXRlKCk7XG4gICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgICB0aGlzLmNvbnN1bWVycy5mb3JFYWNoKChjb25zdW1lcikgPT4gY29uc3VtZXIoc3RhdGUpKTtcbiAgICB9KTtcbiAgfVxuICBvcGVuKCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uU3RhcnRlZCgpO1xuICAgICAgY29uc3Qgd2FsbGV0c0xpc3QgPSB5aWVsZCB0aGlzLmNvbm5lY3Rvci5nZXRXYWxsZXRzKCk7XG4gICAgICBjb25zdCBlbWJlZGRlZFdhbGxldCA9IHdhbGxldHNMaXN0LmZpbmQoaXNXYWxsZXRJbmZvQ3VycmVudGx5RW1iZWRkZWQpO1xuICAgICAgaWYgKGVtYmVkZGVkV2FsbGV0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbm5lY3RFbWJlZGRlZFdhbGxldChlbWJlZGRlZFdhbGxldCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy5vcGVuV2FsbGV0c01vZGFsKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgY2xvc2UocmVhc29uID0gXCJhY3Rpb24tY2FuY2VsbGVkXCIpIHtcbiAgICBpZiAocmVhc29uID09PSBcImFjdGlvbi1jYW5jZWxsZWRcIikge1xuICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvbkVycm9yKFwiQ29ubmVjdGlvbiB3YXMgY2FuY2VsbGVkXCIpO1xuICAgIH1cbiAgICB3aWRnZXRDb250cm9sbGVyLmNsb3NlV2FsbGV0c01vZGFsKHJlYXNvbik7XG4gIH1cbiAgb25TdGF0ZUNoYW5nZShvbkNoYW5nZSkge1xuICAgIHRoaXMuY29uc3VtZXJzLnB1c2gob25DaGFuZ2UpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB0aGlzLmNvbnN1bWVycyA9IHRoaXMuY29uc3VtZXJzLmZpbHRlcigoY29uc3VtZXIpID0+IGNvbnN1bWVyICE9PSBvbkNoYW5nZSk7XG4gICAgfTtcbiAgfVxuICBjb25uZWN0RW1iZWRkZWRXYWxsZXQoZW1iZWRkZWRXYWxsZXQpIHtcbiAgICBjb25zdCBjb25uZWN0ID0gKHBhcmFtZXRlcnMpID0+IHtcbiAgICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oZW1iZWRkZWRXYWxsZXQpO1xuICAgICAgdGhpcy5jb25uZWN0b3IuY29ubmVjdCh7IGpzQnJpZGdlS2V5OiBlbWJlZGRlZFdhbGxldC5qc0JyaWRnZUtleSB9LCBwYXJhbWV0ZXJzKTtcbiAgICB9O1xuICAgIGNvbnN0IGFkZGl0aW9uYWxSZXF1ZXN0ID0gYXBwU3RhdGUuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzO1xuICAgIGlmICgoYWRkaXRpb25hbFJlcXVlc3QgPT0gbnVsbCA/IHZvaWQgMCA6IGFkZGl0aW9uYWxSZXF1ZXN0LnN0YXRlKSA9PT0gXCJsb2FkaW5nXCIpIHtcbiAgICAgIHRoaXMuc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2soY29ubmVjdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbm5lY3QoYWRkaXRpb25hbFJlcXVlc3QgPT0gbnVsbCA/IHZvaWQgMCA6IGFkZGl0aW9uYWxSZXF1ZXN0LnZhbHVlKTtcbiAgICB9XG4gIH1cbiAgb3BlbldhbGxldHNNb2RhbCgpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgaWYgKGlzSW5UTUEoKSkge1xuICAgICAgICBzZW5kRXhwYW5kKCk7XG4gICAgICB9XG4gICAgICB3aWRnZXRDb250cm9sbGVyLm9wZW5XYWxsZXRzTW9kYWwoKTtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBjb25zdCB1bnN1YnNjcmliZSA9IHRoaXMub25TdGF0ZUNoYW5nZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICBjb25zdCB7IHN0YXR1cyB9ID0gc3RhdGU7XG4gICAgICAgICAgaWYgKHN0YXR1cyA9PT0gXCJvcGVuZWRcIikge1xuICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cbmNsYXNzIFRyYW5zYWN0aW9uTW9kYWxNYW5hZ2VyIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJjb25uZWN0b3JcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbnN1bWVyc1wiLCBbXSk7XG4gICAgdGhpcy5jb25uZWN0b3IgPSBvcHRpb25zLmNvbm5lY3RvcjtcbiAgICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgICAgY29uc3QgY3VycmVudEFjdGlvbiA9IGFjdGlvbigpO1xuICAgICAgdGhpcy5jb25zdW1lcnMuZm9yRWFjaCgoY29uc3VtZXIpID0+IGNvbnN1bWVyKGN1cnJlbnRBY3Rpb24pKTtcbiAgICB9KTtcbiAgfVxuICBvblN0YXRlQ2hhbmdlKGNvbnN1bWVyKSB7XG4gICAgdGhpcy5jb25zdW1lcnMucHVzaChjb25zdW1lcik7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRoaXMuY29uc3VtZXJzID0gdGhpcy5jb25zdW1lcnMuZmlsdGVyKChjMikgPT4gYzIgIT09IGNvbnN1bWVyKTtcbiAgICB9O1xuICB9XG59XG5jbGFzcyBTaW5nbGVXYWxsZXRNb2RhbE1hbmFnZXIge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbm5lY3RvclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2tcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbnN1bWVyc1wiLCBbXSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRyYWNrZXJcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0YXRlXCIsIHNpbmdsZVdhbGxldE1vZGFsU3RhdGUoKSk7XG4gICAgdGhpcy5jb25uZWN0b3IgPSBvcHRpb25zLmNvbm5lY3RvcjtcbiAgICB0aGlzLnRyYWNrZXIgPSBvcHRpb25zLnRyYWNrZXI7XG4gICAgdGhpcy5zZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjayA9IG9wdGlvbnMuc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2s7XG4gICAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICAgIGNvbnN0IHN0YXRlID0gc2luZ2xlV2FsbGV0TW9kYWxTdGF0ZSgpO1xuICAgICAgdGhpcy5zdGF0ZSA9IHN0YXRlO1xuICAgICAgdGhpcy5jb25zdW1lcnMuZm9yRWFjaCgoY29uc3VtZXIpID0+IGNvbnN1bWVyKHN0YXRlKSk7XG4gICAgfSk7XG4gIH1cbiAgb3Blbih3YWxsZXQpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvblN0YXJ0ZWQoKTtcbiAgICAgIGNvbnN0IGZldGNoZWRXYWxsZXRzTGlzdCA9IHlpZWxkIHRoaXMuY29ubmVjdG9yLmdldFdhbGxldHMoKTtcbiAgICAgIGNvbnN0IHdhbGxldHNMaXN0ID0gYXBwbHlXYWxsZXRzTGlzdENvbmZpZ3VyYXRpb24oXG4gICAgICAgIGZldGNoZWRXYWxsZXRzTGlzdCxcbiAgICAgICAgYXBwU3RhdGUud2FsbGV0c0xpc3RDb25maWd1cmF0aW9uXG4gICAgICApO1xuICAgICAgY29uc3QgZW1iZWRkZWRXYWxsZXQgPSB3YWxsZXRzTGlzdC5maW5kKGlzV2FsbGV0SW5mb0N1cnJlbnRseUVtYmVkZGVkKTtcbiAgICAgIGNvbnN0IGlzRW1iZWRkZWRXYWxsZXRFeGlzdCA9ICEhZW1iZWRkZWRXYWxsZXQ7XG4gICAgICBpZiAoaXNFbWJlZGRlZFdhbGxldEV4aXN0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbm5lY3RFbWJlZGRlZFdhbGxldChlbWJlZGRlZFdhbGxldCk7XG4gICAgICB9XG4gICAgICBjb25zdCBleHRlcm5hbFdhbGxldHMgPSB3YWxsZXRzTGlzdC5maWx0ZXIoaXNXYWxsZXRJbmZvUmVtb3RlKTtcbiAgICAgIGNvbnN0IGV4dGVybmFsV2FsbGV0ID0gZXh0ZXJuYWxXYWxsZXRzLmZpbmQoKHdhbGxldEluZm8pID0+IGVxV2FsbGV0TmFtZSh3YWxsZXRJbmZvLCB3YWxsZXQpKTtcbiAgICAgIGNvbnN0IGlzRXh0ZXJuYWxXYWxsZXRFeGlzdCA9ICEhZXh0ZXJuYWxXYWxsZXQ7XG4gICAgICBpZiAoaXNFeHRlcm5hbFdhbGxldEV4aXN0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9wZW5TaW5nbGVXYWxsZXRNb2RhbChleHRlcm5hbFdhbGxldCk7XG4gICAgICB9XG4gICAgICBjb25zdCBlcnJvciA9IGBUcnlpbmcgdG8gb3BlbiBtb2RhbCB3aW5kb3cgd2l0aCB1bmtub3duIHdhbGxldCBcIiR7d2FsbGV0fVwiLmA7XG4gICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uRXJyb3IoZXJyb3IpO1xuICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKGVycm9yKTtcbiAgICB9KTtcbiAgfVxuICBjbG9zZShyZWFzb24gPSBcImFjdGlvbi1jYW5jZWxsZWRcIikge1xuICAgIGlmIChyZWFzb24gPT09IFwiYWN0aW9uLWNhbmNlbGxlZFwiKSB7XG4gICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uRXJyb3IoXCJDb25uZWN0aW9uIHdhcyBjYW5jZWxsZWRcIik7XG4gICAgfVxuICAgIHdpZGdldENvbnRyb2xsZXIuY2xvc2VTaW5nbGVXYWxsZXRNb2RhbChcImFjdGlvbi1jYW5jZWxsZWRcIik7XG4gIH1cbiAgb25TdGF0ZUNoYW5nZShvbkNoYW5nZSkge1xuICAgIHRoaXMuY29uc3VtZXJzLnB1c2gob25DaGFuZ2UpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB0aGlzLmNvbnN1bWVycyA9IHRoaXMuY29uc3VtZXJzLmZpbHRlcigoY29uc3VtZXIpID0+IGNvbnN1bWVyICE9PSBvbkNoYW5nZSk7XG4gICAgfTtcbiAgfVxuICBjb25uZWN0RW1iZWRkZWRXYWxsZXQoZW1iZWRkZWRXYWxsZXQpIHtcbiAgICBjb25zdCBjb25uZWN0ID0gKHBhcmFtZXRlcnMpID0+IHtcbiAgICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oZW1iZWRkZWRXYWxsZXQpO1xuICAgICAgdGhpcy5jb25uZWN0b3IuY29ubmVjdCh7IGpzQnJpZGdlS2V5OiBlbWJlZGRlZFdhbGxldC5qc0JyaWRnZUtleSB9LCBwYXJhbWV0ZXJzKTtcbiAgICB9O1xuICAgIGNvbnN0IGFkZGl0aW9uYWxSZXF1ZXN0ID0gYXBwU3RhdGUuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzO1xuICAgIGlmICgoYWRkaXRpb25hbFJlcXVlc3QgPT0gbnVsbCA/IHZvaWQgMCA6IGFkZGl0aW9uYWxSZXF1ZXN0LnN0YXRlKSA9PT0gXCJsb2FkaW5nXCIpIHtcbiAgICAgIHRoaXMuc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2soY29ubmVjdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbm5lY3QoYWRkaXRpb25hbFJlcXVlc3QgPT0gbnVsbCA/IHZvaWQgMCA6IGFkZGl0aW9uYWxSZXF1ZXN0LnZhbHVlKTtcbiAgICB9XG4gIH1cbiAgb3BlblNpbmdsZVdhbGxldE1vZGFsKHdhbGxldCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBpZiAoaXNJblRNQSgpKSB7XG4gICAgICAgIHNlbmRFeHBhbmQoKTtcbiAgICAgIH1cbiAgICAgIHdpZGdldENvbnRyb2xsZXIub3BlblNpbmdsZVdhbGxldE1vZGFsKHdhbGxldCk7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSB0aGlzLm9uU3RhdGVDaGFuZ2UoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgY29uc3QgeyBzdGF0dXMgfSA9IHN0YXRlO1xuICAgICAgICAgIGlmIChzdGF0dXMgPT09IFwib3BlbmVkXCIpIHtcbiAgICAgICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG5jbGFzcyBUb25Db25uZWN0VUlUcmFja2VyIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJldmVudFByZWZpeFwiLCBcInRvbi1jb25uZWN0LXVpLVwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidG9uQ29ubmVjdFVpVmVyc2lvblwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidG9uQ29ubmVjdFNka1ZlcnNpb25cIiwgbnVsbCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImV2ZW50RGlzcGF0Y2hlclwiKTtcbiAgICB2YXIgX2EyO1xuICAgIHRoaXMuZXZlbnREaXNwYXRjaGVyID0gKF9hMiA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuZXZlbnREaXNwYXRjaGVyKSAhPSBudWxsID8gX2EyIDogbmV3IEJyb3dzZXJFdmVudERpc3BhdGNoZXIoKTtcbiAgICB0aGlzLnRvbkNvbm5lY3RVaVZlcnNpb24gPSBvcHRpb25zLnRvbkNvbm5lY3RVaVZlcnNpb247XG4gICAgdGhpcy5pbml0KCkuY2F0Y2goKTtcbiAgfVxuICBnZXQgdmVyc2lvbigpIHtcbiAgICByZXR1cm4gY3JlYXRlVmVyc2lvbkluZm8oe1xuICAgICAgdG9uX2Nvbm5lY3Rfc2RrX2xpYjogdGhpcy50b25Db25uZWN0U2RrVmVyc2lvbixcbiAgICAgIHRvbl9jb25uZWN0X3VpX2xpYjogdGhpcy50b25Db25uZWN0VWlWZXJzaW9uXG4gICAgfSk7XG4gIH1cbiAgaW5pdCgpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgeWllbGQgdGhpcy5zZXRSZXF1ZXN0VmVyc2lvbkhhbmRsZXIoKTtcbiAgICAgICAgdGhpcy50b25Db25uZWN0U2RrVmVyc2lvbiA9IHlpZWxkIHRoaXMucmVxdWVzdFRvbkNvbm5lY3RTZGtWZXJzaW9uKCk7XG4gICAgICB9IGNhdGNoIChlMikge1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHNldFJlcXVlc3RWZXJzaW9uSGFuZGxlcigpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgeWllbGQgdGhpcy5ldmVudERpc3BhdGNoZXIuYWRkRXZlbnRMaXN0ZW5lcihcInRvbi1jb25uZWN0LXVpLXJlcXVlc3QtdmVyc2lvblwiLCAoKSA9PiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIHlpZWxkIHRoaXMuZXZlbnREaXNwYXRjaGVyLmRpc3BhdGNoRXZlbnQoXG4gICAgICAgICAgXCJ0b24tY29ubmVjdC11aS1yZXNwb25zZS12ZXJzaW9uXCIsXG4gICAgICAgICAgY3JlYXRlUmVzcG9uc2VWZXJzaW9uRXZlbnQodGhpcy50b25Db25uZWN0VWlWZXJzaW9uKVxuICAgICAgICApO1xuICAgICAgfSkpO1xuICAgIH0pO1xuICB9XG4gIHJlcXVlc3RUb25Db25uZWN0U2RrVmVyc2lvbigpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB5aWVsZCB0aGlzLmV2ZW50RGlzcGF0Y2hlci5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgICAgICAgXCJ0b24tY29ubmVjdC1yZXNwb25zZS12ZXJzaW9uXCIsXG4gICAgICAgICAgICAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShldmVudC5kZXRhaWwudmVyc2lvbik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgeyBvbmNlOiB0cnVlIH1cbiAgICAgICAgICApO1xuICAgICAgICAgIHlpZWxkIHRoaXMuZXZlbnREaXNwYXRjaGVyLmRpc3BhdGNoRXZlbnQoXG4gICAgICAgICAgICBcInRvbi1jb25uZWN0LXJlcXVlc3QtdmVyc2lvblwiLFxuICAgICAgICAgICAgY3JlYXRlUmVxdWVzdFZlcnNpb25FdmVudCgpXG4gICAgICAgICAgKTtcbiAgICAgICAgfSBjYXRjaCAoZTIpIHtcbiAgICAgICAgICByZWplY3QoZTIpO1xuICAgICAgICB9XG4gICAgICB9KSk7XG4gICAgfSk7XG4gIH1cbiAgZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnREZXRhaWxzKSB7XG4gICAgdmFyIF9hMjtcbiAgICB0cnkge1xuICAgICAgKF9hMiA9IHRoaXMuZXZlbnREaXNwYXRjaGVyKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmRpc3BhdGNoRXZlbnQoYCR7dGhpcy5ldmVudFByZWZpeH0ke2V2ZW50RGV0YWlscy50eXBlfWAsIGV2ZW50RGV0YWlscykuY2F0Y2goKTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Nvbm5lY3Rpb25TdGFydGVkKC4uLmFyZ3MpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXZlbnQgPSBjcmVhdGVDb25uZWN0aW9uU3RhcnRlZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Nvbm5lY3Rpb25Db21wbGV0ZWQoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25Db21wbGV0ZWRFdmVudCh0aGlzLnZlcnNpb24sIC4uLmFyZ3MpO1xuICAgICAgdGhpcy5kaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudCk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbiAgdHJhY2tDb25uZWN0aW9uRXJyb3IoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25FcnJvckV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdTdGFydGVkKC4uLmFyZ3MpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXZlbnQgPSBjcmVhdGVDb25uZWN0aW9uUmVzdG9yaW5nU3RhcnRlZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdDb21wbGV0ZWQoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdDb21wbGV0ZWRFdmVudCh0aGlzLnZlcnNpb24sIC4uLmFyZ3MpO1xuICAgICAgdGhpcy5kaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudCk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbiAgdHJhY2tDb25uZWN0aW9uUmVzdG9yaW5nRXJyb3IoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdFcnJvckV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Rpc2Nvbm5lY3Rpb24oLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZURpc2Nvbm5lY3Rpb25FdmVudCh0aGlzLnZlcnNpb24sIC4uLmFyZ3MpO1xuICAgICAgdGhpcy5kaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudCk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbiAgdHJhY2tUcmFuc2FjdGlvblNlbnRGb3JTaWduYXR1cmUoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZVRyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZUV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja1RyYW5zYWN0aW9uU2lnbmVkKC4uLmFyZ3MpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXZlbnQgPSBjcmVhdGVUcmFuc2FjdGlvblNpZ25lZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja1RyYW5zYWN0aW9uU2lnbmluZ0ZhaWxlZCguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlVHJhbnNhY3Rpb25TaWduaW5nRmFpbGVkRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG59XG5jb25zdCB0b25Db25uZWN0VWlWZXJzaW9uID0gXCIyLjAuMTFcIjtcbmNsYXNzIFRvbkNvbm5lY3RVSSB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwid2FsbGV0SW5mb1N0b3JhZ2VcIiwgbmV3IFdhbGxldEluZm9TdG9yYWdlKCkpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJwcmVmZXJyZWRXYWxsZXRTdG9yYWdlXCIsIG5ldyBQcmVmZXJyZWRXYWxsZXRTdG9yYWdlKCkpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ0cmFja2VyXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ3YWxsZXRJbmZvXCIsIG51bGwpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzeXN0ZW1UaGVtZUNoYW5nZVVuc3Vic2NyaWJlXCIsIG51bGwpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJhY3Rpb25zQ29uZmlndXJhdGlvblwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwid2FsbGV0c0xpc3RcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJjb25uZWN0b3JcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm1vZGFsXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzaW5nbGVXYWxsZXRNb2RhbFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidHJhbnNhY3Rpb25Nb2RhbFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29ubmVjdGlvblJlc3RvcmVkXCIsIFByb21pc2UucmVzb2x2ZShmYWxzZSkpO1xuICAgIGlmIChvcHRpb25zICYmIFwiY29ubmVjdG9yXCIgaW4gb3B0aW9ucyAmJiBvcHRpb25zLmNvbm5lY3Rvcikge1xuICAgICAgdGhpcy5jb25uZWN0b3IgPSBvcHRpb25zLmNvbm5lY3RvcjtcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMgJiYgXCJtYW5pZmVzdFVybFwiIGluIG9wdGlvbnMgJiYgb3B0aW9ucy5tYW5pZmVzdFVybCkge1xuICAgICAgdGhpcy5jb25uZWN0b3IgPSBuZXcgVG9uQ29ubmVjdCh7XG4gICAgICAgIG1hbmlmZXN0VXJsOiBvcHRpb25zLm1hbmlmZXN0VXJsLFxuICAgICAgICBldmVudERpc3BhdGNoZXI6IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuZXZlbnREaXNwYXRjaGVyXG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFxuICAgICAgICBcIllvdSBoYXZlIHRvIHNwZWNpZnkgYSBgbWFuaWZlc3RVcmxgIG9yIGEgYGNvbm5lY3RvcmAgaW4gdGhlIG9wdGlvbnMuXCJcbiAgICAgICk7XG4gICAgfVxuICAgIHRoaXMudHJhY2tlciA9IG5ldyBUb25Db25uZWN0VUlUcmFja2VyKHtcbiAgICAgIGV2ZW50RGlzcGF0Y2hlcjogb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5ldmVudERpc3BhdGNoZXIsXG4gICAgICB0b25Db25uZWN0VWlWZXJzaW9uXG4gICAgfSk7XG4gICAgdGhpcy5tb2RhbCA9IG5ldyBXYWxsZXRzTW9kYWxNYW5hZ2VyKHtcbiAgICAgIGNvbm5lY3RvcjogdGhpcy5jb25uZWN0b3IsXG4gICAgICB0cmFja2VyOiB0aGlzLnRyYWNrZXIsXG4gICAgICBzZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjazogKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIHRoaXMuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLnNpbmdsZVdhbGxldE1vZGFsID0gbmV3IFNpbmdsZVdhbGxldE1vZGFsTWFuYWdlcih7XG4gICAgICBjb25uZWN0b3I6IHRoaXMuY29ubmVjdG9yLFxuICAgICAgdHJhY2tlcjogdGhpcy50cmFja2VyLFxuICAgICAgc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2s6IChjYWxsYmFjaykgPT4ge1xuICAgICAgICB0aGlzLmNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy50cmFuc2FjdGlvbk1vZGFsID0gbmV3IFRyYW5zYWN0aW9uTW9kYWxNYW5hZ2VyKHtcbiAgICAgIGNvbm5lY3RvcjogdGhpcy5jb25uZWN0b3JcbiAgICB9KTtcbiAgICB0aGlzLndhbGxldHNMaXN0ID0gdGhpcy5nZXRXYWxsZXRzKCk7XG4gICAgdGhpcy53YWxsZXRzTGlzdC50aGVuKChsaXN0KSA9PiBwcmVsb2FkSW1hZ2VzKHVuaXEobGlzdC5tYXAoKGl0ZW0pID0+IGl0ZW0uaW1hZ2VVcmwpKSkpO1xuICAgIGNvbnN0IHJvb3RJZCA9IHRoaXMubm9ybWFsaXplV2lkZ2V0Um9vdChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLndpZGdldFJvb3RJZCk7XG4gICAgdGhpcy5zdWJzY3JpYmVUb1dhbGxldENoYW5nZSgpO1xuICAgIGlmICgob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5yZXN0b3JlQ29ubmVjdGlvbikgIT09IGZhbHNlKSB7XG4gICAgICB0aGlzLmNvbm5lY3Rpb25SZXN0b3JlZCA9IGNyZWF0ZU1hY3JvdGFza0FzeW5jKCgpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvblJlc3RvcmluZ1N0YXJ0ZWQoKTtcbiAgICAgICAgeWllbGQgdGhpcy5jb25uZWN0b3IucmVzdG9yZUNvbm5lY3Rpb24oKTtcbiAgICAgICAgaWYgKCF0aGlzLmNvbm5lY3Rvci5jb25uZWN0ZWQpIHtcbiAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uUmVzdG9yaW5nRXJyb3IoXCJDb25uZWN0aW9uIHdhcyBub3QgcmVzdG9yZWRcIik7XG4gICAgICAgICAgdGhpcy53YWxsZXRJbmZvU3RvcmFnZS5yZW1vdmVXYWxsZXRJbmZvKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvblJlc3RvcmluZ0NvbXBsZXRlZCh0aGlzLndhbGxldCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuY29ubmVjdG9yLmNvbm5lY3RlZDtcbiAgICAgIH0pKTtcbiAgICB9XG4gICAgdGhpcy51aU9wdGlvbnMgPSBtZXJnZU9wdGlvbnMob3B0aW9ucywgeyB1aVByZWZlcmVuY2VzOiB7IHRoZW1lOiBcIlNZU1RFTVwiIH0gfSk7XG4gICAgY29uc3QgcHJlZmVycmVkV2FsbGV0TmFtZSA9IHRoaXMucHJlZmVycmVkV2FsbGV0U3RvcmFnZS5nZXRQcmVmZXJyZWRXYWxsZXRBcHBOYW1lKCk7XG4gICAgc2V0QXBwU3RhdGUoe1xuICAgICAgY29ubmVjdG9yOiB0aGlzLmNvbm5lY3RvcixcbiAgICAgIHByZWZlcnJlZFdhbGxldEFwcE5hbWU6IHByZWZlcnJlZFdhbGxldE5hbWVcbiAgICB9KTtcbiAgICB3aWRnZXRDb250cm9sbGVyLnJlbmRlckFwcChyb290SWQsIHRoaXMpO1xuICB9XG4gIHN0YXRpYyBnZXRXYWxsZXRzKCkge1xuICAgIHJldHVybiBUb25Db25uZWN0LmdldFdhbGxldHMoKTtcbiAgfVxuICBnZXQgY29ubmVjdGVkKCkge1xuICAgIHJldHVybiB0aGlzLmNvbm5lY3Rvci5jb25uZWN0ZWQ7XG4gIH1cbiAgZ2V0IGFjY291bnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuY29ubmVjdG9yLmFjY291bnQ7XG4gIH1cbiAgZ2V0IHdhbGxldCgpIHtcbiAgICBpZiAoIXRoaXMuY29ubmVjdG9yLndhbGxldCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBfX3NwcmVhZFZhbHVlcyhfX3NwcmVhZFZhbHVlcyh7fSwgdGhpcy5jb25uZWN0b3Iud2FsbGV0KSwgdGhpcy53YWxsZXRJbmZvKTtcbiAgfVxuICBzZXQgdWlPcHRpb25zKG9wdGlvbnMpIHtcbiAgICB2YXIgX2EyLCBfYjIsIF9jMiwgX2QyLCBfZTI7XG4gICAgdGhpcy5jaGVja0J1dHRvblJvb3RFeGlzdChvcHRpb25zLmJ1dHRvblJvb3RJZCk7XG4gICAgdGhpcy5hY3Rpb25zQ29uZmlndXJhdGlvbiA9IG9wdGlvbnMuYWN0aW9uc0NvbmZpZ3VyYXRpb247XG4gICAgaWYgKChfYTIgPSBvcHRpb25zLnVpUHJlZmVyZW5jZXMpID09IG51bGwgPyB2b2lkIDAgOiBfYTIudGhlbWUpIHtcbiAgICAgIGlmICgoKF9iMiA9IG9wdGlvbnMudWlQcmVmZXJlbmNlcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iMi50aGVtZSkgIT09IFwiU1lTVEVNXCIpIHtcbiAgICAgICAgKF9jMiA9IHRoaXMuc3lzdGVtVGhlbWVDaGFuZ2VVbnN1YnNjcmliZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jMi5jYWxsKHRoaXMpO1xuICAgICAgICBzZXRUaGVtZShvcHRpb25zLnVpUHJlZmVyZW5jZXMudGhlbWUsIG9wdGlvbnMudWlQcmVmZXJlbmNlcy5jb2xvcnNTZXQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0VGhlbWUoZ2V0U3lzdGVtVGhlbWUoKSwgb3B0aW9ucy51aVByZWZlcmVuY2VzLmNvbG9yc1NldCk7XG4gICAgICAgIGlmICghdGhpcy5zeXN0ZW1UaGVtZUNoYW5nZVVuc3Vic2NyaWJlKSB7XG4gICAgICAgICAgdGhpcy5zeXN0ZW1UaGVtZUNoYW5nZVVuc3Vic2NyaWJlID0gc3Vic2NyaWJlVG9UaGVtZUNoYW5nZShzZXRUaGVtZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKChfZDIgPSBvcHRpb25zLnVpUHJlZmVyZW5jZXMpID09IG51bGwgPyB2b2lkIDAgOiBfZDIuY29sb3JzU2V0KSB7XG4gICAgICAgIHNldENvbG9ycyhvcHRpb25zLnVpUHJlZmVyZW5jZXMuY29sb3JzU2V0KTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKChfZTIgPSBvcHRpb25zLnVpUHJlZmVyZW5jZXMpID09IG51bGwgPyB2b2lkIDAgOiBfZTIuYm9yZGVyUmFkaXVzKSB7XG4gICAgICBzZXRCb3JkZXJSYWRpdXMob3B0aW9ucy51aVByZWZlcmVuY2VzLmJvcmRlclJhZGl1cyk7XG4gICAgfVxuICAgIHNldEFwcFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgdmFyIF9hMywgX2IzO1xuICAgICAgY29uc3QgbWVyZ2VkID0gbWVyZ2VPcHRpb25zKFxuICAgICAgICBfX3NwcmVhZFZhbHVlcyhfX3NwcmVhZFZhbHVlcyhfX3NwcmVhZFZhbHVlcyhfX3NwcmVhZFZhbHVlcyh7fSwgb3B0aW9ucy5sYW5ndWFnZSAmJiB7IGxhbmd1YWdlOiBvcHRpb25zLmxhbmd1YWdlIH0pLCAhISgoX2EzID0gb3B0aW9ucy5hY3Rpb25zQ29uZmlndXJhdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMy5yZXR1cm5TdHJhdGVneSkgJiYge1xuICAgICAgICAgIHJldHVyblN0cmF0ZWd5OiBvcHRpb25zLmFjdGlvbnNDb25maWd1cmF0aW9uLnJldHVyblN0cmF0ZWd5XG4gICAgICAgIH0pLCAhISgoX2IzID0gb3B0aW9ucy5hY3Rpb25zQ29uZmlndXJhdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9iMy50d2FSZXR1cm5VcmwpICYmIHtcbiAgICAgICAgICB0d2FSZXR1cm5Vcmw6IG9wdGlvbnMuYWN0aW9uc0NvbmZpZ3VyYXRpb24udHdhUmV0dXJuVXJsXG4gICAgICAgIH0pLCAhIW9wdGlvbnMud2FsbGV0c0xpc3RDb25maWd1cmF0aW9uICYmIHtcbiAgICAgICAgICB3YWxsZXRzTGlzdENvbmZpZ3VyYXRpb246IG9wdGlvbnMud2FsbGV0c0xpc3RDb25maWd1cmF0aW9uXG4gICAgICAgIH0pLFxuICAgICAgICB1bndyYXAoc3RhdGUpXG4gICAgICApO1xuICAgICAgaWYgKG9wdGlvbnMuYnV0dG9uUm9vdElkICE9PSB2b2lkIDApIHtcbiAgICAgICAgbWVyZ2VkLmJ1dHRvblJvb3RJZCA9IG9wdGlvbnMuYnV0dG9uUm9vdElkO1xuICAgICAgfVxuICAgICAgaWYgKG9wdGlvbnMuZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyICE9PSB2b2lkIDApIHtcbiAgICAgICAgbWVyZ2VkLmVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlciA9IG9wdGlvbnMuZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1lcmdlZDtcbiAgICB9KTtcbiAgfVxuICBzZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMoY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzKSB7XG4gICAgdmFyIF9hMjtcbiAgICBzZXRBcHBTdGF0ZSh7IGNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycyB9KTtcbiAgICBpZiAoKGNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycyA9PSBudWxsID8gdm9pZCAwIDogY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzLnN0YXRlKSA9PT0gXCJyZWFkeVwiIHx8ICFjb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMpIHtcbiAgICAgIChfYTIgPSB0aGlzLmNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmNhbGwodGhpcywgY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzID09IG51bGwgPyB2b2lkIDAgOiBjb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMudmFsdWUpO1xuICAgIH1cbiAgfVxuICBnZXRXYWxsZXRzKCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5jb25uZWN0b3IuZ2V0V2FsbGV0cygpO1xuICAgIH0pO1xuICB9XG4gIG9uU3RhdHVzQ2hhbmdlKGNhbGxiYWNrLCBlcnJvcnNIYW5kbGVyKSB7XG4gICAgcmV0dXJuIHRoaXMuY29ubmVjdG9yLm9uU3RhdHVzQ2hhbmdlKCh3YWxsZXQpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIGlmICh3YWxsZXQpIHtcbiAgICAgICAgY29uc3QgbGFzdFNlbGVjdGVkV2FsbGV0SW5mbzIgPSB5aWVsZCB0aGlzLmdldFNlbGVjdGVkV2FsbGV0SW5mbyh3YWxsZXQpO1xuICAgICAgICBjYWxsYmFjayhfX3NwcmVhZFZhbHVlcyhfX3NwcmVhZFZhbHVlcyh7fSwgd2FsbGV0KSwgbGFzdFNlbGVjdGVkV2FsbGV0SW5mbzIgfHwgdGhpcy53YWxsZXRJbmZvU3RvcmFnZS5nZXRXYWxsZXRJbmZvKCkpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhbGxiYWNrKHdhbGxldCk7XG4gICAgICB9XG4gICAgfSksIGVycm9yc0hhbmRsZXIpO1xuICB9XG4gIG9wZW5Nb2RhbCgpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgcmV0dXJuIHRoaXMubW9kYWwub3BlbigpO1xuICAgIH0pO1xuICB9XG4gIGNsb3NlTW9kYWwocmVhc29uKSB7XG4gICAgdGhpcy5tb2RhbC5jbG9zZShyZWFzb24pO1xuICB9XG4gIG9uTW9kYWxTdGF0ZUNoYW5nZShvbkNoYW5nZSkge1xuICAgIHJldHVybiB0aGlzLm1vZGFsLm9uU3RhdGVDaGFuZ2Uob25DaGFuZ2UpO1xuICB9XG4gIGdldCBtb2RhbFN0YXRlKCkge1xuICAgIHJldHVybiB0aGlzLm1vZGFsLnN0YXRlO1xuICB9XG4gIG9wZW5TaW5nbGVXYWxsZXRNb2RhbCh3YWxsZXQpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgcmV0dXJuIHRoaXMuc2luZ2xlV2FsbGV0TW9kYWwub3Blbih3YWxsZXQpO1xuICAgIH0pO1xuICB9XG4gIGNsb3NlU2luZ2xlV2FsbGV0TW9kYWwoY2xvc2VSZWFzb24pIHtcbiAgICB0aGlzLnNpbmdsZVdhbGxldE1vZGFsLmNsb3NlKGNsb3NlUmVhc29uKTtcbiAgfVxuICBvblNpbmdsZVdhbGxldE1vZGFsU3RhdGVDaGFuZ2Uob25DaGFuZ2UpIHtcbiAgICByZXR1cm4gdGhpcy5zaW5nbGVXYWxsZXRNb2RhbC5vblN0YXRlQ2hhbmdlKG9uQ2hhbmdlKTtcbiAgfVxuICBnZXQgc2luZ2xlV2FsbGV0TW9kYWxTdGF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5zaW5nbGVXYWxsZXRNb2RhbC5zdGF0ZTtcbiAgfVxuICBjb25uZWN0V2FsbGV0KCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBjb25zdCB3YWxsZXRzTGlzdCA9IHlpZWxkIHRoaXMuZ2V0V2FsbGV0cygpO1xuICAgICAgY29uc3QgZW1iZWRkZWRXYWxsZXQgPSB3YWxsZXRzTGlzdC5maW5kKGlzV2FsbGV0SW5mb0N1cnJlbnRseUVtYmVkZGVkKTtcbiAgICAgIGlmIChlbWJlZGRlZFdhbGxldCkge1xuICAgICAgICByZXR1cm4geWllbGQgdGhpcy5jb25uZWN0RW1iZWRkZWRXYWxsZXQoZW1iZWRkZWRXYWxsZXQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHlpZWxkIHRoaXMuY29ubmVjdEV4dGVybmFsV2FsbGV0KCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgZGlzY29ubmVjdCgpIHtcbiAgICB0aGlzLnRyYWNrZXIudHJhY2tEaXNjb25uZWN0aW9uKHRoaXMud2FsbGV0LCBcImRhcHBcIik7XG4gICAgd2lkZ2V0Q29udHJvbGxlci5jbGVhckFjdGlvbigpO1xuICAgIHdpZGdldENvbnRyb2xsZXIucmVtb3ZlU2VsZWN0ZWRXYWxsZXRJbmZvKCk7XG4gICAgdGhpcy53YWxsZXRJbmZvU3RvcmFnZS5yZW1vdmVXYWxsZXRJbmZvKCk7XG4gICAgcmV0dXJuIHRoaXMuY29ubmVjdG9yLmRpc2Nvbm5lY3QoKTtcbiAgfVxuICBzZW5kVHJhbnNhY3Rpb24odHgsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgdGhpcy50cmFja2VyLnRyYWNrVHJhbnNhY3Rpb25TZW50Rm9yU2lnbmF0dXJlKHRoaXMud2FsbGV0LCB0eCk7XG4gICAgICBpZiAoIXRoaXMuY29ubmVjdGVkKSB7XG4gICAgICAgIHRoaXMudHJhY2tlci50cmFja1RyYW5zYWN0aW9uU2lnbmluZ0ZhaWxlZCh0aGlzLndhbGxldCwgdHgsIFwiV2FsbGV0IHdhcyBub3QgY29ubmVjdGVkXCIpO1xuICAgICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXCJDb25uZWN0IHdhbGxldCB0byBzZW5kIGEgdHJhbnNhY3Rpb24uXCIpO1xuICAgICAgfVxuICAgICAgaWYgKGlzSW5UTUEoKSkge1xuICAgICAgICBzZW5kRXhwYW5kKCk7XG4gICAgICB9XG4gICAgICBjb25zdCB7IG5vdGlmaWNhdGlvbnM6IG5vdGlmaWNhdGlvbnMyLCBtb2RhbHMsIHJldHVyblN0cmF0ZWd5LCB0d2FSZXR1cm5VcmwsIHNraXBSZWRpcmVjdFRvV2FsbGV0IH0gPSB0aGlzLmdldE1vZGFsc0FuZE5vdGlmaWNhdGlvbnNDb25maWd1cmF0aW9uKG9wdGlvbnMpO1xuICAgICAgd2lkZ2V0Q29udHJvbGxlci5zZXRBY3Rpb24oe1xuICAgICAgICBuYW1lOiBcImNvbmZpcm0tdHJhbnNhY3Rpb25cIixcbiAgICAgICAgc2hvd05vdGlmaWNhdGlvbjogbm90aWZpY2F0aW9uczIuaW5jbHVkZXMoXCJiZWZvcmVcIiksXG4gICAgICAgIG9wZW5Nb2RhbDogbW9kYWxzLmluY2x1ZGVzKFwiYmVmb3JlXCIpLFxuICAgICAgICBzZW50OiBmYWxzZVxuICAgICAgfSk7XG4gICAgICBjb25zdCBvblJlcXVlc3RTZW50ID0gKCkgPT4ge1xuICAgICAgICBpZiAoYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHdpZGdldENvbnRyb2xsZXIuc2V0QWN0aW9uKHtcbiAgICAgICAgICBuYW1lOiBcImNvbmZpcm0tdHJhbnNhY3Rpb25cIixcbiAgICAgICAgICBzaG93Tm90aWZpY2F0aW9uOiBub3RpZmljYXRpb25zMi5pbmNsdWRlcyhcImJlZm9yZVwiKSxcbiAgICAgICAgICBvcGVuTW9kYWw6IG1vZGFscy5pbmNsdWRlcyhcImJlZm9yZVwiKSxcbiAgICAgICAgICBzZW50OiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAodGhpcy53YWxsZXRJbmZvICYmIFwidW5pdmVyc2FsTGlua1wiIGluIHRoaXMud2FsbGV0SW5mbyAmJiAodGhpcy53YWxsZXRJbmZvLm9wZW5NZXRob2QgPT09IFwidW5pdmVyc2FsLWxpbmtcIiB8fCB0aGlzLndhbGxldEluZm8ub3Blbk1ldGhvZCA9PT0gXCJjdXN0b20tZGVlcGxpbmtcIikpIHtcbiAgICAgICAgICBpZiAoaXNUZWxlZ3JhbVVybCh0aGlzLndhbGxldEluZm8udW5pdmVyc2FsTGluaykpIHtcbiAgICAgICAgICAgIHJlZGlyZWN0VG9UZWxlZ3JhbSh0aGlzLndhbGxldEluZm8udW5pdmVyc2FsTGluaywge1xuICAgICAgICAgICAgICByZXR1cm5TdHJhdGVneSxcbiAgICAgICAgICAgICAgdHdhUmV0dXJuVXJsOiB0d2FSZXR1cm5VcmwgfHwgYXBwU3RhdGUudHdhUmV0dXJuVXJsLFxuICAgICAgICAgICAgICBmb3JjZVJlZGlyZWN0OiBmYWxzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlZGlyZWN0VG9XYWxsZXQoXG4gICAgICAgICAgICAgIHRoaXMud2FsbGV0SW5mby51bml2ZXJzYWxMaW5rLFxuICAgICAgICAgICAgICB0aGlzLndhbGxldEluZm8uZGVlcExpbmssXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm5TdHJhdGVneSxcbiAgICAgICAgICAgICAgICBmb3JjZVJlZGlyZWN0OiBmYWxzZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgY29uc3QgYWJvcnRDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSB0aGlzLm9uVHJhbnNhY3Rpb25Nb2RhbFN0YXRlQ2hhbmdlKChhY3Rpb24yKSA9PiB7XG4gICAgICAgIGlmIChhY3Rpb24yID09IG51bGwgPyB2b2lkIDAgOiBhY3Rpb24yLm9wZW5Nb2RhbCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICBpZiAoIWFjdGlvbjIpIHtcbiAgICAgICAgICBhYm9ydENvbnRyb2xsZXIuYWJvcnQoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSB5aWVsZCB0aGlzLndhaXRGb3JTZW5kVHJhbnNhY3Rpb24oXG4gICAgICAgICAge1xuICAgICAgICAgICAgdHJhbnNhY3Rpb246IHR4LFxuICAgICAgICAgICAgc2lnbmFsOiBhYm9ydENvbnRyb2xsZXIuc2lnbmFsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBvblJlcXVlc3RTZW50XG4gICAgICAgICk7XG4gICAgICAgIHRoaXMudHJhY2tlci50cmFja1RyYW5zYWN0aW9uU2lnbmVkKHRoaXMud2FsbGV0LCB0eCwgcmVzdWx0KTtcbiAgICAgICAgd2lkZ2V0Q29udHJvbGxlci5zZXRBY3Rpb24oe1xuICAgICAgICAgIG5hbWU6IFwidHJhbnNhY3Rpb24tc2VudFwiLFxuICAgICAgICAgIHNob3dOb3RpZmljYXRpb246IG5vdGlmaWNhdGlvbnMyLmluY2x1ZGVzKFwic3VjY2Vzc1wiKSxcbiAgICAgICAgICBvcGVuTW9kYWw6IG1vZGFscy5pbmNsdWRlcyhcInN1Y2Nlc3NcIilcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9IGNhdGNoIChlMikge1xuICAgICAgICB3aWRnZXRDb250cm9sbGVyLnNldEFjdGlvbih7XG4gICAgICAgICAgbmFtZTogXCJ0cmFuc2FjdGlvbi1jYW5jZWxlZFwiLFxuICAgICAgICAgIHNob3dOb3RpZmljYXRpb246IG5vdGlmaWNhdGlvbnMyLmluY2x1ZGVzKFwiZXJyb3JcIiksXG4gICAgICAgICAgb3Blbk1vZGFsOiBtb2RhbHMuaW5jbHVkZXMoXCJlcnJvclwiKVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGUyIGluc3RhbmNlb2YgVG9uQ29ubmVjdEVycm9yKSB7XG4gICAgICAgICAgdGhyb3cgZTI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihlMik7XG4gICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiVW5oYW5kbGVkIGVycm9yOlwiICsgZTIpO1xuICAgICAgICB9XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGNvbm5lY3RFbWJlZGRlZFdhbGxldChlbWJlZGRlZFdhbGxldCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBjb25zdCBjb25uZWN0ID0gKHBhcmFtZXRlcnMpID0+IHtcbiAgICAgICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhlbWJlZGRlZFdhbGxldCk7XG4gICAgICAgIHRoaXMuY29ubmVjdG9yLmNvbm5lY3QoeyBqc0JyaWRnZUtleTogZW1iZWRkZWRXYWxsZXQuanNCcmlkZ2VLZXkgfSwgcGFyYW1ldGVycyk7XG4gICAgICB9O1xuICAgICAgY29uc3QgYWRkaXRpb25hbFJlcXVlc3QgPSBhcHBTdGF0ZS5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnM7XG4gICAgICBpZiAoKGFkZGl0aW9uYWxSZXF1ZXN0ID09IG51bGwgPyB2b2lkIDAgOiBhZGRpdGlvbmFsUmVxdWVzdC5zdGF0ZSkgPT09IFwibG9hZGluZ1wiKSB7XG4gICAgICAgIHRoaXMuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2sgPSBjb25uZWN0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29ubmVjdChhZGRpdGlvbmFsUmVxdWVzdCA9PSBudWxsID8gdm9pZCAwIDogYWRkaXRpb25hbFJlcXVlc3QudmFsdWUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHlpZWxkIHRoaXMud2FpdEZvcldhbGxldENvbm5lY3Rpb24oe1xuICAgICAgICBpZ25vcmVFcnJvcnM6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBjb25uZWN0RXh0ZXJuYWxXYWxsZXQoKSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIGNvbnN0IGFib3J0Q29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICAgIHdpZGdldENvbnRyb2xsZXIub3BlbldhbGxldHNNb2RhbCgpO1xuICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSB0aGlzLm9uTW9kYWxTdGF0ZUNoYW5nZSgoc3RhdGUpID0+IHtcbiAgICAgICAgY29uc3QgeyBzdGF0dXMsIGNsb3NlUmVhc29uIH0gPSBzdGF0ZTtcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gXCJvcGVuZWRcIikge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICBpZiAoY2xvc2VSZWFzb24gPT09IFwiYWN0aW9uLWNhbmNlbGxlZFwiKSB7XG4gICAgICAgICAgYWJvcnRDb250cm9sbGVyLmFib3J0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHlpZWxkIHRoaXMud2FpdEZvcldhbGxldENvbm5lY3Rpb24oe1xuICAgICAgICBpZ25vcmVFcnJvcnM6IHRydWUsXG4gICAgICAgIHNpZ25hbDogYWJvcnRDb250cm9sbGVyLnNpZ25hbFxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgd2FpdEZvcldhbGxldENvbm5lY3Rpb24ob3B0aW9ucykge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uU3RhcnRlZCgpO1xuICAgICAgICBjb25zdCB7IGlnbm9yZUVycm9ycyA9IGZhbHNlLCBzaWduYWwgPSBudWxsIH0gPSBvcHRpb25zO1xuICAgICAgICBpZiAoc2lnbmFsICYmIHNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvbkVycm9yKFwiQ29ubmVjdGlvbiB3YXMgY2FuY2VsbGVkXCIpO1xuICAgICAgICAgIHJldHVybiByZWplY3QobmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiV2FsbGV0IHdhcyBub3QgY29ubmVjdGVkXCIpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvblN0YXR1c0NoYW5nZUhhbmRsZXIgPSAod2FsbGV0KSA9PiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgaWYgKCF3YWxsZXQpIHtcbiAgICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25FcnJvcihcIkNvbm5lY3Rpb24gd2FzIGNhbmNlbGxlZFwiKTtcbiAgICAgICAgICAgIGlmIChpZ25vcmVFcnJvcnMpIHtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIHJlamVjdChuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXCJXYWxsZXQgd2FzIG5vdCBjb25uZWN0ZWRcIikpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uQ29tcGxldGVkKHdhbGxldCk7XG4gICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgcmVzb2x2ZSh3YWxsZXQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IG9uRXJyb3JzSGFuZGxlciA9IChyZWFzb24pID0+IHtcbiAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uRXJyb3IocmVhc29uLm1lc3NhZ2UpO1xuICAgICAgICAgIGlmIChpZ25vcmVFcnJvcnMpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICByZWplY3QocmVhc29uKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSB0aGlzLm9uU3RhdHVzQ2hhbmdlKFxuICAgICAgICAgICh3YWxsZXQpID0+IG9uU3RhdHVzQ2hhbmdlSGFuZGxlcih3YWxsZXQpLFxuICAgICAgICAgIChyZWFzb24pID0+IG9uRXJyb3JzSGFuZGxlcihyZWFzb24pXG4gICAgICAgICk7XG4gICAgICAgIGlmIChzaWduYWwpIHtcbiAgICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgICAgIFwiYWJvcnRcIixcbiAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgICAgcmVqZWN0KG5ldyBUb25Db25uZWN0VUlFcnJvcihcIldhbGxldCB3YXMgbm90IGNvbm5lY3RlZFwiKSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgeyBvbmNlOiB0cnVlIH1cbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICB3YWl0Rm9yU2VuZFRyYW5zYWN0aW9uKG9wdGlvbnMsIG9uUmVxdWVzdFNlbnQpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgY29uc3QgeyB0cmFuc2FjdGlvbiwgc2lnbmFsIH0gPSBvcHRpb25zO1xuICAgICAgICBpZiAoc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tUcmFuc2FjdGlvblNpZ25pbmdGYWlsZWQoXG4gICAgICAgICAgICB0aGlzLndhbGxldCxcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uLFxuICAgICAgICAgICAgXCJUcmFuc2FjdGlvbiB3YXMgY2FuY2VsbGVkXCJcbiAgICAgICAgICApO1xuICAgICAgICAgIHJldHVybiByZWplY3QobmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiVHJhbnNhY3Rpb24gd2FzIG5vdCBzZW50XCIpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvblRyYW5zYWN0aW9uSGFuZGxlciA9ICh0cmFuc2FjdGlvbjIpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICByZXNvbHZlKHRyYW5zYWN0aW9uMik7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBvbkVycm9yc0hhbmRsZXIgPSAocmVhc29uKSA9PiB7XG4gICAgICAgICAgcmVqZWN0KHJlYXNvbik7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IG9uQ2FuY2VsZWRIYW5kbGVyID0gKCkgPT4ge1xuICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja1RyYW5zYWN0aW9uU2lnbmluZ0ZhaWxlZChcbiAgICAgICAgICAgIHRoaXMud2FsbGV0LFxuICAgICAgICAgICAgdHJhbnNhY3Rpb24sXG4gICAgICAgICAgICBcIlRyYW5zYWN0aW9uIHdhcyBjYW5jZWxsZWRcIlxuICAgICAgICAgICk7XG4gICAgICAgICAgcmVqZWN0KG5ldyBUb25Db25uZWN0VUlFcnJvcihcIlRyYW5zYWN0aW9uIHdhcyBub3Qgc2VudFwiKSk7XG4gICAgICAgIH07XG4gICAgICAgIHNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25DYW5jZWxlZEhhbmRsZXIsIHsgb25jZTogdHJ1ZSB9KTtcbiAgICAgICAgdGhpcy5jb25uZWN0b3Iuc2VuZFRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uLCB7IG9uUmVxdWVzdFNlbnQsIHNpZ25hbCB9KS50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICBzaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQ2FuY2VsZWRIYW5kbGVyKTtcbiAgICAgICAgICByZXR1cm4gb25UcmFuc2FjdGlvbkhhbmRsZXIocmVzdWx0KTtcbiAgICAgICAgfSkuY2F0Y2goKHJlYXNvbikgPT4ge1xuICAgICAgICAgIHNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25DYW5jZWxlZEhhbmRsZXIpO1xuICAgICAgICAgIHJldHVybiBvbkVycm9yc0hhbmRsZXIocmVhc29uKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBvblRyYW5zYWN0aW9uTW9kYWxTdGF0ZUNoYW5nZShvbkNoYW5nZSkge1xuICAgIHJldHVybiB0aGlzLnRyYW5zYWN0aW9uTW9kYWwub25TdGF0ZUNoYW5nZShvbkNoYW5nZSk7XG4gIH1cbiAgc3Vic2NyaWJlVG9XYWxsZXRDaGFuZ2UoKSB7XG4gICAgdGhpcy5jb25uZWN0b3Iub25TdGF0dXNDaGFuZ2UoKHdhbGxldCkgPT4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIGlmICh3YWxsZXQpIHtcbiAgICAgICAgeWllbGQgdGhpcy51cGRhdGVXYWxsZXRJbmZvKHdhbGxldCk7XG4gICAgICAgIHRoaXMuc2V0UHJlZmVycmVkV2FsbGV0QXBwTmFtZSgoKF9hMiA9IHRoaXMud2FsbGV0SW5mbykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5hcHBOYW1lKSB8fCB3YWxsZXQuZGV2aWNlLmFwcE5hbWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy53YWxsZXRJbmZvU3RvcmFnZS5yZW1vdmVXYWxsZXRJbmZvKCk7XG4gICAgICB9XG4gICAgfSkpO1xuICB9XG4gIHNldFByZWZlcnJlZFdhbGxldEFwcE5hbWUodmFsdWUpIHtcbiAgICB0aGlzLnByZWZlcnJlZFdhbGxldFN0b3JhZ2Uuc2V0UHJlZmVycmVkV2FsbGV0QXBwTmFtZSh2YWx1ZSk7XG4gICAgc2V0QXBwU3RhdGUoeyBwcmVmZXJyZWRXYWxsZXRBcHBOYW1lOiB2YWx1ZSB9KTtcbiAgfVxuICBnZXRTZWxlY3RlZFdhbGxldEluZm8od2FsbGV0KSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIGxldCBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvMiA9IHdpZGdldENvbnRyb2xsZXIuZ2V0U2VsZWN0ZWRXYWxsZXRJbmZvKCk7XG4gICAgICBpZiAoIWxhc3RTZWxlY3RlZFdhbGxldEluZm8yKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuICAgICAgbGV0IGZ1bGxMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvO1xuICAgICAgaWYgKCEoXCJuYW1lXCIgaW4gbGFzdFNlbGVjdGVkV2FsbGV0SW5mbzIpKSB7XG4gICAgICAgIGNvbnN0IHdhbGxldHNMaXN0ID0gYXBwbHlXYWxsZXRzTGlzdENvbmZpZ3VyYXRpb24oXG4gICAgICAgICAgeWllbGQgdGhpcy53YWxsZXRzTGlzdCxcbiAgICAgICAgICBhcHBTdGF0ZS53YWxsZXRzTGlzdENvbmZpZ3VyYXRpb25cbiAgICAgICAgKTtcbiAgICAgICAgY29uc3Qgd2FsbGV0SW5mbyA9IHdhbGxldHNMaXN0LmZpbmQoKGl0ZW0pID0+IGVxV2FsbGV0TmFtZShpdGVtLCB3YWxsZXQuZGV2aWNlLmFwcE5hbWUpKTtcbiAgICAgICAgaWYgKCF3YWxsZXRJbmZvKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFxuICAgICAgICAgICAgYENhbm5vdCBmaW5kIFdhbGxldEluZm8gZm9yIHRoZSAnJHt3YWxsZXQuZGV2aWNlLmFwcE5hbWV9JyB3YWxsZXRgXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBmdWxsTGFzdFNlbGVjdGVkV2FsbGV0SW5mbyA9IF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCB3YWxsZXRJbmZvKSwgbGFzdFNlbGVjdGVkV2FsbGV0SW5mbzIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZnVsbExhc3RTZWxlY3RlZFdhbGxldEluZm8gPSBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvMjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmdWxsTGFzdFNlbGVjdGVkV2FsbGV0SW5mbztcbiAgICB9KTtcbiAgfVxuICB1cGRhdGVXYWxsZXRJbmZvKHdhbGxldCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBjb25zdCBzZWxlY3RlZFdhbGxldEluZm8gPSB5aWVsZCB0aGlzLmdldFNlbGVjdGVkV2FsbGV0SW5mbyh3YWxsZXQpO1xuICAgICAgaWYgKHNlbGVjdGVkV2FsbGV0SW5mbykge1xuICAgICAgICB0aGlzLndhbGxldEluZm8gPSBzZWxlY3RlZFdhbGxldEluZm87XG4gICAgICAgIHRoaXMud2FsbGV0SW5mb1N0b3JhZ2Uuc2V0V2FsbGV0SW5mbyhzZWxlY3RlZFdhbGxldEluZm8pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBzdG9yZWRXYWxsZXRJbmZvID0gdGhpcy53YWxsZXRJbmZvU3RvcmFnZS5nZXRXYWxsZXRJbmZvKCk7XG4gICAgICBpZiAoc3RvcmVkV2FsbGV0SW5mbykge1xuICAgICAgICB0aGlzLndhbGxldEluZm8gPSBzdG9yZWRXYWxsZXRJbmZvO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLndhbGxldEluZm8gPSAoeWllbGQgdGhpcy53YWxsZXRzTGlzdCkuZmluZChcbiAgICAgICAgKHdhbGxldEluZm8pID0+IGVxV2FsbGV0TmFtZSh3YWxsZXRJbmZvLCB3YWxsZXQuZGV2aWNlLmFwcE5hbWUpXG4gICAgICApIHx8IG51bGw7XG4gICAgfSk7XG4gIH1cbiAgbm9ybWFsaXplV2lkZ2V0Um9vdChyb290SWQpIHtcbiAgICBpZiAoIXJvb3RJZCB8fCAhZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocm9vdElkKSkge1xuICAgICAgcm9vdElkID0gXCJ0Yy13aWRnZXQtcm9vdFwiO1xuICAgICAgY29uc3Qgcm9vdEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgcm9vdEVsZW1lbnQuaWQgPSByb290SWQ7XG4gICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHJvb3RFbGVtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHJvb3RJZDtcbiAgfVxuICBjaGVja0J1dHRvblJvb3RFeGlzdChidXR0b25Sb290SWQpIHtcbiAgICBpZiAoYnV0dG9uUm9vdElkID09IG51bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZChidXR0b25Sb290SWQpKSB7XG4gICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoYCR7YnV0dG9uUm9vdElkfSBlbGVtZW50IG5vdCBmb3VuZCBpbiB0aGUgZG9jdW1lbnQuYCk7XG4gICAgfVxuICB9XG4gIGdldE1vZGFsc0FuZE5vdGlmaWNhdGlvbnNDb25maWd1cmF0aW9uKG9wdGlvbnMpIHtcbiAgICB2YXIgX2EyLCBfYjIsIF9jMiwgX2QyLCBfZTIsIF9mMjtcbiAgICBjb25zdCBhbGxBY3Rpb25zID0gW1xuICAgICAgXCJiZWZvcmVcIixcbiAgICAgIFwic3VjY2Vzc1wiLFxuICAgICAgXCJlcnJvclwiXG4gICAgXTtcbiAgICBsZXQgbm90aWZpY2F0aW9uczIgPSBhbGxBY3Rpb25zO1xuICAgIGlmICgoKF9hMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYTIubm90aWZpY2F0aW9ucykgJiYgKChfYjIgPSB0aGlzLmFjdGlvbnNDb25maWd1cmF0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2IyLm5vdGlmaWNhdGlvbnMpICE9PSBcImFsbFwiKSB7XG4gICAgICBub3RpZmljYXRpb25zMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24ubm90aWZpY2F0aW9ucztcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubm90aWZpY2F0aW9ucykge1xuICAgICAgaWYgKG9wdGlvbnMubm90aWZpY2F0aW9ucyA9PT0gXCJhbGxcIikge1xuICAgICAgICBub3RpZmljYXRpb25zMiA9IGFsbEFjdGlvbnM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub3RpZmljYXRpb25zMiA9IG9wdGlvbnMubm90aWZpY2F0aW9ucztcbiAgICAgIH1cbiAgICB9XG4gICAgbGV0IG1vZGFscyA9IFtcImJlZm9yZVwiXTtcbiAgICBpZiAoKF9jMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYzIubW9kYWxzKSB7XG4gICAgICBpZiAodGhpcy5hY3Rpb25zQ29uZmlndXJhdGlvbi5tb2RhbHMgPT09IFwiYWxsXCIpIHtcbiAgICAgICAgbW9kYWxzID0gYWxsQWN0aW9ucztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1vZGFscyA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24ubW9kYWxzO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5tb2RhbHMpIHtcbiAgICAgIGlmIChvcHRpb25zLm1vZGFscyA9PT0gXCJhbGxcIikge1xuICAgICAgICBtb2RhbHMgPSBhbGxBY3Rpb25zO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbW9kYWxzID0gb3B0aW9ucy5tb2RhbHM7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHJldHVyblN0cmF0ZWd5ID0gKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpIHx8ICgoX2QyID0gdGhpcy5hY3Rpb25zQ29uZmlndXJhdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9kMi5yZXR1cm5TdHJhdGVneSkgfHwgXCJiYWNrXCI7XG4gICAgY29uc3QgdHdhUmV0dXJuVXJsID0gKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMudHdhUmV0dXJuVXJsKSB8fCAoKF9lMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfZTIudHdhUmV0dXJuVXJsKTtcbiAgICBsZXQgc2tpcFJlZGlyZWN0VG9XYWxsZXQgPSAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5za2lwUmVkaXJlY3RUb1dhbGxldCkgfHwgKChfZjIgPSB0aGlzLmFjdGlvbnNDb25maWd1cmF0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2YyLnNraXBSZWRpcmVjdFRvV2FsbGV0KSB8fCBcImlvc1wiO1xuICAgIGlmIChpc0luVE1BKCkpIHtcbiAgICAgIHNraXBSZWRpcmVjdFRvV2FsbGV0ID0gXCJuZXZlclwiO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgbm90aWZpY2F0aW9uczogbm90aWZpY2F0aW9uczIsXG4gICAgICBtb2RhbHMsXG4gICAgICByZXR1cm5TdHJhdGVneSxcbiAgICAgIHR3YVJldHVyblVybCxcbiAgICAgIHNraXBSZWRpcmVjdFRvV2FsbGV0XG4gICAgfTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgVEhFTUUsXG4gIFRvbkNvbm5lY3RVSSxcbiAgVG9uQ29ubmVjdFVJRXJyb3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tonconnect+ui@2.0.11_encoding@0.1.13/node_modules/@tonconnect/ui/lib/index.mjs\n");

/***/ })

};
;