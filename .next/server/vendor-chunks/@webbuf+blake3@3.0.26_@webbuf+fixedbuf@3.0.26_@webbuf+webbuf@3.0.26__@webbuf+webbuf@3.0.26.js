"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26";
exports.ids = ["vendor-chunks/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/index.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/index.js ***!
  \*****************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blake3Hash: () => (/* binding */ blake3Hash),\n/* harmony export */   blake3Mac: () => (/* binding */ blake3Mac),\n/* harmony export */   doubleBlake3Hash: () => (/* binding */ doubleBlake3Hash)\n/* harmony export */ });\n/* harmony import */ var _rs_webbuf_blake3_inline_base64_webbuf_blake3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rs-webbuf_blake3-inline-base64/webbuf_blake3.js */ \"(rsc)/./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3.js\");\n/* harmony import */ var _webbuf_webbuf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @webbuf/webbuf */ \"(rsc)/./node_modules/.pnpm/@webbuf+webbuf@3.0.26/node_modules/@webbuf/webbuf/dist/index.js\");\n/* harmony import */ var _webbuf_fixedbuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @webbuf/fixedbuf */ \"(rsc)/./node_modules/.pnpm/@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26/node_modules/@webbuf/fixedbuf/dist/index.js\");\n\n\n\nfunction blake3Hash(buf) {\n    const hash = (0,_rs_webbuf_blake3_inline_base64_webbuf_blake3_js__WEBPACK_IMPORTED_MODULE_0__.blake3_hash)(buf);\n    return _webbuf_fixedbuf__WEBPACK_IMPORTED_MODULE_2__.FixedBuf.fromBuf(32, _webbuf_webbuf__WEBPACK_IMPORTED_MODULE_1__.WebBuf.fromUint8Array(hash));\n}\nfunction doubleBlake3Hash(buf) {\n    const hash = (0,_rs_webbuf_blake3_inline_base64_webbuf_blake3_js__WEBPACK_IMPORTED_MODULE_0__.double_blake3_hash)(buf);\n    return _webbuf_fixedbuf__WEBPACK_IMPORTED_MODULE_2__.FixedBuf.fromBuf(32, _webbuf_webbuf__WEBPACK_IMPORTED_MODULE_1__.WebBuf.fromUint8Array(hash));\n}\nfunction blake3Mac(key, message) {\n    const mac = (0,_rs_webbuf_blake3_inline_base64_webbuf_blake3_js__WEBPACK_IMPORTED_MODULE_0__.blake3_mac)(key.buf, message);\n    return _webbuf_fixedbuf__WEBPACK_IMPORTED_MODULE_2__.FixedBuf.fromBuf(32, _webbuf_webbuf__WEBPACK_IMPORTED_MODULE_1__.WebBuf.fromUint8Array(mac));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHdlYmJ1ZitibGFrZTNAMy4wLjI2X0B3ZWJidWYrZml4ZWRidWZAMy4wLjI2X0B3ZWJidWYrd2ViYnVmQDMuMC4yNl9fQHdlYmJ1Zit3ZWJidWZAMy4wLjI2L25vZGVfbW9kdWxlcy9Ad2ViYnVmL2JsYWtlMy9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpSDtBQUN6RTtBQUNJO0FBQ3JDO0FBQ1AsaUJBQWlCLDZGQUFXO0FBQzVCLFdBQVcsc0RBQVEsYUFBYSxrREFBTTtBQUN0QztBQUNPO0FBQ1AsaUJBQWlCLG9HQUFrQjtBQUNuQyxXQUFXLHNEQUFRLGFBQWEsa0RBQU07QUFDdEM7QUFDTztBQUNQLGdCQUFnQiw0RkFBVTtBQUMxQixXQUFXLHNEQUFRLGFBQWEsa0RBQU07QUFDdEMiLCJzb3VyY2VzIjpbIi9ob21lL2FidWJha3JqaW1vaC9EZXNrdG9wL0NvZGluZyBTdHVmZnMvaGFja2F0aG9uL3NlY3JldC1uZXR3b3JrL21lbWVBaV9jb2luX2NyZWF0b3IvYWktbWVtZS1jb2luLWNyZWF0b3Ivbm9kZV9tb2R1bGVzLy5wbnBtL0B3ZWJidWYrYmxha2UzQDMuMC4yNl9Ad2ViYnVmK2ZpeGVkYnVmQDMuMC4yNl9Ad2ViYnVmK3dlYmJ1ZkAzLjAuMjZfX0B3ZWJidWYrd2ViYnVmQDMuMC4yNi9ub2RlX21vZHVsZXMvQHdlYmJ1Zi9ibGFrZTMvZGlzdC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBibGFrZTNfaGFzaCwgZG91YmxlX2JsYWtlM19oYXNoLCBibGFrZTNfbWFjLCB9IGZyb20gXCIuL3JzLXdlYmJ1Zl9ibGFrZTMtaW5saW5lLWJhc2U2NC93ZWJidWZfYmxha2UzLmpzXCI7XG5pbXBvcnQgeyBXZWJCdWYgfSBmcm9tIFwiQHdlYmJ1Zi93ZWJidWZcIjtcbmltcG9ydCB7IEZpeGVkQnVmIH0gZnJvbSBcIkB3ZWJidWYvZml4ZWRidWZcIjtcbmV4cG9ydCBmdW5jdGlvbiBibGFrZTNIYXNoKGJ1Zikge1xuICAgIGNvbnN0IGhhc2ggPSBibGFrZTNfaGFzaChidWYpO1xuICAgIHJldHVybiBGaXhlZEJ1Zi5mcm9tQnVmKDMyLCBXZWJCdWYuZnJvbVVpbnQ4QXJyYXkoaGFzaCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRvdWJsZUJsYWtlM0hhc2goYnVmKSB7XG4gICAgY29uc3QgaGFzaCA9IGRvdWJsZV9ibGFrZTNfaGFzaChidWYpO1xuICAgIHJldHVybiBGaXhlZEJ1Zi5mcm9tQnVmKDMyLCBXZWJCdWYuZnJvbVVpbnQ4QXJyYXkoaGFzaCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGJsYWtlM01hYyhrZXksIG1lc3NhZ2UpIHtcbiAgICBjb25zdCBtYWMgPSBibGFrZTNfbWFjKGtleS5idWYsIG1lc3NhZ2UpO1xuICAgIHJldHVybiBGaXhlZEJ1Zi5mcm9tQnVmKDMyLCBXZWJCdWYuZnJvbVVpbnQ4QXJyYXkobWFjKSk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3.js":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3.js ***!
  \********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __wbg_set_wasm: () => (/* reexport safe */ _webbuf_blake3_bg_js__WEBPACK_IMPORTED_MODULE_1__.__wbg_set_wasm),\n/* harmony export */   __wbindgen_string_new: () => (/* reexport safe */ _webbuf_blake3_bg_js__WEBPACK_IMPORTED_MODULE_1__.__wbindgen_string_new),\n/* harmony export */   blake3_hash: () => (/* reexport safe */ _webbuf_blake3_bg_js__WEBPACK_IMPORTED_MODULE_1__.blake3_hash),\n/* harmony export */   blake3_mac: () => (/* reexport safe */ _webbuf_blake3_bg_js__WEBPACK_IMPORTED_MODULE_1__.blake3_mac),\n/* harmony export */   double_blake3_hash: () => (/* reexport safe */ _webbuf_blake3_bg_js__WEBPACK_IMPORTED_MODULE_1__.double_blake3_hash)\n/* harmony export */ });\n/* harmony import */ var _webbuf_blake3_bg_wasm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webbuf_blake3_bg.wasm.js */ \"(rsc)/./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.wasm.js\");\n/* harmony import */ var _webbuf_blake3_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webbuf_blake3_bg.js */ \"(rsc)/./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.js\");\n\n\n\n(0,_webbuf_blake3_bg_js__WEBPACK_IMPORTED_MODULE_1__.__wbg_set_wasm)(_webbuf_blake3_bg_wasm_js__WEBPACK_IMPORTED_MODULE_0__.wasm);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHdlYmJ1ZitibGFrZTNAMy4wLjI2X0B3ZWJidWYrZml4ZWRidWZAMy4wLjI2X0B3ZWJidWYrd2ViYnVmQDMuMC4yNl9fQHdlYmJ1Zit3ZWJidWZAMy4wLjI2L25vZGVfbW9kdWxlcy9Ad2ViYnVmL2JsYWtlMy9kaXN0L3JzLXdlYmJ1Zl9ibGFrZTMtaW5saW5lLWJhc2U2NC93ZWJidWZfYmxha2UzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBa0Q7QUFDWjtBQUNpQjtBQUN2RCxvRUFBYyxDQUFDLDJEQUFJIiwic291cmNlcyI6WyIvaG9tZS9hYnViYWtyamltb2gvRGVza3RvcC9Db2RpbmcgU3R1ZmZzL2hhY2thdGhvbi9zZWNyZXQtbmV0d29yay9tZW1lQWlfY29pbl9jcmVhdG9yL2FpLW1lbWUtY29pbi1jcmVhdG9yL25vZGVfbW9kdWxlcy8ucG5wbS9Ad2ViYnVmK2JsYWtlM0AzLjAuMjZfQHdlYmJ1ZitmaXhlZGJ1ZkAzLjAuMjZfQHdlYmJ1Zit3ZWJidWZAMy4wLjI2X19Ad2ViYnVmK3dlYmJ1ZkAzLjAuMjYvbm9kZV9tb2R1bGVzL0B3ZWJidWYvYmxha2UzL2Rpc3QvcnMtd2ViYnVmX2JsYWtlMy1pbmxpbmUtYmFzZTY0L3dlYmJ1Zl9ibGFrZTMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd2FzbSB9IGZyb20gXCIuL3dlYmJ1Zl9ibGFrZTNfYmcud2FzbS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vd2ViYnVmX2JsYWtlM19iZy5qc1wiO1xuaW1wb3J0IHsgX193Ymdfc2V0X3dhc20gfSBmcm9tIFwiLi93ZWJidWZfYmxha2UzX2JnLmpzXCI7XG5fX3diZ19zZXRfd2FzbSh3YXNtKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __wbg_set_wasm: () => (/* binding */ __wbg_set_wasm),\n/* harmony export */   __wbindgen_string_new: () => (/* binding */ __wbindgen_string_new),\n/* harmony export */   blake3_hash: () => (/* binding */ blake3_hash),\n/* harmony export */   blake3_mac: () => (/* binding */ blake3_mac),\n/* harmony export */   double_blake3_hash: () => (/* binding */ double_blake3_hash)\n/* harmony export */ });\nlet wasm;\nfunction __wbg_set_wasm(val) {\n    wasm = val;\n}\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nlet cachedUint8ArrayMemory0 = null;\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\nconst heap = new Array(128).fill(undefined);\nheap.push(undefined, null, true, false);\nlet heap_next = heap.length;\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length)\n        heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n    heap[idx] = obj;\n    return idx;\n}\nlet WASM_VECTOR_LEN = 0;\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8ArrayMemory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\nlet cachedDataViewMemory0 = null;\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\nfunction getObject(idx) { return heap[idx]; }\nfunction dropObject(idx) {\n    if (idx < 132)\n        return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nfunction blake3_hash(data) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.blake3_hash(retptr, ptr0, len0);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        if (r3) {\n            throw takeObject(r2);\n        }\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nfunction double_blake3_hash(data) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.double_blake3_hash(retptr, ptr0, len0);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        if (r3) {\n            throw takeObject(r2);\n        }\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n * @param {Uint8Array} key\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nfunction blake3_mac(key, data) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(key, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.blake3_mac(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n        var r3 = getDataViewMemory0().getInt32(retptr + 4 * 3, true);\n        if (r3) {\n            throw takeObject(r2);\n        }\n        var v3 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v3;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\nfunction __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.wasm.js":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.wasm.js ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wasm: () => (/* binding */ wasm)\n/* harmony export */ });\n/* harmony import */ var _webbuf_blake3_bg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webbuf_blake3_bg.js */ \"(rsc)/./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.js\");\n\nconst wasmBase64 = \"\";\nconst wasmBinary = Uint8Array.from(atob(wasmBase64), c => c.charCodeAt(0));\nconst wasmModule = new WebAssembly.Module(wasmBinary);\nconst importObject = { './webbuf_blake3_bg.js': _webbuf_blake3_bg_js__WEBPACK_IMPORTED_MODULE_0__ };\nconst wasm = new WebAssembly.Instance(wasmModule, importObject).exports;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26/node_modules/@webbuf/blake3/dist/rs-webbuf_blake3-inline-base64/webbuf_blake3_bg.wasm.js\n");

/***/ })

};
;