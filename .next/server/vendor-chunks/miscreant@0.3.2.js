"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/miscreant@0.3.2";
exports.ids = ["vendor-chunks/miscreant@0.3.2"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/aead.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/aead.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst webcrypto_1 = __webpack_require__(/*! ./providers/webcrypto */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto.js\");\nconst siv_1 = __webpack_require__(/*! ./siv */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/siv.js\");\n/** AEAD interface provider for ISIVLike types */\nclass AEAD {\n    /** Create a new AEAD instance with the given key */\n    static importKey(keyData, alg, provider = new webcrypto_1.WebCryptoProvider()) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new AEAD(yield siv_1.SIV.importKey(keyData, alg, provider));\n        });\n    }\n    constructor(siv) {\n        this._siv = siv;\n    }\n    /** Encrypt and authenticate data using AES-SIV */\n    seal(plaintext, nonce, associatedData = new Uint8Array(0)) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._siv.seal(plaintext, [associatedData, nonce]);\n        });\n    }\n    /** Decrypt and authenticate data using AES-SIV */\n    open(ciphertext, nonce, associatedData = new Uint8Array(0)) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._siv.open(ciphertext, [associatedData, nonce]);\n        });\n    }\n    /** Make a best effort to wipe memory used by this instance */\n    clear() {\n        this._siv.clear();\n        return this;\n    }\n}\nexports.AEAD = AEAD;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9hZWFkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQyxpRUFBaUUsd0JBQXdCO0FBQ3pIO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixtQkFBTyxDQUFDLCtIQUF1QjtBQUNuRCxjQUFjLG1CQUFPLENBQUMsK0ZBQU87QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkiLCJzb3VyY2VzIjpbIi9ob21lL2FidWJha3JqaW1vaC9EZXNrdG9wL0NvZGluZyBTdHVmZnMvaGFja2F0aG9uL3NlY3JldC1uZXR3b3JrL21lbWVBaV9jb2luX2NyZWF0b3IvYWktbWVtZS1jb2luLWNyZWF0b3Ivbm9kZV9tb2R1bGVzLy5wbnBtL21pc2NyZWFudEAwLjMuMi9ub2RlX21vZHVsZXMvbWlzY3JlYW50L3JlbGVhc2UvYWVhZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUocmVzdWx0LnZhbHVlKTsgfSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3Qgd2ViY3J5cHRvXzEgPSByZXF1aXJlKFwiLi9wcm92aWRlcnMvd2ViY3J5cHRvXCIpO1xuY29uc3Qgc2l2XzEgPSByZXF1aXJlKFwiLi9zaXZcIik7XG4vKiogQUVBRCBpbnRlcmZhY2UgcHJvdmlkZXIgZm9yIElTSVZMaWtlIHR5cGVzICovXG5jbGFzcyBBRUFEIHtcbiAgICAvKiogQ3JlYXRlIGEgbmV3IEFFQUQgaW5zdGFuY2Ugd2l0aCB0aGUgZ2l2ZW4ga2V5ICovXG4gICAgc3RhdGljIGltcG9ydEtleShrZXlEYXRhLCBhbGcsIHByb3ZpZGVyID0gbmV3IHdlYmNyeXB0b18xLldlYkNyeXB0b1Byb3ZpZGVyKCkpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQUVBRCh5aWVsZCBzaXZfMS5TSVYuaW1wb3J0S2V5KGtleURhdGEsIGFsZywgcHJvdmlkZXIpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKHNpdikge1xuICAgICAgICB0aGlzLl9zaXYgPSBzaXY7XG4gICAgfVxuICAgIC8qKiBFbmNyeXB0IGFuZCBhdXRoZW50aWNhdGUgZGF0YSB1c2luZyBBRVMtU0lWICovXG4gICAgc2VhbChwbGFpbnRleHQsIG5vbmNlLCBhc3NvY2lhdGVkRGF0YSA9IG5ldyBVaW50OEFycmF5KDApKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc2l2LnNlYWwocGxhaW50ZXh0LCBbYXNzb2NpYXRlZERhdGEsIG5vbmNlXSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKiogRGVjcnlwdCBhbmQgYXV0aGVudGljYXRlIGRhdGEgdXNpbmcgQUVTLVNJViAqL1xuICAgIG9wZW4oY2lwaGVydGV4dCwgbm9uY2UsIGFzc29jaWF0ZWREYXRhID0gbmV3IFVpbnQ4QXJyYXkoMCkpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zaXYub3BlbihjaXBoZXJ0ZXh0LCBbYXNzb2NpYXRlZERhdGEsIG5vbmNlXSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKiogTWFrZSBhIGJlc3QgZWZmb3J0IHRvIHdpcGUgbWVtb3J5IHVzZWQgYnkgdGhpcyBpbnN0YW5jZSAqL1xuICAgIGNsZWFyKCkge1xuICAgICAgICB0aGlzLl9zaXYuY2xlYXIoKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5BRUFEID0gQUVBRDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/aead.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/exceptions.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/exceptions.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// tslint:disable:max-classes-per-file\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/** Thrown when ciphertext fails to verify as authentic */\nclass IntegrityError extends Error {\n    constructor(m) {\n        super(m);\n        Object.setPrototypeOf(this, IntegrityError.prototype);\n    }\n}\nexports.IntegrityError = IntegrityError;\n/** Thrown when we attempt to use an unsupported crypto algorithm via WebCrypto */\nclass NotImplementedError extends Error {\n    constructor(m) {\n        super(m);\n        Object.setPrototypeOf(this, NotImplementedError.prototype);\n    }\n}\nexports.NotImplementedError = NotImplementedError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9leGNlcHRpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIiLCJzb3VyY2VzIjpbIi9ob21lL2FidWJha3JqaW1vaC9EZXNrdG9wL0NvZGluZyBTdHVmZnMvaGFja2F0aG9uL3NlY3JldC1uZXR3b3JrL21lbWVBaV9jb2luX2NyZWF0b3IvYWktbWVtZS1jb2luLWNyZWF0b3Ivbm9kZV9tb2R1bGVzLy5wbnBtL21pc2NyZWFudEAwLjMuMi9ub2RlX21vZHVsZXMvbWlzY3JlYW50L3JlbGVhc2UvZXhjZXB0aW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIHRzbGludDpkaXNhYmxlOm1heC1jbGFzc2VzLXBlci1maWxlXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKiogVGhyb3duIHdoZW4gY2lwaGVydGV4dCBmYWlscyB0byB2ZXJpZnkgYXMgYXV0aGVudGljICovXG5jbGFzcyBJbnRlZ3JpdHlFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtKSB7XG4gICAgICAgIHN1cGVyKG0pO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgSW50ZWdyaXR5RXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG59XG5leHBvcnRzLkludGVncml0eUVycm9yID0gSW50ZWdyaXR5RXJyb3I7XG4vKiogVGhyb3duIHdoZW4gd2UgYXR0ZW1wdCB0byB1c2UgYW4gdW5zdXBwb3J0ZWQgY3J5cHRvIGFsZ29yaXRobSB2aWEgV2ViQ3J5cHRvICovXG5jbGFzcyBOb3RJbXBsZW1lbnRlZEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG0pIHtcbiAgICAgICAgc3VwZXIobSk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBOb3RJbXBsZW1lbnRlZEVycm9yLnByb3RvdHlwZSk7XG4gICAgfVxufVxuZXhwb3J0cy5Ob3RJbXBsZW1lbnRlZEVycm9yID0gTm90SW1wbGVtZW50ZWRFcnJvcjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/exceptions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/** Exceptions */\n__export(__webpack_require__(/*! ./exceptions */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/exceptions.js\"));\n/** Symmetric encryption APIs */\nvar aead_1 = __webpack_require__(/*! ./aead */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/aead.js\");\nexports.AEAD = aead_1.AEAD;\nvar siv_1 = __webpack_require__(/*! ./siv */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/siv.js\");\nexports.SIV = siv_1.SIV;\n/** STREAM streaming encryption */\nvar stream_1 = __webpack_require__(/*! ./stream */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/stream.js\");\nexports.StreamEncryptor = stream_1.StreamEncryptor;\nexports.StreamDecryptor = stream_1.StreamDecryptor;\n/** MAC functions */\nvar cmac_1 = __webpack_require__(/*! ./mac/cmac */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/mac/cmac.js\");\nexports.CMAC = cmac_1.CMAC;\nvar pmac_1 = __webpack_require__(/*! ./mac/pmac */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/mac/pmac.js\");\nexports.PMAC = pmac_1.PMAC;\n/** Crypto providers */\nvar polyfill_1 = __webpack_require__(/*! ./providers/polyfill */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/polyfill.js\");\nexports.PolyfillCryptoProvider = polyfill_1.PolyfillCryptoProvider;\nvar webcrypto_1 = __webpack_require__(/*! ./providers/webcrypto */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto.js\");\nexports.WebCryptoProvider = webcrypto_1.WebCryptoProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBLFNBQVMsbUJBQU8sQ0FBQyw2R0FBYztBQUMvQjtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxpR0FBUTtBQUM3QixZQUFZO0FBQ1osWUFBWSxtQkFBTyxDQUFDLCtGQUFPO0FBQzNCLFdBQVc7QUFDWDtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxxR0FBVTtBQUNqQyx1QkFBdUI7QUFDdkIsdUJBQXVCO0FBQ3ZCO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLHlHQUFZO0FBQ2pDLFlBQVk7QUFDWixhQUFhLG1CQUFPLENBQUMseUdBQVk7QUFDakMsWUFBWTtBQUNaO0FBQ0EsaUJBQWlCLG1CQUFPLENBQUMsNkhBQXNCO0FBQy9DLDhCQUE4QjtBQUM5QixrQkFBa0IsbUJBQU8sQ0FBQywrSEFBdUI7QUFDakQseUJBQXlCIiwic291cmNlcyI6WyIvaG9tZS9hYnViYWtyamltb2gvRGVza3RvcC9Db2RpbmcgU3R1ZmZzL2hhY2thdGhvbi9zZWNyZXQtbmV0d29yay9tZW1lQWlfY29pbl9jcmVhdG9yL2FpLW1lbWUtY29pbi1jcmVhdG9yL25vZGVfbW9kdWxlcy8ucG5wbS9taXNjcmVhbnRAMC4zLjIvbm9kZV9tb2R1bGVzL21pc2NyZWFudC9yZWxlYXNlL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gX19leHBvcnQobSkge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKiBFeGNlcHRpb25zICovXG5fX2V4cG9ydChyZXF1aXJlKFwiLi9leGNlcHRpb25zXCIpKTtcbi8qKiBTeW1tZXRyaWMgZW5jcnlwdGlvbiBBUElzICovXG52YXIgYWVhZF8xID0gcmVxdWlyZShcIi4vYWVhZFwiKTtcbmV4cG9ydHMuQUVBRCA9IGFlYWRfMS5BRUFEO1xudmFyIHNpdl8xID0gcmVxdWlyZShcIi4vc2l2XCIpO1xuZXhwb3J0cy5TSVYgPSBzaXZfMS5TSVY7XG4vKiogU1RSRUFNIHN0cmVhbWluZyBlbmNyeXB0aW9uICovXG52YXIgc3RyZWFtXzEgPSByZXF1aXJlKFwiLi9zdHJlYW1cIik7XG5leHBvcnRzLlN0cmVhbUVuY3J5cHRvciA9IHN0cmVhbV8xLlN0cmVhbUVuY3J5cHRvcjtcbmV4cG9ydHMuU3RyZWFtRGVjcnlwdG9yID0gc3RyZWFtXzEuU3RyZWFtRGVjcnlwdG9yO1xuLyoqIE1BQyBmdW5jdGlvbnMgKi9cbnZhciBjbWFjXzEgPSByZXF1aXJlKFwiLi9tYWMvY21hY1wiKTtcbmV4cG9ydHMuQ01BQyA9IGNtYWNfMS5DTUFDO1xudmFyIHBtYWNfMSA9IHJlcXVpcmUoXCIuL21hYy9wbWFjXCIpO1xuZXhwb3J0cy5QTUFDID0gcG1hY18xLlBNQUM7XG4vKiogQ3J5cHRvIHByb3ZpZGVycyAqL1xudmFyIHBvbHlmaWxsXzEgPSByZXF1aXJlKFwiLi9wcm92aWRlcnMvcG9seWZpbGxcIik7XG5leHBvcnRzLlBvbHlmaWxsQ3J5cHRvUHJvdmlkZXIgPSBwb2x5ZmlsbF8xLlBvbHlmaWxsQ3J5cHRvUHJvdmlkZXI7XG52YXIgd2ViY3J5cHRvXzEgPSByZXF1aXJlKFwiLi9wcm92aWRlcnMvd2ViY3J5cHRvXCIpO1xuZXhwb3J0cy5XZWJDcnlwdG9Qcm92aWRlciA9IHdlYmNyeXB0b18xLldlYkNyeXB0b1Byb3ZpZGVyO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/block.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/block.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/** Type which represents AES blocks */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst constant_time_1 = __webpack_require__(/*! ./constant-time */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/constant-time.js\");\nconst wipe_1 = __webpack_require__(/*! ./wipe */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/wipe.js\");\n/** An AES block (128-bits) */\nclass Block {\n    constructor() {\n        this.data = new Uint8Array(Block.SIZE);\n    }\n    /**\n     * Clear the given array by setting its values to zero.\n     *\n     * WARNING: The fact that it sets bytes to zero can be relied on.\n     *\n     * There is no guarantee that this function makes data disappear from memory,\n     * as runtime implementation can, for example, have copying garbage collector\n     * that will make copies of sensitive data before we wipe it. Or that an\n     * operating system will write our data to swap or sleep image. Another thing\n     * is that an optimizing compiler can remove calls to this function or make it\n     * no-op. There's nothing we can do with it, so we just do our best and hope\n     * that everything will be okay and good will triumph over evil.\n     */\n    clear() {\n        wipe_1.wipe(this.data);\n    }\n    /**\n     * Make a copy of this block, returning a new block\n     */\n    clone() {\n        const ret = new Block();\n        ret.copy(this);\n        return ret;\n    }\n    /** Copy the contents of another block into this one */\n    copy(other) {\n        this.data.set(other.data);\n    }\n    /**\n     * Double a value over GF(2^128):\n     *\n     *     a<<1 if firstbit(a)=0\n     *     (a<<1) ⊕ 0¹²⁰10000111 if firstbit(a)=1\n     */\n    dbl() {\n        let carry = 0;\n        for (let i = Block.SIZE - 1; i >= 0; i--) {\n            const b = (this.data[i] >>> 7) & 0xff;\n            this.data[i] = (this.data[i] << 1) | carry;\n            carry = b;\n        }\n        this.data[Block.SIZE - 1] ^= constant_time_1.select(carry, Block.R, 0);\n        carry = 0;\n    }\n}\n/** Size of a block as used by the AES cipher */\nBlock.SIZE = 16;\n/** Minimal irreducible polynomial for a 128-bit block size */\nBlock.R = 0x87;\nexports[\"default\"] = Block;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9pbnRlcm5hbHMvYmxvY2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0IsbUJBQU8sQ0FBQyw2SEFBaUI7QUFDakQsZUFBZSxtQkFBTyxDQUFDLDJHQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsUUFBUTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9pbnRlcm5hbHMvYmxvY2suanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiogVHlwZSB3aGljaCByZXByZXNlbnRzIEFFUyBibG9ja3MgKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGNvbnN0YW50X3RpbWVfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50LXRpbWVcIik7XG5jb25zdCB3aXBlXzEgPSByZXF1aXJlKFwiLi93aXBlXCIpO1xuLyoqIEFuIEFFUyBibG9jayAoMTI4LWJpdHMpICovXG5jbGFzcyBCbG9jayB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZGF0YSA9IG5ldyBVaW50OEFycmF5KEJsb2NrLlNJWkUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDbGVhciB0aGUgZ2l2ZW4gYXJyYXkgYnkgc2V0dGluZyBpdHMgdmFsdWVzIHRvIHplcm8uXG4gICAgICpcbiAgICAgKiBXQVJOSU5HOiBUaGUgZmFjdCB0aGF0IGl0IHNldHMgYnl0ZXMgdG8gemVybyBjYW4gYmUgcmVsaWVkIG9uLlxuICAgICAqXG4gICAgICogVGhlcmUgaXMgbm8gZ3VhcmFudGVlIHRoYXQgdGhpcyBmdW5jdGlvbiBtYWtlcyBkYXRhIGRpc2FwcGVhciBmcm9tIG1lbW9yeSxcbiAgICAgKiBhcyBydW50aW1lIGltcGxlbWVudGF0aW9uIGNhbiwgZm9yIGV4YW1wbGUsIGhhdmUgY29weWluZyBnYXJiYWdlIGNvbGxlY3RvclxuICAgICAqIHRoYXQgd2lsbCBtYWtlIGNvcGllcyBvZiBzZW5zaXRpdmUgZGF0YSBiZWZvcmUgd2Ugd2lwZSBpdC4gT3IgdGhhdCBhblxuICAgICAqIG9wZXJhdGluZyBzeXN0ZW0gd2lsbCB3cml0ZSBvdXIgZGF0YSB0byBzd2FwIG9yIHNsZWVwIGltYWdlLiBBbm90aGVyIHRoaW5nXG4gICAgICogaXMgdGhhdCBhbiBvcHRpbWl6aW5nIGNvbXBpbGVyIGNhbiByZW1vdmUgY2FsbHMgdG8gdGhpcyBmdW5jdGlvbiBvciBtYWtlIGl0XG4gICAgICogbm8tb3AuIFRoZXJlJ3Mgbm90aGluZyB3ZSBjYW4gZG8gd2l0aCBpdCwgc28gd2UganVzdCBkbyBvdXIgYmVzdCBhbmQgaG9wZVxuICAgICAqIHRoYXQgZXZlcnl0aGluZyB3aWxsIGJlIG9rYXkgYW5kIGdvb2Qgd2lsbCB0cml1bXBoIG92ZXIgZXZpbC5cbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgd2lwZV8xLndpcGUodGhpcy5kYXRhKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWFrZSBhIGNvcHkgb2YgdGhpcyBibG9jaywgcmV0dXJuaW5nIGEgbmV3IGJsb2NrXG4gICAgICovXG4gICAgY2xvbmUoKSB7XG4gICAgICAgIGNvbnN0IHJldCA9IG5ldyBCbG9jaygpO1xuICAgICAgICByZXQuY29weSh0aGlzKTtcbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICB9XG4gICAgLyoqIENvcHkgdGhlIGNvbnRlbnRzIG9mIGFub3RoZXIgYmxvY2sgaW50byB0aGlzIG9uZSAqL1xuICAgIGNvcHkob3RoZXIpIHtcbiAgICAgICAgdGhpcy5kYXRhLnNldChvdGhlci5kYXRhKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRG91YmxlIGEgdmFsdWUgb3ZlciBHRigyXjEyOCk6XG4gICAgICpcbiAgICAgKiAgICAgYTw8MSBpZiBmaXJzdGJpdChhKT0wXG4gICAgICogICAgIChhPDwxKSDiipUgMMK5wrLigbAxMDAwMDExMSBpZiBmaXJzdGJpdChhKT0xXG4gICAgICovXG4gICAgZGJsKCkge1xuICAgICAgICBsZXQgY2FycnkgPSAwO1xuICAgICAgICBmb3IgKGxldCBpID0gQmxvY2suU0laRSAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgICBjb25zdCBiID0gKHRoaXMuZGF0YVtpXSA+Pj4gNykgJiAweGZmO1xuICAgICAgICAgICAgdGhpcy5kYXRhW2ldID0gKHRoaXMuZGF0YVtpXSA8PCAxKSB8IGNhcnJ5O1xuICAgICAgICAgICAgY2FycnkgPSBiO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZGF0YVtCbG9jay5TSVpFIC0gMV0gXj0gY29uc3RhbnRfdGltZV8xLnNlbGVjdChjYXJyeSwgQmxvY2suUiwgMCk7XG4gICAgICAgIGNhcnJ5ID0gMDtcbiAgICB9XG59XG4vKiogU2l6ZSBvZiBhIGJsb2NrIGFzIHVzZWQgYnkgdGhlIEFFUyBjaXBoZXIgKi9cbkJsb2NrLlNJWkUgPSAxNjtcbi8qKiBNaW5pbWFsIGlycmVkdWNpYmxlIHBvbHlub21pYWwgZm9yIGEgMTI4LWJpdCBibG9jayBzaXplICovXG5CbG9jay5SID0gMHg4NztcbmV4cG9ydHMuZGVmYXVsdCA9IEJsb2NrO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/block.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/constant-time.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/constant-time.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * NOTE! Due to the inability to guarantee real constant time evaluation of\n * anything in JavaScript VM, this is module is the best effort.\n */\n/**\n * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.\n *\n * Supports only 32-bit integers, so resultIfOne or resultIfZero are not\n * integers, they'll be converted to them with bitwise operations.\n */\nfunction select(subject, resultIfOne, resultIfZero) {\n    return (~(subject - 1) & resultIfOne) | ((subject - 1) & resultIfZero);\n}\nexports.select = select;\n/**\n * Returns 1 if a and b are of equal length and their contents\n * are equal, or 0 otherwise.\n *\n * Note that unlike in equal(), zero-length inputs are considered\n * the same, so this function will return 1.\n */\nfunction compare(a, b) {\n    if (a.length !== b.length) {\n        return 0;\n    }\n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n        result |= a[i] ^ b[i];\n    }\n    return (1 & ((result - 1) >>> 8));\n}\nexports.compare = compare;\n/**\n * Returns true if a and b are of equal non-zero length,\n * and their contents are equal, or false otherwise.\n *\n * Note that unlike in compare() zero-length inputs are considered\n * _not_ equal, so this function will return false.\n */\nfunction equal(a, b) {\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n    return compare(a, b) !== 0;\n}\nexports.equal = equal;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9pbnRlcm5hbHMvY29uc3RhbnQtdGltZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGNBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhIiwic291cmNlcyI6WyIvaG9tZS9hYnViYWtyamltb2gvRGVza3RvcC9Db2RpbmcgU3R1ZmZzL2hhY2thdGhvbi9zZWNyZXQtbmV0d29yay9tZW1lQWlfY29pbl9jcmVhdG9yL2FpLW1lbWUtY29pbi1jcmVhdG9yL25vZGVfbW9kdWxlcy8ucG5wbS9taXNjcmVhbnRAMC4zLjIvbm9kZV9tb2R1bGVzL21pc2NyZWFudC9yZWxlYXNlL2ludGVybmFscy9jb25zdGFudC10aW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChDKSAyMDE2IERtaXRyeSBDaGVzdG55a2hcbi8vIE1JVCBMaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlIGZvciBkZXRhaWxzLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBOT1RFISBEdWUgdG8gdGhlIGluYWJpbGl0eSB0byBndWFyYW50ZWUgcmVhbCBjb25zdGFudCB0aW1lIGV2YWx1YXRpb24gb2ZcbiAqIGFueXRoaW5nIGluIEphdmFTY3JpcHQgVk0sIHRoaXMgaXMgbW9kdWxlIGlzIHRoZSBiZXN0IGVmZm9ydC5cbiAqL1xuLyoqXG4gKiBSZXR1cm5zIHJlc3VsdElmT25lIGlmIHN1YmplY3QgaXMgMSwgb3IgcmVzdWx0SWZaZXJvIGlmIHN1YmplY3QgaXMgMC5cbiAqXG4gKiBTdXBwb3J0cyBvbmx5IDMyLWJpdCBpbnRlZ2Vycywgc28gcmVzdWx0SWZPbmUgb3IgcmVzdWx0SWZaZXJvIGFyZSBub3RcbiAqIGludGVnZXJzLCB0aGV5J2xsIGJlIGNvbnZlcnRlZCB0byB0aGVtIHdpdGggYml0d2lzZSBvcGVyYXRpb25zLlxuICovXG5mdW5jdGlvbiBzZWxlY3Qoc3ViamVjdCwgcmVzdWx0SWZPbmUsIHJlc3VsdElmWmVybykge1xuICAgIHJldHVybiAofihzdWJqZWN0IC0gMSkgJiByZXN1bHRJZk9uZSkgfCAoKHN1YmplY3QgLSAxKSAmIHJlc3VsdElmWmVybyk7XG59XG5leHBvcnRzLnNlbGVjdCA9IHNlbGVjdDtcbi8qKlxuICogUmV0dXJucyAxIGlmIGEgYW5kIGIgYXJlIG9mIGVxdWFsIGxlbmd0aCBhbmQgdGhlaXIgY29udGVudHNcbiAqIGFyZSBlcXVhbCwgb3IgMCBvdGhlcndpc2UuXG4gKlxuICogTm90ZSB0aGF0IHVubGlrZSBpbiBlcXVhbCgpLCB6ZXJvLWxlbmd0aCBpbnB1dHMgYXJlIGNvbnNpZGVyZWRcbiAqIHRoZSBzYW1lLCBzbyB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIDEuXG4gKi9cbmZ1bmN0aW9uIGNvbXBhcmUoYSwgYikge1xuICAgIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIGxldCByZXN1bHQgPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgICByZXN1bHQgfD0gYVtpXSBeIGJbaV07XG4gICAgfVxuICAgIHJldHVybiAoMSAmICgocmVzdWx0IC0gMSkgPj4+IDgpKTtcbn1cbmV4cG9ydHMuY29tcGFyZSA9IGNvbXBhcmU7XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIGFuZCBiIGFyZSBvZiBlcXVhbCBub24temVybyBsZW5ndGgsXG4gKiBhbmQgdGhlaXIgY29udGVudHMgYXJlIGVxdWFsLCBvciBmYWxzZSBvdGhlcndpc2UuXG4gKlxuICogTm90ZSB0aGF0IHVubGlrZSBpbiBjb21wYXJlKCkgemVyby1sZW5ndGggaW5wdXRzIGFyZSBjb25zaWRlcmVkXG4gKiBfbm90XyBlcXVhbCwgc28gdGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiBmYWxzZS5cbiAqL1xuZnVuY3Rpb24gZXF1YWwoYSwgYikge1xuICAgIGlmIChhLmxlbmd0aCA9PT0gMCB8fCBiLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBjb21wYXJlKGEsIGIpICE9PSAwO1xufVxuZXhwb3J0cy5lcXVhbCA9IGVxdWFsO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/constant-time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/ctz.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/ctz.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/** Number of trailing zeros in a given byte value */\nconst CTZ_TABLE = new Uint8Array([\n    8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n    4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,\n]);\n/** Count the number of trailing zeroes in a given number */\nfunction ctz(value) {\n    return CTZ_TABLE[value];\n}\nexports.ctz = ctz;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9pbnRlcm5hbHMvY3R6LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXIiwic291cmNlcyI6WyIvaG9tZS9hYnViYWtyamltb2gvRGVza3RvcC9Db2RpbmcgU3R1ZmZzL2hhY2thdGhvbi9zZWNyZXQtbmV0d29yay9tZW1lQWlfY29pbl9jcmVhdG9yL2FpLW1lbWUtY29pbi1jcmVhdG9yL25vZGVfbW9kdWxlcy8ucG5wbS9taXNjcmVhbnRAMC4zLjIvbm9kZV9tb2R1bGVzL21pc2NyZWFudC9yZWxlYXNlL2ludGVybmFscy9jdHouanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKiogTnVtYmVyIG9mIHRyYWlsaW5nIHplcm9zIGluIGEgZ2l2ZW4gYnl0ZSB2YWx1ZSAqL1xuY29uc3QgQ1RaX1RBQkxFID0gbmV3IFVpbnQ4QXJyYXkoW1xuICAgIDgsIDAsIDEsIDAsIDIsIDAsIDEsIDAsIDMsIDAsIDEsIDAsIDIsIDAsIDEsIDAsXG4gICAgNCwgMCwgMSwgMCwgMiwgMCwgMSwgMCwgMywgMCwgMSwgMCwgMiwgMCwgMSwgMCxcbiAgICA1LCAwLCAxLCAwLCAyLCAwLCAxLCAwLCAzLCAwLCAxLCAwLCAyLCAwLCAxLCAwLFxuICAgIDQsIDAsIDEsIDAsIDIsIDAsIDEsIDAsIDMsIDAsIDEsIDAsIDIsIDAsIDEsIDAsXG4gICAgNiwgMCwgMSwgMCwgMiwgMCwgMSwgMCwgMywgMCwgMSwgMCwgMiwgMCwgMSwgMCxcbiAgICA0LCAwLCAxLCAwLCAyLCAwLCAxLCAwLCAzLCAwLCAxLCAwLCAyLCAwLCAxLCAwLFxuICAgIDUsIDAsIDEsIDAsIDIsIDAsIDEsIDAsIDMsIDAsIDEsIDAsIDIsIDAsIDEsIDAsXG4gICAgNCwgMCwgMSwgMCwgMiwgMCwgMSwgMCwgMywgMCwgMSwgMCwgMiwgMCwgMSwgMCxcbiAgICA3LCAwLCAxLCAwLCAyLCAwLCAxLCAwLCAzLCAwLCAxLCAwLCAyLCAwLCAxLCAwLFxuICAgIDQsIDAsIDEsIDAsIDIsIDAsIDEsIDAsIDMsIDAsIDEsIDAsIDIsIDAsIDEsIDAsXG4gICAgNSwgMCwgMSwgMCwgMiwgMCwgMSwgMCwgMywgMCwgMSwgMCwgMiwgMCwgMSwgMCxcbiAgICA0LCAwLCAxLCAwLCAyLCAwLCAxLCAwLCAzLCAwLCAxLCAwLCAyLCAwLCAxLCAwLFxuICAgIDYsIDAsIDEsIDAsIDIsIDAsIDEsIDAsIDMsIDAsIDEsIDAsIDIsIDAsIDEsIDAsXG4gICAgNCwgMCwgMSwgMCwgMiwgMCwgMSwgMCwgMywgMCwgMSwgMCwgMiwgMCwgMSwgMCxcbiAgICA1LCAwLCAxLCAwLCAyLCAwLCAxLCAwLCAzLCAwLCAxLCAwLCAyLCAwLCAxLCAwLFxuICAgIDQsIDAsIDEsIDAsIDIsIDAsIDEsIDAsIDMsIDAsIDEsIDAsIDIsIDAsIDEsIDAsXG5dKTtcbi8qKiBDb3VudCB0aGUgbnVtYmVyIG9mIHRyYWlsaW5nIHplcm9lcyBpbiBhIGdpdmVuIG51bWJlciAqL1xuZnVuY3Rpb24gY3R6KHZhbHVlKSB7XG4gICAgcmV0dXJuIENUWl9UQUJMRVt2YWx1ZV07XG59XG5leHBvcnRzLmN0eiA9IGN0ejtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/ctz.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/wipe.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/wipe.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Sets all values in the given array to zero and returns it.\n *\n * The fact that it sets bytes to zero can be relied on.\n *\n * There is no guarantee that this function makes data disappear from memory,\n * as runtime implementation can, for example, have copying garbage collector\n * that will make copies of sensitive data before we wipe it. Or that an\n * operating system will write our data to swap or sleep image. Another thing\n * is that an optimizing compiler can remove calls to this function or make it\n * no-op. There's nothing we can do with it, so we just do our best and hope\n * that everything will be okay and good will triumph over evil.\n */\nfunction wipe(array) {\n    // Right now it's similar to array.fill(0). If it turns\n    // out that runtimes optimize this call away, maybe\n    // we can try something else.\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 0;\n    }\n    return array;\n}\nexports.wipe = wipe;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9pbnRlcm5hbHMvd2lwZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZIiwic291cmNlcyI6WyIvaG9tZS9hYnViYWtyamltb2gvRGVza3RvcC9Db2RpbmcgU3R1ZmZzL2hhY2thdGhvbi9zZWNyZXQtbmV0d29yay9tZW1lQWlfY29pbl9jcmVhdG9yL2FpLW1lbWUtY29pbi1jcmVhdG9yL25vZGVfbW9kdWxlcy8ucG5wbS9taXNjcmVhbnRAMC4zLjIvbm9kZV9tb2R1bGVzL21pc2NyZWFudC9yZWxlYXNlL2ludGVybmFscy93aXBlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChDKSAyMDE2IERtaXRyeSBDaGVzdG55a2hcbi8vIE1JVCBMaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlIGZvciBkZXRhaWxzLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBTZXRzIGFsbCB2YWx1ZXMgaW4gdGhlIGdpdmVuIGFycmF5IHRvIHplcm8gYW5kIHJldHVybnMgaXQuXG4gKlxuICogVGhlIGZhY3QgdGhhdCBpdCBzZXRzIGJ5dGVzIHRvIHplcm8gY2FuIGJlIHJlbGllZCBvbi5cbiAqXG4gKiBUaGVyZSBpcyBubyBndWFyYW50ZWUgdGhhdCB0aGlzIGZ1bmN0aW9uIG1ha2VzIGRhdGEgZGlzYXBwZWFyIGZyb20gbWVtb3J5LFxuICogYXMgcnVudGltZSBpbXBsZW1lbnRhdGlvbiBjYW4sIGZvciBleGFtcGxlLCBoYXZlIGNvcHlpbmcgZ2FyYmFnZSBjb2xsZWN0b3JcbiAqIHRoYXQgd2lsbCBtYWtlIGNvcGllcyBvZiBzZW5zaXRpdmUgZGF0YSBiZWZvcmUgd2Ugd2lwZSBpdC4gT3IgdGhhdCBhblxuICogb3BlcmF0aW5nIHN5c3RlbSB3aWxsIHdyaXRlIG91ciBkYXRhIHRvIHN3YXAgb3Igc2xlZXAgaW1hZ2UuIEFub3RoZXIgdGhpbmdcbiAqIGlzIHRoYXQgYW4gb3B0aW1pemluZyBjb21waWxlciBjYW4gcmVtb3ZlIGNhbGxzIHRvIHRoaXMgZnVuY3Rpb24gb3IgbWFrZSBpdFxuICogbm8tb3AuIFRoZXJlJ3Mgbm90aGluZyB3ZSBjYW4gZG8gd2l0aCBpdCwgc28gd2UganVzdCBkbyBvdXIgYmVzdCBhbmQgaG9wZVxuICogdGhhdCBldmVyeXRoaW5nIHdpbGwgYmUgb2theSBhbmQgZ29vZCB3aWxsIHRyaXVtcGggb3ZlciBldmlsLlxuICovXG5mdW5jdGlvbiB3aXBlKGFycmF5KSB7XG4gICAgLy8gUmlnaHQgbm93IGl0J3Mgc2ltaWxhciB0byBhcnJheS5maWxsKDApLiBJZiBpdCB0dXJuc1xuICAgIC8vIG91dCB0aGF0IHJ1bnRpbWVzIG9wdGltaXplIHRoaXMgY2FsbCBhd2F5LCBtYXliZVxuICAgIC8vIHdlIGNhbiB0cnkgc29tZXRoaW5nIGVsc2UuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICBhcnJheVtpXSA9IDA7XG4gICAgfVxuICAgIHJldHVybiBhcnJheTtcbn1cbmV4cG9ydHMud2lwZSA9IHdpcGU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/wipe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/xor.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/xor.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/** Perform an in-place bitwise XOR operation on two bytestrings */\nfunction xor(a, b) {\n    for (let i = 0; i < b.length; i++) {\n        a[i] ^= b[i];\n    }\n}\nexports.xor = xor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9pbnRlcm5hbHMveG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0Esb0JBQW9CLGNBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9pbnRlcm5hbHMveG9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChDKSAyMDE2IERtaXRyeSBDaGVzdG55a2hcbi8vIE1JVCBMaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlIGZvciBkZXRhaWxzLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqIFBlcmZvcm0gYW4gaW4tcGxhY2UgYml0d2lzZSBYT1Igb3BlcmF0aW9uIG9uIHR3byBieXRlc3RyaW5ncyAqL1xuZnVuY3Rpb24geG9yKGEsIGIpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYVtpXSBePSBiW2ldO1xuICAgIH1cbn1cbmV4cG9ydHMueG9yID0geG9yO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/xor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/mac/cmac.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/mac/cmac.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Copyright (C) 2016-2017 Dmitry Chestnykh, Tony Arcieri\n// MIT License. See LICENSE file for details.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst block_1 = __webpack_require__(/*! ../internals/block */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/block.js\");\nconst xor_1 = __webpack_require__(/*! ../internals/xor */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/xor.js\");\n/**\n * The AES-CMAC message authentication code\n */\nclass CMAC {\n    constructor(_cipher, _subkey1, _subkey2) {\n        this._cipher = _cipher;\n        this._subkey1 = _subkey1;\n        this._subkey2 = _subkey2;\n        this._bufferPos = 0;\n        this._finished = false;\n        this._buffer = new block_1.default();\n    }\n    /** Create a new CMAC instance from the given key */\n    static importKey(provider, keyData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cipher = yield provider.importBlockCipherKey(keyData);\n            // Generate subkeys.\n            const subkey1 = new block_1.default();\n            yield cipher.encryptBlock(subkey1);\n            subkey1.dbl();\n            const subkey2 = subkey1.clone();\n            subkey2.dbl();\n            return new CMAC(cipher, subkey1, subkey2);\n        });\n    }\n    reset() {\n        this._buffer.clear();\n        this._bufferPos = 0;\n        this._finished = false;\n        return this;\n    }\n    clear() {\n        this.reset();\n        this._subkey1.clear();\n        this._subkey2.clear();\n    }\n    update(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const left = block_1.default.SIZE - this._bufferPos;\n            let dataPos = 0;\n            let dataLength = data.length;\n            if (dataLength > left) {\n                for (let i = 0; i < left; i++) {\n                    this._buffer.data[this._bufferPos + i] ^= data[i];\n                }\n                dataLength -= left;\n                dataPos += left;\n                yield this._cipher.encryptBlock(this._buffer);\n                this._bufferPos = 0;\n            }\n            // TODO: use AES-CBC with a span of multiple blocks instead of encryptBlock\n            // to encrypt many blocks in a single call to the WebCrypto API\n            while (dataLength > block_1.default.SIZE) {\n                for (let i = 0; i < block_1.default.SIZE; i++) {\n                    this._buffer.data[i] ^= data[dataPos + i];\n                }\n                dataLength -= block_1.default.SIZE;\n                dataPos += block_1.default.SIZE;\n                yield this._cipher.encryptBlock(this._buffer);\n            }\n            for (let i = 0; i < dataLength; i++) {\n                this._buffer.data[this._bufferPos++] ^= data[dataPos + i];\n            }\n            return this;\n        });\n    }\n    finish() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._finished) {\n                // Select which subkey to use.\n                const subkey = (this._bufferPos < block_1.default.SIZE) ? this._subkey2 : this._subkey1;\n                // XOR in the subkey.\n                xor_1.xor(this._buffer.data, subkey.data);\n                // Pad if needed.\n                if (this._bufferPos < block_1.default.SIZE) {\n                    this._buffer.data[this._bufferPos] ^= 0x80;\n                }\n                // Encrypt buffer to get the final digest.\n                yield this._cipher.encryptBlock(this._buffer);\n                // Set finished flag.\n                this._finished = true;\n            }\n            return this._buffer.clone().data;\n        });\n    }\n}\nexports.CMAC = CMAC;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9tYWMvY21hYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDLGlFQUFpRSx3QkFBd0I7QUFDekg7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLG1CQUFPLENBQUMsd0hBQW9CO0FBQzVDLGNBQWMsbUJBQU8sQ0FBQyxvSEFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsVUFBVTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQywwQkFBMEI7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGdCQUFnQjtBQUM1QztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxZQUFZIiwic291cmNlcyI6WyIvaG9tZS9hYnViYWtyamltb2gvRGVza3RvcC9Db2RpbmcgU3R1ZmZzL2hhY2thdGhvbi9zZWNyZXQtbmV0d29yay9tZW1lQWlfY29pbl9jcmVhdG9yL2FpLW1lbWUtY29pbi1jcmVhdG9yL25vZGVfbW9kdWxlcy8ucG5wbS9taXNjcmVhbnRAMC4zLjIvbm9kZV9tb2R1bGVzL21pc2NyZWFudC9yZWxlYXNlL21hYy9jbWFjLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChDKSAyMDE2LTIwMTcgRG1pdHJ5IENoZXN0bnlraCwgVG9ueSBBcmNpZXJpXG4vLyBNSVQgTGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBmb3IgZGV0YWlscy5cbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUocmVzdWx0LnZhbHVlKTsgfSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgYmxvY2tfMSA9IHJlcXVpcmUoXCIuLi9pbnRlcm5hbHMvYmxvY2tcIik7XG5jb25zdCB4b3JfMSA9IHJlcXVpcmUoXCIuLi9pbnRlcm5hbHMveG9yXCIpO1xuLyoqXG4gKiBUaGUgQUVTLUNNQUMgbWVzc2FnZSBhdXRoZW50aWNhdGlvbiBjb2RlXG4gKi9cbmNsYXNzIENNQUMge1xuICAgIGNvbnN0cnVjdG9yKF9jaXBoZXIsIF9zdWJrZXkxLCBfc3Via2V5Mikge1xuICAgICAgICB0aGlzLl9jaXBoZXIgPSBfY2lwaGVyO1xuICAgICAgICB0aGlzLl9zdWJrZXkxID0gX3N1YmtleTE7XG4gICAgICAgIHRoaXMuX3N1YmtleTIgPSBfc3Via2V5MjtcbiAgICAgICAgdGhpcy5fYnVmZmVyUG9zID0gMDtcbiAgICAgICAgdGhpcy5fZmluaXNoZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fYnVmZmVyID0gbmV3IGJsb2NrXzEuZGVmYXVsdCgpO1xuICAgIH1cbiAgICAvKiogQ3JlYXRlIGEgbmV3IENNQUMgaW5zdGFuY2UgZnJvbSB0aGUgZ2l2ZW4ga2V5ICovXG4gICAgc3RhdGljIGltcG9ydEtleShwcm92aWRlciwga2V5RGF0YSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgY2lwaGVyID0geWllbGQgcHJvdmlkZXIuaW1wb3J0QmxvY2tDaXBoZXJLZXkoa2V5RGF0YSk7XG4gICAgICAgICAgICAvLyBHZW5lcmF0ZSBzdWJrZXlzLlxuICAgICAgICAgICAgY29uc3Qgc3Via2V5MSA9IG5ldyBibG9ja18xLmRlZmF1bHQoKTtcbiAgICAgICAgICAgIHlpZWxkIGNpcGhlci5lbmNyeXB0QmxvY2soc3Via2V5MSk7XG4gICAgICAgICAgICBzdWJrZXkxLmRibCgpO1xuICAgICAgICAgICAgY29uc3Qgc3Via2V5MiA9IHN1YmtleTEuY2xvbmUoKTtcbiAgICAgICAgICAgIHN1YmtleTIuZGJsKCk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IENNQUMoY2lwaGVyLCBzdWJrZXkxLCBzdWJrZXkyKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlc2V0KCkge1xuICAgICAgICB0aGlzLl9idWZmZXIuY2xlYXIoKTtcbiAgICAgICAgdGhpcy5fYnVmZmVyUG9zID0gMDtcbiAgICAgICAgdGhpcy5fZmluaXNoZWQgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGNsZWFyKCkge1xuICAgICAgICB0aGlzLnJlc2V0KCk7XG4gICAgICAgIHRoaXMuX3N1YmtleTEuY2xlYXIoKTtcbiAgICAgICAgdGhpcy5fc3Via2V5Mi5jbGVhcigpO1xuICAgIH1cbiAgICB1cGRhdGUoZGF0YSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgbGVmdCA9IGJsb2NrXzEuZGVmYXVsdC5TSVpFIC0gdGhpcy5fYnVmZmVyUG9zO1xuICAgICAgICAgICAgbGV0IGRhdGFQb3MgPSAwO1xuICAgICAgICAgICAgbGV0IGRhdGFMZW5ndGggPSBkYXRhLmxlbmd0aDtcbiAgICAgICAgICAgIGlmIChkYXRhTGVuZ3RoID4gbGVmdCkge1xuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVmdDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2J1ZmZlci5kYXRhW3RoaXMuX2J1ZmZlclBvcyArIGldIF49IGRhdGFbaV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRhdGFMZW5ndGggLT0gbGVmdDtcbiAgICAgICAgICAgICAgICBkYXRhUG9zICs9IGxlZnQ7XG4gICAgICAgICAgICAgICAgeWllbGQgdGhpcy5fY2lwaGVyLmVuY3J5cHRCbG9jayh0aGlzLl9idWZmZXIpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2J1ZmZlclBvcyA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBUT0RPOiB1c2UgQUVTLUNCQyB3aXRoIGEgc3BhbiBvZiBtdWx0aXBsZSBibG9ja3MgaW5zdGVhZCBvZiBlbmNyeXB0QmxvY2tcbiAgICAgICAgICAgIC8vIHRvIGVuY3J5cHQgbWFueSBibG9ja3MgaW4gYSBzaW5nbGUgY2FsbCB0byB0aGUgV2ViQ3J5cHRvIEFQSVxuICAgICAgICAgICAgd2hpbGUgKGRhdGFMZW5ndGggPiBibG9ja18xLmRlZmF1bHQuU0laRSkge1xuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYmxvY2tfMS5kZWZhdWx0LlNJWkU7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9idWZmZXIuZGF0YVtpXSBePSBkYXRhW2RhdGFQb3MgKyBpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGF0YUxlbmd0aCAtPSBibG9ja18xLmRlZmF1bHQuU0laRTtcbiAgICAgICAgICAgICAgICBkYXRhUG9zICs9IGJsb2NrXzEuZGVmYXVsdC5TSVpFO1xuICAgICAgICAgICAgICAgIHlpZWxkIHRoaXMuX2NpcGhlci5lbmNyeXB0QmxvY2sodGhpcy5fYnVmZmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YUxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fYnVmZmVyLmRhdGFbdGhpcy5fYnVmZmVyUG9zKytdIF49IGRhdGFbZGF0YVBvcyArIGldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBmaW5pc2goKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuX2ZpbmlzaGVkKSB7XG4gICAgICAgICAgICAgICAgLy8gU2VsZWN0IHdoaWNoIHN1YmtleSB0byB1c2UuXG4gICAgICAgICAgICAgICAgY29uc3Qgc3Via2V5ID0gKHRoaXMuX2J1ZmZlclBvcyA8IGJsb2NrXzEuZGVmYXVsdC5TSVpFKSA/IHRoaXMuX3N1YmtleTIgOiB0aGlzLl9zdWJrZXkxO1xuICAgICAgICAgICAgICAgIC8vIFhPUiBpbiB0aGUgc3Via2V5LlxuICAgICAgICAgICAgICAgIHhvcl8xLnhvcih0aGlzLl9idWZmZXIuZGF0YSwgc3Via2V5LmRhdGEpO1xuICAgICAgICAgICAgICAgIC8vIFBhZCBpZiBuZWVkZWQuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2J1ZmZlclBvcyA8IGJsb2NrXzEuZGVmYXVsdC5TSVpFKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2J1ZmZlci5kYXRhW3RoaXMuX2J1ZmZlclBvc10gXj0gMHg4MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gRW5jcnlwdCBidWZmZXIgdG8gZ2V0IHRoZSBmaW5hbCBkaWdlc3QuXG4gICAgICAgICAgICAgICAgeWllbGQgdGhpcy5fY2lwaGVyLmVuY3J5cHRCbG9jayh0aGlzLl9idWZmZXIpO1xuICAgICAgICAgICAgICAgIC8vIFNldCBmaW5pc2hlZCBmbGFnLlxuICAgICAgICAgICAgICAgIHRoaXMuX2ZpbmlzaGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9idWZmZXIuY2xvbmUoKS5kYXRhO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLkNNQUMgPSBDTUFDO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/mac/cmac.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/mac/pmac.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/mac/pmac.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Copyright (C) 2016-2017 Tony Arcieri, Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst block_1 = __webpack_require__(/*! ../internals/block */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/block.js\");\nconst constant_time_1 = __webpack_require__(/*! ../internals/constant-time */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/constant-time.js\");\nconst ctz_1 = __webpack_require__(/*! ../internals/ctz */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/ctz.js\");\nconst xor_1 = __webpack_require__(/*! ../internals/xor */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/xor.js\");\n// Number of L blocks to precompute (i.e. µ in the PMAC paper)\n// TODO: dynamically compute these as needed\nconst PRECOMPUTED_BLOCKS = 31;\n/**\n * Polyfill for the AES-PMAC message authentication code\n *\n * Uses a non-constant-time (lookup table-based) AES polyfill.\n * See polyfill/aes.ts for more information on the security impact.\n */\nclass PMAC {\n    constructor(cipher, l, lInv) {\n        /**\n         * finished is set true when we are done processing a message, and forbids\n         * any subsequent writes until we reset the internal state\n         */\n        this._finished = false;\n        this._cipher = cipher;\n        this._L = l;\n        this._LInv = lInv;\n        this._buffer = new block_1.default();\n        this._bufferPos = 0;\n        this._counter = 0;\n        this._offset = new block_1.default();\n        this._tag = new block_1.default();\n    }\n    /** Create a new CMAC instance from the given key */\n    static importKey(provider, keyData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cipher = yield provider.importBlockCipherKey(keyData);\n            /**\n             * L is defined as follows (quoted from the PMAC paper):\n             *\n             * Equation 1:\n             *\n             *     a · x =\n             *         a<<1 if firstbit(a)=0\n             *         (a<<1) ⊕ 0¹²⁰10000111 if firstbit(a)=1\n             *\n             * Equation 2:\n             *\n             *     a · x⁻¹ =\n             *         a>>1 if lastbit(a)=0\n             *         (a>>1) ⊕ 10¹²⁰1000011 if lastbit(a)=1\n             *\n             * Let L(0) ← L. For i ∈ [1..µ], compute L(i) ← L(i − 1) · x by\n             * Equation (1) using a shift and a conditional xor.\n             *\n             * Compute L(−1) ← L · x⁻¹ by Equation (2), using a shift and a\n             * conditional xor.\n             *\n             * Save the values L(−1), L(0), L(1), L(2), ..., L(µ) in a table.\n             * (Alternatively, [ed: as we have done in this codebase] defer computing\n             * some or  all of these L(i) values until the value is actually needed.)\n             */\n            const tmp = new block_1.default();\n            yield cipher.encryptBlock(tmp);\n            const l = new Array(PRECOMPUTED_BLOCKS);\n            for (let i = 0; i < PRECOMPUTED_BLOCKS; i++) {\n                l[i] = tmp.clone();\n                tmp.dbl();\n            }\n            /**\n             * Compute L(−1) ← L · x⁻¹:\n             *\n             *     a>>1 if lastbit(a)=0\n             *     (a>>1) ⊕ 10¹²⁰1000011 if lastbit(a)=1\n             */\n            const lInv = l[0].clone();\n            const lastBit = lInv.data[block_1.default.SIZE - 1] & 0x01;\n            for (let i = block_1.default.SIZE - 1; i > 0; i--) {\n                const carry = constant_time_1.select(lInv.data[i - 1] & 1, 0x80, 0);\n                lInv.data[i] = (lInv.data[i] >>> 1) | carry;\n            }\n            lInv.data[0] >>>= 1;\n            lInv.data[0] ^= constant_time_1.select(lastBit, 0x80, 0);\n            lInv.data[block_1.default.SIZE - 1] ^= constant_time_1.select(lastBit, block_1.default.R >>> 1, 0);\n            return new PMAC(cipher, l, lInv);\n        });\n    }\n    reset() {\n        this._buffer.clear();\n        this._bufferPos = 0;\n        this._counter = 0;\n        this._offset.clear();\n        this._tag.clear();\n        this._finished = false;\n        return this;\n    }\n    clear() {\n        this.reset();\n        this._cipher.clear();\n    }\n    update(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._finished) {\n                throw new Error(\"pmac: already finished\");\n            }\n            const left = block_1.default.SIZE - this._bufferPos;\n            let dataPos = 0;\n            let dataLength = data.length;\n            // Finish filling the internal buf with the message\n            if (dataLength > left) {\n                this._buffer.data.set(data.slice(0, left), this._bufferPos);\n                dataPos += left;\n                dataLength -= left;\n                yield this._processBuffer();\n            }\n            // So long as we have more than a blocks worth of data, compute\n            // whole-sized blocks at a time.\n            while (dataLength > block_1.default.SIZE) {\n                this._buffer.data.set(data.slice(dataPos, dataPos + block_1.default.SIZE));\n                dataPos += block_1.default.SIZE;\n                dataLength -= block_1.default.SIZE;\n                yield this._processBuffer();\n            }\n            if (dataLength > 0) {\n                this._buffer.data.set(data.slice(dataPos, dataPos + dataLength), this._bufferPos);\n                this._bufferPos += dataLength;\n            }\n            return this;\n        });\n    }\n    finish() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._finished) {\n                throw new Error(\"pmac: already finished\");\n            }\n            if (this._bufferPos === block_1.default.SIZE) {\n                xor_1.xor(this._tag.data, this._buffer.data);\n                xor_1.xor(this._tag.data, this._LInv.data);\n            }\n            else {\n                xor_1.xor(this._tag.data, this._buffer.data.slice(0, this._bufferPos));\n                this._tag.data[this._bufferPos] ^= 0x80;\n            }\n            yield this._cipher.encryptBlock(this._tag);\n            this._finished = true;\n            return this._tag.clone().data;\n        });\n    }\n    // Update the internal tag state based on the buffer contents\n    _processBuffer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            xor_1.xor(this._offset.data, this._L[ctz_1.ctz(this._counter + 1)].data);\n            xor_1.xor(this._buffer.data, this._offset.data);\n            this._counter++;\n            yield this._cipher.encryptBlock(this._buffer);\n            xor_1.xor(this._tag.data, this._buffer.data);\n            this._bufferPos = 0;\n        });\n    }\n}\nexports.PMAC = PMAC;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/mac/pmac.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/polyfill.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/polyfill.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst aes_1 = __webpack_require__(/*! ./polyfill/aes */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/polyfill/aes.js\");\nconst aes_ctr_1 = __webpack_require__(/*! ./polyfill/aes_ctr */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/polyfill/aes_ctr.js\");\n/**\n * Pure JavaScript cryptography implementations\n *\n * WARNING: Not constant time! May leak keys or have other security issues.\n */\nclass PolyfillCryptoProvider {\n    constructor() {\n        // This class doesn't do anything, it just signals that polyfill impls should be used\n    }\n    importBlockCipherKey(keyData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new aes_1.default(keyData);\n        });\n    }\n    importCTRKey(keyData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new aes_ctr_1.default(new aes_1.default(keyData));\n        });\n    }\n}\nexports.PolyfillCryptoProvider = PolyfillCryptoProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9wcm92aWRlcnMvcG9seWZpbGwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDLGlFQUFpRSx3QkFBd0I7QUFDekg7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYyxtQkFBTyxDQUFDLDJIQUFnQjtBQUN0QyxrQkFBa0IsbUJBQU8sQ0FBQyxtSUFBb0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSw4QkFBOEIiLCJzb3VyY2VzIjpbIi9ob21lL2FidWJha3JqaW1vaC9EZXNrdG9wL0NvZGluZyBTdHVmZnMvaGFja2F0aG9uL3NlY3JldC1uZXR3b3JrL21lbWVBaV9jb2luX2NyZWF0b3IvYWktbWVtZS1jb2luLWNyZWF0b3Ivbm9kZV9tb2R1bGVzLy5wbnBtL21pc2NyZWFudEAwLjMuMi9ub2RlX21vZHVsZXMvbWlzY3JlYW50L3JlbGVhc2UvcHJvdmlkZXJzL3BvbHlmaWxsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZShyZXN1bHQudmFsdWUpOyB9KS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBhZXNfMSA9IHJlcXVpcmUoXCIuL3BvbHlmaWxsL2Flc1wiKTtcbmNvbnN0IGFlc19jdHJfMSA9IHJlcXVpcmUoXCIuL3BvbHlmaWxsL2Flc19jdHJcIik7XG4vKipcbiAqIFB1cmUgSmF2YVNjcmlwdCBjcnlwdG9ncmFwaHkgaW1wbGVtZW50YXRpb25zXG4gKlxuICogV0FSTklORzogTm90IGNvbnN0YW50IHRpbWUhIE1heSBsZWFrIGtleXMgb3IgaGF2ZSBvdGhlciBzZWN1cml0eSBpc3N1ZXMuXG4gKi9cbmNsYXNzIFBvbHlmaWxsQ3J5cHRvUHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAvLyBUaGlzIGNsYXNzIGRvZXNuJ3QgZG8gYW55dGhpbmcsIGl0IGp1c3Qgc2lnbmFscyB0aGF0IHBvbHlmaWxsIGltcGxzIHNob3VsZCBiZSB1c2VkXG4gICAgfVxuICAgIGltcG9ydEJsb2NrQ2lwaGVyS2V5KGtleURhdGEpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgYWVzXzEuZGVmYXVsdChrZXlEYXRhKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGltcG9ydENUUktleShrZXlEYXRhKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IGFlc19jdHJfMS5kZWZhdWx0KG5ldyBhZXNfMS5kZWZhdWx0KGtleURhdGEpKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb2x5ZmlsbENyeXB0b1Byb3ZpZGVyID0gUG9seWZpbGxDcnlwdG9Qcm92aWRlcjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/polyfill.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/polyfill/aes.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/polyfill/aes.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (C) 2016-2017 Dmitry Chestnykh, Tony Arcieri\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst wipe_1 = __webpack_require__(/*! ../../internals/wipe */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/wipe.js\");\n// Powers of x mod poly in GF(2).\nconst POWX = new Uint8Array([\n    0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,\n    0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f,\n]);\n// FIPS-197 Figure 7. S-box substitution values in hexadecimal format.\nconst SBOX0 = new Uint8Array([\n    0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,\n    0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,\n    0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n    0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,\n    0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,\n    0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n    0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,\n    0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,\n    0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n    0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,\n    0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,\n    0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n    0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,\n    0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,\n    0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n    0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16,\n]);\n// FIPS-197 Figure 14.  Inverse S-box substitution values in hexadecimal format.\nconst SBOX1 = new Uint8Array([\n    0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,\n    0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,\n    0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n    0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,\n    0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,\n    0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n    0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,\n    0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,\n    0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n    0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,\n    0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,\n    0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n    0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,\n    0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,\n    0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n    0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d,\n]);\n// Encryption and decryption tables.\n// Will be computed by initialize() when the first AES instance is created.\nlet isInitialized = false;\nlet Te0;\nlet Te1;\nlet Te2;\nlet Te3;\nlet Td0;\nlet Td1;\nlet Td2;\nlet Td3;\n/**\n * Polyfill for the AES block cipher.\n *\n * This implementation uses lookup tables, so it's susceptible to cache-timing\n * side-channel attacks. A constant-time version we tried was super slow (a few\n * kilobytes per second), so we'll have to live with it.\n *\n * Key size: 16 or 32 bytes, block size: 16 bytes.\n */\nclass PolyfillAes {\n    /**\n     * Constructs AES with the given 16 or 32-byte key\n     * for AES-128 or AES-256.\n     */\n    constructor(keyData) {\n        if (!isInitialized) {\n            initialize();\n        }\n        // Only AES-128 and AES-256 supported. AES-192 is not.\n        if (keyData.length !== 16 && keyData.length !== 32) {\n            throw new Error(`Miscreant: invalid key length: ${keyData.length} (expected 16 or 32 bytes)`);\n        }\n        this._encKey = expandKey(keyData);\n        this._emptyPromise = Promise.resolve(this);\n    }\n    /**\n     * Cleans expanded keys from memory, setting them to zeros.\n     */\n    clear() {\n        if (this._encKey) {\n            wipe_1.wipe(this._encKey);\n        }\n        return this;\n    }\n    /**\n     * Encrypt 16-byte block in-place, replacing its contents with ciphertext.\n     *\n     * This function should not be used to encrypt data without any\n     * cipher mode! It should only be used to implement a cipher mode.\n     * This library uses it to implement AES-SIV.\n     */\n    encryptBlock(block) {\n        const src = block.data;\n        const dst = block.data;\n        let s0 = readUint32BE(src, 0);\n        let s1 = readUint32BE(src, 4);\n        let s2 = readUint32BE(src, 8);\n        let s3 = readUint32BE(src, 12);\n        // First round just XORs input with key.\n        s0 ^= this._encKey[0];\n        s1 ^= this._encKey[1];\n        s2 ^= this._encKey[2];\n        s3 ^= this._encKey[3];\n        let t0 = 0;\n        let t1 = 0;\n        let t2 = 0;\n        let t3 = 0;\n        // Middle rounds shuffle using tables.\n        // Number of rounds is set by length of expanded key.\n        const nr = this._encKey.length / 4 - 2; // - 2: one above, one more below\n        let k = 4;\n        for (let r = 0; r < nr; r++) {\n            t0 = this._encKey[k + 0] ^ Te0[(s0 >>> 24) & 0xff] ^ Te1[(s1 >>> 16) & 0xff] ^\n                Te2[(s2 >>> 8) & 0xff] ^ Te3[s3 & 0xff];\n            t1 = this._encKey[k + 1] ^ Te0[(s1 >>> 24) & 0xff] ^ Te1[(s2 >>> 16) & 0xff] ^\n                Te2[(s3 >>> 8) & 0xff] ^ Te3[s0 & 0xff];\n            t2 = this._encKey[k + 2] ^ Te0[(s2 >>> 24) & 0xff] ^ Te1[(s3 >>> 16) & 0xff] ^\n                Te2[(s0 >>> 8) & 0xff] ^ Te3[s1 & 0xff];\n            t3 = this._encKey[k + 3] ^ Te0[(s3 >>> 24) & 0xff] ^ Te1[(s0 >>> 16) & 0xff] ^\n                Te2[(s1 >>> 8) & 0xff] ^ Te3[s2 & 0xff];\n            k += 4;\n            s0 = t0;\n            s1 = t1;\n            s2 = t2;\n            s3 = t3;\n        }\n        // Last round uses s-box directly and XORs to produce output.\n        s0 = (SBOX0[t0 >>> 24] << 24) | (SBOX0[(t1 >>> 16) & 0xff]) << 16 |\n            (SBOX0[(t2 >>> 8) & 0xff]) << 8 | (SBOX0[t3 & 0xff]);\n        s1 = (SBOX0[t1 >>> 24] << 24) | (SBOX0[(t2 >>> 16) & 0xff]) << 16 |\n            (SBOX0[(t3 >>> 8) & 0xff]) << 8 | (SBOX0[t0 & 0xff]);\n        s2 = (SBOX0[t2 >>> 24] << 24) | (SBOX0[(t3 >>> 16) & 0xff]) << 16 |\n            (SBOX0[(t0 >>> 8) & 0xff]) << 8 | (SBOX0[t1 & 0xff]);\n        s3 = (SBOX0[t3 >>> 24] << 24) | (SBOX0[(t0 >>> 16) & 0xff]) << 16 |\n            (SBOX0[(t1 >>> 8) & 0xff]) << 8 | (SBOX0[t2 & 0xff]);\n        s0 ^= this._encKey[k + 0];\n        s1 ^= this._encKey[k + 1];\n        s2 ^= this._encKey[k + 2];\n        s3 ^= this._encKey[k + 3];\n        writeUint32BE(s0, dst, 0);\n        writeUint32BE(s1, dst, 4);\n        writeUint32BE(s2, dst, 8);\n        writeUint32BE(s3, dst, 12);\n        return this._emptyPromise;\n    }\n}\nexports[\"default\"] = PolyfillAes;\n// Initialize generates encryption and decryption tables.\nfunction initialize() {\n    const poly = (1 << 8) | (1 << 4) | (1 << 3) | (1 << 1) | (1 << 0);\n    function mul(b, c) {\n        let i = b;\n        let j = c;\n        let s = 0;\n        for (let k = 1; k < 0x100 && j !== 0; k <<= 1) {\n            // Invariant: k == 1<<n, i == b * x^n\n            if ((j & k) !== 0) {\n                // s += i in GF(2); xor in binary\n                s ^= i;\n                j ^= k; // turn off bit to end loop early\n            }\n            // i *= x in GF(2) modulo the polynomial\n            i <<= 1;\n            if ((i & 0x100) !== 0) {\n                i ^= poly;\n            }\n        }\n        return s;\n    }\n    const rot = (x) => (x << 24) | (x >>> 8);\n    // Generate encryption tables.\n    Te0 = new Uint32Array(256);\n    Te1 = new Uint32Array(256);\n    Te2 = new Uint32Array(256);\n    Te3 = new Uint32Array(256);\n    for (let i = 0; i < 256; i++) {\n        const s = SBOX0[i];\n        let w = (mul(s, 2) << 24) | (s << 16) | (s << 8) | mul(s, 3);\n        Te0[i] = w;\n        w = rot(w);\n        Te1[i] = w;\n        w = rot(w);\n        Te2[i] = w;\n        w = rot(w);\n        Te3[i] = w;\n        w = rot(w);\n    }\n    // Generate decryption tables.\n    Td0 = new Uint32Array(256);\n    Td1 = new Uint32Array(256);\n    Td2 = new Uint32Array(256);\n    Td3 = new Uint32Array(256);\n    for (let i = 0; i < 256; i++) {\n        const s = SBOX1[i];\n        let w = (mul(s, 0xe) << 24) | (mul(s, 0x9) << 16) |\n            (mul(s, 0xd) << 8) | mul(s, 0xb);\n        Td0[i] = w;\n        w = rot(w);\n        Td1[i] = w;\n        w = rot(w);\n        Td2[i] = w;\n        w = rot(w);\n        Td3[i] = w;\n        w = rot(w);\n    }\n    isInitialized = true;\n}\n// Reads 4 bytes from array starting at offset as big-endian\n// unsigned 32-bit integer and returns it.\nfunction readUint32BE(array, offset = 0) {\n    return ((array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3]) >>> 0;\n}\n// Writes 4-byte big-endian representation of 32-bit unsigned\n// value to byte array starting at offset.\n//\n// If byte array is not given, creates a new 4-byte one.\n//\n// Returns the output byte array.\nfunction writeUint32BE(value, out = new Uint8Array(4), offset = 0) {\n    out[offset + 0] = value >>> 24;\n    out[offset + 1] = value >>> 16;\n    out[offset + 2] = value >>> 8;\n    out[offset + 3] = value >>> 0;\n    return out;\n}\n// Apply sbox0 to each byte in w.\nfunction subw(w) {\n    return ((SBOX0[(w >>> 24) & 0xff]) << 24) |\n        ((SBOX0[(w >>> 16) & 0xff]) << 16) |\n        ((SBOX0[(w >>> 8) & 0xff]) << 8) |\n        (SBOX0[w & 0xff]);\n}\n// Rotate\nfunction rotw(w) {\n    return (w << 8) | (w >>> 24);\n}\nfunction expandKey(key) {\n    const encKey = new Uint32Array(key.length + 28);\n    const nk = key.length / 4 | 0;\n    const n = encKey.length;\n    for (let i = 0; i < nk; i++) {\n        encKey[i] = readUint32BE(key, i * 4);\n    }\n    for (let i = nk; i < n; i++) {\n        let t = encKey[i - 1];\n        if (i % nk === 0) {\n            t = subw(rotw(t)) ^ (POWX[i / nk - 1] << 24);\n        }\n        else if (nk > 6 && i % nk === 4) {\n            t = subw(t);\n        }\n        encKey[i] = encKey[i - nk] ^ t;\n    }\n    return encKey;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/polyfill/aes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/polyfill/aes_ctr.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/polyfill/aes_ctr.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst block_1 = __webpack_require__(/*! ../../internals/block */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/block.js\");\n/**\n * Polyfill for the AES-CTR (counter) mode of operation.\n *\n * Uses a non-constant-time (lookup table-based) AES polyfill.\n * See polyfill/aes.ts for more information on the security impact.\n *\n * Note that CTR mode is malleable and generally should not be used without\n * authentication. Instead, use an authenticated encryption mode, like AES-SIV!\n */\nclass PolyfillAesCtr {\n    constructor(cipher) {\n        // Set cipher.\n        this._cipher = cipher;\n        // Allocate space for counter.\n        this._counter = new block_1.default();\n        // Allocate buffer for encrypted block.\n        this._buffer = new block_1.default();\n    }\n    clear() {\n        this._buffer.clear();\n        this._counter.clear();\n        this._cipher.clear();\n        return this;\n    }\n    encryptCtr(iv, plaintext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (iv.length !== block_1.default.SIZE) {\n                throw new Error(\"CTR: iv length must be equal to cipher block size\");\n            }\n            // Copy IV to counter, overwriting it.\n            this._counter.data.set(iv);\n            // Set buffer position to length of buffer\n            // so that the first cipher block is generated.\n            let bufferPos = block_1.default.SIZE;\n            const result = new Uint8Array(plaintext.length);\n            for (let i = 0; i < plaintext.length; i++) {\n                if (bufferPos === block_1.default.SIZE) {\n                    this._buffer.copy(this._counter);\n                    this._cipher.encryptBlock(this._buffer);\n                    bufferPos = 0;\n                    incrementCounter(this._counter);\n                }\n                result[i] = plaintext[i] ^ this._buffer.data[bufferPos++];\n            }\n            return result;\n        });\n    }\n}\nexports[\"default\"] = PolyfillAesCtr;\n// Increment an AES-CTR mode counter, intentionally wrapping/overflowing\nfunction incrementCounter(counter) {\n    let carry = 1;\n    for (let i = block_1.default.SIZE - 1; i >= 0; i--) {\n        carry += (counter.data[i] & 0xff) | 0;\n        counter.data[i] = carry & 0xff;\n        carry >>>= 8;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9wcm92aWRlcnMvcG9seWZpbGwvYWVzX2N0ci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDLGlFQUFpRSx3QkFBd0I7QUFDekg7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLG1CQUFPLENBQUMsMkhBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsc0JBQXNCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsUUFBUTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hYnViYWtyamltb2gvRGVza3RvcC9Db2RpbmcgU3R1ZmZzL2hhY2thdGhvbi9zZWNyZXQtbmV0d29yay9tZW1lQWlfY29pbl9jcmVhdG9yL2FpLW1lbWUtY29pbi1jcmVhdG9yL25vZGVfbW9kdWxlcy8ucG5wbS9taXNjcmVhbnRAMC4zLjIvbm9kZV9tb2R1bGVzL21pc2NyZWFudC9yZWxlYXNlL3Byb3ZpZGVycy9wb2x5ZmlsbC9hZXNfY3RyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChDKSAyMDE2IERtaXRyeSBDaGVzdG55a2hcbi8vIE1JVCBMaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlIGZvciBkZXRhaWxzLlxudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZShyZXN1bHQudmFsdWUpOyB9KS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBibG9ja18xID0gcmVxdWlyZShcIi4uLy4uL2ludGVybmFscy9ibG9ja1wiKTtcbi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBBRVMtQ1RSIChjb3VudGVyKSBtb2RlIG9mIG9wZXJhdGlvbi5cbiAqXG4gKiBVc2VzIGEgbm9uLWNvbnN0YW50LXRpbWUgKGxvb2t1cCB0YWJsZS1iYXNlZCkgQUVTIHBvbHlmaWxsLlxuICogU2VlIHBvbHlmaWxsL2Flcy50cyBmb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiB0aGUgc2VjdXJpdHkgaW1wYWN0LlxuICpcbiAqIE5vdGUgdGhhdCBDVFIgbW9kZSBpcyBtYWxsZWFibGUgYW5kIGdlbmVyYWxseSBzaG91bGQgbm90IGJlIHVzZWQgd2l0aG91dFxuICogYXV0aGVudGljYXRpb24uIEluc3RlYWQsIHVzZSBhbiBhdXRoZW50aWNhdGVkIGVuY3J5cHRpb24gbW9kZSwgbGlrZSBBRVMtU0lWIVxuICovXG5jbGFzcyBQb2x5ZmlsbEFlc0N0ciB7XG4gICAgY29uc3RydWN0b3IoY2lwaGVyKSB7XG4gICAgICAgIC8vIFNldCBjaXBoZXIuXG4gICAgICAgIHRoaXMuX2NpcGhlciA9IGNpcGhlcjtcbiAgICAgICAgLy8gQWxsb2NhdGUgc3BhY2UgZm9yIGNvdW50ZXIuXG4gICAgICAgIHRoaXMuX2NvdW50ZXIgPSBuZXcgYmxvY2tfMS5kZWZhdWx0KCk7XG4gICAgICAgIC8vIEFsbG9jYXRlIGJ1ZmZlciBmb3IgZW5jcnlwdGVkIGJsb2NrLlxuICAgICAgICB0aGlzLl9idWZmZXIgPSBuZXcgYmxvY2tfMS5kZWZhdWx0KCk7XG4gICAgfVxuICAgIGNsZWFyKCkge1xuICAgICAgICB0aGlzLl9idWZmZXIuY2xlYXIoKTtcbiAgICAgICAgdGhpcy5fY291bnRlci5jbGVhcigpO1xuICAgICAgICB0aGlzLl9jaXBoZXIuY2xlYXIoKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGVuY3J5cHRDdHIoaXYsIHBsYWludGV4dCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKGl2Lmxlbmd0aCAhPT0gYmxvY2tfMS5kZWZhdWx0LlNJWkUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDVFI6IGl2IGxlbmd0aCBtdXN0IGJlIGVxdWFsIHRvIGNpcGhlciBibG9jayBzaXplXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQ29weSBJViB0byBjb3VudGVyLCBvdmVyd3JpdGluZyBpdC5cbiAgICAgICAgICAgIHRoaXMuX2NvdW50ZXIuZGF0YS5zZXQoaXYpO1xuICAgICAgICAgICAgLy8gU2V0IGJ1ZmZlciBwb3NpdGlvbiB0byBsZW5ndGggb2YgYnVmZmVyXG4gICAgICAgICAgICAvLyBzbyB0aGF0IHRoZSBmaXJzdCBjaXBoZXIgYmxvY2sgaXMgZ2VuZXJhdGVkLlxuICAgICAgICAgICAgbGV0IGJ1ZmZlclBvcyA9IGJsb2NrXzEuZGVmYXVsdC5TSVpFO1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IFVpbnQ4QXJyYXkocGxhaW50ZXh0Lmxlbmd0aCk7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBsYWludGV4dC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmIChidWZmZXJQb3MgPT09IGJsb2NrXzEuZGVmYXVsdC5TSVpFKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2J1ZmZlci5jb3B5KHRoaXMuX2NvdW50ZXIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jaXBoZXIuZW5jcnlwdEJsb2NrKHRoaXMuX2J1ZmZlcik7XG4gICAgICAgICAgICAgICAgICAgIGJ1ZmZlclBvcyA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGluY3JlbWVudENvdW50ZXIodGhpcy5fY291bnRlcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc3VsdFtpXSA9IHBsYWludGV4dFtpXSBeIHRoaXMuX2J1ZmZlci5kYXRhW2J1ZmZlclBvcysrXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFBvbHlmaWxsQWVzQ3RyO1xuLy8gSW5jcmVtZW50IGFuIEFFUy1DVFIgbW9kZSBjb3VudGVyLCBpbnRlbnRpb25hbGx5IHdyYXBwaW5nL292ZXJmbG93aW5nXG5mdW5jdGlvbiBpbmNyZW1lbnRDb3VudGVyKGNvdW50ZXIpIHtcbiAgICBsZXQgY2FycnkgPSAxO1xuICAgIGZvciAobGV0IGkgPSBibG9ja18xLmRlZmF1bHQuU0laRSAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgIGNhcnJ5ICs9IChjb3VudGVyLmRhdGFbaV0gJiAweGZmKSB8IDA7XG4gICAgICAgIGNvdW50ZXIuZGF0YVtpXSA9IGNhcnJ5ICYgMHhmZjtcbiAgICAgICAgY2FycnkgPj4+PSA4O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/polyfill/aes_ctr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst exceptions_1 = __webpack_require__(/*! ../exceptions */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/exceptions.js\");\nconst aes_1 = __webpack_require__(/*! ./webcrypto/aes */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto/aes.js\");\nconst aes_ctr_1 = __webpack_require__(/*! ./webcrypto/aes_ctr */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto/aes_ctr.js\");\n/** Placeholder backend for using pure JavaScript crypto implementations */\nclass WebCryptoProvider {\n    constructor(crypto = window.crypto) {\n        this.crypto = crypto;\n    }\n    importBlockCipherKey(keyData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return aes_1.default.importKey(this.crypto, keyData);\n        });\n    }\n    importCTRKey(keyData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield aes_ctr_1.default.importKey(this.crypto, keyData);\n            }\n            catch (e) {\n                if (e.message.includes(\"unsupported\")) {\n                    throw new exceptions_1.NotImplementedError(\"WebCryptoProvider: AES-CTR unsupported. Use PolyfillCryptoProvider.\");\n                }\n                else {\n                    throw e;\n                }\n            }\n        });\n    }\n}\nexports.WebCryptoProvider = WebCryptoProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9wcm92aWRlcnMvd2ViY3J5cHRvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQyxpRUFBaUUsd0JBQXdCO0FBQ3pIO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixtQkFBTyxDQUFDLDhHQUFlO0FBQzVDLGNBQWMsbUJBQU8sQ0FBQyw2SEFBaUI7QUFDdkMsa0JBQWtCLG1CQUFPLENBQUMscUlBQXFCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EseUJBQXlCIiwic291cmNlcyI6WyIvaG9tZS9hYnViYWtyamltb2gvRGVza3RvcC9Db2RpbmcgU3R1ZmZzL2hhY2thdGhvbi9zZWNyZXQtbmV0d29yay9tZW1lQWlfY29pbl9jcmVhdG9yL2FpLW1lbWUtY29pbi1jcmVhdG9yL25vZGVfbW9kdWxlcy8ucG5wbS9taXNjcmVhbnRAMC4zLjIvbm9kZV9tb2R1bGVzL21pc2NyZWFudC9yZWxlYXNlL3Byb3ZpZGVycy93ZWJjcnlwdG8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHJlc3VsdC52YWx1ZSk7IH0pLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGV4Y2VwdGlvbnNfMSA9IHJlcXVpcmUoXCIuLi9leGNlcHRpb25zXCIpO1xuY29uc3QgYWVzXzEgPSByZXF1aXJlKFwiLi93ZWJjcnlwdG8vYWVzXCIpO1xuY29uc3QgYWVzX2N0cl8xID0gcmVxdWlyZShcIi4vd2ViY3J5cHRvL2Flc19jdHJcIik7XG4vKiogUGxhY2Vob2xkZXIgYmFja2VuZCBmb3IgdXNpbmcgcHVyZSBKYXZhU2NyaXB0IGNyeXB0byBpbXBsZW1lbnRhdGlvbnMgKi9cbmNsYXNzIFdlYkNyeXB0b1Byb3ZpZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihjcnlwdG8gPSB3aW5kb3cuY3J5cHRvKSB7XG4gICAgICAgIHRoaXMuY3J5cHRvID0gY3J5cHRvO1xuICAgIH1cbiAgICBpbXBvcnRCbG9ja0NpcGhlcktleShrZXlEYXRhKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gYWVzXzEuZGVmYXVsdC5pbXBvcnRLZXkodGhpcy5jcnlwdG8sIGtleURhdGEpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgaW1wb3J0Q1RSS2V5KGtleURhdGEpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHlpZWxkIGFlc19jdHJfMS5kZWZhdWx0LmltcG9ydEtleSh0aGlzLmNyeXB0bywga2V5RGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGlmIChlLm1lc3NhZ2UuaW5jbHVkZXMoXCJ1bnN1cHBvcnRlZFwiKSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgZXhjZXB0aW9uc18xLk5vdEltcGxlbWVudGVkRXJyb3IoXCJXZWJDcnlwdG9Qcm92aWRlcjogQUVTLUNUUiB1bnN1cHBvcnRlZC4gVXNlIFBvbHlmaWxsQ3J5cHRvUHJvdmlkZXIuXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuV2ViQ3J5cHRvUHJvdmlkZXIgPSBXZWJDcnlwdG9Qcm92aWRlcjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto/aes.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto/aes.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Copyright (C) 2017 Tony Arcieri\n// MIT License. See LICENSE file for details.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst block_1 = __webpack_require__(/*! ../../internals/block */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/block.js\");\n/**\n * WebCrypto-based implementation of the AES block cipher.\n *\n * This implementation (ab)uses AES-CBC mode to implement AES-ECB. This is\n * likely to be rather slow, as it requires an async call per block, and\n * discards half the buffer.\n *\n * In theory it should be constant time due to the use of WebCrypto (provided\n * the browser's implementation is constant time), but it could probably benefit\n * from some clever optimization work, or improvements to the WebCrypto API.\n *\n * Some WebCrypto implementations (e.g. node-webcrypto-ossl) support ECB mode\n * natively, so we could take advantage of that to potentially encrypt multiple\n * blocks in a single invocation.\n *\n * Key size: 16 or 32 bytes, block size: 16 bytes.\n */\nclass WebCryptoAes {\n    constructor(_crypto, _key) {\n        this._crypto = _crypto;\n        this._key = _key;\n        // An initialization vector of all zeros, exposing the raw AES function\n        this._iv = new block_1.default();\n        this._emptyPromise = Promise.resolve(this);\n    }\n    /**\n     * Create a new WebCryptoAes instance\n     *\n     * @param {Crypto} crypto - the Web Cryptography provider\n     * @param {Uint8Array} keyData - the AES secret key\n     * @returns {Promise<WebCryptoAes}\n     */\n    static importKey(crypto, keyData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Only AES-128 and AES-256 supported. AES-192 is not.\n            if (keyData.length !== 16 && keyData.length !== 32) {\n                throw new Error(`Miscreant: invalid key length: ${keyData.length} (expected 16 or 32 bytes)`);\n            }\n            const key = yield crypto.subtle.importKey(\"raw\", keyData, \"AES-CBC\", false, [\"encrypt\"]);\n            return new WebCryptoAes(crypto, key);\n        });\n    }\n    /**\n     * Cleans expanded keys from memory, setting them to zeros.\n     */\n    clear() {\n        // TODO: perhaps we should clear something, but what, and how?\n        return this;\n    }\n    /**\n     * Encrypt a single AES block. While ordinarily this might let us see penguins, we're using it safely\n     *\n     * @param {Block} block - block to be encrypted in-place\n     * @returns {Promise<this>}\n     */\n    encryptBlock(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const params = { name: \"AES-CBC\", iv: this._iv.data };\n            const ctBlock = yield this._crypto.subtle.encrypt(params, this._key, block.data);\n            // TODO: a more efficient way to do in-place encryption?\n            block.data.set(new Uint8Array(ctBlock, 0, block_1.default.SIZE));\n            return this._emptyPromise;\n        });\n    }\n}\nexports[\"default\"] = WebCryptoAes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9wcm92aWRlcnMvd2ViY3J5cHRvL2Flcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDLGlFQUFpRSx3QkFBd0I7QUFDekg7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLG1CQUFPLENBQUMsMkhBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsWUFBWTtBQUMzQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxnQkFBZ0I7QUFDbEY7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIi9ob21lL2FidWJha3JqaW1vaC9EZXNrdG9wL0NvZGluZyBTdHVmZnMvaGFja2F0aG9uL3NlY3JldC1uZXR3b3JrL21lbWVBaV9jb2luX2NyZWF0b3IvYWktbWVtZS1jb2luLWNyZWF0b3Ivbm9kZV9tb2R1bGVzLy5wbnBtL21pc2NyZWFudEAwLjMuMi9ub2RlX21vZHVsZXMvbWlzY3JlYW50L3JlbGVhc2UvcHJvdmlkZXJzL3dlYmNyeXB0by9hZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKEMpIDIwMTcgVG9ueSBBcmNpZXJpXG4vLyBNSVQgTGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBmb3IgZGV0YWlscy5cbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUocmVzdWx0LnZhbHVlKTsgfSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgYmxvY2tfMSA9IHJlcXVpcmUoXCIuLi8uLi9pbnRlcm5hbHMvYmxvY2tcIik7XG4vKipcbiAqIFdlYkNyeXB0by1iYXNlZCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgQUVTIGJsb2NrIGNpcGhlci5cbiAqXG4gKiBUaGlzIGltcGxlbWVudGF0aW9uIChhYil1c2VzIEFFUy1DQkMgbW9kZSB0byBpbXBsZW1lbnQgQUVTLUVDQi4gVGhpcyBpc1xuICogbGlrZWx5IHRvIGJlIHJhdGhlciBzbG93LCBhcyBpdCByZXF1aXJlcyBhbiBhc3luYyBjYWxsIHBlciBibG9jaywgYW5kXG4gKiBkaXNjYXJkcyBoYWxmIHRoZSBidWZmZXIuXG4gKlxuICogSW4gdGhlb3J5IGl0IHNob3VsZCBiZSBjb25zdGFudCB0aW1lIGR1ZSB0byB0aGUgdXNlIG9mIFdlYkNyeXB0byAocHJvdmlkZWRcbiAqIHRoZSBicm93c2VyJ3MgaW1wbGVtZW50YXRpb24gaXMgY29uc3RhbnQgdGltZSksIGJ1dCBpdCBjb3VsZCBwcm9iYWJseSBiZW5lZml0XG4gKiBmcm9tIHNvbWUgY2xldmVyIG9wdGltaXphdGlvbiB3b3JrLCBvciBpbXByb3ZlbWVudHMgdG8gdGhlIFdlYkNyeXB0byBBUEkuXG4gKlxuICogU29tZSBXZWJDcnlwdG8gaW1wbGVtZW50YXRpb25zIChlLmcuIG5vZGUtd2ViY3J5cHRvLW9zc2wpIHN1cHBvcnQgRUNCIG1vZGVcbiAqIG5hdGl2ZWx5LCBzbyB3ZSBjb3VsZCB0YWtlIGFkdmFudGFnZSBvZiB0aGF0IHRvIHBvdGVudGlhbGx5IGVuY3J5cHQgbXVsdGlwbGVcbiAqIGJsb2NrcyBpbiBhIHNpbmdsZSBpbnZvY2F0aW9uLlxuICpcbiAqIEtleSBzaXplOiAxNiBvciAzMiBieXRlcywgYmxvY2sgc2l6ZTogMTYgYnl0ZXMuXG4gKi9cbmNsYXNzIFdlYkNyeXB0b0FlcyB7XG4gICAgY29uc3RydWN0b3IoX2NyeXB0bywgX2tleSkge1xuICAgICAgICB0aGlzLl9jcnlwdG8gPSBfY3J5cHRvO1xuICAgICAgICB0aGlzLl9rZXkgPSBfa2V5O1xuICAgICAgICAvLyBBbiBpbml0aWFsaXphdGlvbiB2ZWN0b3Igb2YgYWxsIHplcm9zLCBleHBvc2luZyB0aGUgcmF3IEFFUyBmdW5jdGlvblxuICAgICAgICB0aGlzLl9pdiA9IG5ldyBibG9ja18xLmRlZmF1bHQoKTtcbiAgICAgICAgdGhpcy5fZW1wdHlQcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKHRoaXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgV2ViQ3J5cHRvQWVzIGluc3RhbmNlXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0NyeXB0b30gY3J5cHRvIC0gdGhlIFdlYiBDcnlwdG9ncmFwaHkgcHJvdmlkZXJcbiAgICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGtleURhdGEgLSB0aGUgQUVTIHNlY3JldCBrZXlcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxXZWJDcnlwdG9BZXN9XG4gICAgICovXG4gICAgc3RhdGljIGltcG9ydEtleShjcnlwdG8sIGtleURhdGEpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIC8vIE9ubHkgQUVTLTEyOCBhbmQgQUVTLTI1NiBzdXBwb3J0ZWQuIEFFUy0xOTIgaXMgbm90LlxuICAgICAgICAgICAgaWYgKGtleURhdGEubGVuZ3RoICE9PSAxNiAmJiBrZXlEYXRhLmxlbmd0aCAhPT0gMzIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE1pc2NyZWFudDogaW52YWxpZCBrZXkgbGVuZ3RoOiAke2tleURhdGEubGVuZ3RofSAoZXhwZWN0ZWQgMTYgb3IgMzIgYnl0ZXMpYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBrZXkgPSB5aWVsZCBjcnlwdG8uc3VidGxlLmltcG9ydEtleShcInJhd1wiLCBrZXlEYXRhLCBcIkFFUy1DQkNcIiwgZmFsc2UsIFtcImVuY3J5cHRcIl0pO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBXZWJDcnlwdG9BZXMoY3J5cHRvLCBrZXkpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xlYW5zIGV4cGFuZGVkIGtleXMgZnJvbSBtZW1vcnksIHNldHRpbmcgdGhlbSB0byB6ZXJvcy5cbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgLy8gVE9ETzogcGVyaGFwcyB3ZSBzaG91bGQgY2xlYXIgc29tZXRoaW5nLCBidXQgd2hhdCwgYW5kIGhvdz9cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVuY3J5cHQgYSBzaW5nbGUgQUVTIGJsb2NrLiBXaGlsZSBvcmRpbmFyaWx5IHRoaXMgbWlnaHQgbGV0IHVzIHNlZSBwZW5ndWlucywgd2UncmUgdXNpbmcgaXQgc2FmZWx5XG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0Jsb2NrfSBibG9jayAtIGJsb2NrIHRvIGJlIGVuY3J5cHRlZCBpbi1wbGFjZVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHRoaXM+fVxuICAgICAqL1xuICAgIGVuY3J5cHRCbG9jayhibG9jaykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgcGFyYW1zID0geyBuYW1lOiBcIkFFUy1DQkNcIiwgaXY6IHRoaXMuX2l2LmRhdGEgfTtcbiAgICAgICAgICAgIGNvbnN0IGN0QmxvY2sgPSB5aWVsZCB0aGlzLl9jcnlwdG8uc3VidGxlLmVuY3J5cHQocGFyYW1zLCB0aGlzLl9rZXksIGJsb2NrLmRhdGEpO1xuICAgICAgICAgICAgLy8gVE9ETzogYSBtb3JlIGVmZmljaWVudCB3YXkgdG8gZG8gaW4tcGxhY2UgZW5jcnlwdGlvbj9cbiAgICAgICAgICAgIGJsb2NrLmRhdGEuc2V0KG5ldyBVaW50OEFycmF5KGN0QmxvY2ssIDAsIGJsb2NrXzEuZGVmYXVsdC5TSVpFKSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZW1wdHlQcm9taXNlO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBXZWJDcnlwdG9BZXM7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto/aes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto/aes_ctr.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto/aes_ctr.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * AES-CTR using a WebCrypto (or similar) API\n */\nclass WebCryptoAesCtr {\n    constructor(key, crypto) {\n        this.key = key;\n        this.crypto = crypto;\n    }\n    static importKey(crypto, keyData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Only AES-128 and AES-256 supported. AES-192 is not.\n            if (keyData.length !== 16 && keyData.length !== 32) {\n                throw new Error(`Miscreant: invalid key length: ${keyData.length} (expected 16 or 32 bytes)`);\n            }\n            const key = yield crypto.subtle.importKey(\"raw\", keyData, \"AES-CTR\", false, [\"encrypt\"]);\n            return new WebCryptoAesCtr(key, crypto);\n        });\n    }\n    encryptCtr(iv, plaintext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ciphertext = yield this.crypto.subtle.encrypt({ name: \"AES-CTR\", counter: iv, length: 16 }, this.key, plaintext);\n            return new Uint8Array(ciphertext);\n        });\n    }\n    clear() {\n        // TODO: actually clear something. Do we need to?\n        return this;\n    }\n}\nexports[\"default\"] = WebCryptoAesCtr;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9wcm92aWRlcnMvd2ViY3J5cHRvL2Flc19jdHIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDLGlFQUFpRSx3QkFBd0I7QUFDekg7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLGdCQUFnQjtBQUNsRjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLDBDQUEwQztBQUM1RztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9wcm92aWRlcnMvd2ViY3J5cHRvL2Flc19jdHIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHJlc3VsdC52YWx1ZSk7IH0pLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKlxuICogQUVTLUNUUiB1c2luZyBhIFdlYkNyeXB0byAob3Igc2ltaWxhcikgQVBJXG4gKi9cbmNsYXNzIFdlYkNyeXB0b0Flc0N0ciB7XG4gICAgY29uc3RydWN0b3Ioa2V5LCBjcnlwdG8pIHtcbiAgICAgICAgdGhpcy5rZXkgPSBrZXk7XG4gICAgICAgIHRoaXMuY3J5cHRvID0gY3J5cHRvO1xuICAgIH1cbiAgICBzdGF0aWMgaW1wb3J0S2V5KGNyeXB0bywga2V5RGF0YSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgLy8gT25seSBBRVMtMTI4IGFuZCBBRVMtMjU2IHN1cHBvcnRlZC4gQUVTLTE5MiBpcyBub3QuXG4gICAgICAgICAgICBpZiAoa2V5RGF0YS5sZW5ndGggIT09IDE2ICYmIGtleURhdGEubGVuZ3RoICE9PSAzMikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTWlzY3JlYW50OiBpbnZhbGlkIGtleSBsZW5ndGg6ICR7a2V5RGF0YS5sZW5ndGh9IChleHBlY3RlZCAxNiBvciAzMiBieXRlcylgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGtleSA9IHlpZWxkIGNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KFwicmF3XCIsIGtleURhdGEsIFwiQUVTLUNUUlwiLCBmYWxzZSwgW1wiZW5jcnlwdFwiXSk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFdlYkNyeXB0b0Flc0N0cihrZXksIGNyeXB0byk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbmNyeXB0Q3RyKGl2LCBwbGFpbnRleHQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGNpcGhlcnRleHQgPSB5aWVsZCB0aGlzLmNyeXB0by5zdWJ0bGUuZW5jcnlwdCh7IG5hbWU6IFwiQUVTLUNUUlwiLCBjb3VudGVyOiBpdiwgbGVuZ3RoOiAxNiB9LCB0aGlzLmtleSwgcGxhaW50ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShjaXBoZXJ0ZXh0KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNsZWFyKCkge1xuICAgICAgICAvLyBUT0RPOiBhY3R1YWxseSBjbGVhciBzb21ldGhpbmcuIERvIHdlIG5lZWQgdG8/XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFdlYkNyeXB0b0Flc0N0cjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto/aes_ctr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/siv.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/siv.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Copyright (C) 2017-2018 Dmitry Chestnykh, Tony Arcieri\n// MIT License. See LICENSE file for details.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst constant_time_1 = __webpack_require__(/*! ./internals/constant-time */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/constant-time.js\");\nconst wipe_1 = __webpack_require__(/*! ./internals/wipe */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/wipe.js\");\nconst xor_1 = __webpack_require__(/*! ./internals/xor */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/xor.js\");\nconst exceptions_1 = __webpack_require__(/*! ./exceptions */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/exceptions.js\");\nconst block_1 = __webpack_require__(/*! ./internals/block */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/internals/block.js\");\nconst cmac_1 = __webpack_require__(/*! ./mac/cmac */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/mac/cmac.js\");\nconst pmac_1 = __webpack_require__(/*! ./mac/pmac */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/mac/pmac.js\");\nconst webcrypto_1 = __webpack_require__(/*! ./providers/webcrypto */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto.js\");\n/** Maximum number of associated data items */\nexports.MAX_ASSOCIATED_DATA = 126;\n/** The AES-SIV mode of authenticated encryption */\nclass SIV {\n    /** Create a new AES-SIV instance with the given 32-byte or 64-byte key */\n    static importKey(keyData, alg, provider = new webcrypto_1.WebCryptoProvider()) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // We only support AES-128 and AES-256. AES-SIV needs a key 2X as long the intended security level\n            if (keyData.length !== 32 && keyData.length !== 64) {\n                throw new Error(`AES-SIV: key must be 32 or 64-bytes (got ${keyData.length}`);\n            }\n            const macKey = keyData.subarray(0, keyData.length / 2 | 0);\n            const encKey = keyData.subarray(keyData.length / 2 | 0);\n            let mac;\n            switch (alg) {\n                case \"AES-SIV\":\n                    mac = yield cmac_1.CMAC.importKey(provider, macKey);\n                    break;\n                case \"AES-CMAC-SIV\":\n                    mac = yield cmac_1.CMAC.importKey(provider, macKey);\n                    break;\n                case \"AES-PMAC-SIV\":\n                    mac = yield pmac_1.PMAC.importKey(provider, macKey);\n                    break;\n                default:\n                    throw new exceptions_1.NotImplementedError(`Miscreant: algorithm not supported: ${alg}`);\n            }\n            const ctr = yield provider.importCTRKey(encKey);\n            return new SIV(mac, ctr);\n        });\n    }\n    constructor(mac, ctr) {\n        this._mac = mac;\n        this._ctr = ctr;\n        this._tmp1 = new block_1.default();\n        this._tmp2 = new block_1.default();\n    }\n    /** Encrypt and authenticate data using AES-SIV */\n    seal(plaintext, associatedData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (associatedData.length > exports.MAX_ASSOCIATED_DATA) {\n                throw new Error(\"AES-SIV: too many associated data items\");\n            }\n            // Allocate space for sealed ciphertext.\n            const resultLength = block_1.default.SIZE + plaintext.length;\n            const result = new Uint8Array(resultLength);\n            // Authenticate.\n            const iv = yield this._s2v(associatedData, plaintext);\n            result.set(iv);\n            // Encrypt.\n            zeroIVBits(iv);\n            result.set(yield this._ctr.encryptCtr(iv, plaintext), iv.length);\n            return result;\n        });\n    }\n    /** Decrypt and authenticate data using AES-SIV */\n    open(sealed, associatedData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (associatedData.length > exports.MAX_ASSOCIATED_DATA) {\n                throw new Error(\"AES-SIV: too many associated data items\");\n            }\n            if (sealed.length < block_1.default.SIZE) {\n                throw new exceptions_1.IntegrityError(\"AES-SIV: ciphertext is truncated\");\n            }\n            // Decrypt.\n            const tag = sealed.subarray(0, block_1.default.SIZE);\n            const iv = this._tmp1.data;\n            iv.set(tag);\n            zeroIVBits(iv);\n            // NOTE: \"encryptCtr\" is intentional. CTR encryption/decryption are the same\n            const result = yield this._ctr.encryptCtr(iv, sealed.subarray(block_1.default.SIZE));\n            // Authenticate.\n            const expectedTag = yield this._s2v(associatedData, result);\n            if (!constant_time_1.equal(expectedTag, tag)) {\n                wipe_1.wipe(result);\n                throw new exceptions_1.IntegrityError(\"AES-SIV: ciphertext verification failure!\");\n            }\n            return result;\n        });\n    }\n    /** Make a best effort to wipe memory used by this instance */\n    clear() {\n        this._tmp1.clear();\n        this._tmp2.clear();\n        this._ctr.clear();\n        this._mac.clear();\n        return this;\n    }\n    /**\n     * The S2V operation consists of the doubling and XORing of the outputs\n     * of the pseudo-random function CMAC (or PMAC in the case of AES-PMAC-SIV).\n     *\n     * See Section 2.4 of RFC 5297 for more information\n     */\n    _s2v(associated_data, plaintext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._mac.reset();\n            this._tmp1.clear();\n            // Note: the standalone S2V returns CMAC(1) if the number of passed\n            // vectors is zero, however in SIV construction this case is never\n            // triggered, since we always pass plaintext as the last vector (even\n            // if it's zero-length), so we omit this case.\n            yield this._mac.update(this._tmp1.data);\n            this._tmp2.clear();\n            this._tmp2.data.set(yield this._mac.finish());\n            this._mac.reset();\n            for (const ad of associated_data) {\n                yield this._mac.update(ad);\n                this._tmp1.clear();\n                this._tmp1.data.set(yield this._mac.finish());\n                this._mac.reset();\n                this._tmp2.dbl();\n                xor_1.xor(this._tmp2.data, this._tmp1.data);\n            }\n            this._tmp1.clear();\n            if (plaintext.length >= block_1.default.SIZE) {\n                const n = plaintext.length - block_1.default.SIZE;\n                this._tmp1.data.set(plaintext.subarray(n));\n                yield this._mac.update(plaintext.subarray(0, n));\n            }\n            else {\n                this._tmp1.data.set(plaintext);\n                this._tmp1.data[plaintext.length] = 0x80;\n                this._tmp2.dbl();\n            }\n            xor_1.xor(this._tmp1.data, this._tmp2.data);\n            yield this._mac.update(this._tmp1.data);\n            return this._mac.finish();\n        });\n    }\n}\nexports.SIV = SIV;\n/** Zero out the top bits in the last 32-bit words of the IV */\nfunction zeroIVBits(iv) {\n    // \"We zero-out the top bit in each of the last two 32-bit words\n    // of the IV before assigning it to Ctr\"\n    //  — http://web.cs.ucdavis.edu/~rogaway/papers/siv.pdf\n    iv[iv.length - 8] &= 0x7f;\n    iv[iv.length - 4] &= 0x7f;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/siv.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/stream.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/stream.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * The STREAM online authenticated encryption construction.\n * See <https://eprint.iacr.org/2015/189.pdf> for definition.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst aead_1 = __webpack_require__(/*! ./aead */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/aead.js\");\nconst webcrypto_1 = __webpack_require__(/*! ./providers/webcrypto */ \"(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/providers/webcrypto.js\");\n/** Size of a nonce required by STREAM in bytes */\nexports.NONCE_SIZE = 8;\n/** Byte flag indicating this is the last block in the STREAM (otherwise 0) */\nexports.LAST_BLOCK_FLAG = 1;\n/** Maximum value of the counter STREAM uses internally to identify messages */\nexports.COUNTER_MAX = 0xFFFFFFFF;\n/**\n * A STREAM encryptor with a 32-bit counter, generalized for any AEAD algorithm\n *\n * This corresponds to the ℰ stream encryptor object as defined in the paper\n * Online Authenticated-Encryption and its Nonce-Reuse Misuse-Resistance\n */\nclass StreamEncryptor {\n    /** Create a new StreamEncryptor instance with the given key */\n    static importKey(keyData, nonce, alg, provider = new webcrypto_1.WebCryptoProvider()) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new StreamEncryptor(yield aead_1.AEAD.importKey(keyData, alg, provider), nonce);\n        });\n    }\n    constructor(aead, nonce) {\n        this._aead = aead;\n        this._nonce_encoder = new NonceEncoder(nonce);\n    }\n    /** Encrypt and authenticate data using the selected AEAD algorithm */\n    seal(plaintext, lastBlock = false, associatedData = new Uint8Array(0)) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._aead.seal(plaintext, this._nonce_encoder.next(lastBlock), associatedData);\n        });\n    }\n    /** Make a best effort to wipe memory used by this instance */\n    clear() {\n        this._aead.clear();\n        return this;\n    }\n}\nexports.StreamEncryptor = StreamEncryptor;\n/**\n * A STREAM decryptor with a 32-bit counter, generalized for any AEAD algorithm\n *\n * This corresponds to the 𝒟 stream decryptor object as defined in the paper\n * Online Authenticated-Encryption and its Nonce-Reuse Misuse-Resistance\n */\nclass StreamDecryptor {\n    /** Create a new StreamDecryptor instance with the given key */\n    static importKey(keyData, nonce, alg, provider = new webcrypto_1.WebCryptoProvider()) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new StreamDecryptor(yield aead_1.AEAD.importKey(keyData, alg, provider), nonce);\n        });\n    }\n    constructor(aead, nonce) {\n        this._aead = aead;\n        this._nonce_encoder = new NonceEncoder(nonce);\n    }\n    /** Decrypt and authenticate data using the selected AEAD algorithm */\n    open(ciphertext, lastBlock = false, associatedData = new Uint8Array(0)) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._aead.open(ciphertext, this._nonce_encoder.next(lastBlock), associatedData);\n        });\n    }\n    /** Make a best effort to wipe memory used by this instance */\n    clear() {\n        this._aead.clear();\n        return this;\n    }\n}\nexports.StreamDecryptor = StreamDecryptor;\n/** Computes STREAM nonces based on the current position in the STREAM. */\nclass NonceEncoder {\n    constructor(noncePrefix) {\n        if (noncePrefix.length !== exports.NONCE_SIZE) {\n            throw new Error(`STREAM: nonce must be 8-bits (got ${noncePrefix.length}`);\n        }\n        this.buffer = new ArrayBuffer(exports.NONCE_SIZE + 4 + 1);\n        this.view = new DataView(this.buffer);\n        this.array = new Uint8Array(this.buffer);\n        this.array.set(noncePrefix);\n        this.counter = 0;\n        this.finished = false;\n    }\n    /** Compute the next nonce value, incrementing the internal counter */\n    next(lastBlock) {\n        if (this.finished) {\n            throw new Error(\"STREAM: already finished\");\n        }\n        this.view.setInt32(8, this.counter, false);\n        if (lastBlock) {\n            this.view.setInt8(12, exports.LAST_BLOCK_FLAG);\n            this.finished = true;\n        }\n        else {\n            this.counter += 1;\n            if (this.counter > exports.COUNTER_MAX) {\n                throw new Error(\"STREAM counter overflowed\");\n            }\n        }\n        return this.array;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbWlzY3JlYW50QDAuMy4yL25vZGVfbW9kdWxlcy9taXNjcmVhbnQvcmVsZWFzZS9zdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0MsaUVBQWlFLHdCQUF3QjtBQUN6SDtBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLG1CQUFPLENBQUMsaUdBQVE7QUFDL0Isb0JBQW9CLG1CQUFPLENBQUMsK0hBQXVCO0FBQ25EO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLG1CQUFtQjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL2FidWJha3JqaW1vaC9EZXNrdG9wL0NvZGluZyBTdHVmZnMvaGFja2F0aG9uL3NlY3JldC1uZXR3b3JrL21lbWVBaV9jb2luX2NyZWF0b3IvYWktbWVtZS1jb2luLWNyZWF0b3Ivbm9kZV9tb2R1bGVzLy5wbnBtL21pc2NyZWFudEAwLjMuMi9ub2RlX21vZHVsZXMvbWlzY3JlYW50L3JlbGVhc2Uvc3RyZWFtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBUaGUgU1RSRUFNIG9ubGluZSBhdXRoZW50aWNhdGVkIGVuY3J5cHRpb24gY29uc3RydWN0aW9uLlxuICogU2VlIDxodHRwczovL2VwcmludC5pYWNyLm9yZy8yMDE1LzE4OS5wZGY+IGZvciBkZWZpbml0aW9uLlxuICovXG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHJlc3VsdC52YWx1ZSk7IH0pLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGFlYWRfMSA9IHJlcXVpcmUoXCIuL2FlYWRcIik7XG5jb25zdCB3ZWJjcnlwdG9fMSA9IHJlcXVpcmUoXCIuL3Byb3ZpZGVycy93ZWJjcnlwdG9cIik7XG4vKiogU2l6ZSBvZiBhIG5vbmNlIHJlcXVpcmVkIGJ5IFNUUkVBTSBpbiBieXRlcyAqL1xuZXhwb3J0cy5OT05DRV9TSVpFID0gODtcbi8qKiBCeXRlIGZsYWcgaW5kaWNhdGluZyB0aGlzIGlzIHRoZSBsYXN0IGJsb2NrIGluIHRoZSBTVFJFQU0gKG90aGVyd2lzZSAwKSAqL1xuZXhwb3J0cy5MQVNUX0JMT0NLX0ZMQUcgPSAxO1xuLyoqIE1heGltdW0gdmFsdWUgb2YgdGhlIGNvdW50ZXIgU1RSRUFNIHVzZXMgaW50ZXJuYWxseSB0byBpZGVudGlmeSBtZXNzYWdlcyAqL1xuZXhwb3J0cy5DT1VOVEVSX01BWCA9IDB4RkZGRkZGRkY7XG4vKipcbiAqIEEgU1RSRUFNIGVuY3J5cHRvciB3aXRoIGEgMzItYml0IGNvdW50ZXIsIGdlbmVyYWxpemVkIGZvciBhbnkgQUVBRCBhbGdvcml0aG1cbiAqXG4gKiBUaGlzIGNvcnJlc3BvbmRzIHRvIHRoZSDihLAgc3RyZWFtIGVuY3J5cHRvciBvYmplY3QgYXMgZGVmaW5lZCBpbiB0aGUgcGFwZXJcbiAqIE9ubGluZSBBdXRoZW50aWNhdGVkLUVuY3J5cHRpb24gYW5kIGl0cyBOb25jZS1SZXVzZSBNaXN1c2UtUmVzaXN0YW5jZVxuICovXG5jbGFzcyBTdHJlYW1FbmNyeXB0b3Ige1xuICAgIC8qKiBDcmVhdGUgYSBuZXcgU3RyZWFtRW5jcnlwdG9yIGluc3RhbmNlIHdpdGggdGhlIGdpdmVuIGtleSAqL1xuICAgIHN0YXRpYyBpbXBvcnRLZXkoa2V5RGF0YSwgbm9uY2UsIGFsZywgcHJvdmlkZXIgPSBuZXcgd2ViY3J5cHRvXzEuV2ViQ3J5cHRvUHJvdmlkZXIoKSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBTdHJlYW1FbmNyeXB0b3IoeWllbGQgYWVhZF8xLkFFQUQuaW1wb3J0S2V5KGtleURhdGEsIGFsZywgcHJvdmlkZXIpLCBub25jZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihhZWFkLCBub25jZSkge1xuICAgICAgICB0aGlzLl9hZWFkID0gYWVhZDtcbiAgICAgICAgdGhpcy5fbm9uY2VfZW5jb2RlciA9IG5ldyBOb25jZUVuY29kZXIobm9uY2UpO1xuICAgIH1cbiAgICAvKiogRW5jcnlwdCBhbmQgYXV0aGVudGljYXRlIGRhdGEgdXNpbmcgdGhlIHNlbGVjdGVkIEFFQUQgYWxnb3JpdGhtICovXG4gICAgc2VhbChwbGFpbnRleHQsIGxhc3RCbG9jayA9IGZhbHNlLCBhc3NvY2lhdGVkRGF0YSA9IG5ldyBVaW50OEFycmF5KDApKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fYWVhZC5zZWFsKHBsYWludGV4dCwgdGhpcy5fbm9uY2VfZW5jb2Rlci5uZXh0KGxhc3RCbG9jayksIGFzc29jaWF0ZWREYXRhKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKiBNYWtlIGEgYmVzdCBlZmZvcnQgdG8gd2lwZSBtZW1vcnkgdXNlZCBieSB0aGlzIGluc3RhbmNlICovXG4gICAgY2xlYXIoKSB7XG4gICAgICAgIHRoaXMuX2FlYWQuY2xlYXIoKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5TdHJlYW1FbmNyeXB0b3IgPSBTdHJlYW1FbmNyeXB0b3I7XG4vKipcbiAqIEEgU1RSRUFNIGRlY3J5cHRvciB3aXRoIGEgMzItYml0IGNvdW50ZXIsIGdlbmVyYWxpemVkIGZvciBhbnkgQUVBRCBhbGdvcml0aG1cbiAqXG4gKiBUaGlzIGNvcnJlc3BvbmRzIHRvIHRoZSDwnZKfIHN0cmVhbSBkZWNyeXB0b3Igb2JqZWN0IGFzIGRlZmluZWQgaW4gdGhlIHBhcGVyXG4gKiBPbmxpbmUgQXV0aGVudGljYXRlZC1FbmNyeXB0aW9uIGFuZCBpdHMgTm9uY2UtUmV1c2UgTWlzdXNlLVJlc2lzdGFuY2VcbiAqL1xuY2xhc3MgU3RyZWFtRGVjcnlwdG9yIHtcbiAgICAvKiogQ3JlYXRlIGEgbmV3IFN0cmVhbURlY3J5cHRvciBpbnN0YW5jZSB3aXRoIHRoZSBnaXZlbiBrZXkgKi9cbiAgICBzdGF0aWMgaW1wb3J0S2V5KGtleURhdGEsIG5vbmNlLCBhbGcsIHByb3ZpZGVyID0gbmV3IHdlYmNyeXB0b18xLldlYkNyeXB0b1Byb3ZpZGVyKCkpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgU3RyZWFtRGVjcnlwdG9yKHlpZWxkIGFlYWRfMS5BRUFELmltcG9ydEtleShrZXlEYXRhLCBhbGcsIHByb3ZpZGVyKSwgbm9uY2UpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoYWVhZCwgbm9uY2UpIHtcbiAgICAgICAgdGhpcy5fYWVhZCA9IGFlYWQ7XG4gICAgICAgIHRoaXMuX25vbmNlX2VuY29kZXIgPSBuZXcgTm9uY2VFbmNvZGVyKG5vbmNlKTtcbiAgICB9XG4gICAgLyoqIERlY3J5cHQgYW5kIGF1dGhlbnRpY2F0ZSBkYXRhIHVzaW5nIHRoZSBzZWxlY3RlZCBBRUFEIGFsZ29yaXRobSAqL1xuICAgIG9wZW4oY2lwaGVydGV4dCwgbGFzdEJsb2NrID0gZmFsc2UsIGFzc29jaWF0ZWREYXRhID0gbmV3IFVpbnQ4QXJyYXkoMCkpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9hZWFkLm9wZW4oY2lwaGVydGV4dCwgdGhpcy5fbm9uY2VfZW5jb2Rlci5uZXh0KGxhc3RCbG9jayksIGFzc29jaWF0ZWREYXRhKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKiBNYWtlIGEgYmVzdCBlZmZvcnQgdG8gd2lwZSBtZW1vcnkgdXNlZCBieSB0aGlzIGluc3RhbmNlICovXG4gICAgY2xlYXIoKSB7XG4gICAgICAgIHRoaXMuX2FlYWQuY2xlYXIoKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5TdHJlYW1EZWNyeXB0b3IgPSBTdHJlYW1EZWNyeXB0b3I7XG4vKiogQ29tcHV0ZXMgU1RSRUFNIG5vbmNlcyBiYXNlZCBvbiB0aGUgY3VycmVudCBwb3NpdGlvbiBpbiB0aGUgU1RSRUFNLiAqL1xuY2xhc3MgTm9uY2VFbmNvZGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihub25jZVByZWZpeCkge1xuICAgICAgICBpZiAobm9uY2VQcmVmaXgubGVuZ3RoICE9PSBleHBvcnRzLk5PTkNFX1NJWkUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgU1RSRUFNOiBub25jZSBtdXN0IGJlIDgtYml0cyAoZ290ICR7bm9uY2VQcmVmaXgubGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKGV4cG9ydHMuTk9OQ0VfU0laRSArIDQgKyAxKTtcbiAgICAgICAgdGhpcy52aWV3ID0gbmV3IERhdGFWaWV3KHRoaXMuYnVmZmVyKTtcbiAgICAgICAgdGhpcy5hcnJheSA9IG5ldyBVaW50OEFycmF5KHRoaXMuYnVmZmVyKTtcbiAgICAgICAgdGhpcy5hcnJheS5zZXQobm9uY2VQcmVmaXgpO1xuICAgICAgICB0aGlzLmNvdW50ZXIgPSAwO1xuICAgICAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gICAgfVxuICAgIC8qKiBDb21wdXRlIHRoZSBuZXh0IG5vbmNlIHZhbHVlLCBpbmNyZW1lbnRpbmcgdGhlIGludGVybmFsIGNvdW50ZXIgKi9cbiAgICBuZXh0KGxhc3RCbG9jaykge1xuICAgICAgICBpZiAodGhpcy5maW5pc2hlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU1RSRUFNOiBhbHJlYWR5IGZpbmlzaGVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudmlldy5zZXRJbnQzMig4LCB0aGlzLmNvdW50ZXIsIGZhbHNlKTtcbiAgICAgICAgaWYgKGxhc3RCbG9jaykge1xuICAgICAgICAgICAgdGhpcy52aWV3LnNldEludDgoMTIsIGV4cG9ydHMuTEFTVF9CTE9DS19GTEFHKTtcbiAgICAgICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5jb3VudGVyICs9IDE7XG4gICAgICAgICAgICBpZiAodGhpcy5jb3VudGVyID4gZXhwb3J0cy5DT1VOVEVSX01BWCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNUUkVBTSBjb3VudGVyIG92ZXJmbG93ZWRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYXJyYXk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/miscreant@0.3.2/node_modules/miscreant/release/stream.js\n");

/***/ })

};
;