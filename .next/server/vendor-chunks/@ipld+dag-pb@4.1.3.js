"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@ipld+dag-pb@4.1.3";
exports.ids = ["vendor-chunks/@ipld+dag-pb@4.1.3"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   createLink: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_3__.createLink),\n/* harmony export */   createNode: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_3__.createNode),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   prepare: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_3__.prepare),\n/* harmony export */   validate: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_3__.validate)\n/* harmony export */ });\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/cid */ \"(rsc)/./node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _pb_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pb-decode.js */ \"(rsc)/./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-decode.js\");\n/* harmony import */ var _pb_encode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pb-encode.js */ \"(rsc)/./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-encode.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util.js */ \"(rsc)/./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/util.js\");\n\n\n\n\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @typedef {import('./interface.js').PBLink} PBLink\n * @typedef {import('./interface.js').PBNode} PBNode\n */\n\nconst name = 'dag-pb'\nconst code = 0x70\n\n/**\n * @param {PBNode} node\n * @returns {ByteView<PBNode>}\n */\nfunction encode (node) {\n  ;(0,_util_js__WEBPACK_IMPORTED_MODULE_3__.validate)(node)\n\n  const pbn = {}\n  if (node.Links) {\n    pbn.Links = node.Links.map((l) => {\n      const link = {}\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes // cid -> bytes\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n  if (node.Data) {\n    pbn.Data = node.Data\n  }\n\n  return (0,_pb_encode_js__WEBPACK_IMPORTED_MODULE_2__.encodeNode)(pbn)\n}\n\n/**\n * @param {ByteView<PBNode> | ArrayBufferView<PBNode>} bytes\n * @returns {PBNode}\n */\nfunction decode (bytes) {\n  const buf = (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.toByteView)(bytes)\n  const pbn = (0,_pb_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeNode)(buf)\n\n  const node = {}\n\n  if (pbn.Data) {\n    node.Data = pbn.Data\n  }\n\n  if (pbn.Links) {\n    node.Links = pbn.Links.map((l) => {\n      const link = {}\n      try {\n        link.Hash = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.decode(l.Hash)\n      } catch (e) {}\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID')\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n\n  return node\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGlwbGQrZGFnLXBiQDQuMS4zL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctcGIvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzQztBQUNLO0FBQ0E7QUFDc0M7O0FBRWpGO0FBQ0E7QUFDQSxhQUFhLHFEQUFxRDtBQUNsRTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSw0REFBNEQ7QUFDekU7O0FBRUE7QUFDQSxhQUFhLGlDQUFpQztBQUM5QyxhQUFhLGlDQUFpQztBQUM5Qzs7QUFFTztBQUNBOztBQUVQO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1AsRUFBRSxtREFBUTs7QUFFVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVMseURBQVU7QUFDbkI7O0FBRUE7QUFDQSxXQUFXLDRDQUE0QztBQUN2RCxhQUFhO0FBQ2I7QUFDTztBQUNQLGNBQWMsb0RBQVU7QUFDeEIsY0FBYyx5REFBVTs7QUFFeEI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGlEQUFHO0FBQ3ZCLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVvRCIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vQGlwbGQrZGFnLXBiQDQuMS4zL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctcGIvc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENJRCB9IGZyb20gJ211bHRpZm9ybWF0cy9jaWQnXG5pbXBvcnQgeyBkZWNvZGVOb2RlIH0gZnJvbSAnLi9wYi1kZWNvZGUuanMnXG5pbXBvcnQgeyBlbmNvZGVOb2RlIH0gZnJvbSAnLi9wYi1lbmNvZGUuanMnXG5pbXBvcnQgeyBwcmVwYXJlLCB2YWxpZGF0ZSwgY3JlYXRlTm9kZSwgY3JlYXRlTGluaywgdG9CeXRlVmlldyB9IGZyb20gJy4vdXRpbC5qcydcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2NvZGVjcy9pbnRlcmZhY2UnKS5CeXRlVmlldzxUPn0gQnl0ZVZpZXdcbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtdWx0aWZvcm1hdHMvY29kZWNzL2ludGVyZmFjZScpLkFycmF5QnVmZmVyVmlldzxUPn0gQXJyYXlCdWZmZXJWaWV3XG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2ludGVyZmFjZS5qcycpLlBCTGlua30gUEJMaW5rXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2ludGVyZmFjZS5qcycpLlBCTm9kZX0gUEJOb2RlXG4gKi9cblxuZXhwb3J0IGNvbnN0IG5hbWUgPSAnZGFnLXBiJ1xuZXhwb3J0IGNvbnN0IGNvZGUgPSAweDcwXG5cbi8qKlxuICogQHBhcmFtIHtQQk5vZGV9IG5vZGVcbiAqIEByZXR1cm5zIHtCeXRlVmlldzxQQk5vZGU+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlIChub2RlKSB7XG4gIHZhbGlkYXRlKG5vZGUpXG5cbiAgY29uc3QgcGJuID0ge31cbiAgaWYgKG5vZGUuTGlua3MpIHtcbiAgICBwYm4uTGlua3MgPSBub2RlLkxpbmtzLm1hcCgobCkgPT4ge1xuICAgICAgY29uc3QgbGluayA9IHt9XG4gICAgICBpZiAobC5IYXNoKSB7XG4gICAgICAgIGxpbmsuSGFzaCA9IGwuSGFzaC5ieXRlcyAvLyBjaWQgLT4gYnl0ZXNcbiAgICAgIH1cbiAgICAgIGlmIChsLk5hbWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBsaW5rLk5hbWUgPSBsLk5hbWVcbiAgICAgIH1cbiAgICAgIGlmIChsLlRzaXplICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgbGluay5Uc2l6ZSA9IGwuVHNpemVcbiAgICAgIH1cbiAgICAgIHJldHVybiBsaW5rXG4gICAgfSlcbiAgfVxuICBpZiAobm9kZS5EYXRhKSB7XG4gICAgcGJuLkRhdGEgPSBub2RlLkRhdGFcbiAgfVxuXG4gIHJldHVybiBlbmNvZGVOb2RlKHBibilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0J5dGVWaWV3PFBCTm9kZT4gfCBBcnJheUJ1ZmZlclZpZXc8UEJOb2RlPn0gYnl0ZXNcbiAqIEByZXR1cm5zIHtQQk5vZGV9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUgKGJ5dGVzKSB7XG4gIGNvbnN0IGJ1ZiA9IHRvQnl0ZVZpZXcoYnl0ZXMpXG4gIGNvbnN0IHBibiA9IGRlY29kZU5vZGUoYnVmKVxuXG4gIGNvbnN0IG5vZGUgPSB7fVxuXG4gIGlmIChwYm4uRGF0YSkge1xuICAgIG5vZGUuRGF0YSA9IHBibi5EYXRhXG4gIH1cblxuICBpZiAocGJuLkxpbmtzKSB7XG4gICAgbm9kZS5MaW5rcyA9IHBibi5MaW5rcy5tYXAoKGwpID0+IHtcbiAgICAgIGNvbnN0IGxpbmsgPSB7fVxuICAgICAgdHJ5IHtcbiAgICAgICAgbGluay5IYXNoID0gQ0lELmRlY29kZShsLkhhc2gpXG4gICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgaWYgKCFsaW5rLkhhc2gpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIEhhc2ggZmllbGQgZm91bmQgaW4gbGluaywgZXhwZWN0ZWQgQ0lEJylcbiAgICAgIH1cbiAgICAgIGlmIChsLk5hbWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBsaW5rLk5hbWUgPSBsLk5hbWVcbiAgICAgIH1cbiAgICAgIGlmIChsLlRzaXplICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgbGluay5Uc2l6ZSA9IGwuVHNpemVcbiAgICAgIH1cbiAgICAgIHJldHVybiBsaW5rXG4gICAgfSlcbiAgfVxuXG4gIHJldHVybiBub2RlXG59XG5cbmV4cG9ydCB7IHByZXBhcmUsIHZhbGlkYXRlLCBjcmVhdGVOb2RlLCBjcmVhdGVMaW5rIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-decode.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-decode.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeNode: () => (/* binding */ decodeNode)\n/* harmony export */ });\nconst textDecoder = new TextDecoder()\n\n/**\n * @typedef {import('./interface.js').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface.js').RawPBNode} RawPBNode\n */\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[number, number]}\n */\nfunction decodeVarint (bytes, offset) {\n  let v = 0\n\n  for (let shift = 0; ; shift += 7) {\n    /* c8 ignore next 3 */\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow')\n    }\n    /* c8 ignore next 3 */\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data')\n    }\n\n    const b = bytes[offset++]\n    v += shift < 28 ? (b & 0x7f) << shift : (b & 0x7f) * (2 ** shift)\n    if (b < 0x80) {\n      break\n    }\n  }\n  return [v, offset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[Uint8Array, number]}\n */\nfunction decodeBytes (bytes, offset) {\n  let byteLen\n  ;[byteLen, offset] = decodeVarint(bytes, offset)\n  const postOffset = offset + byteLen\n\n  /* c8 ignore next 3 */\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length')\n  }\n  /* c8 ignore next 3 */\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data')\n  }\n\n  return [bytes.subarray(offset, postOffset), postOffset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} index\n * @returns {[number, number, number]}\n */\nfunction decodeKey (bytes, index) {\n  let wire\n  ;[wire, index] = decodeVarint(bytes, index)\n  // [wireType, fieldNum, newIndex]\n  return [wire & 0x7, wire >> 3, index]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBLink}\n */\nfunction decodeLink (bytes) {\n  /** @type {RawPBLink} */\n  const link = {}\n  const l = bytes.length\n  let index = 0\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Hash`)\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash')\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash')\n      }\n\n      [link.Hash, index] = decodeBytes(bytes, index)\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Name`)\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name')\n      }\n\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      link.Name = textDecoder.decode(byts)\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section')\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Tsize`)\n      }\n\n      [link.Tsize, index] = decodeVarint(bytes, index)\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data')\n  }\n\n  return link\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBNode}\n */\nfunction decodeNode (bytes) {\n  const l = bytes.length\n  let index = 0\n  /** @type {RawPBLink[]|void} */\n  let links = undefined // eslint-disable-line no-undef-init\n  let linksBeforeData = false\n  /** @type {Uint8Array|void} */\n  let data = undefined // eslint-disable-line no-undef-init\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${wireType}`)\n    }\n\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section')\n      }\n\n      [data, index] = decodeBytes(bytes, index)\n      if (links) {\n        linksBeforeData = true\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) { // interleaved Links/Data/Links\n        throw new Error('protobuf: (PBNode) duplicate Links section')\n      } else if (!links) {\n        links = []\n      }\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      links.push(decodeLink(byts))\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data')\n  }\n\n  /** @type {RawPBNode} */\n  const node = {}\n  if (data) {\n    node.Data = data\n  }\n  node.Links = links || []\n  return node\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGlwbGQrZGFnLXBiQDQuMS4zL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctcGIvc3JjL3BiLWRlY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRUE7QUFDQSxhQUFhLG9DQUFvQztBQUNqRDs7QUFFQTtBQUNBLGFBQWEsb0NBQW9DO0FBQ2pEOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBOztBQUVBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWEsV0FBVztBQUN4QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxTQUFTO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELFNBQVM7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1A7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsU0FBUztBQUN2RTs7QUFFQTtBQUNBLE1BQU07QUFDTix5RkFBeUYsU0FBUztBQUNsRztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0EsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQTtBQUNBLGFBQWEsaUJBQWlCO0FBQzlCOztBQUVBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0EsOEVBQThFLFNBQVM7QUFDdkY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sNkJBQTZCO0FBQzdCO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLE1BQU07QUFDTixzRkFBc0YsU0FBUztBQUMvRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsV0FBVztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vQGlwbGQrZGFnLXBiQDQuMS4zL25vZGVfbW9kdWxlcy9AaXBsZC9kYWctcGIvc3JjL3BiLWRlY29kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0ZXh0RGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UuanMnKS5SYXdQQkxpbmt9IFJhd1BCTGlua1xuICovXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UuanMnKS5SYXdQQk5vZGV9IFJhd1BCTm9kZVxuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldFxuICogQHJldHVybnMge1tudW1iZXIsIG51bWJlcl19XG4gKi9cbmZ1bmN0aW9uIGRlY29kZVZhcmludCAoYnl0ZXMsIG9mZnNldCkge1xuICBsZXQgdiA9IDBcblxuICBmb3IgKGxldCBzaGlmdCA9IDA7IDsgc2hpZnQgKz0gNykge1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICBpZiAoc2hpZnQgPj0gNjQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcigncHJvdG9idWY6IHZhcmludCBvdmVyZmxvdycpXG4gICAgfVxuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICBpZiAob2Zmc2V0ID49IGJ5dGVzLmxlbmd0aCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdwcm90b2J1ZjogdW5leHBlY3RlZCBlbmQgb2YgZGF0YScpXG4gICAgfVxuXG4gICAgY29uc3QgYiA9IGJ5dGVzW29mZnNldCsrXVxuICAgIHYgKz0gc2hpZnQgPCAyOCA/IChiICYgMHg3ZikgPDwgc2hpZnQgOiAoYiAmIDB4N2YpICogKDIgKiogc2hpZnQpXG4gICAgaWYgKGIgPCAweDgwKSB7XG4gICAgICBicmVha1xuICAgIH1cbiAgfVxuICByZXR1cm4gW3YsIG9mZnNldF1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0XG4gKiBAcmV0dXJucyB7W1VpbnQ4QXJyYXksIG51bWJlcl19XG4gKi9cbmZ1bmN0aW9uIGRlY29kZUJ5dGVzIChieXRlcywgb2Zmc2V0KSB7XG4gIGxldCBieXRlTGVuXG4gIDtbYnl0ZUxlbiwgb2Zmc2V0XSA9IGRlY29kZVZhcmludChieXRlcywgb2Zmc2V0KVxuICBjb25zdCBwb3N0T2Zmc2V0ID0gb2Zmc2V0ICsgYnl0ZUxlblxuXG4gIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgaWYgKGJ5dGVMZW4gPCAwIHx8IHBvc3RPZmZzZXQgPCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm90b2J1ZjogaW52YWxpZCBsZW5ndGgnKVxuICB9XG4gIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgaWYgKHBvc3RPZmZzZXQgPiBieXRlcy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb3RvYnVmOiB1bmV4cGVjdGVkIGVuZCBvZiBkYXRhJylcbiAgfVxuXG4gIHJldHVybiBbYnl0ZXMuc3ViYXJyYXkob2Zmc2V0LCBwb3N0T2Zmc2V0KSwgcG9zdE9mZnNldF1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gKiBAcGFyYW0ge251bWJlcn0gaW5kZXhcbiAqIEByZXR1cm5zIHtbbnVtYmVyLCBudW1iZXIsIG51bWJlcl19XG4gKi9cbmZ1bmN0aW9uIGRlY29kZUtleSAoYnl0ZXMsIGluZGV4KSB7XG4gIGxldCB3aXJlXG4gIDtbd2lyZSwgaW5kZXhdID0gZGVjb2RlVmFyaW50KGJ5dGVzLCBpbmRleClcbiAgLy8gW3dpcmVUeXBlLCBmaWVsZE51bSwgbmV3SW5kZXhdXG4gIHJldHVybiBbd2lyZSAmIDB4Nywgd2lyZSA+PiAzLCBpbmRleF1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gKiBAcmV0dXJucyB7UmF3UEJMaW5rfVxuICovXG5mdW5jdGlvbiBkZWNvZGVMaW5rIChieXRlcykge1xuICAvKiogQHR5cGUge1Jhd1BCTGlua30gKi9cbiAgY29uc3QgbGluayA9IHt9XG4gIGNvbnN0IGwgPSBieXRlcy5sZW5ndGhcbiAgbGV0IGluZGV4ID0gMFxuXG4gIHdoaWxlIChpbmRleCA8IGwpIHtcbiAgICBsZXQgd2lyZVR5cGUsIGZpZWxkTnVtXG4gICAgO1t3aXJlVHlwZSwgZmllbGROdW0sIGluZGV4XSA9IGRlY29kZUtleShieXRlcywgaW5kZXgpXG5cbiAgICBpZiAoZmllbGROdW0gPT09IDEpIHtcbiAgICAgIGlmIChsaW5rLkhhc2gpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdwcm90b2J1ZjogKFBCTGluaykgZHVwbGljYXRlIEhhc2ggc2VjdGlvbicpXG4gICAgICB9XG4gICAgICBpZiAod2lyZVR5cGUgIT09IDIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBwcm90b2J1ZjogKFBCTGluaykgd3Jvbmcgd2lyZVR5cGUgKCR7d2lyZVR5cGV9KSBmb3IgSGFzaGApXG4gICAgICB9XG4gICAgICBpZiAobGluay5OYW1lICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdwcm90b2J1ZjogKFBCTGluaykgaW52YWxpZCBvcmRlciwgZm91bmQgTmFtZSBiZWZvcmUgSGFzaCcpXG4gICAgICB9XG4gICAgICBpZiAobGluay5Uc2l6ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigncHJvdG9idWY6IChQQkxpbmspIGludmFsaWQgb3JkZXIsIGZvdW5kIFRzaXplIGJlZm9yZSBIYXNoJylcbiAgICAgIH1cblxuICAgICAgW2xpbmsuSGFzaCwgaW5kZXhdID0gZGVjb2RlQnl0ZXMoYnl0ZXMsIGluZGV4KVxuICAgIH0gZWxzZSBpZiAoZmllbGROdW0gPT09IDIpIHtcbiAgICAgIGlmIChsaW5rLk5hbWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb3RvYnVmOiAoUEJMaW5rKSBkdXBsaWNhdGUgTmFtZSBzZWN0aW9uJylcbiAgICAgIH1cbiAgICAgIGlmICh3aXJlVHlwZSAhPT0gMikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYHByb3RvYnVmOiAoUEJMaW5rKSB3cm9uZyB3aXJlVHlwZSAoJHt3aXJlVHlwZX0pIGZvciBOYW1lYClcbiAgICAgIH1cbiAgICAgIGlmIChsaW5rLlRzaXplICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdwcm90b2J1ZjogKFBCTGluaykgaW52YWxpZCBvcmRlciwgZm91bmQgVHNpemUgYmVmb3JlIE5hbWUnKVxuICAgICAgfVxuXG4gICAgICBsZXQgYnl0c1xuICAgICAgO1tieXRzLCBpbmRleF0gPSBkZWNvZGVCeXRlcyhieXRlcywgaW5kZXgpXG4gICAgICBsaW5rLk5hbWUgPSB0ZXh0RGVjb2Rlci5kZWNvZGUoYnl0cylcbiAgICB9IGVsc2UgaWYgKGZpZWxkTnVtID09PSAzKSB7XG4gICAgICBpZiAobGluay5Uc2l6ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigncHJvdG9idWY6IChQQkxpbmspIGR1cGxpY2F0ZSBUc2l6ZSBzZWN0aW9uJylcbiAgICAgIH1cbiAgICAgIGlmICh3aXJlVHlwZSAhPT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYHByb3RvYnVmOiAoUEJMaW5rKSB3cm9uZyB3aXJlVHlwZSAoJHt3aXJlVHlwZX0pIGZvciBUc2l6ZWApXG4gICAgICB9XG5cbiAgICAgIFtsaW5rLlRzaXplLCBpbmRleF0gPSBkZWNvZGVWYXJpbnQoYnl0ZXMsIGluZGV4KVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYHByb3RvYnVmOiAoUEJMaW5rKSBpbnZhbGlkIGZpZWxkTnVtYmVyLCBleHBlY3RlZCAxLCAyIG9yIDMsIGdvdCAke2ZpZWxkTnVtfWApXG4gICAgfVxuICB9XG5cbiAgLyogYzggaWdub3JlIG5leHQgMyAqL1xuICBpZiAoaW5kZXggPiBsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm90b2J1ZjogKFBCTGluaykgdW5leHBlY3RlZCBlbmQgb2YgZGF0YScpXG4gIH1cblxuICByZXR1cm4gbGlua1xufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEByZXR1cm5zIHtSYXdQQk5vZGV9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOb2RlIChieXRlcykge1xuICBjb25zdCBsID0gYnl0ZXMubGVuZ3RoXG4gIGxldCBpbmRleCA9IDBcbiAgLyoqIEB0eXBlIHtSYXdQQkxpbmtbXXx2b2lkfSAqL1xuICBsZXQgbGlua3MgPSB1bmRlZmluZWQgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZi1pbml0XG4gIGxldCBsaW5rc0JlZm9yZURhdGEgPSBmYWxzZVxuICAvKiogQHR5cGUge1VpbnQ4QXJyYXl8dm9pZH0gKi9cbiAgbGV0IGRhdGEgPSB1bmRlZmluZWQgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZi1pbml0XG5cbiAgd2hpbGUgKGluZGV4IDwgbCkge1xuICAgIGxldCB3aXJlVHlwZSwgZmllbGROdW1cbiAgICA7W3dpcmVUeXBlLCBmaWVsZE51bSwgaW5kZXhdID0gZGVjb2RlS2V5KGJ5dGVzLCBpbmRleClcblxuICAgIGlmICh3aXJlVHlwZSAhPT0gMikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBwcm90b2J1ZjogKFBCTm9kZSkgaW52YWxpZCB3aXJlVHlwZSwgZXhwZWN0ZWQgMiwgZ290ICR7d2lyZVR5cGV9YClcbiAgICB9XG5cbiAgICBpZiAoZmllbGROdW0gPT09IDEpIHtcbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigncHJvdG9idWY6IChQQk5vZGUpIGR1cGxpY2F0ZSBEYXRhIHNlY3Rpb24nKVxuICAgICAgfVxuXG4gICAgICBbZGF0YSwgaW5kZXhdID0gZGVjb2RlQnl0ZXMoYnl0ZXMsIGluZGV4KVxuICAgICAgaWYgKGxpbmtzKSB7XG4gICAgICAgIGxpbmtzQmVmb3JlRGF0YSA9IHRydWVcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGZpZWxkTnVtID09PSAyKSB7XG4gICAgICBpZiAobGlua3NCZWZvcmVEYXRhKSB7IC8vIGludGVybGVhdmVkIExpbmtzL0RhdGEvTGlua3NcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdwcm90b2J1ZjogKFBCTm9kZSkgZHVwbGljYXRlIExpbmtzIHNlY3Rpb24nKVxuICAgICAgfSBlbHNlIGlmICghbGlua3MpIHtcbiAgICAgICAgbGlua3MgPSBbXVxuICAgICAgfVxuICAgICAgbGV0IGJ5dHNcbiAgICAgIDtbYnl0cywgaW5kZXhdID0gZGVjb2RlQnl0ZXMoYnl0ZXMsIGluZGV4KVxuICAgICAgbGlua3MucHVzaChkZWNvZGVMaW5rKGJ5dHMpKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYHByb3RvYnVmOiAoUEJOb2RlKSBpbnZhbGlkIGZpZWxkTnVtYmVyLCBleHBlY3RlZCAxIG9yIDIsIGdvdCAke2ZpZWxkTnVtfWApXG4gICAgfVxuICB9XG5cbiAgLyogYzggaWdub3JlIG5leHQgMyAqL1xuICBpZiAoaW5kZXggPiBsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm90b2J1ZjogKFBCTm9kZSkgdW5leHBlY3RlZCBlbmQgb2YgZGF0YScpXG4gIH1cblxuICAvKiogQHR5cGUge1Jhd1BCTm9kZX0gKi9cbiAgY29uc3Qgbm9kZSA9IHt9XG4gIGlmIChkYXRhKSB7XG4gICAgbm9kZS5EYXRhID0gZGF0YVxuICB9XG4gIG5vZGUuTGlua3MgPSBsaW5rcyB8fCBbXVxuICByZXR1cm4gbm9kZVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-decode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-encode.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-encode.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeNode: () => (/* binding */ encodeNode)\n/* harmony export */ });\nconst textEncoder = new TextEncoder()\nconst maxInt32 = 2 ** 32\nconst maxUInt32 = 2 ** 31\n\n/**\n * @typedef {import('./interface.js').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface.js').RawPBNode} RawPBNode\n */\n\n// the encoders work backward from the end of the bytes array\n\n/**\n * encodeLink() is passed a slice of the parent byte array that ends where this\n * link needs to end, so it packs to the right-most part of the passed `bytes`\n *\n * @param {RawPBLink} link\n * @param {Uint8Array} bytes\n * @returns {number}\n */\nfunction encodeLink (link, bytes) {\n  let i = bytes.length\n\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative')\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding')\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1\n    bytes[i] = 0x18\n  }\n\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name)\n    i -= nameBytes.length\n    bytes.set(nameBytes, i)\n    i = encodeVarint(bytes, i, nameBytes.length) - 1\n    bytes[i] = 0x12\n  }\n\n  if (link.Hash) {\n    i -= link.Hash.length\n    bytes.set(link.Hash, i)\n    i = encodeVarint(bytes, i, link.Hash.length) - 1\n    bytes[i] = 0xa\n  }\n\n  return bytes.length - i\n}\n\n/**\n * Encodes a PBNode into a new byte array of precisely the correct size\n *\n * @param {RawPBNode} node\n * @returns {Uint8Array}\n */\nfunction encodeNode (node) {\n  const size = sizeNode(node)\n  const bytes = new Uint8Array(size)\n  let i = size\n\n  if (node.Data) {\n    i -= node.Data.length\n    bytes.set(node.Data, i)\n    i = encodeVarint(bytes, i, node.Data.length) - 1\n    bytes[i] = 0xa\n  }\n\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i))\n      i -= size\n      i = encodeVarint(bytes, i, size) - 1\n      bytes[i] = 0x12\n    }\n  }\n\n  return bytes\n}\n\n/**\n * work out exactly how many bytes this link takes up\n *\n * @param {RawPBLink} link\n * @returns\n */\nfunction sizeLink (link) {\n  let n = 0\n\n  if (link.Hash) {\n    const l = link.Hash.length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize)\n  }\n\n  return n\n}\n\n/**\n * Work out exactly how many bytes this node takes up\n *\n * @param {RawPBNode} node\n * @returns {number}\n */\nfunction sizeNode (node) {\n  let n = 0\n\n  if (node.Data) {\n    const l = node.Data.length\n    n += 1 + l + sov(l)\n  }\n\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link)\n      n += 1 + l + sov(l)\n    }\n  }\n\n  return n\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @param {number} v\n * @returns {number}\n */\nfunction encodeVarint (bytes, offset, v) {\n  offset -= sov(v)\n  const base = offset\n\n  while (v >= maxUInt32) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v /= 128\n  }\n\n  while (v >= 128) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v >>>= 7\n  }\n\n  bytes[offset] = v\n\n  return base\n}\n\n/**\n * size of varint\n *\n * @param {number} x\n * @returns {number}\n */\nfunction sov (x) {\n  if (x % 2 === 0) {\n    x++\n  }\n  return Math.floor((len64(x) + 6) / 7)\n}\n\n/**\n * golang math/bits, how many bits does it take to represent this integer?\n *\n * @param {number} x\n * @returns {number}\n */\nfunction len64 (x) {\n  let n = 0\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32)\n    n = 32\n  }\n  if (x >= (1 << 16)) {\n    x >>>= 16\n    n += 16\n  }\n  if (x >= (1 << 8)) {\n    x >>>= 8\n    n += 8\n  }\n  return n + len8tab[x]\n}\n\n// golang math/bits\nconst len8tab = [\n  0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8\n]\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/pb-encode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/util.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/util.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLink: () => (/* binding */ createLink),\n/* harmony export */   createNode: () => (/* binding */ createNode),\n/* harmony export */   prepare: () => (/* binding */ prepare),\n/* harmony export */   toByteView: () => (/* binding */ toByteView),\n/* harmony export */   validate: () => (/* binding */ validate)\n/* harmony export */ });\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/cid */ \"(rsc)/./node_modules/.pnpm/multiformats@13.3.2/node_modules/multiformats/dist/src/cid.js\");\n\n\n/**\n * @typedef {import('./interface.js').PBLink} PBLink\n * @typedef {import('./interface.js').PBNode} PBNode\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\nconst pbNodeProperties = ['Data', 'Links']\nconst pbLinkProperties = ['Hash', 'Name', 'Tsize']\n\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {PBLink} a\n * @param {PBLink} b\n * @returns {number}\n */\nfunction linkComparator (a, b) {\n  if (a === b) {\n    return 0\n  }\n\n  const abuf = a.Name ? textEncoder.encode(a.Name) : []\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : []\n\n  let x = abuf.length\n  let y = bbuf.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i]\n      y = bbuf[i]\n      break\n    }\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0\n}\n\n/**\n * @param {any} node\n * @param {string[]} properties\n * @returns {boolean}\n */\nfunction hasOnlyProperties (node, properties) {\n  return !Object.keys(node).some((p) => !properties.includes(p))\n}\n\n/**\n * Converts a CID, or a PBLink-like object to a PBLink\n *\n * @param {any} link\n * @returns {PBLink}\n */\nfunction asLink (link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(link)\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n    return { Hash }\n  }\n\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  const pbl = {}\n\n  if (link.Hash) {\n    let cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.asCID(link.Hash)\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.parse(link.Hash)\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_0__.CID.decode(link.Hash)\n        }\n      }\n    } catch (/** @type {any} */ e) {\n      throw new TypeError(`Invalid DAG-PB form: ${e.message}`)\n    }\n\n    if (cid) {\n      pbl.Hash = cid\n    }\n  }\n\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name\n  }\n\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize\n  }\n\n  return pbl\n}\n\n/**\n * @param {any} node\n * @returns {PBNode}\n */\nfunction prepare (node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node }\n  }\n\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  /** @type {PBNode} */\n  const pbn = {}\n\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data)\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  }\n\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink)\n      pbn.Links.sort(linkComparator)\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  } else {\n    pbn.Links = []\n  }\n\n  return pbn\n}\n\n/**\n * @param {PBNode} node\n */\nfunction validate (node) {\n  /*\n  type PBLink struct {\n    Hash optional Link\n    Name optional String\n    Tsize optional Int\n  }\n\n  type PBNode struct {\n    Links [PBLink]\n    Data optional Bytes\n  }\n  */\n  // @ts-ignore private property for TS\n  if (!node || typeof node !== 'object' || Array.isArray(node) || node instanceof Uint8Array || (node['/'] && node['/'] === node.bytes)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)')\n  }\n\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be bytes)')\n  }\n\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be a list)')\n  }\n\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i]\n    // @ts-ignore private property for TS\n    if (!link || typeof link !== 'object' || Array.isArray(link) || link instanceof Uint8Array || (link['/'] && link['/'] === link.bytes)) {\n      throw new TypeError('Invalid DAG-PB form (bad link)')\n    }\n\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link)')\n    }\n\n    if (link.Hash === undefined) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)')\n    }\n\n    // @ts-ignore private property for TS\n    if (link.Hash == null || !link.Hash['/'] || link.Hash['/'] !== link.Hash.bytes) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)')\n    }\n\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)')\n    }\n\n    if (link.Tsize !== undefined) {\n      if (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0) {\n        throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)')\n      }\n      if (link.Tsize < 0) {\n        throw new TypeError('Invalid DAG-PB form (link Tsize cannot be negative)')\n      }\n    }\n\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)')\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} data\n * @param {PBLink[]} [links=[]]\n * @returns {PBNode}\n */\nfunction createNode (data, links = []) {\n  return prepare({ Data: data, Links: links })\n}\n\n/**\n * @param {string} name\n * @param {number} size\n * @param {CID} cid\n * @returns {PBLink}\n */\nfunction createLink (name, size, cid) {\n  return asLink({ Hash: cid, Name: name, Tsize: size })\n}\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nfunction toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@ipld+dag-pb@4.1.3/node_modules/@ipld/dag-pb/src/util.js\n");

/***/ })

};
;