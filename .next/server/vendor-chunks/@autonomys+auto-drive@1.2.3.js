"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@autonomys+auto-drive@1.2.3";
exports.ids = ["vendor-chunks/@autonomys+auto-drive@1.2.3"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/download.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/download.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.downloadObject = void 0;\nconst downloadObject = (api, query) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield api.sendRequest(`/objects/${query.cid}/download`, {\n        method: 'GET',\n    });\n    if (!response.ok) {\n        throw new Error(`Failed to download file: ${response.statusText}`);\n    }\n    if (!response.body) {\n        throw new Error('No body returned from download request');\n    }\n    return response.body;\n});\nexports.downloadObject = downloadObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9hcGkvY2FsbHMvZG93bmxvYWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QjtBQUNBLHVEQUF1RCxVQUFVO0FBQ2pFO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0RBQW9ELG9CQUFvQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHNCQUFzQiIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9hcGkvY2FsbHMvZG93bmxvYWQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZG93bmxvYWRPYmplY3QgPSB2b2lkIDA7XG5jb25zdCBkb3dubG9hZE9iamVjdCA9IChhcGksIHF1ZXJ5KSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIGFwaS5zZW5kUmVxdWVzdChgL29iamVjdHMvJHtxdWVyeS5jaWR9L2Rvd25sb2FkYCwge1xuICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgIH0pO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZG93bmxvYWQgZmlsZTogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgIH1cbiAgICBpZiAoIXJlc3BvbnNlLmJvZHkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBib2R5IHJldHVybmVkIGZyb20gZG93bmxvYWQgcmVxdWVzdCcpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzcG9uc2UuYm9keTtcbn0pO1xuZXhwb3J0cy5kb3dubG9hZE9iamVjdCA9IGRvd25sb2FkT2JqZWN0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/download.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/index.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/index.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.apiCalls = void 0;\nconst downloadCalls = __importStar(__webpack_require__(/*! ./download */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/download.js\"));\nconst readCalls = __importStar(__webpack_require__(/*! ./read */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/read.js\"));\nconst uploadCalls = __importStar(__webpack_require__(/*! ./upload */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/upload.js\"));\nconst writeCalls = __importStar(__webpack_require__(/*! ./write */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/write.js\"));\nexports.apiCalls = Object.assign(Object.assign(Object.assign(Object.assign({}, downloadCalls), readCalls), uploadCalls), writeCalls);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9hcGkvY2FsbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxjQUFjO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLG1DQUFtQyxtQkFBTyxDQUFDLHdJQUFZO0FBQ3ZELCtCQUErQixtQkFBTyxDQUFDLGdJQUFRO0FBQy9DLGlDQUFpQyxtQkFBTyxDQUFDLG9JQUFVO0FBQ25ELGdDQUFnQyxtQkFBTyxDQUFDLGtJQUFTO0FBQ2pELGdCQUFnQiw2REFBNkQiLCJzb3VyY2VzIjpbIi9ob21lL2FidWJha3JqaW1vaC9EZXNrdG9wL0NvZGluZyBTdHVmZnMvaGFja2F0aG9uL3NlY3JldC1uZXR3b3JrL21lbWVBaV9jb2luX2NyZWF0b3IvYWktbWVtZS1jb2luLWNyZWF0b3Ivbm9kZV9tb2R1bGVzLy5wbnBtL0BhdXRvbm9teXMrYXV0by1kcml2ZUAxLjIuMy9ub2RlX21vZHVsZXMvQGF1dG9ub215cy9hdXRvLWRyaXZlL2Rpc3QvYXBpL2NhbGxzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBvd25LZXlzID0gZnVuY3Rpb24obykge1xuICAgICAgICBvd25LZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgfHwgZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgICAgIHZhciBhciA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgayBpbiBvKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG8sIGspKSBhclthci5sZW5ndGhdID0gaztcbiAgICAgICAgICAgIHJldHVybiBhcjtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIG93bktleXMobyk7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKG1vZCkge1xuICAgICAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgICAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayA9IG93bktleXMobW9kKSwgaSA9IDA7IGkgPCBrLmxlbmd0aDsgaSsrKSBpZiAoa1tpXSAhPT0gXCJkZWZhdWx0XCIpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwga1tpXSk7XG4gICAgICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFwaUNhbGxzID0gdm9pZCAwO1xuY29uc3QgZG93bmxvYWRDYWxscyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9kb3dubG9hZFwiKSk7XG5jb25zdCByZWFkQ2FsbHMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vcmVhZFwiKSk7XG5jb25zdCB1cGxvYWRDYWxscyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi91cGxvYWRcIikpO1xuY29uc3Qgd3JpdGVDYWxscyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi93cml0ZVwiKSk7XG5leHBvcnRzLmFwaUNhbGxzID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZG93bmxvYWRDYWxscyksIHJlYWRDYWxscyksIHVwbG9hZENhbGxzKSwgd3JpdGVDYWxscyk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/read.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/read.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getMe = exports.getObjectMetadata = exports.getObjectOwners = exports.getObjectUploadStatus = exports.getObject = exports.getDeleted = exports.getSharedWithMe = exports.getRoots = void 0;\n/**\n * Retrieves the root objects based on the specified scope.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithPagination<{ scope: Scope }>} query - The query parameters including scope, limit, and offset.\n * @returns {Promise<ObjectSummary[]>} - A promise that resolves to an array of ObjectSummary representing the root objects.\n * @throws {Error} - Throws an error if the request fails.\n */\nconst getRoots = (api, query) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield api.sendRequest(`/objects/roots?scope=${query.scope}&limit=${query.limit}&offset=${query.offset}`, {\n        method: 'GET',\n    });\n    if (!response.ok) {\n        throw new Error(`Failed to get roots: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.getRoots = getRoots;\n/**\n * Retrieves the objects that have been shared with the authenticated user.\n *\n * This method sends a request to the server to fetch a list of objects\n * that are shared with the user, based on the specified pagination parameters.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithPagination} query - The query parameters including limit and offset for pagination.\n * @returns {Promise<ObjectSummary[]>} - A promise that resolves to an array of ObjectSummary representing the shared objects.\n * @throws {Error} - Throws an error if the request fails.\n */\nconst getSharedWithMe = (api, query) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield api.sendRequest(`/objects/roots/shared?limit=${query.limit}&offset=${query.offset}`, {\n        method: 'GET',\n    });\n    if (!response.ok) {\n        throw new Error(`Failed to get shared with me: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.getSharedWithMe = getSharedWithMe;\n/**\n * Retrieves the objects that have been marked as deleted.\n *\n * This method sends a request to the server to fetch a list of objects\n * that have been deleted, based on the specified pagination parameters.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithPagination} query - The query parameters including limit and offset for pagination.\n * @returns {Promise<ObjectSummary[]>} - A promise that resolves to an array of ObjectSummary representing the deleted objects.\n * @throws {Error} - Throws an error if the request fails.\n */\nconst getDeleted = (api, query) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield api.sendRequest(`/objects/roots/deleted?limit=${query.limit}&offset=${query.offset}`, {\n        method: 'GET',\n    });\n    if (!response.ok) {\n        throw new Error(`Failed to get deleted: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.getDeleted = getDeleted;\n/**\n * Retrieves the aggregated information of a specific object identified by its CID.\n *\n * This method sends a request to the server to fetch details about the\n * object, including its metadata and other relevant information.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithoutPagination<{ cid: string }>} query - The query parameters containing the CID of the object to retrieve.\n * @returns {Promise<ObjectInformation>} - A promise that resolves to the information of the requested object.\n * @throws {Error} - Throws an error if the request fails.\n */\nconst getObject = (api, query) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield api.sendRequest(`/objects/${query.cid}`, {\n        method: 'GET',\n    });\n    if (!response.ok) {\n        throw new Error(`Failed to get object: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.getObject = getObject;\n/**\n * Retrieves the upload status of a specific object identified by its CID.\n *\n * This method sends a request to the server to fetch the current upload status\n * of the object, which can indicate whether the upload is pending, completed,\n * or failed.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithoutPagination<{ cid: string }>} query - The query parameters containing the CID of the object whose upload status is to be retrieved.\n * @returns {Promise<ObjectInformation['uploadStatus']>} - A promise that resolves to the upload status of the requested object.\n * @throws {Error} - Throws an error if the request fails.\n */\nconst getObjectUploadStatus = (api, query) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield api.sendRequest(`/objects/${query.cid}/status`, {\n        method: 'GET',\n    });\n    if (!response.ok) {\n        throw new Error(`Failed to get object: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.getObjectUploadStatus = getObjectUploadStatus;\n/**\n * Retrieves the owners of a specific object identified by its CID.\n *\n * This method sends a request to the server to fetch the list of owners\n * associated with the object. The owners can provide insights into who\n * has access to or control over the object.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithoutPagination<{ cid: string }>} query - The query parameters containing the CID of the object whose owners are to be retrieved.\n * @returns {Promise<ObjectInformation['owners']>} - A promise that resolves to the list of owners of the requested object.\n * @throws {Error} - Throws an error if the request fails.\n */\nconst getObjectOwners = (api, query) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield api.sendRequest(`/objects/${query.cid}/owners`, {\n        method: 'GET',\n    });\n    if (!response.ok) {\n        throw new Error(`Failed to get object: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.getObjectOwners = getObjectOwners;\n/**\n * Retrieves the metadata of a specific object identified by its CID.\n *\n * This method sends a request to the server to fetch the metadata associated\n * with the object. The metadata can include various details about the object,\n * such as its name, type, size, and other relevant information.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithoutPagination<{ cid: string }>} query - The query parameters containing the CID of the object whose metadata is to be retrieved.\n * @returns {Promise<ObjectInformation['metadata']>} - A promise that resolves to the metadata of the requested object.\n * @throws {Error} - Throws an error if the request fails.\n */\nconst getObjectMetadata = (api, query) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield api.sendRequest(`/objects/${query.cid}/metadata`, {\n        method: 'GET',\n    });\n    if (!response.ok) {\n        throw new Error(`Failed to get object: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.getObjectMetadata = getObjectMetadata;\n/**\n * Get upload and download limits of the user\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @returns {Promise<UserInfo>} - A promise that resolves to the user info.\n * @throws {Error} - Throws an error if the request fails.\n */\nconst getMe = (api) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield api.sendRequest('@me', {\n        method: 'GET',\n    });\n    if (!response.ok) {\n        throw new Error(`Failed to get limits: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.getMe = getMe;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/read.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/upload.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/upload.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.completeUpload = exports.uploadFileChunk = exports.createFileUploadWithinFolderUpload = exports.createFolderUpload = exports.createFileUpload = void 0;\n/**\n * Initiates a file upload to the server.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithoutPagination<{ mimeType?: string; filename: string; uploadOptions: FileUploadOptions | null }>} args - The arguments for the file upload.\n * @param {string} args.mimeType - The MIME type of the file (optional).\n * @param {string} args.filename - The name of the file to be uploaded.\n * @param {FileUploadOptions | null} args.uploadOptions - Additional options for the file upload (optional).\n * @returns {Promise<FileUpload>} - A promise that resolves to the file upload information.\n * @throws {Error} - Throws an error if the upload fails.\n */\nconst createFileUpload = (api_1, _a) => __awaiter(void 0, [api_1, _a], void 0, function* (api, { mimeType, filename, uploadOptions = {}, }) {\n    const response = yield api.sendRequest(`/uploads/file`, {\n        method: 'POST',\n        headers: new Headers({\n            'Content-Type': 'application/json',\n        }),\n    }, JSON.stringify({ mimeType, filename, uploadOptions }));\n    if (!response.ok) {\n        throw new Error(`Failed to create file upload: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.createFileUpload = createFileUpload;\n/**\n * Initiates a folder upload to the server.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithoutPagination<{ fileTree: FolderTree; uploadOptions: FileUploadOptions }>} args - The arguments for the folder upload.\n * @param {FolderTree} args.fileTree - The structure of the folder and its contents to be uploaded.\n * @param {FileUploadOptions} args.uploadOptions - Additional options for the folder upload.\n * @returns {Promise<FolderUpload>} - A promise that resolves to the folder upload information.\n * @throws {Error} - Throws an error if the upload fails.\n */\nconst createFolderUpload = (api_1, _a) => __awaiter(void 0, [api_1, _a], void 0, function* (api, { fileTree, uploadOptions = {}, }) {\n    const response = yield api.sendRequest(`/uploads/folder`, {\n        method: 'POST',\n        headers: new Headers({\n            'Content-Type': 'application/json',\n        }),\n    }, JSON.stringify({ fileTree, uploadOptions }));\n    if (!response.ok) {\n        throw new Error(`Failed to create folder upload: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.createFolderUpload = createFolderUpload;\n/**\n * Creates a file upload within an existing folder upload.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithoutPagination<{ uploadId: string; name: string; mimeType: string; relativeId: string; uploadOptions: FileUploadOptions }>} args - The arguments for the file upload.\n * @param {string} args.uploadId - The ID of the folder upload to which the file will be added.\n * @param {string} args.name - The name of the file to be uploaded.\n * @param {string} args.mimeType - The MIME type of the file being uploaded.\n * @param {string} args.relativeId - The relative ID of the file within the folder structure.\n * @param {FileUploadOptions} [args.uploadOptions={}] - Additional options for the file upload.\n * @returns {Promise<FileUpload>} - A promise that resolves to the file upload information.\n * @throws {Error} - Throws an error if the upload fails.\n */\nconst createFileUploadWithinFolderUpload = (api_1, _a) => __awaiter(void 0, [api_1, _a], void 0, function* (api, { uploadId, name, mimeType, relativeId, uploadOptions = {}, }) {\n    const response = yield api.sendRequest(`/uploads/folder/${uploadId}/file`, {\n        method: 'POST',\n        headers: new Headers({\n            'Content-Type': 'application/json',\n        }),\n    }, JSON.stringify({ name, mimeType, relativeId, uploadOptions }));\n    if (!response.ok) {\n        throw new Error(`Failed to create file upload within folder upload: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.createFileUploadWithinFolderUpload = createFileUploadWithinFolderUpload;\n/**\n * Uploads a chunk of a file to the server.\n *\n * This function allows for the uploading of a specific chunk of a file\n * during a multi-part upload process. It sends the chunk along with its\n * index to the server, which can be used to reconstruct the file on the\n * server side.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithoutPagination<{ uploadId: string; chunk: Buffer; index: number }>} args - The arguments for the file chunk upload.\n * @param {string} args.uploadId - The ID of the upload session.\n * @param {Buffer} args.chunk - The chunk of the file to be uploaded.\n * @param {number} args.index - The index of the chunk in the overall file.\n * @returns {Promise<void>} - A promise that resolves when the chunk is uploaded successfully.\n * @throws {Error} - Throws an error if the upload fails.\n */\nconst uploadFileChunk = (api_1, _a) => __awaiter(void 0, [api_1, _a], void 0, function* (api, { uploadId, chunk, index, }) {\n    const formData = new FormData();\n    formData.append('file', new Blob([chunk]));\n    formData.append('index', index.toString());\n    const response = yield api.sendRequest(`/uploads/file/${uploadId}/chunk`, {\n        method: 'POST',\n    }, formData);\n    if (!response.ok) {\n        throw new Error(`Failed to upload file chunk: ${response.statusText}`);\n    }\n});\nexports.uploadFileChunk = uploadFileChunk;\n/**\n * Completes a file or folder upload session on the server.\n *\n * This function sends a request to the server to finalize the upload\n * process for a given upload session identified by the upload ID. It is\n * typically called after all file chunks have been uploaded. This method\n * can be used to complete both file and folder uploads.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithoutPagination<{ uploadId: string }>} args - The arguments for completing the upload.\n * @param {string} args.uploadId - The ID of the upload session to complete.\n * @returns {Promise<any>} - A promise that resolves to the response from the server.\n * @throws {Error} - Throws an error if the completion of the upload fails.\n */\nconst completeUpload = (api_1, _a) => __awaiter(void 0, [api_1, _a], void 0, function* (api, { uploadId }) {\n    const response = yield api.sendRequest(`/uploads/${uploadId}/complete`, {\n        method: 'POST',\n    });\n    if (!response.ok) {\n        throw new Error(`Failed to complete upload: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.completeUpload = completeUpload;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/upload.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/write.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/write.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.restoreObject = exports.markObjectAsDeleted = exports.shareObject = void 0;\n/**\n * Shares an object with a specified public ID.\n *\n * This function sends a request to the server to share an object identified\n * by its CID. The object will be shared with the provided public ID, allowing\n * access to the object for users with that ID.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithoutPagination<{ cid: string; publicId: string }>} query - The query parameters containing the CID of the object to share and the public ID to share it with.\n * @returns {Promise<any>} - A promise that resolves to the response from the server.\n * @throws {Error} - Throws an error if the sharing process fails.\n */\nconst shareObject = (api, query) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield api.sendRequest(`/objects/${query.cid}/share`, {\n        method: 'POST',\n        headers: new Headers({\n            'Content-Type': 'application/json',\n        }),\n    }, JSON.stringify({ publicId: query.publicId }));\n    if (!response.ok) {\n        throw new Error(`Failed to share object: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.shareObject = shareObject;\n/**\n * Marks an object as deleted by sending a request to the server.\n *\n * This function sends a request to the server to mark an object identified\n * by its CID as deleted. This action is typically irreversible and should\n * be used with caution.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithoutPagination<{ cid: string }>} query - The query parameters containing the CID of the object to mark as deleted.\n * @returns {Promise<void>} - A promise that resolves when the object has been marked as deleted.\n * @throws {Error} - Throws an error if the marking process fails.\n */\nconst markObjectAsDeleted = (api, query) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield api.sendRequest(`/objects/${query.cid}/delete`, {\n        method: 'POST',\n    });\n    if (!response.ok) {\n        throw new Error(`Failed to mark object as deleted: ${response.statusText}`);\n    }\n});\nexports.markObjectAsDeleted = markObjectAsDeleted;\n/**\n * Restores an object that has been marked as deleted by sending a request to the server.\n *\n * This function sends a request to the server to restore an object identified\n * by its CID. The restoration process may depend on the server's implementation\n * and the object's current state.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {ArgsWithoutPagination<{ cid: string }>} query - The query parameters containing the CID of the object to restore.\n * @returns {Promise<void>} - A promise that resolves when the object has been successfully restored.\n * @throws {Error} - Throws an error if the restoration process fails.\n */\nconst restoreObject = (api, query) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield api.sendRequest(`/objects/${query.cid}/restore`, {\n        method: 'POST',\n    });\n    if (!response.ok) {\n        throw new Error(`Failed to restore object: ${response.statusText}`);\n    }\n    return response.json();\n});\nexports.restoreObject = restoreObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9hcGkvY2FsbHMvd3JpdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLDJCQUEyQixHQUFHLG1CQUFtQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QixXQUFXLHdCQUF3QixhQUFhLGtCQUFrQixHQUFHO0FBQ3JFLGFBQWEsY0FBYztBQUMzQixZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBLHVEQUF1RCxVQUFVO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLLG1CQUFtQiwwQkFBMEI7QUFDbEQ7QUFDQSxtREFBbUQsb0JBQW9CO0FBQ3ZFO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsd0JBQXdCLGFBQWEsR0FBRztBQUNuRCxhQUFhLGVBQWU7QUFDNUIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQSx1REFBdUQsVUFBVTtBQUNqRTtBQUNBLEtBQUs7QUFDTDtBQUNBLDZEQUE2RCxvQkFBb0I7QUFDakY7QUFDQSxDQUFDO0FBQ0QsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsd0JBQXdCLGFBQWEsR0FBRztBQUNuRCxhQUFhLGVBQWU7QUFDNUIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQSx1REFBdUQsVUFBVTtBQUNqRTtBQUNBLEtBQUs7QUFDTDtBQUNBLHFEQUFxRCxvQkFBb0I7QUFDekU7QUFDQTtBQUNBLENBQUM7QUFDRCxxQkFBcUIiLCJzb3VyY2VzIjpbIi9ob21lL2FidWJha3JqaW1vaC9EZXNrdG9wL0NvZGluZyBTdHVmZnMvaGFja2F0aG9uL3NlY3JldC1uZXR3b3JrL21lbWVBaV9jb2luX2NyZWF0b3IvYWktbWVtZS1jb2luLWNyZWF0b3Ivbm9kZV9tb2R1bGVzLy5wbnBtL0BhdXRvbm9teXMrYXV0by1kcml2ZUAxLjIuMy9ub2RlX21vZHVsZXMvQGF1dG9ub215cy9hdXRvLWRyaXZlL2Rpc3QvYXBpL2NhbGxzL3dyaXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJlc3RvcmVPYmplY3QgPSBleHBvcnRzLm1hcmtPYmplY3RBc0RlbGV0ZWQgPSBleHBvcnRzLnNoYXJlT2JqZWN0ID0gdm9pZCAwO1xuLyoqXG4gKiBTaGFyZXMgYW4gb2JqZWN0IHdpdGggYSBzcGVjaWZpZWQgcHVibGljIElELlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gc2VuZHMgYSByZXF1ZXN0IHRvIHRoZSBzZXJ2ZXIgdG8gc2hhcmUgYW4gb2JqZWN0IGlkZW50aWZpZWRcbiAqIGJ5IGl0cyBDSUQuIFRoZSBvYmplY3Qgd2lsbCBiZSBzaGFyZWQgd2l0aCB0aGUgcHJvdmlkZWQgcHVibGljIElELCBhbGxvd2luZ1xuICogYWNjZXNzIHRvIHRoZSBvYmplY3QgZm9yIHVzZXJzIHdpdGggdGhhdCBJRC5cbiAqXG4gKiBAcGFyYW0ge0F1dG9Ecml2ZUFwaX0gYXBpIC0gVGhlIEFQSSBpbnN0YW5jZSB1c2VkIHRvIHNlbmQgcmVxdWVzdHMuXG4gKiBAcGFyYW0ge0FyZ3NXaXRob3V0UGFnaW5hdGlvbjx7IGNpZDogc3RyaW5nOyBwdWJsaWNJZDogc3RyaW5nIH0+fSBxdWVyeSAtIFRoZSBxdWVyeSBwYXJhbWV0ZXJzIGNvbnRhaW5pbmcgdGhlIENJRCBvZiB0aGUgb2JqZWN0IHRvIHNoYXJlIGFuZCB0aGUgcHVibGljIElEIHRvIHNoYXJlIGl0IHdpdGguXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSAtIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSByZXNwb25zZSBmcm9tIHRoZSBzZXJ2ZXIuXG4gKiBAdGhyb3dzIHtFcnJvcn0gLSBUaHJvd3MgYW4gZXJyb3IgaWYgdGhlIHNoYXJpbmcgcHJvY2VzcyBmYWlscy5cbiAqL1xuY29uc3Qgc2hhcmVPYmplY3QgPSAoYXBpLCBxdWVyeSkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBhcGkuc2VuZFJlcXVlc3QoYC9vYmplY3RzLyR7cXVlcnkuY2lkfS9zaGFyZWAsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IG5ldyBIZWFkZXJzKHtcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIH0pLFxuICAgIH0sIEpTT04uc3RyaW5naWZ5KHsgcHVibGljSWQ6IHF1ZXJ5LnB1YmxpY0lkIH0pKTtcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHNoYXJlIG9iamVjdDogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xufSk7XG5leHBvcnRzLnNoYXJlT2JqZWN0ID0gc2hhcmVPYmplY3Q7XG4vKipcbiAqIE1hcmtzIGFuIG9iamVjdCBhcyBkZWxldGVkIGJ5IHNlbmRpbmcgYSByZXF1ZXN0IHRvIHRoZSBzZXJ2ZXIuXG4gKlxuICogVGhpcyBmdW5jdGlvbiBzZW5kcyBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB0byBtYXJrIGFuIG9iamVjdCBpZGVudGlmaWVkXG4gKiBieSBpdHMgQ0lEIGFzIGRlbGV0ZWQuIFRoaXMgYWN0aW9uIGlzIHR5cGljYWxseSBpcnJldmVyc2libGUgYW5kIHNob3VsZFxuICogYmUgdXNlZCB3aXRoIGNhdXRpb24uXG4gKlxuICogQHBhcmFtIHtBdXRvRHJpdmVBcGl9IGFwaSAtIFRoZSBBUEkgaW5zdGFuY2UgdXNlZCB0byBzZW5kIHJlcXVlc3RzLlxuICogQHBhcmFtIHtBcmdzV2l0aG91dFBhZ2luYXRpb248eyBjaWQ6IHN0cmluZyB9Pn0gcXVlcnkgLSBUaGUgcXVlcnkgcGFyYW1ldGVycyBjb250YWluaW5nIHRoZSBDSUQgb2YgdGhlIG9iamVjdCB0byBtYXJrIGFzIGRlbGV0ZWQuXG4gKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn0gLSBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBvYmplY3QgaGFzIGJlZW4gbWFya2VkIGFzIGRlbGV0ZWQuXG4gKiBAdGhyb3dzIHtFcnJvcn0gLSBUaHJvd3MgYW4gZXJyb3IgaWYgdGhlIG1hcmtpbmcgcHJvY2VzcyBmYWlscy5cbiAqL1xuY29uc3QgbWFya09iamVjdEFzRGVsZXRlZCA9IChhcGksIHF1ZXJ5KSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIGFwaS5zZW5kUmVxdWVzdChgL29iamVjdHMvJHtxdWVyeS5jaWR9L2RlbGV0ZWAsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgfSk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBtYXJrIG9iamVjdCBhcyBkZWxldGVkOiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgfVxufSk7XG5leHBvcnRzLm1hcmtPYmplY3RBc0RlbGV0ZWQgPSBtYXJrT2JqZWN0QXNEZWxldGVkO1xuLyoqXG4gKiBSZXN0b3JlcyBhbiBvYmplY3QgdGhhdCBoYXMgYmVlbiBtYXJrZWQgYXMgZGVsZXRlZCBieSBzZW5kaW5nIGEgcmVxdWVzdCB0byB0aGUgc2VydmVyLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gc2VuZHMgYSByZXF1ZXN0IHRvIHRoZSBzZXJ2ZXIgdG8gcmVzdG9yZSBhbiBvYmplY3QgaWRlbnRpZmllZFxuICogYnkgaXRzIENJRC4gVGhlIHJlc3RvcmF0aW9uIHByb2Nlc3MgbWF5IGRlcGVuZCBvbiB0aGUgc2VydmVyJ3MgaW1wbGVtZW50YXRpb25cbiAqIGFuZCB0aGUgb2JqZWN0J3MgY3VycmVudCBzdGF0ZS5cbiAqXG4gKiBAcGFyYW0ge0F1dG9Ecml2ZUFwaX0gYXBpIC0gVGhlIEFQSSBpbnN0YW5jZSB1c2VkIHRvIHNlbmQgcmVxdWVzdHMuXG4gKiBAcGFyYW0ge0FyZ3NXaXRob3V0UGFnaW5hdGlvbjx7IGNpZDogc3RyaW5nIH0+fSBxdWVyeSAtIFRoZSBxdWVyeSBwYXJhbWV0ZXJzIGNvbnRhaW5pbmcgdGhlIENJRCBvZiB0aGUgb2JqZWN0IHRvIHJlc3RvcmUuXG4gKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn0gLSBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBvYmplY3QgaGFzIGJlZW4gc3VjY2Vzc2Z1bGx5IHJlc3RvcmVkLlxuICogQHRocm93cyB7RXJyb3J9IC0gVGhyb3dzIGFuIGVycm9yIGlmIHRoZSByZXN0b3JhdGlvbiBwcm9jZXNzIGZhaWxzLlxuICovXG5jb25zdCByZXN0b3JlT2JqZWN0ID0gKGFwaSwgcXVlcnkpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgYXBpLnNlbmRSZXF1ZXN0KGAvb2JqZWN0cy8ke3F1ZXJ5LmNpZH0vcmVzdG9yZWAsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgfSk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byByZXN0b3JlIG9iamVjdDogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xufSk7XG5leHBvcnRzLnJlc3RvcmVPYmplY3QgPSByZXN0b3JlT2JqZWN0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/write.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/connection.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/connection.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createAutoDriveApi = exports.OAuthProvider = void 0;\nconst networks_1 = __webpack_require__(/*! ./networks */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/networks.js\");\nvar OAuthProvider;\n(function (OAuthProvider) {\n    OAuthProvider[\"GOOGLE\"] = \"google\";\n    OAuthProvider[\"DISCORD\"] = \"discord\";\n})(OAuthProvider || (exports.OAuthProvider = OAuthProvider = {}));\nconst createAutoDriveApi = ({ provider = 'apikey', apiKey, url = null, network, }) => {\n    const baseUrl = !network ? url : (0, networks_1.getNetworkUrl)(network);\n    return {\n        sendRequest: (relativeUrl, request, body) => __awaiter(void 0, void 0, void 0, function* () {\n            var _a;\n            const headers = new Headers(Object.assign(Object.assign({}, Object.fromEntries(((_a = request.headers) === null || _a === void 0 ? void 0 : _a.entries()) || [])), { 'x-auth-provider': provider, Authorization: `Bearer ${apiKey}` }));\n            const fullRequest = Object.assign(Object.assign({}, request), { headers: new Headers(headers), body });\n            return fetch(`${baseUrl}${relativeUrl}`, fullRequest);\n        }),\n    };\n};\nexports.createAutoDriveApi = createAutoDriveApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9hcGkvY29ubmVjdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcscUJBQXFCO0FBQ2xELG1CQUFtQixtQkFBTyxDQUFDLGtJQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvQkFBb0IscUJBQXFCLHFCQUFxQjtBQUMvRCw4QkFBOEIsbURBQW1EO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLDJHQUEyRyxzREFBc0QsT0FBTyxHQUFHO0FBQ2pQLDhEQUE4RCxjQUFjLHFDQUFxQztBQUNqSCw0QkFBNEIsUUFBUSxFQUFFLFlBQVk7QUFDbEQsU0FBUztBQUNUO0FBQ0E7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIi9ob21lL2FidWJha3JqaW1vaC9EZXNrdG9wL0NvZGluZyBTdHVmZnMvaGFja2F0aG9uL3NlY3JldC1uZXR3b3JrL21lbWVBaV9jb2luX2NyZWF0b3IvYWktbWVtZS1jb2luLWNyZWF0b3Ivbm9kZV9tb2R1bGVzLy5wbnBtL0BhdXRvbm9teXMrYXV0by1kcml2ZUAxLjIuMy9ub2RlX21vZHVsZXMvQGF1dG9ub215cy9hdXRvLWRyaXZlL2Rpc3QvYXBpL2Nvbm5lY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlQXV0b0RyaXZlQXBpID0gZXhwb3J0cy5PQXV0aFByb3ZpZGVyID0gdm9pZCAwO1xuY29uc3QgbmV0d29ya3NfMSA9IHJlcXVpcmUoXCIuL25ldHdvcmtzXCIpO1xudmFyIE9BdXRoUHJvdmlkZXI7XG4oZnVuY3Rpb24gKE9BdXRoUHJvdmlkZXIpIHtcbiAgICBPQXV0aFByb3ZpZGVyW1wiR09PR0xFXCJdID0gXCJnb29nbGVcIjtcbiAgICBPQXV0aFByb3ZpZGVyW1wiRElTQ09SRFwiXSA9IFwiZGlzY29yZFwiO1xufSkoT0F1dGhQcm92aWRlciB8fCAoZXhwb3J0cy5PQXV0aFByb3ZpZGVyID0gT0F1dGhQcm92aWRlciA9IHt9KSk7XG5jb25zdCBjcmVhdGVBdXRvRHJpdmVBcGkgPSAoeyBwcm92aWRlciA9ICdhcGlrZXknLCBhcGlLZXksIHVybCA9IG51bGwsIG5ldHdvcmssIH0pID0+IHtcbiAgICBjb25zdCBiYXNlVXJsID0gIW5ldHdvcmsgPyB1cmwgOiAoMCwgbmV0d29ya3NfMS5nZXROZXR3b3JrVXJsKShuZXR3b3JrKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBzZW5kUmVxdWVzdDogKHJlbGF0aXZlVXJsLCByZXF1ZXN0LCBib2R5KSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycyhPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIE9iamVjdC5mcm9tRW50cmllcygoKF9hID0gcmVxdWVzdC5oZWFkZXJzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZW50cmllcygpKSB8fCBbXSkpLCB7ICd4LWF1dGgtcHJvdmlkZXInOiBwcm92aWRlciwgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2FwaUtleX1gIH0pKTtcbiAgICAgICAgICAgIGNvbnN0IGZ1bGxSZXF1ZXN0ID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCByZXF1ZXN0KSwgeyBoZWFkZXJzOiBuZXcgSGVhZGVycyhoZWFkZXJzKSwgYm9keSB9KTtcbiAgICAgICAgICAgIHJldHVybiBmZXRjaChgJHtiYXNlVXJsfSR7cmVsYXRpdmVVcmx9YCwgZnVsbFJlcXVlc3QpO1xuICAgICAgICB9KSxcbiAgICB9O1xufTtcbmV4cG9ydHMuY3JlYXRlQXV0b0RyaXZlQXBpID0gY3JlYXRlQXV0b0RyaXZlQXBpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/connection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/index.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/index.js ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./calls/index */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./connection */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/connection.js\"), exports);\n__exportStar(__webpack_require__(/*! ./models/index */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./wrappers */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/wrappers.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9hcGkvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLHdJQUFlO0FBQ3BDLGFBQWEsbUJBQU8sQ0FBQyxzSUFBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsMElBQWdCO0FBQ3JDLGFBQWEsbUJBQU8sQ0FBQyxrSUFBWSIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9hcGkvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jYWxscy9pbmRleFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29ubmVjdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbW9kZWxzL2luZGV4XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi93cmFwcGVyc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/folderTree.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/folderTree.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.constructZipBlobFromTreeAndPaths = exports.constructFromInput = exports.constructFromFileSystemEntries = exports.FolderTreeSchema = exports.FolderTreeFileSchema = exports.FolderTreeFolderSchema = void 0;\nconst jszip_1 = __importDefault(__webpack_require__(/*! jszip */ \"(rsc)/./node_modules/.pnpm/jszip@3.10.1/node_modules/jszip/lib/index.js\"));\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.js\");\nexports.FolderTreeFolderSchema = zod_1.z.object({\n    name: zod_1.z.string(),\n    type: zod_1.z.literal('folder'),\n    children: zod_1.z.array(zod_1.z.lazy(() => exports.FolderTreeSchema)),\n    id: zod_1.z.string(),\n});\nexports.FolderTreeFileSchema = zod_1.z.object({\n    name: zod_1.z.string(),\n    type: zod_1.z.literal('file'),\n    id: zod_1.z.string(),\n});\nexports.FolderTreeSchema = zod_1.z.discriminatedUnion('type', [\n    exports.FolderTreeFolderSchema,\n    exports.FolderTreeFileSchema,\n]);\nconst constructFromFileSystemEntries = (entries) => {\n    const root = {\n        name: 'root',\n        type: 'folder',\n        children: [],\n        id: 'root',\n    };\n    for (const entry of entries) {\n        const pathParts = entry.split('/').filter(Boolean);\n        let currentFolder = root;\n        for (const [index, part] of Array.from(pathParts.entries())) {\n            // Check if the part already exists in the current folder's children\n            let existingFolder = currentFolder.children.find((child) => child.name === part);\n            if (!existingFolder) {\n                // If it's the last part, create a file node\n                if (index === pathParts.length - 1) {\n                    const fileNode = {\n                        name: part,\n                        type: 'file',\n                        id: entry,\n                    };\n                    currentFolder.children.push(fileNode);\n                }\n                else {\n                    // Create a new folder node\n                    const folderNode = {\n                        name: part,\n                        type: 'folder',\n                        children: [],\n                        id: `${currentFolder.id.split('/').slice(1).join('/')}/${part}`,\n                    };\n                    currentFolder.children.push(folderNode);\n                    existingFolder = folderNode;\n                }\n            }\n            currentFolder = existingFolder; // Move to the next folder\n        }\n    }\n    return root.children.length === 1 ? root.children[0] : root;\n};\nexports.constructFromFileSystemEntries = constructFromFileSystemEntries;\nconst constructFromInput = (input) => {\n    return (0, exports.constructFromFileSystemEntries)(Array.from(input).map((file) => {\n        if (!file.webkitRelativePath) {\n            throw new Error('webkitRelativePath is not supported');\n        }\n        return file.webkitRelativePath;\n    }));\n};\nexports.constructFromInput = constructFromInput;\nconst addFilesToZip = (folder, folderNode, files) => {\n    folderNode.children.forEach((child) => {\n        if (child.type === 'file') {\n            folder.file(child.name, files[child.id]);\n        }\n        else if (child.type === 'folder') {\n            const subFolder = folder.folder(child.name);\n            if (!subFolder) {\n                throw new Error('Failed to create folder in zip');\n            }\n            addFilesToZip(subFolder, child, files);\n        }\n    });\n};\nconst constructZipBlobFromTreeAndPaths = (tree, files) => __awaiter(void 0, void 0, void 0, function* () {\n    if (tree.type === 'file') {\n        throw new Error('Cannot construct zip from file');\n    }\n    const zip = new jszip_1.default();\n    addFilesToZip(zip, tree, files);\n    return zip.generateAsync({ type: 'blob' });\n});\nexports.constructZipBlobFromTreeAndPaths = constructZipBlobFromTreeAndPaths;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/folderTree.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/index.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/index.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./objects */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/objects.js\"), exports);\n__exportStar(__webpack_require__(/*! ./uploads */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/uploads.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9hcGkvbW9kZWxzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyx1SUFBVztBQUNoQyxhQUFhLG1CQUFPLENBQUMsdUlBQVciLCJzb3VyY2VzIjpbIi9ob21lL2FidWJha3JqaW1vaC9EZXNrdG9wL0NvZGluZyBTdHVmZnMvaGFja2F0aG9uL3NlY3JldC1uZXR3b3JrL21lbWVBaV9jb2luX2NyZWF0b3IvYWktbWVtZS1jb2luLWNyZWF0b3Ivbm9kZV9tb2R1bGVzLy5wbnBtL0BhdXRvbm9teXMrYXV0by1kcml2ZUAxLjIuMy9ub2RlX21vZHVsZXMvQGF1dG9ub215cy9hdXRvLWRyaXZlL2Rpc3QvYXBpL21vZGVscy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL29iamVjdHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3VwbG9hZHNcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/objects.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/objects.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OwnerRole = exports.Scope = void 0;\nvar Scope;\n(function (Scope) {\n    Scope[\"Global\"] = \"global\";\n    Scope[\"User\"] = \"user\";\n})(Scope || (exports.Scope = Scope = {}));\nvar OwnerRole;\n(function (OwnerRole) {\n    OwnerRole[\"ADMIN\"] = \"admin\";\n    OwnerRole[\"VIEWER\"] = \"viewer\";\n})(OwnerRole || (exports.OwnerRole = OwnerRole = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9hcGkvbW9kZWxzL29iamVjdHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsYUFBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsWUFBWSxhQUFhLGFBQWE7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdCQUFnQixpQkFBaUIsaUJBQWlCIiwic291cmNlcyI6WyIvaG9tZS9hYnViYWtyamltb2gvRGVza3RvcC9Db2RpbmcgU3R1ZmZzL2hhY2thdGhvbi9zZWNyZXQtbmV0d29yay9tZW1lQWlfY29pbl9jcmVhdG9yL2FpLW1lbWUtY29pbi1jcmVhdG9yL25vZGVfbW9kdWxlcy8ucG5wbS9AYXV0b25vbXlzK2F1dG8tZHJpdmVAMS4yLjMvbm9kZV9tb2R1bGVzL0BhdXRvbm9teXMvYXV0by1kcml2ZS9kaXN0L2FwaS9tb2RlbHMvb2JqZWN0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT3duZXJSb2xlID0gZXhwb3J0cy5TY29wZSA9IHZvaWQgMDtcbnZhciBTY29wZTtcbihmdW5jdGlvbiAoU2NvcGUpIHtcbiAgICBTY29wZVtcIkdsb2JhbFwiXSA9IFwiZ2xvYmFsXCI7XG4gICAgU2NvcGVbXCJVc2VyXCJdID0gXCJ1c2VyXCI7XG59KShTY29wZSB8fCAoZXhwb3J0cy5TY29wZSA9IFNjb3BlID0ge30pKTtcbnZhciBPd25lclJvbGU7XG4oZnVuY3Rpb24gKE93bmVyUm9sZSkge1xuICAgIE93bmVyUm9sZVtcIkFETUlOXCJdID0gXCJhZG1pblwiO1xuICAgIE93bmVyUm9sZVtcIlZJRVdFUlwiXSA9IFwidmlld2VyXCI7XG59KShPd25lclJvbGUgfHwgKGV4cG9ydHMuT3duZXJSb2xlID0gT3duZXJSb2xlID0ge30pKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/objects.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/uploads.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/uploads.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.folderUploadSchema = exports.EncryptionAlgorithm = exports.CompressionAlgorithm = exports.fileUploadSchema = exports.UploadStatus = exports.UploadType = void 0;\nconst zod_1 = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.js\");\nconst folderTree_1 = __webpack_require__(/*! ./folderTree */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/folderTree.js\");\nvar UploadType;\n(function (UploadType) {\n    UploadType[\"FILE\"] = \"file\";\n    UploadType[\"FOLDER\"] = \"folder\";\n})(UploadType || (exports.UploadType = UploadType = {}));\nvar UploadStatus;\n(function (UploadStatus) {\n    UploadStatus[\"PENDING\"] = \"pending\";\n    UploadStatus[\"COMPLETED\"] = \"completed\";\n    UploadStatus[\"MIGRATING\"] = \"migrating\";\n    UploadStatus[\"CANCELLED\"] = \"cancelled\";\n    UploadStatus[\"FAILED\"] = \"failed\";\n})(UploadStatus || (exports.UploadStatus = UploadStatus = {}));\nexports.fileUploadSchema = zod_1.z.object({\n    id: zod_1.z.string(),\n    rootId: zod_1.z.string(),\n    relativeId: zod_1.z.string().nullable(),\n    type: zod_1.z.nativeEnum(UploadType),\n    status: zod_1.z.nativeEnum(UploadStatus),\n    fileTree: zod_1.z.null(),\n    name: zod_1.z.string(),\n    mimeType: zod_1.z.string().nullable(),\n    oauthProvider: zod_1.z.string(),\n    oauthUserId: zod_1.z.string(),\n});\nvar CompressionAlgorithm;\n(function (CompressionAlgorithm) {\n    CompressionAlgorithm[\"ZLIB\"] = \"ZLIB\";\n})(CompressionAlgorithm || (exports.CompressionAlgorithm = CompressionAlgorithm = {}));\nvar EncryptionAlgorithm;\n(function (EncryptionAlgorithm) {\n    EncryptionAlgorithm[\"AES_256_GCM\"] = \"AES_256_GCM\";\n})(EncryptionAlgorithm || (exports.EncryptionAlgorithm = EncryptionAlgorithm = {}));\nexports.folderUploadSchema = zod_1.z.object({\n    id: zod_1.z.string(),\n    rootId: zod_1.z.string(),\n    relativeId: zod_1.z.string().nullable(),\n    type: zod_1.z.nativeEnum(UploadType),\n    status: zod_1.z.nativeEnum(UploadStatus),\n    fileTree: folderTree_1.FolderTreeFolderSchema,\n    name: zod_1.z.string(),\n    mimeType: zod_1.z.null(),\n    oauthProvider: zod_1.z.string(),\n    oauthUserId: zod_1.z.string(),\n    uploadOptions: zod_1.z.null(),\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9hcGkvbW9kZWxzL3VwbG9hZHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsMkJBQTJCLEdBQUcsNEJBQTRCLEdBQUcsd0JBQXdCLEdBQUcsb0JBQW9CLEdBQUcsa0JBQWtCO0FBQzlKLGNBQWMsbUJBQU8sQ0FBQyxnRkFBSztBQUMzQixxQkFBcUIsbUJBQU8sQ0FBQyw2SUFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsaUJBQWlCLGtCQUFrQixrQkFBa0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG1CQUFtQixvQkFBb0Isb0JBQW9CO0FBQzVELHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDLDJCQUEyQiw0QkFBNEIsNEJBQTRCO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEJBQTBCLDJCQUEyQiwyQkFBMkI7QUFDakYsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyIvaG9tZS9hYnViYWtyamltb2gvRGVza3RvcC9Db2RpbmcgU3R1ZmZzL2hhY2thdGhvbi9zZWNyZXQtbmV0d29yay9tZW1lQWlfY29pbl9jcmVhdG9yL2FpLW1lbWUtY29pbi1jcmVhdG9yL25vZGVfbW9kdWxlcy8ucG5wbS9AYXV0b25vbXlzK2F1dG8tZHJpdmVAMS4yLjMvbm9kZV9tb2R1bGVzL0BhdXRvbm9teXMvYXV0by1kcml2ZS9kaXN0L2FwaS9tb2RlbHMvdXBsb2Fkcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZm9sZGVyVXBsb2FkU2NoZW1hID0gZXhwb3J0cy5FbmNyeXB0aW9uQWxnb3JpdGhtID0gZXhwb3J0cy5Db21wcmVzc2lvbkFsZ29yaXRobSA9IGV4cG9ydHMuZmlsZVVwbG9hZFNjaGVtYSA9IGV4cG9ydHMuVXBsb2FkU3RhdHVzID0gZXhwb3J0cy5VcGxvYWRUeXBlID0gdm9pZCAwO1xuY29uc3Qgem9kXzEgPSByZXF1aXJlKFwiem9kXCIpO1xuY29uc3QgZm9sZGVyVHJlZV8xID0gcmVxdWlyZShcIi4vZm9sZGVyVHJlZVwiKTtcbnZhciBVcGxvYWRUeXBlO1xuKGZ1bmN0aW9uIChVcGxvYWRUeXBlKSB7XG4gICAgVXBsb2FkVHlwZVtcIkZJTEVcIl0gPSBcImZpbGVcIjtcbiAgICBVcGxvYWRUeXBlW1wiRk9MREVSXCJdID0gXCJmb2xkZXJcIjtcbn0pKFVwbG9hZFR5cGUgfHwgKGV4cG9ydHMuVXBsb2FkVHlwZSA9IFVwbG9hZFR5cGUgPSB7fSkpO1xudmFyIFVwbG9hZFN0YXR1cztcbihmdW5jdGlvbiAoVXBsb2FkU3RhdHVzKSB7XG4gICAgVXBsb2FkU3RhdHVzW1wiUEVORElOR1wiXSA9IFwicGVuZGluZ1wiO1xuICAgIFVwbG9hZFN0YXR1c1tcIkNPTVBMRVRFRFwiXSA9IFwiY29tcGxldGVkXCI7XG4gICAgVXBsb2FkU3RhdHVzW1wiTUlHUkFUSU5HXCJdID0gXCJtaWdyYXRpbmdcIjtcbiAgICBVcGxvYWRTdGF0dXNbXCJDQU5DRUxMRURcIl0gPSBcImNhbmNlbGxlZFwiO1xuICAgIFVwbG9hZFN0YXR1c1tcIkZBSUxFRFwiXSA9IFwiZmFpbGVkXCI7XG59KShVcGxvYWRTdGF0dXMgfHwgKGV4cG9ydHMuVXBsb2FkU3RhdHVzID0gVXBsb2FkU3RhdHVzID0ge30pKTtcbmV4cG9ydHMuZmlsZVVwbG9hZFNjaGVtYSA9IHpvZF8xLnoub2JqZWN0KHtcbiAgICBpZDogem9kXzEuei5zdHJpbmcoKSxcbiAgICByb290SWQ6IHpvZF8xLnouc3RyaW5nKCksXG4gICAgcmVsYXRpdmVJZDogem9kXzEuei5zdHJpbmcoKS5udWxsYWJsZSgpLFxuICAgIHR5cGU6IHpvZF8xLnoubmF0aXZlRW51bShVcGxvYWRUeXBlKSxcbiAgICBzdGF0dXM6IHpvZF8xLnoubmF0aXZlRW51bShVcGxvYWRTdGF0dXMpLFxuICAgIGZpbGVUcmVlOiB6b2RfMS56Lm51bGwoKSxcbiAgICBuYW1lOiB6b2RfMS56LnN0cmluZygpLFxuICAgIG1pbWVUeXBlOiB6b2RfMS56LnN0cmluZygpLm51bGxhYmxlKCksXG4gICAgb2F1dGhQcm92aWRlcjogem9kXzEuei5zdHJpbmcoKSxcbiAgICBvYXV0aFVzZXJJZDogem9kXzEuei5zdHJpbmcoKSxcbn0pO1xudmFyIENvbXByZXNzaW9uQWxnb3JpdGhtO1xuKGZ1bmN0aW9uIChDb21wcmVzc2lvbkFsZ29yaXRobSkge1xuICAgIENvbXByZXNzaW9uQWxnb3JpdGhtW1wiWkxJQlwiXSA9IFwiWkxJQlwiO1xufSkoQ29tcHJlc3Npb25BbGdvcml0aG0gfHwgKGV4cG9ydHMuQ29tcHJlc3Npb25BbGdvcml0aG0gPSBDb21wcmVzc2lvbkFsZ29yaXRobSA9IHt9KSk7XG52YXIgRW5jcnlwdGlvbkFsZ29yaXRobTtcbihmdW5jdGlvbiAoRW5jcnlwdGlvbkFsZ29yaXRobSkge1xuICAgIEVuY3J5cHRpb25BbGdvcml0aG1bXCJBRVNfMjU2X0dDTVwiXSA9IFwiQUVTXzI1Nl9HQ01cIjtcbn0pKEVuY3J5cHRpb25BbGdvcml0aG0gfHwgKGV4cG9ydHMuRW5jcnlwdGlvbkFsZ29yaXRobSA9IEVuY3J5cHRpb25BbGdvcml0aG0gPSB7fSkpO1xuZXhwb3J0cy5mb2xkZXJVcGxvYWRTY2hlbWEgPSB6b2RfMS56Lm9iamVjdCh7XG4gICAgaWQ6IHpvZF8xLnouc3RyaW5nKCksXG4gICAgcm9vdElkOiB6b2RfMS56LnN0cmluZygpLFxuICAgIHJlbGF0aXZlSWQ6IHpvZF8xLnouc3RyaW5nKCkubnVsbGFibGUoKSxcbiAgICB0eXBlOiB6b2RfMS56Lm5hdGl2ZUVudW0oVXBsb2FkVHlwZSksXG4gICAgc3RhdHVzOiB6b2RfMS56Lm5hdGl2ZUVudW0oVXBsb2FkU3RhdHVzKSxcbiAgICBmaWxlVHJlZTogZm9sZGVyVHJlZV8xLkZvbGRlclRyZWVGb2xkZXJTY2hlbWEsXG4gICAgbmFtZTogem9kXzEuei5zdHJpbmcoKSxcbiAgICBtaW1lVHlwZTogem9kXzEuei5udWxsKCksXG4gICAgb2F1dGhQcm92aWRlcjogem9kXzEuei5zdHJpbmcoKSxcbiAgICBvYXV0aFVzZXJJZDogem9kXzEuei5zdHJpbmcoKSxcbiAgICB1cGxvYWRPcHRpb25zOiB6b2RfMS56Lm51bGwoKSxcbn0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/uploads.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/networks.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/networks.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getNetworkUrl = exports.networks = void 0;\nconst auto_utils_1 = __webpack_require__(/*! @autonomys/auto-utils */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-utils@1.2.3_@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3__@polkadot+uti_2vgdl6huskojkbzlv6bvczmcpa/node_modules/@autonomys/auto-utils/dist/index.js\");\nexports.networks = {\n    [auto_utils_1.NetworkId.TAURUS]: 'https://demo.auto-drive.autonomys.xyz/api',\n    [auto_utils_1.NetworkId.MAINNET]: 'https://mainnet.auto-drive.autonomys.xyz/api',\n};\nconst getNetworkUrl = (networkId) => {\n    if (!exports.networks[networkId]) {\n        throw new Error(`Network ${networkId} not found`);\n    }\n    return exports.networks[networkId];\n};\nexports.getNetworkUrl = getNetworkUrl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9hcGkvbmV0d29ya3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsZ0JBQWdCO0FBQ3hDLHFCQUFxQixtQkFBTyxDQUFDLG1PQUF1QjtBQUNwRCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxXQUFXO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9hcGkvbmV0d29ya3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldE5ldHdvcmtVcmwgPSBleHBvcnRzLm5ldHdvcmtzID0gdm9pZCAwO1xuY29uc3QgYXV0b191dGlsc18xID0gcmVxdWlyZShcIkBhdXRvbm9teXMvYXV0by11dGlsc1wiKTtcbmV4cG9ydHMubmV0d29ya3MgPSB7XG4gICAgW2F1dG9fdXRpbHNfMS5OZXR3b3JrSWQuVEFVUlVTXTogJ2h0dHBzOi8vZGVtby5hdXRvLWRyaXZlLmF1dG9ub215cy54eXovYXBpJyxcbiAgICBbYXV0b191dGlsc18xLk5ldHdvcmtJZC5NQUlOTkVUXTogJ2h0dHBzOi8vbWFpbm5ldC5hdXRvLWRyaXZlLmF1dG9ub215cy54eXovYXBpJyxcbn07XG5jb25zdCBnZXROZXR3b3JrVXJsID0gKG5ldHdvcmtJZCkgPT4ge1xuICAgIGlmICghZXhwb3J0cy5uZXR3b3Jrc1tuZXR3b3JrSWRdKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTmV0d29yayAke25ldHdvcmtJZH0gbm90IGZvdW5kYCk7XG4gICAgfVxuICAgIHJldHVybiBleHBvcnRzLm5ldHdvcmtzW25ldHdvcmtJZF07XG59O1xuZXhwb3J0cy5nZXROZXR3b3JrVXJsID0gZ2V0TmV0d29ya1VybDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/networks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/wrappers.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/wrappers.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getSubscriptionInfo = exports.getPendingCredits = exports.downloadFile = exports.uploadFileWithinFolderUpload = exports.uploadFolderFromInput = exports.uploadObjectAsJSON = exports.uploadFile = exports.uploadFileFromInput = void 0;\nconst mime_types_1 = __importDefault(__webpack_require__(/*! mime-types */ \"(rsc)/./node_modules/.pnpm/mime-types@2.1.35/node_modules/mime-types/index.js\"));\nconst async_1 = __webpack_require__(/*! ../utils/async */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/async.js\");\nconst misc_1 = __webpack_require__(/*! ../utils/misc */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/misc.js\");\nconst index_1 = __webpack_require__(/*! ./calls/index */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/calls/index.js\");\nconst folderTree_1 = __webpack_require__(/*! ./models/folderTree */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/folderTree.js\");\nconst UPLOAD_FILE_CHUNK_SIZE = 1024 * 1024;\nconst uploadFileChunks = (api, fileUploadId, asyncIterable, uploadChunkSize = UPLOAD_FILE_CHUNK_SIZE, onProgress) => {\n    return new Promise((resolve, reject) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a, e_1, _b, _c;\n        try {\n            let index = 0;\n            let uploadBytes = 0;\n            try {\n                for (var _d = true, _e = __asyncValues((0, async_1.asyncByChunk)(asyncIterable, uploadChunkSize)), _f; _f = yield _e.next(), _a = _f.done, !_a; _d = true) {\n                    _c = _f.value;\n                    _d = false;\n                    const chunk = _c;\n                    yield index_1.apiCalls.uploadFileChunk(api, { uploadId: fileUploadId, chunk, index });\n                    uploadBytes += chunk.length;\n                    onProgress === null || onProgress === void 0 ? void 0 : onProgress(uploadBytes);\n                    index++;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            resolve();\n        }\n        catch (e) {\n            reject(e);\n        }\n    }));\n};\n/**\n * Uploads a file to the server with optional encryption and compression.\n *\n * This function reads a file from the provided input, optionally encrypts it\n * using the specified password, and compresses it using the specified algorithm if requested.\n * It uploads the file in chunks to the server, creating an upload session and\n * completing it once all chunks have been successfully uploaded.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {File} file - The file to be uploaded.\n * @param {UploadFileOptions} options - Options for the upload process.\n * @param {string} [options.password] - The password for encryption (optional).\n * @param {boolean} [options.compression=true] - Whether to compress the file (optional).\n * @param {number} [uploadChunkSize] - The size of each chunk to upload (optional).\n * @returns {PromisedObservable<UploadFileStatus>} - An observable that emits the upload status.\n * @throws {Error} - Throws an error if the upload fails at any stage.\n */\nconst uploadFileFromInput = (api, file, options = {}, uploadChunkSize) => {\n    const { password = undefined, compression = true } = options;\n    return new Promise((resolve, reject) => __awaiter(void 0, void 0, void 0, function* () {\n        const { compressFile, CompressionAlgorithm, encryptFile, EncryptionAlgorithm } = yield Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/asn1js@3.0.5\"), __webpack_require__.e(\"vendor-chunks/@peculiar+webcrypto@1.5.0\"), __webpack_require__.e(\"vendor-chunks/fflate@0.8.2\"), __webpack_require__.e(\"vendor-chunks/@webbuf+webbuf@3.0.26\"), __webpack_require__.e(\"vendor-chunks/webcrypto-core@1.8.1\"), __webpack_require__.e(\"vendor-chunks/multiformats@13.3.2\"), __webpack_require__.e(\"vendor-chunks/@autonomys+auto-dag-data@1.3.1\"), __webpack_require__.e(\"vendor-chunks/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26\"), __webpack_require__.e(\"vendor-chunks/protons-runtime@5.5.0\"), __webpack_require__.e(\"vendor-chunks/@peculiar+asn1-schema@2.3.15\"), __webpack_require__.e(\"vendor-chunks/@peculiar+json-schema@1.1.12\"), __webpack_require__.e(\"vendor-chunks/@ipld+dag-pb@4.1.3\"), __webpack_require__.e(\"vendor-chunks/pvtsutils@1.3.6\"), __webpack_require__.e(\"vendor-chunks/pvutils@1.1.3\"), __webpack_require__.e(\"vendor-chunks/uint8-varint@2.0.4\"), __webpack_require__.e(\"vendor-chunks/uint8arrays@5.1.0\"), __webpack_require__.e(\"vendor-chunks/@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26\")]).then(__webpack_require__.bind(__webpack_require__, /*! @autonomys/auto-dag-data */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js\"));\n        let asyncIterable = (0, async_1.fileToIterable)(file);\n        if (compression) {\n            asyncIterable = compressFile(asyncIterable, {\n                level: 9,\n                algorithm: CompressionAlgorithm.ZLIB,\n            });\n        }\n        if (password) {\n            asyncIterable = encryptFile(asyncIterable, password, {\n                algorithm: EncryptionAlgorithm.AES_256_GCM,\n            });\n        }\n        const uploadOptions = {\n            compression: compression\n                ? {\n                    level: 9,\n                    algorithm: CompressionAlgorithm.ZLIB,\n                }\n                : undefined,\n            encryption: password\n                ? {\n                    algorithm: EncryptionAlgorithm.AES_256_GCM,\n                }\n                : undefined,\n        };\n        const fileUpload = yield index_1.apiCalls.createFileUpload(api, {\n            mimeType: mime_types_1.default.lookup(file.name) || undefined,\n            filename: file.name,\n            uploadOptions,\n        });\n        yield uploadFileChunks(api, fileUpload.id, asyncIterable, uploadChunkSize, (bytes) => {\n            var _a;\n            (_a = options.onProgress) === null || _a === void 0 ? void 0 : _a.call(options, (0, misc_1.progressToPercentage)(bytes, file.size));\n        });\n        const result = yield index_1.apiCalls.completeUpload(api, { uploadId: fileUpload.id });\n        resolve(result.cid);\n    }));\n};\nexports.uploadFileFromInput = uploadFileFromInput;\n/**\n * Uploads a file to the server with optional encryption and compression.\n *\n * This function reads a file from the provided input, optionally encrypts it\n * using the specified password, and compresses it using the specified algorithm if requested.\n * It uploads the file in chunks to the server, creating an upload session and\n * completing it once all chunks have been successfully uploaded.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {File | GenericFile} file - The file to be uploaded, which can be a File or a GenericFile.\n * @param {UploadFileOptions} options - Options for the upload process.\n * @param {string} [options.password] - The password for encryption (optional).\n * @param {boolean} [options.compression=true] - Whether to compress the file (optional).\n * @param {number} [uploadChunkSize] - The size of each chunk to upload (optional).\n * @returns {Promise<string>} - The CID of the uploaded file.\n * @throws {Error} - Throws an error if the upload fails at any stage.\n */\nconst uploadFile = (api_1, file_1, ...args_1) => __awaiter(void 0, [api_1, file_1, ...args_1], void 0, function* (api, file, options = {}, uploadChunkSize) {\n    const { password = undefined, compression = true } = options;\n    const { compressFile, CompressionAlgorithm, encryptFile, EncryptionAlgorithm } = yield Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/asn1js@3.0.5\"), __webpack_require__.e(\"vendor-chunks/@peculiar+webcrypto@1.5.0\"), __webpack_require__.e(\"vendor-chunks/fflate@0.8.2\"), __webpack_require__.e(\"vendor-chunks/@webbuf+webbuf@3.0.26\"), __webpack_require__.e(\"vendor-chunks/webcrypto-core@1.8.1\"), __webpack_require__.e(\"vendor-chunks/multiformats@13.3.2\"), __webpack_require__.e(\"vendor-chunks/@autonomys+auto-dag-data@1.3.1\"), __webpack_require__.e(\"vendor-chunks/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26\"), __webpack_require__.e(\"vendor-chunks/protons-runtime@5.5.0\"), __webpack_require__.e(\"vendor-chunks/@peculiar+asn1-schema@2.3.15\"), __webpack_require__.e(\"vendor-chunks/@peculiar+json-schema@1.1.12\"), __webpack_require__.e(\"vendor-chunks/@ipld+dag-pb@4.1.3\"), __webpack_require__.e(\"vendor-chunks/pvtsutils@1.3.6\"), __webpack_require__.e(\"vendor-chunks/pvutils@1.1.3\"), __webpack_require__.e(\"vendor-chunks/uint8-varint@2.0.4\"), __webpack_require__.e(\"vendor-chunks/uint8arrays@5.1.0\"), __webpack_require__.e(\"vendor-chunks/@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26\")]).then(__webpack_require__.bind(__webpack_require__, /*! @autonomys/auto-dag-data */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js\"));\n    let asyncIterable = file.read();\n    if (compression) {\n        asyncIterable = compressFile(asyncIterable, {\n            level: 9,\n            algorithm: CompressionAlgorithm.ZLIB,\n        });\n    }\n    if (password) {\n        asyncIterable = encryptFile(asyncIterable, password, {\n            algorithm: EncryptionAlgorithm.AES_256_GCM,\n        });\n    }\n    const uploadOptions = {\n        compression: compression\n            ? {\n                level: 9,\n                algorithm: CompressionAlgorithm.ZLIB,\n            }\n            : undefined,\n        encryption: password\n            ? {\n                algorithm: EncryptionAlgorithm.AES_256_GCM,\n            }\n            : undefined,\n    };\n    const fileUpload = yield index_1.apiCalls.createFileUpload(api, {\n        mimeType: mime_types_1.default.lookup(file.name) || undefined,\n        filename: file.name,\n        uploadOptions,\n    });\n    yield uploadFileChunks(api, fileUpload.id, asyncIterable, uploadChunkSize, (bytes) => {\n        var _a;\n        (_a = options.onProgress) === null || _a === void 0 ? void 0 : _a.call(options, (0, misc_1.progressToPercentage)(bytes, file.size));\n    });\n    const result = yield index_1.apiCalls.completeUpload(api, { uploadId: fileUpload.id });\n    return result.cid;\n});\nexports.uploadFile = uploadFile;\n/**\n * Uploads an object as a JSON file to the server.\n *\n * This function serializes the provided object to a JSON string,\n * and then uploads the JSON string as a file to the server.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {File | GenericFile} file - The file to be uploaded, which can be a File or a GenericFile.\n * @param {UploadFileOptions} options - Options for the upload process.\n * @param {string} [options.password] - The password for encryption (optional).\n * @param {boolean} [options.compression=true] - Whether to compress the file (optional).\n * @param {number} [uploadChunkSize] - The size of each chunk to upload (optional).\n * @returns {Promise<string>} - The CID of the uploaded file.\n * @throws {Error} - Throws an error if the upload fails at any stage.\n */\nconst uploadObjectAsJSON = (api_1, object_1, name_1, ...args_1) => __awaiter(void 0, [api_1, object_1, name_1, ...args_1], void 0, function* (api, object, name, options = {}, uploadChunkSize) {\n    try {\n        const json = Buffer.from(JSON.stringify(object));\n        return (0, exports.uploadFile)(api, {\n            read: () => (0, async_1.bufferToIterable)(json),\n            name: name || 'object.json',\n            mimeType: 'application/json',\n            size: json.length,\n        }, options, uploadChunkSize);\n    }\n    catch (e) {\n        throw new Error('Failed to serialize object to JSON');\n    }\n});\nexports.uploadObjectAsJSON = uploadObjectAsJSON;\n/**\n * Uploads an entire folder to the server.\n *\n * This function retrieves all files within the specified folder,\n * constructs a file tree representation, and initiates the upload\n * process. It also handles optional compression of the files during\n * the upload. If a password is provided, the files will be zipped\n * before uploading.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {FileList | File[]} fileList - The list of files to be uploaded.\n * @param {Object} options - Options for the upload process.\n * @param {number} [options.uploadChunkSize] - The size of each chunk to upload (optional).\n * @param {string} [options.password] - The password for encryption (optional).\n * @returns {PromisedObservable<UploadFileStatus | UploadFolderStatus>} - An observable that emits the upload status.\n * @throws {Error} - Throws an error if the upload fails at any stage.\n */\nconst uploadFolderFromInput = (api_1, fileList_1, ...args_1) => __awaiter(void 0, [api_1, fileList_1, ...args_1], void 0, function* (api, fileList, { uploadChunkSize, password, onProgress, } = {}) {\n    const files = fileList instanceof FileList ? Array.from(fileList) : fileList;\n    const fileTree = (0, folderTree_1.constructFromInput)(files);\n    // If password is provided, we zip the files and upload the zip file\n    if (password) {\n        const filesMap = Object.fromEntries(files.map((file) => [file.webkitRelativePath, file]));\n        const zipBlob = yield (0, folderTree_1.constructZipBlobFromTreeAndPaths)(fileTree, filesMap);\n        const name = fileList[0].webkitRelativePath.split('/').filter(Boolean)[0];\n        return (0, exports.uploadFile)(api, {\n            read: () => (0, async_1.fileToIterable)(zipBlob),\n            name: `${name}.zip`,\n            mimeType: 'application/zip',\n            size: zipBlob.size,\n        }, {\n            password,\n            compression: true,\n            onProgress,\n        });\n    }\n    // Otherwise, we upload the files as a folder w/o compression or encryption\n    const folderUpload = yield index_1.apiCalls.createFolderUpload(api, {\n        fileTree,\n    });\n    let currentBytesUploaded = 0;\n    const totalSize = files.reduce((acc, file) => acc + file.size, 0);\n    for (const file of files) {\n        yield (0, exports.uploadFileWithinFolderUpload)(api, folderUpload.id, {\n            read: () => (0, async_1.fileToIterable)(file),\n            name: file.name,\n            mimeType: mime_types_1.default.lookup(file.name) || undefined,\n            size: file.size,\n            path: file.webkitRelativePath,\n        }, uploadChunkSize, {\n            onProgress: (progress) => {\n                onProgress === null || onProgress === void 0 ? void 0 : onProgress((0, misc_1.progressToPercentage)(currentBytesUploaded + progress, totalSize));\n            },\n        });\n        currentBytesUploaded += file.size;\n    }\n    const result = yield index_1.apiCalls.completeUpload(api, { uploadId: folderUpload.id });\n    return result.cid;\n});\nexports.uploadFolderFromInput = uploadFolderFromInput;\n/**\n * Uploads a file within an existing folder upload session.\n *\n * @param {AutoDriveApi} api - The API instance to interact with the AutoDrive service.\n * @param {string} uploadId - The ID of the folder upload session to which the file will be added.\n * @param {string} filepath - The path of the file to be uploaded.\n *\n * @returns {Promise<void>} A promise that resolves when the file upload is complete.\n */\nconst uploadFileWithinFolderUpload = (api_1, uploadId_1, file_1, uploadChunkSize_1, ...args_1) => __awaiter(void 0, [api_1, uploadId_1, file_1, uploadChunkSize_1, ...args_1], void 0, function* (api, uploadId, file, uploadChunkSize, options = {}) {\n    const fileUpload = yield index_1.apiCalls.createFileUploadWithinFolderUpload(api, {\n        uploadId,\n        name: file.name,\n        mimeType: file.mimeType,\n        relativeId: file.path,\n        uploadOptions: {},\n    });\n    yield uploadFileChunks(api, fileUpload.id, file.read(), uploadChunkSize, options.onProgress);\n    const result = yield index_1.apiCalls.completeUpload(api, { uploadId: fileUpload.id });\n    return result.cid;\n});\nexports.uploadFileWithinFolderUpload = uploadFileWithinFolderUpload;\n/**\n * Downloads a file from the AutoDrive service.\n *\n * @param {AutoDriveApi} api - The API instance to interact with the AutoDrive service.\n * @param {string} cid - The CID of the file to be downloaded.\n * @returns {Promise<ReadableStream<Uint8Array>>} A promise that resolves to a ReadableStream of the downloaded file.\n */\nconst downloadFile = (api, cid, password) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a, _b;\n    const { decompressFile, CompressionAlgorithm, EncryptionAlgorithm, decryptFile } = yield Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/asn1js@3.0.5\"), __webpack_require__.e(\"vendor-chunks/@peculiar+webcrypto@1.5.0\"), __webpack_require__.e(\"vendor-chunks/fflate@0.8.2\"), __webpack_require__.e(\"vendor-chunks/@webbuf+webbuf@3.0.26\"), __webpack_require__.e(\"vendor-chunks/webcrypto-core@1.8.1\"), __webpack_require__.e(\"vendor-chunks/multiformats@13.3.2\"), __webpack_require__.e(\"vendor-chunks/@autonomys+auto-dag-data@1.3.1\"), __webpack_require__.e(\"vendor-chunks/@webbuf+blake3@3.0.26_@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26__@webbuf+webbuf@3.0.26\"), __webpack_require__.e(\"vendor-chunks/protons-runtime@5.5.0\"), __webpack_require__.e(\"vendor-chunks/@peculiar+asn1-schema@2.3.15\"), __webpack_require__.e(\"vendor-chunks/@peculiar+json-schema@1.1.12\"), __webpack_require__.e(\"vendor-chunks/@ipld+dag-pb@4.1.3\"), __webpack_require__.e(\"vendor-chunks/pvtsutils@1.3.6\"), __webpack_require__.e(\"vendor-chunks/pvutils@1.1.3\"), __webpack_require__.e(\"vendor-chunks/uint8-varint@2.0.4\"), __webpack_require__.e(\"vendor-chunks/uint8arrays@5.1.0\"), __webpack_require__.e(\"vendor-chunks/@webbuf+fixedbuf@3.0.26_@webbuf+webbuf@3.0.26\")]).then(__webpack_require__.bind(__webpack_require__, /*! @autonomys/auto-dag-data */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-dag-data@1.3.1/node_modules/@autonomys/auto-dag-data/dist/index.js\"));\n    const metadata = yield index_1.apiCalls.getObjectMetadata(api, { cid });\n    let iterable = (0, async_1.asyncFromStream)(yield index_1.apiCalls.downloadObject(api, { cid }));\n    if ((_a = metadata.uploadOptions) === null || _a === void 0 ? void 0 : _a.encryption) {\n        if (!password) {\n            throw new Error('Password is required to decrypt the file');\n        }\n        iterable = decryptFile(iterable, password, {\n            algorithm: EncryptionAlgorithm.AES_256_GCM,\n        });\n    }\n    if ((_b = metadata.uploadOptions) === null || _b === void 0 ? void 0 : _b.compression) {\n        iterable = decompressFile(iterable, {\n            algorithm: CompressionAlgorithm.ZLIB,\n        });\n    }\n    return iterable;\n});\nexports.downloadFile = downloadFile;\nconst getPendingCredits = (api) => __awaiter(void 0, void 0, void 0, function* () {\n    const me = yield index_1.apiCalls.getMe(api);\n    return {\n        upload: me.subscription.pendingUploadCredits,\n        download: me.subscription.pendingDownloadCredits,\n    };\n});\nexports.getPendingCredits = getPendingCredits;\nconst getSubscriptionInfo = (api) => __awaiter(void 0, void 0, void 0, function* () {\n    const me = yield index_1.apiCalls.getMe(api);\n    return me.subscription;\n});\nexports.getSubscriptionInfo = getSubscriptionInfo;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/wrappers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/browser.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/browser.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./api/index */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils/index */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9icm93c2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyxnSUFBYTtBQUNsQyxhQUFhLG1CQUFPLENBQUMsb0lBQWUiLCJzb3VyY2VzIjpbIi9ob21lL2FidWJha3JqaW1vaC9EZXNrdG9wL0NvZGluZyBTdHVmZnMvaGFja2F0aG9uL3NlY3JldC1uZXR3b3JrL21lbWVBaV9jb2luX2NyZWF0b3IvYWktbWVtZS1jb2luLWNyZWF0b3Ivbm9kZV9tb2R1bGVzLy5wbnBtL0BhdXRvbm9teXMrYXV0by1kcml2ZUAxLjIuMy9ub2RlX21vZHVsZXMvQGF1dG9ub215cy9hdXRvLWRyaXZlL2Rpc3QvYnJvd3Nlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FwaS9pbmRleFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHMvaW5kZXhcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/browser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/index.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/index.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/utils.js\"), exports);\n__exportStar(__webpack_require__(/*! ./wrappers */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/wrappers.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9mcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsMkhBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLGlJQUFZIiwic291cmNlcyI6WyIvaG9tZS9hYnViYWtyamltb2gvRGVza3RvcC9Db2RpbmcgU3R1ZmZzL2hhY2thdGhvbi9zZWNyZXQtbmV0d29yay9tZW1lQWlfY29pbl9jcmVhdG9yL2FpLW1lbWUtY29pbi1jcmVhdG9yL25vZGVfbW9kdWxlcy8ucG5wbS9AYXV0b25vbXlzK2F1dG8tZHJpdmVAMS4yLjMvbm9kZV9tb2R1bGVzL0BhdXRvbm9teXMvYXV0by1kcml2ZS9kaXN0L2ZzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dyYXBwZXJzXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/utils.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/utils.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.constructZipFromTreeAndFileSystemPaths = exports.createWriteStreamAdapter = exports.getFiles = void 0;\nconst fs_1 = __webpack_require__(/*! fs */ \"fs\");\nconst promises_1 = __importDefault(__webpack_require__(/*! fs/promises */ \"fs/promises\"));\nconst jszip_1 = __importDefault(__webpack_require__(/*! jszip */ \"(rsc)/./node_modules/.pnpm/jszip@3.10.1/node_modules/jszip/lib/index.js\"));\nconst path_1 = __importDefault(__webpack_require__(/*! path */ \"path\"));\nconst getFiles = (folderPath) => __awaiter(void 0, void 0, void 0, function* () {\n    const stat = yield promises_1.default.stat(folderPath);\n    if (stat.isDirectory()) {\n        const files = yield promises_1.default.readdir(folderPath);\n        const promises = files.map((file) => (0, exports.getFiles)(path_1.default.join(folderPath, file)));\n        const allFiles = yield Promise.all(promises);\n        return allFiles.flat();\n    }\n    else {\n        return [folderPath];\n    }\n});\nexports.getFiles = getFiles;\nconst createWriteStreamAdapter = (nodeWriteStream) => {\n    return new WritableStream({\n        write(chunk) {\n            return new Promise((resolve, reject) => {\n                nodeWriteStream.write(chunk, (err) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            });\n        },\n        close() {\n            nodeWriteStream.end();\n        },\n        abort(err) {\n            nodeWriteStream.destroy(err);\n        },\n    });\n};\nexports.createWriteStreamAdapter = createWriteStreamAdapter;\nconst addFilesFromFilepathsToZip = (folder, folderNode, files) => {\n    folderNode.children.forEach((child) => {\n        if (child.type === 'file') {\n            const file = files[child.id];\n            if (typeof file === 'string') {\n                folder.file(child.name, (0, fs_1.createReadStream)(file));\n            }\n            else {\n                folder.file(child.name, file);\n            }\n        }\n        else if (child.type === 'folder') {\n            const subFolder = folder.folder(child.name);\n            if (!subFolder) {\n                throw new Error('Failed to create folder in zip');\n            }\n            addFilesFromFilepathsToZip(subFolder, child, files);\n        }\n    });\n};\nconst constructZipFromTreeAndFileSystemPaths = (tree, files) => __awaiter(void 0, void 0, void 0, function* () {\n    if (tree.type === 'file') {\n        throw new Error('Cannot construct zip from file');\n    }\n    const zip = new jszip_1.default();\n    addFilesFromFilepathsToZip(zip, tree, files);\n    return zip.generateAsync({ type: 'blob' });\n});\nexports.constructZipFromTreeAndFileSystemPaths = constructZipFromTreeAndFileSystemPaths;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9mcy91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4Q0FBOEMsR0FBRyxnQ0FBZ0MsR0FBRyxnQkFBZ0I7QUFDcEcsYUFBYSxtQkFBTyxDQUFDLGNBQUk7QUFDekIsbUNBQW1DLG1CQUFPLENBQUMsZ0NBQWE7QUFDeEQsZ0NBQWdDLG1CQUFPLENBQUMsc0ZBQU87QUFDL0MsK0JBQStCLG1CQUFPLENBQUMsa0JBQU07QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGNBQWM7QUFDN0MsQ0FBQztBQUNELDhDQUE4QyIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9mcy91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jb25zdHJ1Y3RaaXBGcm9tVHJlZUFuZEZpbGVTeXN0ZW1QYXRocyA9IGV4cG9ydHMuY3JlYXRlV3JpdGVTdHJlYW1BZGFwdGVyID0gZXhwb3J0cy5nZXRGaWxlcyA9IHZvaWQgMDtcbmNvbnN0IGZzXzEgPSByZXF1aXJlKFwiZnNcIik7XG5jb25zdCBwcm9taXNlc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJmcy9wcm9taXNlc1wiKSk7XG5jb25zdCBqc3ppcF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJqc3ppcFwiKSk7XG5jb25zdCBwYXRoXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInBhdGhcIikpO1xuY29uc3QgZ2V0RmlsZXMgPSAoZm9sZGVyUGF0aCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgY29uc3Qgc3RhdCA9IHlpZWxkIHByb21pc2VzXzEuZGVmYXVsdC5zdGF0KGZvbGRlclBhdGgpO1xuICAgIGlmIChzdGF0LmlzRGlyZWN0b3J5KCkpIHtcbiAgICAgICAgY29uc3QgZmlsZXMgPSB5aWVsZCBwcm9taXNlc18xLmRlZmF1bHQucmVhZGRpcihmb2xkZXJQYXRoKTtcbiAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBmaWxlcy5tYXAoKGZpbGUpID0+ICgwLCBleHBvcnRzLmdldEZpbGVzKShwYXRoXzEuZGVmYXVsdC5qb2luKGZvbGRlclBhdGgsIGZpbGUpKSk7XG4gICAgICAgIGNvbnN0IGFsbEZpbGVzID0geWllbGQgUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xuICAgICAgICByZXR1cm4gYWxsRmlsZXMuZmxhdCgpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFtmb2xkZXJQYXRoXTtcbiAgICB9XG59KTtcbmV4cG9ydHMuZ2V0RmlsZXMgPSBnZXRGaWxlcztcbmNvbnN0IGNyZWF0ZVdyaXRlU3RyZWFtQWRhcHRlciA9IChub2RlV3JpdGVTdHJlYW0pID0+IHtcbiAgICByZXR1cm4gbmV3IFdyaXRhYmxlU3RyZWFtKHtcbiAgICAgICAgd3JpdGUoY2h1bmspIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICAgICAgbm9kZVdyaXRlU3RyZWFtLndyaXRlKGNodW5rLCAoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgY2xvc2UoKSB7XG4gICAgICAgICAgICBub2RlV3JpdGVTdHJlYW0uZW5kKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGFib3J0KGVycikge1xuICAgICAgICAgICAgbm9kZVdyaXRlU3RyZWFtLmRlc3Ryb3koZXJyKTtcbiAgICAgICAgfSxcbiAgICB9KTtcbn07XG5leHBvcnRzLmNyZWF0ZVdyaXRlU3RyZWFtQWRhcHRlciA9IGNyZWF0ZVdyaXRlU3RyZWFtQWRhcHRlcjtcbmNvbnN0IGFkZEZpbGVzRnJvbUZpbGVwYXRoc1RvWmlwID0gKGZvbGRlciwgZm9sZGVyTm9kZSwgZmlsZXMpID0+IHtcbiAgICBmb2xkZXJOb2RlLmNoaWxkcmVuLmZvckVhY2goKGNoaWxkKSA9PiB7XG4gICAgICAgIGlmIChjaGlsZC50eXBlID09PSAnZmlsZScpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpbGUgPSBmaWxlc1tjaGlsZC5pZF07XG4gICAgICAgICAgICBpZiAodHlwZW9mIGZpbGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgZm9sZGVyLmZpbGUoY2hpbGQubmFtZSwgKDAsIGZzXzEuY3JlYXRlUmVhZFN0cmVhbSkoZmlsZSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZm9sZGVyLmZpbGUoY2hpbGQubmFtZSwgZmlsZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY2hpbGQudHlwZSA9PT0gJ2ZvbGRlcicpIHtcbiAgICAgICAgICAgIGNvbnN0IHN1YkZvbGRlciA9IGZvbGRlci5mb2xkZXIoY2hpbGQubmFtZSk7XG4gICAgICAgICAgICBpZiAoIXN1YkZvbGRlcikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBmb2xkZXIgaW4gemlwJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhZGRGaWxlc0Zyb21GaWxlcGF0aHNUb1ppcChzdWJGb2xkZXIsIGNoaWxkLCBmaWxlcyk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5jb25zdCBjb25zdHJ1Y3RaaXBGcm9tVHJlZUFuZEZpbGVTeXN0ZW1QYXRocyA9ICh0cmVlLCBmaWxlcykgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgaWYgKHRyZWUudHlwZSA9PT0gJ2ZpbGUnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNvbnN0cnVjdCB6aXAgZnJvbSBmaWxlJyk7XG4gICAgfVxuICAgIGNvbnN0IHppcCA9IG5ldyBqc3ppcF8xLmRlZmF1bHQoKTtcbiAgICBhZGRGaWxlc0Zyb21GaWxlcGF0aHNUb1ppcCh6aXAsIHRyZWUsIGZpbGVzKTtcbiAgICByZXR1cm4gemlwLmdlbmVyYXRlQXN5bmMoeyB0eXBlOiAnYmxvYicgfSk7XG59KTtcbmV4cG9ydHMuY29uc3RydWN0WmlwRnJvbVRyZWVBbmRGaWxlU3lzdGVtUGF0aHMgPSBjb25zdHJ1Y3RaaXBGcm9tVHJlZUFuZEZpbGVTeXN0ZW1QYXRocztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/wrappers.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/wrappers.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.uploadFolderFromFolderPath = exports.uploadFileFromFilepath = void 0;\nconst fs_1 = __importDefault(__webpack_require__(/*! fs */ \"fs\"));\nconst mime_types_1 = __importDefault(__webpack_require__(/*! mime-types */ \"(rsc)/./node_modules/.pnpm/mime-types@2.1.35/node_modules/mime-types/index.js\"));\nconst index_js_1 = __webpack_require__(/*! ../api/index.js */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/index.js\");\nconst folderTree_js_1 = __webpack_require__(/*! ../api/models/folderTree.js */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/folderTree.js\");\nconst uploads_js_1 = __webpack_require__(/*! ../api/models/uploads.js */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/models/uploads.js\");\nconst wrappers_js_1 = __webpack_require__(/*! ../api/wrappers.js */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/api/wrappers.js\");\nconst index_js_2 = __webpack_require__(/*! ../utils/index.js */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/index.js\");\nconst misc_js_1 = __webpack_require__(/*! ../utils/misc.js */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/misc.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/utils.js\");\n/**\n * Uploads a file to the server with optional encryption and compression.\n *\n * This function reads a file from the specified file path, optionally encrypts it\n * using the provided password, and compresses it using the specified algorithm if requested.\n * It then uploads the file in chunks to the server, creating an upload session and\n * completing it once all chunks have been successfully uploaded.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {string} filePath - The path to the file to be uploaded.\n * @param {UploadFileOptions} options - Options for the upload process.\n * @param {string} [options.password] - The password for encryption (optional).\n * @param {boolean} [options.compression=true] - Whether to compress the file (optional).\n * @param {number} [uploadChunkSize] - The size of each chunk to upload (optional).\n * @returns {PromisedObservable<UploadFileStatus>} - An observable that emits the upload status.\n * @throws {Error} - Throws an error if the upload fails at any stage.\n */\nconst uploadFileFromFilepath = (api, filePath, options = {}, uploadChunkSize) => {\n    const { password = undefined, compression = true, onProgress } = options;\n    const name = filePath.split('/').pop();\n    return (0, wrappers_js_1.uploadFile)(api, {\n        read: () => fs_1.default.createReadStream(filePath),\n        name,\n        mimeType: mime_types_1.default.lookup(name) || undefined,\n        size: fs_1.default.statSync(filePath).size,\n    }, {\n        password,\n        compression,\n        onProgress,\n    }, uploadChunkSize);\n};\nexports.uploadFileFromFilepath = uploadFileFromFilepath;\n/**\n * Uploads an entire folder to the server.\n *\n * This function retrieves all files within the specified folder,\n * constructs a file tree representation, and initiates the upload\n * process. It also handles optional compression and encryption of the files during\n * the upload.\n *\n * If a password is provided, the files will be zipped before uploading.\n *\n * @param {AutoDriveApi} api - The API instance used to send requests.\n * @param {string} folderPath - The path of the folder to be uploaded.\n * @param {Object} options - Optional parameters for the upload.\n * @param {number} [options.uploadChunkSize] - The size of each chunk to be uploaded.\n * @param {string} [options.password] - An optional password for encrypting the files.\n * @returns {Promise<PromisedObservable<UploadFileStatus | UploadFolderStatus>>} - A promise that resolves to an observable that tracks the upload progress.\n * @throws {Error} - Throws an error if the upload fails at any stage.\n */\nconst uploadFolderFromFolderPath = (api_1, folderPath_1, ...args_1) => __awaiter(void 0, [api_1, folderPath_1, ...args_1], void 0, function* (api, folderPath, { uploadChunkSize, password, onProgress, } = {}) {\n    const files = yield (0, utils_js_1.getFiles)(folderPath);\n    const fileTree = (0, folderTree_js_1.constructFromFileSystemEntries)(files);\n    if (password) {\n        const filesMap = Object.fromEntries(files.map((file) => [file, file]));\n        const zipBlob = yield (0, utils_js_1.constructZipFromTreeAndFileSystemPaths)(fileTree, filesMap);\n        const name = folderPath.split('/').pop();\n        return (0, wrappers_js_1.uploadFile)(api, {\n            read: () => (0, index_js_2.fileToIterable)(zipBlob),\n            name: `${name}.zip`,\n            mimeType: 'application/zip',\n            size: zipBlob.size,\n        }, {\n            password,\n            compression: true,\n            onProgress: (progressInPercentage) => {\n                onProgress === null || onProgress === void 0 ? void 0 : onProgress((0, misc_js_1.progressToPercentage)(progressInPercentage, zipBlob.size));\n            },\n        });\n    }\n    const folderUpload = yield index_js_1.apiCalls.createFolderUpload(api, {\n        fileTree,\n        uploadOptions: {\n            compression: {\n                algorithm: uploads_js_1.CompressionAlgorithm.ZLIB,\n                level: 9,\n            },\n        },\n    });\n    const genericFiles = files.map((file) => ({\n        read: () => fs_1.default.createReadStream(file),\n        name: file.split('/').pop(),\n        mimeType: mime_types_1.default.lookup(file.split('/').pop()) || undefined,\n        size: fs_1.default.statSync(file).size,\n        path: file,\n    }));\n    const totalSize = genericFiles.reduce((acc, file) => acc + file.size, 0);\n    let progress = 0;\n    for (const file of genericFiles) {\n        yield (0, wrappers_js_1.uploadFileWithinFolderUpload)(api, folderUpload.id, file, uploadChunkSize, {\n            onProgress: (uploadedBytes) => {\n                onProgress === null || onProgress === void 0 ? void 0 : onProgress((0, misc_js_1.progressToPercentage)(progress + uploadedBytes, totalSize));\n            },\n        });\n        progress += file.size;\n    }\n    const result = yield index_js_1.apiCalls.completeUpload(api, { uploadId: folderUpload.id });\n    return result.cid;\n});\nexports.uploadFolderFromFolderPath = uploadFolderFromFolderPath;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/wrappers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/node.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/node.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./browser.js */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/browser.js\"), exports);\n__exportStar(__webpack_require__(/*! ./fs/index.js */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/fs/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC9ub2RlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQywrSEFBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsaUlBQWUiLCJzb3VyY2VzIjpbIi9ob21lL2FidWJha3JqaW1vaC9EZXNrdG9wL0NvZGluZyBTdHVmZnMvaGFja2F0aG9uL3NlY3JldC1uZXR3b3JrL21lbWVBaV9jb2luX2NyZWF0b3IvYWktbWVtZS1jb2luLWNyZWF0b3Ivbm9kZV9tb2R1bGVzLy5wbnBtL0BhdXRvbm9teXMrYXV0by1kcml2ZUAxLjIuMy9ub2RlX21vZHVsZXMvQGF1dG9ub215cy9hdXRvLWRyaXZlL2Rpc3Qvbm9kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Jyb3dzZXIuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2ZzL2luZGV4LmpzXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/async.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/async.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bufferToIterable = exports.fileToIterable = exports.asyncFromStream = exports.asyncByChunk = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst asyncByChunk = function (asyncIterable, chunkSize) {\n    return __asyncGenerator(this, arguments, function* () {\n        var _a, e_1, _b, _c;\n        let buffer = buffer_1.Buffer.alloc(0);\n        try {\n            for (var _d = true, asyncIterable_1 = __asyncValues(asyncIterable), asyncIterable_1_1; asyncIterable_1_1 = yield __await(asyncIterable_1.next()), _a = asyncIterable_1_1.done, !_a; _d = true) {\n                _c = asyncIterable_1_1.value;\n                _d = false;\n                const chunk = _c;\n                buffer = buffer_1.Buffer.concat([buffer, chunk]);\n                while (buffer.length >= chunkSize) {\n                    yield yield __await(buffer.subarray(0, chunkSize));\n                    buffer = buffer.subarray(chunkSize);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = asyncIterable_1.return)) yield __await(_b.call(asyncIterable_1));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (buffer.length > 0) {\n            yield yield __await(buffer);\n        }\n    });\n};\nexports.asyncByChunk = asyncByChunk;\nconst asyncFromStream = function (stream) {\n    return __asyncGenerator(this, arguments, function* () {\n        const reader = stream.getReader();\n        let result = yield __await(reader.read());\n        while (!result.done) {\n            yield yield __await(buffer_1.Buffer.from(result.value));\n            result = yield __await(reader.read());\n        }\n    });\n};\nexports.asyncFromStream = asyncFromStream;\nconst fileToIterable = function (file) {\n    return __asyncGenerator(this, arguments, function* () {\n        const chunkSize = 1024 * 1024;\n        for (let i = 0; i < file.size; i += chunkSize) {\n            yield yield __await(buffer_1.Buffer.from(yield __await(file.slice(i, i + chunkSize).arrayBuffer())));\n        }\n    });\n};\nexports.fileToIterable = fileToIterable;\nconst bufferToIterable = function (buffer) {\n    return __asyncGenerator(this, arguments, function* () {\n        yield yield __await(buffer);\n    });\n};\nexports.bufferToIterable = bufferToIterable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC91dGlscy9hc3luYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDJHQUEyRyx1RkFBdUYsY0FBYztBQUNoTix1QkFBdUIsOEJBQThCLGdEQUFnRCx3REFBd0Q7QUFDN0osNkNBQTZDLHNDQUFzQyxVQUFVLG1CQUFtQixJQUFJO0FBQ3BIO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLDBNQUEwTSxjQUFjO0FBQ3hOLDhCQUE4QixzQkFBc0I7QUFDcEQsMEJBQTBCLFlBQVksc0JBQXNCLHFDQUFxQywyQ0FBMkMsTUFBTTtBQUNsSiw0QkFBNEIsTUFBTSxpQkFBaUIsWUFBWTtBQUMvRCx1QkFBdUI7QUFDdkIsOEJBQThCO0FBQzlCLDZCQUE2QjtBQUM3Qiw0QkFBNEI7QUFDNUI7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsc0JBQXNCLEdBQUcsdUJBQXVCLEdBQUcsb0JBQW9CO0FBQ2xHLGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtR0FBbUcsNkZBQTZGO0FBQ2hNO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZUFBZTtBQUN2QztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHdCQUF3QiIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC91dGlscy9hc3luYy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2FzeW5jVmFsdWVzID0gKHRoaXMgJiYgdGhpcy5fX2FzeW5jVmFsdWVzKSB8fCBmdW5jdGlvbiAobykge1xuICAgIGlmICghU3ltYm9sLmFzeW5jSXRlcmF0b3IpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTeW1ib2wuYXN5bmNJdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XG4gICAgdmFyIG0gPSBvW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSwgaTtcbiAgICByZXR1cm4gbSA/IG0uY2FsbChvKSA6IChvID0gdHlwZW9mIF9fdmFsdWVzID09PSBcImZ1bmN0aW9uXCIgPyBfX3ZhbHVlcyhvKSA6IG9bU3ltYm9sLml0ZXJhdG9yXSgpLCBpID0ge30sIHZlcmIoXCJuZXh0XCIpLCB2ZXJiKFwidGhyb3dcIiksIHZlcmIoXCJyZXR1cm5cIiksIGlbU3ltYm9sLmFzeW5jSXRlcmF0b3JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSwgaSk7XG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IGlbbl0gPSBvW25dICYmIGZ1bmN0aW9uICh2KSB7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7IHYgPSBvW25dKHYpLCBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCB2LmRvbmUsIHYudmFsdWUpOyB9KTsgfTsgfVxuICAgIGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIGQsIHYpIHsgUHJvbWlzZS5yZXNvbHZlKHYpLnRoZW4oZnVuY3Rpb24odikgeyByZXNvbHZlKHsgdmFsdWU6IHYsIGRvbmU6IGQgfSk7IH0sIHJlamVjdCk7IH1cbn07XG52YXIgX19hd2FpdCA9ICh0aGlzICYmIHRoaXMuX19hd2FpdCkgfHwgZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBfX2F3YWl0ID8gKHRoaXMudiA9IHYsIHRoaXMpIDogbmV3IF9fYXdhaXQodik7IH1cbnZhciBfX2FzeW5jR2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2FzeW5jR2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgZ2VuZXJhdG9yKSB7XG4gICAgaWYgKCFTeW1ib2wuYXN5bmNJdGVyYXRvcikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN5bWJvbC5hc3luY0l0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTtcbiAgICB2YXIgZyA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSwgaSwgcSA9IFtdO1xuICAgIHJldHVybiBpID0gT2JqZWN0LmNyZWF0ZSgodHlwZW9mIEFzeW5jSXRlcmF0b3IgPT09IFwiZnVuY3Rpb25cIiA/IEFzeW5jSXRlcmF0b3IgOiBPYmplY3QpLnByb3RvdHlwZSksIHZlcmIoXCJuZXh0XCIpLCB2ZXJiKFwidGhyb3dcIiksIHZlcmIoXCJyZXR1cm5cIiwgYXdhaXRSZXR1cm4pLCBpW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0sIGk7XG4gICAgZnVuY3Rpb24gYXdhaXRSZXR1cm4oZikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh2KS50aGVuKGYsIHJlamVjdCk7IH07IH1cbiAgICBmdW5jdGlvbiB2ZXJiKG4sIGYpIHsgaWYgKGdbbl0pIHsgaVtuXSA9IGZ1bmN0aW9uICh2KSB7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAoYSwgYikgeyBxLnB1c2goW24sIHYsIGEsIGJdKSA+IDEgfHwgcmVzdW1lKG4sIHYpOyB9KTsgfTsgaWYgKGYpIGlbbl0gPSBmKGlbbl0pOyB9IH1cbiAgICBmdW5jdGlvbiByZXN1bWUobiwgdikgeyB0cnkgeyBzdGVwKGdbbl0odikpOyB9IGNhdGNoIChlKSB7IHNldHRsZShxWzBdWzNdLCBlKTsgfSB9XG4gICAgZnVuY3Rpb24gc3RlcChyKSB7IHIudmFsdWUgaW5zdGFuY2VvZiBfX2F3YWl0ID8gUHJvbWlzZS5yZXNvbHZlKHIudmFsdWUudikudGhlbihmdWxmaWxsLCByZWplY3QpIDogc2V0dGxlKHFbMF1bMl0sIHIpOyB9XG4gICAgZnVuY3Rpb24gZnVsZmlsbCh2YWx1ZSkgeyByZXN1bWUoXCJuZXh0XCIsIHZhbHVlKTsgfVxuICAgIGZ1bmN0aW9uIHJlamVjdCh2YWx1ZSkgeyByZXN1bWUoXCJ0aHJvd1wiLCB2YWx1ZSk7IH1cbiAgICBmdW5jdGlvbiBzZXR0bGUoZiwgdikgeyBpZiAoZih2KSwgcS5zaGlmdCgpLCBxLmxlbmd0aCkgcmVzdW1lKHFbMF1bMF0sIHFbMF1bMV0pOyB9XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5idWZmZXJUb0l0ZXJhYmxlID0gZXhwb3J0cy5maWxlVG9JdGVyYWJsZSA9IGV4cG9ydHMuYXN5bmNGcm9tU3RyZWFtID0gZXhwb3J0cy5hc3luY0J5Q2h1bmsgPSB2b2lkIDA7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXJcIik7XG5jb25zdCBhc3luY0J5Q2h1bmsgPSBmdW5jdGlvbiAoYXN5bmNJdGVyYWJsZSwgY2h1bmtTaXplKSB7XG4gICAgcmV0dXJuIF9fYXN5bmNHZW5lcmF0b3IodGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB2YXIgX2EsIGVfMSwgX2IsIF9jO1xuICAgICAgICBsZXQgYnVmZmVyID0gYnVmZmVyXzEuQnVmZmVyLmFsbG9jKDApO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2QgPSB0cnVlLCBhc3luY0l0ZXJhYmxlXzEgPSBfX2FzeW5jVmFsdWVzKGFzeW5jSXRlcmFibGUpLCBhc3luY0l0ZXJhYmxlXzFfMTsgYXN5bmNJdGVyYWJsZV8xXzEgPSB5aWVsZCBfX2F3YWl0KGFzeW5jSXRlcmFibGVfMS5uZXh0KCkpLCBfYSA9IGFzeW5jSXRlcmFibGVfMV8xLmRvbmUsICFfYTsgX2QgPSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgX2MgPSBhc3luY0l0ZXJhYmxlXzFfMS52YWx1ZTtcbiAgICAgICAgICAgICAgICBfZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNodW5rID0gX2M7XG4gICAgICAgICAgICAgICAgYnVmZmVyID0gYnVmZmVyXzEuQnVmZmVyLmNvbmNhdChbYnVmZmVyLCBjaHVua10pO1xuICAgICAgICAgICAgICAgIHdoaWxlIChidWZmZXIubGVuZ3RoID49IGNodW5rU2l6ZSkge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCB5aWVsZCBfX2F3YWl0KGJ1ZmZlci5zdWJhcnJheSgwLCBjaHVua1NpemUpKTtcbiAgICAgICAgICAgICAgICAgICAgYnVmZmVyID0gYnVmZmVyLnN1YmFycmF5KGNodW5rU2l6ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoIV9kICYmICFfYSAmJiAoX2IgPSBhc3luY0l0ZXJhYmxlXzEucmV0dXJuKSkgeWllbGQgX19hd2FpdChfYi5jYWxsKGFzeW5jSXRlcmFibGVfMSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChidWZmZXIubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgeWllbGQgeWllbGQgX19hd2FpdChidWZmZXIpO1xuICAgICAgICB9XG4gICAgfSk7XG59O1xuZXhwb3J0cy5hc3luY0J5Q2h1bmsgPSBhc3luY0J5Q2h1bms7XG5jb25zdCBhc3luY0Zyb21TdHJlYW0gPSBmdW5jdGlvbiAoc3RyZWFtKSB7XG4gICAgcmV0dXJuIF9fYXN5bmNHZW5lcmF0b3IodGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCByZWFkZXIgPSBzdHJlYW0uZ2V0UmVhZGVyKCk7XG4gICAgICAgIGxldCByZXN1bHQgPSB5aWVsZCBfX2F3YWl0KHJlYWRlci5yZWFkKCkpO1xuICAgICAgICB3aGlsZSAoIXJlc3VsdC5kb25lKSB7XG4gICAgICAgICAgICB5aWVsZCB5aWVsZCBfX2F3YWl0KGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKHJlc3VsdC52YWx1ZSkpO1xuICAgICAgICAgICAgcmVzdWx0ID0geWllbGQgX19hd2FpdChyZWFkZXIucmVhZCgpKTtcbiAgICAgICAgfVxuICAgIH0pO1xufTtcbmV4cG9ydHMuYXN5bmNGcm9tU3RyZWFtID0gYXN5bmNGcm9tU3RyZWFtO1xuY29uc3QgZmlsZVRvSXRlcmFibGUgPSBmdW5jdGlvbiAoZmlsZSkge1xuICAgIHJldHVybiBfX2FzeW5jR2VuZXJhdG9yKHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgY2h1bmtTaXplID0gMTAyNCAqIDEwMjQ7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmlsZS5zaXplOyBpICs9IGNodW5rU2l6ZSkge1xuICAgICAgICAgICAgeWllbGQgeWllbGQgX19hd2FpdChidWZmZXJfMS5CdWZmZXIuZnJvbSh5aWVsZCBfX2F3YWl0KGZpbGUuc2xpY2UoaSwgaSArIGNodW5rU2l6ZSkuYXJyYXlCdWZmZXIoKSkpKTtcbiAgICAgICAgfVxuICAgIH0pO1xufTtcbmV4cG9ydHMuZmlsZVRvSXRlcmFibGUgPSBmaWxlVG9JdGVyYWJsZTtcbmNvbnN0IGJ1ZmZlclRvSXRlcmFibGUgPSBmdW5jdGlvbiAoYnVmZmVyKSB7XG4gICAgcmV0dXJuIF9fYXN5bmNHZW5lcmF0b3IodGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB5aWVsZCB5aWVsZCBfX2F3YWl0KGJ1ZmZlcik7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5idWZmZXJUb0l0ZXJhYmxlID0gYnVmZmVyVG9JdGVyYWJsZTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/async.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/index.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/index.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./async */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/async.js\"), exports);\n__exportStar(__webpack_require__(/*! ./misc */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/misc.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/types.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC91dGlscy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsOEhBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLDRIQUFRO0FBQzdCLGFBQWEsbUJBQU8sQ0FBQyw4SEFBUyIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC91dGlscy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FzeW5jXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9taXNjXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/misc.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/misc.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.progressToPercentage = void 0;\nconst progressToPercentage = (current, target) => (current / target) * 100;\nexports.progressToPercentage = progressToPercentage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC91dGlscy9taXNjLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QjtBQUNBLDRCQUE0QiIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC91dGlscy9taXNjLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wcm9ncmVzc1RvUGVyY2VudGFnZSA9IHZvaWQgMDtcbmNvbnN0IHByb2dyZXNzVG9QZXJjZW50YWdlID0gKGN1cnJlbnQsIHRhcmdldCkgPT4gKGN1cnJlbnQgLyB0YXJnZXQpICogMTAwO1xuZXhwb3J0cy5wcm9ncmVzc1RvUGVyY2VudGFnZSA9IHByb2dyZXNzVG9QZXJjZW50YWdlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/misc.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/types.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/types.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC91dGlscy90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQyIsInNvdXJjZXMiOlsiL2hvbWUvYWJ1YmFrcmppbW9oL0Rlc2t0b3AvQ29kaW5nIFN0dWZmcy9oYWNrYXRob24vc2VjcmV0LW5ldHdvcmsvbWVtZUFpX2NvaW5fY3JlYXRvci9haS1tZW1lLWNvaW4tY3JlYXRvci9ub2RlX21vZHVsZXMvLnBucG0vQGF1dG9ub215cythdXRvLWRyaXZlQDEuMi4zL25vZGVfbW9kdWxlcy9AYXV0b25vbXlzL2F1dG8tZHJpdmUvZGlzdC91dGlscy90eXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@autonomys+auto-drive@1.2.3/node_modules/@autonomys/auto-drive/dist/utils/types.js\n");

/***/ })

};
;